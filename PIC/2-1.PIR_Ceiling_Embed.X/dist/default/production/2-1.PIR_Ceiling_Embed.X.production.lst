

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Dec 01 11:24:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0096                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009F                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0186                     	;# 
   141  018C                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0096                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009F                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0186                     	;# 
   210  018C                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0096                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009F                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0186                     	;# 
   279  018C                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000D                     	;# 
   293  000E                     	;# 
   294  000E                     	;# 
   295  000F                     	;# 
   296  0010                     	;# 
   297  0011                     	;# 
   298  0012                     	;# 
   299  0013                     	;# 
   300  0014                     	;# 
   301  0015                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  001D                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  0081                     	;# 
   315  0085                     	;# 
   316  0086                     	;# 
   317  0087                     	;# 
   318  0089                     	;# 
   319  008C                     	;# 
   320  008D                     	;# 
   321  008E                     	;# 
   322  008F                     	;# 
   323  0090                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0095                     	;# 
   330  0095                     	;# 
   331  0096                     	;# 
   332  0096                     	;# 
   333  0098                     	;# 
   334  0099                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009F                     	;# 
   338  0108                     	;# 
   339  0109                     	;# 
   340  010C                     	;# 
   341  010C                     	;# 
   342  010D                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  010F                     	;# 
   346  0185                     	;# 
   347  0186                     	;# 
   348  018C                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0009                     	;# 
   358  000A                     	;# 
   359  000B                     	;# 
   360  000C                     	;# 
   361  000D                     	;# 
   362  000E                     	;# 
   363  000E                     	;# 
   364  000F                     	;# 
   365  0010                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0014                     	;# 
   370  0015                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  001D                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  0081                     	;# 
   384  0085                     	;# 
   385  0086                     	;# 
   386  0087                     	;# 
   387  0089                     	;# 
   388  008C                     	;# 
   389  008D                     	;# 
   390  008E                     	;# 
   391  008F                     	;# 
   392  0090                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0093                     	;# 
   396  0093                     	;# 
   397  0094                     	;# 
   398  0095                     	;# 
   399  0095                     	;# 
   400  0096                     	;# 
   401  0096                     	;# 
   402  0098                     	;# 
   403  0099                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009F                     	;# 
   407  0108                     	;# 
   408  0109                     	;# 
   409  010C                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  0185                     	;# 
   416  0186                     	;# 
   417  018C                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0089                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  008F                     	;# 
   461  0090                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0095                     	;# 
   468  0095                     	;# 
   469  0096                     	;# 
   470  0096                     	;# 
   471  0098                     	;# 
   472  0099                     	;# 
   473  009C                     	;# 
   474  009D                     	;# 
   475  009F                     	;# 
   476  0108                     	;# 
   477  0109                     	;# 
   478  010C                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0185                     	;# 
   485  0186                     	;# 
   486  018C                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  000E                     	;# 
   502  000F                     	;# 
   503  0010                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0014                     	;# 
   508  0015                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0017                     	;# 
   512  0018                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  001D                     	;# 
   519  001E                     	;# 
   520  001F                     	;# 
   521  0081                     	;# 
   522  0085                     	;# 
   523  0086                     	;# 
   524  0087                     	;# 
   525  0089                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  008F                     	;# 
   530  0090                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0093                     	;# 
   535  0094                     	;# 
   536  0095                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0096                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009F                     	;# 
   545  0108                     	;# 
   546  0109                     	;# 
   547  010C                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010D                     	;# 
   551  010E                     	;# 
   552  010F                     	;# 
   553  0185                     	;# 
   554  0186                     	;# 
   555  018C                     	;# 
   556  0000                     	;# 
   557  0001                     	;# 
   558  0002                     	;# 
   559  0003                     	;# 
   560  0004                     	;# 
   561  0005                     	;# 
   562  0006                     	;# 
   563  0007                     	;# 
   564  0009                     	;# 
   565  000A                     	;# 
   566  000B                     	;# 
   567  000C                     	;# 
   568  000D                     	;# 
   569  000E                     	;# 
   570  000E                     	;# 
   571  000F                     	;# 
   572  0010                     	;# 
   573  0011                     	;# 
   574  0012                     	;# 
   575  0013                     	;# 
   576  0014                     	;# 
   577  0015                     	;# 
   578  0015                     	;# 
   579  0016                     	;# 
   580  0017                     	;# 
   581  0018                     	;# 
   582  0019                     	;# 
   583  001A                     	;# 
   584  001B                     	;# 
   585  001B                     	;# 
   586  001C                     	;# 
   587  001D                     	;# 
   588  001E                     	;# 
   589  001F                     	;# 
   590  0081                     	;# 
   591  0085                     	;# 
   592  0086                     	;# 
   593  0087                     	;# 
   594  0089                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  008F                     	;# 
   599  0090                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0096                     	;# 
   609  0098                     	;# 
   610  0099                     	;# 
   611  009C                     	;# 
   612  009D                     	;# 
   613  009F                     	;# 
   614  0108                     	;# 
   615  0109                     	;# 
   616  010C                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  010F                     	;# 
   622  0185                     	;# 
   623  0186                     	;# 
   624  018C                     	;# 
   625  0000                     	;# 
   626  0001                     	;# 
   627  0002                     	;# 
   628  0003                     	;# 
   629  0004                     	;# 
   630  0005                     	;# 
   631  0006                     	;# 
   632  0007                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  000E                     	;# 
   640  000F                     	;# 
   641  0010                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0014                     	;# 
   646  0015                     	;# 
   647  0015                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  0019                     	;# 
   652  001A                     	;# 
   653  001B                     	;# 
   654  001B                     	;# 
   655  001C                     	;# 
   656  001D                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  0081                     	;# 
   660  0085                     	;# 
   661  0086                     	;# 
   662  0087                     	;# 
   663  0089                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  008E                     	;# 
   667  008F                     	;# 
   668  0090                     	;# 
   669  0091                     	;# 
   670  0092                     	;# 
   671  0093                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0096                     	;# 
   678  0098                     	;# 
   679  0099                     	;# 
   680  009C                     	;# 
   681  009D                     	;# 
   682  009F                     	;# 
   683  0108                     	;# 
   684  0109                     	;# 
   685  010C                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010D                     	;# 
   689  010E                     	;# 
   690  010F                     	;# 
   691  0185                     	;# 
   692  0186                     	;# 
   693  018C                     	;# 
   694  0000                     	;# 
   695  0001                     	;# 
   696  0002                     	;# 
   697  0003                     	;# 
   698  0004                     	;# 
   699  0005                     	;# 
   700  0006                     	;# 
   701  0007                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000D                     	;# 
   707  000E                     	;# 
   708  000E                     	;# 
   709  000F                     	;# 
   710  0010                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0014                     	;# 
   715  0015                     	;# 
   716  0015                     	;# 
   717  0016                     	;# 
   718  0017                     	;# 
   719  0018                     	;# 
   720  0019                     	;# 
   721  001A                     	;# 
   722  001B                     	;# 
   723  001B                     	;# 
   724  001C                     	;# 
   725  001D                     	;# 
   726  001E                     	;# 
   727  001F                     	;# 
   728  0081                     	;# 
   729  0085                     	;# 
   730  0086                     	;# 
   731  0087                     	;# 
   732  0089                     	;# 
   733  008C                     	;# 
   734  008D                     	;# 
   735  008E                     	;# 
   736  008F                     	;# 
   737  0090                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0093                     	;# 
   742  0094                     	;# 
   743  0095                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0096                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009F                     	;# 
   752  0108                     	;# 
   753  0109                     	;# 
   754  010C                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010D                     	;# 
   758  010E                     	;# 
   759  010F                     	;# 
   760  0185                     	;# 
   761  0186                     	;# 
   762  018C                     	;# 
   763  0000                     	;# 
   764  0001                     	;# 
   765  0002                     	;# 
   766  0003                     	;# 
   767  0004                     	;# 
   768  0005                     	;# 
   769  0006                     	;# 
   770  0007                     	;# 
   771  0009                     	;# 
   772  000A                     	;# 
   773  000B                     	;# 
   774  000C                     	;# 
   775  000D                     	;# 
   776  000E                     	;# 
   777  000E                     	;# 
   778  000F                     	;# 
   779  0010                     	;# 
   780  0011                     	;# 
   781  0012                     	;# 
   782  0013                     	;# 
   783  0014                     	;# 
   784  0015                     	;# 
   785  0015                     	;# 
   786  0016                     	;# 
   787  0017                     	;# 
   788  0018                     	;# 
   789  0019                     	;# 
   790  001A                     	;# 
   791  001B                     	;# 
   792  001B                     	;# 
   793  001C                     	;# 
   794  001D                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  0081                     	;# 
   798  0085                     	;# 
   799  0086                     	;# 
   800  0087                     	;# 
   801  0089                     	;# 
   802  008C                     	;# 
   803  008D                     	;# 
   804  008E                     	;# 
   805  008F                     	;# 
   806  0090                     	;# 
   807  0091                     	;# 
   808  0092                     	;# 
   809  0093                     	;# 
   810  0093                     	;# 
   811  0094                     	;# 
   812  0095                     	;# 
   813  0095                     	;# 
   814  0096                     	;# 
   815  0096                     	;# 
   816  0098                     	;# 
   817  0099                     	;# 
   818  009C                     	;# 
   819  009D                     	;# 
   820  009F                     	;# 
   821  0108                     	;# 
   822  0109                     	;# 
   823  010C                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010D                     	;# 
   827  010E                     	;# 
   828  010F                     	;# 
   829  0185                     	;# 
   830  0186                     	;# 
   831  018C                     	;# 
   832  0000                     	;# 
   833  0001                     	;# 
   834  0002                     	;# 
   835  0003                     	;# 
   836  0004                     	;# 
   837  0005                     	;# 
   838  0006                     	;# 
   839  0007                     	;# 
   840  0009                     	;# 
   841  000A                     	;# 
   842  000B                     	;# 
   843  000C                     	;# 
   844  000D                     	;# 
   845  000E                     	;# 
   846  000E                     	;# 
   847  000F                     	;# 
   848  0010                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0013                     	;# 
   852  0014                     	;# 
   853  0015                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  001D                     	;# 
   864  001E                     	;# 
   865  001F                     	;# 
   866  0081                     	;# 
   867  0085                     	;# 
   868  0086                     	;# 
   869  0087                     	;# 
   870  0089                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  008F                     	;# 
   875  0090                     	;# 
   876  0091                     	;# 
   877  0092                     	;# 
   878  0093                     	;# 
   879  0093                     	;# 
   880  0094                     	;# 
   881  0095                     	;# 
   882  0095                     	;# 
   883  0096                     	;# 
   884  0096                     	;# 
   885  0098                     	;# 
   886  0099                     	;# 
   887  009C                     	;# 
   888  009D                     	;# 
   889  009F                     	;# 
   890  0108                     	;# 
   891  0109                     	;# 
   892  010C                     	;# 
   893  010C                     	;# 
   894  010D                     	;# 
   895  010D                     	;# 
   896  010E                     	;# 
   897  010F                     	;# 
   898  0185                     	;# 
   899  0186                     	;# 
   900  018C                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0009                     	;# 
   910  000A                     	;# 
   911  000B                     	;# 
   912  000C                     	;# 
   913  000D                     	;# 
   914  000E                     	;# 
   915  000E                     	;# 
   916  000F                     	;# 
   917  0010                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0014                     	;# 
   922  0015                     	;# 
   923  0015                     	;# 
   924  0016                     	;# 
   925  0017                     	;# 
   926  0018                     	;# 
   927  0019                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001D                     	;# 
   933  001E                     	;# 
   934  001F                     	;# 
   935  0081                     	;# 
   936  0085                     	;# 
   937  0086                     	;# 
   938  0087                     	;# 
   939  0089                     	;# 
   940  008C                     	;# 
   941  008D                     	;# 
   942  008E                     	;# 
   943  008F                     	;# 
   944  0090                     	;# 
   945  0091                     	;# 
   946  0092                     	;# 
   947  0093                     	;# 
   948  0093                     	;# 
   949  0094                     	;# 
   950  0095                     	;# 
   951  0095                     	;# 
   952  0096                     	;# 
   953  0096                     	;# 
   954  0098                     	;# 
   955  0099                     	;# 
   956  009C                     	;# 
   957  009D                     	;# 
   958  009F                     	;# 
   959  0108                     	;# 
   960  0109                     	;# 
   961  010C                     	;# 
   962  010C                     	;# 
   963  010D                     	;# 
   964  010D                     	;# 
   965  010E                     	;# 
   966  010F                     	;# 
   967  0185                     	;# 
   968  0186                     	;# 
   969  018C                     	;# 
   970  0000                     	;# 
   971  0001                     	;# 
   972  0002                     	;# 
   973  0003                     	;# 
   974  0004                     	;# 
   975  0005                     	;# 
   976  0006                     	;# 
   977  0007                     	;# 
   978  0009                     	;# 
   979  000A                     	;# 
   980  000B                     	;# 
   981  000C                     	;# 
   982  000D                     	;# 
   983  000E                     	;# 
   984  000E                     	;# 
   985  000F                     	;# 
   986  0010                     	;# 
   987  0011                     	;# 
   988  0012                     	;# 
   989  0013                     	;# 
   990  0014                     	;# 
   991  0015                     	;# 
   992  0015                     	;# 
   993  0016                     	;# 
   994  0017                     	;# 
   995  0018                     	;# 
   996  0019                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001B                     	;# 
  1000  001C                     	;# 
  1001  001D                     	;# 
  1002  001E                     	;# 
  1003  001F                     	;# 
  1004  0081                     	;# 
  1005  0085                     	;# 
  1006  0086                     	;# 
  1007  0087                     	;# 
  1008  0089                     	;# 
  1009  008C                     	;# 
  1010  008D                     	;# 
  1011  008E                     	;# 
  1012  008F                     	;# 
  1013  0090                     	;# 
  1014  0091                     	;# 
  1015  0092                     	;# 
  1016  0093                     	;# 
  1017  0093                     	;# 
  1018  0094                     	;# 
  1019  0095                     	;# 
  1020  0095                     	;# 
  1021  0096                     	;# 
  1022  0096                     	;# 
  1023  0098                     	;# 
  1024  0099                     	;# 
  1025  009C                     	;# 
  1026  009D                     	;# 
  1027  009F                     	;# 
  1028  0108                     	;# 
  1029  0109                     	;# 
  1030  010C                     	;# 
  1031  010C                     	;# 
  1032  010D                     	;# 
  1033  010D                     	;# 
  1034  010E                     	;# 
  1035  010F                     	;# 
  1036  0185                     	;# 
  1037  0186                     	;# 
  1038  018C                     	;# 
  1039  0000                     	;# 
  1040  0001                     	;# 
  1041  0002                     	;# 
  1042  0003                     	;# 
  1043  0004                     	;# 
  1044  0005                     	;# 
  1045  0006                     	;# 
  1046  0007                     	;# 
  1047  0009                     	;# 
  1048  000A                     	;# 
  1049  000B                     	;# 
  1050  000C                     	;# 
  1051  000D                     	;# 
  1052  000E                     	;# 
  1053  000E                     	;# 
  1054  000F                     	;# 
  1055  0010                     	;# 
  1056  0011                     	;# 
  1057  0012                     	;# 
  1058  0013                     	;# 
  1059  0014                     	;# 
  1060  0015                     	;# 
  1061  0015                     	;# 
  1062  0016                     	;# 
  1063  0017                     	;# 
  1064  0018                     	;# 
  1065  0019                     	;# 
  1066  001A                     	;# 
  1067  001B                     	;# 
  1068  001B                     	;# 
  1069  001C                     	;# 
  1070  001D                     	;# 
  1071  001E                     	;# 
  1072  001F                     	;# 
  1073  0081                     	;# 
  1074  0085                     	;# 
  1075  0086                     	;# 
  1076  0087                     	;# 
  1077  0089                     	;# 
  1078  008C                     	;# 
  1079  008D                     	;# 
  1080  008E                     	;# 
  1081  008F                     	;# 
  1082  0090                     	;# 
  1083  0091                     	;# 
  1084  0092                     	;# 
  1085  0093                     	;# 
  1086  0093                     	;# 
  1087  0094                     	;# 
  1088  0095                     	;# 
  1089  0095                     	;# 
  1090  0096                     	;# 
  1091  0096                     	;# 
  1092  0098                     	;# 
  1093  0099                     	;# 
  1094  009C                     	;# 
  1095  009D                     	;# 
  1096  009F                     	;# 
  1097  0108                     	;# 
  1098  0109                     	;# 
  1099  010C                     	;# 
  1100  010C                     	;# 
  1101  010D                     	;# 
  1102  010D                     	;# 
  1103  010E                     	;# 
  1104  010F                     	;# 
  1105  0185                     	;# 
  1106  0186                     	;# 
  1107  018C                     	;# 
  1108  0000                     	;# 
  1109  0001                     	;# 
  1110  0002                     	;# 
  1111  0003                     	;# 
  1112  0004                     	;# 
  1113  0005                     	;# 
  1114  0006                     	;# 
  1115  0007                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  000E                     	;# 
  1123  000F                     	;# 
  1124  0010                     	;# 
  1125  0011                     	;# 
  1126  0012                     	;# 
  1127  0013                     	;# 
  1128  0014                     	;# 
  1129  0015                     	;# 
  1130  0015                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  0019                     	;# 
  1135  001A                     	;# 
  1136  001B                     	;# 
  1137  001B                     	;# 
  1138  001C                     	;# 
  1139  001D                     	;# 
  1140  001E                     	;# 
  1141  001F                     	;# 
  1142  0081                     	;# 
  1143  0085                     	;# 
  1144  0086                     	;# 
  1145  0087                     	;# 
  1146  0089                     	;# 
  1147  008C                     	;# 
  1148  008D                     	;# 
  1149  008E                     	;# 
  1150  008F                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0093                     	;# 
  1156  0094                     	;# 
  1157  0095                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0096                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009C                     	;# 
  1164  009D                     	;# 
  1165  009F                     	;# 
  1166  0108                     	;# 
  1167  0109                     	;# 
  1168  010C                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  010F                     	;# 
  1174  0185                     	;# 
  1175  0186                     	;# 
  1176  018C                     	;# 
  1177  0000                     	;# 
  1178  0001                     	;# 
  1179  0002                     	;# 
  1180  0003                     	;# 
  1181  0004                     	;# 
  1182  0005                     	;# 
  1183  0006                     	;# 
  1184  0007                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  000E                     	;# 
  1191  000E                     	;# 
  1192  000F                     	;# 
  1193  0010                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0014                     	;# 
  1198  0015                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0017                     	;# 
  1202  0018                     	;# 
  1203  0019                     	;# 
  1204  001A                     	;# 
  1205  001B                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001D                     	;# 
  1209  001E                     	;# 
  1210  001F                     	;# 
  1211  0081                     	;# 
  1212  0085                     	;# 
  1213  0086                     	;# 
  1214  0087                     	;# 
  1215  0089                     	;# 
  1216  008C                     	;# 
  1217  008D                     	;# 
  1218  008E                     	;# 
  1219  008F                     	;# 
  1220  0090                     	;# 
  1221  0091                     	;# 
  1222  0092                     	;# 
  1223  0093                     	;# 
  1224  0093                     	;# 
  1225  0094                     	;# 
  1226  0095                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0096                     	;# 
  1230  0098                     	;# 
  1231  0099                     	;# 
  1232  009C                     	;# 
  1233  009D                     	;# 
  1234  009F                     	;# 
  1235  0108                     	;# 
  1236  0109                     	;# 
  1237  010C                     	;# 
  1238  010C                     	;# 
  1239  010D                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  010F                     	;# 
  1243  0185                     	;# 
  1244  0186                     	;# 
  1245  018C                     	;# 
  1246  0000                     	;# 
  1247  0001                     	;# 
  1248  0002                     	;# 
  1249  0003                     	;# 
  1250  0004                     	;# 
  1251  0005                     	;# 
  1252  0006                     	;# 
  1253  0007                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  000E                     	;# 
  1261  000F                     	;# 
  1262  0010                     	;# 
  1263  0011                     	;# 
  1264  0012                     	;# 
  1265  0013                     	;# 
  1266  0014                     	;# 
  1267  0015                     	;# 
  1268  0015                     	;# 
  1269  0016                     	;# 
  1270  0017                     	;# 
  1271  0018                     	;# 
  1272  0019                     	;# 
  1273  001A                     	;# 
  1274  001B                     	;# 
  1275  001B                     	;# 
  1276  001C                     	;# 
  1277  001D                     	;# 
  1278  001E                     	;# 
  1279  001F                     	;# 
  1280  0081                     	;# 
  1281  0085                     	;# 
  1282  0086                     	;# 
  1283  0087                     	;# 
  1284  0089                     	;# 
  1285  008C                     	;# 
  1286  008D                     	;# 
  1287  008E                     	;# 
  1288  008F                     	;# 
  1289  0090                     	;# 
  1290  0091                     	;# 
  1291  0092                     	;# 
  1292  0093                     	;# 
  1293  0093                     	;# 
  1294  0094                     	;# 
  1295  0095                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0096                     	;# 
  1299  0098                     	;# 
  1300  0099                     	;# 
  1301  009C                     	;# 
  1302  009D                     	;# 
  1303  009F                     	;# 
  1304  0108                     	;# 
  1305  0109                     	;# 
  1306  010C                     	;# 
  1307  010C                     	;# 
  1308  010D                     	;# 
  1309  010D                     	;# 
  1310  010E                     	;# 
  1311  010F                     	;# 
  1312  0185                     	;# 
  1313  0186                     	;# 
  1314  018C                     	;# 
  1315  001F                     _ADCON0	set	31
  1316  001E                     _ADRES	set	30
  1317  0005                     _PORTA	set	5
  1318  0006                     _PORTB	set	6
  1319  0007                     _PORTC	set	7
  1320  001A                     _RCREG	set	26
  1321  0018                     _RCSTA	set	24
  1322  0010                     _T1CON	set	16
  1323  000F                     _TMR1H	set	15
  1324  000E                     _TMR1L	set	14
  1325  0019                     _TXREG	set	25
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002C                     _RA4	set	44
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0065                     _RCIF	set	101
  1335  00C6                     _RX9	set	198
  1336  0060                     _TMR1IF	set	96
  1337  0064                     _TXIF	set	100
  1338  009F                     _ADCON1	set	159
  1339  009D                     _FVRCON	set	157
  1340  0090                     _OSCCON	set	144
  1341  0099                     _SPBRG	set	153
  1342  0085                     _TRISA	set	133
  1343  0086                     _TRISB	set	134
  1344  0087                     _TRISC	set	135
  1345  0098                     _TXSTA	set	152
  1346  0408                     _PS0	set	1032
  1347  0409                     _PS1	set	1033
  1348  040A                     _PS2	set	1034
  1349  040B                     _PSA	set	1035
  1350  0465                     _RCIE	set	1125
  1351  0460                     _TMR1IE	set	1120
  1352  043E                     _TRISC6	set	1086
  1353  043F                     _TRISC7	set	1087
  1354  04C6                     _TX9	set	1222
  1355  0464                     _TXIE	set	1124
  1356  0185                     _ANSELA	set	389
  1357  0186                     _ANSELB	set	390
  1358                           
  1359                           	psect	text0
  1360  0000                     __ptext0:	
  1361                           ; #config settings
  1362                           
  1363                           
  1364                           ;psect for function _TMR1_ISR
  1365  0000                     
  1366                           	psect	cinit
  1367  0013                     start_initialization:	
  1368  0013                     __initialization:	
  1369                           
  1370                           ; Clear objects allocated to COMMON
  1371  0013  3070               	movlw	low __pbssCOMMON
  1372  0014  0084               	movwf	4
  1373  0015  3076               	movlw	low (__pbssCOMMON+6)
  1374  0016  158A  2616  118A   	fcall	clear_ram0
  1375                           
  1376                           ; Clear objects allocated to BANK0
  1377  0019  1383               	bcf	3,7	;select IRP bank0
  1378  001A  3020               	movlw	low __pbssBANK0
  1379  001B  0084               	movwf	4
  1380  001C  3057               	movlw	low (__pbssBANK0+55)
  1381  001D  158A  2616  118A   	fcall	clear_ram0
  1382                           
  1383                           ; Clear objects allocated to BANK1
  1384  0020  30A0               	movlw	low __pbssBANK1
  1385  0021  0084               	movwf	4
  1386  0022  30D6               	movlw	low (__pbssBANK1+54)
  1387  0023  158A  2616         	fcall	clear_ram0
  1388  0025                     end_of_initialization:	
  1389                           ;End of C runtime variable initialization code
  1390                           
  1391  0025                     __end_of__initialization:	
  1392  0025  0183               	clrf	3
  1393  0026  118A  2D65         	ljmp	_main	;jump to C main() function
  1394                           
  1395                           	psect	bssCOMMON
  1396  0070                     __pbssCOMMON:	
  1397  0070                     __CDS:	
  1398  0070                     	ds	5
  1399  0075                     _SwDetect:	
  1400  0075                     	ds	1
  1401                           
  1402                           	psect	bssBANK0
  1403  0020                     __pbssBANK0:	
  1404  0020                     _myMain:	
  1405  0020                     	ds	7
  1406  0027                     _PIRLED:	
  1407  0027                     	ds	4
  1408  002B                     _Timer1:	
  1409  002B                     	ds	3
  1410  002E                     _WDT:	
  1411  002E                     	ds	2
  1412  0030                     _LED:	
  1413  0030                     	ds	1
  1414  0031                     _Lights:	
  1415  0031                     	ds	1
  1416  0032                     _LightsControl:	
  1417  0032                     	ds	1
  1418  0033                     _Temp:	
  1419  0033                     	ds	12
  1420  003F                     _UART:	
  1421  003F                     	ds	12
  1422  004B                     _VarErrLED:	
  1423  004B                     	ds	4
  1424  004F                     _VarLED1:	
  1425  004F                     	ds	4
  1426  0053                     _VarLED2:	
  1427  0053                     	ds	4
  1428                           
  1429                           	psect	bssBANK1
  1430  00A0                     __pbssBANK1:	
  1431  00A0                     __PIR:	
  1432  00A0                     	ds	47
  1433  00CF                     _Lights1:	
  1434  00CF                     	ds	7
  1435                           
  1436                           	psect	clrtext
  1437  0E16                     clear_ram0:	
  1438                           ;	Called with FSR containing the base address, and
  1439                           ;	W with the last address+1
  1440                           
  1441  0E16  0064               	clrwdt	;clear the watchdog before getting into this loop
  1442  0E17                     clrloop0:	
  1443  0E17  0180               	clrf	0	;clear RAM location pointed to by FSR
  1444  0E18  0A84               	incf	4,f	;increment pointer
  1445  0E19  0604               	xorwf	4,w	;XOR with final address
  1446  0E1A  1903               	btfsc	3,2	;have we reached the end yet?
  1447  0E1B  3400               	retlw	0	;all done for this memory range, return
  1448  0E1C  0604               	xorwf	4,w	;XOR again to restore value
  1449  0E1D  2E17               	goto	clrloop0	;do the next byte
  1450                           
  1451                           	psect	cstackCOMMON
  1452  0076                     __pcstackCOMMON:	
  1453  0076                     ?_setLED_Initialization:	
  1454  0076                     ?_setPIRLED_Main:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0076                     ?_Fosc_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0076                     ?_IO_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0076                     ?_TMR1_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0076                     ?_ADC_Set:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0076                     ?_UART_Set:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0076                     ?_WDT_Set:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0076                     ?_TMR1_ISR:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0076                     ??_TMR1_ISR:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0076                     ?_UART_ISR:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0076                     ??_UART_ISR:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0076                     ?_Timeout_Counter:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0076                     ?_set_TimeoutCleared:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0076                     ??_getch:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0076                     ?_UART_Receive:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0076                     ?_UART_Transmit:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0076                     ?_putch:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0076                     ?_WDT_Clearing:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0076                     ?_myMain_Initialization:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0076                     ?_Temp_Initialization:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0076                     ?_Lights_Initialization:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0076                     ?_PIR_Initialization:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0076                     ?_getTemp_AD:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0076                     ?_my_MainTimer:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0076                     ?_Temp_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0076                     ?_Lights_Main:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0076                     ?_PIR_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0076                     ?_setTemp_Initialization:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0076                     ?_setTemp_Main:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0076                     ?_setLights_Initialization:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0076                     ?_setLights_Main:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0076                     ?_Lights_Control:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0076                     ?_Lights_Close:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0076                     ?_setLights_Line:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0076                     ?_CDS_Initialization:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0076                     ?_CDS_Main:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0076                     ?_LedPointSelect:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0076                     ?_LED_Initialization:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0076                     ?_LED_Main:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0076                     ?_Mcu_Initialization:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0076                     ?_ISR:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0076                     ?_UART_Main:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0076                     ?_UART_SetData:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0076                     ?_WDT_Main:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0076                     ?_setMain_Exception:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0076                     ?_LightsPointSelect:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0076                     ?_getch:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0076                     ?_getAll_Lights_Line:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0076                     ?_getLights_Status:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0076                     ?_getCDS_Status:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0076                     ?_getMain_LightsStatus:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0076                     ?_getMain_All_Error_Status:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x0
  1612  0076                     	ds	1
  1613  0077                     UART_ISR@i:	
  1614                           
  1615                           ; 1 bytes @ 0x1
  1616  0077                     	ds	1
  1617  0078                     ??_ISR:	
  1618                           
  1619                           ; 0 bytes @ 0x2
  1620  0078                     	ds	4
  1621                           
  1622                           	psect	cstackBANK0
  1623  0057                     __pcstackBANK0:	
  1624  0057                     ??_Fosc_Set:	
  1625  0057                     ??_IO_Set:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0057                     ??_TMR1_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0057                     ??_ADC_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0057                     ??_UART_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0057                     ??_WDT_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0057                     ??_Timeout_Counter:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0057                     ??_set_TimeoutCleared:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0057                     ??_UART_Receive:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0057                     ??_putch:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0057                     ??_WDT_Clearing:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0057                     ??_myMain_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0057                     ??_Temp_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0057                     ??_setTemp_Initialization:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0057                     ??_CDS_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0057                     ??_CDS_Main:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0057                     ??_getCDS_Status:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0057                     ??_LedPointSelect:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0057                     ??_UART_SetData:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0057                     ??_WDT_Main:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0057                     ??_LightsPointSelect:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0057                     ?_getAD:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0057                     ?___awdiv:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0057                     ?___lwdiv:	
  1692                           ; 2 bytes @ 0x0
  1693                           
  1694  0057                     getCDS_Status@status:	
  1695                           ; 2 bytes @ 0x0
  1696                           
  1697  0057                     getAD@adcon1:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0057                     putch@byte:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0057                     ___awdiv@divisor:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0057                     ___lwdiv@divisor:	
  1707                           ; 2 bytes @ 0x0
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x0
  1711  0057                     	ds	1
  1712  0058                     ??_getAD:	
  1713  0058                     ??_UART_Transmit:	
  1714                           ; 0 bytes @ 0x1
  1715                           
  1716  0058                     ??_Mcu_Initialization:	
  1717                           ; 0 bytes @ 0x1
  1718                           
  1719  0058                     ??_getMain_All_Error_Status:	
  1720                           ; 0 bytes @ 0x1
  1721                           
  1722  0058                     LedPointSelect@led:	
  1723                           ; 0 bytes @ 0x1
  1724                           
  1725  0058                     getAD@adcon0:	
  1726                           ; 1 bytes @ 0x1
  1727                           
  1728  0058                     LightsPointSelect@lights:	
  1729                           ; 1 bytes @ 0x1
  1730                           
  1731  0058                     UART_Transmit@i:	
  1732                           ; 1 bytes @ 0x1
  1733                           
  1734  0058                     UART_SetData@i:	
  1735                           ; 2 bytes @ 0x1
  1736                           
  1737                           
  1738                           ; 2 bytes @ 0x1
  1739  0058                     	ds	1
  1740  0059                     ?_setLED:	
  1741  0059                     ??_getTemp_AD:	
  1742                           ; 0 bytes @ 0x2
  1743                           
  1744  0059                     ??_getAll_Lights_Line:	
  1745                           ; 0 bytes @ 0x2
  1746                           
  1747  0059                     ?_setLights_Trigger:	
  1748                           ; 0 bytes @ 0x2
  1749                           
  1750  0059                     ??_getLights_Status:	
  1751                           ; 0 bytes @ 0x2
  1752                           
  1753  0059                     ??_setLights_Initialization:	
  1754                           ; 0 bytes @ 0x2
  1755                           
  1756  0059                     ??_Lights_Control:	
  1757                           ; 0 bytes @ 0x2
  1758                           
  1759  0059                     ??_setLights_Line:	
  1760                           ; 0 bytes @ 0x2
  1761                           
  1762  0059                     ?_getCDS_AD:	
  1763                           ; 0 bytes @ 0x2
  1764                           
  1765  0059                     getCDS_AD@channel2:	
  1766                           ; 0 bytes @ 0x2
  1767                           
  1768  0059                     setLED@command:	
  1769                           ; 1 bytes @ 0x2
  1770                           
  1771  0059                     setLights_Initialization@lights:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774  0059                     getLights_Status@lights:	
  1775                           ; 1 bytes @ 0x2
  1776                           
  1777  0059                     setLights_Trigger@command:	
  1778                           ; 1 bytes @ 0x2
  1779                           
  1780  0059                     setLights_Line@lights:	
  1781                           ; 1 bytes @ 0x2
  1782                           
  1783  0059                     getAll_Lights_Line@line:	
  1784                           ; 1 bytes @ 0x2
  1785                           
  1786  0059                     _getMain_All_Error_Status$2246:	
  1787                           ; 1 bytes @ 0x2
  1788                           
  1789  0059                     ___awdiv@dividend:	
  1790                           ; 2 bytes @ 0x2
  1791                           
  1792  0059                     ___lwdiv@dividend:	
  1793                           ; 2 bytes @ 0x2
  1794                           
  1795                           
  1796                           ; 2 bytes @ 0x2
  1797  0059                     	ds	1
  1798  005A                     ??_setLED:	
  1799  005A                     ??_Lights_Initialization:	
  1800                           ; 0 bytes @ 0x3
  1801                           
  1802  005A                     ??_my_MainTimer:	
  1803                           ; 0 bytes @ 0x3
  1804                           
  1805  005A                     ??_setLights_Trigger:	
  1806                           ; 0 bytes @ 0x3
  1807                           
  1808  005A                     ?_setLights:	
  1809                           ; 0 bytes @ 0x3
  1810                           
  1811  005A                     ??_getCDS_AD:	
  1812                           ; 0 bytes @ 0x3
  1813                           
  1814  005A                     ??_UART_Main:	
  1815                           ; 0 bytes @ 0x3
  1816                           
  1817  005A                     setLED@led:	
  1818                           ; 0 bytes @ 0x3
  1819                           
  1820  005A                     setLights@status:	
  1821                           ; 1 bytes @ 0x3
  1822                           
  1823  005A                     getLights_Status@status:	
  1824                           ; 1 bytes @ 0x3
  1825                           
  1826                           
  1827                           ; 1 bytes @ 0x3
  1828  005A                     	ds	1
  1829  005B                     ??_setLED_Initialization:	
  1830  005B                     ??_setPIRLED_Main:	
  1831                           ; 0 bytes @ 0x4
  1832                           
  1833  005B                     ??_PIR_Initialization:	
  1834                           ; 0 bytes @ 0x4
  1835                           
  1836  005B                     ??_setLights:	
  1837                           ; 0 bytes @ 0x4
  1838                           
  1839  005B                     ??_getMain_LightsStatus:	
  1840                           ; 0 bytes @ 0x4
  1841                           
  1842  005B                     ??___awdiv:	
  1843                           ; 0 bytes @ 0x4
  1844                           
  1845  005B                     ??___lwdiv:	
  1846                           ; 0 bytes @ 0x4
  1847                           
  1848  005B                     setLED_Initialization@led:	
  1849                           ; 0 bytes @ 0x4
  1850                           
  1851  005B                     getTemp_AD@channel:	
  1852                           ; 1 bytes @ 0x4
  1853                           
  1854  005B                     Lights_Control@lights:	
  1855                           ; 1 bytes @ 0x4
  1856                           
  1857  005B                     setLights_Trigger@lights:	
  1858                           ; 1 bytes @ 0x4
  1859                           
  1860  005B                     _getMain_All_Error_Status$2248:	
  1861                           ; 1 bytes @ 0x4
  1862                           
  1863                           
  1864                           ; 2 bytes @ 0x4
  1865  005B                     	ds	1
  1866  005C                     ??_LED_Initialization:	
  1867  005C                     ??_setMain_Exception:	
  1868                           ; 0 bytes @ 0x5
  1869                           
  1870  005C                     getCDS_AD@i:	
  1871                           ; 0 bytes @ 0x5
  1872                           
  1873  005C                     setPIRLED_Main@count:	
  1874                           ; 1 bytes @ 0x5
  1875                           
  1876  005C                     getMain_LightsStatus@count:	
  1877                           ; 1 bytes @ 0x5
  1878                           
  1879  005C                     setLights@lights:	
  1880                           ; 1 bytes @ 0x5
  1881                           
  1882  005C                     ___awdiv@counter:	
  1883                           ; 1 bytes @ 0x5
  1884                           
  1885  005C                     ___lwdiv@counter:	
  1886                           ; 1 bytes @ 0x5
  1887                           
  1888                           
  1889                           ; 1 bytes @ 0x5
  1890  005C                     	ds	1
  1891  005D                     ??_setLights_Main:	
  1892  005D                     ??_LED_Main:	
  1893                           ; 0 bytes @ 0x6
  1894                           
  1895  005D                     getCDS_AD@j:	
  1896                           ; 0 bytes @ 0x6
  1897                           
  1898  005D                     getMain_All_Error_Status@command:	
  1899                           ; 1 bytes @ 0x6
  1900                           
  1901  005D                     setLights_Main@lights:	
  1902                           ; 1 bytes @ 0x6
  1903                           
  1904  005D                     ___awdiv@sign:	
  1905                           ; 1 bytes @ 0x6
  1906                           
  1907  005D                     getMain_LightsStatus@i:	
  1908                           ; 1 bytes @ 0x6
  1909                           
  1910  005D                     ___lwdiv@quotient:	
  1911                           ; 2 bytes @ 0x6
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x6
  1915  005D                     	ds	1
  1916  005E                     getCDS_AD@channel1:	
  1917  005E                     setMain_Exception@buz:	
  1918                           ; 1 bytes @ 0x7
  1919                           
  1920  005E                     getMain_All_Error_Status@status:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923  005E                     ___awdiv@quotient:	
  1924                           ; 1 bytes @ 0x7
  1925                           
  1926                           
  1927                           ; 2 bytes @ 0x7
  1928  005E                     	ds	1
  1929  005F                     setMain_Exception@status:	
  1930  005F                     getMain_LightsStatus@status:	
  1931                           ; 1 bytes @ 0x8
  1932                           
  1933                           
  1934                           ; 1 bytes @ 0x8
  1935  005F                     	ds	1
  1936  0060                     ?_getPIR_AD:	
  1937  0060                     ??_setTemp_Main:	
  1938                           ; 0 bytes @ 0x9
  1939                           
  1940  0060                     ??_Lights_Close:	
  1941                           ; 0 bytes @ 0x9
  1942                           
  1943  0060                     getPIR_AD@channel2:	
  1944                           ; 0 bytes @ 0x9
  1945                           
  1946  0060                     _setMain_Exception$2230:	
  1947                           ; 1 bytes @ 0x9
  1948                           
  1949                           
  1950                           ; 2 bytes @ 0x9
  1951  0060                     	ds	1
  1952  0061                     ??_getPIR_AD:	
  1953  0061                     ??_Temp_Main:	
  1954                           ; 0 bytes @ 0xA
  1955                           
  1956  0061                     ??_Lights_Main:	
  1957                           ; 0 bytes @ 0xA
  1958                           
  1959                           
  1960                           ; 0 bytes @ 0xA
  1961  0061                     	ds	1
  1962  0062                     setMain_Exception@command:	
  1963                           
  1964                           ; 1 bytes @ 0xB
  1965  0062                     	ds	1
  1966  0063                     ??_PIR_Main:	
  1967                           
  1968                           ; 0 bytes @ 0xC
  1969  0063                     	ds	1
  1970  0064                     getPIR_AD@j:	
  1971                           
  1972                           ; 1 bytes @ 0xD
  1973  0064                     	ds	1
  1974  0065                     getPIR_AD@channel1:	
  1975                           
  1976                           ; 1 bytes @ 0xE
  1977  0065                     	ds	1
  1978  0066                     getPIR_AD@i:	
  1979                           
  1980                           ; 1 bytes @ 0xF
  1981  0066                     	ds	2
  1982  0068                     _PIR_Main$2940:	
  1983                           
  1984                           ; 2 bytes @ 0x11
  1985  0068                     	ds	2
  1986  006A                     PIR_Main@error:	
  1987                           
  1988                           ; 1 bytes @ 0x13
  1989  006A                     	ds	1
  1990  006B                     ?_main:	
  1991  006B                     main@argc:	
  1992                           ; 2 bytes @ 0x14
  1993                           
  1994                           
  1995                           ; 2 bytes @ 0x14
  1996  006B                     	ds	2
  1997  006D                     main@argv:	
  1998                           
  1999                           ; 2 bytes @ 0x16
  2000  006D                     	ds	2
  2001  006F                     ??_main:	
  2002                           
  2003                           ; 0 bytes @ 0x18
  2004  006F                     	ds	1
  2005                           
  2006                           	psect	maintext
  2007  0565                     __pmaintext:	
  2008 ;;
  2009 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2010 ;;
  2011 ;; *************** function _main *****************
  2012 ;; Defined at:
  2013 ;;		line 7 in file "../src/Main_B1.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  argc            2   20[BANK0 ] int 
  2016 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2   20[BANK0 ] int 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 17F/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2028 ;;      Params:         0       4       0       0
  2029 ;;      Locals:         0       0       0       0
  2030 ;;      Temps:          0       1       0       0
  2031 ;;      Totals:         0       5       0       0
  2032 ;;Total ram usage:        5 bytes
  2033 ;; Hardware stack levels required when called:    8
  2034 ;; This function calls:
  2035 ;;		_CDS_Initialization
  2036 ;;		_CDS_Main
  2037 ;;		_LED_Initialization
  2038 ;;		_LED_Main
  2039 ;;		_Lights_Initialization
  2040 ;;		_Lights_Main
  2041 ;;		_Mcu_Initialization
  2042 ;;		_PIR_Initialization
  2043 ;;		_PIR_Main
  2044 ;;		_Temp_Initialization
  2045 ;;		_Temp_Main
  2046 ;;		_UART_Main
  2047 ;;		_WDT_Main
  2048 ;;		_getCDS_AD
  2049 ;;		_getPIR_AD
  2050 ;;		_getTemp_AD
  2051 ;;		_myMain_Initialization
  2052 ;;		_my_MainTimer
  2053 ;; This function is called by:
  2054 ;;		Startup code after reset
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _main
  2060  0565                     _main:	
  2061                           
  2062                           ;Main_B1.c: 8: myMain_Initialization();
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2066  0565  158A  25D3  118A   	fcall	_myMain_Initialization
  2067                           
  2068                           ;Main_B1.c: 9: Mcu_Initialization();
  2069  0568  158A  26BA  118A   	fcall	_Mcu_Initialization
  2070                           
  2071                           ;Main_B1.c: 10: ;;
  2072                           ;Main_B1.c: 11: LED_Initialization();
  2073  056B  158A  261E  118A   	fcall	_LED_Initialization
  2074                           
  2075                           ;Main_B1.c: 12: ;;
  2076                           ;Main_B1.c: 14: ;;
  2077                           ;Main_B1.c: 15: Temp_Initialization();
  2078  056E  158A  25D9  118A   	fcall	_Temp_Initialization
  2079                           
  2080                           ;Main_B1.c: 16: ;;
  2081                           ;Main_B1.c: 17: ;;
  2082                           ;Main_B1.c: 18: ;;
  2083                           ;Main_B1.c: 20: ;;
  2084                           ;Main_B1.c: 21: Lights_Initialization();
  2085  0571  158A  25DF  118A   	fcall	_Lights_Initialization
  2086                           
  2087                           ;Main_B1.c: 22: CDS_Initialization();
  2088  0574  158A  25D4  118A   	fcall	_CDS_Initialization
  2089                           
  2090                           ;Main_B1.c: 23: PIR_Initialization();
  2091  0577  158A  26DF  118A   	fcall	_PIR_Initialization
  2092                           
  2093                           ;Main_B1.c: 24: ;;
  2094                           ;Main_B1.c: 25: ;;
  2095                           ;Main_B1.c: 26: __nop();
  2096  057A  0000               	nop
  2097  057B                     l4521:	
  2098                           ;Main_B1.c: 27: ;;
  2099                           ;Main_B1.c: 28: ;;
  2100                           ;Main_B1.c: 30: while (1) {
  2101                           
  2102                           
  2103                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2104  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2105  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2106  057D  1C20               	btfss	_myMain,0
  2107  057E  2D97               	goto	l4527
  2108                           
  2109                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2110  057F  3011               	movlw	17
  2111  0580  158A  27DB  118A   	fcall	_getTemp_AD
  2112                           
  2113                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2114  0583  3031               	movlw	49
  2115  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0586  00EF               	movwf	??_main
  2118  0587  086F               	movf	??_main,w
  2119  0588  00D9               	movwf	getCDS_AD@channel2
  2120  0589  3009               	movlw	9
  2121  058A  118A  2756  118A   	fcall	_getCDS_AD
  2122                           
  2123                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2124  058D  300D               	movlw	13
  2125  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2126  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0590  00EF               	movwf	??_main
  2128  0591  086F               	movf	??_main,w
  2129  0592  00E0               	movwf	getPIR_AD@channel2
  2130  0593  3005               	movlw	5
  2131  0594  118A  220F  118A   	fcall	_getPIR_AD
  2132  0597                     l4527:	
  2133                           
  2134                           ;Main_B1.c: 57: }
  2135                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2136  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0599  1C2B               	btfss	_Timer1,0
  2139  059A  2D7B               	goto	l4521
  2140                           
  2141                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2142  059B  102B               	bcf	_Timer1,0
  2143                           
  2144                           ;Main_B1.c: 95: my_MainTimer();
  2145  059C  118A  27CF  118A   	fcall	_my_MainTimer
  2146                           
  2147                           ;Main_B1.c: 96: WDT_Main();
  2148  059F  158A  2685  118A   	fcall	_WDT_Main
  2149                           
  2150                           ;Main_B1.c: 97: ;;
  2151                           ;Main_B1.c: 98: UART_Main();
  2152  05A2  158A  2674  118A   	fcall	_UART_Main
  2153                           
  2154                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  2155  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2156  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2157  05A7  1C20               	btfss	_myMain,0
  2158  05A8  2D7B               	goto	l4521
  2159                           
  2160                           ;Main_B1.c: 100: ;;
  2161                           ;Main_B1.c: 102: LED_Main();
  2162  05A9  158A  25D6  118A   	fcall	_LED_Main
  2163                           
  2164                           ;Main_B1.c: 103: ;;
  2165                           ;Main_B1.c: 105: ;;
  2166                           ;Main_B1.c: 106: Temp_Main();
  2167  05AC  158A  25DC  118A   	fcall	_Temp_Main
  2168                           
  2169                           ;Main_B1.c: 107: ;;
  2170                           ;Main_B1.c: 108: ;;
  2171                           ;Main_B1.c: 110: Lights_Main();
  2172  05AF  118A  27F5  118A   	fcall	_Lights_Main
  2173                           
  2174                           ;Main_B1.c: 111: ;;
  2175                           ;Main_B1.c: 112: ;;
  2176                           ;Main_B1.c: 113: CDS_Main();
  2177  05B2  118A  26BF  118A   	fcall	_CDS_Main
  2178                           
  2179                           ;Main_B1.c: 114: PIR_Main();
  2180  05B5  118A  2028  118A   	fcall	_PIR_Main
  2181                           
  2182                           ;Main_B1.c: 116: ;;
  2183                           ;Main_B1.c: 117: ;;
  2184                           ;Main_B1.c: 118: ;;
  2185                           ;Main_B1.c: 119: ;;
  2186  05B8  2D7B               	goto	l4521
  2187  05B9                     __end_of_main:	
  2188                           ;Main_B1.c: 126: }
  2189                           ;Main_B1.c: 127: }
  2190                           ;Main_B1.c: 161: }
  2191                           ;Main_B1.c: 162: return (0);
  2192                           ;	Return value of _main is never used
  2193                           
  2194                           
  2195                           	psect	text1
  2196  07CF                     __ptext1:	
  2197 ;; *************** function _my_MainTimer *****************
  2198 ;; Defined at:
  2199 ;;		line 181 in file "../src/Main_B1.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2213 ;;      Params:         0       0       0       0
  2214 ;;      Locals:         0       0       0       0
  2215 ;;      Temps:          0       0       0       0
  2216 ;;      Totals:         0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    4
  2220 ;; This function calls:
  2221 ;;		_UART_SetData
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _my_MainTimer
  2229  07CF                     _my_MainTimer:	
  2230                           
  2231                           ;Main_B1.c: 183: if (myMain.PowerON == 0) {
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _my_MainTimer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2235  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2236  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2237  07D1  1820               	btfsc	_myMain,0
  2238  07D2  2FE3               	goto	l4315
  2239                           
  2240                           ;Main_B1.c: 184: myMain.PowerCount++;
  2241  07D3  3001               	movlw	1
  2242  07D4  07A1               	addwf	_myMain+1,f
  2243  07D5  1803               	skipnc
  2244  07D6  0AA2               	incf	_myMain+2,f
  2245  07D7  3000               	movlw	0
  2246  07D8  07A2               	addwf	_myMain+2,f
  2247                           
  2248                           ;Main_B1.c: 185: if (myMain.PowerCount == 150)
  2249  07D9  3096               	movlw	150
  2250  07DA  0621               	xorwf	_myMain+1,w
  2251  07DB  0422               	iorwf	_myMain+2,w
  2252  07DC  1D03               	skipz
  2253  07DD  0008               	return
  2254                           
  2255                           ;Main_B1.c: 186: {
  2256                           ;Main_B1.c: 187: myMain.PowerCount = 0;
  2257  07DE  01A1               	clrf	_myMain+1
  2258  07DF  01A2               	clrf	_myMain+2
  2259                           
  2260                           ;Main_B1.c: 188: myMain.PowerON = 1;
  2261  07E0  1420               	bsf	_myMain,0
  2262                           
  2263                           ;Main_B1.c: 193: ;;
  2264                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2265  07E1  1620               	bsf	_myMain,4
  2266                           
  2267                           ;Main_B1.c: 203: }
  2268                           ;Main_B1.c: 204: } else {
  2269  07E2  0008               	return
  2270  07E3                     l4315:	
  2271                           
  2272                           ;Main_B1.c: 205: myMain.PowerCount++;
  2273  07E3  3001               	movlw	1
  2274  07E4  07A1               	addwf	_myMain+1,f
  2275  07E5  1803               	skipnc
  2276  07E6  0AA2               	incf	_myMain+2,f
  2277  07E7  3000               	movlw	0
  2278  07E8  07A2               	addwf	_myMain+2,f
  2279                           
  2280                           ;Main_B1.c: 206: if (myMain.PowerCount == 100) {
  2281  07E9  3064               	movlw	100
  2282  07EA  0621               	xorwf	_myMain+1,w
  2283  07EB  0422               	iorwf	_myMain+2,w
  2284  07EC  1D03               	skipz
  2285  07ED  0008               	return
  2286                           
  2287                           ;Main_B1.c: 207: myMain.PowerCount = 0;
  2288  07EE  01A1               	clrf	_myMain+1
  2289  07EF  01A2               	clrf	_myMain+2
  2290                           
  2291                           ;Main_B1.c: 210: if (UART.TxGO == 0) {
  2292  07F0  184A               	btfsc	_UART+11,0
  2293  07F1  0008               	return
  2294                           
  2295                           ;Main_B1.c: 211: UART_SetData();
  2296  07F2  118A  26F3         	fcall	_UART_SetData
  2297  07F4  0008               	return
  2298  07F5                     __end_of_my_MainTimer:	
  2299                           
  2300                           	psect	text2
  2301  06F3                     __ptext2:	
  2302 ;; *************** function _UART_SetData *****************
  2303 ;; Defined at:
  2304 ;;		line 815 in file "../src/MCU_B1.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  i               2    1[BANK0 ] int 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;		None               void
  2311 ;; Registers used:
  2312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2318 ;;      Params:         0       0       0       0
  2319 ;;      Locals:         0       2       0       0
  2320 ;;      Temps:          0       1       0       0
  2321 ;;      Totals:         0       3       0       0
  2322 ;;Total ram usage:        3 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    3
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_my_MainTimer
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _UART_SetData
  2334  06F3                     _UART_SetData:	
  2335                           
  2336                           ;MCU_B1.c: 823: if (UART.TxGO == 0) {
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _UART_SetData: [wreg-fsr0h+status,2+status,0+btemp+1]
  2340  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2341  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2342  06F5  184A               	btfsc	_UART+11,0
  2343  06F6  0008               	return
  2344                           
  2345                           ;MCU_B1.c: 824: for (int i = 0; i < 8; i++) {
  2346  06F7  01D8               	clrf	UART_SetData@i
  2347  06F8  01D9               	clrf	UART_SetData@i+1
  2348  06F9  0859               	movf	UART_SetData@i+1,w
  2349  06FA  3A80               	xorlw	128
  2350  06FB  00FF               	movwf	127
  2351  06FC  3080               	movlw	128
  2352  06FD  027F               	subwf	127,w
  2353  06FE  1D03               	skipz
  2354  06FF  2F02               	goto	u4205
  2355  0700  3008               	movlw	8
  2356  0701  0258               	subwf	UART_SetData@i,w
  2357  0702                     u4205:	
  2358  0702  1803               	btfsc	3,0
  2359  0703  2F1F               	goto	l4003
  2360  0704                     l3997:	
  2361                           
  2362                           ;MCU_B1.c: 825: UART.Data[i] = i;
  2363  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0706  0858               	movf	UART_SetData@i,w
  2366  0707  00D7               	movwf	??_UART_SetData
  2367  0708  0858               	movf	UART_SetData@i,w
  2368  0709  3E3F               	addlw	_UART& (0+255)
  2369  070A  0084               	movwf	4
  2370  070B  0857               	movf	??_UART_SetData,w
  2371  070C  1383               	bcf	3,7	;select IRP bank0
  2372  070D  0080               	movwf	0
  2373  070E  3001               	movlw	1
  2374  070F  07D8               	addwf	UART_SetData@i,f
  2375  0710  1803               	skipnc
  2376  0711  0AD9               	incf	UART_SetData@i+1,f
  2377  0712  3000               	movlw	0
  2378  0713  07D9               	addwf	UART_SetData@i+1,f
  2379  0714  0859               	movf	UART_SetData@i+1,w
  2380  0715  3A80               	xorlw	128
  2381  0716  00FF               	movwf	127
  2382  0717  3080               	movlw	128
  2383  0718  027F               	subwf	127,w
  2384  0719  1D03               	skipz
  2385  071A  2F1D               	goto	u4215
  2386  071B  3008               	movlw	8
  2387  071C  0258               	subwf	UART_SetData@i,w
  2388  071D                     u4215:	
  2389  071D  1C03               	skipc
  2390  071E  2F04               	goto	l3997
  2391  071F                     l4003:	
  2392                           
  2393                           ;MCU_B1.c: 826: }
  2394                           ;MCU_B1.c: 827: RB3 = RB3 == 1 ? 0 : 1;
  2395  071F  3008               	movlw	8
  2396  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0722  0686               	xorwf	6,f
  2399                           
  2400                           ;MCU_B1.c: 829: UART.TxGO = 1;
  2401  0723  144A               	bsf	_UART+11,0
  2402  0724  0008               	return
  2403  0725                     __end_of_UART_SetData:	
  2404                           
  2405                           	psect	text3
  2406  0DD3                     __ptext3:	
  2407 ;; *************** function _myMain_Initialization *****************
  2408 ;; Defined at:
  2409 ;;		line 168 in file "../src/Main_B1.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;		None
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		None
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2423 ;;      Params:         0       0       0       0
  2424 ;;      Locals:         0       0       0       0
  2425 ;;      Temps:          0       0       0       0
  2426 ;;      Totals:         0       0       0       0
  2427 ;;Total ram usage:        0 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    3
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _myMain_Initialization
  2439  0DD3                     _myMain_Initialization:	
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _myMain_Initialization: []
  2443  0DD3  0008               	return
  2444  0DD4                     __end_of_myMain_Initialization:	
  2445                           
  2446                           	psect	text4
  2447  0FDB                     __ptext4:	
  2448 ;; *************** function _getTemp_AD *****************
  2449 ;; Defined at:
  2450 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  channel         1    wreg     unsigned char 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  channel         1    4[BANK0 ] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2464 ;;      Params:         0       0       0       0
  2465 ;;      Locals:         0       1       0       0
  2466 ;;      Temps:          0       2       0       0
  2467 ;;      Totals:         0       3       0       0
  2468 ;;Total ram usage:        3 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    5
  2471 ;; This function calls:
  2472 ;;		_getAD
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _getTemp_AD
  2480  0FDB                     _getTemp_AD:	
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2484                           ;getTemp_AD@channel stored from wreg
  2485  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0FDD  00DB               	movwf	getTemp_AD@channel
  2488                           
  2489                           ;OverTemperature_B1.c: 32: if (Temp.ADtoGO == 1) {
  2490  0FDE  1D33               	btfss	_Temp,2
  2491  0FDF  0008               	return
  2492                           
  2493                           ;OverTemperature_B1.c: 33: Temp.GO = 1;
  2494  0FE0  1633               	bsf	_Temp,4
  2495                           
  2496                           ;OverTemperature_B1.c: 34: Temp.ADRES = getAD(channel, 0x70);
  2497  0FE1  3070               	movlw	112
  2498  0FE2  00D9               	movwf	??_getTemp_AD
  2499  0FE3  0859               	movf	??_getTemp_AD,w
  2500  0FE4  00D7               	movwf	getAD@adcon1
  2501  0FE5  085B               	movf	getTemp_AD@channel,w
  2502  0FE6  158A  279D  158A   	fcall	_getAD
  2503  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0FEB  00DA               	movwf	??_getTemp_AD+1
  2506  0FEC  085A               	movf	??_getTemp_AD+1,w
  2507  0FED  00BC               	movwf	_Temp+9
  2508                           
  2509                           ;OverTemperature_B1.c: 35: if (Temp.ADH[0] < Temp.ADRES) {
  2510  0FEE  083C               	movf	_Temp+9,w
  2511  0FEF  023A               	subwf	_Temp+7,w
  2512  0FF0  1803               	skipnc
  2513  0FF1  2FF7               	goto	l4225
  2514                           
  2515                           ;OverTemperature_B1.c: 36: Temp.ADH[0] = Temp.ADRES;
  2516  0FF2  083C               	movf	_Temp+9,w
  2517  0FF3  00D9               	movwf	??_getTemp_AD
  2518  0FF4  0859               	movf	??_getTemp_AD,w
  2519  0FF5  00BA               	movwf	_Temp+7
  2520                           
  2521                           ;OverTemperature_B1.c: 37: } else if (Temp.ADH[1] < Temp.ADRES) {
  2522  0FF6  0008               	return
  2523  0FF7                     l4225:	
  2524  0FF7  083C               	movf	_Temp+9,w
  2525  0FF8  023B               	subwf	_Temp+8,w
  2526  0FF9  1803               	skipnc
  2527  0FFA  0008               	return
  2528                           
  2529                           ;OverTemperature_B1.c: 38: Temp.ADH[1] = Temp.ADRES;
  2530  0FFB  083C               	movf	_Temp+9,w
  2531  0FFC  00D9               	movwf	??_getTemp_AD
  2532  0FFD  0859               	movf	??_getTemp_AD,w
  2533  0FFE  00BB               	movwf	_Temp+8
  2534  0FFF  0008               	return
  2535  1000                     __end_of_getTemp_AD:	
  2536                           
  2537                           	psect	text5
  2538  020F                     __ptext5:	
  2539 ;; *************** function _getPIR_AD *****************
  2540 ;; Defined at:
  2541 ;;		line 167 in file "../src/PIR_B1.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  channel1        1    wreg     unsigned char 
  2544 ;;  channel2        1    9[BANK0 ] unsigned char 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  channel1        1   14[BANK0 ] unsigned char 
  2547 ;;  i               1   15[BANK0 ] unsigned char 
  2548 ;;  j               1   13[BANK0 ] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2558 ;;      Params:         0       1       0       0
  2559 ;;      Locals:         0       3       0       0
  2560 ;;      Temps:          0       3       0       0
  2561 ;;      Totals:         0       7       0       0
  2562 ;;Total ram usage:        7 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    5
  2565 ;; This function calls:
  2566 ;;		___awdiv
  2567 ;;		___lwdiv
  2568 ;;		_getAD
  2569 ;; This function is called by:
  2570 ;;		_main
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function _getPIR_AD
  2576  020F                     _getPIR_AD:	
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2580                           ;getPIR_AD@channel1 stored from wreg
  2581  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0211  00E5               	movwf	getPIR_AD@channel1
  2584                           
  2585                           ;PIR_B1.c: 168: char i = 0, j = 0;
  2586  0212  01E6               	clrf	getPIR_AD@i
  2587  0213  01E4               	clrf	getPIR_AD@j
  2588                           
  2589                           ;PIR_B1.c: 170: if (_PIR.ADtoGO == 1) {
  2590  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0216  1CA0               	btfss	__PIR^(0+128),1
  2593  0217  0008               	return
  2594                           
  2595                           ;PIR_B1.c: 171: _PIR.GO = 1;
  2596  0218  1520               	bsf	__PIR^(0+128),2
  2597                           
  2598                           ;PIR_B1.c: 172: _PIR.ADRES = getAD(channel1, 0x70);
  2599  0219  3070               	movlw	112
  2600  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2601  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2602  021C  00E1               	movwf	??_getPIR_AD
  2603  021D  0861               	movf	??_getPIR_AD,w
  2604  021E  00D7               	movwf	getAD@adcon1
  2605  021F  0865               	movf	getPIR_AD@channel1,w
  2606  0220  158A  279D  118A   	fcall	_getAD
  2607  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2609  0225  00E2               	movwf	??_getPIR_AD+1
  2610  0226  0862               	movf	??_getPIR_AD+1,w
  2611  0227  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0228  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0229  00A2               	movwf	(__PIR^(0+128)+2)
  2614                           
  2615                           ;PIR_B1.c: 173: _PIR.VRAD = _PIR.ADRES / 51;
  2616  022A  3033               	movlw	51
  2617  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2618  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2619  022D  00D7               	movwf	___awdiv@divisor
  2620  022E  3000               	movlw	0
  2621  022F  00D8               	movwf	___awdiv@divisor+1
  2622  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0232  0822               	movf	(__PIR^(0+128)+2),w
  2625  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0235  00E1               	movwf	??_getPIR_AD
  2628  0236  01E2               	clrf	??_getPIR_AD+1
  2629  0237  0861               	movf	??_getPIR_AD,w
  2630  0238  00D9               	movwf	___awdiv@dividend
  2631  0239  0862               	movf	??_getPIR_AD+1,w
  2632  023A  00DA               	movwf	___awdiv@dividend+1
  2633  023B  118A  24AF  118A   	fcall	___awdiv
  2634  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2635  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0240  0857               	movf	?___awdiv,w
  2637  0241  00E3               	movwf	??_getPIR_AD+2
  2638  0242  0863               	movf	??_getPIR_AD+2,w
  2639  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2641  0245  00A3               	movwf	(__PIR^(0+128)+3)
  2642                           
  2643                           ;PIR_B1.c: 174: _PIR.VRAD1 = _PIR.ADRES;
  2644  0246  0822               	movf	(__PIR^(0+128)+2),w
  2645  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0249  00E1               	movwf	??_getPIR_AD
  2648  024A  0861               	movf	??_getPIR_AD,w
  2649  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2650  024C  1303               	bcf	3,6	;RP1=0, select bank1
  2651  024D  00A4               	movwf	(__PIR^(0+128)+4)
  2652                           
  2653                           ;PIR_B1.c: 175: _PIR.ADRES = getAD(channel2, 0x70);
  2654  024E  3070               	movlw	112
  2655  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0251  00E1               	movwf	??_getPIR_AD
  2658  0252  0861               	movf	??_getPIR_AD,w
  2659  0253  00D7               	movwf	getAD@adcon1
  2660  0254  0860               	movf	getPIR_AD@channel2,w
  2661  0255  158A  279D  118A   	fcall	_getAD
  2662  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2664  025A  00E2               	movwf	??_getPIR_AD+1
  2665  025B  0862               	movf	??_getPIR_AD+1,w
  2666  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2667  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2668  025E  00A2               	movwf	(__PIR^(0+128)+2)
  2669                           
  2670                           ;PIR_B1.c: 176: _PIR.SignalAD = _PIR.ADRES;
  2671  025F  0822               	movf	(__PIR^(0+128)+2),w
  2672  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0262  00E1               	movwf	??_getPIR_AD
  2675  0263  0861               	movf	??_getPIR_AD,w
  2676  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2677  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2678  0266  00A1               	movwf	(__PIR^(0+128)+1)
  2679                           
  2680                           ;PIR_B1.c: 178: switch (_PIR.VRAD) {
  2681  0267  2A83               	goto	l4257
  2682  0268                     l4241:	
  2683                           ;PIR_B1.c: 179: case 0:
  2684                           
  2685                           
  2686                           ;PIR_B1.c: 180: if (_PIR.VRAD1 < 10) {
  2687  0268  300A               	movlw	10
  2688  0269  0224               	subwf	(__PIR^(0+128)+4),w
  2689  026A  1803               	skipnc
  2690  026B  2A6E               	goto	l4245
  2691                           
  2692                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 5;
  2693  026C  3005               	movlw	5
  2694  026D  2A6F               	goto	L1
  2695  026E                     l4245:	
  2696                           ;PIR_B1.c: 182: } else {
  2697                           
  2698                           
  2699                           ;PIR_B1.c: 183: _PIR.CloseTimeValue = 60;
  2700  026E  303C               	movlw	60
  2701  026F                     L1:	
  2702  026F  00C7               	movwf	(__PIR^(0+128)+39)
  2703  0270  3000               	movlw	0
  2704  0271  2A81               	goto	L5
  2705  0272                     l4247:	
  2706                           ;PIR_B1.c: 186: case 1:
  2707                           
  2708                           ;PIR_B1.c: 184: }
  2709                           ;PIR_B1.c: 185: break;
  2710                           
  2711                           
  2712                           ;PIR_B1.c: 187: _PIR.CloseTimeValue = 300;
  2713  0272  302C               	movlw	44
  2714  0273  00C7               	movwf	(__PIR^(0+128)+39)
  2715  0274  3001               	movlw	1
  2716  0275  2A81               	goto	L5
  2717  0276                     l4249:	
  2718                           ;PIR_B1.c: 189: case 2:
  2719                           
  2720                           ;PIR_B1.c: 188: break;
  2721                           
  2722                           
  2723                           ;PIR_B1.c: 190: _PIR.CloseTimeValue = 600;
  2724  0276  3058               	movlw	88
  2725  0277  00C7               	movwf	(__PIR^(0+128)+39)
  2726  0278  3002               	movlw	2
  2727  0279  2A81               	goto	L5
  2728  027A                     l4251:	
  2729                           ;PIR_B1.c: 192: case 3:
  2730                           
  2731                           ;PIR_B1.c: 191: break;
  2732                           
  2733                           
  2734                           ;PIR_B1.c: 193: _PIR.CloseTimeValue = 900;
  2735  027A  3084               	movlw	132
  2736  027B  00C7               	movwf	(__PIR^(0+128)+39)
  2737  027C  3003               	movlw	3
  2738  027D  2A81               	goto	L5
  2739  027E                     l4253:	
  2740                           ;PIR_B1.c: 195: case 4:
  2741                           
  2742                           ;PIR_B1.c: 194: break;
  2743                           
  2744                           
  2745                           ;PIR_B1.c: 196: _PIR.CloseTimeValue = 1200;
  2746  027E  30B0               	movlw	176
  2747  027F  00C7               	movwf	(__PIR^(0+128)+39)
  2748  0280  3004               	movlw	4
  2749  0281                     L5:	
  2750  0281  00C8               	movwf	(__PIR^(0+128)+40)
  2751                           
  2752                           ;PIR_B1.c: 198: }
  2753                           
  2754                           ;PIR_B1.c: 197: break;
  2755  0282  2A94               	goto	l4259
  2756  0283                     l4257:	
  2757  0283  0823               	movf	(__PIR^(0+128)+3),w
  2758                           
  2759                           ; Switch size 1, requested type "space"
  2760                           ; Number of cases is 5, Range of values is 0 to 4
  2761                           ; switch strategies available:
  2762                           ; Name         Instructions Cycles
  2763                           ; simple_byte           16     9 (average)
  2764                           ; direct_byte           17     7 (fixed)
  2765                           ; jumptable            260     6 (fixed)
  2766                           ;	Chosen strategy is simple_byte
  2767  0284  3A00               	xorlw	0	; case 0
  2768  0285  1903               	skipnz
  2769  0286  2A68               	goto	l4241
  2770  0287  3A01               	xorlw	1	; case 1
  2771  0288  1903               	skipnz
  2772  0289  2A72               	goto	l4247
  2773  028A  3A03               	xorlw	3	; case 2
  2774  028B  1903               	skipnz
  2775  028C  2A76               	goto	l4249
  2776  028D  3A01               	xorlw	1	; case 3
  2777  028E  1903               	skipnz
  2778  028F  2A7A               	goto	l4251
  2779  0290  3A07               	xorlw	7	; case 4
  2780  0291  1903               	skipnz
  2781  0292  2A7E               	goto	l4253
  2782  0293  2A94               	goto	l4259
  2783  0294                     l4259:	
  2784                           
  2785                           ;PIR_B1.c: 201: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2786  0294  0821               	movf	(__PIR^(0+128)+1),w
  2787  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0297  00E1               	movwf	??_getPIR_AD
  2790  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2792  029A  0827               	movf	(__PIR^(0+128)+7),w
  2793  029B  3EA8               	addlw	(__PIR+8)& (0+255)
  2794  029C  0084               	movwf	4
  2795  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2796  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2797  029F  0861               	movf	??_getPIR_AD,w
  2798  02A0  1383               	bcf	3,7	;select IRP bank1
  2799  02A1  0080               	movwf	0
  2800                           
  2801                           ;PIR_B1.c: 202: for (i = 0; i < 10; i++) {
  2802  02A2  01E6               	clrf	getPIR_AD@i
  2803  02A3  300A               	movlw	10
  2804  02A4  0266               	subwf	getPIR_AD@i,w
  2805  02A5  1803               	btfsc	3,0
  2806  02A6  2AC3               	goto	l4273
  2807  02A7                     l4267:	
  2808                           
  2809                           ;PIR_B1.c: 203: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2810  02A7  0866               	movf	getPIR_AD@i,w
  2811  02A8  3EA8               	addlw	(__PIR+8)& (0+255)
  2812  02A9  0084               	movwf	4
  2813  02AA  0800               	movf	0,w
  2814  02AB  00E1               	movwf	??_getPIR_AD
  2815  02AC  01E2               	clrf	??_getPIR_AD+1
  2816  02AD  0861               	movf	??_getPIR_AD,w
  2817  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2818  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  2819  02B0  07B2               	addwf	(__PIR^(0+128)+18),f
  2820  02B1  1803               	skipnc
  2821  02B2  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2822  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2823  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2824  02B5  0862               	movf	??_getPIR_AD+1,w
  2825  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2826  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2827  02B8  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2828  02B9  3001               	movlw	1
  2829  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2830  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2831  02BC  00E1               	movwf	??_getPIR_AD
  2832  02BD  0861               	movf	??_getPIR_AD,w
  2833  02BE  07E6               	addwf	getPIR_AD@i,f
  2834  02BF  300A               	movlw	10
  2835  02C0  0266               	subwf	getPIR_AD@i,w
  2836  02C1  1C03               	skipc
  2837  02C2  2AA7               	goto	l4267
  2838  02C3                     l4273:	
  2839                           
  2840                           ;PIR_B1.c: 204: }
  2841                           ;PIR_B1.c: 205: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2842  02C3  300A               	movlw	10
  2843  02C4  00D7               	movwf	___lwdiv@divisor
  2844  02C5  3000               	movlw	0
  2845  02C6  00D8               	movwf	___lwdiv@divisor+1
  2846  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2847  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2848  02C9  0833               	movf	((__PIR+1)^(0+128)+18),w
  2849  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2850  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2851  02CC  01DA               	clrf	___lwdiv@dividend+1
  2852  02CD  07DA               	addwf	___lwdiv@dividend+1,f
  2853  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2854  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2855  02D0  0832               	movf	(__PIR^(0+128)+18),w
  2856  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2857  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2858  02D3  01D9               	clrf	___lwdiv@dividend
  2859  02D4  07D9               	addwf	___lwdiv@dividend,f
  2860  02D5  118A  260A  118A   	fcall	___lwdiv
  2861  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2862  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2863  02DA  0857               	movf	?___lwdiv,w
  2864  02DB  00E1               	movwf	??_getPIR_AD
  2865  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2866  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2867  02DE  0834               	movf	(__PIR^(0+128)+20),w
  2868  02DF  3EB5               	addlw	(__PIR+21)& (0+255)
  2869  02E0  0084               	movwf	4
  2870  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2871  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2872  02E3  0861               	movf	??_getPIR_AD,w
  2873  02E4  1383               	bcf	3,7	;select IRP bank1
  2874  02E5  0080               	movwf	0
  2875                           
  2876                           ;PIR_B1.c: 206: _PIR.TenAverageValue = 0;
  2877  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2878  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2879  02E8  01B2               	clrf	(__PIR^(0+128)+18)
  2880  02E9  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2881                           
  2882                           ;PIR_B1.c: 208: for (i = 0; i <= 9; i++) {
  2883  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2884  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2885  02EC  01E6               	clrf	getPIR_AD@i
  2886  02ED  300A               	movlw	10
  2887  02EE  0266               	subwf	getPIR_AD@i,w
  2888  02EF  1803               	btfsc	3,0
  2889  02F0  2B0D               	goto	l4289
  2890  02F1                     l4283:	
  2891                           
  2892                           ;PIR_B1.c: 209: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2893  02F1  0866               	movf	getPIR_AD@i,w
  2894  02F2  3EB5               	addlw	(__PIR+21)& (0+255)
  2895  02F3  0084               	movwf	4
  2896  02F4  0800               	movf	0,w
  2897  02F5  00E1               	movwf	??_getPIR_AD
  2898  02F6  01E2               	clrf	??_getPIR_AD+1
  2899  02F7  0861               	movf	??_getPIR_AD,w
  2900  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2901  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  2902  02FA  07BF               	addwf	(__PIR^(0+128)+31),f
  2903  02FB  1803               	skipnc
  2904  02FC  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2905  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2906  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2907  02FF  0862               	movf	??_getPIR_AD+1,w
  2908  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2910  0302  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2911  0303  3001               	movlw	1
  2912  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0306  00E1               	movwf	??_getPIR_AD
  2915  0307  0861               	movf	??_getPIR_AD,w
  2916  0308  07E6               	addwf	getPIR_AD@i,f
  2917  0309  300A               	movlw	10
  2918  030A  0266               	subwf	getPIR_AD@i,w
  2919  030B  1C03               	skipc
  2920  030C  2AF1               	goto	l4283
  2921  030D                     l4289:	
  2922                           
  2923                           ;PIR_B1.c: 210: }
  2924                           ;PIR_B1.c: 211: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2925  030D  300A               	movlw	10
  2926  030E  00D7               	movwf	___lwdiv@divisor
  2927  030F  3000               	movlw	0
  2928  0310  00D8               	movwf	___lwdiv@divisor+1
  2929  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2930  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2931  0313  0840               	movf	((__PIR+1)^(0+128)+31),w
  2932  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0316  01DA               	clrf	___lwdiv@dividend+1
  2935  0317  07DA               	addwf	___lwdiv@dividend+1,f
  2936  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2938  031A  083F               	movf	(__PIR^(0+128)+31),w
  2939  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2940  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2941  031D  01D9               	clrf	___lwdiv@dividend
  2942  031E  07D9               	addwf	___lwdiv@dividend,f
  2943  031F  118A  260A  118A   	fcall	___lwdiv
  2944  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0324  0857               	movf	?___lwdiv,w
  2947  0325  00E1               	movwf	??_getPIR_AD
  2948  0326  0861               	movf	??_getPIR_AD,w
  2949  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0329  00A6               	movwf	(__PIR^(0+128)+6)
  2952                           
  2953                           ;PIR_B1.c: 212: _PIR.HundredAverageValue = 0;
  2954  032A  01BF               	clrf	(__PIR^(0+128)+31)
  2955  032B  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2956                           
  2957                           ;PIR_B1.c: 214: if (_PIR.TenCount < 10) {
  2958  032C  300A               	movlw	10
  2959  032D  0227               	subwf	(__PIR^(0+128)+7),w
  2960  032E  1803               	skipnc
  2961  032F  2B39               	goto	l4297
  2962                           
  2963                           ;PIR_B1.c: 215: _PIR.TenCount++;
  2964  0330  3001               	movlw	1
  2965  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0333  00E1               	movwf	??_getPIR_AD
  2968  0334  0861               	movf	??_getPIR_AD,w
  2969  0335  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0336  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0337  07A7               	addwf	(__PIR^(0+128)+7),f
  2972                           
  2973                           ;PIR_B1.c: 216: } else {
  2974  0338  0008               	return
  2975  0339                     l4297:	
  2976                           
  2977                           ;PIR_B1.c: 217: _PIR.TenCount = 0;
  2978  0339  01A7               	clrf	(__PIR^(0+128)+7)
  2979                           
  2980                           ;PIR_B1.c: 218: if (_PIR.HundreCount < 10)
  2981  033A  300A               	movlw	10
  2982  033B  0234               	subwf	(__PIR^(0+128)+20),w
  2983  033C  1803               	skipnc
  2984  033D  2B47               	goto	l4303
  2985                           
  2986                           ;PIR_B1.c: 219: _PIR.HundreCount++;
  2987  033E  3001               	movlw	1
  2988  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0341  00E1               	movwf	??_getPIR_AD
  2991  0342  0861               	movf	??_getPIR_AD,w
  2992  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2993  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2994  0345  07B4               	addwf	(__PIR^(0+128)+20),f
  2995  0346  0008               	return
  2996  0347                     l4303:	
  2997                           
  2998                           ;PIR_B1.c: 220: else
  2999                           ;PIR_B1.c: 221: _PIR.HundreCount = 0;
  3000  0347  01B4               	clrf	(__PIR^(0+128)+20)
  3001  0348  0008               	return
  3002  0349                     __end_of_getPIR_AD:	
  3003                           
  3004                           	psect	text6
  3005  060A                     __ptext6:	
  3006 ;; *************** function ___lwdiv *****************
  3007 ;; Defined at:
  3008 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  divisor         2    0[BANK0 ] unsigned int 
  3011 ;;  dividend        2    2[BANK0 ] unsigned int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  quotient        2    6[BANK0 ] unsigned int 
  3014 ;;  counter         1    5[BANK0 ] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  2    0[BANK0 ] unsigned int 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3024 ;;      Params:         0       4       0       0
  3025 ;;      Locals:         0       3       0       0
  3026 ;;      Temps:          0       1       0       0
  3027 ;;      Totals:         0       8       0       0
  3028 ;;Total ram usage:        8 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_getPIR_AD
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function ___lwdiv
  3040  060A                     ___lwdiv:	
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3044  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3045  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3046  060C  01DD               	clrf	___lwdiv@quotient
  3047  060D  01DE               	clrf	___lwdiv@quotient+1
  3048  060E  0858               	movf	___lwdiv@divisor+1,w
  3049  060F  0457               	iorwf	___lwdiv@divisor,w
  3050  0610  1903               	skipnz
  3051  0611  2E43               	goto	l4161
  3052  0612  01DC               	clrf	___lwdiv@counter
  3053  0613  0ADC               	incf	___lwdiv@counter,f
  3054  0614                     l4149:	
  3055  0614  1BD8               	btfsc	___lwdiv@divisor+1,7
  3056  0615  2E22               	goto	l4151
  3057  0616  3001               	movlw	1
  3058  0617                     u4535:	
  3059  0617  1003               	clrc
  3060  0618  0DD7               	rlf	___lwdiv@divisor,f
  3061  0619  0DD8               	rlf	___lwdiv@divisor+1,f
  3062  061A  3EFF               	addlw	-1
  3063  061B  1D03               	skipz
  3064  061C  2E17               	goto	u4535
  3065  061D  3001               	movlw	1
  3066  061E  00DB               	movwf	??___lwdiv
  3067  061F  085B               	movf	??___lwdiv,w
  3068  0620  07DC               	addwf	___lwdiv@counter,f
  3069  0621  2E14               	goto	l4149
  3070  0622                     l4151:	
  3071  0622  3001               	movlw	1
  3072  0623                     u4555:	
  3073  0623  1003               	clrc
  3074  0624  0DDD               	rlf	___lwdiv@quotient,f
  3075  0625  0DDE               	rlf	___lwdiv@quotient+1,f
  3076  0626  3EFF               	addlw	-1
  3077  0627  1D03               	skipz
  3078  0628  2E23               	goto	u4555
  3079  0629  0858               	movf	___lwdiv@divisor+1,w
  3080  062A  025A               	subwf	___lwdiv@dividend+1,w
  3081  062B  1D03               	skipz
  3082  062C  2E2F               	goto	u4565
  3083  062D  0857               	movf	___lwdiv@divisor,w
  3084  062E  0259               	subwf	___lwdiv@dividend,w
  3085  062F                     u4565:	
  3086  062F  1C03               	skipc
  3087  0630  2E38               	goto	l4157
  3088  0631  0857               	movf	___lwdiv@divisor,w
  3089  0632  02D9               	subwf	___lwdiv@dividend,f
  3090  0633  0858               	movf	___lwdiv@divisor+1,w
  3091  0634  1C03               	skipc
  3092  0635  03DA               	decf	___lwdiv@dividend+1,f
  3093  0636  02DA               	subwf	___lwdiv@dividend+1,f
  3094  0637  145D               	bsf	___lwdiv@quotient,0
  3095  0638                     l4157:	
  3096  0638  3001               	movlw	1
  3097  0639                     u4575:	
  3098  0639  1003               	clrc
  3099  063A  0CD8               	rrf	___lwdiv@divisor+1,f
  3100  063B  0CD7               	rrf	___lwdiv@divisor,f
  3101  063C  3EFF               	addlw	-1
  3102  063D  1D03               	skipz
  3103  063E  2E39               	goto	u4575
  3104  063F  3001               	movlw	1
  3105  0640  02DC               	subwf	___lwdiv@counter,f
  3106  0641  1D03               	btfss	3,2
  3107  0642  2E22               	goto	l4151
  3108  0643                     l4161:	
  3109  0643  085E               	movf	___lwdiv@quotient+1,w
  3110  0644  01D8               	clrf	?___lwdiv+1
  3111  0645  07D8               	addwf	?___lwdiv+1,f
  3112  0646  085D               	movf	___lwdiv@quotient,w
  3113  0647  01D7               	clrf	?___lwdiv
  3114  0648  07D7               	addwf	?___lwdiv,f
  3115  0649  0008               	return
  3116  064A                     __end_of___lwdiv:	
  3117                           
  3118                           	psect	text7
  3119  0756                     __ptext7:	
  3120 ;; *************** function _getCDS_AD *****************
  3121 ;; Defined at:
  3122 ;;		line 45 in file "../src/CDS_B1.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  channel1        1    wreg     unsigned char 
  3125 ;;  channel2        1    2[BANK0 ] unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  channel1        1    7[BANK0 ] unsigned char 
  3128 ;;  j               1    6[BANK0 ] unsigned char 
  3129 ;;  i               1    5[BANK0 ] unsigned char 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;		None               void
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3139 ;;      Params:         0       1       0       0
  3140 ;;      Locals:         0       3       0       0
  3141 ;;      Temps:          0       2       0       0
  3142 ;;      Totals:         0       6       0       0
  3143 ;;Total ram usage:        6 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    5
  3146 ;; This function calls:
  3147 ;;		_getAD
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _getCDS_AD
  3155  0756                     _getCDS_AD:	
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3159                           ;getCDS_AD@channel1 stored from wreg
  3160  0756  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0757  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0758  00DE               	movwf	getCDS_AD@channel1
  3163                           
  3164                           ;CDS_B1.c: 46: char i = 0, j = 0;
  3165  0759  01DC               	clrf	getCDS_AD@i
  3166  075A  01DD               	clrf	getCDS_AD@j
  3167                           
  3168                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  3169  075B  1DF0               	btfss	__CDS,3
  3170  075C  0008               	return
  3171                           
  3172                           ;CDS_B1.c: 48: _CDS.GO = 1;
  3173  075D  14F0               	bsf	__CDS,1
  3174                           
  3175                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  3176  075E  3070               	movlw	112
  3177  075F  00DA               	movwf	??_getCDS_AD
  3178  0760  085A               	movf	??_getCDS_AD,w
  3179  0761  00D7               	movwf	getAD@adcon1
  3180  0762  085E               	movf	getCDS_AD@channel1,w
  3181  0763  158A  279D  118A   	fcall	_getAD
  3182  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0767  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0768  00DB               	movwf	??_getCDS_AD+1
  3185  0769  085B               	movf	??_getCDS_AD+1,w
  3186  076A  00F4               	movwf	__CDS+4
  3187                           
  3188                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  3189  076B  0874               	movf	__CDS+4,w
  3190  076C  00DA               	movwf	??_getCDS_AD
  3191  076D  085A               	movf	??_getCDS_AD,w
  3192  076E  00F2               	movwf	__CDS+2
  3193                           
  3194                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  3195  076F  3070               	movlw	112
  3196  0770  00DA               	movwf	??_getCDS_AD
  3197  0771  085A               	movf	??_getCDS_AD,w
  3198  0772  00D7               	movwf	getAD@adcon1
  3199  0773  0859               	movf	getCDS_AD@channel2,w
  3200  0774  158A  279D         	fcall	_getAD
  3201  0776  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0777  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0778  00DB               	movwf	??_getCDS_AD+1
  3204  0779  085B               	movf	??_getCDS_AD+1,w
  3205  077A  00F4               	movwf	__CDS+4
  3206                           
  3207                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  3208  077B  0874               	movf	__CDS+4,w
  3209  077C  00DA               	movwf	??_getCDS_AD
  3210  077D  085A               	movf	??_getCDS_AD,w
  3211  077E  00F3               	movwf	__CDS+3
  3212  077F  0008               	return
  3213  0780                     __end_of_getCDS_AD:	
  3214                           
  3215                           	psect	text8
  3216  0F9D                     __ptext8:	
  3217 ;; *************** function _getAD *****************
  3218 ;; Defined at:
  3219 ;;		line 427 in file "../src/MCU_B1.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  adcon0          1    wreg     unsigned char 
  3222 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      unsigned char 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3234 ;;      Params:         0       1       0       0
  3235 ;;      Locals:         0       1       0       0
  3236 ;;      Temps:          0       0       0       0
  3237 ;;      Totals:         0       2       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    4
  3241 ;; This function calls:
  3242 ;;		_Timeout_Counter
  3243 ;;		_set_TimeoutCleared
  3244 ;; This function is called by:
  3245 ;;		_getCDS_AD
  3246 ;;		_getTemp_AD
  3247 ;;		_getPIR_AD
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _getAD
  3253  0F9D                     _getAD:	
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3257                           ;getAD@adcon0 stored from wreg
  3258  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0F9F  00D8               	movwf	getAD@adcon0
  3261                           
  3262                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  3263  0FA0  0858               	movf	getAD@adcon0,w
  3264  0FA1  009F               	movwf	31	;volatile
  3265                           
  3266                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  3267  0FA2  0857               	movf	getAD@adcon1,w
  3268  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  3270  0FA5  009F               	movwf	31	;volatile
  3271                           
  3272                           ;MCU_B1.c: 430: GO_nDONE = 1;
  3273  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0FA8  149F               	bsf	31,1	;volatile
  3276                           
  3277                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3278  0FA9  2FAD               	goto	l3873
  3279  0FAA                     l3871:	
  3280                           
  3281                           ;MCU_B1.c: 432: Timeout_Counter();
  3282  0FAA  158A  26F3  158A   	fcall	_Timeout_Counter
  3283  0FAD                     l3873:	
  3284  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0FAF  1C9F               	btfss	31,1	;volatile
  3287  0FB0  2FB3               	goto	l3877
  3288  0FB1  1D24               	btfss	_myMain+4,2
  3289  0FB2  2FAA               	goto	l3871
  3290  0FB3                     l3877:	
  3291                           
  3292                           ;MCU_B1.c: 433: };
  3293                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3294  0FB3  158A  25F2         	fcall	_set_TimeoutCleared
  3295                           
  3296                           ;MCU_B1.c: 435: return ADRES;
  3297  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3298  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3299  0FB7  081E               	movf	30,w	;volatile
  3300  0FB8  0008               	return
  3301  0FB9                     __end_of_getAD:	
  3302                           
  3303                           	psect	text9
  3304  0DF2                     __ptext9:	
  3305 ;; *************** function _set_TimeoutCleared *****************
  3306 ;; Defined at:
  3307 ;;		line 283 in file "../src/Main_B1.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;		None               void
  3314 ;; Registers used:
  3315 ;;		status,2
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3321 ;;      Params:         0       0       0       0
  3322 ;;      Locals:         0       0       0       0
  3323 ;;      Temps:          0       0       0       0
  3324 ;;      Totals:         0       0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    3
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_getAD
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _set_TimeoutCleared
  3337  0DF2                     _set_TimeoutCleared:	
  3338                           
  3339                           ;Main_B1.c: 284: myMain.Timeout = 0;
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _set_TimeoutCleared: [status,2]
  3343  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  3345  0DF4  1124               	bcf	_myMain+4,2
  3346                           
  3347                           ;Main_B1.c: 285: myMain.Timeout_Counter = 0;
  3348  0DF5  01A5               	clrf	_myMain+5
  3349  0DF6  01A6               	clrf	_myMain+6
  3350  0DF7  0008               	return
  3351  0DF8                     __end_of_set_TimeoutCleared:	
  3352                           
  3353                           	psect	text10
  3354  0EF3                     __ptext10:	
  3355 ;; *************** function _Timeout_Counter *****************
  3356 ;; Defined at:
  3357 ;;		line 274 in file "../src/Main_B1.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;		None               void
  3364 ;; Registers used:
  3365 ;;		wreg, status,2
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3371 ;;      Params:         0       0       0       0
  3372 ;;      Locals:         0       0       0       0
  3373 ;;      Temps:          0       0       0       0
  3374 ;;      Totals:         0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    3
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_getAD
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function _Timeout_Counter
  3387  0EF3                     _Timeout_Counter:	
  3388                           
  3389                           ;Main_B1.c: 275: myMain.Timeout_Counter++;
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3393  0EF3  3001               	movlw	1
  3394  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0EF6  07A5               	addwf	_myMain+5,f
  3397  0EF7  1803               	skipnc
  3398  0EF8  0AA6               	incf	_myMain+6,f
  3399  0EF9  3000               	movlw	0
  3400  0EFA  07A6               	addwf	_myMain+6,f
  3401                           
  3402                           ;Main_B1.c: 276: if (myMain.Timeout_Counter == 10000) {
  3403  0EFB  3027               	movlw	39
  3404  0EFC  0626               	xorwf	_myMain+6,w
  3405  0EFD  1D03               	skipz
  3406  0EFE  2F01               	goto	u3795
  3407  0EFF  3010               	movlw	16
  3408  0F00  0625               	xorwf	_myMain+5,w
  3409  0F01                     u3795:	
  3410  0F01  1D03               	skipz
  3411  0F02  0008               	return
  3412                           
  3413                           ;Main_B1.c: 277: myMain.Timeout_Counter = 0;
  3414  0F03  01A5               	clrf	_myMain+5
  3415  0F04  01A6               	clrf	_myMain+6
  3416                           
  3417                           ;Main_B1.c: 278: myMain.Timeout = 1;
  3418  0F05  1524               	bsf	_myMain+4,2
  3419  0F06  0008               	return
  3420  0F07                     __end_of_Timeout_Counter:	
  3421                           
  3422                           	psect	text11
  3423  0E85                     __ptext11:	
  3424 ;; *************** function _WDT_Main *****************
  3425 ;; Defined at:
  3426 ;;		line 1036 in file "../src/MCU_B1.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;		None               void
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, pclath, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3440 ;;      Params:         0       0       0       0
  3441 ;;      Locals:         0       0       0       0
  3442 ;;      Temps:          0       1       0       0
  3443 ;;      Totals:         0       1       0       0
  3444 ;;Total ram usage:        1 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    4
  3447 ;; This function calls:
  3448 ;;		_WDT_Clearing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _WDT_Main
  3456  0E85                     _WDT_Main:	
  3457                           
  3458                           ;MCU_B1.c: 1037: if (WDT.Enable == 1) {
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3462  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0E87  1C2E               	btfss	_WDT,0
  3465  0E88  0008               	return
  3466                           
  3467                           ;MCU_B1.c: 1038: if (WDT.Timer-- > 0) {
  3468  0E89  3001               	movlw	1
  3469  0E8A  02AF               	subwf	_WDT+1,f
  3470  0E8B  082F               	movf	_WDT+1,w
  3471  0E8C  3AFF               	xorlw	255
  3472  0E8D  1903               	skipnz
  3473  0E8E  0008               	return
  3474                           
  3475                           ;MCU_B1.c: 1039: WDT.Timer = 100;
  3476  0E8F  3064               	movlw	100
  3477  0E90  00D7               	movwf	??_WDT_Main
  3478  0E91  0857               	movf	??_WDT_Main,w
  3479  0E92  00AF               	movwf	_WDT+1
  3480                           
  3481                           ;MCU_B1.c: 1040: WDT_Clearing();
  3482  0E93  118A  2002         	fcall	_WDT_Clearing
  3483  0E95  0008               	return
  3484  0E96                     __end_of_WDT_Main:	
  3485                           
  3486                           	psect	text12
  3487  0002                     __ptext12:	
  3488 ;; *************** function _WDT_Clearing *****************
  3489 ;; Defined at:
  3490 ;;		line 1046 in file "../src/MCU_B1.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;		None               void
  3497 ;; Registers used:
  3498 ;;		None
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3504 ;;      Params:         0       0       0       0
  3505 ;;      Locals:         0       0       0       0
  3506 ;;      Temps:          0       0       0       0
  3507 ;;      Totals:         0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    3
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_WDT_Main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _WDT_Clearing
  3520  0002                     _WDT_Clearing:	
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _WDT_Clearing: []
  3524  0002  0064               	clrwdt	;# 
  3525  0003  0008               	return
  3526  0004                     __end_of_WDT_Clearing:	
  3527                           
  3528                           	psect	text13
  3529  0E74                     __ptext13:	
  3530 ;; *************** function _UART_Main *****************
  3531 ;; Defined at:
  3532 ;;		line 753 in file "../src/MCU_B1.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3546 ;;      Params:         0       0       0       0
  3547 ;;      Locals:         0       0       0       0
  3548 ;;      Temps:          0       0       0       0
  3549 ;;      Totals:         0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    5
  3553 ;; This function calls:
  3554 ;;		_UART_Receive
  3555 ;;		_UART_Transmit
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function _UART_Main
  3563  0E74                     _UART_Main:	
  3564                           
  3565                           ;MCU_B1.c: 754: if (UART.RxGO == 1) {
  3566                           
  3567                           ;incstack = 0
  3568                           ; Regs used in _UART_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3569  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0E76  1CCA               	btfss	_UART+11,1
  3572  0E77  2E7F               	goto	l476
  3573                           
  3574                           ;MCU_B1.c: 755: UART.RxGO = 0;
  3575  0E78  10CA               	bcf	_UART+11,1
  3576                           
  3577                           ;MCU_B1.c: 756: UART_Receive();
  3578  0E79  158A  25E3         	fcall	_UART_Receive
  3579                           
  3580                           ;MCU_B1.c: 757: ;;
  3581                           ;MCU_B1.c: 758: RCIE = 1;
  3582  0E7B  1683               	bsf	3,5	;RP0=1, select bank1
  3583  0E7C  1303               	bcf	3,6	;RP1=0, select bank1
  3584  0E7D  168C               	bsf	12,5	;volatile
  3585                           
  3586                           ;MCU_B1.c: 760: } else {
  3587  0E7E  0008               	return
  3588  0E7F                     l476:	
  3589                           
  3590                           ;MCU_B1.c: 761: if (UART.TxGO == 1) {
  3591  0E7F  1C4A               	btfss	_UART+11,0
  3592  0E80  0008               	return
  3593                           
  3594                           ;MCU_B1.c: 762: UART.TxGO = 0;
  3595  0E81  104A               	bcf	_UART+11,0
  3596                           
  3597                           ;MCU_B1.c: 763: UART_Transmit();
  3598  0E82  158A  27B9         	fcall	_UART_Transmit
  3599  0E84  0008               	return
  3600  0E85                     __end_of_UART_Main:	
  3601                           
  3602                           	psect	text14
  3603  0FB9                     __ptext14:	
  3604 ;; *************** function _UART_Transmit *****************
  3605 ;; Defined at:
  3606 ;;		line 768 in file "../src/MCU_B1.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  i               2    1[BANK0 ] int 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;		None               void
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3620 ;;      Params:         0       0       0       0
  3621 ;;      Locals:         0       2       0       0
  3622 ;;      Temps:          0       0       0       0
  3623 ;;      Totals:         0       2       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    4
  3627 ;; This function calls:
  3628 ;;		_putch
  3629 ;; This function is called by:
  3630 ;;		_UART_Main
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           
  3635                           ;psect for function _UART_Transmit
  3636  0FB9                     _UART_Transmit:	
  3637                           
  3638                           ;MCU_B1.c: 771: for (int i = 0; i < 8; i++) {
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _UART_Transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3642  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0FBB  01D8               	clrf	UART_Transmit@i
  3645  0FBC  01D9               	clrf	UART_Transmit@i+1
  3646  0FBD                     L6:	
  3647  0FBD  0859               	movf	UART_Transmit@i+1,w
  3648  0FBE  3A80               	xorlw	128
  3649  0FBF  00FF               	movwf	127
  3650  0FC0  3080               	movlw	128
  3651  0FC1  027F               	subwf	127,w
  3652  0FC2  1D03               	skipz
  3653  0FC3  2FC6               	goto	u4175
  3654  0FC4  3008               	movlw	8
  3655  0FC5  0258               	subwf	UART_Transmit@i,w
  3656  0FC6                     u4175:	
  3657  0FC6  1803               	btfsc	3,0
  3658  0FC7  0008               	return
  3659                           
  3660                           ;MCU_B1.c: 773: putch(UART.Data[i]);
  3661  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0FCA  0858               	movf	UART_Transmit@i,w
  3664  0FCB  3E3F               	addlw	_UART& (0+255)
  3665  0FCC  0084               	movwf	4
  3666  0FCD  1383               	bcf	3,7	;select IRP bank0
  3667  0FCE  0800               	movf	0,w
  3668  0FCF  158A  260E  158A   	fcall	_putch
  3669  0FD2  3001               	movlw	1
  3670  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0FD5  07D8               	addwf	UART_Transmit@i,f
  3673  0FD6  1803               	skipnc
  3674  0FD7  0AD9               	incf	UART_Transmit@i+1,f
  3675  0FD8  3000               	movlw	0
  3676  0FD9  07D9               	addwf	UART_Transmit@i+1,f
  3677  0FDA  2FBD               	goto	L6
  3678  0FDB                     __end_of_UART_Transmit:	
  3679                           
  3680                           	psect	text15
  3681  0E0E                     __ptext15:	
  3682 ;; *************** function _putch *****************
  3683 ;; Defined at:
  3684 ;;		line 834 in file "../src/MCU_B1.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  byte            1    wreg     unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  byte            1    0[BANK0 ] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;		None               void
  3691 ;; Registers used:
  3692 ;;		wreg
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3698 ;;      Params:         0       0       0       0
  3699 ;;      Locals:         0       1       0       0
  3700 ;;      Temps:          0       0       0       0
  3701 ;;      Totals:         0       1       0       0
  3702 ;;Total ram usage:        1 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    3
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_UART_Transmit
  3709 ;;		_getche
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _putch
  3715  0E0E                     _putch:	
  3716                           
  3717                           ;incstack = 0
  3718                           ; Regs used in _putch: [wreg]
  3719                           ;putch@byte stored from wreg
  3720  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0E10  00D7               	movwf	putch@byte
  3723  0E11                     l496:	
  3724                           ;MCU_B1.c: 837: continue;
  3725                           
  3726                           ;MCU_B1.c: 836: while (!TXIF)
  3727                           
  3728  0E11  1E0C               	btfss	12,4	;volatile
  3729  0E12  2E11               	goto	l496
  3730                           
  3731                           ;MCU_B1.c: 838: TXREG = byte;
  3732  0E13  0857               	movf	putch@byte,w
  3733  0E14  0099               	movwf	25	;volatile
  3734  0E15  0008               	return
  3735  0E16                     __end_of_putch:	
  3736                           
  3737                           	psect	text16
  3738  0DE3                     __ptext16:	
  3739 ;; *************** function _UART_Receive *****************
  3740 ;; Defined at:
  3741 ;;		line 787 in file "../src/MCU_B1.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;		None               void
  3748 ;; Registers used:
  3749 ;;		None
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3755 ;;      Params:         0       0       0       0
  3756 ;;      Locals:         0       0       0       0
  3757 ;;      Temps:          0       0       0       0
  3758 ;;      Totals:         0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    3
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_UART_Main
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           
  3770                           ;psect for function _UART_Receive
  3771  0DE3                     _UART_Receive:	
  3772                           
  3773                           ;MCU_B1.c: 799: myMain.Test = 1;
  3774                           
  3775                           ;incstack = 0
  3776                           ; Regs used in _UART_Receive: []
  3777  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0DE5  1720               	bsf	_myMain,6
  3780  0DE6  0008               	return
  3781  0DE7                     __end_of_UART_Receive:	
  3782                           
  3783                           	psect	text17
  3784  0DDC                     __ptext17:	
  3785 ;; *************** function _Temp_Main *****************
  3786 ;; Defined at:
  3787 ;;		line 50 in file "../src/OverTemperature_B1.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;		None               void
  3794 ;; Registers used:
  3795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3801 ;;      Params:         0       0       0       0
  3802 ;;      Locals:         0       0       0       0
  3803 ;;      Temps:          0       0       0       0
  3804 ;;      Totals:         0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    7
  3808 ;; This function calls:
  3809 ;;		_setTemp_Main
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           
  3816                           ;psect for function _Temp_Main
  3817  0DDC                     _Temp_Main:	
  3818                           
  3819                           ;OverTemperature_B1.c: 52: setTemp_Main();
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3823  0DDC  118A  2349         	fcall	_setTemp_Main
  3824  0DDE  0008               	return
  3825  0DDF                     __end_of_Temp_Main:	
  3826                           
  3827                           	psect	text18
  3828  0349                     __ptext18:	
  3829 ;; *************** function _setTemp_Main *****************
  3830 ;; Defined at:
  3831 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3845 ;;      Params:         0       0       0       0
  3846 ;;      Locals:         0       0       0       0
  3847 ;;      Temps:          0       1       0       0
  3848 ;;      Totals:         0       1       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    6
  3852 ;; This function calls:
  3853 ;;		___awdiv
  3854 ;;		_getMain_All_Error_Status
  3855 ;;		_getMain_LightsStatus
  3856 ;; This function is called by:
  3857 ;;		_Temp_Main
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           
  3862                           ;psect for function _setTemp_Main
  3863  0349                     _setTemp_Main:	
  3864                           
  3865                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3866                           
  3867                           ;incstack = 0
  3868                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3869  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3870  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3871  034B  1C33               	btfss	_Temp,0
  3872  034C  2BC9               	goto	l764
  3873                           
  3874                           ;OverTemperature_B1.c: 59: if (Temp.ADtoGO == 0) {
  3875  034D  1933               	btfsc	_Temp,2
  3876  034E  2B60               	goto	l4043
  3877                           
  3878                           ;OverTemperature_B1.c: 60: Temp.Time++;
  3879  034F  3001               	movlw	1
  3880  0350  07B4               	addwf	_Temp+1,f
  3881  0351  1803               	skipnc
  3882  0352  0AB5               	incf	_Temp+2,f
  3883  0353  3000               	movlw	0
  3884  0354  07B5               	addwf	_Temp+2,f
  3885                           
  3886                           ;OverTemperature_B1.c: 61: if (Temp.Time >= 500) {
  3887  0355  3001               	movlw	1
  3888  0356  0235               	subwf	_Temp+2,w
  3889  0357  30F4               	movlw	244
  3890  0358  1903               	skipnz
  3891  0359  0234               	subwf	_Temp+1,w
  3892  035A  1C03               	skipc
  3893  035B  0008               	return
  3894                           
  3895                           ;OverTemperature_B1.c: 62: Temp.Time = 0;
  3896  035C  01B4               	clrf	_Temp+1
  3897  035D  01B5               	clrf	_Temp+2
  3898                           
  3899                           ;OverTemperature_B1.c: 63: Temp.ADtoGO = 1;
  3900  035E  1533               	bsf	_Temp,2
  3901                           
  3902                           ;OverTemperature_B1.c: 64: }
  3903                           ;OverTemperature_B1.c: 65: } else {
  3904  035F  0008               	return
  3905  0360                     l4043:	
  3906                           
  3907                           ;OverTemperature_B1.c: 66: if (getMain_All_Error_Status(2) == 0) {
  3908  0360  3002               	movlw	2
  3909  0361  118A  2689  118A   	fcall	_getMain_All_Error_Status
  3910  0364  3800               	iorlw	0
  3911  0365  1D03               	skipz
  3912  0366  0008               	return
  3913                           
  3914                           ;OverTemperature_B1.c: 67: Temp.Time++;
  3915  0367  3001               	movlw	1
  3916  0368  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0369  1303               	bcf	3,6	;RP1=0, select bank0
  3918  036A  07B4               	addwf	_Temp+1,f
  3919  036B  1803               	skipnc
  3920  036C  0AB5               	incf	_Temp+2,f
  3921  036D  3000               	movlw	0
  3922  036E  07B5               	addwf	_Temp+2,f
  3923                           
  3924                           ;OverTemperature_B1.c: 68: if (Temp.Time >= 5) {
  3925  036F  3000               	movlw	0
  3926  0370  0235               	subwf	_Temp+2,w
  3927  0371  3005               	movlw	5
  3928  0372  1903               	skipnz
  3929  0373  0234               	subwf	_Temp+1,w
  3930  0374  1C03               	skipc
  3931  0375  0008               	return
  3932                           
  3933                           ;OverTemperature_B1.c: 69: Temp.Time = 0;
  3934  0376  01B4               	clrf	_Temp+1
  3935  0377  01B5               	clrf	_Temp+2
  3936                           
  3937                           ;OverTemperature_B1.c: 70: if (Temp.GO == 1) {
  3938  0378  1E33               	btfss	_Temp,4
  3939  0379  0008               	return
  3940                           
  3941                           ;OverTemperature_B1.c: 71: Temp.ADtoGO = 0;
  3942  037A  1133               	bcf	_Temp,2
  3943                           
  3944                           ;OverTemperature_B1.c: 72: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3945  037B  3002               	movlw	2
  3946  037C  00D7               	movwf	___awdiv@divisor
  3947  037D  3000               	movlw	0
  3948  037E  00D8               	movwf	___awdiv@divisor+1
  3949  037F  083A               	movf	_Temp+7,w
  3950  0380  073B               	addwf	_Temp+8,w
  3951  0381  00D9               	movwf	___awdiv@dividend
  3952  0382  01DA               	clrf	___awdiv@dividend+1
  3953  0383  0DDA               	rlf	___awdiv@dividend+1,f
  3954  0384  118A  24AF  118A   	fcall	___awdiv
  3955  0387  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0388  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0389  0857               	movf	?___awdiv,w
  3958  038A  00E0               	movwf	??_setTemp_Main
  3959  038B  0860               	movf	??_setTemp_Main,w
  3960  038C  00B9               	movwf	_Temp+6
  3961                           
  3962                           ;OverTemperature_B1.c: 74: if (getMain_LightsStatus() == 1) {
  3963  038D  118A  2725  118A   	fcall	_getMain_LightsStatus
  3964  0390  3A01               	xorlw	1
  3965  0391  1D03               	skipz
  3966  0392  2B9B               	goto	l4059
  3967                           
  3968                           ;OverTemperature_B1.c: 75: Temp.SafeValue = 140;
  3969  0393  308C               	movlw	140
  3970  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0395  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0396  00E0               	movwf	??_setTemp_Main
  3973  0397  0860               	movf	??_setTemp_Main,w
  3974  0398  00BD               	movwf	_Temp+10
  3975                           
  3976                           ;OverTemperature_B1.c: 76: Temp.DangerValue = 100;
  3977  0399  3064               	movlw	100
  3978  039A  2BA2               	goto	L7
  3979  039B                     l4059:	
  3980                           ;OverTemperature_B1.c: 77: } else {
  3981                           
  3982                           
  3983                           ;OverTemperature_B1.c: 78: Temp.SafeValue = 100;
  3984  039B  3064               	movlw	100
  3985  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3986  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3987  039E  00E0               	movwf	??_setTemp_Main
  3988  039F  0860               	movf	??_setTemp_Main,w
  3989  03A0  00BD               	movwf	_Temp+10
  3990                           
  3991                           ;OverTemperature_B1.c: 79: Temp.DangerValue = 70;
  3992  03A1  3046               	movlw	70
  3993  03A2                     L7:	
  3994  03A2  00E0               	movwf	??_setTemp_Main
  3995  03A3  0860               	movf	??_setTemp_Main,w
  3996  03A4  00BE               	movwf	_Temp+11
  3997                           
  3998                           ;OverTemperature_B1.c: 80: }
  3999                           ;OverTemperature_B1.c: 89: if (Temp.ERROR == 1) {
  4000  03A5  1CB3               	btfss	_Temp,1
  4001  03A6  2BB6               	goto	l4075
  4002                           
  4003                           ;OverTemperature_B1.c: 90: if (Temp.AD >= Temp.SafeValue) {
  4004  03A7  083D               	movf	_Temp+10,w
  4005  03A8  0239               	subwf	_Temp+6,w
  4006  03A9  1C03               	skipc
  4007  03AA  2BC5               	goto	l4085
  4008                           
  4009                           ;OverTemperature_B1.c: 91: Temp.Count++;
  4010  03AB  3001               	movlw	1
  4011  03AC  00E0               	movwf	??_setTemp_Main
  4012  03AD  0860               	movf	??_setTemp_Main,w
  4013  03AE  07B6               	addwf	_Temp+3,f
  4014                           
  4015                           ;OverTemperature_B1.c: 92: if (Temp.Count >= 3) {
  4016  03AF  3003               	movlw	3
  4017  03B0  0236               	subwf	_Temp+3,w
  4018  03B1  1C03               	skipc
  4019  03B2  2BC6               	goto	l777
  4020                           
  4021                           ;OverTemperature_B1.c: 93: Temp.Count = 0;
  4022  03B3  01B6               	clrf	_Temp+3
  4023                           
  4024                           ;OverTemperature_B1.c: 94: Temp.ERROR = 0;
  4025  03B4  10B3               	bcf	_Temp,1
  4026                           
  4027                           ;OverTemperature_B1.c: 96: }
  4028                           ;OverTemperature_B1.c: 97: } else {
  4029                           
  4030                           ;OverTemperature_B1.c: 95: ;;
  4031  03B5  2BC6               	goto	l777
  4032  03B6                     l4075:	
  4033                           ;OverTemperature_B1.c: 99: }
  4034                           ;OverTemperature_B1.c: 100: } else {
  4035                           
  4036                           ;OverTemperature_B1.c: 98: Temp.Count = 0;
  4037                           
  4038                           
  4039                           ;OverTemperature_B1.c: 101: if (Temp.AD <= Temp.DangerValue) {
  4040  03B6  0839               	movf	_Temp+6,w
  4041  03B7  023E               	subwf	_Temp+11,w
  4042  03B8  1C03               	skipc
  4043  03B9  2BC5               	goto	l4085
  4044                           
  4045                           ;OverTemperature_B1.c: 102: Temp.Count++;
  4046  03BA  3001               	movlw	1
  4047  03BB  00E0               	movwf	??_setTemp_Main
  4048  03BC  0860               	movf	??_setTemp_Main,w
  4049  03BD  07B6               	addwf	_Temp+3,f
  4050                           
  4051                           ;OverTemperature_B1.c: 103: if (Temp.Count >= 3) {
  4052  03BE  3003               	movlw	3
  4053  03BF  0236               	subwf	_Temp+3,w
  4054  03C0  1C03               	skipc
  4055  03C1  2BC6               	goto	l777
  4056                           
  4057                           ;OverTemperature_B1.c: 104: Temp.Count = 0;
  4058  03C2  01B6               	clrf	_Temp+3
  4059                           
  4060                           ;OverTemperature_B1.c: 105: Temp.ERROR = 1;
  4061  03C3  14B3               	bsf	_Temp,1
  4062                           
  4063                           ;OverTemperature_B1.c: 106: }
  4064                           ;OverTemperature_B1.c: 107: } else {
  4065  03C4  2BC6               	goto	l777
  4066  03C5                     l4085:	
  4067                           
  4068                           ;OverTemperature_B1.c: 108: Temp.Count = 0;
  4069  03C5  01B6               	clrf	_Temp+3
  4070  03C6                     l777:	
  4071                           
  4072                           ;OverTemperature_B1.c: 109: }
  4073                           ;OverTemperature_B1.c: 110: }
  4074                           ;OverTemperature_B1.c: 111: ;;
  4075                           ;OverTemperature_B1.c: 112: ;;
  4076                           ;OverTemperature_B1.c: 118: Temp.ADH[0] = 0;
  4077  03C6  01BA               	clrf	_Temp+7
  4078                           
  4079                           ;OverTemperature_B1.c: 119: Temp.ADH[1] = 0;
  4080  03C7  01BB               	clrf	_Temp+8
  4081                           
  4082                           ;OverTemperature_B1.c: 120: }
  4083                           ;OverTemperature_B1.c: 121: }
  4084                           ;OverTemperature_B1.c: 122: }
  4085                           ;OverTemperature_B1.c: 123: }
  4086                           ;OverTemperature_B1.c: 124: } else {
  4087  03C8  0008               	return
  4088  03C9                     l764:	
  4089                           
  4090                           ;OverTemperature_B1.c: 125: if (myMain.PowerON == 1) {
  4091  03C9  1C20               	btfss	_myMain,0
  4092  03CA  0008               	return
  4093                           
  4094                           ;OverTemperature_B1.c: 126: Temp.Enable = 1;
  4095  03CB  1433               	bsf	_Temp,0
  4096  03CC  0008               	return
  4097  03CD                     __end_of_setTemp_Main:	
  4098                           
  4099                           	psect	text19
  4100  04AF                     __ptext19:	
  4101 ;; *************** function ___awdiv *****************
  4102 ;; Defined at:
  4103 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  divisor         2    0[BANK0 ] int 
  4106 ;;  dividend        2    2[BANK0 ] int 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  quotient        2    7[BANK0 ] int 
  4109 ;;  sign            1    6[BANK0 ] unsigned char 
  4110 ;;  counter         1    5[BANK0 ] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    0[BANK0 ] int 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4120 ;;      Params:         0       4       0       0
  4121 ;;      Locals:         0       4       0       0
  4122 ;;      Temps:          0       1       0       0
  4123 ;;      Totals:         0       9       0       0
  4124 ;;Total ram usage:        9 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    3
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_setTemp_Main
  4131 ;;		_getPIR_AD
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function ___awdiv
  4137  04AF                     ___awdiv:	
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4141  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4142  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  4143  04B1  01DD               	clrf	___awdiv@sign
  4144  04B2  1FD8               	btfss	___awdiv@divisor+1,7
  4145  04B3  2CBB               	goto	l3831
  4146  04B4  09D7               	comf	___awdiv@divisor,f
  4147  04B5  09D8               	comf	___awdiv@divisor+1,f
  4148  04B6  0AD7               	incf	___awdiv@divisor,f
  4149  04B7  1903               	skipnz
  4150  04B8  0AD8               	incf	___awdiv@divisor+1,f
  4151  04B9  01DD               	clrf	___awdiv@sign
  4152  04BA  0ADD               	incf	___awdiv@sign,f
  4153  04BB                     l3831:	
  4154  04BB  1FDA               	btfss	___awdiv@dividend+1,7
  4155  04BC  2CC6               	goto	l3837
  4156  04BD  09D9               	comf	___awdiv@dividend,f
  4157  04BE  09DA               	comf	___awdiv@dividend+1,f
  4158  04BF  0AD9               	incf	___awdiv@dividend,f
  4159  04C0  1903               	skipnz
  4160  04C1  0ADA               	incf	___awdiv@dividend+1,f
  4161  04C2  3001               	movlw	1
  4162  04C3  00DB               	movwf	??___awdiv
  4163  04C4  085B               	movf	??___awdiv,w
  4164  04C5  06DD               	xorwf	___awdiv@sign,f
  4165  04C6                     l3837:	
  4166  04C6  01DE               	clrf	___awdiv@quotient
  4167  04C7  01DF               	clrf	___awdiv@quotient+1
  4168  04C8  0858               	movf	___awdiv@divisor+1,w
  4169  04C9  0457               	iorwf	___awdiv@divisor,w
  4170  04CA  1903               	skipnz
  4171  04CB  2CFD               	goto	l3859
  4172  04CC  01DC               	clrf	___awdiv@counter
  4173  04CD  0ADC               	incf	___awdiv@counter,f
  4174  04CE                     l3847:	
  4175  04CE  1BD8               	btfsc	___awdiv@divisor+1,7
  4176  04CF  2CDC               	goto	l3849
  4177  04D0  3001               	movlw	1
  4178  04D1                     u3965:	
  4179  04D1  1003               	clrc
  4180  04D2  0DD7               	rlf	___awdiv@divisor,f
  4181  04D3  0DD8               	rlf	___awdiv@divisor+1,f
  4182  04D4  3EFF               	addlw	-1
  4183  04D5  1D03               	skipz
  4184  04D6  2CD1               	goto	u3965
  4185  04D7  3001               	movlw	1
  4186  04D8  00DB               	movwf	??___awdiv
  4187  04D9  085B               	movf	??___awdiv,w
  4188  04DA  07DC               	addwf	___awdiv@counter,f
  4189  04DB  2CCE               	goto	l3847
  4190  04DC                     l3849:	
  4191  04DC  3001               	movlw	1
  4192  04DD                     u3985:	
  4193  04DD  1003               	clrc
  4194  04DE  0DDE               	rlf	___awdiv@quotient,f
  4195  04DF  0DDF               	rlf	___awdiv@quotient+1,f
  4196  04E0  3EFF               	addlw	-1
  4197  04E1  1D03               	skipz
  4198  04E2  2CDD               	goto	u3985
  4199  04E3  0858               	movf	___awdiv@divisor+1,w
  4200  04E4  025A               	subwf	___awdiv@dividend+1,w
  4201  04E5  1D03               	skipz
  4202  04E6  2CE9               	goto	u3995
  4203  04E7  0857               	movf	___awdiv@divisor,w
  4204  04E8  0259               	subwf	___awdiv@dividend,w
  4205  04E9                     u3995:	
  4206  04E9  1C03               	skipc
  4207  04EA  2CF2               	goto	l3855
  4208  04EB  0857               	movf	___awdiv@divisor,w
  4209  04EC  02D9               	subwf	___awdiv@dividend,f
  4210  04ED  0858               	movf	___awdiv@divisor+1,w
  4211  04EE  1C03               	skipc
  4212  04EF  03DA               	decf	___awdiv@dividend+1,f
  4213  04F0  02DA               	subwf	___awdiv@dividend+1,f
  4214  04F1  145E               	bsf	___awdiv@quotient,0
  4215  04F2                     l3855:	
  4216  04F2  3001               	movlw	1
  4217  04F3                     u4005:	
  4218  04F3  1003               	clrc
  4219  04F4  0CD8               	rrf	___awdiv@divisor+1,f
  4220  04F5  0CD7               	rrf	___awdiv@divisor,f
  4221  04F6  3EFF               	addlw	-1
  4222  04F7  1D03               	skipz
  4223  04F8  2CF3               	goto	u4005
  4224  04F9  3001               	movlw	1
  4225  04FA  02DC               	subwf	___awdiv@counter,f
  4226  04FB  1D03               	btfss	3,2
  4227  04FC  2CDC               	goto	l3849
  4228  04FD                     l3859:	
  4229  04FD  085D               	movf	___awdiv@sign,w
  4230  04FE  1903               	btfsc	3,2
  4231  04FF  2D05               	goto	l3863
  4232  0500  09DE               	comf	___awdiv@quotient,f
  4233  0501  09DF               	comf	___awdiv@quotient+1,f
  4234  0502  0ADE               	incf	___awdiv@quotient,f
  4235  0503  1903               	skipnz
  4236  0504  0ADF               	incf	___awdiv@quotient+1,f
  4237  0505                     l3863:	
  4238  0505  085F               	movf	___awdiv@quotient+1,w
  4239  0506  01D8               	clrf	?___awdiv+1
  4240  0507  07D8               	addwf	?___awdiv+1,f
  4241  0508  085E               	movf	___awdiv@quotient,w
  4242  0509  01D7               	clrf	?___awdiv
  4243  050A  07D7               	addwf	?___awdiv,f
  4244  050B  0008               	return
  4245  050C                     __end_of___awdiv:	
  4246                           
  4247                           	psect	text20
  4248  0DD9                     __ptext20:	
  4249 ;; *************** function _Temp_Initialization *****************
  4250 ;; Defined at:
  4251 ;;		line 8 in file "../src/OverTemperature_B1.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;		None               void
  4258 ;; Registers used:
  4259 ;;		status,2, status,0, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4265 ;;      Params:         0       0       0       0
  4266 ;;      Locals:         0       0       0       0
  4267 ;;      Temps:          0       0       0       0
  4268 ;;      Totals:         0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    4
  4272 ;; This function calls:
  4273 ;;		_setTemp_Initialization
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _Temp_Initialization
  4281  0DD9                     _Temp_Initialization:	
  4282                           
  4283                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4287  0DD9  158A  25D2         	fcall	_setTemp_Initialization
  4288  0DDB  0008               	return
  4289  0DDC                     __end_of_Temp_Initialization:	
  4290                           
  4291                           	psect	text21
  4292  0DD2                     __ptext21:	
  4293 ;; *************** function _setTemp_Initialization *****************
  4294 ;; Defined at:
  4295 ;;		line 45 in file "../src/OverTemperature_B1.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;		None               void
  4302 ;; Registers used:
  4303 ;;		None
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4309 ;;      Params:         0       0       0       0
  4310 ;;      Locals:         0       0       0       0
  4311 ;;      Temps:          0       0       0       0
  4312 ;;      Totals:         0       0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    3
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_Temp_Initialization
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _setTemp_Initialization
  4325  0DD2                     _setTemp_Initialization:	
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _setTemp_Initialization: []
  4329  0DD2  0008               	return
  4330  0DD3                     __end_of_setTemp_Initialization:	
  4331                           
  4332                           	psect	text22
  4333  0028                     __ptext22:	
  4334 ;; *************** function _PIR_Main *****************
  4335 ;; Defined at:
  4336 ;;		line 14 in file "../src/PIR_B1.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  error           1   19[BANK0 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;		None               void
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4350 ;;      Params:         0       0       0       0
  4351 ;;      Locals:         0       3       0       0
  4352 ;;      Temps:          0       5       0       0
  4353 ;;      Totals:         0       8       0       0
  4354 ;;Total ram usage:        8 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    6
  4357 ;; This function calls:
  4358 ;;		_getLights_Status
  4359 ;;		_getMain_All_Error_Status
  4360 ;;		_setLED
  4361 ;;		_setLights_Trigger
  4362 ;;		_setMain_Exception
  4363 ;; This function is called by:
  4364 ;;		_main
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _PIR_Main
  4370  0028                     _PIR_Main:	
  4371                           
  4372                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  4373                           
  4374                           ;incstack = 0
  4375                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4376  0028  3000               	movlw	0
  4377  0029  118A  2689  118A   	fcall	_getMain_All_Error_Status
  4378  002C  1283               	bcf	3,5	;RP0=0, select bank0
  4379  002D  1303               	bcf	3,6	;RP1=0, select bank0
  4380  002E  00E3               	movwf	??_PIR_Main
  4381  002F  0863               	movf	??_PIR_Main,w
  4382  0030  00EA               	movwf	PIR_Main@error
  4383                           
  4384                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  4385  0031  1683               	bsf	3,5	;RP0=1, select bank1
  4386  0032  1303               	bcf	3,6	;RP1=0, select bank1
  4387  0033  1C20               	btfss	__PIR^(0+128),0
  4388  0034  2A07               	goto	l833
  4389                           
  4390                           ;PIR_B1.c: 17: if (error == 0) {
  4391  0035  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0036  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0037  08EA               	movf	PIR_Main@error,f
  4394  0038  1D03               	skipz
  4395  0039  2854               	goto	l834
  4396                           
  4397                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  4398  003A  1683               	bsf	3,5	;RP0=1, select bank1
  4399  003B  1303               	bcf	3,6	;RP1=0, select bank1
  4400  003C  1A20               	btfsc	__PIR^(0+128),4
  4401  003D  2886               	goto	l4367
  4402                           
  4403                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  4404  003E  1620               	bsf	__PIR^(0+128),4
  4405                           
  4406                           ;PIR_B1.c: 20: _PIR.Available = 1;
  4407  003F  17A0               	bsf	__PIR^(0+128),7
  4408                           
  4409                           ;PIR_B1.c: 21: setLED(1, 0);
  4410  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4411  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4412  0042  01D9               	clrf	setLED@command
  4413  0043  3001               	movlw	1
  4414  0044  118A  243E  118A   	fcall	_setLED
  4415                           
  4416                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  4417  0047  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0048  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0049  19A0               	btfsc	__PIR^(0+128),3
  4420  004A  2886               	goto	l4367
  4421                           
  4422                           ;PIR_B1.c: 23: setLED(2, 1);
  4423  004B  1283               	bcf	3,5	;RP0=0, select bank0
  4424  004C  1303               	bcf	3,6	;RP1=0, select bank0
  4425  004D  01D9               	clrf	setLED@command
  4426  004E  0AD9               	incf	setLED@command,f
  4427  004F  3002               	movlw	2
  4428  0050  118A  243E  118A   	fcall	_setLED
  4429                           
  4430                           ;PIR_B1.c: 31: }
  4431                           ;PIR_B1.c: 32: }
  4432                           ;PIR_B1.c: 33: } else {
  4433  0053  2886               	goto	l4367
  4434  0054                     l834:	
  4435                           
  4436                           ;PIR_B1.c: 34: if (_PIR.Detect == 1) {
  4437  0054  1683               	bsf	3,5	;RP0=1, select bank1
  4438  0055  1303               	bcf	3,6	;RP1=0, select bank1
  4439  0056  1E20               	btfss	__PIR^(0+128),4
  4440  0057  2886               	goto	l4367
  4441                           
  4442                           ;PIR_B1.c: 35: setMain_Exception(error);
  4443  0058  1283               	bcf	3,5	;RP0=0, select bank0
  4444  0059  1303               	bcf	3,6	;RP1=0, select bank0
  4445  005A  086A               	movf	PIR_Main@error,w
  4446  005B  118A  264A  118A   	fcall	_setMain_Exception
  4447                           
  4448                           ;PIR_B1.c: 37: _PIR.Detect = 0;
  4449  005E  1683               	bsf	3,5	;RP0=1, select bank1
  4450  005F  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0060  1220               	bcf	__PIR^(0+128),4
  4452                           
  4453                           ;PIR_B1.c: 38: _PIR.Available = 0;
  4454  0061  13A0               	bcf	__PIR^(0+128),7
  4455                           
  4456                           ;PIR_B1.c: 39: _PIR.Status = 0;
  4457  0062  1320               	bcf	__PIR^(0+128),6
  4458                           
  4459                           ;PIR_B1.c: 42: _PIR.Time = 0;
  4460  0063  01A5               	clrf	(__PIR^(0+128)+5)
  4461                           
  4462                           ;PIR_B1.c: 43: _PIR.RangeTime1 = 0;
  4463  0064  01CA               	clrf	(__PIR^(0+128)+42)
  4464                           
  4465                           ;PIR_B1.c: 44: _PIR.RangeValue = 15;
  4466  0065  300F               	movlw	15
  4467  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4469  0068  00E3               	movwf	??_PIR_Main
  4470  0069  0863               	movf	??_PIR_Main,w
  4471  006A  1683               	bsf	3,5	;RP0=1, select bank1
  4472  006B  1303               	bcf	3,6	;RP1=0, select bank1
  4473  006C  00CC               	movwf	(__PIR^(0+128)+44)
  4474                           
  4475                           ;PIR_B1.c: 45: _PIR.RangeCount = 0;
  4476  006D  01CB               	clrf	(__PIR^(0+128)+43)
  4477                           
  4478                           ;PIR_B1.c: 47: setLED(1, 1);
  4479  006E  1283               	bcf	3,5	;RP0=0, select bank0
  4480  006F  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0070  01D9               	clrf	setLED@command
  4482  0071  0AD9               	incf	setLED@command,f
  4483  0072  3001               	movlw	1
  4484  0073  118A  243E  118A   	fcall	_setLED
  4485                           
  4486                           ;PIR_B1.c: 48: setLED(2, 0);
  4487  0076  1283               	bcf	3,5	;RP0=0, select bank0
  4488  0077  1303               	bcf	3,6	;RP1=0, select bank0
  4489  0078  01D9               	clrf	setLED@command
  4490  0079  3002               	movlw	2
  4491  007A  118A  243E  118A   	fcall	_setLED
  4492                           
  4493                           ;PIR_B1.c: 50: if (_PIR.OK == 1) {
  4494  007D  1683               	bsf	3,5	;RP0=1, select bank1
  4495  007E  1303               	bcf	3,6	;RP1=0, select bank1
  4496  007F  1DA0               	btfss	__PIR^(0+128),3
  4497  0080  2883               	goto	l839
  4498                           
  4499                           ;PIR_B1.c: 51: _PIR.Count = 0;
  4500  0081  01C1               	clrf	(__PIR^(0+128)+33)
  4501  0082  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4502  0083                     l839:	
  4503                           
  4504                           ;PIR_B1.c: 52: }
  4505                           ;PIR_B1.c: 53: _PIR.CloseTimeSeconds = 0;
  4506  0083  01C6               	clrf	(__PIR^(0+128)+38)
  4507                           
  4508                           ;PIR_B1.c: 54: _PIR.CloseTimeMinutes = 0;
  4509  0084  01C4               	clrf	(__PIR^(0+128)+36)
  4510  0085  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4511  0086                     l4367:	
  4512                           
  4513                           ;PIR_B1.c: 55: }
  4514                           ;PIR_B1.c: 56: }
  4515                           ;PIR_B1.c: 58: if (_PIR.ADtoGO == 0) {
  4516  0086  1683               	bsf	3,5	;RP0=1, select bank1
  4517  0087  1303               	bcf	3,6	;RP1=0, select bank1
  4518  0088  18A0               	btfsc	__PIR^(0+128),1
  4519  0089  2899               	goto	l840
  4520                           
  4521                           ;PIR_B1.c: 59: _PIR.Time++;
  4522  008A  3001               	movlw	1
  4523  008B  1283               	bcf	3,5	;RP0=0, select bank0
  4524  008C  1303               	bcf	3,6	;RP1=0, select bank0
  4525  008D  00E3               	movwf	??_PIR_Main
  4526  008E  0863               	movf	??_PIR_Main,w
  4527  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4528  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4529  0091  07A5               	addwf	(__PIR^(0+128)+5),f
  4530                           
  4531                           ;PIR_B1.c: 60: if (_PIR.Time == 10) {
  4532  0092  0825               	movf	(__PIR^(0+128)+5),w
  4533  0093  3A0A               	xorlw	10
  4534  0094  1D03               	skipz
  4535  0095  29BB               	goto	l4451
  4536                           
  4537                           ;PIR_B1.c: 61: _PIR.Time = 0;
  4538  0096  01A5               	clrf	(__PIR^(0+128)+5)
  4539                           
  4540                           ;PIR_B1.c: 62: _PIR.ADtoGO = 1;
  4541  0097  14A0               	bsf	__PIR^(0+128),1
  4542                           
  4543                           ;PIR_B1.c: 63: }
  4544                           ;PIR_B1.c: 64: } else {
  4545  0098  29BB               	goto	l4451
  4546  0099                     l840:	
  4547                           
  4548                           ;PIR_B1.c: 65: if (_PIR.GO == 1) {
  4549  0099  1D20               	btfss	__PIR^(0+128),2
  4550  009A  29BB               	goto	l4451
  4551                           
  4552                           ;PIR_B1.c: 66: _PIR.GO = 0;
  4553  009B  1120               	bcf	__PIR^(0+128),2
  4554                           
  4555                           ;PIR_B1.c: 67: if (_PIR.Available == 1) {
  4556  009C  1BA0               	btfsc	__PIR^(0+128),7
  4557                           
  4558                           ;PIR_B1.c: 68: if (_PIR.OK == 1) {
  4559  009D  1DA0               	btfss	__PIR^(0+128),3
  4560  009E  29BB               	goto	l4451
  4561                           
  4562                           ;PIR_B1.c: 70: _PIR.Time++;
  4563  009F  3001               	movlw	1
  4564  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4565  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4566  00A2  00E3               	movwf	??_PIR_Main
  4567  00A3  0863               	movf	??_PIR_Main,w
  4568  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  4569  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  4570  00A6  07A5               	addwf	(__PIR^(0+128)+5),f
  4571                           
  4572                           ;PIR_B1.c: 71: if (_PIR.Time == 60) {
  4573  00A7  0825               	movf	(__PIR^(0+128)+5),w
  4574  00A8  3A3C               	xorlw	60
  4575  00A9  1D03               	skipz
  4576  00AA  28DF               	goto	l4417
  4577                           
  4578                           ;PIR_B1.c: 72: _PIR.Time = 0;
  4579  00AB  01A5               	clrf	(__PIR^(0+128)+5)
  4580                           
  4581                           ;PIR_B1.c: 73: if (_PIR.RangeCount >= 90) {
  4582  00AC  305A               	movlw	90
  4583  00AD  024B               	subwf	(__PIR^(0+128)+43),w
  4584  00AE  1C03               	skipc
  4585  00AF  28BB               	goto	l4399
  4586                           
  4587                           ;PIR_B1.c: 74: _PIR.RangeTime1 = 0;
  4588  00B0  01CA               	clrf	(__PIR^(0+128)+42)
  4589                           
  4590                           ;PIR_B1.c: 76: if (_PIR.RangeValue == 15) {
  4591  00B1  084C               	movf	(__PIR^(0+128)+44),w
  4592  00B2  3A0F               	xorlw	15
  4593  00B3  1903               	btfsc	3,2
  4594  00B4  28D0               	goto	L14
  4595                           
  4596                           ;PIR_B1.c: 78: } else if (_PIR.RangeValue == 25) {
  4597                           
  4598                           ;PIR_B1.c: 77: _PIR.RangeValue = 25;
  4599  00B5  084C               	movf	(__PIR^(0+128)+44),w
  4600  00B6  3A19               	xorlw	25
  4601  00B7  1D03               	skipz
  4602  00B8  28DE               	goto	l4415
  4603                           
  4604                           ;PIR_B1.c: 79: _PIR.RangeValue = 35;
  4605  00B9  3023               	movlw	35
  4606  00BA  28D7               	goto	L10
  4607  00BB                     l4399:	
  4608                           ;PIR_B1.c: 80: }
  4609                           ;PIR_B1.c: 81: } else if (_PIR.RangeCount <= 10) {
  4610                           
  4611  00BB  300B               	movlw	11
  4612  00BC  024B               	subwf	(__PIR^(0+128)+43),w
  4613  00BD  1803               	skipnc
  4614  00BE  28DE               	goto	l4415
  4615                           
  4616                           ;PIR_B1.c: 82: _PIR.RangeTime1++;
  4617  00BF  3001               	movlw	1
  4618  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  4619  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  4620  00C2  00E3               	movwf	??_PIR_Main
  4621  00C3  0863               	movf	??_PIR_Main,w
  4622  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  4623  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  4624  00C6  07CA               	addwf	(__PIR^(0+128)+42),f
  4625                           
  4626                           ;PIR_B1.c: 83: if (_PIR.RangeTime1 == 2) {
  4627  00C7  084A               	movf	(__PIR^(0+128)+42),w
  4628  00C8  3A02               	xorlw	2
  4629  00C9  1D03               	skipz
  4630  00CA  28DE               	goto	l4415
  4631                           
  4632                           ;PIR_B1.c: 84: _PIR.RangeTime1 = 0;
  4633  00CB  01CA               	clrf	(__PIR^(0+128)+42)
  4634                           
  4635                           ;PIR_B1.c: 86: if (_PIR.RangeValue == 35) {
  4636  00CC  084C               	movf	(__PIR^(0+128)+44),w
  4637  00CD  3A23               	xorlw	35
  4638  00CE  1D03               	skipz
  4639  00CF  28D2               	goto	l4411
  4640  00D0                     L14:	
  4641                           
  4642                           ;PIR_B1.c: 87: _PIR.RangeValue = 25;
  4643  00D0  3019               	movlw	25
  4644  00D1  28D7               	goto	L10
  4645  00D2                     l4411:	
  4646                           ;PIR_B1.c: 88: } else if (_PIR.RangeValue == 25) {
  4647                           
  4648  00D2  084C               	movf	(__PIR^(0+128)+44),w
  4649  00D3  3A19               	xorlw	25
  4650  00D4  1D03               	skipz
  4651  00D5  28DE               	goto	l4415
  4652                           
  4653                           ;PIR_B1.c: 89: _PIR.RangeValue = 15;
  4654  00D6  300F               	movlw	15
  4655  00D7                     L10:	
  4656  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4657  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  4658  00D9  00E3               	movwf	??_PIR_Main
  4659  00DA  0863               	movf	??_PIR_Main,w
  4660  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  4661  00DC  1303               	bcf	3,6	;RP1=0, select bank1
  4662  00DD  00CC               	movwf	(__PIR^(0+128)+44)
  4663  00DE                     l4415:	
  4664                           
  4665                           ;PIR_B1.c: 90: }
  4666                           ;PIR_B1.c: 91: }
  4667                           ;PIR_B1.c: 92: }
  4668                           ;PIR_B1.c: 93: _PIR.RangeCount = 0;
  4669  00DE  01CB               	clrf	(__PIR^(0+128)+43)
  4670  00DF                     l4417:	
  4671                           
  4672                           ;PIR_B1.c: 94: }
  4673                           ;PIR_B1.c: 97: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4674                           ;PIR_B1.c: 98: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4675  00DF  084C               	movf	(__PIR^(0+128)+44),w
  4676  00E0  074E               	addwf	(__PIR^(0+128)+46),w
  4677  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4678  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4679  00E3  00E3               	movwf	??_PIR_Main
  4680  00E4  01E4               	clrf	??_PIR_Main+1
  4681  00E5  0DE4               	rlf	??_PIR_Main+1,f
  4682  00E6  09E3               	comf	??_PIR_Main,f
  4683  00E7  09E4               	comf	??_PIR_Main+1,f
  4684  00E8  0AE3               	incf	??_PIR_Main,f
  4685  00E9  1903               	skipnz
  4686  00EA  0AE4               	incf	??_PIR_Main+1,f
  4687  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  4688  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  4689  00ED  0826               	movf	(__PIR^(0+128)+6),w
  4690  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4691  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4692  00F0  0763               	addwf	??_PIR_Main,w
  4693  00F1  00E5               	movwf	??_PIR_Main+2
  4694  00F2  0864               	movf	??_PIR_Main+1,w
  4695  00F3  1803               	skipnc
  4696  00F4  0A64               	incf	??_PIR_Main+1,w
  4697  00F5  00E6               	movwf	??_PIR_Main+3
  4698  00F6  0866               	movf	??_PIR_Main+3,w
  4699  00F7  3A80               	xorlw	128
  4700  00F8  3C80               	sublw	128
  4701  00F9  1D03               	skipz
  4702  00FA  28FF               	goto	u4985
  4703  00FB  0865               	movf	??_PIR_Main+2,w
  4704  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  4705  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  4706  00FE  0221               	subwf	(__PIR^(0+128)+1),w
  4707  00FF                     u4985:	
  4708  00FF  1C03               	skipc
  4709  0100  292D               	goto	l4427
  4710  0101  1683               	bsf	3,5	;RP0=1, select bank1
  4711  0102  1303               	bcf	3,6	;RP1=0, select bank1
  4712  0103  084C               	movf	(__PIR^(0+128)+44),w
  4713  0104  074E               	addwf	(__PIR^(0+128)+46),w
  4714  0105  1283               	bcf	3,5	;RP0=0, select bank0
  4715  0106  1303               	bcf	3,6	;RP1=0, select bank0
  4716  0107  00E3               	movwf	??_PIR_Main
  4717  0108  01E4               	clrf	??_PIR_Main+1
  4718  0109  0DE4               	rlf	??_PIR_Main+1,f
  4719  010A  1683               	bsf	3,5	;RP0=1, select bank1
  4720  010B  1303               	bcf	3,6	;RP1=0, select bank1
  4721  010C  0826               	movf	(__PIR^(0+128)+6),w
  4722  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4723  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4724  010F  0763               	addwf	??_PIR_Main,w
  4725  0110  00E5               	movwf	??_PIR_Main+2
  4726  0111  3000               	movlw	0
  4727  0112  1803               	skipnc
  4728  0113  3001               	movlw	1
  4729  0114  0764               	addwf	??_PIR_Main+1,w
  4730  0115  00E6               	movwf	??_PIR_Main+3
  4731  0116  0866               	movf	??_PIR_Main+3,w
  4732  0117  3A80               	xorlw	128
  4733  0118  00E7               	movwf	??_PIR_Main+4
  4734  0119  3080               	movlw	128
  4735  011A  0267               	subwf	??_PIR_Main+4,w
  4736  011B  1D03               	skipz
  4737  011C  2923               	goto	u4995
  4738  011D  1683               	bsf	3,5	;RP0=1, select bank1
  4739  011E  1303               	bcf	3,6	;RP1=0, select bank1
  4740  011F  0821               	movf	(__PIR^(0+128)+1),w
  4741  0120  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0121  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0122  0265               	subwf	??_PIR_Main+2,w
  4744  0123                     u4995:	
  4745  0123  1C03               	skipc
  4746  0124  292D               	goto	l4427
  4747                           
  4748                           ;PIR_B1.c: 99: _PIR.Count = 0;
  4749  0125  1683               	bsf	3,5	;RP0=1, select bank1
  4750  0126  1303               	bcf	3,6	;RP1=0, select bank1
  4751  0127  01C1               	clrf	(__PIR^(0+128)+33)
  4752  0128  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4753                           
  4754                           ;PIR_B1.c: 100: setLED(1, 0);
  4755  0129  1283               	bcf	3,5	;RP0=0, select bank0
  4756  012A  1303               	bcf	3,6	;RP1=0, select bank0
  4757  012B  01D9               	clrf	setLED@command
  4758  012C  29A4               	goto	L15
  4759  012D                     l4427:	
  4760                           ;PIR_B1.c: 102: } else {
  4761                           
  4762                           ;PIR_B1.c: 101: setLED(2, 0);
  4763                           
  4764                           
  4765                           ;PIR_B1.c: 103: _PIR.RangeCount++;
  4766  012D  3001               	movlw	1
  4767  012E  1283               	bcf	3,5	;RP0=0, select bank0
  4768  012F  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0130  00E3               	movwf	??_PIR_Main
  4770  0131  0863               	movf	??_PIR_Main,w
  4771  0132  1683               	bsf	3,5	;RP0=1, select bank1
  4772  0133  1303               	bcf	3,6	;RP1=0, select bank1
  4773  0134  07CB               	addwf	(__PIR^(0+128)+43),f
  4774                           
  4775                           ;PIR_B1.c: 104: _PIR.Count++;
  4776  0135  3001               	movlw	1
  4777  0136  07C1               	addwf	(__PIR^(0+128)+33),f
  4778  0137  1803               	skipnc
  4779  0138  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4780  0139  3000               	movlw	0
  4781  013A  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4782                           
  4783                           ;PIR_B1.c: 106: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4784  013B  1B20               	btfsc	__PIR^(0+128),6
  4785  013C  2941               	goto	l4435
  4786  013D  3002               	movlw	2
  4787  013E  1283               	bcf	3,5	;RP0=0, select bank0
  4788  013F  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0140  2943               	goto	L11
  4790  0141                     l4435:	
  4791  0141  3003               	movlw	3
  4792  0142  1283               	bcf	3,5	;RP0=0, select bank0
  4793  0143                     L11:	
  4794  0143  00E8               	movwf	_PIR_Main$2940
  4795  0144  3000               	movlw	0
  4796  0145  00E9               	movwf	_PIR_Main$2940+1
  4797  0146  0868               	movf	_PIR_Main$2940,w
  4798  0147  00E3               	movwf	??_PIR_Main
  4799  0148  0863               	movf	??_PIR_Main,w
  4800  0149  1683               	bsf	3,5	;RP0=1, select bank1
  4801  014A  1303               	bcf	3,6	;RP1=0, select bank1
  4802  014B  00C3               	movwf	(__PIR^(0+128)+35)
  4803                           
  4804                           ;PIR_B1.c: 108: if (_PIR.Count == _PIR.TriggerValue) {
  4805  014C  0843               	movf	(__PIR^(0+128)+35),w
  4806  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4807  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4808  014F  00E3               	movwf	??_PIR_Main
  4809  0150  01E4               	clrf	??_PIR_Main+1
  4810  0151  1683               	bsf	3,5	;RP0=1, select bank1
  4811  0152  1303               	bcf	3,6	;RP1=0, select bank1
  4812  0153  0842               	movf	((__PIR+1)^(0+128)+33),w
  4813  0154  1283               	bcf	3,5	;RP0=0, select bank0
  4814  0155  1303               	bcf	3,6	;RP1=0, select bank0
  4815  0156  0664               	xorwf	??_PIR_Main+1,w
  4816  0157  1D03               	skipz
  4817  0158  295F               	goto	u5015
  4818  0159  1683               	bsf	3,5	;RP0=1, select bank1
  4819  015A  1303               	bcf	3,6	;RP1=0, select bank1
  4820  015B  0841               	movf	(__PIR^(0+128)+33),w
  4821  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4822  015D  1303               	bcf	3,6	;RP1=0, select bank0
  4823  015E  0663               	xorwf	??_PIR_Main,w
  4824  015F                     u5015:	
  4825  015F  1D03               	skipz
  4826  0160  29BB               	goto	l4451
  4827                           
  4828                           ;PIR_B1.c: 109: _PIR.Count = 0;
  4829  0161  1683               	bsf	3,5	;RP0=1, select bank1
  4830  0162  1303               	bcf	3,6	;RP1=0, select bank1
  4831  0163  01C1               	clrf	(__PIR^(0+128)+33)
  4832  0164  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4833                           
  4834                           ;PIR_B1.c: 110: _PIR.CloseTimeSeconds = 0;
  4835  0165  01C6               	clrf	(__PIR^(0+128)+38)
  4836                           
  4837                           ;PIR_B1.c: 111: _PIR.CloseTimeMinutes = 0;
  4838  0166  01C4               	clrf	(__PIR^(0+128)+36)
  4839  0167  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4840                           
  4841                           ;PIR_B1.c: 112: _PIR.Status = 1;
  4842  0168  1720               	bsf	__PIR^(0+128),6
  4843                           
  4844                           ;PIR_B1.c: 115: if (getLights_Status(1) == 0) {
  4845  0169  3001               	movlw	1
  4846  016A  158A  2652  118A   	fcall	_getLights_Status
  4847  016D  3800               	iorlw	0
  4848  016E  1D03               	skipz
  4849  016F  2978               	goto	l4445
  4850                           
  4851                           ;PIR_B1.c: 116: setLights_Trigger(1, 1);
  4852  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0172  01D9               	clrf	setLights_Trigger@command
  4855  0173  0AD9               	incf	setLights_Trigger@command,f
  4856  0174  3001               	movlw	1
  4857  0175  158A  274A  118A   	fcall	_setLights_Trigger
  4858  0178                     l4445:	
  4859                           
  4860                           ;PIR_B1.c: 117: }
  4861                           ;PIR_B1.c: 120: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4862  0178  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0179  1303               	bcf	3,6	;RP1=0, select bank1
  4864  017A  084C               	movf	(__PIR^(0+128)+44),w
  4865  017B  074E               	addwf	(__PIR^(0+128)+46),w
  4866  017C  1283               	bcf	3,5	;RP0=0, select bank0
  4867  017D  1303               	bcf	3,6	;RP1=0, select bank0
  4868  017E  00E3               	movwf	??_PIR_Main
  4869  017F  01E4               	clrf	??_PIR_Main+1
  4870  0180  0DE4               	rlf	??_PIR_Main+1,f
  4871  0181  09E3               	comf	??_PIR_Main,f
  4872  0182  09E4               	comf	??_PIR_Main+1,f
  4873  0183  0AE3               	incf	??_PIR_Main,f
  4874  0184  1903               	skipnz
  4875  0185  0AE4               	incf	??_PIR_Main+1,f
  4876  0186  1683               	bsf	3,5	;RP0=1, select bank1
  4877  0187  1303               	bcf	3,6	;RP1=0, select bank1
  4878  0188  0826               	movf	(__PIR^(0+128)+6),w
  4879  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4880  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4881  018B  0763               	addwf	??_PIR_Main,w
  4882  018C  00E5               	movwf	??_PIR_Main+2
  4883  018D  0864               	movf	??_PIR_Main+1,w
  4884  018E  1803               	skipnc
  4885  018F  0A64               	incf	??_PIR_Main+1,w
  4886  0190  00E6               	movwf	??_PIR_Main+3
  4887  0191  0866               	movf	??_PIR_Main+3,w
  4888  0192  3A80               	xorlw	128
  4889  0193  00E7               	movwf	??_PIR_Main+4
  4890  0194  3080               	movlw	128
  4891  0195  0267               	subwf	??_PIR_Main+4,w
  4892  0196  1D03               	skipz
  4893  0197  299E               	goto	u5035
  4894  0198  1683               	bsf	3,5	;RP0=1, select bank1
  4895  0199  1303               	bcf	3,6	;RP1=0, select bank1
  4896  019A  0821               	movf	(__PIR^(0+128)+1),w
  4897  019B  1283               	bcf	3,5	;RP0=0, select bank0
  4898  019C  1303               	bcf	3,6	;RP1=0, select bank0
  4899  019D  0265               	subwf	??_PIR_Main+2,w
  4900  019E                     u5035:	
  4901  019E  1C03               	skipc
  4902  019F  29AC               	goto	l4449
  4903                           
  4904                           ;PIR_B1.c: 121: setLED(1, 1);
  4905  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  4906  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  4907  01A2  01D9               	clrf	setLED@command
  4908  01A3  0AD9               	incf	setLED@command,f
  4909  01A4                     L15:	
  4910  01A4  3001               	movlw	1
  4911  01A5  118A  243E  118A   	fcall	_setLED
  4912                           
  4913                           ;PIR_B1.c: 122: setLED(2, 0);
  4914  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  4915  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  4916  01AA  01D9               	clrf	setLED@command
  4917  01AB  29B7               	goto	L12
  4918  01AC                     l4449:	
  4919                           ;PIR_B1.c: 123: } else {
  4920                           
  4921                           
  4922                           ;PIR_B1.c: 124: setLED(1, 0);
  4923  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  4924  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  4925  01AE  01D9               	clrf	setLED@command
  4926  01AF  3001               	movlw	1
  4927  01B0  118A  243E  118A   	fcall	_setLED
  4928                           
  4929                           ;PIR_B1.c: 125: setLED(2, 1);
  4930  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4931  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4932  01B5  01D9               	clrf	setLED@command
  4933  01B6  0AD9               	incf	setLED@command,f
  4934  01B7                     L12:	
  4935  01B7  3002               	movlw	2
  4936  01B8  118A  243E  118A   	fcall	_setLED
  4937  01BB                     l4451:	
  4938                           
  4939                           ;PIR_B1.c: 126: }
  4940                           ;PIR_B1.c: 127: }
  4941                           ;PIR_B1.c: 128: }
  4942                           ;PIR_B1.c: 129: }
  4943                           ;PIR_B1.c: 130: }
  4944                           ;PIR_B1.c: 131: }
  4945                           ;PIR_B1.c: 132: }
  4946                           ;PIR_B1.c: 133: if (_PIR.OK == 0) {
  4947  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  4948  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  4949  01BD  19A0               	btfsc	__PIR^(0+128),3
  4950  01BE  29D7               	goto	l4461
  4951                           
  4952                           ;PIR_B1.c: 134: _PIR.Count++;
  4953  01BF  3001               	movlw	1
  4954  01C0  07C1               	addwf	(__PIR^(0+128)+33),f
  4955  01C1  1803               	skipnc
  4956  01C2  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4957  01C3  3000               	movlw	0
  4958  01C4  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4959                           
  4960                           ;PIR_B1.c: 135: if (_PIR.Count == 3000) {
  4961  01C5  300B               	movlw	11
  4962  01C6  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4963  01C7  1D03               	skipz
  4964  01C8  29CB               	goto	u5055
  4965  01C9  30B8               	movlw	184
  4966  01CA  0641               	xorwf	(__PIR^(0+128)+33),w
  4967  01CB                     u5055:	
  4968  01CB  1D03               	skipz
  4969  01CC  29D7               	goto	l4461
  4970                           
  4971                           ;PIR_B1.c: 136: _PIR.Count = 0;
  4972  01CD  01C1               	clrf	(__PIR^(0+128)+33)
  4973  01CE  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4974                           
  4975                           ;PIR_B1.c: 137: _PIR.OK = 1;
  4976  01CF  15A0               	bsf	__PIR^(0+128),3
  4977                           
  4978                           ;PIR_B1.c: 138: setLED(2, 0);
  4979  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  4980  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  4981  01D2  01D9               	clrf	setLED@command
  4982  01D3  3002               	movlw	2
  4983  01D4  118A  243E  118A   	fcall	_setLED
  4984  01D7                     l4461:	
  4985                           
  4986                           ;PIR_B1.c: 139: }
  4987                           ;PIR_B1.c: 140: }
  4988                           ;PIR_B1.c: 141: if (_PIR.Status == 1) {
  4989  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  4990  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  4991  01D9  1F20               	btfss	__PIR^(0+128),6
  4992  01DA  0008               	return
  4993                           
  4994                           ;PIR_B1.c: 142: _PIR.CloseTimeSeconds++;
  4995  01DB  3001               	movlw	1
  4996  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  4997  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  4998  01DE  00E3               	movwf	??_PIR_Main
  4999  01DF  0863               	movf	??_PIR_Main,w
  5000  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  5001  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  5002  01E2  07C6               	addwf	(__PIR^(0+128)+38),f
  5003                           
  5004                           ;PIR_B1.c: 143: if (_PIR.CloseTimeSeconds == 100) {
  5005  01E3  0846               	movf	(__PIR^(0+128)+38),w
  5006  01E4  3A64               	xorlw	100
  5007  01E5  1D03               	skipz
  5008  01E6  0008               	return
  5009                           
  5010                           ;PIR_B1.c: 144: _PIR.CloseTimeSeconds = 0;
  5011  01E7  01C6               	clrf	(__PIR^(0+128)+38)
  5012                           
  5013                           ;PIR_B1.c: 145: _PIR.CloseTimeMinutes++;
  5014  01E8  3001               	movlw	1
  5015  01E9  07C4               	addwf	(__PIR^(0+128)+36),f
  5016  01EA  1803               	skipnc
  5017  01EB  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  5018  01EC  3000               	movlw	0
  5019  01ED  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  5020                           
  5021                           ;PIR_B1.c: 146: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  5022  01EE  0848               	movf	((__PIR+1)^(0+128)+39),w
  5023  01EF  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  5024  01F0  1D03               	skipz
  5025  01F1  29F4               	goto	u5085
  5026  01F2  0847               	movf	(__PIR^(0+128)+39),w
  5027  01F3  0644               	xorwf	(__PIR^(0+128)+36),w
  5028  01F4                     u5085:	
  5029  01F4  1D03               	skipz
  5030  01F5  0008               	return
  5031                           
  5032                           ;PIR_B1.c: 147: _PIR.CloseTimeMinutes = 0;
  5033  01F6  01C4               	clrf	(__PIR^(0+128)+36)
  5034  01F7  01C5               	clrf	((__PIR+1)^(0+128)+36)
  5035                           
  5036                           ;PIR_B1.c: 148: _PIR.Status = 0;
  5037  01F8  1320               	bcf	__PIR^(0+128),6
  5038                           
  5039                           ;PIR_B1.c: 151: if (getLights_Status(1) == 1) {
  5040  01F9  3001               	movlw	1
  5041  01FA  158A  2652  118A   	fcall	_getLights_Status
  5042  01FD  3A01               	xorlw	1
  5043  01FE  1D03               	skipz
  5044  01FF  0008               	return
  5045                           
  5046                           ;PIR_B1.c: 152: setLights_Trigger(1, 0);
  5047  0200  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0201  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0202  01D9               	clrf	setLights_Trigger@command
  5050  0203  3001               	movlw	1
  5051  0204  158A  274A         	fcall	_setLights_Trigger
  5052                           
  5053                           ;PIR_B1.c: 153: }
  5054                           ;PIR_B1.c: 156: }
  5055                           ;PIR_B1.c: 157: }
  5056                           ;PIR_B1.c: 158: }
  5057                           ;PIR_B1.c: 159: } else {
  5058  0206  0008               	return
  5059  0207                     l833:	
  5060                           
  5061                           ;PIR_B1.c: 160: if (myMain.PowerON == 1) {
  5062  0207  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0208  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0209  1C20               	btfss	_myMain,0
  5065  020A  0008               	return
  5066                           
  5067                           ;PIR_B1.c: 161: _PIR.Enable = 1;
  5068  020B  1683               	bsf	3,5	;RP0=1, select bank1
  5069  020C  1303               	bcf	3,6	;RP1=0, select bank1
  5070  020D  1420               	bsf	__PIR^(0+128),0
  5071  020E  0008               	return
  5072  020F                     __end_of_PIR_Main:	
  5073                           
  5074                           	psect	text23
  5075  064A                     __ptext23:	
  5076 ;; *************** function _setMain_Exception *****************
  5077 ;; Defined at:
  5078 ;;		line 289 in file "../src/Main_B1.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  command         1    wreg     unsigned char 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  command         1   11[BANK0 ] unsigned char 
  5083 ;;  status          1    8[BANK0 ] unsigned char 
  5084 ;;  buz             1    7[BANK0 ] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;		None               void
  5087 ;; Registers used:
  5088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5094 ;;      Params:         0       0       0       0
  5095 ;;      Locals:         0       5       0       0
  5096 ;;      Temps:          0       2       0       0
  5097 ;;      Totals:         0       7       0       0
  5098 ;;Total ram usage:        7 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    5
  5101 ;; This function calls:
  5102 ;;		_getAll_Lights_Line
  5103 ;;		_setLED
  5104 ;;		_setLights_Trigger
  5105 ;; This function is called by:
  5106 ;;		_PIR_Main
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _setMain_Exception
  5112  064A                     _setMain_Exception:	
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5116                           ;setMain_Exception@command stored from wreg
  5117  064A  1283               	bcf	3,5	;RP0=0, select bank0
  5118  064B  1303               	bcf	3,6	;RP1=0, select bank0
  5119  064C  00E2               	movwf	setMain_Exception@command
  5120                           
  5121                           ;Main_B1.c: 290: char status = 0, buz = 0;
  5122  064D  01DF               	clrf	setMain_Exception@status
  5123  064E  01DE               	clrf	setMain_Exception@buz
  5124                           
  5125                           ;Main_B1.c: 292: status = command == 3 ? getAll_Lights_Line() : 255;
  5126  064F  0862               	movf	setMain_Exception@command,w
  5127  0650  3A03               	xorlw	3
  5128  0651  1903               	skipnz
  5129  0652  2E57               	goto	l4015
  5130  0653  30FF               	movlw	255
  5131  0654  00E0               	movwf	_setMain_Exception$2230
  5132  0655  3000               	movlw	0
  5133  0656  2E61               	goto	L16
  5134  0657                     l4015:	
  5135  0657  158A  2663  118A   	fcall	_getAll_Lights_Line
  5136  065A  1283               	bcf	3,5	;RP0=0, select bank0
  5137  065B  1303               	bcf	3,6	;RP1=0, select bank0
  5138  065C  00DC               	movwf	??_setMain_Exception
  5139  065D  01DD               	clrf	??_setMain_Exception+1
  5140  065E  085C               	movf	??_setMain_Exception,w
  5141  065F  00E0               	movwf	_setMain_Exception$2230
  5142  0660  085D               	movf	??_setMain_Exception+1,w
  5143  0661                     L16:	
  5144  0661  00E1               	movwf	_setMain_Exception$2230+1
  5145  0662  0860               	movf	_setMain_Exception$2230,w
  5146  0663  00DC               	movwf	??_setMain_Exception
  5147  0664  085C               	movf	??_setMain_Exception,w
  5148  0665  00DF               	movwf	setMain_Exception@status
  5149                           
  5150                           ;Main_B1.c: 294: if (command == 0) {
  5151  0666  08E2               	movf	setMain_Exception@command,f
  5152  0667  1D03               	skipz
  5153  0668  2E6B               	goto	l4023
  5154                           
  5155                           ;Main_B1.c: 295: setLED(command, 110);
  5156  0669  306E               	movlw	110
  5157  066A  2E76               	goto	L17
  5158  066B                     l4023:	
  5159                           ;Main_B1.c: 296: } else if (command == 5) {
  5160                           
  5161  066B  1283               	bcf	3,5	;RP0=0, select bank0
  5162  066C  1303               	bcf	3,6	;RP1=0, select bank0
  5163  066D  0862               	movf	setMain_Exception@command,w
  5164  066E  3A05               	xorlw	5
  5165  066F  1D03               	skipz
  5166  0670  2E73               	goto	l4027
  5167                           
  5168                           ;Main_B1.c: 297: __nop();
  5169  0671  0000               	nop
  5170                           
  5171                           ;Main_B1.c: 298: } else {
  5172  0672  2E7D               	goto	l4029
  5173  0673                     l4027:	
  5174                           
  5175                           ;Main_B1.c: 299: setLED(command, 111);
  5176  0673  306F               	movlw	111
  5177  0674  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0675  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0676                     L17:	
  5180  0676  00DC               	movwf	??_setMain_Exception
  5181  0677  085C               	movf	??_setMain_Exception,w
  5182  0678  00D9               	movwf	setLED@command
  5183  0679  0862               	movf	setMain_Exception@command,w
  5184  067A  118A  243E  118A   	fcall	_setLED
  5185  067D                     l4029:	
  5186                           
  5187                           ;Main_B1.c: 300: }
  5188                           ;Main_B1.c: 302: if (command != 0) {
  5189  067D  1283               	bcf	3,5	;RP0=0, select bank0
  5190  067E  1303               	bcf	3,6	;RP1=0, select bank0
  5191  067F  0862               	movf	setMain_Exception@command,w
  5192  0680  1903               	btfsc	3,2
  5193  0681  0008               	return
  5194                           
  5195                           ;Main_B1.c: 303: setLights_Trigger(1, 0);
  5196  0682  01D9               	clrf	setLights_Trigger@command
  5197  0683  3001               	movlw	1
  5198  0684  158A  274A         	fcall	_setLights_Trigger
  5199  0686  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0687  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0688  0008               	return
  5202  0689                     __end_of_setMain_Exception:	
  5203                           
  5204                           	psect	text24
  5205  0F4A                     __ptext24:	
  5206 ;; *************** function _setLights_Trigger *****************
  5207 ;; Defined at:
  5208 ;;		line 214 in file "../src/TriacRelay_B1.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  lights          1    wreg     unsigned char 
  5211 ;;  command         1    2[BANK0 ] unsigned char 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  lights          1    4[BANK0 ] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;		None               void
  5216 ;; Registers used:
  5217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5223 ;;      Params:         0       1       0       0
  5224 ;;      Locals:         0       1       0       0
  5225 ;;      Temps:          0       1       0       0
  5226 ;;      Totals:         0       3       0       0
  5227 ;;Total ram usage:        3 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    4
  5230 ;; This function calls:
  5231 ;;		_LightsPointSelect
  5232 ;; This function is called by:
  5233 ;;		_setMain_Exception
  5234 ;;		_PIR_Main
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           
  5239                           ;psect for function _setLights_Trigger
  5240  0F4A                     _setLights_Trigger:	
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5244                           ;setLights_Trigger@lights stored from wreg
  5245  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0F4C  00DB               	movwf	setLights_Trigger@lights
  5248                           
  5249                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  5250  0F4D  085B               	movf	setLights_Trigger@lights,w
  5251  0F4E  158A  262A         	fcall	_LightsPointSelect
  5252                           
  5253                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  5254  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  5256  0F52  0831               	movf	_Lights,w
  5257  0F53  0084               	movwf	4
  5258  0F54  1383               	bcf	3,7	;select IRP bank0
  5259  0F55  1580               	bsf	0,3
  5260                           
  5261                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  5262  0F56  0859               	movf	setLights_Trigger@command,w
  5263  0F57  3A01               	xorlw	1
  5264  0F58  3000               	movlw	0
  5265  0F59  1903               	skipnz
  5266  0F5A  3001               	movlw	1
  5267  0F5B  00DA               	movwf	??_setLights_Trigger
  5268  0F5C  0831               	movf	_Lights,w
  5269  0F5D  0084               	movwf	4
  5270  0F5E  0EDA               	swapf	??_setLights_Trigger,f
  5271  0F5F  0800               	movf	0,w
  5272  0F60  065A               	xorwf	??_setLights_Trigger,w
  5273  0F61  39EF               	andlw	-17
  5274  0F62  065A               	xorwf	??_setLights_Trigger,w
  5275  0F63  0080               	movwf	0
  5276  0F64  0008               	return
  5277  0F65                     __end_of_setLights_Trigger:	
  5278                           
  5279                           	psect	text25
  5280  0E63                     __ptext25:	
  5281 ;; *************** function _getAll_Lights_Line *****************
  5282 ;; Defined at:
  5283 ;;		line 236 in file "../src/TriacRelay_B1.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  line            1    2[BANK0 ] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      unsigned char 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5297 ;;      Params:         0       0       0       0
  5298 ;;      Locals:         0       1       0       0
  5299 ;;      Temps:          0       0       0       0
  5300 ;;      Totals:         0       1       0       0
  5301 ;;Total ram usage:        1 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    4
  5304 ;; This function calls:
  5305 ;;		_LightsPointSelect
  5306 ;; This function is called by:
  5307 ;;		_setMain_Exception
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           
  5312                           ;psect for function _getAll_Lights_Line
  5313  0E63                     _getAll_Lights_Line:	
  5314                           
  5315                           ;TriacRelay_B1.c: 237: char line = 0;
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5319  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0E65  01D9               	clrf	getAll_Lights_Line@line
  5322                           
  5323                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  5324  0E66  3001               	movlw	1
  5325  0E67  158A  262A         	fcall	_LightsPointSelect
  5326                           
  5327                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  5328  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5329  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  5330  0E6B  0A31               	incf	_Lights,w
  5331  0E6C  0084               	movwf	4
  5332  0E6D  3000               	movlw	0
  5333  0E6E  1383               	bcf	3,7	;select IRP bank0
  5334  0E6F  1800               	btfsc	0,0
  5335  0E70  3001               	movlw	1
  5336  0E71  00D9               	movwf	getAll_Lights_Line@line
  5337                           
  5338                           ;TriacRelay_B1.c: 250: return line;
  5339  0E72  0859               	movf	getAll_Lights_Line@line,w
  5340  0E73  0008               	return
  5341  0E74                     __end_of_getAll_Lights_Line:	
  5342                           
  5343                           	psect	text26
  5344  0689                     __ptext26:	
  5345 ;; *************** function _getMain_All_Error_Status *****************
  5346 ;; Defined at:
  5347 ;;		line 376 in file "../src/Main_B1.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  command         1    wreg     unsigned char 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  command         1    6[BANK0 ] unsigned char 
  5352 ;;  status          1    7[BANK0 ] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      unsigned char 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5362 ;;      Params:         0       0       0       0
  5363 ;;      Locals:         0       6       0       0
  5364 ;;      Temps:          0       1       0       0
  5365 ;;      Totals:         0       7       0       0
  5366 ;;Total ram usage:        7 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    4
  5369 ;; This function calls:
  5370 ;;		_getCDS_Status
  5371 ;; This function is called by:
  5372 ;;		_setTemp_Main
  5373 ;;		_PIR_Main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _getMain_All_Error_Status
  5379  0689                     _getMain_All_Error_Status:	
  5380                           
  5381                           ;incstack = 0
  5382                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  5383                           ;getMain_All_Error_Status@command stored from wreg
  5384  0689  1283               	bcf	3,5	;RP0=0, select bank0
  5385  068A  1303               	bcf	3,6	;RP1=0, select bank0
  5386  068B  00DD               	movwf	getMain_All_Error_Status@command
  5387                           
  5388                           ;Main_B1.c: 377: char status = 0;
  5389  068C  01DE               	clrf	getMain_All_Error_Status@status
  5390                           
  5391                           ;Main_B1.c: 388: if (status == 0 && command != 2) {
  5392  068D  08DE               	movf	getMain_All_Error_Status@status,f
  5393  068E  1D03               	skipz
  5394  068F  2EA1               	goto	l3791
  5395  0690  085D               	movf	getMain_All_Error_Status@command,w
  5396  0691  3A02               	xorlw	2
  5397  0692  1903               	skipnz
  5398  0693  2EA1               	goto	l3791
  5399                           
  5400                           ;Main_B1.c: 389: status = Temp.ERROR == 1 ? 2 : 0;
  5401  0694  18B3               	btfsc	_Temp,1
  5402  0695  2E99               	goto	l3789
  5403  0696  01D9               	clrf	_getMain_All_Error_Status$2246
  5404  0697  01DA               	clrf	_getMain_All_Error_Status$2246+1
  5405  0698  2E9D               	goto	l659
  5406  0699                     l3789:	
  5407  0699  3002               	movlw	2
  5408  069A  00D9               	movwf	_getMain_All_Error_Status$2246
  5409  069B  3000               	movlw	0
  5410  069C  00DA               	movwf	_getMain_All_Error_Status$2246+1
  5411  069D                     l659:	
  5412  069D  0859               	movf	_getMain_All_Error_Status$2246,w
  5413  069E  00D8               	movwf	??_getMain_All_Error_Status
  5414  069F  0858               	movf	??_getMain_All_Error_Status,w
  5415  06A0  00DE               	movwf	getMain_All_Error_Status@status
  5416  06A1                     l3791:	
  5417                           
  5418                           ;Main_B1.c: 390: }
  5419                           ;Main_B1.c: 409: if (status == 0 && command != 5) {
  5420  06A1  08DE               	movf	getMain_All_Error_Status@status,f
  5421  06A2  1D03               	skipz
  5422  06A3  2EBD               	goto	l660
  5423  06A4  085D               	movf	getMain_All_Error_Status@command,w
  5424  06A5  3A05               	xorlw	5
  5425  06A6  1903               	skipnz
  5426  06A7  2EBD               	goto	l660
  5427                           
  5428                           ;Main_B1.c: 410: status = getCDS_Status() == 0 ? 5 : 0;
  5429  06A8  158A  2606  118A   	fcall	_getCDS_Status
  5430  06AB  3A00               	xorlw	0
  5431  06AC  1903               	skipnz
  5432  06AD  2EB3               	goto	l3799
  5433  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  5434  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  5435  06B0  01DB               	clrf	_getMain_All_Error_Status$2248
  5436  06B1  01DC               	clrf	_getMain_All_Error_Status$2248+1
  5437  06B2  2EB9               	goto	l664
  5438  06B3                     l3799:	
  5439  06B3  3005               	movlw	5
  5440  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  5441  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  5442  06B6  00DB               	movwf	_getMain_All_Error_Status$2248
  5443  06B7  3000               	movlw	0
  5444  06B8  00DC               	movwf	_getMain_All_Error_Status$2248+1
  5445  06B9                     l664:	
  5446  06B9  085B               	movf	_getMain_All_Error_Status$2248,w
  5447  06BA  00D8               	movwf	??_getMain_All_Error_Status
  5448  06BB  0858               	movf	??_getMain_All_Error_Status,w
  5449  06BC  00DE               	movwf	getMain_All_Error_Status@status
  5450  06BD                     l660:	
  5451                           
  5452                           ;Main_B1.c: 411: }
  5453                           ;Main_B1.c: 413: return status;
  5454  06BD  085E               	movf	getMain_All_Error_Status@status,w
  5455  06BE  0008               	return
  5456  06BF                     __end_of_getMain_All_Error_Status:	
  5457                           
  5458                           	psect	text27
  5459  0E06                     __ptext27:	
  5460 ;; *************** function _getCDS_Status *****************
  5461 ;; Defined at:
  5462 ;;		line 40 in file "../src/CDS_B1.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  status          1    0[BANK0 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      unsigned char 
  5469 ;; Registers used:
  5470 ;;		wreg, status,2
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5476 ;;      Params:         0       0       0       0
  5477 ;;      Locals:         0       1       0       0
  5478 ;;      Temps:          0       0       0       0
  5479 ;;      Totals:         0       1       0       0
  5480 ;;Total ram usage:        1 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    3
  5483 ;; This function calls:
  5484 ;;		Nothing
  5485 ;; This function is called by:
  5486 ;;		_getMain_All_Error_Status
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function _getCDS_Status
  5492  0E06                     _getCDS_Status:	
  5493                           
  5494                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  5495                           
  5496                           ;incstack = 0
  5497                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5498  0E06  3000               	movlw	0
  5499  0E07  1A70               	btfsc	__CDS,4
  5500  0E08  3001               	movlw	1
  5501  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  5502  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  5503  0E0B  00D7               	movwf	getCDS_Status@status
  5504                           
  5505                           ;CDS_B1.c: 42: return status;
  5506  0E0C  0857               	movf	getCDS_Status@status,w
  5507  0E0D  0008               	return
  5508  0E0E                     __end_of_getCDS_Status:	
  5509                           
  5510                           	psect	text28
  5511  0EDF                     __ptext28:	
  5512 ;; *************** function _PIR_Initialization *****************
  5513 ;; Defined at:
  5514 ;;		line 7 in file "../src/PIR_B1.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;		None               void
  5521 ;; Registers used:
  5522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5528 ;;      Params:         0       0       0       0
  5529 ;;      Locals:         0       0       0       0
  5530 ;;      Temps:          0       1       0       0
  5531 ;;      Totals:         0       1       0       0
  5532 ;;Total ram usage:        1 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    5
  5535 ;; This function calls:
  5536 ;;		_setLED
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function _PIR_Initialization
  5544  0EDF                     _PIR_Initialization:	
  5545                           
  5546                           ;PIR_B1.c: 8: setLED(1, 1);
  5547                           
  5548                           ;incstack = 0
  5549                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5550  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  5552  0EE1  01D9               	clrf	setLED@command
  5553  0EE2  0AD9               	incf	setLED@command,f
  5554  0EE3  3001               	movlw	1
  5555  0EE4  118A  243E         	fcall	_setLED
  5556                           
  5557                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  5558  0EE6  300F               	movlw	15
  5559  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5560  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  5561  0EE9  00DB               	movwf	??_PIR_Initialization
  5562  0EEA  085B               	movf	??_PIR_Initialization,w
  5563  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  5564  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  5565  0EED  00CC               	movwf	(__PIR^(0+128)+44)
  5566                           
  5567                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  5568  0EEE  3005               	movlw	5
  5569  0EEF  00C7               	movwf	(__PIR^(0+128)+39)
  5570  0EF0  3000               	movlw	0
  5571  0EF1  00C8               	movwf	(__PIR^(0+128)+40)
  5572  0EF2  0008               	return
  5573  0EF3                     __end_of_PIR_Initialization:	
  5574                           
  5575                           	psect	text29
  5576  0EBA                     __ptext29:	
  5577 ;; *************** function _Mcu_Initialization *****************
  5578 ;; Defined at:
  5579 ;;		line 30 in file "../src/MCU_B1.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;		None
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0, pclath, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5593 ;;      Params:         0       0       0       0
  5594 ;;      Locals:         0       0       0       0
  5595 ;;      Temps:          0       0       0       0
  5596 ;;      Totals:         0       0       0       0
  5597 ;;Total ram usage:        0 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    4
  5600 ;; This function calls:
  5601 ;;		_ADC_Set
  5602 ;;		_Fosc_Set
  5603 ;;		_IO_Set
  5604 ;;		_TMR1_Set
  5605 ;;		_UART_Set
  5606 ;;		_WDT_Set
  5607 ;; This function is called by:
  5608 ;;		_main
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           
  5613                           ;psect for function _Mcu_Initialization
  5614  0EBA                     _Mcu_Initialization:	
  5615                           
  5616                           ;MCU_B1.c: 32: Fosc_Set();
  5617                           
  5618                           ;incstack = 0
  5619                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5620  0EBA  158A  25E7  158A   	fcall	_Fosc_Set
  5621                           
  5622                           ;MCU_B1.c: 34: IO_Set();
  5623  0EBD  158A  271C  158A   	fcall	_IO_Set
  5624                           
  5625                           ;MCU_B1.c: 36: ;;
  5626                           ;MCU_B1.c: 38: TMR1_Set();
  5627  0EC0  158A  2636  158A   	fcall	_TMR1_Set
  5628                           
  5629                           ;MCU_B1.c: 40: ADC_Set();
  5630  0EC3  158A  25FF  158A   	fcall	_ADC_Set
  5631                           
  5632                           ;MCU_B1.c: 42: ;;
  5633                           ;MCU_B1.c: 44: ;;
  5634                           ;MCU_B1.c: 46: ;;
  5635                           ;MCU_B1.c: 48: ;;
  5636                           ;MCU_B1.c: 50: UART_Set();
  5637  0EC6  158A  2731  158A   	fcall	_UART_Set
  5638                           
  5639                           ;MCU_B1.c: 52: WDT_Set();
  5640  0EC9  158A  2644         	fcall	_WDT_Set
  5641  0ECB  0008               	return
  5642  0ECC                     __end_of_Mcu_Initialization:	
  5643                           
  5644                           	psect	text30
  5645  0E44                     __ptext30:	
  5646 ;; *************** function _WDT_Set *****************
  5647 ;; Defined at:
  5648 ;;		line 1022 in file "../src/MCU_B1.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;		None
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;		None               void
  5655 ;; Registers used:
  5656 ;;		wreg
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5662 ;;      Params:         0       0       0       0
  5663 ;;      Locals:         0       0       0       0
  5664 ;;      Temps:          0       1       0       0
  5665 ;;      Totals:         0       1       0       0
  5666 ;;Total ram usage:        1 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    3
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_Mcu_Initialization
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           
  5677                           ;psect for function _WDT_Set
  5678  0E44                     _WDT_Set:	
  5679                           
  5680                           ;MCU_B1.c: 1024: PSA = 1;
  5681                           
  5682                           ;incstack = 0
  5683                           ; Regs used in _WDT_Set: [wreg]
  5684  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  5685  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  5686  0E46  1581               	bsf	1,3	;volatile
  5687                           
  5688                           ;MCU_B1.c: 1025: PS0 = 1;
  5689  0E47  1401               	bsf	1,0	;volatile
  5690                           
  5691                           ;MCU_B1.c: 1026: PS1 = 1;
  5692  0E48  1481               	bsf	1,1	;volatile
  5693                           
  5694                           ;MCU_B1.c: 1027: PS2 = 1;
  5695  0E49  1501               	bsf	1,2	;volatile
  5696                           
  5697                           ;MCU_B1.c: 1031: WDT.Enable = 1;
  5698  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0E4C  142E               	bsf	_WDT,0
  5701                           
  5702                           ;MCU_B1.c: 1032: WDT.Timer = 10;
  5703  0E4D  300A               	movlw	10
  5704  0E4E  00D7               	movwf	??_WDT_Set
  5705  0E4F  0857               	movf	??_WDT_Set,w
  5706  0E50  00AF               	movwf	_WDT+1
  5707  0E51  0008               	return
  5708  0E52                     __end_of_WDT_Set:	
  5709                           
  5710                           	psect	text31
  5711  0F31                     __ptext31:	
  5712 ;; *************** function _UART_Set *****************
  5713 ;; Defined at:
  5714 ;;		line 719 in file "../src/MCU_B1.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;		None               void
  5721 ;; Registers used:
  5722 ;;		wreg
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5728 ;;      Params:         0       0       0       0
  5729 ;;      Locals:         0       0       0       0
  5730 ;;      Temps:          0       0       0       0
  5731 ;;      Totals:         0       0       0       0
  5732 ;;Total ram usage:        0 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    3
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_Mcu_Initialization
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function _UART_Set
  5744  0F31                     _UART_Set:	
  5745                           
  5746                           ;MCU_B1.c: 721: TRISC7 = 1;
  5747                           
  5748                           ;incstack = 0
  5749                           ; Regs used in _UART_Set: [wreg]
  5750  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  5751  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  5752  0F33  1787               	bsf	7,7	;volatile
  5753                           
  5754                           ;MCU_B1.c: 722: TRISC6 = 1;
  5755  0F34  1707               	bsf	7,6	;volatile
  5756                           
  5757                           ;MCU_B1.c: 723: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  5758  0F35  3033               	movlw	51
  5759  0F36  0099               	movwf	25	;volatile
  5760                           
  5761                           ;MCU_B1.c: 728: RCSTA = (0 | 0x90);
  5762  0F37  3090               	movlw	144
  5763  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  5764  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  5765  0F3A  0098               	movwf	24	;volatile
  5766                           
  5767                           ;MCU_B1.c: 729: TXSTA = (0x4 | 0 | 0x20);
  5768  0F3B  3024               	movlw	36
  5769  0F3C  1683               	bsf	3,5	;RP0=1, select bank1
  5770  0F3D  1303               	bcf	3,6	;RP1=0, select bank1
  5771  0F3E  0098               	movwf	24	;volatile
  5772                           
  5773                           ;MCU_B1.c: 730: TX9 = 0;
  5774  0F3F  1318               	bcf	24,6	;volatile
  5775                           
  5776                           ;MCU_B1.c: 731: RX9 = 0;
  5777  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  5778  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  5779  0F42  1318               	bcf	24,6	;volatile
  5780                           
  5781                           ;MCU_B1.c: 732: TXIE = 0;
  5782  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  5783  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  5784  0F45  120C               	bcf	12,4	;volatile
  5785                           
  5786                           ;MCU_B1.c: 733: RCIE = 1;
  5787  0F46  168C               	bsf	12,5	;volatile
  5788                           
  5789                           ;MCU_B1.c: 734: PEIE = 1;
  5790  0F47  170B               	bsf	11,6	;volatile
  5791                           
  5792                           ;MCU_B1.c: 735: GIE = 1;
  5793  0F48  178B               	bsf	11,7	;volatile
  5794  0F49  0008               	return
  5795  0F4A                     __end_of_UART_Set:	
  5796                           
  5797                           	psect	text32
  5798  0E36                     __ptext32:	
  5799 ;; *************** function _TMR1_Set *****************
  5800 ;; Defined at:
  5801 ;;		line 199 in file "../src/MCU_B1.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;		None               void
  5808 ;; Registers used:
  5809 ;;		wreg
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5815 ;;      Params:         0       0       0       0
  5816 ;;      Locals:         0       0       0       0
  5817 ;;      Temps:          0       0       0       0
  5818 ;;      Totals:         0       0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    3
  5822 ;; This function calls:
  5823 ;;		Nothing
  5824 ;; This function is called by:
  5825 ;;		_Mcu_Initialization
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           
  5830                           ;psect for function _TMR1_Set
  5831  0E36                     _TMR1_Set:	
  5832                           
  5833                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5834                           
  5835                           ;incstack = 0
  5836                           ; Regs used in _TMR1_Set: [wreg]
  5837  0E36  3041               	movlw	65
  5838  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  5839  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  5840  0E39  0090               	movwf	16	;volatile
  5841                           
  5842                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5843  0E3A  30FA               	movlw	250
  5844  0E3B  008F               	movwf	15	;volatile
  5845                           
  5846                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5847  0E3C  3038               	movlw	56
  5848  0E3D  008E               	movwf	14	;volatile
  5849                           
  5850                           ;MCU_B1.c: 203: TMR1IE = 1;
  5851  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  5852  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  5853  0E40  140C               	bsf	12,0	;volatile
  5854                           
  5855                           ;MCU_B1.c: 204: PEIE = 1;
  5856  0E41  170B               	bsf	11,6	;volatile
  5857                           
  5858                           ;MCU_B1.c: 205: GIE = 1;
  5859  0E42  178B               	bsf	11,7	;volatile
  5860  0E43  0008               	return
  5861  0E44                     __end_of_TMR1_Set:	
  5862                           
  5863                           	psect	text33
  5864  0F1C                     __ptext33:	
  5865 ;; *************** function _IO_Set *****************
  5866 ;; Defined at:
  5867 ;;		line 60 in file "../src/MCU_B1.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;		None               void
  5874 ;; Registers used:
  5875 ;;		wreg, status,2
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5881 ;;      Params:         0       0       0       0
  5882 ;;      Locals:         0       0       0       0
  5883 ;;      Temps:          0       0       0       0
  5884 ;;      Totals:         0       0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    3
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_Mcu_Initialization
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function _IO_Set
  5897  0F1C                     _IO_Set:	
  5898                           
  5899                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _IO_Set: [wreg+status,2]
  5903  0F1C  302F               	movlw	47
  5904  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  5905  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  5906  0F1F  0085               	movwf	5	;volatile
  5907                           
  5908                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5909  0F20  3001               	movlw	1
  5910  0F21  0086               	movwf	6	;volatile
  5911                           
  5912                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5913  0F22  0187               	clrf	7	;volatile
  5914                           
  5915                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5916  0F23  3007               	movlw	7
  5917  0F24  1683               	bsf	3,5	;RP0=1, select bank3
  5918  0F25  1703               	bsf	3,6	;RP1=1, select bank3
  5919  0F26  0085               	movwf	5	;volatile
  5920                           
  5921                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5922  0F27  3001               	movlw	1
  5923  0F28  0086               	movwf	6	;volatile
  5924                           
  5925                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5926  0F29  30AF               	movlw	175
  5927  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5928  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  5929  0F2C  0085               	movwf	5	;volatile
  5930                           
  5931                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5932  0F2D  3001               	movlw	1
  5933  0F2E  0086               	movwf	6	;volatile
  5934                           
  5935                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5936  0F2F  0187               	clrf	7	;volatile
  5937  0F30  0008               	return
  5938  0F31                     __end_of_IO_Set:	
  5939                           
  5940                           	psect	text34
  5941  0DE7                     __ptext34:	
  5942 ;; *************** function _Fosc_Set *****************
  5943 ;; Defined at:
  5944 ;;		line 56 in file "../src/MCU_B1.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;		None               void
  5951 ;; Registers used:
  5952 ;;		wreg
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5958 ;;      Params:         0       0       0       0
  5959 ;;      Locals:         0       0       0       0
  5960 ;;      Temps:          0       0       0       0
  5961 ;;      Totals:         0       0       0       0
  5962 ;;Total ram usage:        0 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    3
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_Mcu_Initialization
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           
  5973                           ;psect for function _Fosc_Set
  5974  0DE7                     _Fosc_Set:	
  5975                           
  5976                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5977                           
  5978                           ;incstack = 0
  5979                           ; Regs used in _Fosc_Set: [wreg]
  5980  0DE7  303C               	movlw	60
  5981  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  5982  0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  5983  0DEA  0090               	movwf	16	;volatile
  5984  0DEB  0008               	return
  5985  0DEC                     __end_of_Fosc_Set:	
  5986                           
  5987                           	psect	text35
  5988  0DFF                     __ptext35:	
  5989 ;; *************** function _ADC_Set *****************
  5990 ;; Defined at:
  5991 ;;		line 420 in file "../src/MCU_B1.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;		None               void
  5998 ;; Registers used:
  5999 ;;		wreg
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6005 ;;      Params:         0       0       0       0
  6006 ;;      Locals:         0       0       0       0
  6007 ;;      Temps:          0       0       0       0
  6008 ;;      Totals:         0       0       0       0
  6009 ;;Total ram usage:        0 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    3
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_Mcu_Initialization
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _ADC_Set
  6021  0DFF                     _ADC_Set:	
  6022                           
  6023                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _ADC_Set: [wreg]
  6027  0DFF  3073               	movlw	115
  6028  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  6029  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  6030  0E02  009F               	movwf	31	;volatile
  6031                           
  6032                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  6033  0E03  30C1               	movlw	193
  6034  0E04  009D               	movwf	29	;volatile
  6035  0E05  0008               	return
  6036  0E06                     __end_of_ADC_Set:	
  6037                           
  6038                           	psect	text36
  6039  07F5                     __ptext36:	
  6040 ;; *************** function _Lights_Main *****************
  6041 ;; Defined at:
  6042 ;;		line 54 in file "../src/TriacRelay_B1.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;		None               void
  6049 ;; Registers used:
  6050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6056 ;;      Params:         0       0       0       0
  6057 ;;      Locals:         0       0       0       0
  6058 ;;      Temps:          0       0       0       0
  6059 ;;      Totals:         0       0       0       0
  6060 ;;Total ram usage:        0 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    7
  6063 ;; This function calls:
  6064 ;;		_Lights_Close
  6065 ;;		_Lights_Control
  6066 ;;		_setLights_Main
  6067 ;; This function is called by:
  6068 ;;		_main
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           
  6073                           ;psect for function _Lights_Main
  6074  07F5                     _Lights_Main:	
  6075                           
  6076                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  6077                           
  6078                           ;incstack = 0
  6079                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6080  07F5  3001               	movlw	1
  6081  07F6  118A  2780  118A   	fcall	_setLights_Main
  6082                           
  6083                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  6084  07F9  3001               	movlw	1
  6085  07FA  118A  250C  118A   	fcall	_Lights_Control
  6086                           
  6087                           ;TriacRelay_B1.c: 81: Lights_Close();
  6088  07FD  158A  2707         	fcall	_Lights_Close
  6089  07FF  0008               	return
  6090  0800                     __end_of_Lights_Main:	
  6091                           
  6092                           	psect	text37
  6093  0780                     __ptext37:	
  6094 ;; *************** function _setLights_Main *****************
  6095 ;; Defined at:
  6096 ;;		line 93 in file "../src/TriacRelay_B1.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;  lights          1    wreg     unsigned char 
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;  lights          1    6[BANK0 ] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;		None               void
  6103 ;; Registers used:
  6104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6110 ;;      Params:         0       0       0       0
  6111 ;;      Locals:         0       1       0       0
  6112 ;;      Temps:          0       0       0       0
  6113 ;;      Totals:         0       1       0       0
  6114 ;;Total ram usage:        1 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    6
  6117 ;; This function calls:
  6118 ;;		_LightsPointSelect
  6119 ;;		_setLights
  6120 ;; This function is called by:
  6121 ;;		_Lights_Main
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _setLights_Main
  6127  0780                     _setLights_Main:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6131                           ;setLights_Main@lights stored from wreg
  6132  0780  1283               	bcf	3,5	;RP0=0, select bank0
  6133  0781  1303               	bcf	3,6	;RP1=0, select bank0
  6134  0782  00DD               	movwf	setLights_Main@lights
  6135                           
  6136                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  6137  0783  085D               	movf	setLights_Main@lights,w
  6138  0784  158A  262A  118A   	fcall	_LightsPointSelect
  6139                           
  6140                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  6141  0787  1283               	bcf	3,5	;RP0=0, select bank0
  6142  0788  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0789  0831               	movf	_Lights,w
  6144  078A  0084               	movwf	4
  6145  078B  1383               	bcf	3,7	;select IRP bank0
  6146  078C  1880               	btfsc	0,1
  6147  078D  0008               	return
  6148                           
  6149                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  6150  078E  0831               	movf	_Lights,w
  6151  078F  0084               	movwf	4
  6152  0790  1D80               	btfss	0,3
  6153  0791  0008               	return
  6154                           
  6155                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  6156  0792  1932               	btfsc	_LightsControl,2
  6157  0793  0008               	return
  6158                           
  6159                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  6160  0794  0831               	movf	_Lights,w
  6161  0795  0084               	movwf	4
  6162  0796  1180               	bcf	0,3
  6163                           
  6164                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  6165  0797  0831               	movf	_Lights,w
  6166  0798  0084               	movwf	4
  6167  0799  1E00               	btfss	0,4
  6168  079A  2FA1               	goto	l4103
  6169                           
  6170                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  6171  079B  01DA               	clrf	setLights@status
  6172  079C  0ADA               	incf	setLights@status,f
  6173  079D  085D               	movf	setLights_Main@lights,w
  6174  079E  118A  25B9         	fcall	_setLights
  6175                           
  6176                           ;TriacRelay_B1.c: 102: } else {
  6177  07A0  0008               	return
  6178  07A1                     l4103:	
  6179                           
  6180                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  6181  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  6182  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  6183  07A3  01DA               	clrf	setLights@status
  6184  07A4  085D               	movf	setLights_Main@lights,w
  6185  07A5  118A  25B9         	fcall	_setLights
  6186  07A7  0008               	return
  6187  07A8                     __end_of_setLights_Main:	
  6188                           
  6189                           	psect	text38
  6190  05B9                     __ptext38:	
  6191 ;; *************** function _setLights *****************
  6192 ;; Defined at:
  6193 ;;		line 111 in file "../src/TriacRelay_B1.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  lights          1    wreg     unsigned char 
  6196 ;;  status          1    3[BANK0 ] unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  lights          1    5[BANK0 ] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;		None               void
  6201 ;; Registers used:
  6202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6208 ;;      Params:         0       1       0       0
  6209 ;;      Locals:         0       1       0       0
  6210 ;;      Temps:          0       1       0       0
  6211 ;;      Totals:         0       3       0       0
  6212 ;;Total ram usage:        3 bytes
  6213 ;; Hardware stack levels used:    1
  6214 ;; Hardware stack levels required when called:    5
  6215 ;; This function calls:
  6216 ;;		_LightsPointSelect
  6217 ;;		_setLights_Line
  6218 ;; This function is called by:
  6219 ;;		_setLights_Main
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function _setLights
  6225  05B9                     _setLights:	
  6226                           
  6227                           ;incstack = 0
  6228                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6229                           ;setLights@lights stored from wreg
  6230  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  6231  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  6232  05BB  00DC               	movwf	setLights@lights
  6233                           
  6234                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  6235  05BC  085C               	movf	setLights@lights,w
  6236  05BD  158A  262A  118A   	fcall	_LightsPointSelect
  6237                           
  6238                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  6239  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  6240  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  6241  05C2  0831               	movf	_Lights,w
  6242  05C3  0084               	movwf	4
  6243  05C4  1383               	bcf	3,7	;select IRP bank0
  6244  05C5  1480               	bsf	0,1
  6245                           
  6246                           ;TriacRelay_B1.c: 121: if (status == 1) {
  6247  05C6  085A               	movf	setLights@status,w
  6248  05C7  3A01               	xorlw	1
  6249  05C8  1D03               	skipz
  6250  05C9  2DE7               	goto	l3815
  6251                           
  6252                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  6253  05CA  0831               	movf	_Lights,w
  6254  05CB  0084               	movwf	4
  6255  05CC  1900               	btfsc	0,2
  6256  05CD  2E02               	goto	l3819
  6257                           
  6258                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  6259  05CE  0831               	movf	_Lights,w
  6260  05CF  0084               	movwf	4
  6261  05D0  1500               	bsf	0,2
  6262                           
  6263                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  6264  05D1  0A31               	incf	_Lights,w
  6265  05D2  0084               	movwf	4
  6266  05D3  1480               	bsf	0,1
  6267                           
  6268                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  6269  05D4  300A               	movlw	10
  6270  05D5  00DB               	movwf	??_setLights
  6271  05D6  0831               	movf	_Lights,w
  6272  05D7  3E06               	addlw	6
  6273  05D8  0084               	movwf	4
  6274  05D9  085B               	movf	??_setLights,w
  6275  05DA  0080               	movwf	0
  6276                           
  6277                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  6278  05DB  300D               	movlw	13
  6279  05DC  00DB               	movwf	??_setLights
  6280  05DD  0831               	movf	_Lights,w
  6281  05DE  3E04               	addlw	4
  6282  05DF  0084               	movwf	4
  6283  05E0  085B               	movf	??_setLights,w
  6284  05E1  0080               	movwf	0
  6285                           
  6286                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  6287  05E2  085C               	movf	setLights@lights,w
  6288  05E3  158A  26A8  118A   	fcall	_setLights_Line
  6289                           
  6290                           ;TriacRelay_B1.c: 128: }
  6291                           ;TriacRelay_B1.c: 129: } else {
  6292  05E6  2E02               	goto	l3819
  6293  05E7                     l3815:	
  6294                           
  6295                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  6296  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  6297  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  6298  05E9  0831               	movf	_Lights,w
  6299  05EA  0084               	movwf	4
  6300  05EB  1383               	bcf	3,7	;select IRP bank0
  6301  05EC  1D00               	btfss	0,2
  6302  05ED  2E02               	goto	l3819
  6303                           
  6304                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  6305  05EE  0831               	movf	_Lights,w
  6306  05EF  0084               	movwf	4
  6307  05F0  1100               	bcf	0,2
  6308                           
  6309                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  6310  05F1  0A31               	incf	_Lights,w
  6311  05F2  0084               	movwf	4
  6312  05F3  1080               	bcf	0,1
  6313                           
  6314                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  6315  05F4  3004               	movlw	4
  6316  05F5  00DB               	movwf	??_setLights
  6317  05F6  0831               	movf	_Lights,w
  6318  05F7  3E06               	addlw	6
  6319  05F8  0084               	movwf	4
  6320  05F9  085B               	movf	??_setLights,w
  6321  05FA  0080               	movwf	0
  6322                           
  6323                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  6324  05FB  3007               	movlw	7
  6325  05FC  00DB               	movwf	??_setLights
  6326  05FD  0831               	movf	_Lights,w
  6327  05FE  3E04               	addlw	4
  6328  05FF  0084               	movwf	4
  6329  0600  085B               	movf	??_setLights,w
  6330  0601  0080               	movwf	0
  6331  0602                     l3819:	
  6332                           
  6333                           ;TriacRelay_B1.c: 135: }
  6334                           ;TriacRelay_B1.c: 136: }
  6335                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  6336  0602  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0603  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0604  085C               	movf	setLights@lights,w
  6339  0605  3A01               	xorlw	1
  6340  0606  1D03               	skipz
  6341  0607  0008               	return
  6342                           
  6343                           ;TriacRelay_B1.c: 139: RB2 = 1;
  6344  0608  1506               	bsf	6,2	;volatile
  6345  0609  0008               	return
  6346  060A                     __end_of_setLights:	
  6347                           
  6348                           	psect	text39
  6349  0EA8                     __ptext39:	
  6350 ;; *************** function _setLights_Line *****************
  6351 ;; Defined at:
  6352 ;;		line 221 in file "../src/TriacRelay_B1.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  lights          1    wreg     unsigned char 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  lights          1    2[BANK0 ] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;		None               void
  6359 ;; Registers used:
  6360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6366 ;;      Params:         0       0       0       0
  6367 ;;      Locals:         0       1       0       0
  6368 ;;      Temps:          0       0       0       0
  6369 ;;      Totals:         0       1       0       0
  6370 ;;Total ram usage:        1 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    4
  6373 ;; This function calls:
  6374 ;;		_LightsPointSelect
  6375 ;; This function is called by:
  6376 ;;		_setLights
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _setLights_Line
  6382  0EA8                     _setLights_Line:	
  6383                           
  6384                           ;incstack = 0
  6385                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6386                           ;setLights_Line@lights stored from wreg
  6387  0EA8  1283               	bcf	3,5	;RP0=0, select bank0
  6388  0EA9  1303               	bcf	3,6	;RP1=0, select bank0
  6389  0EAA  00D9               	movwf	setLights_Line@lights
  6390                           
  6391                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  6392  0EAB  1683               	bsf	3,5	;RP0=1, select bank1
  6393  0EAC  1303               	bcf	3,6	;RP1=0, select bank1
  6394  0EAD  1050               	bcf	(_Lights1^(0+128)+1),0
  6395                           
  6396                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  6397  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  6398  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  6399  0EB0  0859               	movf	setLights_Line@lights,w
  6400  0EB1  158A  262A         	fcall	_LightsPointSelect
  6401                           
  6402                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  6403  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  6404  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  6405  0EB5  0A31               	incf	_Lights,w
  6406  0EB6  0084               	movwf	4
  6407  0EB7  1383               	bcf	3,7	;select IRP bank0
  6408  0EB8  1400               	bsf	0,0
  6409  0EB9  0008               	return
  6410  0EBA                     __end_of_setLights_Line:	
  6411                           
  6412                           	psect	text40
  6413  050C                     __ptext40:	
  6414 ;; *************** function _Lights_Control *****************
  6415 ;; Defined at:
  6416 ;;		line 155 in file "../src/TriacRelay_B1.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  lights          1    wreg     unsigned char 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  lights          1    4[BANK0 ] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;		None               void
  6423 ;; Registers used:
  6424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6430 ;;      Params:         0       0       0       0
  6431 ;;      Locals:         0       1       0       0
  6432 ;;      Temps:          0       2       0       0
  6433 ;;      Totals:         0       3       0       0
  6434 ;;Total ram usage:        3 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    4
  6437 ;; This function calls:
  6438 ;;		_LightsPointSelect
  6439 ;; This function is called by:
  6440 ;;		_Lights_Main
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           
  6445                           ;psect for function _Lights_Control
  6446  050C                     _Lights_Control:	
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6450                           ;Lights_Control@lights stored from wreg
  6451  050C  1283               	bcf	3,5	;RP0=0, select bank0
  6452  050D  1303               	bcf	3,6	;RP1=0, select bank0
  6453  050E  00DB               	movwf	Lights_Control@lights
  6454                           
  6455                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  6456  050F  085B               	movf	Lights_Control@lights,w
  6457  0510  158A  262A  118A   	fcall	_LightsPointSelect
  6458                           
  6459                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  6460  0513  1283               	bcf	3,5	;RP0=0, select bank0
  6461  0514  1303               	bcf	3,6	;RP1=0, select bank0
  6462  0515  0831               	movf	_Lights,w
  6463  0516  0084               	movwf	4
  6464  0517  1383               	bcf	3,7	;select IRP bank0
  6465  0518  1C80               	btfss	0,1
  6466  0519  0008               	return
  6467                           
  6468                           ;TriacRelay_B1.c: 158: Lights->Time++;
  6469  051A  3001               	movlw	1
  6470  051B  00D9               	movwf	??_Lights_Control
  6471  051C  0831               	movf	_Lights,w
  6472  051D  3E02               	addlw	2
  6473  051E  0084               	movwf	4
  6474  051F  0859               	movf	??_Lights_Control,w
  6475  0520  0780               	addwf	0,f
  6476                           
  6477                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  6478  0521  0831               	movf	_Lights,w
  6479  0522  3E06               	addlw	6
  6480  0523  0084               	movwf	4
  6481  0524  0800               	movf	0,w
  6482  0525  00D9               	movwf	??_Lights_Control
  6483  0526  0831               	movf	_Lights,w
  6484  0527  3E02               	addlw	2
  6485  0528  0084               	movwf	4
  6486  0529  0800               	movf	0,w
  6487  052A  00DA               	movwf	??_Lights_Control+1
  6488  052B  0859               	movf	??_Lights_Control,w
  6489  052C  025A               	subwf	??_Lights_Control+1,w
  6490  052D  1C03               	skipc
  6491  052E  2D46               	goto	l4121
  6492  052F  0831               	movf	_Lights,w
  6493  0530  0084               	movwf	4
  6494  0531  1B80               	btfsc	0,7
  6495  0532  2D46               	goto	l4121
  6496                           
  6497                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  6498  0533  0831               	movf	_Lights,w
  6499  0534  0084               	movwf	4
  6500  0535  1780               	bsf	0,7
  6501                           
  6502                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  6503  0536  085B               	movf	Lights_Control@lights,w
  6504  0537  3A01               	xorlw	1
  6505  0538  1D03               	skipz
  6506  0539  0008               	return
  6507                           
  6508                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  6509  053A  0831               	movf	_Lights,w
  6510  053B  0084               	movwf	4
  6511  053C  1D00               	btfss	0,2
  6512  053D  2D42               	goto	u4470
  6513  053E  1283               	bcf	3,5	;RP0=0, select bank0
  6514  053F  1303               	bcf	3,6	;RP1=0, select bank0
  6515  0540  1605               	bsf	5,4	;volatile
  6516  0541  0008               	return
  6517  0542                     u4470:	
  6518  0542  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0543  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0544  1205               	bcf	5,4	;volatile
  6521                           
  6522                           ;TriacRelay_B1.c: 164: }
  6523                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  6524  0545  0008               	return
  6525  0546                     l4121:	
  6526  0546  0831               	movf	_Lights,w
  6527  0547  3E04               	addlw	4
  6528  0548  0084               	movwf	4
  6529  0549  1383               	bcf	3,7	;select IRP bank0
  6530  054A  0800               	movf	0,w
  6531  054B  00D9               	movwf	??_Lights_Control
  6532  054C  0831               	movf	_Lights,w
  6533  054D  3E02               	addlw	2
  6534  054E  0084               	movwf	4
  6535  054F  0800               	movf	0,w
  6536  0550  00DA               	movwf	??_Lights_Control+1
  6537  0551  0859               	movf	??_Lights_Control,w
  6538  0552  025A               	subwf	??_Lights_Control+1,w
  6539  0553  1C03               	skipc
  6540  0554  0008               	return
  6541                           
  6542                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  6543  0555  0831               	movf	_Lights,w
  6544  0556  3E02               	addlw	2
  6545  0557  0084               	movwf	4
  6546  0558  0180               	clrf	0
  6547                           
  6548                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  6549  0559  0831               	movf	_Lights,w
  6550  055A  0084               	movwf	4
  6551  055B  1080               	bcf	0,1
  6552                           
  6553                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  6554  055C  0831               	movf	_Lights,w
  6555  055D  0084               	movwf	4
  6556  055E  1380               	bcf	0,7
  6557                           
  6558                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  6559  055F  085B               	movf	Lights_Control@lights,w
  6560  0560  3A01               	xorlw	1
  6561  0561  1D03               	skipz
  6562  0562  0008               	return
  6563                           
  6564                           ;TriacRelay_B1.c: 188: RB2 = 0;
  6565  0563  1106               	bcf	6,2	;volatile
  6566  0564  0008               	return
  6567  0565                     __end_of_Lights_Control:	
  6568                           
  6569                           	psect	text41
  6570  0F07                     __ptext41:	
  6571 ;; *************** function _Lights_Close *****************
  6572 ;; Defined at:
  6573 ;;		line 85 in file "../src/TriacRelay_B1.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;		None               void
  6580 ;; Registers used:
  6581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6587 ;;      Params:         0       0       0       0
  6588 ;;      Locals:         0       0       0       0
  6589 ;;      Temps:          0       1       0       0
  6590 ;;      Totals:         0       1       0       0
  6591 ;;Total ram usage:        1 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    6
  6594 ;; This function calls:
  6595 ;;		_getMain_LightsStatus
  6596 ;; This function is called by:
  6597 ;;		_Lights_Main
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function _Lights_Close
  6603  0F07                     _Lights_Close:	
  6604                           
  6605                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6609  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0F09  1C32               	btfss	_LightsControl,0
  6612  0F0A  0008               	return
  6613                           
  6614                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  6615  0F0B  1032               	bcf	_LightsControl,0
  6616                           
  6617                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  6618  0F0C  118A  2725         	fcall	_getMain_LightsStatus
  6619  0F0E  3800               	iorlw	0
  6620  0F0F  3000               	movlw	0
  6621  0F10  1D03               	skipz
  6622  0F11  3001               	movlw	1
  6623  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  6624  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  6625  0F14  00E0               	movwf	??_Lights_Close
  6626  0F15  0DE0               	rlf	??_Lights_Close,f
  6627  0F16  0832               	movf	_LightsControl,w
  6628  0F17  0660               	xorwf	??_Lights_Close,w
  6629  0F18  39FD               	andlw	-3
  6630  0F19  0660               	xorwf	??_Lights_Close,w
  6631  0F1A  00B2               	movwf	_LightsControl
  6632  0F1B  0008               	return
  6633  0F1C                     __end_of_Lights_Close:	
  6634                           
  6635                           	psect	text42
  6636  0725                     __ptext42:	
  6637 ;; *************** function _getMain_LightsStatus *****************
  6638 ;; Defined at:
  6639 ;;		line 349 in file "../src/Main_B1.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  i               2    6[BANK0 ] int 
  6644 ;;  status          1    8[BANK0 ] unsigned char 
  6645 ;;  count           1    5[BANK0 ] unsigned char 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      unsigned char 
  6648 ;; Registers used:
  6649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6655 ;;      Params:         0       0       0       0
  6656 ;;      Locals:         0       4       0       0
  6657 ;;      Temps:          0       1       0       0
  6658 ;;      Totals:         0       5       0       0
  6659 ;;Total ram usage:        5 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    5
  6662 ;; This function calls:
  6663 ;;		_getLights_Status
  6664 ;; This function is called by:
  6665 ;;		_setTemp_Main
  6666 ;;		_Lights_Close
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _getMain_LightsStatus
  6672  0725                     _getMain_LightsStatus:	
  6673                           
  6674                           ;Main_B1.c: 350: char status = 0, count = 0;
  6675                           
  6676                           ;incstack = 0
  6677                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6678  0725  1283               	bcf	3,5	;RP0=0, select bank0
  6679  0726  1303               	bcf	3,6	;RP1=0, select bank0
  6680  0727  01DF               	clrf	getMain_LightsStatus@status
  6681  0728  01DC               	clrf	getMain_LightsStatus@count
  6682                           
  6683                           ;Main_B1.c: 353: count = 1;
  6684  0729  01DC               	clrf	getMain_LightsStatus@count
  6685  072A  0ADC               	incf	getMain_LightsStatus@count,f
  6686                           
  6687                           ;Main_B1.c: 362: for (int i = 0; i < count; i++) {
  6688  072B  01DD               	clrf	getMain_LightsStatus@i
  6689  072C  01DE               	clrf	getMain_LightsStatus@i+1
  6690  072D                     l3773:	
  6691  072D  085E               	movf	getMain_LightsStatus@i+1,w
  6692  072E  3A80               	xorlw	128
  6693  072F  00DB               	movwf	??_getMain_LightsStatus
  6694  0730  3080               	movlw	128
  6695  0731  025B               	subwf	??_getMain_LightsStatus,w
  6696  0732  1D03               	skipz
  6697  0733  2F36               	goto	u3825
  6698  0734  085C               	movf	getMain_LightsStatus@count,w
  6699  0735  025D               	subwf	getMain_LightsStatus@i,w
  6700  0736                     u3825:	
  6701  0736  1803               	btfsc	3,0
  6702  0737  2F52               	goto	l3775
  6703                           
  6704                           ;Main_B1.c: 363: if (status == 0) {
  6705  0738  1283               	bcf	3,5	;RP0=0, select bank0
  6706  0739  1303               	bcf	3,6	;RP1=0, select bank0
  6707  073A  08DF               	movf	getMain_LightsStatus@status,f
  6708  073B  1D03               	skipz
  6709  073C  2F4B               	goto	l3771
  6710                           
  6711                           ;Main_B1.c: 365: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  6712  073D  085D               	movf	getMain_LightsStatus@i,w
  6713  073E  3E01               	addlw	1
  6714  073F  158A  2652  118A   	fcall	_getLights_Status
  6715  0742  3A01               	xorlw	1
  6716  0743  3000               	movlw	0
  6717  0744  1903               	skipnz
  6718  0745  3001               	movlw	1
  6719  0746  1283               	bcf	3,5	;RP0=0, select bank0
  6720  0747  1303               	bcf	3,6	;RP1=0, select bank0
  6721  0748  00DB               	movwf	??_getMain_LightsStatus
  6722  0749  085B               	movf	??_getMain_LightsStatus,w
  6723  074A  00DF               	movwf	getMain_LightsStatus@status
  6724  074B                     l3771:	
  6725  074B  3001               	movlw	1
  6726  074C  07DD               	addwf	getMain_LightsStatus@i,f
  6727  074D  1803               	skipnc
  6728  074E  0ADE               	incf	getMain_LightsStatus@i+1,f
  6729  074F  3000               	movlw	0
  6730  0750  07DE               	addwf	getMain_LightsStatus@i+1,f
  6731  0751  2F2D               	goto	l3773
  6732  0752                     l3775:	
  6733                           
  6734                           ;Main_B1.c: 370: }
  6735                           ;Main_B1.c: 371: }
  6736                           ;Main_B1.c: 372: return status;
  6737  0752  1283               	bcf	3,5	;RP0=0, select bank0
  6738  0753  1303               	bcf	3,6	;RP1=0, select bank0
  6739  0754  085F               	movf	getMain_LightsStatus@status,w
  6740  0755  0008               	return
  6741  0756                     __end_of_getMain_LightsStatus:	
  6742                           
  6743                           	psect	text43
  6744  0E52                     __ptext43:	
  6745 ;; *************** function _getLights_Status *****************
  6746 ;; Defined at:
  6747 ;;		line 207 in file "../src/TriacRelay_B1.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  lights          1    wreg     unsigned char 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  lights          1    2[BANK0 ] unsigned char 
  6752 ;;  status          1    3[BANK0 ] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      unsigned char 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6762 ;;      Params:         0       0       0       0
  6763 ;;      Locals:         0       2       0       0
  6764 ;;      Temps:          0       0       0       0
  6765 ;;      Totals:         0       2       0       0
  6766 ;;Total ram usage:        2 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    4
  6769 ;; This function calls:
  6770 ;;		_LightsPointSelect
  6771 ;; This function is called by:
  6772 ;;		_getMain_LightsStatus
  6773 ;;		_PIR_Main
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           
  6778                           ;psect for function _getLights_Status
  6779  0E52                     _getLights_Status:	
  6780                           
  6781                           ;incstack = 0
  6782                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6783                           ;getLights_Status@lights stored from wreg
  6784  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  6785  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  6786  0E54  00D9               	movwf	getLights_Status@lights
  6787                           
  6788                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  6789  0E55  0859               	movf	getLights_Status@lights,w
  6790  0E56  158A  262A         	fcall	_LightsPointSelect
  6791                           
  6792                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  6793  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  6794  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  6795  0E5A  0831               	movf	_Lights,w
  6796  0E5B  0084               	movwf	4
  6797  0E5C  3000               	movlw	0
  6798  0E5D  1383               	bcf	3,7	;select IRP bank0
  6799  0E5E  1900               	btfsc	0,2
  6800  0E5F  3001               	movlw	1
  6801  0E60  00DA               	movwf	getLights_Status@status
  6802                           
  6803                           ;TriacRelay_B1.c: 210: return status;
  6804  0E61  085A               	movf	getLights_Status@status,w
  6805  0E62  0008               	return
  6806  0E63                     __end_of_getLights_Status:	
  6807                           
  6808                           	psect	text44
  6809  0DDF                     __ptext44:	
  6810 ;; *************** function _Lights_Initialization *****************
  6811 ;; Defined at:
  6812 ;;		line 34 in file "../src/TriacRelay_B1.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;		None               void
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0, pclath, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6826 ;;      Params:         0       0       0       0
  6827 ;;      Locals:         0       0       0       0
  6828 ;;      Temps:          0       0       0       0
  6829 ;;      Totals:         0       0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    5
  6833 ;; This function calls:
  6834 ;;		_setLights_Initialization
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           
  6841                           ;psect for function _Lights_Initialization
  6842  0DDF                     _Lights_Initialization:	
  6843                           
  6844                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  6845                           
  6846                           ;incstack = 0
  6847                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6848  0DDF  3001               	movlw	1
  6849  0DE0  158A  25F8         	fcall	_setLights_Initialization
  6850  0DE2  0008               	return
  6851  0DE3                     __end_of_Lights_Initialization:	
  6852                           
  6853                           	psect	text45
  6854  0DF8                     __ptext45:	
  6855 ;; *************** function _setLights_Initialization *****************
  6856 ;; Defined at:
  6857 ;;		line 49 in file "../src/TriacRelay_B1.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  lights          1    wreg     unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  lights          1    2[BANK0 ] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;		None               void
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, pclath, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6871 ;;      Params:         0       0       0       0
  6872 ;;      Locals:         0       1       0       0
  6873 ;;      Temps:          0       0       0       0
  6874 ;;      Totals:         0       1       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    4
  6878 ;; This function calls:
  6879 ;;		_LightsPointSelect
  6880 ;; This function is called by:
  6881 ;;		_Lights_Initialization
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function _setLights_Initialization
  6887  0DF8                     _setLights_Initialization:	
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6891                           ;setLights_Initialization@lights stored from wreg
  6892  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  6894  0DFA  00D9               	movwf	setLights_Initialization@lights
  6895                           
  6896                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6897  0DFB  0859               	movf	setLights_Initialization@lights,w
  6898  0DFC  158A  262A         	fcall	_LightsPointSelect
  6899  0DFE  0008               	return
  6900  0DFF                     __end_of_setLights_Initialization:	
  6901                           
  6902                           	psect	text46
  6903  0E2A                     __ptext46:	
  6904 ;; *************** function _LightsPointSelect *****************
  6905 ;; Defined at:
  6906 ;;		line 10 in file "../src/TriacRelay_B1.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  lights          1    wreg     unsigned char 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  lights          1    1[BANK0 ] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;		None               void
  6913 ;; Registers used:
  6914 ;;		wreg
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6920 ;;      Params:         0       0       0       0
  6921 ;;      Locals:         0       1       0       0
  6922 ;;      Temps:          0       1       0       0
  6923 ;;      Totals:         0       2       0       0
  6924 ;;Total ram usage:        2 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    3
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_setLights_Initialization
  6931 ;;		_setLights_Main
  6932 ;;		_setLights
  6933 ;;		_Lights_Control
  6934 ;;		_getLights_Status
  6935 ;;		_setLights_Trigger
  6936 ;;		_setLights_Line
  6937 ;;		_getAll_Lights_Line
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           
  6942                           ;psect for function _LightsPointSelect
  6943  0E2A                     _LightsPointSelect:	
  6944                           
  6945                           ;incstack = 0
  6946                           ; Regs used in _LightsPointSelect: [wreg]
  6947                           ;LightsPointSelect@lights stored from wreg
  6948  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6950  0E2C  00D8               	movwf	LightsPointSelect@lights
  6951                           
  6952                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  6953  0E2D  0858               	movf	LightsPointSelect@lights,w
  6954  0E2E  3A01               	xorlw	1
  6955  0E2F  1D03               	skipz
  6956  0E30  0008               	return
  6957                           
  6958                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  6959  0E31  30CF               	movlw	_Lights1& (0+255)
  6960  0E32  00D7               	movwf	??_LightsPointSelect
  6961  0E33  0857               	movf	??_LightsPointSelect,w
  6962  0E34  00B1               	movwf	_Lights
  6963  0E35  0008               	return
  6964  0E36                     __end_of_LightsPointSelect:	
  6965                           
  6966                           	psect	text47
  6967  0DD6                     __ptext47:	
  6968 ;; *************** function _LED_Main *****************
  6969 ;; Defined at:
  6970 ;;		line 47 in file "../src/LED_B1.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;		None               void
  6977 ;; Registers used:
  6978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6984 ;;      Params:         0       0       0       0
  6985 ;;      Locals:         0       0       0       0
  6986 ;;      Temps:          0       0       0       0
  6987 ;;      Totals:         0       0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; Hardware stack levels required when called:    6
  6991 ;; This function calls:
  6992 ;;		_setPIRLED_Main
  6993 ;; This function is called by:
  6994 ;;		_main
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           
  6999                           ;psect for function _LED_Main
  7000  0DD6                     _LED_Main:	
  7001                           
  7002                           ;LED_B1.c: 50: setPIRLED_Main();
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7006  0DD6  118A  23CD         	fcall	_setPIRLED_Main
  7007  0DD8  0008               	return
  7008  0DD9                     __end_of_LED_Main:	
  7009                           
  7010                           	psect	text48
  7011  03CD                     __ptext48:	
  7012 ;; *************** function _setPIRLED_Main *****************
  7013 ;; Defined at:
  7014 ;;		line 253 in file "../src/LED_B1.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;		None
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  count           1    5[BANK0 ] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;		None               void
  7021 ;; Registers used:
  7022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7028 ;;      Params:         0       0       0       0
  7029 ;;      Locals:         0       1       0       0
  7030 ;;      Temps:          0       1       0       0
  7031 ;;      Totals:         0       2       0       0
  7032 ;;Total ram usage:        2 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; Hardware stack levels required when called:    5
  7035 ;; This function calls:
  7036 ;;		_setLED
  7037 ;; This function is called by:
  7038 ;;		_LED_Main
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           
  7043                           ;psect for function _setPIRLED_Main
  7044  03CD                     _setPIRLED_Main:	
  7045                           
  7046                           ;LED_B1.c: 254: char count;
  7047                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  7048                           
  7049                           ;incstack = 0
  7050                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7051  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  7052  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  7053  03CF  1C27               	btfss	_PIRLED,0
  7054  03D0  0008               	return
  7055                           
  7056                           ;LED_B1.c: 256: PIRLED.Time++;
  7057  03D1  3001               	movlw	1
  7058  03D2  07A9               	addwf	_PIRLED+2,f
  7059  03D3  1803               	skipnc
  7060  03D4  0AAA               	incf	_PIRLED+3,f
  7061  03D5  3000               	movlw	0
  7062  03D6  07AA               	addwf	_PIRLED+3,f
  7063                           
  7064                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  7065  03D7  3000               	movlw	0
  7066  03D8  022A               	subwf	_PIRLED+3,w
  7067  03D9  3032               	movlw	50
  7068  03DA  1903               	skipnz
  7069  03DB  0229               	subwf	_PIRLED+2,w
  7070  03DC  1C03               	skipc
  7071  03DD  0008               	return
  7072                           
  7073                           ;LED_B1.c: 258: PIRLED.Time = 0;
  7074  03DE  01A9               	clrf	_PIRLED+2
  7075  03DF  01AA               	clrf	_PIRLED+3
  7076                           
  7077                           ;LED_B1.c: 259: setLED(1, 0);
  7078  03E0  01D9               	clrf	setLED@command
  7079  03E1  3001               	movlw	1
  7080  03E2  118A  243E  118A   	fcall	_setLED
  7081                           
  7082                           ;LED_B1.c: 260: setLED(2, 0);
  7083  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  7084  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  7085  03E7  01D9               	clrf	setLED@command
  7086  03E8  3002               	movlw	2
  7087  03E9  118A  243E  118A   	fcall	_setLED
  7088                           
  7089                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  7090  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  7091  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  7092  03EE  1CA7               	btfss	_PIRLED,1
  7093  03EF  2BF4               	goto	l3903
  7094                           
  7095                           ;LED_B1.c: 262: count = 4;
  7096  03F0  3004               	movlw	4
  7097  03F1  00DB               	movwf	??_setPIRLED_Main
  7098  03F2  085B               	movf	??_setPIRLED_Main,w
  7099  03F3  00DC               	movwf	setPIRLED_Main@count
  7100  03F4                     l3903:	
  7101                           
  7102                           ;LED_B1.c: 263: }
  7103                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  7104  03F4  1D27               	btfss	_PIRLED,2
  7105  03F5  2BFA               	goto	l3907
  7106                           
  7107                           ;LED_B1.c: 265: count = 6;
  7108  03F6  3006               	movlw	6
  7109  03F7  00DB               	movwf	??_setPIRLED_Main
  7110  03F8  085B               	movf	??_setPIRLED_Main,w
  7111  03F9  00DC               	movwf	setPIRLED_Main@count
  7112  03FA                     l3907:	
  7113                           
  7114                           ;LED_B1.c: 266: }
  7115                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  7116  03FA  1DA7               	btfss	_PIRLED,3
  7117  03FB  2C00               	goto	l3911
  7118                           
  7119                           ;LED_B1.c: 268: count = 8;
  7120  03FC  3008               	movlw	8
  7121  03FD  00DB               	movwf	??_setPIRLED_Main
  7122  03FE  085B               	movf	??_setPIRLED_Main,w
  7123  03FF  00DC               	movwf	setPIRLED_Main@count
  7124  0400                     l3911:	
  7125                           
  7126                           ;LED_B1.c: 269: }
  7127                           ;LED_B1.c: 270: PIRLED.Count++;
  7128  0400  3001               	movlw	1
  7129  0401  00DB               	movwf	??_setPIRLED_Main
  7130  0402  085B               	movf	??_setPIRLED_Main,w
  7131  0403  07A8               	addwf	_PIRLED+1,f
  7132                           
  7133                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7134  0404  0828               	movf	_PIRLED+1,w
  7135  0405  3A01               	xorlw	1
  7136  0406  1903               	skipnz
  7137  0407  2C0C               	goto	l3917
  7138  0408  0828               	movf	_PIRLED+1,w
  7139  0409  3A02               	xorlw	2
  7140  040A  1D03               	skipz
  7141  040B  2C20               	goto	l3921
  7142  040C                     l3917:	
  7143                           
  7144                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7145  040C  1003               	clrc
  7146  040D  1E27               	btfss	_PIRLED,4
  7147  040E  1403               	setc
  7148  040F  1C03               	btfss	3,0
  7149  0410  2C15               	goto	u4120
  7150  0411  1283               	bcf	3,5	;RP0=0, select bank0
  7151  0412  1303               	bcf	3,6	;RP1=0, select bank0
  7152  0413  1627               	bsf	_PIRLED,4
  7153  0414  2C18               	goto	l3919
  7154  0415                     u4120:	
  7155  0415  1283               	bcf	3,5	;RP0=0, select bank0
  7156  0416  1303               	bcf	3,6	;RP1=0, select bank0
  7157  0417  1227               	bcf	_PIRLED,4
  7158  0418                     l3919:	
  7159                           
  7160                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  7161  0418  3000               	movlw	0
  7162  0419  1A27               	btfsc	_PIRLED,4
  7163  041A  3001               	movlw	1
  7164  041B  00D9               	movwf	setLED@command
  7165  041C  3002               	movlw	2
  7166  041D  118A  243E         	fcall	_setLED
  7167                           
  7168                           ;LED_B1.c: 274: } else {
  7169  041F  0008               	return
  7170  0420                     l3921:	
  7171                           
  7172                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7173  0420  1003               	clrc
  7174  0421  1283               	bcf	3,5	;RP0=0, select bank0
  7175  0422  1303               	bcf	3,6	;RP1=0, select bank0
  7176  0423  1E27               	btfss	_PIRLED,4
  7177  0424  1403               	setc
  7178  0425  1C03               	btfss	3,0
  7179  0426  2C2B               	goto	u4140
  7180  0427  1283               	bcf	3,5	;RP0=0, select bank0
  7181  0428  1303               	bcf	3,6	;RP1=0, select bank0
  7182  0429  1627               	bsf	_PIRLED,4
  7183  042A  2C2E               	goto	l3923
  7184  042B                     u4140:	
  7185  042B  1283               	bcf	3,5	;RP0=0, select bank0
  7186  042C  1303               	bcf	3,6	;RP1=0, select bank0
  7187  042D  1227               	bcf	_PIRLED,4
  7188  042E                     l3923:	
  7189                           
  7190                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  7191  042E  3000               	movlw	0
  7192  042F  1A27               	btfsc	_PIRLED,4
  7193  0430  3001               	movlw	1
  7194  0431  00D9               	movwf	setLED@command
  7195  0432  3001               	movlw	1
  7196  0433  118A  243E  118A   	fcall	_setLED
  7197                           
  7198                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  7199  0436  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0437  1303               	bcf	3,6	;RP1=0, select bank0
  7201  0438  0828               	movf	_PIRLED+1,w
  7202  0439  065C               	xorwf	setPIRLED_Main@count,w
  7203  043A  1D03               	skipz
  7204  043B  0008               	return
  7205                           
  7206                           ;LED_B1.c: 278: PIRLED.Count = 0;
  7207  043C  01A8               	clrf	_PIRLED+1
  7208  043D  0008               	return
  7209  043E                     __end_of_setPIRLED_Main:	
  7210                           
  7211                           	psect	text49
  7212  0E1E                     __ptext49:	
  7213 ;; *************** function _LED_Initialization *****************
  7214 ;; Defined at:
  7215 ;;		line 31 in file "../src/LED_B1.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7229 ;;      Params:         0       0       0       0
  7230 ;;      Locals:         0       0       0       0
  7231 ;;      Temps:          0       0       0       0
  7232 ;;      Totals:         0       0       0       0
  7233 ;;Total ram usage:        0 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    6
  7236 ;; This function calls:
  7237 ;;		_setLED_Initialization
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _LED_Initialization
  7245  0E1E                     _LED_Initialization:	
  7246                           
  7247                           ;LED_B1.c: 33: setLED_Initialization(1);
  7248                           
  7249                           ;incstack = 0
  7250                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7251  0E1E  3001               	movlw	1
  7252  0E1F  158A  2696  158A   	fcall	_setLED_Initialization
  7253                           
  7254                           ;LED_B1.c: 36: setLED_Initialization(2);
  7255  0E22  3002               	movlw	2
  7256  0E23  158A  2696  158A   	fcall	_setLED_Initialization
  7257                           
  7258                           ;LED_B1.c: 42: setLED_Initialization(99);
  7259  0E26  3063               	movlw	99
  7260  0E27  158A  2696         	fcall	_setLED_Initialization
  7261  0E29  0008               	return
  7262  0E2A                     __end_of_LED_Initialization:	
  7263                           
  7264                           	psect	text50
  7265  0E96                     __ptext50:	
  7266 ;; *************** function _setLED_Initialization *****************
  7267 ;; Defined at:
  7268 ;;		line 69 in file "../src/LED_B1.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  led             1    wreg     unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  led             1    4[BANK0 ] unsigned char 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;		None               void
  7275 ;; Registers used:
  7276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7282 ;;      Params:         0       0       0       0
  7283 ;;      Locals:         0       1       0       0
  7284 ;;      Temps:          0       0       0       0
  7285 ;;      Totals:         0       1       0       0
  7286 ;;Total ram usage:        1 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    5
  7289 ;; This function calls:
  7290 ;;		_LedPointSelect
  7291 ;;		_setLED
  7292 ;; This function is called by:
  7293 ;;		_LED_Initialization
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function _setLED_Initialization
  7299  0E96                     _setLED_Initialization:	
  7300                           
  7301                           ;incstack = 0
  7302                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7303                           ;setLED_Initialization@led stored from wreg
  7304  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  7305  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  7306  0E98  00DB               	movwf	setLED_Initialization@led
  7307                           
  7308                           ;LED_B1.c: 70: LedPointSelect(led);
  7309  0E99  085B               	movf	setLED_Initialization@led,w
  7310  0E9A  158A  2781  158A   	fcall	_LedPointSelect
  7311                           
  7312                           ;LED_B1.c: 71: LED->Enable = 1;
  7313  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  7314  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  7315  0E9F  0830               	movf	_LED,w
  7316  0EA0  0084               	movwf	4
  7317  0EA1  1383               	bcf	3,7	;select IRP bank0
  7318  0EA2  1400               	bsf	0,0
  7319                           
  7320                           ;LED_B1.c: 72: setLED(led, 0);
  7321  0EA3  01D9               	clrf	setLED@command
  7322  0EA4  085B               	movf	setLED_Initialization@led,w
  7323  0EA5  118A  243E         	fcall	_setLED
  7324  0EA7  0008               	return
  7325  0EA8                     __end_of_setLED_Initialization:	
  7326                           
  7327                           	psect	text51
  7328  043E                     __ptext51:	
  7329 ;; *************** function _setLED *****************
  7330 ;; Defined at:
  7331 ;;		line 76 in file "../src/LED_B1.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  led             1    wreg     unsigned char 
  7334 ;;  command         1    2[BANK0 ] unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  led             1    3[BANK0 ] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;		None               void
  7339 ;; Registers used:
  7340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7346 ;;      Params:         0       1       0       0
  7347 ;;      Locals:         0       1       0       0
  7348 ;;      Temps:          0       0       0       0
  7349 ;;      Totals:         0       2       0       0
  7350 ;;Total ram usage:        2 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    4
  7353 ;; This function calls:
  7354 ;;		_LedPointSelect
  7355 ;; This function is called by:
  7356 ;;		_setLED_Initialization
  7357 ;;		_setPIRLED_Main
  7358 ;;		_setMain_Exception
  7359 ;;		_PIR_Initialization
  7360 ;;		_PIR_Main
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           
  7365                           ;psect for function _setLED
  7366  043E                     _setLED:	
  7367                           
  7368                           ;incstack = 0
  7369                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7370                           ;setLED@led stored from wreg
  7371  043E  1283               	bcf	3,5	;RP0=0, select bank0
  7372  043F  1303               	bcf	3,6	;RP1=0, select bank0
  7373  0440  00DA               	movwf	setLED@led
  7374                           
  7375                           ;LED_B1.c: 77: LedPointSelect(led);
  7376  0441  085A               	movf	setLED@led,w
  7377  0442  158A  2781  118A   	fcall	_LedPointSelect
  7378                           
  7379                           ;LED_B1.c: 78: if (command == 0) {
  7380  0445  1283               	bcf	3,5	;RP0=0, select bank0
  7381  0446  1303               	bcf	3,6	;RP1=0, select bank0
  7382  0447  08D9               	movf	setLED@command,f
  7383  0448  1D03               	skipz
  7384  0449  2C57               	goto	l3667
  7385                           
  7386                           ;LED_B1.c: 80: if (led == 1) {
  7387  044A  085A               	movf	setLED@led,w
  7388  044B  3A01               	xorlw	1
  7389  044C  1D03               	skipz
  7390  044D  2C4F               	goto	l3659
  7391                           
  7392                           ;LED_B1.c: 84: RB4 = 1;
  7393  044E  1606               	bsf	6,4	;volatile
  7394  044F                     l3659:	
  7395                           
  7396                           ;LED_B1.c: 86: }
  7397                           ;LED_B1.c: 89: if (led == 2) {
  7398  044F  085A               	movf	setLED@led,w
  7399  0450  3A02               	xorlw	2
  7400  0451  1903               	btfsc	3,2
  7401                           
  7402                           ;LED_B1.c: 93: RB5 = 1;
  7403  0452  1686               	bsf	6,5	;volatile
  7404                           
  7405                           ;LED_B1.c: 95: }
  7406                           ;LED_B1.c: 107: if (led == 99) {
  7407  0453  085A               	movf	setLED@led,w
  7408  0454  3A63               	xorlw	99
  7409  0455  1903               	btfsc	3,2
  7410                           
  7411                           ;LED_B1.c: 111: RB3 = 1;
  7412  0456  1586               	bsf	6,3	;volatile
  7413  0457                     l3667:	
  7414                           
  7415                           ;LED_B1.c: 113: }
  7416                           ;LED_B1.c: 115: }
  7417                           ;LED_B1.c: 116: if (command == 1) {
  7418  0457  0859               	movf	setLED@command,w
  7419  0458  3A01               	xorlw	1
  7420  0459  1D03               	skipz
  7421  045A  2C68               	goto	l3681
  7422                           
  7423                           ;LED_B1.c: 118: if (led == 1) {
  7424  045B  085A               	movf	setLED@led,w
  7425  045C  3A01               	xorlw	1
  7426  045D  1D03               	skipz
  7427  045E  2C60               	goto	l3673
  7428                           
  7429                           ;LED_B1.c: 122: RB4 = 0;
  7430  045F  1206               	bcf	6,4	;volatile
  7431  0460                     l3673:	
  7432                           
  7433                           ;LED_B1.c: 124: }
  7434                           ;LED_B1.c: 127: if (led == 2) {
  7435  0460  085A               	movf	setLED@led,w
  7436  0461  3A02               	xorlw	2
  7437  0462  1903               	btfsc	3,2
  7438                           
  7439                           ;LED_B1.c: 131: RB5 = 0;
  7440  0463  1286               	bcf	6,5	;volatile
  7441                           
  7442                           ;LED_B1.c: 133: }
  7443                           ;LED_B1.c: 145: if (led == 99) {
  7444  0464  085A               	movf	setLED@led,w
  7445  0465  3A63               	xorlw	99
  7446  0466  1903               	btfsc	3,2
  7447                           
  7448                           ;LED_B1.c: 149: RB3 = 0;
  7449  0467  1186               	bcf	6,3	;volatile
  7450  0468                     l3681:	
  7451                           
  7452                           ;LED_B1.c: 151: }
  7453                           ;LED_B1.c: 153: }
  7454                           ;LED_B1.c: 154: if (command == 10) {
  7455  0468  0859               	movf	setLED@command,w
  7456  0469  3A0A               	xorlw	10
  7457  046A  1D03               	skipz
  7458  046B  2C83               	goto	l3699
  7459                           
  7460                           ;LED_B1.c: 155: LED->GO = 0;
  7461  046C  0830               	movf	_LED,w
  7462  046D  0084               	movwf	4
  7463  046E  1383               	bcf	3,7	;select IRP bank0
  7464  046F  1080               	bcf	0,1
  7465                           
  7466                           ;LED_B1.c: 156: LED->Time = 0;
  7467  0470  0A30               	incf	_LED,w
  7468  0471  0084               	movwf	4
  7469  0472  0180               	clrf	0
  7470  0473  0A84               	incf	4,f
  7471  0474  0180               	clrf	0
  7472                           
  7473                           ;LED_B1.c: 158: if (led == 1) {
  7474  0475  085A               	movf	setLED@led,w
  7475  0476  3A01               	xorlw	1
  7476  0477  1D03               	skipz
  7477  0478  2C7B               	goto	l3691
  7478                           
  7479                           ;LED_B1.c: 162: RB4 = 1;
  7480  0479  1606               	bsf	6,4	;volatile
  7481                           
  7482                           ;LED_B1.c: 164: }
  7483  047A  2C7F               	goto	l3695
  7484  047B                     l3691:	
  7485                           
  7486                           ;LED_B1.c: 167: else if (led == 2) {
  7487  047B  085A               	movf	setLED@led,w
  7488  047C  3A02               	xorlw	2
  7489  047D  1903               	btfsc	3,2
  7490                           
  7491                           ;LED_B1.c: 171: RB5 = 1;
  7492  047E  1686               	bsf	6,5	;volatile
  7493  047F                     l3695:	
  7494                           
  7495                           ;LED_B1.c: 173: }
  7496                           ;LED_B1.c: 185: if (led == 99) {
  7497  047F  085A               	movf	setLED@led,w
  7498  0480  3A63               	xorlw	99
  7499  0481  1903               	btfsc	3,2
  7500                           
  7501                           ;LED_B1.c: 189: RB3 = 1;
  7502  0482  1586               	bsf	6,3	;volatile
  7503  0483                     l3699:	
  7504                           
  7505                           ;LED_B1.c: 191: }
  7506                           ;LED_B1.c: 193: }
  7507                           ;LED_B1.c: 194: if (command == 11) {
  7508  0483  0859               	movf	setLED@command,w
  7509  0484  3A0B               	xorlw	11
  7510  0485  1D03               	skipz
  7511  0486  2C8B               	goto	l3703
  7512                           
  7513                           ;LED_B1.c: 195: LED->GO = 1;
  7514  0487  0830               	movf	_LED,w
  7515  0488  0084               	movwf	4
  7516  0489  1383               	bcf	3,7	;select IRP bank0
  7517  048A  1480               	bsf	0,1
  7518  048B                     l3703:	
  7519                           
  7520                           ;LED_B1.c: 196: }
  7521                           ;LED_B1.c: 198: if (command == 111) {
  7522  048B  0859               	movf	setLED@command,w
  7523  048C  3A6F               	xorlw	111
  7524  048D  1D03               	skipz
  7525  048E  2CA9               	goto	l3729
  7526                           
  7527                           ;LED_B1.c: 199: PIRLED.Count = 0;
  7528  048F  01A8               	clrf	_PIRLED+1
  7529                           
  7530                           ;LED_B1.c: 200: PIRLED.Time = 0;
  7531  0490  01A9               	clrf	_PIRLED+2
  7532  0491  01AA               	clrf	_PIRLED+3
  7533                           
  7534                           ;LED_B1.c: 201: PIRLED.status = 0;
  7535  0492  1227               	bcf	_PIRLED,4
  7536                           
  7537                           ;LED_B1.c: 202: PIRLED.GO = 1;
  7538  0493  1427               	bsf	_PIRLED,0
  7539                           
  7540                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  7541  0494  10A7               	bcf	_PIRLED,1
  7542                           
  7543                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  7544  0495  1127               	bcf	_PIRLED,2
  7545                           
  7546                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  7547  0496  11A7               	bcf	_PIRLED,3
  7548                           
  7549                           ;LED_B1.c: 206: if (led == 1) {
  7550  0497  085A               	movf	setLED@led,w
  7551  0498  3A01               	xorlw	1
  7552  0499  1D03               	skipz
  7553  049A  2C9D               	goto	l3721
  7554                           
  7555                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  7556  049B  14A7               	bsf	_PIRLED,1
  7557                           
  7558                           ;LED_B1.c: 208: } else if (led == 2) {
  7559  049C  0008               	return
  7560  049D                     l3721:	
  7561  049D  085A               	movf	setLED@led,w
  7562  049E  3A02               	xorlw	2
  7563  049F  1D03               	skipz
  7564  04A0  2CA3               	goto	l3725
  7565                           
  7566                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  7567  04A1  1527               	bsf	_PIRLED,2
  7568                           
  7569                           ;LED_B1.c: 210: } else if (led == 3) {
  7570  04A2  0008               	return
  7571  04A3                     l3725:	
  7572  04A3  085A               	movf	setLED@led,w
  7573  04A4  3A03               	xorlw	3
  7574  04A5  1D03               	skipz
  7575  04A6  0008               	return
  7576                           
  7577                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  7578  04A7  15A7               	bsf	_PIRLED,3
  7579                           
  7580                           ;LED_B1.c: 212: }
  7581                           ;LED_B1.c: 213: } else if (command == 110) {
  7582  04A8  0008               	return
  7583  04A9                     l3729:	
  7584  04A9  0859               	movf	setLED@command,w
  7585  04AA  3A6E               	xorlw	110
  7586  04AB  1D03               	skipz
  7587  04AC  0008               	return
  7588                           
  7589                           ;LED_B1.c: 214: PIRLED.GO = 0;
  7590  04AD  1027               	bcf	_PIRLED,0
  7591  04AE  0008               	return
  7592  04AF                     __end_of_setLED:	
  7593                           
  7594                           	psect	text52
  7595  0F81                     __ptext52:	
  7596 ;; *************** function _LedPointSelect *****************
  7597 ;; Defined at:
  7598 ;;		line 7 in file "../src/LED_B1.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  led             1    wreg     unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  led             1    1[BANK0 ] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;		None               void
  7605 ;; Registers used:
  7606 ;;		wreg
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7612 ;;      Params:         0       0       0       0
  7613 ;;      Locals:         0       1       0       0
  7614 ;;      Temps:          0       1       0       0
  7615 ;;      Totals:         0       2       0       0
  7616 ;;Total ram usage:        2 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; Hardware stack levels required when called:    3
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_setLED_Initialization
  7623 ;;		_setLED
  7624 ;;		_setLED_Main
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           
  7629                           ;psect for function _LedPointSelect
  7630  0F81                     _LedPointSelect:	
  7631                           
  7632                           ;incstack = 0
  7633                           ; Regs used in _LedPointSelect: [wreg]
  7634                           ;LedPointSelect@led stored from wreg
  7635  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  7636  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  7637  0F83  00D8               	movwf	LedPointSelect@led
  7638                           
  7639                           ;LED_B1.c: 9: if (led == 1) {
  7640  0F84  0858               	movf	LedPointSelect@led,w
  7641  0F85  3A01               	xorlw	1
  7642  0F86  1D03               	skipz
  7643  0F87  2F8C               	goto	l232
  7644                           
  7645                           ;LED_B1.c: 10: LED = &VarLED1;
  7646  0F88  304F               	movlw	_VarLED1& (0+255)
  7647  0F89  00D7               	movwf	??_LedPointSelect
  7648  0F8A  0857               	movf	??_LedPointSelect,w
  7649  0F8B  00B0               	movwf	_LED
  7650  0F8C                     l232:	
  7651                           
  7652                           ;LED_B1.c: 11: }
  7653                           ;LED_B1.c: 14: if (led == 2) {
  7654  0F8C  0858               	movf	LedPointSelect@led,w
  7655  0F8D  3A02               	xorlw	2
  7656  0F8E  1D03               	skipz
  7657  0F8F  2F94               	goto	l233
  7658                           
  7659                           ;LED_B1.c: 15: LED = &VarLED2;
  7660  0F90  3053               	movlw	_VarLED2& (0+255)
  7661  0F91  00D7               	movwf	??_LedPointSelect
  7662  0F92  0857               	movf	??_LedPointSelect,w
  7663  0F93  00B0               	movwf	_LED
  7664  0F94                     l233:	
  7665                           
  7666                           ;LED_B1.c: 16: }
  7667                           ;LED_B1.c: 24: if (led == 99) {
  7668  0F94  0858               	movf	LedPointSelect@led,w
  7669  0F95  3A63               	xorlw	99
  7670  0F96  1D03               	skipz
  7671  0F97  0008               	return
  7672                           
  7673                           ;LED_B1.c: 25: LED = &VarErrLED;
  7674  0F98  304B               	movlw	_VarErrLED& (0+255)
  7675  0F99  00D7               	movwf	??_LedPointSelect
  7676  0F9A  0857               	movf	??_LedPointSelect,w
  7677  0F9B  00B0               	movwf	_LED
  7678  0F9C  0008               	return
  7679  0F9D                     __end_of_LedPointSelect:	
  7680                           
  7681                           	psect	text53
  7682  06BF                     __ptext53:	
  7683 ;; *************** function _CDS_Main *****************
  7684 ;; Defined at:
  7685 ;;		line 11 in file "../src/CDS_B1.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;		None
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;		None
  7690 ;; Return value:  Size  Location     Type
  7691 ;;		None               void
  7692 ;; Registers used:
  7693 ;;		wreg, status,2, status,0
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7699 ;;      Params:         0       0       0       0
  7700 ;;      Locals:         0       0       0       0
  7701 ;;      Temps:          0       3       0       0
  7702 ;;      Totals:         0       3       0       0
  7703 ;;Total ram usage:        3 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    3
  7706 ;; This function calls:
  7707 ;;		Nothing
  7708 ;; This function is called by:
  7709 ;;		_main
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           
  7713                           
  7714                           ;psect for function _CDS_Main
  7715  06BF                     _CDS_Main:	
  7716                           
  7717                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7718                           
  7719                           ;incstack = 0
  7720                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7721  06BF  1C70               	btfss	__CDS,0
  7722  06C0  0008               	return
  7723                           
  7724                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7725  06C1  18F0               	btfsc	__CDS,1
  7726  06C2  2ED2               	goto	l105
  7727                           
  7728                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7729  06C3  19F0               	btfsc	__CDS,3
  7730  06C4  0008               	return
  7731                           
  7732                           ;CDS_B1.c: 16: _CDS.Time++;
  7733  06C5  3001               	movlw	1
  7734  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  7735  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  7736  06C8  00D7               	movwf	??_CDS_Main
  7737  06C9  0857               	movf	??_CDS_Main,w
  7738  06CA  07F1               	addwf	__CDS+1,f
  7739                           
  7740                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  7741  06CB  300A               	movlw	10
  7742  06CC  0271               	subwf	__CDS+1,w
  7743  06CD  1C03               	skipc
  7744  06CE  0008               	return
  7745                           
  7746                           ;CDS_B1.c: 18: {
  7747                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7748  06CF  01F1               	clrf	__CDS+1
  7749                           
  7750                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7751  06D0  15F0               	bsf	__CDS,3
  7752                           
  7753                           ;CDS_B1.c: 21: }
  7754                           ;CDS_B1.c: 22: }
  7755                           ;CDS_B1.c: 23: } else {
  7756  06D1  0008               	return
  7757  06D2                     l105:	
  7758                           
  7759                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7760  06D2  1CF0               	btfss	__CDS,1
  7761  06D3  0008               	return
  7762                           
  7763                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7764  06D4  10F0               	bcf	__CDS,1
  7765                           
  7766                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7767  06D5  1A70               	btfsc	__CDS,4
  7768  06D6  2EDD               	goto	l3179
  7769                           
  7770                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7771  06D7  0872               	movf	__CDS+2,w
  7772  06D8  0273               	subwf	__CDS+3,w
  7773  06D9  1C03               	skipc
  7774  06DA  0008               	return
  7775                           
  7776                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7777  06DB  1670               	bsf	__CDS,4
  7778                           
  7779                           ;CDS_B1.c: 29: }
  7780                           ;CDS_B1.c: 30: } else {
  7781  06DC  0008               	return
  7782  06DD                     l3179:	
  7783                           
  7784                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7785  06DD  0872               	movf	__CDS+2,w
  7786  06DE  3E9C               	addlw	156
  7787  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  7788  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  7789  06E1  00D7               	movwf	??_CDS_Main
  7790  06E2  30FF               	movlw	255
  7791  06E3  1803               	skipnc
  7792  06E4  3000               	movlw	0
  7793  06E5  00D8               	movwf	??_CDS_Main+1
  7794  06E6  0858               	movf	??_CDS_Main+1,w
  7795  06E7  3A80               	xorlw	128
  7796  06E8  00D9               	movwf	??_CDS_Main+2
  7797  06E9  3080               	movlw	128
  7798  06EA  0259               	subwf	??_CDS_Main+2,w
  7799  06EB  1D03               	skipz
  7800  06EC  2EEF               	goto	u2895
  7801  06ED  0873               	movf	__CDS+3,w
  7802  06EE  0257               	subwf	??_CDS_Main,w
  7803  06EF                     u2895:	
  7804  06EF  1C03               	skipc
  7805  06F0  0008               	return
  7806                           
  7807                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7808  06F1  1270               	bcf	__CDS,4
  7809  06F2  0008               	return
  7810  06F3                     __end_of_CDS_Main:	
  7811                           
  7812                           	psect	text54
  7813  0DD4                     __ptext54:	
  7814 ;; *************** function _CDS_Initialization *****************
  7815 ;; Defined at:
  7816 ;;		line 7 in file "../src/CDS_B1.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;		None               void
  7823 ;; Registers used:
  7824 ;;		None
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7830 ;;      Params:         0       0       0       0
  7831 ;;      Locals:         0       0       0       0
  7832 ;;      Temps:          0       0       0       0
  7833 ;;      Totals:         0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    3
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_main
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           
  7845                           ;psect for function _CDS_Initialization
  7846  0DD4                     _CDS_Initialization:	
  7847                           
  7848                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7849                           
  7850                           ;incstack = 0
  7851                           ; Regs used in _CDS_Initialization: []
  7852  0DD4  1470               	bsf	__CDS,0
  7853  0DD5  0008               	return
  7854  0DD6                     __end_of_CDS_Initialization:	
  7855                           
  7856                           	psect	text55
  7857  0ECC                     __ptext55:	
  7858 ;; *************** function _ISR *****************
  7859 ;; Defined at:
  7860 ;;		line 107 in file "../src/MCU_B1.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;		None               void
  7867 ;; Registers used:
  7868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7874 ;;      Params:         0       0       0       0
  7875 ;;      Locals:         0       0       0       0
  7876 ;;      Temps:          4       0       0       0
  7877 ;;      Totals:         4       0       0       0
  7878 ;;Total ram usage:        4 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    2
  7881 ;; This function calls:
  7882 ;;		_TMR1_ISR
  7883 ;;		_UART_ISR
  7884 ;; This function is called by:
  7885 ;;		Interrupt level 1
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           
  7890                           ;psect for function _ISR
  7891  0ECC                     _ISR:	
  7892                           
  7893                           ;MCU_B1.c: 109: ;;
  7894                           ;MCU_B1.c: 111: ;;
  7895                           ;MCU_B1.c: 113: TMR1_ISR();
  7896  0ECC  158A  2765  158A   	fcall	_TMR1_ISR
  7897                           
  7898                           ;MCU_B1.c: 115: ;;
  7899                           ;MCU_B1.c: 117: ;;
  7900                           ;MCU_B1.c: 119: UART_ISR();
  7901  0ECF  118A  27A8  158A   	fcall	_UART_ISR
  7902  0ED2  087B               	movf	??_ISR+3,w
  7903  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  7904  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  7905  0ED5  00FF               	movwf	127
  7906  0ED6  087A               	movf	??_ISR+2,w
  7907  0ED7  008A               	movwf	10
  7908  0ED8  0879               	movf	??_ISR+1,w
  7909  0ED9  0084               	movwf	4
  7910  0EDA  0E78               	swapf	??_ISR^(0+-128),w
  7911  0EDB  0083               	movwf	3
  7912  0EDC  0EFE               	swapf	126,f
  7913  0EDD  0E7E               	swapf	126,w
  7914  0EDE  0009               	retfie
  7915  0EDF                     __end_of_ISR:	
  7916                           
  7917                           	psect	intentry
  7918  0004                     __pintentry:	
  7919                           ;incstack = 0
  7920                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7921                           
  7922  0004                     interrupt_function:	
  7923  007E                     saved_w	set	btemp
  7924  0004  00FE               	movwf	btemp
  7925  0005  0E03               	swapf	3,w
  7926  0006  00F8               	movwf	??_ISR
  7927  0007  0804               	movf	4,w
  7928  0008  00F9               	movwf	??_ISR+1
  7929  0009  080A               	movf	10,w
  7930  000A  00FA               	movwf	??_ISR+2
  7931  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7932  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7933  000D  087F               	movf	btemp+1,w
  7934  000E  00FB               	movwf	??_ISR+3
  7935  000F  158A  2ECC         	ljmp	_ISR
  7936                           
  7937                           	psect	text56
  7938  07A8                     __ptext56:	
  7939 ;; *************** function _UART_ISR *****************
  7940 ;; Defined at:
  7941 ;;		line 739 in file "../src/MCU_B1.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  i               1    1[COMMON] unsigned char 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;		None               void
  7948 ;; Registers used:
  7949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7955 ;;      Params:         0       0       0       0
  7956 ;;      Locals:         1       0       0       0
  7957 ;;      Temps:          1       0       0       0
  7958 ;;      Totals:         2       0       0       0
  7959 ;;Total ram usage:        2 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    1
  7962 ;; This function calls:
  7963 ;;		_getch
  7964 ;; This function is called by:
  7965 ;;		_ISR
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           
  7970                           ;psect for function _UART_ISR
  7971  07A8                     _UART_ISR:	
  7972                           
  7973                           ;MCU_B1.c: 740: char i;
  7974                           ;MCU_B1.c: 741: if (RCIE == 1 && RCIF == 1) {
  7975                           
  7976                           ;incstack = 0
  7977                           ; Regs used in _UART_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7978  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  7979  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  7980  07AA  1E8C               	btfss	12,5	;volatile
  7981  07AB  0008               	return
  7982  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  7983  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  7984  07AE  1E8C               	btfss	12,5	;volatile
  7985  07AF  0008               	return
  7986                           
  7987                           ;MCU_B1.c: 742: RCIE = 0;
  7988  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  7989  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  7990  07B2  128C               	bcf	12,5	;volatile
  7991                           
  7992                           ;MCU_B1.c: 743: for (i = 0; i < 8; i++) {
  7993  07B3  01F7               	clrf	UART_ISR@i
  7994  07B4  3008               	movlw	8
  7995  07B5  0277               	subwf	UART_ISR@i,w
  7996  07B6  1803               	btfsc	3,0
  7997  07B7  2FCA               	goto	i1l472
  7998  07B8                     i1l3225:	
  7999                           
  8000                           ;MCU_B1.c: 744: UART.Data[i] = getch();
  8001  07B8  158A  25EC  118A   	fcall	_getch
  8002  07BB  00F6               	movwf	??_UART_ISR
  8003  07BC  0877               	movf	UART_ISR@i,w
  8004  07BD  3E3F               	addlw	_UART& (0+255)
  8005  07BE  0084               	movwf	4
  8006  07BF  0876               	movf	??_UART_ISR,w
  8007  07C0  1383               	bcf	3,7	;select IRP bank0
  8008  07C1  0080               	movwf	0
  8009  07C2  3001               	movlw	1
  8010  07C3  00F6               	movwf	??_UART_ISR
  8011  07C4  0876               	movf	??_UART_ISR,w
  8012  07C5  07F7               	addwf	UART_ISR@i,f
  8013  07C6  3008               	movlw	8
  8014  07C7  0277               	subwf	UART_ISR@i,w
  8015  07C8  1C03               	skipc
  8016  07C9  2FB8               	goto	i1l3225
  8017  07CA                     i1l472:	
  8018                           
  8019                           ;MCU_B1.c: 745: }
  8020                           ;MCU_B1.c: 747: UART.RxGO = 1;
  8021  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  8022  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  8023  07CC  14CA               	bsf	_UART+11,1
  8024                           
  8025                           ;MCU_B1.c: 748: RCIF = 0;
  8026  07CD  128C               	bcf	12,5	;volatile
  8027  07CE  0008               	return
  8028  07CF                     __end_of_UART_ISR:	
  8029                           
  8030                           	psect	text57
  8031  0DEC                     __ptext57:	
  8032 ;; *************** function _getch *****************
  8033 ;; Defined at:
  8034 ;;		line 842 in file "../src/MCU_B1.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      unsigned char 
  8041 ;; Registers used:
  8042 ;;		wreg
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8048 ;;      Params:         0       0       0       0
  8049 ;;      Locals:         0       0       0       0
  8050 ;;      Temps:          0       0       0       0
  8051 ;;      Totals:         0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_UART_ISR
  8058 ;;		_getche
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _getch
  8064  0DEC                     _getch:	
  8065  0DEC                     i1l502:	
  8066                           ;MCU_B1.c: 845: continue;
  8067                           
  8068                           ;MCU_B1.c: 844: while (!RCIF)
  8069                           
  8070                           ;incstack = 0
  8071                           ; Regs used in _getch: [wreg]
  8072                           
  8073  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  8074  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  8075  0DEE  1E8C               	btfss	12,5	;volatile
  8076  0DEF  2DEC               	goto	i1l502
  8077                           
  8078                           ;MCU_B1.c: 846: return RCREG;
  8079  0DF0  081A               	movf	26,w	;volatile
  8080  0DF1  0008               	return
  8081  0DF2                     __end_of_getch:	
  8082                           
  8083                           	psect	text58
  8084  0F65                     __ptext58:	
  8085 ;; *************** function _TMR1_ISR *****************
  8086 ;; Defined at:
  8087 ;;		line 209 in file "../src/MCU_B1.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;		None
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;		None
  8092 ;; Return value:  Size  Location     Type
  8093 ;;		None               void
  8094 ;; Registers used:
  8095 ;;		wreg, status,2
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8101 ;;      Params:         0       0       0       0
  8102 ;;      Locals:         0       0       0       0
  8103 ;;      Temps:          0       0       0       0
  8104 ;;      Totals:         0       0       0       0
  8105 ;;Total ram usage:        0 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; This function calls:
  8108 ;;		Nothing
  8109 ;; This function is called by:
  8110 ;;		_ISR
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           
  8115                           ;psect for function _TMR1_ISR
  8116  0F65                     _TMR1_ISR:	
  8117                           
  8118                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  8119                           
  8120                           ;incstack = 0
  8121                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  8122  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  8123  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  8124  0F67  1C0C               	btfss	12,0	;volatile
  8125  0F68  0008               	return
  8126  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  8127  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  8128  0F6B  1C0C               	btfss	12,0	;volatile
  8129  0F6C  0008               	return
  8130                           
  8131                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  8132  0F6D  30FA               	movlw	250
  8133  0F6E  008F               	movwf	15	;volatile
  8134                           
  8135                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  8136  0F6F  3038               	movlw	56
  8137  0F70  008E               	movwf	14	;volatile
  8138                           
  8139                           ;MCU_B1.c: 214: TMR1IF = 0;
  8140  0F71  100C               	bcf	12,0	;volatile
  8141                           
  8142                           ;MCU_B1.c: 234: Timer1.Count++;
  8143  0F72  3001               	movlw	1
  8144  0F73  07AC               	addwf	_Timer1+1,f
  8145  0F74  1803               	skipnc
  8146  0F75  0AAD               	incf	_Timer1+2,f
  8147  0F76  3000               	movlw	0
  8148  0F77  07AD               	addwf	_Timer1+2,f
  8149                           
  8150                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  8151  0F78  3064               	movlw	100
  8152  0F79  062C               	xorwf	_Timer1+1,w
  8153  0F7A  042D               	iorwf	_Timer1+2,w
  8154  0F7B  1D03               	skipz
  8155  0F7C  0008               	return
  8156                           
  8157                           ;MCU_B1.c: 236: {
  8158                           ;MCU_B1.c: 237: Timer1.Count = 0;
  8159  0F7D  01AC               	clrf	_Timer1+1
  8160  0F7E  01AD               	clrf	_Timer1+2
  8161                           
  8162                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  8163  0F7F  142B               	bsf	_Timer1,0
  8164  0F80  0008               	return
  8165  0F81                     __end_of_TMR1_ISR:	
  8166  007E                     btemp	set	126	;btemp
  8167  007E                     wtemp	set	126
  8168  007E                     wtemp0	set	126
  8169  0080                     wtemp1	set	128
  8170  0082                     wtemp2	set	130
  8171  0084                     wtemp3	set	132
  8172  0086                     wtemp4	set	134
  8173  0088                     wtemp5	set	136
  8174  007F                     wtemp6	set	127
  8175  007E                     ttemp	set	126
  8176  007E                     ttemp0	set	126
  8177  0081                     ttemp1	set	129
  8178  0084                     ttemp2	set	132
  8179  0087                     ttemp3	set	135
  8180  007F                     ttemp4	set	127
  8181  007E                     ltemp	set	126
  8182  007E                     ltemp0	set	126
  8183  0082                     ltemp1	set	130
  8184  0086                     ltemp2	set	134
  8185  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     25      80
    BANK1            80      0      54
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _my_MainTimer->_UART_SetData
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _UART_Main->_UART_Transmit
    _UART_Transmit->_putch
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _setTemp_Main->_getMain_LightsStatus
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   21568
                                             20 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                          _UART_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0     130
                       _UART_SetData
 ---------------------------------------------------------------------------------
 (2) _UART_SetData                                         3     3      0     130
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     613
                                              2 BANK0      3     3      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2470
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     754
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     582
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0     130
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        2     2      0     130
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1402
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    1402
                                              9 BANK0      1     1      0
                            ___awdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    6896
                                             12 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    3363
                                              5 BANK0      7     7      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     405
                                              2 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      68
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     272
                                              1 BANK0      7     7      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (4) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    2658
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     942
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     549
                                              6 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     425
                                              3 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      62
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0     124
                                              2 BANK0      3     3      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     269
                                              9 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     269
                                              4 BANK0      5     5      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      96
                                              2 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2698
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2698
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2813
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2813
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2658
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      68
                                              2 COMMON     4     4      0
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             2     2      0      68
                                              0 COMMON     2     2      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
         _getCDS_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _putch
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _UART_SetData

 _ISR (ROOT)
   _TMR1_ISR
   _UART_ISR
     _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      92       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      36       7       67.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      92      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Dec 01 11:24:46 2014

                     _WDT_Clearing 0002                       ___awdiv@sign 005D  
                               fsr 0004                                l105 06D2  
                              l232 0F8C                                l233 0F94  
                              l660 06BD                                l476 0E7F  
                              l664 06B9                                l840 0099  
                              l496 0E11                                l833 0207  
                              l834 0054                                l659 069D  
                              l764 03C9                                l839 0083  
                              l777 03C6                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0030                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0ECC  
                              _PSA 040B                                _RX9 00C6  
                              _WDT 002E                                _TX9 04C6  
           getAll_Lights_Line@line 0059                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0E06  
        __end_of_LightsPointSelect 0E36             _setMain_Exception$2230 0060  
                 _getLights_Status 0E52            __size_of_Lights_Control 0059  
                             ?_ISR 0076                               l4003 071F  
                             l4103 07A1                               l4023 066B  
                             l4015 0657                               l4121 0546  
                             l4027 0673                               l4043 0360  
                             l4029 067D                               l4151 0622  
                             l4303 0347                               l4161 0643  
                             l4241 0268                               l4225 0FF7  
                             l3179 06DD                               l4411 00D2  
                             l4075 03B6                               l4059 039B  
                             l4251 027A                               l4315 07E3  
                             l4085 03C5                               l4157 0638  
                             l4149 0614                               l4253 027E  
                             l4245 026E                               l3703 048B  
                             l4415 00DE                               l4247 0272  
                             l3721 049D                               l4417 00DF  
                             l4273 02C3                               l4249 0276  
                             l4257 0283                               l4521 057B  
                             l4435 0141                               l4427 012D  
                             l4451 01BB                               l4283 02F1  
                             l4267 02A7                               l4259 0294  
                             l3725 04A3                               l4461 01D7  
                             l4445 0178                               l3911 0400  
                             l3903 03F4                               l3815 05E7  
                             l4367 0086                               l3831 04BB  
                             l4527 0597                               l3729 04A9  
                             l3673 0460                               l3681 0468  
                             l3921 0420                               l4449 01AC  
                             l4297 0339                               l4289 030D  
                             l3691 047B                               l3659 044F  
                             l3667 0457                               l3923 042E  
                             l3907 03FA                               l3771 074B  
                             l3819 0602                               l3917 040C  
                             l3773 072D                               l3837 04C6  
                             l3695 047F                               l3919 0418  
                             l3775 0752                               l3791 06A1  
                             l4399 00BB                               l3863 0505  
                             l3855 04F2                               l3847 04CE  
                             l3871 0FAA                               l3849 04DC  
                             l3873 0FAD                               l3699 0483  
                             l3859 04FD                               l3789 0699  
                             l3877 0FB3                               l3799 06B3  
                             l3997 0704              _myMain_Initialization 0DD3  
                     __CFG_WDTE$ON 0000                               u4005 04F3  
                             u4120 0415                               u4140 042B  
                             u4205 0702                               u5015 015F  
                             u4215 071D                               u5035 019E  
                             u5055 01CB                               u4175 0FC6  
                             _PEIE 005E                               u5085 01F4  
                             u4470 0542                               u4535 0617  
                             u3825 0736                               u4555 0623  
                             _RCIE 0465                               _RCIF 0065  
                             u4565 062F                               u2895 06EF  
                             u4575 0639                               u3795 0F01  
                             u3965 04D1                               u3985 04DD  
                             u3995 04E9                               u4985 00FF  
                             u4995 0123                               _UART 003F  
                             _TXIE 0464                               _TXIF 0064  
                             __CDS 0070                               __PIR 00A0  
                             _Temp 0033                               _main 0565  
                             btemp 007E                    __end_of_WDT_Set 0E52  
                             ltemp 007E                               start 0011  
                             ttemp 007E                               wtemp 007E  
                 __end_of_CDS_Main 06F3       __size_of_Temp_Initialization 0003  
                            ??_ISR 0078                  _setLights_Trigger 0F4A  
                    ??_Lights_Main 0061                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0DD9                 ?_setLights_Trigger 0059  
                 ??_setPIRLED_Main 005B                              ?_main 006B  
                  __end_of___awdiv 050C                              _ADRES 001E  
                  ___awdiv@divisor 0057                              _T1CON 0010  
                  __end_of___lwdiv 064A                      ?_Lights_Close 0076  
                            i1l502 0DEC                              i1l472 07CA  
                  ___awdiv@counter 005C                              _RCREG 001A  
                            _RCSTA 0018                              _TMR1H 000F  
                            _TMR1L 000E                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TXREG 0019                              _TXSTA 0098  
             setMain_Exception@buz 005E            __end_of_Timeout_Counter 0F07  
                 __end_of_UART_ISR 07CF                 __size_of_UART_Main 0011  
              ??_setLights_Trigger 005A                   __end_of_PIR_Main 020F  
                 __end_of_TMR1_ISR 0F81                   __end_of_UART_Set 0F4A  
                 __end_of_TMR1_Set 0E44                              _getAD 0F9D  
                            _getch 0DEC                              _putch 0E0E  
                 __end_of_WDT_Main 0E96                      _LightsControl 0032  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 0756  
    __end_of_setLED_Initialization 0EA8                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 0065                  getPIR_AD@channel2 0060  
                   _setLights_Main 0780                     _setLights_Line 0EA8  
                  __initialization 0013          __end_of_setLights_Trigger 0F65  
                     __end_of_main 05B9                   __end_of_Fosc_Set 0DEC  
                        ??_ADC_Set 0057                             ??_main 006F  
                   ??_Lights_Close 0060                __end_of_Lights_Main 0800  
       __size_of_LightsPointSelect 000C                             ?_getAD 0057  
           ?_myMain_Initialization 0076                             ?_getch 0076  
                           _ADCON0 001F                             _ADCON1 009F  
                 ___awdiv@dividend 0059                          ??_WDT_Set 0057  
                           _ANSELA 0185                             ?_putch 0076  
                           _ANSELB 0186           _getMain_All_Error_Status 0689  
                           i1l3225 07B8                             _FVRCON 009D  
           getLights_Status@lights 0059                             _PIRLED 0027  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 0F1C  
                           _TRISC6 043E                             _TRISC7 043F  
           getLights_Status@status 005A             __end_of_setLights_Main 07A8  
           __end_of_setLights_Line 0EBA         __end_of_Mcu_Initialization 0ECC  
                           _Lights 0031                             _Timer1 002B  
                __end_of_UART_Main 0E85        __size_of_CDS_Initialization 0002  
          ??_Lights_Initialization 005A                          ??___awdiv 005B  
                        ??___lwdiv 005B                             _setLED 043E  
                           _myMain 0020                   ___awdiv@quotient 005E  
               __size_of_Temp_Main 0003                             saved_w 007E  
                 ?_Timeout_Counter 0076                     _Lights_Control 050C  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0076  
      __size_of_PIR_Initialization 0014         getMain_LightsStatus@status 005F  
          __end_of__initialization 0025                          ?_LED_Main 0076  
                    ?_my_MainTimer 0076                    ?_setLights_Main 0076  
                  ?_setLights_Line 0076              __end_of_UART_Transmit 0FDB  
       __size_of_setLights_Trigger 001B                     __pcstackCOMMON 0076  
               __size_of_getCDS_AD 002A                          ?_UART_ISR 0076  
         __end_of_getLights_Status 0E63                      __end_of_getAD 0FB9  
                        ?_PIR_Main 0076                          ?_TMR1_ISR 0076  
                        ?_UART_Set 0076                      __end_of_getch 0DF2  
                        ?_TMR1_Set 0076                 _LED_Initialization 0E1E  
               __size_of_getPIR_AD 013A                        _Lights_Main 07F5  
                    __end_of_putch 0E16           _setLights_Initialization 0DF8  
                        ?_WDT_Main 0076               _getMain_LightsStatus 0725  
       __end_of_set_TimeoutCleared 0DF8                ?_LED_Initialization 0076  
           __end_of_Lights_Control 0565              getMain_LightsStatus@i 005D  
                          ??_getAD 0058                _Temp_Initialization 0DD9  
                          ??_getch 0076                         ??_CDS_Main 0057  
                          ??_putch 0057                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0076  
      __size_of_getAll_Lights_Line 0011                  __end_of_Temp_Main 0DDF  
                          ?_IO_Set 0076                    __CFG_VCAPEN$DIS 0000  
                   ??_my_MainTimer 005A                         ??_LED_Main 005D  
             __end_of_Lights_Close 0F1C          getMain_LightsStatus@count 005C  
             ??_LED_Initialization 005C                  LedPointSelect@led 0058  
                       __pmaintext 0565               ?_Temp_Initialization 0076  
                       ??_UART_ISR 0076                         ??_PIR_Main 0063  
                       ??_TMR1_ISR 0076                         ??_UART_Set 0057  
                    ?_setTemp_Main 0076                 __size_of_setLights 0051  
                       ??_TMR1_Set 0057                         __pintentry 0004  
                          ?_setLED 0059            setLights_Trigger@lights 005B  
                        UART_ISR@i 0077                            _ADC_Set 0DFF  
                       _getTemp_AD 0FDB                         ??_WDT_Main 0057  
            ?_getMain_LightsStatus 0076             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0076                  __end_of_getCDS_AD 0780  
                          _WDT_Set 0E44                         ??_Fosc_Set 0057  
                __end_of_getPIR_AD 0349                      ?_UART_Receive 0076  
                    ?_UART_SetData 0076                    __size_of_IO_Set 0015  
                       getCDS_AD@i 005C                         getCDS_AD@j 005D  
                          _Lights1 00CF                            _VarLED1 004F  
                          _VarLED2 0053              ??_Temp_Initialization 0057  
                   ??_setTemp_Main 0060                            ___awdiv 04AF  
                          ___lwdiv 060A                    __size_of_setLED 0071  
                          __ptext0 0000                            __ptext1 07CF  
                          __ptext2 06F3                            __ptext3 0DD3  
                          __ptext4 0FDB                            __ptext5 020F  
                          __ptext6 060A                            __ptext7 0756  
                          __ptext8 0F9D                            __ptext9 0DF2  
                       getPIR_AD@i 0066                         getPIR_AD@j 0064  
                     __size_of_ISR 0013         ??_getMain_All_Error_Status 0058  
          ??_myMain_Initialization 0057           ??_setTemp_Initialization 0057  
                   _LedPointSelect 0F81                            clrloop0 0E17  
                __end_of_setLights 060A               end_of_initialization 0025  
                   ??_UART_Receive 0057                     ??_UART_SetData 0057  
                    _getCDS_Status 0E06                     UART_Transmit@i 0058  
            _setLED_Initialization 0E96     __size_of_Lights_Initialization 0004  
    __end_of_Lights_Initialization 0DE3             ??_getMain_LightsStatus 005B  
                        _UART_Main 0E74                        ?_getTemp_AD 0076  
         setLED_Initialization@led 005B                 _Mcu_Initialization 0EBA  
             __end_of_my_MainTimer 07F5             __end_of_LedPointSelect 0F9D  
              setPIRLED_Main@count 005C                ?_Mcu_Initialization 0076  
            __size_of_Lights_Close 0015            __size_of_setPIRLED_Main 0071  
                 ??_setLights_Main 005D                   ??_setLights_Line 0059  
             setLights_Main@lights 005D    getMain_All_Error_Status@command 005D  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0076  
                   __end_of_IO_Set 0F31         __end_of_CDS_Initialization 0DD6  
       ??_setLights_Initialization 0059                  __size_of_LED_Main 0003  
                _setMain_Exception 064A               ??_Mcu_Initialization 0058  
                    ?_WDT_Clearing 0076                 ?_setMain_Exception 0076  
                ?_getLights_Status 0076           setMain_Exception@command 0062  
                     ?_Lights_Main 0076                         ?_UART_Main 0076  
                __size_of_UART_ISR 0027                  __size_of_PIR_Main 01E7  
                __size_of_TMR1_ISR 001C                 ??_getLights_Status 0059  
                __size_of_UART_Set 0019                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 04AF                ??_setMain_Exception 005C  
                     _Lights_Close 0F07                  __size_of_WDT_Main 0011  
              start_initialization 0013                    ?_LedPointSelect 0076  
             setLights_Line@lights 0059                        __end_of_ISR 0EDF  
       __end_of_PIR_Initialization 0EF3    __size_of_setTemp_Initialization 0001  
              getCDS_Status@status 0057               __end_of_setTemp_Main 03CD  
               _set_TimeoutCleared 0DF2                           ??_IO_Set 0057  
         __size_of_Timeout_Counter 0014                          _VarErrLED 004B  
              __size_of_getTemp_AD 0025             ?_setLED_Initialization 0076  
                __size_of_Fosc_Set 0005          __end_of_setMain_Exception 0689  
                        _Temp_Main 0DDC                    setLights@lights 005C  
              ?_set_TimeoutCleared 0076                     ??_WDT_Clearing 0057  
                  setLights@status 005A                           ??_setLED 005A  
                         ?_ADC_Set 0076                   ??_Lights_Control 0059  
             __end_of_UART_Receive 0DE7   __end_of_getMain_All_Error_Status 06BF  
             __end_of_UART_SetData 0725                        __pbssCOMMON 0070  
                        ___latbits 0001             __size_of_UART_Transmit 0022  
                    __pcstackBANK0 0057               ??_set_TimeoutCleared 0057  
       __end_of_getAll_Lights_Line 0E74                           ?_WDT_Set 0076  
                  ??_getCDS_Status 0057                      PIR_Main@error 006A  
                        _getCDS_AD 0756                          _getPIR_AD 020F  
      __size_of_LED_Initialization 000C                         ?_Temp_Main 0076  
                 ___lwdiv@dividend 0059             _setTemp_Initialization 0DD2  
                    _PIR_Main$2940 0068                           ?___awdiv 0057  
            __size_of_my_MainTimer 0026                           ?___lwdiv 0057  
                      ??_UART_Main 005A           setLights_Trigger@command 0059  
                    UART_SetData@i 0058     __size_of_myMain_Initialization 0001  
    __end_of_myMain_Initialization 0DD4                     __size_of_getAD 001C  
                 ___lwdiv@quotient 005D                     __size_of_getch 0006  
                   _setPIRLED_Main 03CD                           _CDS_Main 06BF  
                   __size_of_putch 0008        __end_of_Temp_Initialization 0DDC  
                interrupt_function 0004                         ?_getCDS_AD 0059  
                         _LED_Main 0DD6                          _setLights 05B9  
                        clear_ram0 0E16   __end_of_setLights_Initialization 0DFF  
       __size_of_setMain_Exception 003F                       _my_MainTimer 07CF  
                       ?_getPIR_AD 0060                      _UART_Transmit 0FB9  
                         _GO_nDONE 00F9                  ??_Timeout_Counter 0057  
                         _UART_ISR 07A8                           _PIR_Main 0028  
                         _TMR1_ISR 0F65                           _UART_Set 0F31  
                         _TMR1_Set 0E36                       ??_getTemp_AD 0059  
                         _WDT_Main 0E85                   __size_of_ADC_Set 0007  
             __size_of_Lights_Main 000B              __size_of_setTemp_Main 0084  
           __end_of_setPIRLED_Main 043E     getMain_All_Error_Status@status 005E  
                      getAD@adcon0 0058                        getAD@adcon1 0057  
             __end_of_WDT_Clearing 0004                           _Fosc_Set 0DE7  
                 __size_of_WDT_Set 000E            setMain_Exception@status 005F  
__size_of_getMain_All_Error_Status 0036          ?_getMain_All_Error_Status 0076  
                       ?_setLights 005A                 __end_of_getTemp_AD 1000  
                   ?_UART_Transmit 0076                           _SwDetect 0075  
                      ??_Temp_Main 0061      _getMain_All_Error_Status$2246 0059  
    _getMain_All_Error_Status$2248 005B                          setLED@led 005A  
            __size_of_UART_Receive 0004              __size_of_UART_SetData 0032  
                     _setTemp_Main 0349                   __size_of___awdiv 005D  
                 __size_of___lwdiv 0040                   ??_LedPointSelect 0057  
               _CDS_Initialization 0DD4              _Lights_Initialization 0DDF  
    __size_of_getMain_LightsStatus 0031                  getTemp_AD@channel 005B  
                  ?_setPIRLED_Main 0076                    ___lwdiv@divisor 0057  
              ?_CDS_Initialization 0076                    ___lwdiv@counter 005C  
                         __ptext10 0EF3                           __ptext11 0E85  
                         __ptext20 0DD9                           __ptext12 0002  
                         __ptext21 0DD2                           __ptext13 0E74  
                         __ptext30 0E44                           __ptext22 0028  
                         __ptext14 0FB9                           __ptext31 0F31  
                         __ptext23 064A                           __ptext15 0E0E  
                         __ptext40 050C                           __ptext32 0E36  
                         __ptext24 0F4A                           __ptext16 0DE3  
                         __ptext41 0F07                           __ptext33 0F1C  
                         __ptext25 0E63                           __ptext17 0DDC  
                         __ptext50 0E96                           __ptext42 0725  
                         __ptext34 0DE7                           __ptext26 0689  
                         __ptext18 0349                           __ptext51 043E  
                         __ptext43 0E52                           __ptext35 0DFF  
                         __ptext27 0E06                           __ptext19 04AF  
                         __ptext52 0F81                           __ptext44 0DDF  
                         __ptext36 07F5                           __ptext28 0EDF  
                         __ptext53 06BF                           __ptext45 0DF8  
                         __ptext37 0780                           __ptext29 0EBA  
                         __ptext54 0DD4                           __ptext46 0E2A  
                         __ptext38 05B9                           __ptext55 0ECC  
                         __ptext47 0DD6                           __ptext39 0EA8  
                         __ptext56 07A8                           __ptext48 03CD  
                         __ptext57 0DEC                           __ptext49 0E1E  
                         __ptext58 0F65          __size_of_getLights_Status 0011  
          ??_setLED_Initialization 005B                        ??_getCDS_AD 005A  
                    setLED@command 0059                      __size_of_main 0054  
                     _UART_Receive 0DE3                       _UART_SetData 06F3  
                      ??_getPIR_AD 0061                 _PIR_Initialization 0EDF  
             ??_CDS_Initialization 0057        __size_of_Mcu_Initialization 0012  
              ?_PIR_Initialization 0076                           main@argc 006B  
                         main@argv 006D  __size_of_setLights_Initialization 0007  
                        putch@byte 0057          ?_setLights_Initialization 0076  
             Lights_Control@lights 005B               ??_PIR_Initialization 005B  
                         intlevel1 0000                    ??_UART_Transmit 0058  
                      ??_setLights 005B            ?_setTemp_Initialization 0076  
          LightsPointSelect@lights 0058                 _getAll_Lights_Line 0E63  
          __size_of_setLights_Main 0028            __size_of_setLights_Line 0012  
              ?_getAll_Lights_Line 0076             ?_Lights_Initialization 0076  
            __size_of_WDT_Clearing 0002     setLights_Initialization@lights 0059  
      __size_of_set_TimeoutCleared 0006                  _LightsPointSelect 0E2A  
             ??_getAll_Lights_Line 0059                 __CFG_FOSC$INTOSCIO 0000  
               ?_LightsPointSelect 0076                    _Timeout_Counter 0EF3  
       __end_of_LED_Initialization 0E2A              __end_of_getCDS_Status 0E0E  
   __end_of_setTemp_Initialization 0DD3                  getCDS_AD@channel1 005E  
                getCDS_AD@channel2 0059                ??_LightsPointSelect 0057  
