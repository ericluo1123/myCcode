

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Nov 04 17:15:46 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0096                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009F                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0186                     	;# 
   132  018C                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0096                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009F                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0186                     	;# 
   201  018C                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  008F                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0093                     	;# 
   250  0094                     	;# 
   251  0095                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0096                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009F                     	;# 
   260  0108                     	;# 
   261  0109                     	;# 
   262  010C                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010D                     	;# 
   266  010E                     	;# 
   267  010F                     	;# 
   268  0185                     	;# 
   269  0186                     	;# 
   270  018C                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  008F                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0094                     	;# 
   320  0095                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0096                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009F                     	;# 
   329  0108                     	;# 
   330  0109                     	;# 
   331  010C                     	;# 
   332  010C                     	;# 
   333  010D                     	;# 
   334  010D                     	;# 
   335  010E                     	;# 
   336  010F                     	;# 
   337  0185                     	;# 
   338  0186                     	;# 
   339  018C                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  000E                     	;# 
   355  000F                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  001D                     	;# 
   372  001E                     	;# 
   373  001F                     	;# 
   374  0081                     	;# 
   375  0085                     	;# 
   376  0086                     	;# 
   377  0087                     	;# 
   378  0089                     	;# 
   379  008C                     	;# 
   380  008D                     	;# 
   381  008E                     	;# 
   382  008F                     	;# 
   383  0090                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0096                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009F                     	;# 
   398  0108                     	;# 
   399  0109                     	;# 
   400  010C                     	;# 
   401  010C                     	;# 
   402  010D                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  010F                     	;# 
   406  0185                     	;# 
   407  0186                     	;# 
   408  018C                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  000E                     	;# 
   423  000E                     	;# 
   424  000F                     	;# 
   425  0010                     	;# 
   426  0011                     	;# 
   427  0012                     	;# 
   428  0013                     	;# 
   429  0014                     	;# 
   430  0015                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  001D                     	;# 
   441  001E                     	;# 
   442  001F                     	;# 
   443  0081                     	;# 
   444  0085                     	;# 
   445  0086                     	;# 
   446  0087                     	;# 
   447  0089                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  008F                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0095                     	;# 
   459  0095                     	;# 
   460  0096                     	;# 
   461  0096                     	;# 
   462  0098                     	;# 
   463  0099                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009F                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0185                     	;# 
   476  0186                     	;# 
   477  018C                     	;# 
   478  0000                     	;# 
   479  0001                     	;# 
   480  0002                     	;# 
   481  0003                     	;# 
   482  0004                     	;# 
   483  0005                     	;# 
   484  0006                     	;# 
   485  0007                     	;# 
   486  0009                     	;# 
   487  000A                     	;# 
   488  000B                     	;# 
   489  000C                     	;# 
   490  000D                     	;# 
   491  000E                     	;# 
   492  000E                     	;# 
   493  000F                     	;# 
   494  0010                     	;# 
   495  0011                     	;# 
   496  0012                     	;# 
   497  0013                     	;# 
   498  0014                     	;# 
   499  0015                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  001D                     	;# 
   510  001E                     	;# 
   511  001F                     	;# 
   512  0081                     	;# 
   513  0085                     	;# 
   514  0086                     	;# 
   515  0087                     	;# 
   516  0089                     	;# 
   517  008C                     	;# 
   518  008D                     	;# 
   519  008E                     	;# 
   520  008F                     	;# 
   521  0090                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0096                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009C                     	;# 
   534  009D                     	;# 
   535  009F                     	;# 
   536  0108                     	;# 
   537  0109                     	;# 
   538  010C                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  010F                     	;# 
   544  0185                     	;# 
   545  0186                     	;# 
   546  018C                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000D                     	;# 
   560  000E                     	;# 
   561  000E                     	;# 
   562  000F                     	;# 
   563  0010                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  0081                     	;# 
   582  0085                     	;# 
   583  0086                     	;# 
   584  0087                     	;# 
   585  0089                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  008F                     	;# 
   590  0090                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0093                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0095                     	;# 
   598  0096                     	;# 
   599  0096                     	;# 
   600  0098                     	;# 
   601  0099                     	;# 
   602  009C                     	;# 
   603  009D                     	;# 
   604  009F                     	;# 
   605  0108                     	;# 
   606  0109                     	;# 
   607  010C                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  010F                     	;# 
   613  0185                     	;# 
   614  0186                     	;# 
   615  018C                     	;# 
   616  0000                     	;# 
   617  0001                     	;# 
   618  0002                     	;# 
   619  0003                     	;# 
   620  0004                     	;# 
   621  0005                     	;# 
   622  0006                     	;# 
   623  0007                     	;# 
   624  0009                     	;# 
   625  000A                     	;# 
   626  000B                     	;# 
   627  000C                     	;# 
   628  000D                     	;# 
   629  000E                     	;# 
   630  000E                     	;# 
   631  000F                     	;# 
   632  0010                     	;# 
   633  0011                     	;# 
   634  0012                     	;# 
   635  0013                     	;# 
   636  0014                     	;# 
   637  0015                     	;# 
   638  0015                     	;# 
   639  0016                     	;# 
   640  0017                     	;# 
   641  0018                     	;# 
   642  0019                     	;# 
   643  001A                     	;# 
   644  001B                     	;# 
   645  001B                     	;# 
   646  001C                     	;# 
   647  001D                     	;# 
   648  001E                     	;# 
   649  001F                     	;# 
   650  0081                     	;# 
   651  0085                     	;# 
   652  0086                     	;# 
   653  0087                     	;# 
   654  0089                     	;# 
   655  008C                     	;# 
   656  008D                     	;# 
   657  008E                     	;# 
   658  008F                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0092                     	;# 
   662  0093                     	;# 
   663  0093                     	;# 
   664  0094                     	;# 
   665  0095                     	;# 
   666  0095                     	;# 
   667  0096                     	;# 
   668  0096                     	;# 
   669  0098                     	;# 
   670  0099                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009F                     	;# 
   674  0108                     	;# 
   675  0109                     	;# 
   676  010C                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0185                     	;# 
   683  0186                     	;# 
   684  018C                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0009                     	;# 
   694  000A                     	;# 
   695  000B                     	;# 
   696  000C                     	;# 
   697  000D                     	;# 
   698  000E                     	;# 
   699  000E                     	;# 
   700  000F                     	;# 
   701  0010                     	;# 
   702  0011                     	;# 
   703  0012                     	;# 
   704  0013                     	;# 
   705  0014                     	;# 
   706  0015                     	;# 
   707  0015                     	;# 
   708  0016                     	;# 
   709  0017                     	;# 
   710  0018                     	;# 
   711  0019                     	;# 
   712  001A                     	;# 
   713  001B                     	;# 
   714  001B                     	;# 
   715  001C                     	;# 
   716  001D                     	;# 
   717  001E                     	;# 
   718  001F                     	;# 
   719  0081                     	;# 
   720  0085                     	;# 
   721  0086                     	;# 
   722  0087                     	;# 
   723  0089                     	;# 
   724  008C                     	;# 
   725  008D                     	;# 
   726  008E                     	;# 
   727  008F                     	;# 
   728  0090                     	;# 
   729  0091                     	;# 
   730  0092                     	;# 
   731  0093                     	;# 
   732  0093                     	;# 
   733  0094                     	;# 
   734  0095                     	;# 
   735  0095                     	;# 
   736  0096                     	;# 
   737  0096                     	;# 
   738  0098                     	;# 
   739  0099                     	;# 
   740  009C                     	;# 
   741  009D                     	;# 
   742  009F                     	;# 
   743  0108                     	;# 
   744  0109                     	;# 
   745  010C                     	;# 
   746  010C                     	;# 
   747  010D                     	;# 
   748  010D                     	;# 
   749  010E                     	;# 
   750  010F                     	;# 
   751  0185                     	;# 
   752  0186                     	;# 
   753  018C                     	;# 
   754  0000                     	;# 
   755  0001                     	;# 
   756  0002                     	;# 
   757  0003                     	;# 
   758  0004                     	;# 
   759  0005                     	;# 
   760  0006                     	;# 
   761  0007                     	;# 
   762  0009                     	;# 
   763  000A                     	;# 
   764  000B                     	;# 
   765  000C                     	;# 
   766  000D                     	;# 
   767  000E                     	;# 
   768  000E                     	;# 
   769  000F                     	;# 
   770  0010                     	;# 
   771  0011                     	;# 
   772  0012                     	;# 
   773  0013                     	;# 
   774  0014                     	;# 
   775  0015                     	;# 
   776  0015                     	;# 
   777  0016                     	;# 
   778  0017                     	;# 
   779  0018                     	;# 
   780  0019                     	;# 
   781  001A                     	;# 
   782  001B                     	;# 
   783  001B                     	;# 
   784  001C                     	;# 
   785  001D                     	;# 
   786  001E                     	;# 
   787  001F                     	;# 
   788  0081                     	;# 
   789  0085                     	;# 
   790  0086                     	;# 
   791  0087                     	;# 
   792  0089                     	;# 
   793  008C                     	;# 
   794  008D                     	;# 
   795  008E                     	;# 
   796  008F                     	;# 
   797  0090                     	;# 
   798  0091                     	;# 
   799  0092                     	;# 
   800  0093                     	;# 
   801  0093                     	;# 
   802  0094                     	;# 
   803  0095                     	;# 
   804  0095                     	;# 
   805  0096                     	;# 
   806  0096                     	;# 
   807  0098                     	;# 
   808  0099                     	;# 
   809  009C                     	;# 
   810  009D                     	;# 
   811  009F                     	;# 
   812  0108                     	;# 
   813  0109                     	;# 
   814  010C                     	;# 
   815  010C                     	;# 
   816  010D                     	;# 
   817  010D                     	;# 
   818  010E                     	;# 
   819  010F                     	;# 
   820  0185                     	;# 
   821  0186                     	;# 
   822  018C                     	;# 
   823  0000                     	;# 
   824  0001                     	;# 
   825  0002                     	;# 
   826  0003                     	;# 
   827  0004                     	;# 
   828  0005                     	;# 
   829  0006                     	;# 
   830  0007                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  000E                     	;# 
   838  000F                     	;# 
   839  0010                     	;# 
   840  0011                     	;# 
   841  0012                     	;# 
   842  0013                     	;# 
   843  0014                     	;# 
   844  0015                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0017                     	;# 
   848  0018                     	;# 
   849  0019                     	;# 
   850  001A                     	;# 
   851  001B                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  001D                     	;# 
   855  001E                     	;# 
   856  001F                     	;# 
   857  0081                     	;# 
   858  0085                     	;# 
   859  0086                     	;# 
   860  0087                     	;# 
   861  0089                     	;# 
   862  008C                     	;# 
   863  008D                     	;# 
   864  008E                     	;# 
   865  008F                     	;# 
   866  0090                     	;# 
   867  0091                     	;# 
   868  0092                     	;# 
   869  0093                     	;# 
   870  0093                     	;# 
   871  0094                     	;# 
   872  0095                     	;# 
   873  0095                     	;# 
   874  0096                     	;# 
   875  0096                     	;# 
   876  0098                     	;# 
   877  0099                     	;# 
   878  009C                     	;# 
   879  009D                     	;# 
   880  009F                     	;# 
   881  0108                     	;# 
   882  0109                     	;# 
   883  010C                     	;# 
   884  010C                     	;# 
   885  010D                     	;# 
   886  010D                     	;# 
   887  010E                     	;# 
   888  010F                     	;# 
   889  0185                     	;# 
   890  0186                     	;# 
   891  018C                     	;# 
   892  0000                     	;# 
   893  0001                     	;# 
   894  0002                     	;# 
   895  0003                     	;# 
   896  0004                     	;# 
   897  0005                     	;# 
   898  0006                     	;# 
   899  0007                     	;# 
   900  0009                     	;# 
   901  000A                     	;# 
   902  000B                     	;# 
   903  000C                     	;# 
   904  000D                     	;# 
   905  000E                     	;# 
   906  000E                     	;# 
   907  000F                     	;# 
   908  0010                     	;# 
   909  0011                     	;# 
   910  0012                     	;# 
   911  0013                     	;# 
   912  0014                     	;# 
   913  0015                     	;# 
   914  0015                     	;# 
   915  0016                     	;# 
   916  0017                     	;# 
   917  0018                     	;# 
   918  0019                     	;# 
   919  001A                     	;# 
   920  001B                     	;# 
   921  001B                     	;# 
   922  001C                     	;# 
   923  001D                     	;# 
   924  001E                     	;# 
   925  001F                     	;# 
   926  0081                     	;# 
   927  0085                     	;# 
   928  0086                     	;# 
   929  0087                     	;# 
   930  0089                     	;# 
   931  008C                     	;# 
   932  008D                     	;# 
   933  008E                     	;# 
   934  008F                     	;# 
   935  0090                     	;# 
   936  0091                     	;# 
   937  0092                     	;# 
   938  0093                     	;# 
   939  0093                     	;# 
   940  0094                     	;# 
   941  0095                     	;# 
   942  0095                     	;# 
   943  0096                     	;# 
   944  0096                     	;# 
   945  0098                     	;# 
   946  0099                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009F                     	;# 
   950  0108                     	;# 
   951  0109                     	;# 
   952  010C                     	;# 
   953  010C                     	;# 
   954  010D                     	;# 
   955  010D                     	;# 
   956  010E                     	;# 
   957  010F                     	;# 
   958  0185                     	;# 
   959  0186                     	;# 
   960  018C                     	;# 
   961  0000                     	;# 
   962  0001                     	;# 
   963  0002                     	;# 
   964  0003                     	;# 
   965  0004                     	;# 
   966  0005                     	;# 
   967  0006                     	;# 
   968  0007                     	;# 
   969  0009                     	;# 
   970  000A                     	;# 
   971  000B                     	;# 
   972  000C                     	;# 
   973  000D                     	;# 
   974  000E                     	;# 
   975  000E                     	;# 
   976  000F                     	;# 
   977  0010                     	;# 
   978  0011                     	;# 
   979  0012                     	;# 
   980  0013                     	;# 
   981  0014                     	;# 
   982  0015                     	;# 
   983  0015                     	;# 
   984  0016                     	;# 
   985  0017                     	;# 
   986  0018                     	;# 
   987  0019                     	;# 
   988  001A                     	;# 
   989  001B                     	;# 
   990  001B                     	;# 
   991  001C                     	;# 
   992  001D                     	;# 
   993  001E                     	;# 
   994  001F                     	;# 
   995  0081                     	;# 
   996  0085                     	;# 
   997  0086                     	;# 
   998  0087                     	;# 
   999  0089                     	;# 
  1000  008C                     	;# 
  1001  008D                     	;# 
  1002  008E                     	;# 
  1003  008F                     	;# 
  1004  0090                     	;# 
  1005  0091                     	;# 
  1006  0092                     	;# 
  1007  0093                     	;# 
  1008  0093                     	;# 
  1009  0094                     	;# 
  1010  0095                     	;# 
  1011  0095                     	;# 
  1012  0096                     	;# 
  1013  0096                     	;# 
  1014  0098                     	;# 
  1015  0099                     	;# 
  1016  009C                     	;# 
  1017  009D                     	;# 
  1018  009F                     	;# 
  1019  0108                     	;# 
  1020  0109                     	;# 
  1021  010C                     	;# 
  1022  010C                     	;# 
  1023  010D                     	;# 
  1024  010D                     	;# 
  1025  010E                     	;# 
  1026  010F                     	;# 
  1027  0185                     	;# 
  1028  0186                     	;# 
  1029  018C                     	;# 
  1030  0000                     	;# 
  1031  0001                     	;# 
  1032  0002                     	;# 
  1033  0003                     	;# 
  1034  0004                     	;# 
  1035  0005                     	;# 
  1036  0006                     	;# 
  1037  0007                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000D                     	;# 
  1043  000E                     	;# 
  1044  000E                     	;# 
  1045  000F                     	;# 
  1046  0010                     	;# 
  1047  0011                     	;# 
  1048  0012                     	;# 
  1049  0013                     	;# 
  1050  0014                     	;# 
  1051  0015                     	;# 
  1052  0015                     	;# 
  1053  0016                     	;# 
  1054  0017                     	;# 
  1055  0018                     	;# 
  1056  0019                     	;# 
  1057  001A                     	;# 
  1058  001B                     	;# 
  1059  001B                     	;# 
  1060  001C                     	;# 
  1061  001D                     	;# 
  1062  001E                     	;# 
  1063  001F                     	;# 
  1064  0081                     	;# 
  1065  0085                     	;# 
  1066  0086                     	;# 
  1067  0087                     	;# 
  1068  0089                     	;# 
  1069  008C                     	;# 
  1070  008D                     	;# 
  1071  008E                     	;# 
  1072  008F                     	;# 
  1073  0090                     	;# 
  1074  0091                     	;# 
  1075  0092                     	;# 
  1076  0093                     	;# 
  1077  0093                     	;# 
  1078  0094                     	;# 
  1079  0095                     	;# 
  1080  0095                     	;# 
  1081  0096                     	;# 
  1082  0096                     	;# 
  1083  0098                     	;# 
  1084  0099                     	;# 
  1085  009C                     	;# 
  1086  009D                     	;# 
  1087  009F                     	;# 
  1088  0108                     	;# 
  1089  0109                     	;# 
  1090  010C                     	;# 
  1091  010C                     	;# 
  1092  010D                     	;# 
  1093  010D                     	;# 
  1094  010E                     	;# 
  1095  010F                     	;# 
  1096  0185                     	;# 
  1097  0186                     	;# 
  1098  018C                     	;# 
  1099  0000                     	;# 
  1100  0001                     	;# 
  1101  0002                     	;# 
  1102  0003                     	;# 
  1103  0004                     	;# 
  1104  0005                     	;# 
  1105  0006                     	;# 
  1106  0007                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  000E                     	;# 
  1114  000F                     	;# 
  1115  0010                     	;# 
  1116  0011                     	;# 
  1117  0012                     	;# 
  1118  0013                     	;# 
  1119  0014                     	;# 
  1120  0015                     	;# 
  1121  0015                     	;# 
  1122  0016                     	;# 
  1123  0017                     	;# 
  1124  0018                     	;# 
  1125  0019                     	;# 
  1126  001A                     	;# 
  1127  001B                     	;# 
  1128  001B                     	;# 
  1129  001C                     	;# 
  1130  001D                     	;# 
  1131  001E                     	;# 
  1132  001F                     	;# 
  1133  0081                     	;# 
  1134  0085                     	;# 
  1135  0086                     	;# 
  1136  0087                     	;# 
  1137  0089                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  008F                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0093                     	;# 
  1147  0094                     	;# 
  1148  0095                     	;# 
  1149  0095                     	;# 
  1150  0096                     	;# 
  1151  0096                     	;# 
  1152  0098                     	;# 
  1153  0099                     	;# 
  1154  009C                     	;# 
  1155  009D                     	;# 
  1156  009F                     	;# 
  1157  0108                     	;# 
  1158  0109                     	;# 
  1159  010C                     	;# 
  1160  010C                     	;# 
  1161  010D                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  010F                     	;# 
  1165  0185                     	;# 
  1166  0186                     	;# 
  1167  018C                     	;# 
  1168  0000                     	;# 
  1169  0001                     	;# 
  1170  0002                     	;# 
  1171  0003                     	;# 
  1172  0004                     	;# 
  1173  0005                     	;# 
  1174  0006                     	;# 
  1175  0007                     	;# 
  1176  0009                     	;# 
  1177  000A                     	;# 
  1178  000B                     	;# 
  1179  000C                     	;# 
  1180  000D                     	;# 
  1181  000E                     	;# 
  1182  000E                     	;# 
  1183  000F                     	;# 
  1184  0010                     	;# 
  1185  0011                     	;# 
  1186  0012                     	;# 
  1187  0013                     	;# 
  1188  0014                     	;# 
  1189  0015                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0017                     	;# 
  1193  0018                     	;# 
  1194  0019                     	;# 
  1195  001A                     	;# 
  1196  001B                     	;# 
  1197  001B                     	;# 
  1198  001C                     	;# 
  1199  001D                     	;# 
  1200  001E                     	;# 
  1201  001F                     	;# 
  1202  0081                     	;# 
  1203  0085                     	;# 
  1204  0086                     	;# 
  1205  0087                     	;# 
  1206  0089                     	;# 
  1207  008C                     	;# 
  1208  008D                     	;# 
  1209  008E                     	;# 
  1210  008F                     	;# 
  1211  0090                     	;# 
  1212  0091                     	;# 
  1213  0092                     	;# 
  1214  0093                     	;# 
  1215  0093                     	;# 
  1216  0094                     	;# 
  1217  0095                     	;# 
  1218  0095                     	;# 
  1219  0096                     	;# 
  1220  0096                     	;# 
  1221  0098                     	;# 
  1222  0099                     	;# 
  1223  009C                     	;# 
  1224  009D                     	;# 
  1225  009F                     	;# 
  1226  0108                     	;# 
  1227  0109                     	;# 
  1228  010C                     	;# 
  1229  010C                     	;# 
  1230  010D                     	;# 
  1231  010D                     	;# 
  1232  010E                     	;# 
  1233  010F                     	;# 
  1234  0185                     	;# 
  1235  0186                     	;# 
  1236  018C                     	;# 
  1237  001F                     _ADCON0	set	31
  1238  001E                     _ADRES	set	30
  1239  0005                     _PORTA	set	5
  1240  0006                     _PORTB	set	6
  1241  0007                     _PORTC	set	7
  1242  0010                     _T1CON	set	16
  1243  000F                     _TMR1H	set	15
  1244  000E                     _TMR1L	set	14
  1245  005F                     _GIE	set	95
  1246  00F9                     _GO_nDONE	set	249
  1247  005E                     _PEIE	set	94
  1248  002C                     _RA4	set	44
  1249  0032                     _RB2	set	50
  1250  0033                     _RB3	set	51
  1251  0034                     _RB4	set	52
  1252  0035                     _RB5	set	53
  1253  0060                     _TMR1IF	set	96
  1254  009F                     _ADCON1	set	159
  1255  009D                     _FVRCON	set	157
  1256  0090                     _OSCCON	set	144
  1257  0085                     _TRISA	set	133
  1258  0086                     _TRISB	set	134
  1259  0087                     _TRISC	set	135
  1260  0408                     _PS0	set	1032
  1261  0409                     _PS1	set	1033
  1262  040A                     _PS2	set	1034
  1263  040B                     _PSA	set	1035
  1264  0460                     _TMR1IE	set	1120
  1265  0185                     _ANSELA	set	389
  1266  0186                     _ANSELB	set	390
  1267                           
  1268                           	psect	text0
  1269  0000                     __ptext0:	
  1270                           ; #config settings
  1271                           
  1272                           
  1273                           ;psect for function _TMR1_ISR
  1274  0000                     
  1275                           	psect	cinit
  1276  0013                     start_initialization:	
  1277  0013                     __initialization:	
  1278                           
  1279                           ; Clear objects allocated to COMMON
  1280  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1281  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1282  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1283                           
  1284                           ; Clear objects allocated to BANK0
  1285  0016  1383               	bcf	3,7	;select IRP bank0
  1286  0017  3020               	movlw	low __pbssBANK0
  1287  0018  0084               	movwf	4
  1288  0019  3051               	movlw	low (__pbssBANK0+49)
  1289  001A  158A  276F  118A   	fcall	clear_ram0
  1290                           
  1291                           ; Clear objects allocated to BANK1
  1292  001D  30A0               	movlw	low __pbssBANK1
  1293  001E  0084               	movwf	4
  1294  001F  30CF               	movlw	low (__pbssBANK1+47)
  1295  0020  158A  276F         	fcall	clear_ram0
  1296  0022                     end_of_initialization:	
  1297                           ;End of C runtime variable initialization code
  1298                           
  1299  0022                     __end_of__initialization:	
  1300  0022  0183               	clrf	3
  1301  0023  118A  2CD7         	ljmp	_main	;jump to C main() function
  1302                           
  1303                           	psect	bssCOMMON
  1304  0077                     __pbssCOMMON:	
  1305  0077                     _WDT:	
  1306  0077                     	ds	2
  1307  0079                     _LED:	
  1308  0079                     	ds	1
  1309                           
  1310                           	psect	bssBANK0
  1311  0020                     __pbssBANK0:	
  1312  0020                     _myMain:	
  1313  0020                     	ds	8
  1314  0028                     __CDS:	
  1315  0028                     	ds	5
  1316  002D                     _Timer1:	
  1317  002D                     	ds	3
  1318  0030                     _Lights:	
  1319  0030                     	ds	1
  1320  0031                     _LightsControl:	
  1321  0031                     	ds	1
  1322  0032                     _Temp:	
  1323  0032                     	ds	12
  1324  003E                     _Lights1:	
  1325  003E                     	ds	7
  1326  0045                     _VarErrLED:	
  1327  0045                     	ds	4
  1328  0049                     _VarLED1:	
  1329  0049                     	ds	4
  1330  004D                     _VarLED2:	
  1331  004D                     	ds	4
  1332                           
  1333                           	psect	bssBANK1
  1334  00A0                     __pbssBANK1:	
  1335  00A0                     __PIR:	
  1336  00A0                     	ds	47
  1337                           
  1338                           	psect	clrtext
  1339  0F6F                     clear_ram0:	
  1340                           ;	Called with FSR containing the base address, and
  1341                           ;	W with the last address+1
  1342                           
  1343  0F6F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1344  0F70                     clrloop0:	
  1345  0F70  0180               	clrf	0	;clear RAM location pointed to by FSR
  1346  0F71  0A84               	incf	4,f	;increment pointer
  1347  0F72  0604               	xorwf	4,w	;XOR with final address
  1348  0F73  1903               	btfsc	3,2	;have we reached the end yet?
  1349  0F74  3400               	retlw	0	;all done for this memory range, return
  1350  0F75  0604               	xorwf	4,w	;XOR again to restore value
  1351  0F76  2F70               	goto	clrloop0	;do the next byte
  1352                           
  1353                           	psect	cstackCOMMON
  1354  0070                     __pcstackCOMMON:	
  1355  0070                     ?_setLED_Initialization:	
  1356  0070                     ?_setLED_Main:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0070                     ?_Fosc_Set:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0070                     ?_IO_Set:	
  1363                           ; 0 bytes @ 0x0
  1364                           
  1365  0070                     ?_TMR1_Set:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0070                     ?_ADC_Set:	
  1369                           ; 0 bytes @ 0x0
  1370                           
  1371  0070                     ?_WDT_Set:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0070                     ?_TMR1_ISR:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0070                     ??_TMR1_ISR:	
  1378                           ; 0 bytes @ 0x0
  1379                           
  1380  0070                     ?_Timeout_Counter:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0070                     ?_set_TimeoutCleared:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0070                     ?_WDT_Clearing:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0070                     ?_myMain_Initialization:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0070                     ?_Temp_Initialization:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0070                     ?_Lights_Initialization:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0070                     ?_PIR_Initialization:	
  1399                           ; 0 bytes @ 0x0
  1400                           
  1401  0070                     ?_getTemp_AD:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0070                     ?_my_MainTimer:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0070                     ?_Temp_Main:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0070                     ?_Lights_Main:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0070                     ?_PIR_Main:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0070                     ?_LightsPointSelect:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0070                     ?_setTemp_Initialization:	
  1420                           ; 0 bytes @ 0x0
  1421                           
  1422  0070                     ?_setTemp_Main:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0070                     ?_setLights_Initialization:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0070                     ?_setLights_Main:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0070                     ?_Lights_Control:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0070                     ?_Lights_Close:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0070                     ?_setLights_Line:	
  1438                           ; 0 bytes @ 0x0
  1439                           
  1440  0070                     ?_CDS_Initialization:	
  1441                           ; 0 bytes @ 0x0
  1442                           
  1443  0070                     ?_CDS_Main:	
  1444                           ; 0 bytes @ 0x0
  1445                           
  1446  0070                     ?_LedPointSelect:	
  1447                           ; 0 bytes @ 0x0
  1448                           
  1449  0070                     ?_LED_Initialization:	
  1450                           ; 0 bytes @ 0x0
  1451                           
  1452  0070                     ?_LED_Main:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0070                     ?_Mcu_Initialization:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0070                     ?_ISR:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0070                     ??_ISR:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0070                     ?_WDT_Main:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0070                     ?_getMain_AD_Safe:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0070                     ?_getLights_Status:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ?_getCDS_Status:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_getMain_LightsStatus:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_getMain_All_Error_Status:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x0
  1484  0070                     	ds	4
  1485  0074                     ??_getMain_AD_Safe:	
  1486  0074                     ??_Fosc_Set:	
  1487                           ; 0 bytes @ 0x4
  1488                           
  1489  0074                     ??_IO_Set:	
  1490                           ; 0 bytes @ 0x4
  1491                           
  1492  0074                     ??_TMR1_Set:	
  1493                           ; 0 bytes @ 0x4
  1494                           
  1495  0074                     ??_ADC_Set:	
  1496                           ; 0 bytes @ 0x4
  1497                           
  1498  0074                     ??_WDT_Set:	
  1499                           ; 0 bytes @ 0x4
  1500                           
  1501  0074                     ??_Timeout_Counter:	
  1502                           ; 0 bytes @ 0x4
  1503                           
  1504  0074                     ??_set_TimeoutCleared:	
  1505                           ; 0 bytes @ 0x4
  1506                           
  1507  0074                     ??_WDT_Clearing:	
  1508                           ; 0 bytes @ 0x4
  1509                           
  1510  0074                     ??_myMain_Initialization:	
  1511                           ; 0 bytes @ 0x4
  1512                           
  1513  0074                     ??_Temp_Initialization:	
  1514                           ; 0 bytes @ 0x4
  1515                           
  1516  0074                     ??_PIR_Initialization:	
  1517                           ; 0 bytes @ 0x4
  1518                           
  1519  0074                     ??_my_MainTimer:	
  1520                           ; 0 bytes @ 0x4
  1521                           
  1522  0074                     ??_LightsPointSelect:	
  1523                           ; 0 bytes @ 0x4
  1524                           
  1525  0074                     ??_setTemp_Initialization:	
  1526                           ; 0 bytes @ 0x4
  1527                           
  1528  0074                     ??_CDS_Initialization:	
  1529                           ; 0 bytes @ 0x4
  1530                           
  1531  0074                     ??_getCDS_Status:	
  1532                           ; 0 bytes @ 0x4
  1533                           
  1534  0074                     ??_LedPointSelect:	
  1535                           ; 0 bytes @ 0x4
  1536                           
  1537  0074                     ??_WDT_Main:	
  1538                           ; 0 bytes @ 0x4
  1539                           
  1540  0074                     ??_getMain_All_Error_Status:	
  1541                           ; 0 bytes @ 0x4
  1542                           
  1543  0074                     ??___awdiv:	
  1544                           ; 0 bytes @ 0x4
  1545                           
  1546  0074                     ??___lwdiv:	
  1547                           ; 0 bytes @ 0x4
  1548                           
  1549  0074                     ?_getAD:	
  1550                           ; 0 bytes @ 0x4
  1551                           
  1552  0074                     getCDS_Status@result:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555  0074                     getAD@adcon1:	
  1556                           ; 1 bytes @ 0x4
  1557                           
  1558  0074                     getMain_AD_Safe@result:	
  1559                           ; 1 bytes @ 0x4
  1560                           
  1561                           
  1562                           ; 1 bytes @ 0x4
  1563  0074                     	ds	1
  1564  0075                     ??_getAD:	
  1565  0075                     ??_Mcu_Initialization:	
  1566                           ; 0 bytes @ 0x5
  1567                           
  1568  0075                     LedPointSelect@led:	
  1569                           ; 0 bytes @ 0x5
  1570                           
  1571  0075                     getAD@adcon0:	
  1572                           ; 1 bytes @ 0x5
  1573                           
  1574  0075                     LightsPointSelect@lights:	
  1575                           ; 1 bytes @ 0x5
  1576                           
  1577                           
  1578                           ; 1 bytes @ 0x5
  1579  0075                     	ds	1
  1580  0076                     ?_setLED:	
  1581  0076                     ?_getPIR_AD:	
  1582                           ; 0 bytes @ 0x6
  1583                           
  1584  0076                     ?_setLights_Trigger:	
  1585                           ; 0 bytes @ 0x6
  1586                           
  1587  0076                     ??_getLights_Status:	
  1588                           ; 0 bytes @ 0x6
  1589                           
  1590  0076                     ??_setLights_Initialization:	
  1591                           ; 0 bytes @ 0x6
  1592                           
  1593  0076                     ??_setLights_Line:	
  1594                           ; 0 bytes @ 0x6
  1595                           
  1596  0076                     ?_getCDS_AD:	
  1597                           ; 0 bytes @ 0x6
  1598                           
  1599  0076                     ??_getMain_LightsStatus:	
  1600                           ; 0 bytes @ 0x6
  1601                           
  1602  0076                     getCDS_AD@channel2:	
  1603                           ; 0 bytes @ 0x6
  1604                           
  1605  0076                     setLED@command:	
  1606                           ; 1 bytes @ 0x6
  1607                           
  1608  0076                     setLED_Main@led:	
  1609                           ; 1 bytes @ 0x6
  1610                           
  1611  0076                     getTemp_AD@channel:	
  1612                           ; 1 bytes @ 0x6
  1613                           
  1614  0076                     getPIR_AD@channel2:	
  1615                           ; 1 bytes @ 0x6
  1616                           
  1617  0076                     setLights_Initialization@lights:	
  1618                           ; 1 bytes @ 0x6
  1619                           
  1620  0076                     Lights_Control@lights:	
  1621                           ; 1 bytes @ 0x6
  1622                           
  1623  0076                     setLights_Trigger@command:	
  1624                           ; 1 bytes @ 0x6
  1625                           
  1626  0076                     setLights_Line@lights:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629                           
  1630                           ; 1 bytes @ 0x6
  1631  0076                     	ds	1
  1632  0077                     ??_setLED_Initialization:	
  1633  0077                     ??_setLED:	
  1634                           ; 0 bytes @ 0x7
  1635                           
  1636  0077                     ??_Lights_Initialization:	
  1637                           ; 0 bytes @ 0x7
  1638                           
  1639  0077                     ??_Temp_Main:	
  1640                           ; 0 bytes @ 0x7
  1641                           
  1642  0077                     ??_Lights_Main:	
  1643                           ; 0 bytes @ 0x7
  1644                           
  1645  0077                     ??_LED_Initialization:	
  1646                           ; 0 bytes @ 0x7
  1647                           
  1648  0077                     ??_LED_Main:	
  1649                           ; 0 bytes @ 0x7
  1650                           
  1651                           
  1652                           	psect	cstackBANK0
  1653  0051                     __pcstackBANK0:	
  1654                           ; 0 bytes @ 0x7
  1655                           
  1656  0051                     ??_setLED_Main:	
  1657  0051                     ??_getTemp_AD:	
  1658                           ; 0 bytes @ 0x0
  1659                           
  1660  0051                     ??_setLights_Trigger:	
  1661                           ; 0 bytes @ 0x0
  1662                           
  1663  0051                     ??_Lights_Control:	
  1664                           ; 0 bytes @ 0x0
  1665                           
  1666  0051                     ?_setLights:	
  1667                           ; 0 bytes @ 0x0
  1668                           
  1669  0051                     ??_CDS_Main:	
  1670                           ; 0 bytes @ 0x0
  1671                           
  1672  0051                     ??_getCDS_AD:	
  1673                           ; 0 bytes @ 0x0
  1674                           
  1675  0051                     ?___awdiv:	
  1676                           ; 0 bytes @ 0x0
  1677                           
  1678  0051                     ?___lwdiv:	
  1679                           ; 2 bytes @ 0x0
  1680                           
  1681  0051                     setLED@led:	
  1682                           ; 2 bytes @ 0x0
  1683                           
  1684  0051                     getMain_LightsStatus@count:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0051                     setLights@status:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0051                     getLights_Status@lights:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0051                     _getMain_All_Error_Status$1878:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0051                     ___awdiv@divisor:	
  1697                           ; 2 bytes @ 0x0
  1698                           
  1699  0051                     ___lwdiv@divisor:	
  1700                           ; 2 bytes @ 0x0
  1701                           
  1702                           
  1703                           ; 2 bytes @ 0x0
  1704  0051                     	ds	1
  1705  0052                     ??_setLights:	
  1706  0052                     setLED_Initialization@led:	
  1707                           ; 0 bytes @ 0x1
  1708                           
  1709  0052                     getLights_Status@status:	
  1710                           ; 1 bytes @ 0x1
  1711                           
  1712  0052                     setLights_Trigger@lights:	
  1713                           ; 1 bytes @ 0x1
  1714                           
  1715  0052                     getMain_LightsStatus@i:	
  1716                           ; 1 bytes @ 0x1
  1717                           
  1718                           
  1719                           ; 2 bytes @ 0x1
  1720  0052                     	ds	1
  1721  0053                     getCDS_AD@i:	
  1722  0053                     getMain_All_Error_Status@status:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0053                     setLights@lights:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0053                     ___awdiv@dividend:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  0053                     ___lwdiv@dividend:	
  1732                           ; 2 bytes @ 0x2
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0x2
  1736  0053                     	ds	1
  1737  0054                     getCDS_AD@j:	
  1738  0054                     getMain_LightsStatus@status:	
  1739                           ; 1 bytes @ 0x3
  1740                           
  1741  0054                     getMain_All_Error_Status@command:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744                           
  1745                           ; 1 bytes @ 0x3
  1746  0054                     	ds	1
  1747  0055                     ??_PIR_Main:	
  1748  0055                     ??_setLights_Main:	
  1749                           ; 0 bytes @ 0x4
  1750                           
  1751  0055                     ??_Lights_Close:	
  1752                           ; 0 bytes @ 0x4
  1753                           
  1754  0055                     getCDS_AD@channel1:	
  1755                           ; 0 bytes @ 0x4
  1756                           
  1757  0055                     ___awdiv@counter:	
  1758                           ; 1 bytes @ 0x4
  1759                           
  1760  0055                     ___lwdiv@counter:	
  1761                           ; 1 bytes @ 0x4
  1762                           
  1763                           
  1764                           ; 1 bytes @ 0x4
  1765  0055                     	ds	1
  1766  0056                     ___awdiv@sign:	
  1767  0056                     ___lwdiv@quotient:	
  1768                           ; 1 bytes @ 0x5
  1769                           
  1770                           
  1771                           ; 2 bytes @ 0x5
  1772  0056                     	ds	1
  1773  0057                     _Lights_Close$3597:	
  1774  0057                     ___awdiv@quotient:	
  1775                           ; 2 bytes @ 0x6
  1776                           
  1777                           
  1778                           ; 2 bytes @ 0x6
  1779  0057                     	ds	1
  1780  0058                     _setLights_Main$3600:	
  1781                           
  1782                           ; 2 bytes @ 0x7
  1783  0058                     	ds	1
  1784  0059                     ??_getPIR_AD:	
  1785  0059                     ??_setTemp_Main:	
  1786                           ; 0 bytes @ 0x8
  1787                           
  1788                           
  1789                           ; 0 bytes @ 0x8
  1790  0059                     	ds	1
  1791  005A                     setLights_Main@lights:	
  1792                           
  1793                           ; 1 bytes @ 0x9
  1794  005A                     	ds	2
  1795  005C                     getPIR_AD@j:	
  1796                           
  1797                           ; 1 bytes @ 0xB
  1798  005C                     	ds	1
  1799  005D                     getPIR_AD@channel1:	
  1800                           
  1801                           ; 1 bytes @ 0xC
  1802  005D                     	ds	1
  1803  005E                     getPIR_AD@i:	
  1804                           
  1805                           ; 1 bytes @ 0xD
  1806  005E                     	ds	1
  1807  005F                     ?_main:	
  1808  005F                     main@argc:	
  1809                           ; 2 bytes @ 0xE
  1810                           
  1811                           
  1812                           ; 2 bytes @ 0xE
  1813  005F                     	ds	2
  1814  0061                     main@argv:	
  1815                           
  1816                           ; 2 bytes @ 0x10
  1817  0061                     	ds	2
  1818  0063                     ??_main:	
  1819                           
  1820                           ; 0 bytes @ 0x12
  1821  0063                     	ds	1
  1822                           
  1823                           	psect	maintext
  1824  04D7                     __pmaintext:	
  1825 ;;
  1826 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1827 ;;
  1828 ;; *************** function _main *****************
  1829 ;; Defined at:
  1830 ;;		line 7 in file "../src/Main_B1.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  argc            2   14[BANK0 ] int 
  1833 ;;  argv            2   16[BANK0 ] PTR PTR unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2   14[BANK0 ] int 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 17F/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1845 ;;      Params:         0       4       0       0
  1846 ;;      Locals:         0       0       0       0
  1847 ;;      Temps:          0       1       0       0
  1848 ;;      Totals:         0       5       0       0
  1849 ;;Total ram usage:        5 bytes
  1850 ;; Hardware stack levels required when called:    7
  1851 ;; This function calls:
  1852 ;;		_CDS_Initialization
  1853 ;;		_CDS_Main
  1854 ;;		_LED_Initialization
  1855 ;;		_LED_Main
  1856 ;;		_Lights_Initialization
  1857 ;;		_Lights_Main
  1858 ;;		_Mcu_Initialization
  1859 ;;		_PIR_Initialization
  1860 ;;		_PIR_Main
  1861 ;;		_Temp_Initialization
  1862 ;;		_Temp_Main
  1863 ;;		_WDT_Main
  1864 ;;		_getCDS_AD
  1865 ;;		_getPIR_AD
  1866 ;;		_getTemp_AD
  1867 ;;		_myMain_Initialization
  1868 ;;		_my_MainTimer
  1869 ;; This function is called by:
  1870 ;;		Startup code after reset
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _main
  1876  04D7                     _main:	
  1877                           
  1878                           ;Main_B1.c: 8: myMain_Initialization();
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1882  04D7  158A  2739  118A   	fcall	_myMain_Initialization
  1883                           
  1884                           ;Main_B1.c: 9: Mcu_Initialization();
  1885  04DA  158A  27C2  118A   	fcall	_Mcu_Initialization
  1886                           
  1887                           ;Main_B1.c: 10: ;;
  1888                           ;Main_B1.c: 11: LED_Initialization();
  1889  04DD  158A  2782  118A   	fcall	_LED_Initialization
  1890                           
  1891                           ;Main_B1.c: 12: ;;
  1892                           ;Main_B1.c: 14: ;;
  1893                           ;Main_B1.c: 15: Temp_Initialization();
  1894  04E0  158A  273A  118A   	fcall	_Temp_Initialization
  1895                           
  1896                           ;Main_B1.c: 16: ;;
  1897                           ;Main_B1.c: 17: ;;
  1898                           ;Main_B1.c: 18: ;;
  1899                           ;Main_B1.c: 20: ;;
  1900                           ;Main_B1.c: 21: Lights_Initialization();
  1901  04E3  158A  2748  118A   	fcall	_Lights_Initialization
  1902                           
  1903                           ;Main_B1.c: 22: CDS_Initialization();
  1904  04E6  158A  2740  118A   	fcall	_CDS_Initialization
  1905                           
  1906                           ;Main_B1.c: 23: PIR_Initialization();
  1907  04E9  158A  27F0  118A   	fcall	_PIR_Initialization
  1908                           
  1909                           ;Main_B1.c: 24: ;;
  1910                           ;Main_B1.c: 25: ;;
  1911                           ;Main_B1.c: 26: __nop();
  1912  04EC  0000               	nop
  1913  04ED                     l3758:	
  1914                           ;Main_B1.c: 27: ;;
  1915                           ;Main_B1.c: 29: while (1) {
  1916                           
  1917                           
  1918                           ;Main_B1.c: 31: if (myMain.PowerON == 1) {
  1919  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1920  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1921  04EF  1C20               	btfss	_myMain,0
  1922  04F0  2D09               	goto	l3764
  1923                           
  1924                           ;Main_B1.c: 41: getTemp_AD(0x11);
  1925  04F1  3011               	movlw	17
  1926  04F2  118A  26C8  118A   	fcall	_getTemp_AD
  1927                           
  1928                           ;Main_B1.c: 49: getCDS_AD(0x09, 0x31);
  1929  04F5  3031               	movlw	49
  1930  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1931  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1932  04F8  00E3               	movwf	??_main
  1933  04F9  0863               	movf	??_main,w
  1934  04FA  00F6               	movwf	getCDS_AD@channel2
  1935  04FB  3009               	movlw	9
  1936  04FC  118A  269E  118A   	fcall	_getCDS_AD
  1937                           
  1938                           ;Main_B1.c: 53: getPIR_AD(0x05, 0x0d);
  1939  04FF  300D               	movlw	13
  1940  0500  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0501  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0502  00E3               	movwf	??_main
  1943  0503  0863               	movf	??_main,w
  1944  0504  00F6               	movwf	getPIR_AD@channel2
  1945  0505  3005               	movlw	5
  1946  0506  118A  21E1  118A   	fcall	_getPIR_AD
  1947  0509                     l3764:	
  1948                           
  1949                           ;Main_B1.c: 56: }
  1950                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  1951  0509  1283               	bcf	3,5	;RP0=0, select bank0
  1952  050A  1303               	bcf	3,6	;RP1=0, select bank0
  1953  050B  1C2D               	btfss	_Timer1,0
  1954  050C  2CED               	goto	l3758
  1955                           
  1956                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  1957  050D  102D               	bcf	_Timer1,0
  1958                           
  1959                           ;Main_B1.c: 94: my_MainTimer();
  1960  050E  118A  27A9  118A   	fcall	_my_MainTimer
  1961                           
  1962                           ;Main_B1.c: 95: WDT_Main();
  1963  0511  158A  27D1  118A   	fcall	_WDT_Main
  1964                           
  1965                           ;Main_B1.c: 96: ;;
  1966                           ;Main_B1.c: 97: ;;
  1967                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  1968  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0516  1C20               	btfss	_myMain,0
  1971  0517  2CED               	goto	l3758
  1972                           
  1973                           ;Main_B1.c: 99: ;;
  1974                           ;Main_B1.c: 101: LED_Main();
  1975  0518  158A  278E  118A   	fcall	_LED_Main
  1976                           
  1977                           ;Main_B1.c: 102: ;;
  1978                           ;Main_B1.c: 104: ;;
  1979                           ;Main_B1.c: 105: Temp_Main();
  1980  051B  158A  273D  118A   	fcall	_Temp_Main
  1981                           
  1982                           ;Main_B1.c: 106: ;;
  1983                           ;Main_B1.c: 107: ;;
  1984                           ;Main_B1.c: 109: Lights_Main();
  1985  051E  158A  2777  118A   	fcall	_Lights_Main
  1986                           
  1987                           ;Main_B1.c: 110: ;;
  1988                           ;Main_B1.c: 111: ;;
  1989                           ;Main_B1.c: 112: CDS_Main();
  1990  0521  118A  2573  118A   	fcall	_CDS_Main
  1991                           
  1992                           ;Main_B1.c: 113: PIR_Main();
  1993  0524  118A  2025  118A   	fcall	_PIR_Main
  1994                           
  1995                           ;Main_B1.c: 115: ;;
  1996                           ;Main_B1.c: 116: ;;
  1997                           ;Main_B1.c: 117: ;;
  1998  0527  2CED               	goto	l3758
  1999  0528                     __end_of_main:	
  2000                           ;Main_B1.c: 125: }
  2001                           ;Main_B1.c: 126: }
  2002                           ;Main_B1.c: 160: }
  2003                           ;Main_B1.c: 161: return (0);
  2004                           ;	Return value of _main is never used
  2005                           
  2006                           
  2007                           	psect	text1
  2008  07A9                     __ptext1:	
  2009 ;; *************** function _my_MainTimer *****************
  2010 ;; Defined at:
  2011 ;;		line 180 in file "../src/Main_B1.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;		None               void
  2018 ;; Registers used:
  2019 ;;		wreg, status,2
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2025 ;;      Params:         0       0       0       0
  2026 ;;      Locals:         0       0       0       0
  2027 ;;      Temps:          0       0       0       0
  2028 ;;      Totals:         0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    2
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _my_MainTimer
  2041  07A9                     _my_MainTimer:	
  2042                           
  2043                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _my_MainTimer: [wreg+status,2]
  2047  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  2048  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  2049  07AB  1820               	btfsc	_myMain,0
  2050  07AC  0008               	return
  2051                           
  2052                           ;Main_B1.c: 183: myMain.PowerCount++;
  2053  07AD  3001               	movlw	1
  2054  07AE  07A2               	addwf	_myMain+2,f
  2055  07AF  1803               	skipnc
  2056  07B0  0AA3               	incf	_myMain+3,f
  2057  07B1  3000               	movlw	0
  2058  07B2  07A3               	addwf	_myMain+3,f
  2059                           
  2060                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  2061  07B3  3096               	movlw	150
  2062  07B4  0622               	xorwf	_myMain+2,w
  2063  07B5  0423               	iorwf	_myMain+3,w
  2064  07B6  1D03               	skipz
  2065  07B7  0008               	return
  2066                           
  2067                           ;Main_B1.c: 185: {
  2068                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  2069  07B8  01A2               	clrf	_myMain+2
  2070  07B9  01A3               	clrf	_myMain+3
  2071                           
  2072                           ;Main_B1.c: 187: myMain.PowerON = 1;
  2073  07BA  1420               	bsf	_myMain,0
  2074                           
  2075                           ;Main_B1.c: 193: ;;
  2076                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2077  07BB  1620               	bsf	_myMain,4
  2078                           
  2079                           ;Main_B1.c: 203: }
  2080                           ;Main_B1.c: 204: } else {
  2081                           
  2082                           ;Main_B1.c: 196: ;;
  2083  07BC  0008               	return
  2084  07BD                     __end_of_my_MainTimer:	
  2085                           
  2086                           	psect	text2
  2087  0F39                     __ptext2:	
  2088 ;; *************** function _myMain_Initialization *****************
  2089 ;; Defined at:
  2090 ;;		line 167 in file "../src/Main_B1.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;		None               void
  2097 ;; Registers used:
  2098 ;;		None
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2104 ;;      Params:         0       0       0       0
  2105 ;;      Locals:         0       0       0       0
  2106 ;;      Temps:          0       0       0       0
  2107 ;;      Totals:         0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    2
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _myMain_Initialization
  2120  0F39                     _myMain_Initialization:	
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _myMain_Initialization: []
  2124  0F39  0008               	return
  2125  0F3A                     __end_of_myMain_Initialization:	
  2126                           
  2127                           	psect	text3
  2128  06C8                     __ptext3:	
  2129 ;; *************** function _getTemp_AD *****************
  2130 ;; Defined at:
  2131 ;;		line 33 in file "../src/OverTemperature_B1.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  channel         1    wreg     unsigned char 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  channel         1    6[COMMON] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;		None               void
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0, pclath, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2145 ;;      Params:         0       0       0       0
  2146 ;;      Locals:         1       0       0       0
  2147 ;;      Temps:          0       2       0       0
  2148 ;;      Totals:         1       2       0       0
  2149 ;;Total ram usage:        3 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    4
  2152 ;; This function calls:
  2153 ;;		_getAD
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _getTemp_AD
  2161  06C8                     _getTemp_AD:	
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2165                           ;getTemp_AD@channel stored from wreg
  2166  06C8  00F6               	movwf	getTemp_AD@channel
  2167                           
  2168                           ;OverTemperature_B1.c: 47: if (Temp.ADtoGO == 1) {
  2169  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2170  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2171  06CB  1D32               	btfss	_Temp,2
  2172  06CC  0008               	return
  2173                           
  2174                           ;OverTemperature_B1.c: 48: Temp.ADRES = getAD(channel, 0x70);
  2175  06CD  3070               	movlw	112
  2176  06CE  00D1               	movwf	??_getTemp_AD
  2177  06CF  0851               	movf	??_getTemp_AD,w
  2178  06D0  00F4               	movwf	getAD@adcon1
  2179  06D1  0876               	movf	getTemp_AD@channel,w
  2180  06D2  118A  270B  118A   	fcall	_getAD
  2181  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2182  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2183  06D7  00D2               	movwf	??_getTemp_AD+1
  2184  06D8  0852               	movf	??_getTemp_AD+1,w
  2185  06D9  00BB               	movwf	_Temp+9
  2186                           
  2187                           ;OverTemperature_B1.c: 49: if (Temp.ADH[0] < Temp.ADRES) {
  2188  06DA  083B               	movf	_Temp+9,w
  2189  06DB  0239               	subwf	_Temp+7,w
  2190  06DC  1803               	skipnc
  2191  06DD  2EE3               	goto	l3512
  2192                           
  2193                           ;OverTemperature_B1.c: 50: Temp.ADH[0] = Temp.ADRES;
  2194  06DE  083B               	movf	_Temp+9,w
  2195  06DF  00D1               	movwf	??_getTemp_AD
  2196  06E0  0851               	movf	??_getTemp_AD,w
  2197  06E1  00B9               	movwf	_Temp+7
  2198                           
  2199                           ;OverTemperature_B1.c: 51: } else if (Temp.ADH[1] < Temp.ADRES) {
  2200  06E2  0008               	return
  2201  06E3                     l3512:	
  2202  06E3  083B               	movf	_Temp+9,w
  2203  06E4  023A               	subwf	_Temp+8,w
  2204  06E5  1803               	skipnc
  2205  06E6  0008               	return
  2206                           
  2207                           ;OverTemperature_B1.c: 52: Temp.ADH[1] = Temp.ADRES;
  2208  06E7  083B               	movf	_Temp+9,w
  2209  06E8  00D1               	movwf	??_getTemp_AD
  2210  06E9  0851               	movf	??_getTemp_AD,w
  2211  06EA  00BA               	movwf	_Temp+8
  2212  06EB  0008               	return
  2213  06EC                     __end_of_getTemp_AD:	
  2214                           
  2215                           	psect	text4
  2216  01E1                     __ptext4:	
  2217 ;; *************** function _getPIR_AD *****************
  2218 ;; Defined at:
  2219 ;;		line 165 in file "../src/PIR_B1.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  channel1        1    wreg     unsigned char 
  2222 ;;  channel2        1    6[COMMON] unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  channel1        1   12[BANK0 ] unsigned char 
  2225 ;;  i               1   13[BANK0 ] unsigned char 
  2226 ;;  j               1   11[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2236 ;;      Params:         1       0       0       0
  2237 ;;      Locals:         0       3       0       0
  2238 ;;      Temps:          0       3       0       0
  2239 ;;      Totals:         1       6       0       0
  2240 ;;Total ram usage:        7 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    4
  2243 ;; This function calls:
  2244 ;;		___awdiv
  2245 ;;		___lwdiv
  2246 ;;		_getAD
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _getPIR_AD
  2254  01E1                     _getPIR_AD:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2258                           ;getPIR_AD@channel1 stored from wreg
  2259  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2260  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2261  01E3  00DD               	movwf	getPIR_AD@channel1
  2262                           
  2263                           ;PIR_B1.c: 166: char i = 0, j = 0;
  2264  01E4  01DE               	clrf	getPIR_AD@i
  2265  01E5  01DC               	clrf	getPIR_AD@j
  2266                           
  2267                           ;PIR_B1.c: 168: if (_PIR.ADtoGO == 1) {
  2268  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2269  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2270  01E8  1CA0               	btfss	__PIR^(0+128),1
  2271  01E9  0008               	return
  2272                           
  2273                           ;PIR_B1.c: 169: _PIR.GO = 1;
  2274  01EA  1520               	bsf	__PIR^(0+128),2
  2275                           
  2276                           ;PIR_B1.c: 170: _PIR.ADRES = getAD(channel1, 0x70);
  2277  01EB  3070               	movlw	112
  2278  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2279  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2280  01EE  00D9               	movwf	??_getPIR_AD
  2281  01EF  0859               	movf	??_getPIR_AD,w
  2282  01F0  00F4               	movwf	getAD@adcon1
  2283  01F1  085D               	movf	getPIR_AD@channel1,w
  2284  01F2  118A  270B  118A   	fcall	_getAD
  2285  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2286  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2287  01F7  00DA               	movwf	??_getPIR_AD+1
  2288  01F8  085A               	movf	??_getPIR_AD+1,w
  2289  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2290  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2291  01FB  00A2               	movwf	(__PIR^(0+128)+2)
  2292                           
  2293                           ;PIR_B1.c: 171: _PIR.VRAD = _PIR.ADRES / 51;
  2294  01FC  3033               	movlw	51
  2295  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2296  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2297  01FF  00D1               	movwf	___awdiv@divisor
  2298  0200  3000               	movlw	0
  2299  0201  00D2               	movwf	___awdiv@divisor+1
  2300  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0204  0822               	movf	(__PIR^(0+128)+2),w
  2303  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0207  00D9               	movwf	??_getPIR_AD
  2306  0208  01DA               	clrf	??_getPIR_AD+1
  2307  0209  0859               	movf	??_getPIR_AD,w
  2308  020A  00D3               	movwf	___awdiv@dividend
  2309  020B  085A               	movf	??_getPIR_AD+1,w
  2310  020C  00D4               	movwf	___awdiv@dividend+1
  2311  020D  118A  2423  118A   	fcall	___awdiv
  2312  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0212  0851               	movf	?___awdiv,w
  2315  0213  00DB               	movwf	??_getPIR_AD+2
  2316  0214  085B               	movf	??_getPIR_AD+2,w
  2317  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2318  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2319  0217  00A3               	movwf	(__PIR^(0+128)+3)
  2320                           
  2321                           ;PIR_B1.c: 172: _PIR.VRAD1 = _PIR.ADRES;
  2322  0218  0822               	movf	(__PIR^(0+128)+2),w
  2323  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2324  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2325  021B  00D9               	movwf	??_getPIR_AD
  2326  021C  0859               	movf	??_getPIR_AD,w
  2327  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2328  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2329  021F  00A4               	movwf	(__PIR^(0+128)+4)
  2330                           
  2331                           ;PIR_B1.c: 173: _PIR.ADRES = getAD(channel2, 0x70);
  2332  0220  3070               	movlw	112
  2333  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0223  00D9               	movwf	??_getPIR_AD
  2336  0224  0859               	movf	??_getPIR_AD,w
  2337  0225  00F4               	movwf	getAD@adcon1
  2338  0226  0876               	movf	getPIR_AD@channel2,w
  2339  0227  118A  270B  118A   	fcall	_getAD
  2340  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2341  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2342  022C  00DA               	movwf	??_getPIR_AD+1
  2343  022D  085A               	movf	??_getPIR_AD+1,w
  2344  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2345  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2346  0230  00A2               	movwf	(__PIR^(0+128)+2)
  2347                           
  2348                           ;PIR_B1.c: 174: _PIR.SignalAD = _PIR.ADRES;
  2349  0231  0822               	movf	(__PIR^(0+128)+2),w
  2350  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0234  00D9               	movwf	??_getPIR_AD
  2353  0235  0859               	movf	??_getPIR_AD,w
  2354  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0237  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0238  00A1               	movwf	(__PIR^(0+128)+1)
  2357                           
  2358                           ;PIR_B1.c: 176: switch (_PIR.VRAD) {
  2359  0239  2A55               	goto	l3544
  2360  023A                     l3528:	
  2361                           ;PIR_B1.c: 177: case 0:
  2362                           
  2363                           
  2364                           ;PIR_B1.c: 178: if (_PIR.VRAD1 < 10) {
  2365  023A  300A               	movlw	10
  2366  023B  0224               	subwf	(__PIR^(0+128)+4),w
  2367  023C  1803               	skipnc
  2368  023D  2A40               	goto	l3532
  2369                           
  2370                           ;PIR_B1.c: 179: _PIR.CloseTimeValue = 5;
  2371  023E  3005               	movlw	5
  2372  023F  2A41               	goto	L1
  2373  0240                     l3532:	
  2374                           ;PIR_B1.c: 180: } else {
  2375                           
  2376                           
  2377                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 60;
  2378  0240  303C               	movlw	60
  2379  0241                     L1:	
  2380  0241  00C7               	movwf	(__PIR^(0+128)+39)
  2381  0242  3000               	movlw	0
  2382  0243  2A53               	goto	L5
  2383  0244                     l3534:	
  2384                           ;PIR_B1.c: 184: case 1:
  2385                           
  2386                           ;PIR_B1.c: 182: }
  2387                           ;PIR_B1.c: 183: break;
  2388                           
  2389                           
  2390                           ;PIR_B1.c: 185: _PIR.CloseTimeValue = 300;
  2391  0244  302C               	movlw	44
  2392  0245  00C7               	movwf	(__PIR^(0+128)+39)
  2393  0246  3001               	movlw	1
  2394  0247  2A53               	goto	L5
  2395  0248                     l3536:	
  2396                           ;PIR_B1.c: 187: case 2:
  2397                           
  2398                           ;PIR_B1.c: 186: break;
  2399                           
  2400                           
  2401                           ;PIR_B1.c: 188: _PIR.CloseTimeValue = 600;
  2402  0248  3058               	movlw	88
  2403  0249  00C7               	movwf	(__PIR^(0+128)+39)
  2404  024A  3002               	movlw	2
  2405  024B  2A53               	goto	L5
  2406  024C                     l3538:	
  2407                           ;PIR_B1.c: 190: case 3:
  2408                           
  2409                           ;PIR_B1.c: 189: break;
  2410                           
  2411                           
  2412                           ;PIR_B1.c: 191: _PIR.CloseTimeValue = 900;
  2413  024C  3084               	movlw	132
  2414  024D  00C7               	movwf	(__PIR^(0+128)+39)
  2415  024E  3003               	movlw	3
  2416  024F  2A53               	goto	L5
  2417  0250                     l3540:	
  2418                           ;PIR_B1.c: 193: case 4:
  2419                           
  2420                           ;PIR_B1.c: 192: break;
  2421                           
  2422                           
  2423                           ;PIR_B1.c: 194: _PIR.CloseTimeValue = 1200;
  2424  0250  30B0               	movlw	176
  2425  0251  00C7               	movwf	(__PIR^(0+128)+39)
  2426  0252  3004               	movlw	4
  2427  0253                     L5:	
  2428  0253  00C8               	movwf	(__PIR^(0+128)+40)
  2429                           
  2430                           ;PIR_B1.c: 196: }
  2431                           
  2432                           ;PIR_B1.c: 195: break;
  2433  0254  2A66               	goto	l3546
  2434  0255                     l3544:	
  2435  0255  0823               	movf	(__PIR^(0+128)+3),w
  2436                           
  2437                           ; Switch size 1, requested type "space"
  2438                           ; Number of cases is 5, Range of values is 0 to 4
  2439                           ; switch strategies available:
  2440                           ; Name         Instructions Cycles
  2441                           ; simple_byte           16     9 (average)
  2442                           ; direct_byte           17     7 (fixed)
  2443                           ; jumptable            260     6 (fixed)
  2444                           ;	Chosen strategy is simple_byte
  2445  0256  3A00               	xorlw	0	; case 0
  2446  0257  1903               	skipnz
  2447  0258  2A3A               	goto	l3528
  2448  0259  3A01               	xorlw	1	; case 1
  2449  025A  1903               	skipnz
  2450  025B  2A44               	goto	l3534
  2451  025C  3A03               	xorlw	3	; case 2
  2452  025D  1903               	skipnz
  2453  025E  2A48               	goto	l3536
  2454  025F  3A01               	xorlw	1	; case 3
  2455  0260  1903               	skipnz
  2456  0261  2A4C               	goto	l3538
  2457  0262  3A07               	xorlw	7	; case 4
  2458  0263  1903               	skipnz
  2459  0264  2A50               	goto	l3540
  2460  0265  2A66               	goto	l3546
  2461  0266                     l3546:	
  2462                           
  2463                           ;PIR_B1.c: 199: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2464  0266  0821               	movf	(__PIR^(0+128)+1),w
  2465  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0269  00D9               	movwf	??_getPIR_AD
  2468  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2469  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2470  026C  0827               	movf	(__PIR^(0+128)+7),w
  2471  026D  3EA8               	addlw	(__PIR+8)& (0+255)
  2472  026E  0084               	movwf	4
  2473  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0270  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0271  0859               	movf	??_getPIR_AD,w
  2476  0272  1383               	bcf	3,7	;select IRP bank1
  2477  0273  0080               	movwf	0
  2478                           
  2479                           ;PIR_B1.c: 200: for (i = 0; i < 10; i++) {
  2480  0274  01DE               	clrf	getPIR_AD@i
  2481  0275  300A               	movlw	10
  2482  0276  025E               	subwf	getPIR_AD@i,w
  2483  0277  1803               	btfsc	3,0
  2484  0278  2A95               	goto	l3560
  2485  0279                     l3554:	
  2486                           
  2487                           ;PIR_B1.c: 201: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2488  0279  085E               	movf	getPIR_AD@i,w
  2489  027A  3EA8               	addlw	(__PIR+8)& (0+255)
  2490  027B  0084               	movwf	4
  2491  027C  0800               	movf	0,w
  2492  027D  00D9               	movwf	??_getPIR_AD
  2493  027E  01DA               	clrf	??_getPIR_AD+1
  2494  027F  0859               	movf	??_getPIR_AD,w
  2495  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0281  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0282  07B2               	addwf	(__PIR^(0+128)+18),f
  2498  0283  1803               	skipnc
  2499  0284  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2500  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0287  085A               	movf	??_getPIR_AD+1,w
  2503  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2504  0289  1303               	bcf	3,6	;RP1=0, select bank1
  2505  028A  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2506  028B  3001               	movlw	1
  2507  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2508  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2509  028E  00D9               	movwf	??_getPIR_AD
  2510  028F  0859               	movf	??_getPIR_AD,w
  2511  0290  07DE               	addwf	getPIR_AD@i,f
  2512  0291  300A               	movlw	10
  2513  0292  025E               	subwf	getPIR_AD@i,w
  2514  0293  1C03               	skipc
  2515  0294  2A79               	goto	l3554
  2516  0295                     l3560:	
  2517                           
  2518                           ;PIR_B1.c: 202: }
  2519                           ;PIR_B1.c: 203: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2520  0295  300A               	movlw	10
  2521  0296  00D1               	movwf	___lwdiv@divisor
  2522  0297  3000               	movlw	0
  2523  0298  00D2               	movwf	___lwdiv@divisor+1
  2524  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2525  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2526  029B  0833               	movf	((__PIR+1)^(0+128)+18),w
  2527  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2528  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2529  029E  01D4               	clrf	___lwdiv@dividend+1
  2530  029F  07D4               	addwf	___lwdiv@dividend+1,f
  2531  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2532  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2533  02A2  0832               	movf	(__PIR^(0+128)+18),w
  2534  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2535  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2536  02A5  01D3               	clrf	___lwdiv@dividend
  2537  02A6  07D3               	addwf	___lwdiv@dividend,f
  2538  02A7  118A  25B6  118A   	fcall	___lwdiv
  2539  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2540  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2541  02AC  0851               	movf	?___lwdiv,w
  2542  02AD  00D9               	movwf	??_getPIR_AD
  2543  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2544  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  2545  02B0  0834               	movf	(__PIR^(0+128)+20),w
  2546  02B1  3EB5               	addlw	(__PIR+21)& (0+255)
  2547  02B2  0084               	movwf	4
  2548  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2549  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2550  02B5  0859               	movf	??_getPIR_AD,w
  2551  02B6  1383               	bcf	3,7	;select IRP bank1
  2552  02B7  0080               	movwf	0
  2553                           
  2554                           ;PIR_B1.c: 204: _PIR.TenAverageValue = 0;
  2555  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2556  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2557  02BA  01B2               	clrf	(__PIR^(0+128)+18)
  2558  02BB  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2559                           
  2560                           ;PIR_B1.c: 206: for (i = 0; i <= 9; i++) {
  2561  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2562  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2563  02BE  01DE               	clrf	getPIR_AD@i
  2564  02BF  300A               	movlw	10
  2565  02C0  025E               	subwf	getPIR_AD@i,w
  2566  02C1  1803               	btfsc	3,0
  2567  02C2  2ADF               	goto	l3576
  2568  02C3                     l3570:	
  2569                           
  2570                           ;PIR_B1.c: 207: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2571  02C3  085E               	movf	getPIR_AD@i,w
  2572  02C4  3EB5               	addlw	(__PIR+21)& (0+255)
  2573  02C5  0084               	movwf	4
  2574  02C6  0800               	movf	0,w
  2575  02C7  00D9               	movwf	??_getPIR_AD
  2576  02C8  01DA               	clrf	??_getPIR_AD+1
  2577  02C9  0859               	movf	??_getPIR_AD,w
  2578  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2579  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2580  02CC  07BF               	addwf	(__PIR^(0+128)+31),f
  2581  02CD  1803               	skipnc
  2582  02CE  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2583  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2584  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2585  02D1  085A               	movf	??_getPIR_AD+1,w
  2586  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2587  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2588  02D4  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2589  02D5  3001               	movlw	1
  2590  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2591  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2592  02D8  00D9               	movwf	??_getPIR_AD
  2593  02D9  0859               	movf	??_getPIR_AD,w
  2594  02DA  07DE               	addwf	getPIR_AD@i,f
  2595  02DB  300A               	movlw	10
  2596  02DC  025E               	subwf	getPIR_AD@i,w
  2597  02DD  1C03               	skipc
  2598  02DE  2AC3               	goto	l3570
  2599  02DF                     l3576:	
  2600                           
  2601                           ;PIR_B1.c: 208: }
  2602                           ;PIR_B1.c: 209: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2603  02DF  300A               	movlw	10
  2604  02E0  00D1               	movwf	___lwdiv@divisor
  2605  02E1  3000               	movlw	0
  2606  02E2  00D2               	movwf	___lwdiv@divisor+1
  2607  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2608  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  2609  02E5  0840               	movf	((__PIR+1)^(0+128)+31),w
  2610  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2611  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2612  02E8  01D4               	clrf	___lwdiv@dividend+1
  2613  02E9  07D4               	addwf	___lwdiv@dividend+1,f
  2614  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2615  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2616  02EC  083F               	movf	(__PIR^(0+128)+31),w
  2617  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2618  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2619  02EF  01D3               	clrf	___lwdiv@dividend
  2620  02F0  07D3               	addwf	___lwdiv@dividend,f
  2621  02F1  118A  25B6  118A   	fcall	___lwdiv
  2622  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2623  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2624  02F6  0851               	movf	?___lwdiv,w
  2625  02F7  00D9               	movwf	??_getPIR_AD
  2626  02F8  0859               	movf	??_getPIR_AD,w
  2627  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2628  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2629  02FB  00A6               	movwf	(__PIR^(0+128)+6)
  2630                           
  2631                           ;PIR_B1.c: 210: _PIR.HundredAverageValue = 0;
  2632  02FC  01BF               	clrf	(__PIR^(0+128)+31)
  2633  02FD  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2634                           
  2635                           ;PIR_B1.c: 212: if (_PIR.TenCount < 10) {
  2636  02FE  300A               	movlw	10
  2637  02FF  0227               	subwf	(__PIR^(0+128)+7),w
  2638  0300  1803               	skipnc
  2639  0301  2B0B               	goto	l3584
  2640                           
  2641                           ;PIR_B1.c: 213: _PIR.TenCount++;
  2642  0302  3001               	movlw	1
  2643  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0305  00D9               	movwf	??_getPIR_AD
  2646  0306  0859               	movf	??_getPIR_AD,w
  2647  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0308  1303               	bcf	3,6	;RP1=0, select bank1
  2649  0309  07A7               	addwf	(__PIR^(0+128)+7),f
  2650                           
  2651                           ;PIR_B1.c: 214: } else {
  2652  030A  0008               	return
  2653  030B                     l3584:	
  2654                           
  2655                           ;PIR_B1.c: 215: _PIR.TenCount = 0;
  2656  030B  01A7               	clrf	(__PIR^(0+128)+7)
  2657                           
  2658                           ;PIR_B1.c: 216: if (_PIR.HundreCount < 10)
  2659  030C  300A               	movlw	10
  2660  030D  0234               	subwf	(__PIR^(0+128)+20),w
  2661  030E  1803               	skipnc
  2662  030F  2B19               	goto	l3590
  2663                           
  2664                           ;PIR_B1.c: 217: _PIR.HundreCount++;
  2665  0310  3001               	movlw	1
  2666  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0313  00D9               	movwf	??_getPIR_AD
  2669  0314  0859               	movf	??_getPIR_AD,w
  2670  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0317  07B4               	addwf	(__PIR^(0+128)+20),f
  2673  0318  0008               	return
  2674  0319                     l3590:	
  2675                           
  2676                           ;PIR_B1.c: 218: else
  2677                           ;PIR_B1.c: 219: _PIR.HundreCount = 0;
  2678  0319  01B4               	clrf	(__PIR^(0+128)+20)
  2679  031A  0008               	return
  2680  031B                     __end_of_getPIR_AD:	
  2681                           
  2682                           	psect	text5
  2683  05B6                     __ptext5:	
  2684 ;; *************** function ___lwdiv *****************
  2685 ;; Defined at:
  2686 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  divisor         2    0[BANK0 ] unsigned int 
  2689 ;;  dividend        2    2[BANK0 ] unsigned int 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  quotient        2    5[BANK0 ] unsigned int 
  2692 ;;  counter         1    4[BANK0 ] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    0[BANK0 ] unsigned int 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2702 ;;      Params:         0       4       0       0
  2703 ;;      Locals:         0       3       0       0
  2704 ;;      Temps:          1       0       0       0
  2705 ;;      Totals:         1       7       0       0
  2706 ;;Total ram usage:        8 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    2
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_getPIR_AD
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function ___lwdiv
  2718  05B6                     ___lwdiv:	
  2719                           
  2720                           ;incstack = 0
  2721                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2722  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2723  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2724  05B8  01D6               	clrf	___lwdiv@quotient
  2725  05B9  01D7               	clrf	___lwdiv@quotient+1
  2726  05BA  0852               	movf	___lwdiv@divisor+1,w
  2727  05BB  0451               	iorwf	___lwdiv@divisor,w
  2728  05BC  1903               	skipnz
  2729  05BD  2DEF               	goto	l3454
  2730  05BE  01D5               	clrf	___lwdiv@counter
  2731  05BF  0AD5               	incf	___lwdiv@counter,f
  2732  05C0                     l3442:	
  2733  05C0  1BD2               	btfsc	___lwdiv@divisor+1,7
  2734  05C1  2DCE               	goto	l3444
  2735  05C2  3001               	movlw	1
  2736  05C3                     u3605:	
  2737  05C3  1003               	clrc
  2738  05C4  0DD1               	rlf	___lwdiv@divisor,f
  2739  05C5  0DD2               	rlf	___lwdiv@divisor+1,f
  2740  05C6  3EFF               	addlw	-1
  2741  05C7  1D03               	skipz
  2742  05C8  2DC3               	goto	u3605
  2743  05C9  3001               	movlw	1
  2744  05CA  00F4               	movwf	??___lwdiv
  2745  05CB  0874               	movf	??___lwdiv,w
  2746  05CC  07D5               	addwf	___lwdiv@counter,f
  2747  05CD  2DC0               	goto	l3442
  2748  05CE                     l3444:	
  2749  05CE  3001               	movlw	1
  2750  05CF                     u3625:	
  2751  05CF  1003               	clrc
  2752  05D0  0DD6               	rlf	___lwdiv@quotient,f
  2753  05D1  0DD7               	rlf	___lwdiv@quotient+1,f
  2754  05D2  3EFF               	addlw	-1
  2755  05D3  1D03               	skipz
  2756  05D4  2DCF               	goto	u3625
  2757  05D5  0852               	movf	___lwdiv@divisor+1,w
  2758  05D6  0254               	subwf	___lwdiv@dividend+1,w
  2759  05D7  1D03               	skipz
  2760  05D8  2DDB               	goto	u3635
  2761  05D9  0851               	movf	___lwdiv@divisor,w
  2762  05DA  0253               	subwf	___lwdiv@dividend,w
  2763  05DB                     u3635:	
  2764  05DB  1C03               	skipc
  2765  05DC  2DE4               	goto	l3450
  2766  05DD  0851               	movf	___lwdiv@divisor,w
  2767  05DE  02D3               	subwf	___lwdiv@dividend,f
  2768  05DF  0852               	movf	___lwdiv@divisor+1,w
  2769  05E0  1C03               	skipc
  2770  05E1  03D4               	decf	___lwdiv@dividend+1,f
  2771  05E2  02D4               	subwf	___lwdiv@dividend+1,f
  2772  05E3  1456               	bsf	___lwdiv@quotient,0
  2773  05E4                     l3450:	
  2774  05E4  3001               	movlw	1
  2775  05E5                     u3645:	
  2776  05E5  1003               	clrc
  2777  05E6  0CD2               	rrf	___lwdiv@divisor+1,f
  2778  05E7  0CD1               	rrf	___lwdiv@divisor,f
  2779  05E8  3EFF               	addlw	-1
  2780  05E9  1D03               	skipz
  2781  05EA  2DE5               	goto	u3645
  2782  05EB  3001               	movlw	1
  2783  05EC  02D5               	subwf	___lwdiv@counter,f
  2784  05ED  1D03               	btfss	3,2
  2785  05EE  2DCE               	goto	l3444
  2786  05EF                     l3454:	
  2787  05EF  0857               	movf	___lwdiv@quotient+1,w
  2788  05F0  01D2               	clrf	?___lwdiv+1
  2789  05F1  07D2               	addwf	?___lwdiv+1,f
  2790  05F2  0856               	movf	___lwdiv@quotient,w
  2791  05F3  01D1               	clrf	?___lwdiv
  2792  05F4  07D1               	addwf	?___lwdiv,f
  2793  05F5  0008               	return
  2794  05F6                     __end_of___lwdiv:	
  2795                           
  2796                           	psect	text6
  2797  069E                     __ptext6:	
  2798 ;; *************** function _getCDS_AD *****************
  2799 ;; Defined at:
  2800 ;;		line 49 in file "../src/CDS_B1.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  channel1        1    wreg     unsigned char 
  2803 ;;  channel2        1    6[COMMON] unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  channel1        1    4[BANK0 ] unsigned char 
  2806 ;;  j               1    3[BANK0 ] unsigned char 
  2807 ;;  i               1    2[BANK0 ] unsigned char 
  2808 ;; Return value:  Size  Location     Type
  2809 ;;		None               void
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, pclath, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2817 ;;      Params:         1       0       0       0
  2818 ;;      Locals:         0       3       0       0
  2819 ;;      Temps:          0       2       0       0
  2820 ;;      Totals:         1       5       0       0
  2821 ;;Total ram usage:        6 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    4
  2824 ;; This function calls:
  2825 ;;		_getAD
  2826 ;; This function is called by:
  2827 ;;		_main
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _getCDS_AD
  2833  069E                     _getCDS_AD:	
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2837                           ;getCDS_AD@channel1 stored from wreg
  2838  069E  1283               	bcf	3,5	;RP0=0, select bank0
  2839  069F  1303               	bcf	3,6	;RP1=0, select bank0
  2840  06A0  00D5               	movwf	getCDS_AD@channel1
  2841                           
  2842                           ;CDS_B1.c: 50: char i = 0, j = 0;
  2843  06A1  01D3               	clrf	getCDS_AD@i
  2844  06A2  01D4               	clrf	getCDS_AD@j
  2845                           
  2846                           ;CDS_B1.c: 51: if (_CDS.ADtoGO == 1) {
  2847  06A3  1DA8               	btfss	__CDS,3
  2848  06A4  0008               	return
  2849                           
  2850                           ;CDS_B1.c: 52: _CDS.GO = 1;
  2851  06A5  14A8               	bsf	__CDS,1
  2852                           
  2853                           ;CDS_B1.c: 53: _CDS.ADRES = getAD(channel1, 0x70);
  2854  06A6  3070               	movlw	112
  2855  06A7  00D1               	movwf	??_getCDS_AD
  2856  06A8  0851               	movf	??_getCDS_AD,w
  2857  06A9  00F4               	movwf	getAD@adcon1
  2858  06AA  0855               	movf	getCDS_AD@channel1,w
  2859  06AB  118A  270B  118A   	fcall	_getAD
  2860  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  2861  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  2862  06B0  00D2               	movwf	??_getCDS_AD+1
  2863  06B1  0852               	movf	??_getCDS_AD+1,w
  2864  06B2  00AC               	movwf	__CDS+4
  2865                           
  2866                           ;CDS_B1.c: 54: _CDS.VRAD = _CDS.ADRES;
  2867  06B3  082C               	movf	__CDS+4,w
  2868  06B4  00D1               	movwf	??_getCDS_AD
  2869  06B5  0851               	movf	??_getCDS_AD,w
  2870  06B6  00AA               	movwf	__CDS+2
  2871                           
  2872                           ;CDS_B1.c: 55: _CDS.ADRES = getAD(channel2, 0x70);
  2873  06B7  3070               	movlw	112
  2874  06B8  00D1               	movwf	??_getCDS_AD
  2875  06B9  0851               	movf	??_getCDS_AD,w
  2876  06BA  00F4               	movwf	getAD@adcon1
  2877  06BB  0876               	movf	getCDS_AD@channel2,w
  2878  06BC  118A  270B         	fcall	_getAD
  2879  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  2880  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  2881  06C0  00D2               	movwf	??_getCDS_AD+1
  2882  06C1  0852               	movf	??_getCDS_AD+1,w
  2883  06C2  00AC               	movwf	__CDS+4
  2884                           
  2885                           ;CDS_B1.c: 56: _CDS.SignalAD = _CDS.ADRES;
  2886  06C3  082C               	movf	__CDS+4,w
  2887  06C4  00D1               	movwf	??_getCDS_AD
  2888  06C5  0851               	movf	??_getCDS_AD,w
  2889  06C6  00AB               	movwf	__CDS+3
  2890  06C7  0008               	return
  2891  06C8                     __end_of_getCDS_AD:	
  2892                           
  2893                           	psect	text7
  2894  070B                     __ptext7:	
  2895 ;; *************** function _getAD *****************
  2896 ;; Defined at:
  2897 ;;		line 426 in file "../src/MCU_B1.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  adcon0          1    wreg     unsigned char 
  2900 ;;  adcon1          1    4[COMMON] unsigned char 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  adcon0          1    5[COMMON] unsigned char 
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  1    wreg      unsigned char 
  2905 ;; Registers used:
  2906 ;;		wreg, status,2, status,0, pclath, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2912 ;;      Params:         1       0       0       0
  2913 ;;      Locals:         1       0       0       0
  2914 ;;      Temps:          0       0       0       0
  2915 ;;      Totals:         2       0       0       0
  2916 ;;Total ram usage:        2 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    3
  2919 ;; This function calls:
  2920 ;;		_Timeout_Counter
  2921 ;;		_set_TimeoutCleared
  2922 ;; This function is called by:
  2923 ;;		_getCDS_AD
  2924 ;;		_getTemp_AD
  2925 ;;		_getPIR_AD
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function _getAD
  2931  070B                     _getAD:	
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  2935                           ;getAD@adcon0 stored from wreg
  2936  070B  00F5               	movwf	getAD@adcon0
  2937                           
  2938                           ;MCU_B1.c: 427: ADCON0 = adcon0;
  2939  070C  0875               	movf	getAD@adcon0,w
  2940  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2941  070E  1303               	bcf	3,6	;RP1=0, select bank0
  2942  070F  009F               	movwf	31	;volatile
  2943                           
  2944                           ;MCU_B1.c: 428: ADCON1 = adcon1;
  2945  0710  0874               	movf	getAD@adcon1,w
  2946  0711  1683               	bsf	3,5	;RP0=1, select bank1
  2947  0712  1303               	bcf	3,6	;RP1=0, select bank1
  2948  0713  009F               	movwf	31	;volatile
  2949                           
  2950                           ;MCU_B1.c: 429: GO_nDONE = 1;
  2951  0714  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0715  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0716  149F               	bsf	31,1	;volatile
  2954                           
  2955                           ;MCU_B1.c: 430: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  2956  0717  2F1B               	goto	l2426
  2957  0718                     l2424:	
  2958                           
  2959                           ;MCU_B1.c: 431: Timeout_Counter();
  2960  0718  118A  27BD  118A   	fcall	_Timeout_Counter
  2961  071B                     l2426:	
  2962  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2963  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2964  071D  1C9F               	btfss	31,1	;volatile
  2965  071E  2F21               	goto	l2430
  2966  071F  1D25               	btfss	_myMain+5,2
  2967  0720  2F18               	goto	l2424
  2968  0721                     l2430:	
  2969                           
  2970                           ;MCU_B1.c: 432: };
  2971                           ;MCU_B1.c: 433: set_TimeoutCleared();
  2972  0721  158A  275A         	fcall	_set_TimeoutCleared
  2973                           
  2974                           ;MCU_B1.c: 434: return ADRES;
  2975  0723  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0724  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0725  081E               	movf	30,w	;volatile
  2978  0726  0008               	return
  2979  0727                     __end_of_getAD:	
  2980                           
  2981                           	psect	text8
  2982  0F5A                     __ptext8:	
  2983 ;; *************** function _set_TimeoutCleared *****************
  2984 ;; Defined at:
  2985 ;;		line 271 in file "../src/Main_B1.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;		None               void
  2992 ;; Registers used:
  2993 ;;		status,2
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2999 ;;      Params:         0       0       0       0
  3000 ;;      Locals:         0       0       0       0
  3001 ;;      Temps:          0       0       0       0
  3002 ;;      Totals:         0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    2
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_getAD
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           
  3014                           ;psect for function _set_TimeoutCleared
  3015  0F5A                     _set_TimeoutCleared:	
  3016                           
  3017                           ;Main_B1.c: 272: myMain.Timeout = 0;
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _set_TimeoutCleared: [status,2]
  3021  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0F5C  1125               	bcf	_myMain+5,2
  3024                           
  3025                           ;Main_B1.c: 273: myMain.Timeout_Counter = 0;
  3026  0F5D  01A6               	clrf	_myMain+6
  3027  0F5E  01A7               	clrf	_myMain+7
  3028  0F5F  0008               	return
  3029  0F60                     __end_of_set_TimeoutCleared:	
  3030                           
  3031                           	psect	text9
  3032  07BD                     __ptext9:	
  3033 ;; *************** function _Timeout_Counter *****************
  3034 ;; Defined at:
  3035 ;;		line 261 in file "../src/Main_B1.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;		None               void
  3042 ;; Registers used:
  3043 ;;		wreg, status,2
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3049 ;;      Params:         0       0       0       0
  3050 ;;      Locals:         0       0       0       0
  3051 ;;      Temps:          0       0       0       0
  3052 ;;      Totals:         0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    2
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_getAD
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           
  3064                           ;psect for function _Timeout_Counter
  3065  07BD                     _Timeout_Counter:	
  3066                           
  3067                           ;Main_B1.c: 262: myMain.Timeout_Counter++;
  3068                           
  3069                           ;incstack = 0
  3070                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3071  07BD  3001               	movlw	1
  3072  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3073  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3074  07C0  07A6               	addwf	_myMain+6,f
  3075  07C1  1803               	skipnc
  3076  07C2  0AA7               	incf	_myMain+7,f
  3077  07C3  3000               	movlw	0
  3078  07C4  07A7               	addwf	_myMain+7,f
  3079                           
  3080                           ;Main_B1.c: 263: if (myMain.Timeout_Counter == 10000) {
  3081  07C5  3027               	movlw	39
  3082  07C6  0627               	xorwf	_myMain+7,w
  3083  07C7  1D03               	skipz
  3084  07C8  2FCB               	goto	u1625
  3085  07C9  3010               	movlw	16
  3086  07CA  0626               	xorwf	_myMain+6,w
  3087  07CB                     u1625:	
  3088  07CB  1D03               	skipz
  3089  07CC  0008               	return
  3090                           
  3091                           ;Main_B1.c: 264: myMain.Timeout_Counter = 0;
  3092  07CD  01A6               	clrf	_myMain+6
  3093  07CE  01A7               	clrf	_myMain+7
  3094                           
  3095                           ;Main_B1.c: 265: myMain.Timeout = 1;
  3096  07CF  1525               	bsf	_myMain+5,2
  3097  07D0  0008               	return
  3098  07D1                     __end_of_Timeout_Counter:	
  3099                           
  3100                           	psect	text10
  3101  0FD1                     __ptext10:	
  3102 ;; *************** function _WDT_Main *****************
  3103 ;; Defined at:
  3104 ;;		line 1019 in file "../src/MCU_B1.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;		None               void
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3118 ;;      Params:         0       0       0       0
  3119 ;;      Locals:         0       0       0       0
  3120 ;;      Temps:          1       0       0       0
  3121 ;;      Totals:         1       0       0       0
  3122 ;;Total ram usage:        1 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    3
  3125 ;; This function calls:
  3126 ;;		_WDT_Clearing
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _WDT_Main
  3134  0FD1                     _WDT_Main:	
  3135                           
  3136                           ;MCU_B1.c: 1020: if (WDT.Enable == 1) {
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3140  0FD1  1C77               	btfss	_WDT,0
  3141  0FD2  0008               	return
  3142                           
  3143                           ;MCU_B1.c: 1021: if (WDT.Timer-- > 0) {
  3144  0FD3  3001               	movlw	1
  3145  0FD4  02F8               	subwf	_WDT+1,f
  3146  0FD5  0878               	movf	_WDT+1,w
  3147  0FD6  3AFF               	xorlw	255
  3148  0FD7  1903               	skipnz
  3149  0FD8  0008               	return
  3150                           
  3151                           ;MCU_B1.c: 1022: WDT.Timer = 100;
  3152  0FD9  3064               	movlw	100
  3153  0FDA  00F4               	movwf	??_WDT_Main
  3154  0FDB  0874               	movf	??_WDT_Main,w
  3155  0FDC  00F8               	movwf	_WDT+1
  3156                           
  3157                           ;MCU_B1.c: 1023: WDT_Clearing();
  3158  0FDD  118A  2002         	fcall	_WDT_Clearing
  3159  0FDF  0008               	return
  3160  0FE0                     __end_of_WDT_Main:	
  3161                           
  3162                           	psect	text11
  3163  0002                     __ptext11:	
  3164 ;; *************** function _WDT_Clearing *****************
  3165 ;; Defined at:
  3166 ;;		line 1029 in file "../src/MCU_B1.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;		None               void
  3173 ;; Registers used:
  3174 ;;		None
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3180 ;;      Params:         0       0       0       0
  3181 ;;      Locals:         0       0       0       0
  3182 ;;      Temps:          0       0       0       0
  3183 ;;      Totals:         0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    2
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_WDT_Main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _WDT_Clearing
  3196  0002                     _WDT_Clearing:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _WDT_Clearing: []
  3200  0002  0064               	clrwdt	;# 
  3201  0003  0008               	return
  3202  0004                     __end_of_WDT_Clearing:	
  3203                           
  3204                           	psect	text12
  3205  0F3D                     __ptext12:	
  3206 ;; *************** function _Temp_Main *****************
  3207 ;; Defined at:
  3208 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;		None               void
  3215 ;; Registers used:
  3216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3222 ;;      Params:         0       0       0       0
  3223 ;;      Locals:         0       0       0       0
  3224 ;;      Temps:          0       0       0       0
  3225 ;;      Totals:         0       0       0       0
  3226 ;;Total ram usage:        0 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    5
  3229 ;; This function calls:
  3230 ;;		_setTemp_Main
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function _Temp_Main
  3238  0F3D                     _Temp_Main:	
  3239                           
  3240                           ;OverTemperature_B1.c: 66: setTemp_Main();
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3244  0F3D  118A  231B         	fcall	_setTemp_Main
  3245  0F3F  0008               	return
  3246  0F40                     __end_of_Temp_Main:	
  3247                           
  3248                           	psect	text13
  3249  031B                     __ptext13:	
  3250 ;; *************** function _setTemp_Main *****************
  3251 ;; Defined at:
  3252 ;;		line 71 in file "../src/OverTemperature_B1.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;		None               void
  3259 ;; Registers used:
  3260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3266 ;;      Params:         0       0       0       0
  3267 ;;      Locals:         0       0       0       0
  3268 ;;      Temps:          0       1       0       0
  3269 ;;      Totals:         0       1       0       0
  3270 ;;Total ram usage:        1 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    4
  3273 ;; This function calls:
  3274 ;;		___awdiv
  3275 ;;		_getMain_AD_Safe
  3276 ;;		_getMain_All_Error_Status
  3277 ;;		_getMain_LightsStatus
  3278 ;;		_setLED
  3279 ;; This function is called by:
  3280 ;;		_Temp_Main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function _setTemp_Main
  3286  031B                     _setTemp_Main:	
  3287                           
  3288                           ;OverTemperature_B1.c: 72: if (Temp.Enable == 1) {
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3292  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3293  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3294  031D  1C32               	btfss	_Temp,0
  3295  031E  2BBF               	goto	l599
  3296                           
  3297                           ;OverTemperature_B1.c: 73: if (Temp.ADtoGO == 0) {
  3298  031F  1932               	btfsc	_Temp,2
  3299  0320  2B42               	goto	l3300
  3300                           
  3301                           ;OverTemperature_B1.c: 74: Temp.Time++;
  3302  0321  3001               	movlw	1
  3303  0322  07B3               	addwf	_Temp+1,f
  3304  0323  1803               	skipnc
  3305  0324  0AB4               	incf	_Temp+2,f
  3306  0325  3000               	movlw	0
  3307  0326  07B4               	addwf	_Temp+2,f
  3308                           
  3309                           ;OverTemperature_B1.c: 75: if (Temp.Time >= 500) {
  3310  0327  3001               	movlw	1
  3311  0328  0234               	subwf	_Temp+2,w
  3312  0329  30F4               	movlw	244
  3313  032A  1903               	skipnz
  3314  032B  0233               	subwf	_Temp+1,w
  3315  032C  1C03               	skipc
  3316  032D  0008               	return
  3317                           
  3318                           ;OverTemperature_B1.c: 76: if (getMain_AD_Safe() == 1) {
  3319  032E  158A  2744  118A   	fcall	_getMain_AD_Safe
  3320  0331  3A01               	xorlw	1
  3321  0332  1D03               	skipz
  3322  0333  2B3B               	goto	l3298
  3323                           
  3324                           ;OverTemperature_B1.c: 77: Temp.Time = 0;
  3325  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0336  01B3               	clrf	_Temp+1
  3328  0337  01B4               	clrf	_Temp+2
  3329                           
  3330                           ;OverTemperature_B1.c: 78: Temp.ADtoGO = 1;
  3331  0338  1532               	bsf	_Temp,2
  3332                           
  3333                           ;OverTemperature_B1.c: 79: Temp.Safe = 0;
  3334  0339  1232               	bcf	_Temp,4
  3335                           
  3336                           ;OverTemperature_B1.c: 81: } else {
  3337  033A  0008               	return
  3338  033B                     l3298:	
  3339                           
  3340                           ;OverTemperature_B1.c: 82: Temp.Time = 500;
  3341  033B  30F4               	movlw	244
  3342  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3343  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3344  033E  00B3               	movwf	_Temp+1
  3345  033F  3001               	movlw	1
  3346  0340  00B4               	movwf	_Temp+2
  3347                           
  3348                           ;OverTemperature_B1.c: 83: }
  3349                           ;OverTemperature_B1.c: 84: }
  3350                           ;OverTemperature_B1.c: 85: } else {
  3351  0341  0008               	return
  3352  0342                     l3300:	
  3353                           
  3354                           ;OverTemperature_B1.c: 86: if (getMain_All_Error_Status(2) == 0) {
  3355  0342  3002               	movlw	2
  3356  0343  118A  277A  118A   	fcall	_getMain_All_Error_Status
  3357  0346  3800               	iorlw	0
  3358  0347  1D03               	skipz
  3359  0348  0008               	return
  3360                           
  3361                           ;OverTemperature_B1.c: 87: Temp.Time++;
  3362  0349  3001               	movlw	1
  3363  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3364  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3365  034C  07B3               	addwf	_Temp+1,f
  3366  034D  1803               	skipnc
  3367  034E  0AB4               	incf	_Temp+2,f
  3368  034F  3000               	movlw	0
  3369  0350  07B4               	addwf	_Temp+2,f
  3370                           
  3371                           ;OverTemperature_B1.c: 88: if (Temp.Time >= 5) {
  3372  0351  3000               	movlw	0
  3373  0352  0234               	subwf	_Temp+2,w
  3374  0353  3005               	movlw	5
  3375  0354  1903               	skipnz
  3376  0355  0233               	subwf	_Temp+1,w
  3377  0356  1C03               	skipc
  3378  0357  0008               	return
  3379                           
  3380                           ;OverTemperature_B1.c: 89: Temp.Time = 0;
  3381  0358  01B3               	clrf	_Temp+1
  3382  0359  01B4               	clrf	_Temp+2
  3383                           
  3384                           ;OverTemperature_B1.c: 90: Temp.ADtoGO = 0;
  3385  035A  1132               	bcf	_Temp,2
  3386                           
  3387                           ;OverTemperature_B1.c: 91: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3388  035B  3002               	movlw	2
  3389  035C  00D1               	movwf	___awdiv@divisor
  3390  035D  3000               	movlw	0
  3391  035E  00D2               	movwf	___awdiv@divisor+1
  3392  035F  0839               	movf	_Temp+7,w
  3393  0360  073A               	addwf	_Temp+8,w
  3394  0361  00D3               	movwf	___awdiv@dividend
  3395  0362  01D4               	clrf	___awdiv@dividend+1
  3396  0363  0DD4               	rlf	___awdiv@dividend+1,f
  3397  0364  118A  2423  118A   	fcall	___awdiv
  3398  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0368  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0369  0851               	movf	?___awdiv,w
  3401  036A  00D9               	movwf	??_setTemp_Main
  3402  036B  0859               	movf	??_setTemp_Main,w
  3403  036C  00B8               	movwf	_Temp+6
  3404                           
  3405                           ;OverTemperature_B1.c: 93: if (getMain_LightsStatus() == 1) {
  3406  036D  118A  266D  118A   	fcall	_getMain_LightsStatus
  3407  0370  3A01               	xorlw	1
  3408  0371  1D03               	skipz
  3409  0372  2B7B               	goto	l3314
  3410                           
  3411                           ;OverTemperature_B1.c: 94: Temp.SafeValue = 190;
  3412  0373  30BE               	movlw	190
  3413  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0376  00D9               	movwf	??_setTemp_Main
  3416  0377  0859               	movf	??_setTemp_Main,w
  3417  0378  00BC               	movwf	_Temp+10
  3418                           
  3419                           ;OverTemperature_B1.c: 95: Temp.DangerValue = 170;
  3420  0379  30AA               	movlw	170
  3421  037A  2B82               	goto	L6
  3422  037B                     l3314:	
  3423                           ;OverTemperature_B1.c: 96: } else {
  3424                           
  3425                           
  3426                           ;OverTemperature_B1.c: 97: Temp.SafeValue = 120;
  3427  037B  3078               	movlw	120
  3428  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3429  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3430  037E  00D9               	movwf	??_setTemp_Main
  3431  037F  0859               	movf	??_setTemp_Main,w
  3432  0380  00BC               	movwf	_Temp+10
  3433                           
  3434                           ;OverTemperature_B1.c: 98: Temp.DangerValue = 100;
  3435  0381  3064               	movlw	100
  3436  0382                     L6:	
  3437  0382  00D9               	movwf	??_setTemp_Main
  3438  0383  0859               	movf	??_setTemp_Main,w
  3439  0384  00BD               	movwf	_Temp+11
  3440                           
  3441                           ;OverTemperature_B1.c: 99: }
  3442                           ;OverTemperature_B1.c: 108: if (Temp.ERROR == 1) {
  3443  0385  1CB2               	btfss	_Temp,1
  3444  0386  2B9E               	goto	l3332
  3445                           
  3446                           ;OverTemperature_B1.c: 109: if (Temp.AD >= Temp.SafeValue) {
  3447  0387  083C               	movf	_Temp+10,w
  3448  0388  0238               	subwf	_Temp+6,w
  3449  0389  1C03               	skipc
  3450  038A  2BB5               	goto	l3344
  3451                           
  3452                           ;OverTemperature_B1.c: 110: Temp.Count++;
  3453  038B  3001               	movlw	1
  3454  038C  00D9               	movwf	??_setTemp_Main
  3455  038D  0859               	movf	??_setTemp_Main,w
  3456  038E  07B5               	addwf	_Temp+3,f
  3457                           
  3458                           ;OverTemperature_B1.c: 111: if (Temp.Count >= 3) {
  3459  038F  3003               	movlw	3
  3460  0390  0235               	subwf	_Temp+3,w
  3461  0391  1C03               	skipc
  3462  0392  2BB8               	goto	l3346
  3463                           
  3464                           ;OverTemperature_B1.c: 112: Temp.Count = 0;
  3465  0393  01B5               	clrf	_Temp+3
  3466                           
  3467                           ;OverTemperature_B1.c: 114: Temp.ERROR = 0;
  3468  0394  10B2               	bcf	_Temp,1
  3469                           
  3470                           ;OverTemperature_B1.c: 115: setLED(1, 10);
  3471  0395  300A               	movlw	10
  3472  0396  00D9               	movwf	??_setTemp_Main
  3473  0397  0859               	movf	??_setTemp_Main,w
  3474  0398  00F6               	movwf	setLED@command
  3475  0399  3001               	movlw	1
  3476  039A  118A  23C3  118A   	fcall	_setLED
  3477                           
  3478                           ;OverTemperature_B1.c: 116: }
  3479                           ;OverTemperature_B1.c: 117: } else {
  3480  039D  2BB8               	goto	l3346
  3481  039E                     l3332:	
  3482                           ;OverTemperature_B1.c: 119: }
  3483                           ;OverTemperature_B1.c: 120: } else {
  3484                           
  3485                           ;OverTemperature_B1.c: 118: Temp.Count = 0;
  3486                           
  3487                           
  3488                           ;OverTemperature_B1.c: 121: if (Temp.AD <= Temp.DangerValue) {
  3489  039E  0838               	movf	_Temp+6,w
  3490  039F  023D               	subwf	_Temp+11,w
  3491  03A0  1C03               	skipc
  3492  03A1  2BB5               	goto	l3344
  3493                           
  3494                           ;OverTemperature_B1.c: 122: Temp.Count++;
  3495  03A2  3001               	movlw	1
  3496  03A3  00D9               	movwf	??_setTemp_Main
  3497  03A4  0859               	movf	??_setTemp_Main,w
  3498  03A5  07B5               	addwf	_Temp+3,f
  3499                           
  3500                           ;OverTemperature_B1.c: 123: if (Temp.Count >= 3) {
  3501  03A6  3003               	movlw	3
  3502  03A7  0235               	subwf	_Temp+3,w
  3503  03A8  1C03               	skipc
  3504  03A9  2BB8               	goto	l3346
  3505                           
  3506                           ;OverTemperature_B1.c: 124: Temp.Count = 0;
  3507  03AA  01B5               	clrf	_Temp+3
  3508                           
  3509                           ;OverTemperature_B1.c: 125: Temp.ERROR = 1;
  3510  03AB  14B2               	bsf	_Temp,1
  3511                           
  3512                           ;OverTemperature_B1.c: 126: setLED(1, 11);
  3513  03AC  300B               	movlw	11
  3514  03AD  00D9               	movwf	??_setTemp_Main
  3515  03AE  0859               	movf	??_setTemp_Main,w
  3516  03AF  00F6               	movwf	setLED@command
  3517  03B0  3001               	movlw	1
  3518  03B1  118A  23C3  118A   	fcall	_setLED
  3519                           
  3520                           ;OverTemperature_B1.c: 128: }
  3521                           ;OverTemperature_B1.c: 129: } else {
  3522  03B4  2BB8               	goto	l3346
  3523  03B5                     l3344:	
  3524                           
  3525                           ;OverTemperature_B1.c: 130: Temp.Count = 0;
  3526  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3527  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3528  03B7  01B5               	clrf	_Temp+3
  3529  03B8                     l3346:	
  3530                           
  3531                           ;OverTemperature_B1.c: 131: }
  3532                           ;OverTemperature_B1.c: 132: }
  3533                           ;OverTemperature_B1.c: 133: if (Temp.ERROR == 0) {
  3534  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3535  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3536  03BA  1CB2               	btfss	_Temp,1
  3537                           
  3538                           ;OverTemperature_B1.c: 134: Temp.Safe = 1;
  3539  03BB  1632               	bsf	_Temp,4
  3540                           
  3541                           ;OverTemperature_B1.c: 135: }
  3542                           ;OverTemperature_B1.c: 136: ;;
  3543                           ;OverTemperature_B1.c: 137: ;;
  3544                           ;OverTemperature_B1.c: 140: Temp.ADH[0] = 0;
  3545  03BC  01B9               	clrf	_Temp+7
  3546                           
  3547                           ;OverTemperature_B1.c: 141: Temp.ADH[1] = 0;
  3548  03BD  01BA               	clrf	_Temp+8
  3549                           
  3550                           ;OverTemperature_B1.c: 142: }
  3551                           ;OverTemperature_B1.c: 143: }
  3552                           ;OverTemperature_B1.c: 144: }
  3553                           ;OverTemperature_B1.c: 145: } else {
  3554  03BE  0008               	return
  3555  03BF                     l599:	
  3556                           
  3557                           ;OverTemperature_B1.c: 146: if (myMain.PowerON == 1) {
  3558  03BF  1C20               	btfss	_myMain,0
  3559  03C0  0008               	return
  3560                           
  3561                           ;OverTemperature_B1.c: 147: Temp.Enable = 1;
  3562  03C1  1432               	bsf	_Temp,0
  3563  03C2  0008               	return
  3564  03C3                     __end_of_setTemp_Main:	
  3565                           
  3566                           	psect	text14
  3567  0423                     __ptext14:	
  3568 ;; *************** function ___awdiv *****************
  3569 ;; Defined at:
  3570 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  divisor         2    0[BANK0 ] int 
  3573 ;;  dividend        2    2[BANK0 ] int 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  quotient        2    6[BANK0 ] int 
  3576 ;;  sign            1    5[BANK0 ] unsigned char 
  3577 ;;  counter         1    4[BANK0 ] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2    0[BANK0 ] int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3587 ;;      Params:         0       4       0       0
  3588 ;;      Locals:         0       4       0       0
  3589 ;;      Temps:          1       0       0       0
  3590 ;;      Totals:         1       8       0       0
  3591 ;;Total ram usage:        9 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    2
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_setTemp_Main
  3598 ;;		_getPIR_AD
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           
  3603                           ;psect for function ___awdiv
  3604  0423                     ___awdiv:	
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3608  0423  1283               	bcf	3,5	;RP0=0, select bank0
  3609  0424  1303               	bcf	3,6	;RP1=0, select bank0
  3610  0425  01D6               	clrf	___awdiv@sign
  3611  0426  1FD2               	btfss	___awdiv@divisor+1,7
  3612  0427  2C2F               	goto	l3220
  3613  0428  09D1               	comf	___awdiv@divisor,f
  3614  0429  09D2               	comf	___awdiv@divisor+1,f
  3615  042A  0AD1               	incf	___awdiv@divisor,f
  3616  042B  1903               	skipnz
  3617  042C  0AD2               	incf	___awdiv@divisor+1,f
  3618  042D  01D6               	clrf	___awdiv@sign
  3619  042E  0AD6               	incf	___awdiv@sign,f
  3620  042F                     l3220:	
  3621  042F  1FD4               	btfss	___awdiv@dividend+1,7
  3622  0430  2C3A               	goto	l3226
  3623  0431  09D3               	comf	___awdiv@dividend,f
  3624  0432  09D4               	comf	___awdiv@dividend+1,f
  3625  0433  0AD3               	incf	___awdiv@dividend,f
  3626  0434  1903               	skipnz
  3627  0435  0AD4               	incf	___awdiv@dividend+1,f
  3628  0436  3001               	movlw	1
  3629  0437  00F4               	movwf	??___awdiv
  3630  0438  0874               	movf	??___awdiv,w
  3631  0439  06D6               	xorwf	___awdiv@sign,f
  3632  043A                     l3226:	
  3633  043A  01D7               	clrf	___awdiv@quotient
  3634  043B  01D8               	clrf	___awdiv@quotient+1
  3635  043C  0852               	movf	___awdiv@divisor+1,w
  3636  043D  0451               	iorwf	___awdiv@divisor,w
  3637  043E  1903               	skipnz
  3638  043F  2C71               	goto	l3248
  3639  0440  01D5               	clrf	___awdiv@counter
  3640  0441  0AD5               	incf	___awdiv@counter,f
  3641  0442                     l3236:	
  3642  0442  1BD2               	btfsc	___awdiv@divisor+1,7
  3643  0443  2C50               	goto	l3238
  3644  0444  3001               	movlw	1
  3645  0445                     u3185:	
  3646  0445  1003               	clrc
  3647  0446  0DD1               	rlf	___awdiv@divisor,f
  3648  0447  0DD2               	rlf	___awdiv@divisor+1,f
  3649  0448  3EFF               	addlw	-1
  3650  0449  1D03               	skipz
  3651  044A  2C45               	goto	u3185
  3652  044B  3001               	movlw	1
  3653  044C  00F4               	movwf	??___awdiv
  3654  044D  0874               	movf	??___awdiv,w
  3655  044E  07D5               	addwf	___awdiv@counter,f
  3656  044F  2C42               	goto	l3236
  3657  0450                     l3238:	
  3658  0450  3001               	movlw	1
  3659  0451                     u3205:	
  3660  0451  1003               	clrc
  3661  0452  0DD7               	rlf	___awdiv@quotient,f
  3662  0453  0DD8               	rlf	___awdiv@quotient+1,f
  3663  0454  3EFF               	addlw	-1
  3664  0455  1D03               	skipz
  3665  0456  2C51               	goto	u3205
  3666  0457  0852               	movf	___awdiv@divisor+1,w
  3667  0458  0254               	subwf	___awdiv@dividend+1,w
  3668  0459  1D03               	skipz
  3669  045A  2C5D               	goto	u3215
  3670  045B  0851               	movf	___awdiv@divisor,w
  3671  045C  0253               	subwf	___awdiv@dividend,w
  3672  045D                     u3215:	
  3673  045D  1C03               	skipc
  3674  045E  2C66               	goto	l3244
  3675  045F  0851               	movf	___awdiv@divisor,w
  3676  0460  02D3               	subwf	___awdiv@dividend,f
  3677  0461  0852               	movf	___awdiv@divisor+1,w
  3678  0462  1C03               	skipc
  3679  0463  03D4               	decf	___awdiv@dividend+1,f
  3680  0464  02D4               	subwf	___awdiv@dividend+1,f
  3681  0465  1457               	bsf	___awdiv@quotient,0
  3682  0466                     l3244:	
  3683  0466  3001               	movlw	1
  3684  0467                     u3225:	
  3685  0467  1003               	clrc
  3686  0468  0CD2               	rrf	___awdiv@divisor+1,f
  3687  0469  0CD1               	rrf	___awdiv@divisor,f
  3688  046A  3EFF               	addlw	-1
  3689  046B  1D03               	skipz
  3690  046C  2C67               	goto	u3225
  3691  046D  3001               	movlw	1
  3692  046E  02D5               	subwf	___awdiv@counter,f
  3693  046F  1D03               	btfss	3,2
  3694  0470  2C50               	goto	l3238
  3695  0471                     l3248:	
  3696  0471  0856               	movf	___awdiv@sign,w
  3697  0472  1903               	btfsc	3,2
  3698  0473  2C79               	goto	l3252
  3699  0474  09D7               	comf	___awdiv@quotient,f
  3700  0475  09D8               	comf	___awdiv@quotient+1,f
  3701  0476  0AD7               	incf	___awdiv@quotient,f
  3702  0477  1903               	skipnz
  3703  0478  0AD8               	incf	___awdiv@quotient+1,f
  3704  0479                     l3252:	
  3705  0479  0858               	movf	___awdiv@quotient+1,w
  3706  047A  01D2               	clrf	?___awdiv+1
  3707  047B  07D2               	addwf	?___awdiv+1,f
  3708  047C  0857               	movf	___awdiv@quotient,w
  3709  047D  01D1               	clrf	?___awdiv
  3710  047E  07D1               	addwf	?___awdiv,f
  3711  047F  0008               	return
  3712  0480                     __end_of___awdiv:	
  3713                           
  3714                           	psect	text15
  3715  0F3A                     __ptext15:	
  3716 ;; *************** function _Temp_Initialization *****************
  3717 ;; Defined at:
  3718 ;;		line 9 in file "../src/OverTemperature_B1.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;		None               void
  3725 ;; Registers used:
  3726 ;;		status,2, status,0, pclath, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3732 ;;      Params:         0       0       0       0
  3733 ;;      Locals:         0       0       0       0
  3734 ;;      Temps:          0       0       0       0
  3735 ;;      Totals:         0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    3
  3739 ;; This function calls:
  3740 ;;		_setTemp_Initialization
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _Temp_Initialization
  3748  0F3A                     _Temp_Initialization:	
  3749                           
  3750                           ;OverTemperature_B1.c: 11: setTemp_Initialization();
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3754  0F3A  158A  274C         	fcall	_setTemp_Initialization
  3755  0F3C  0008               	return
  3756  0F3D                     __end_of_Temp_Initialization:	
  3757                           
  3758                           	psect	text16
  3759  0F4C                     __ptext16:	
  3760 ;; *************** function _setTemp_Initialization *****************
  3761 ;; Defined at:
  3762 ;;		line 59 in file "../src/OverTemperature_B1.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;		None               void
  3769 ;; Registers used:
  3770 ;;		None
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3776 ;;      Params:         0       0       0       0
  3777 ;;      Locals:         0       0       0       0
  3778 ;;      Temps:          0       0       0       0
  3779 ;;      Totals:         0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    2
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_Temp_Initialization
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _setTemp_Initialization
  3792  0F4C                     _setTemp_Initialization:	
  3793                           
  3794                           ;OverTemperature_B1.c: 60: Temp.Safe = 1;
  3795                           
  3796                           ;incstack = 0
  3797                           ; Regs used in _setTemp_Initialization: []
  3798  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0F4E  1632               	bsf	_Temp,4
  3801  0F4F  0008               	return
  3802  0F50                     __end_of_setTemp_Initialization:	
  3803                           
  3804                           	psect	text17
  3805  0025                     __ptext17:	
  3806 ;; *************** function _PIR_Main *****************
  3807 ;; Defined at:
  3808 ;;		line 15 in file "../src/PIR_B1.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3822 ;;      Params:         0       0       0       0
  3823 ;;      Locals:         0       0       0       0
  3824 ;;      Temps:          0       5       0       0
  3825 ;;      Totals:         0       5       0       0
  3826 ;;Total ram usage:        5 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    4
  3829 ;; This function calls:
  3830 ;;		_getCDS_Status
  3831 ;;		_getLights_Status
  3832 ;;		_getMain_AD_Safe
  3833 ;;		_getMain_All_Error_Status
  3834 ;;		_setLED
  3835 ;;		_setLights_Trigger
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function _PIR_Main
  3843  0025                     _PIR_Main:	
  3844                           
  3845                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3849  0025  1683               	bsf	3,5	;RP0=1, select bank1
  3850  0026  1303               	bcf	3,6	;RP1=0, select bank1
  3851  0027  1C20               	btfss	__PIR^(0+128),0
  3852  0028  0008               	return
  3853                           
  3854                           ;PIR_B1.c: 18: if (getCDS_Status() == 1 && getMain_All_Error_Status(0) == 0) {
  3855  0029  158A  2767  118A   	fcall	_getCDS_Status
  3856  002C  3A01               	xorlw	1
  3857  002D  1D03               	skipz
  3858  002E  2845               	goto	l673
  3859  002F  3000               	movlw	0
  3860  0030  118A  277A  118A   	fcall	_getMain_All_Error_Status
  3861  0033  3800               	iorlw	0
  3862  0034  1D03               	skipz
  3863  0035  2845               	goto	l673
  3864                           
  3865                           ;PIR_B1.c: 19: if (_PIR.Detect == 0) {
  3866  0036  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0037  1303               	bcf	3,6	;RP1=0, select bank1
  3868  0038  1A20               	btfsc	__PIR^(0+128),4
  3869  0039  2870               	goto	l3628
  3870                           
  3871                           ;PIR_B1.c: 20: _PIR.Detect = 1;
  3872  003A  1620               	bsf	__PIR^(0+128),4
  3873                           
  3874                           ;PIR_B1.c: 21: _PIR.Available = 1;
  3875  003B  17A0               	bsf	__PIR^(0+128),7
  3876                           
  3877                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  3878  003C  19A0               	btfsc	__PIR^(0+128),3
  3879  003D  2870               	goto	l3628
  3880                           
  3881                           ;PIR_B1.c: 23: setLED(2, 1);
  3882  003E  01F6               	clrf	setLED@command
  3883  003F  0AF6               	incf	setLED@command,f
  3884  0040  3002               	movlw	2
  3885  0041  118A  23C3  118A   	fcall	_setLED
  3886                           
  3887                           ;PIR_B1.c: 24: }
  3888                           ;PIR_B1.c: 25: }
  3889                           ;PIR_B1.c: 26: } else {
  3890  0044  2870               	goto	l3628
  3891  0045                     l673:	
  3892                           
  3893                           ;PIR_B1.c: 27: if (_PIR.Detect == 1) {
  3894  0045  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0046  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0047  1E20               	btfss	__PIR^(0+128),4
  3897  0048  2870               	goto	l3628
  3898                           
  3899                           ;PIR_B1.c: 28: _PIR.Detect = 0;
  3900  0049  1220               	bcf	__PIR^(0+128),4
  3901                           
  3902                           ;PIR_B1.c: 29: _PIR.Available = 0;
  3903  004A  13A0               	bcf	__PIR^(0+128),7
  3904                           
  3905                           ;PIR_B1.c: 30: _PIR.Status = 0;
  3906  004B  1320               	bcf	__PIR^(0+128),6
  3907                           
  3908                           ;PIR_B1.c: 33: _PIR.Time = 0;
  3909  004C  01A5               	clrf	(__PIR^(0+128)+5)
  3910                           
  3911                           ;PIR_B1.c: 34: _PIR.RangeTime1 = 0;
  3912  004D  01CA               	clrf	(__PIR^(0+128)+42)
  3913                           
  3914                           ;PIR_B1.c: 35: _PIR.RangeValue = 7;
  3915  004E  3007               	movlw	7
  3916  004F  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0050  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0051  00D5               	movwf	??_PIR_Main
  3919  0052  0855               	movf	??_PIR_Main,w
  3920  0053  1683               	bsf	3,5	;RP0=1, select bank1
  3921  0054  1303               	bcf	3,6	;RP1=0, select bank1
  3922  0055  00CC               	movwf	(__PIR^(0+128)+44)
  3923                           
  3924                           ;PIR_B1.c: 36: _PIR.RangeCount = 0;
  3925  0056  01CB               	clrf	(__PIR^(0+128)+43)
  3926                           
  3927                           ;PIR_B1.c: 38: setLED(1, 0);
  3928  0057  01F6               	clrf	setLED@command
  3929  0058  3001               	movlw	1
  3930  0059  118A  23C3  118A   	fcall	_setLED
  3931                           
  3932                           ;PIR_B1.c: 39: setLED(2, 0);
  3933  005C  01F6               	clrf	setLED@command
  3934  005D  3002               	movlw	2
  3935  005E  118A  23C3  118A   	fcall	_setLED
  3936                           
  3937                           ;PIR_B1.c: 40: _PIR.Status = 0;
  3938  0061  1683               	bsf	3,5	;RP0=1, select bank1
  3939  0062  1303               	bcf	3,6	;RP1=0, select bank1
  3940  0063  1320               	bcf	__PIR^(0+128),6
  3941                           
  3942                           ;PIR_B1.c: 41: if (_PIR.OK == 1) {
  3943  0064  1DA0               	btfss	__PIR^(0+128),3
  3944  0065  2868               	goto	l678
  3945                           
  3946                           ;PIR_B1.c: 42: _PIR.Count = 0;
  3947  0066  01C1               	clrf	(__PIR^(0+128)+33)
  3948  0067  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3949  0068                     l678:	
  3950                           
  3951                           ;PIR_B1.c: 43: }
  3952                           ;PIR_B1.c: 44: _PIR.CloseTimeSeconds = 0;
  3953  0068  01C6               	clrf	(__PIR^(0+128)+38)
  3954                           
  3955                           ;PIR_B1.c: 45: _PIR.CloseTimeMinutes = 0;
  3956  0069  01C4               	clrf	(__PIR^(0+128)+36)
  3957  006A  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3958                           
  3959                           ;PIR_B1.c: 48: setLights_Trigger(1, 0);
  3960  006B  01F6               	clrf	setLights_Trigger@command
  3961  006C  3001               	movlw	1
  3962  006D  118A  275F  118A   	fcall	_setLights_Trigger
  3963  0070                     l3628:	
  3964                           
  3965                           ;PIR_B1.c: 51: }
  3966                           ;PIR_B1.c: 52: }
  3967                           ;PIR_B1.c: 54: if (_PIR.ADtoGO == 0) {
  3968  0070  1683               	bsf	3,5	;RP0=1, select bank1
  3969  0071  1303               	bcf	3,6	;RP1=0, select bank1
  3970  0072  18A0               	btfsc	__PIR^(0+128),1
  3971  0073  2894               	goto	l679
  3972                           
  3973                           ;PIR_B1.c: 55: _PIR.Time++;
  3974  0074  3001               	movlw	1
  3975  0075  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0076  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0077  00D5               	movwf	??_PIR_Main
  3978  0078  0855               	movf	??_PIR_Main,w
  3979  0079  1683               	bsf	3,5	;RP0=1, select bank1
  3980  007A  1303               	bcf	3,6	;RP1=0, select bank1
  3981  007B  07A5               	addwf	(__PIR^(0+128)+5),f
  3982                           
  3983                           ;PIR_B1.c: 56: if (_PIR.Time == 10) {
  3984  007C  0825               	movf	(__PIR^(0+128)+5),w
  3985  007D  3A0A               	xorlw	10
  3986  007E  1D03               	skipz
  3987  007F  2999               	goto	l3712
  3988                           
  3989                           ;PIR_B1.c: 57: if (getMain_AD_Safe() == 1) {
  3990  0080  158A  2744  118A   	fcall	_getMain_AD_Safe
  3991  0083  3A01               	xorlw	1
  3992  0084  1D03               	skipz
  3993  0085  288B               	goto	l3640
  3994                           
  3995                           ;PIR_B1.c: 58: _PIR.Time = 0;
  3996  0086  1683               	bsf	3,5	;RP0=1, select bank1
  3997  0087  1303               	bcf	3,6	;RP1=0, select bank1
  3998  0088  01A5               	clrf	(__PIR^(0+128)+5)
  3999                           
  4000                           ;PIR_B1.c: 59: _PIR.ADtoGO = 1;
  4001  0089  14A0               	bsf	__PIR^(0+128),1
  4002                           
  4003                           ;PIR_B1.c: 60: } else {
  4004  008A  2999               	goto	l3712
  4005  008B                     l3640:	
  4006                           
  4007                           ;PIR_B1.c: 61: _PIR.Time = 10;
  4008  008B  300A               	movlw	10
  4009  008C  1283               	bcf	3,5	;RP0=0, select bank0
  4010  008D  1303               	bcf	3,6	;RP1=0, select bank0
  4011  008E  00D5               	movwf	??_PIR_Main
  4012  008F  0855               	movf	??_PIR_Main,w
  4013  0090  1683               	bsf	3,5	;RP0=1, select bank1
  4014  0091  1303               	bcf	3,6	;RP1=0, select bank1
  4015  0092  00A5               	movwf	(__PIR^(0+128)+5)
  4016                           
  4017                           ;PIR_B1.c: 62: }
  4018                           ;PIR_B1.c: 63: }
  4019                           ;PIR_B1.c: 64: } else {
  4020  0093  2999               	goto	l3712
  4021  0094                     l679:	
  4022                           
  4023                           ;PIR_B1.c: 65: if (_PIR.GO == 1) {
  4024  0094  1D20               	btfss	__PIR^(0+128),2
  4025  0095  2999               	goto	l3712
  4026                           
  4027                           ;PIR_B1.c: 66: _PIR.GO = 0;
  4028  0096  1120               	bcf	__PIR^(0+128),2
  4029                           
  4030                           ;PIR_B1.c: 67: if (_PIR.Available == 1) {
  4031  0097  1BA0               	btfsc	__PIR^(0+128),7
  4032                           
  4033                           ;PIR_B1.c: 68: if (_PIR.OK == 1) {
  4034  0098  1DA0               	btfss	__PIR^(0+128),3
  4035  0099  2999               	goto	l3712
  4036                           
  4037                           ;PIR_B1.c: 70: _PIR.Time++;
  4038  009A  3001               	movlw	1
  4039  009B  1283               	bcf	3,5	;RP0=0, select bank0
  4040  009C  1303               	bcf	3,6	;RP1=0, select bank0
  4041  009D  00D5               	movwf	??_PIR_Main
  4042  009E  0855               	movf	??_PIR_Main,w
  4043  009F  1683               	bsf	3,5	;RP0=1, select bank1
  4044  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  4045  00A1  07A5               	addwf	(__PIR^(0+128)+5),f
  4046                           
  4047                           ;PIR_B1.c: 71: if (_PIR.Time == 60) {
  4048  00A2  0825               	movf	(__PIR^(0+128)+5),w
  4049  00A3  3A3C               	xorlw	60
  4050  00A4  1D03               	skipz
  4051  00A5  28DA               	goto	l3682
  4052                           
  4053                           ;PIR_B1.c: 72: _PIR.Time = 0;
  4054  00A6  01A5               	clrf	(__PIR^(0+128)+5)
  4055                           
  4056                           ;PIR_B1.c: 73: if (_PIR.RangeCount >= 90) {
  4057  00A7  305A               	movlw	90
  4058  00A8  024B               	subwf	(__PIR^(0+128)+43),w
  4059  00A9  1C03               	skipc
  4060  00AA  28B6               	goto	l3664
  4061                           
  4062                           ;PIR_B1.c: 74: _PIR.RangeTime1 = 0;
  4063  00AB  01CA               	clrf	(__PIR^(0+128)+42)
  4064                           
  4065                           ;PIR_B1.c: 76: if (_PIR.RangeValue == 7) {
  4066  00AC  084C               	movf	(__PIR^(0+128)+44),w
  4067  00AD  3A07               	xorlw	7
  4068  00AE  1903               	btfsc	3,2
  4069  00AF  28CB               	goto	L12
  4070                           
  4071                           ;PIR_B1.c: 78: } else if (_PIR.RangeValue == 25) {
  4072                           
  4073                           ;PIR_B1.c: 77: _PIR.RangeValue = 25;
  4074  00B0  084C               	movf	(__PIR^(0+128)+44),w
  4075  00B1  3A19               	xorlw	25
  4076  00B2  1D03               	skipz
  4077  00B3  28D9               	goto	l3680
  4078                           
  4079                           ;PIR_B1.c: 79: _PIR.RangeValue = 35;
  4080  00B4  3023               	movlw	35
  4081  00B5  28D2               	goto	L9
  4082  00B6                     l3664:	
  4083                           ;PIR_B1.c: 80: }
  4084                           ;PIR_B1.c: 81: } else if (_PIR.RangeCount <= 10) {
  4085                           
  4086  00B6  300B               	movlw	11
  4087  00B7  024B               	subwf	(__PIR^(0+128)+43),w
  4088  00B8  1803               	skipnc
  4089  00B9  28D9               	goto	l3680
  4090                           
  4091                           ;PIR_B1.c: 82: _PIR.RangeTime1++;
  4092  00BA  3001               	movlw	1
  4093  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  4094  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  4095  00BD  00D5               	movwf	??_PIR_Main
  4096  00BE  0855               	movf	??_PIR_Main,w
  4097  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  4098  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  4099  00C1  07CA               	addwf	(__PIR^(0+128)+42),f
  4100                           
  4101                           ;PIR_B1.c: 83: if (_PIR.RangeTime1 == 2) {
  4102  00C2  084A               	movf	(__PIR^(0+128)+42),w
  4103  00C3  3A02               	xorlw	2
  4104  00C4  1D03               	skipz
  4105  00C5  28D9               	goto	l3680
  4106                           
  4107                           ;PIR_B1.c: 84: _PIR.RangeTime1 = 0;
  4108  00C6  01CA               	clrf	(__PIR^(0+128)+42)
  4109                           
  4110                           ;PIR_B1.c: 86: if (_PIR.RangeValue == 35) {
  4111  00C7  084C               	movf	(__PIR^(0+128)+44),w
  4112  00C8  3A23               	xorlw	35
  4113  00C9  1D03               	skipz
  4114  00CA  28CD               	goto	l3676
  4115  00CB                     L12:	
  4116                           
  4117                           ;PIR_B1.c: 87: _PIR.RangeValue = 25;
  4118  00CB  3019               	movlw	25
  4119  00CC  28D2               	goto	L9
  4120  00CD                     l3676:	
  4121                           ;PIR_B1.c: 88: } else if (_PIR.RangeValue == 25) {
  4122                           
  4123  00CD  084C               	movf	(__PIR^(0+128)+44),w
  4124  00CE  3A19               	xorlw	25
  4125  00CF  1D03               	skipz
  4126  00D0  28D9               	goto	l3680
  4127                           
  4128                           ;PIR_B1.c: 89: _PIR.RangeValue = 7;
  4129  00D1  3007               	movlw	7
  4130  00D2                     L9:	
  4131  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  4132  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  4133  00D4  00D5               	movwf	??_PIR_Main
  4134  00D5  0855               	movf	??_PIR_Main,w
  4135  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  4136  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  4137  00D8  00CC               	movwf	(__PIR^(0+128)+44)
  4138  00D9                     l3680:	
  4139                           
  4140                           ;PIR_B1.c: 90: }
  4141                           ;PIR_B1.c: 91: }
  4142                           ;PIR_B1.c: 92: }
  4143                           ;PIR_B1.c: 93: _PIR.RangeCount = 0;
  4144  00D9  01CB               	clrf	(__PIR^(0+128)+43)
  4145  00DA                     l3682:	
  4146                           
  4147                           ;PIR_B1.c: 94: }
  4148                           ;PIR_B1.c: 97: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4149                           ;PIR_B1.c: 98: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4150  00DA  084C               	movf	(__PIR^(0+128)+44),w
  4151  00DB  074E               	addwf	(__PIR^(0+128)+46),w
  4152  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  4153  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  4154  00DE  00D5               	movwf	??_PIR_Main
  4155  00DF  01D6               	clrf	??_PIR_Main+1
  4156  00E0  0DD6               	rlf	??_PIR_Main+1,f
  4157  00E1  09D5               	comf	??_PIR_Main,f
  4158  00E2  09D6               	comf	??_PIR_Main+1,f
  4159  00E3  0AD5               	incf	??_PIR_Main,f
  4160  00E4  1903               	skipnz
  4161  00E5  0AD6               	incf	??_PIR_Main+1,f
  4162  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  4163  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  4164  00E8  0826               	movf	(__PIR^(0+128)+6),w
  4165  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  4166  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  4167  00EB  0755               	addwf	??_PIR_Main,w
  4168  00EC  00D7               	movwf	??_PIR_Main+2
  4169  00ED  0856               	movf	??_PIR_Main+1,w
  4170  00EE  1803               	skipnc
  4171  00EF  0A56               	incf	??_PIR_Main+1,w
  4172  00F0  00D8               	movwf	??_PIR_Main+3
  4173  00F1  0858               	movf	??_PIR_Main+3,w
  4174  00F2  3A80               	xorlw	128
  4175  00F3  3C80               	sublw	128
  4176  00F4  1D03               	skipz
  4177  00F5  28FA               	goto	u4085
  4178  00F6  0857               	movf	??_PIR_Main+2,w
  4179  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  4180  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  4181  00F9  0221               	subwf	(__PIR^(0+128)+1),w
  4182  00FA                     u4085:	
  4183  00FA  1C03               	skipc
  4184  00FB  2926               	goto	l3692
  4185  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  4186  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  4187  00FE  084C               	movf	(__PIR^(0+128)+44),w
  4188  00FF  074E               	addwf	(__PIR^(0+128)+46),w
  4189  0100  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0101  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0102  00D5               	movwf	??_PIR_Main
  4192  0103  01D6               	clrf	??_PIR_Main+1
  4193  0104  0DD6               	rlf	??_PIR_Main+1,f
  4194  0105  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0106  1303               	bcf	3,6	;RP1=0, select bank1
  4196  0107  0826               	movf	(__PIR^(0+128)+6),w
  4197  0108  1283               	bcf	3,5	;RP0=0, select bank0
  4198  0109  1303               	bcf	3,6	;RP1=0, select bank0
  4199  010A  0755               	addwf	??_PIR_Main,w
  4200  010B  00D7               	movwf	??_PIR_Main+2
  4201  010C  3000               	movlw	0
  4202  010D  1803               	skipnc
  4203  010E  3001               	movlw	1
  4204  010F  0756               	addwf	??_PIR_Main+1,w
  4205  0110  00D8               	movwf	??_PIR_Main+3
  4206  0111  0858               	movf	??_PIR_Main+3,w
  4207  0112  3A80               	xorlw	128
  4208  0113  00D9               	movwf	??_PIR_Main+4
  4209  0114  3080               	movlw	128
  4210  0115  0259               	subwf	??_PIR_Main+4,w
  4211  0116  1D03               	skipz
  4212  0117  291E               	goto	u4095
  4213  0118  1683               	bsf	3,5	;RP0=1, select bank1
  4214  0119  1303               	bcf	3,6	;RP1=0, select bank1
  4215  011A  0821               	movf	(__PIR^(0+128)+1),w
  4216  011B  1283               	bcf	3,5	;RP0=0, select bank0
  4217  011C  1303               	bcf	3,6	;RP1=0, select bank0
  4218  011D  0257               	subwf	??_PIR_Main+2,w
  4219  011E                     u4095:	
  4220  011E  1C03               	skipc
  4221  011F  2926               	goto	l3692
  4222                           
  4223                           ;PIR_B1.c: 99: _PIR.Count = 0;
  4224  0120  1683               	bsf	3,5	;RP0=1, select bank1
  4225  0121  1303               	bcf	3,6	;RP1=0, select bank1
  4226  0122  01C1               	clrf	(__PIR^(0+128)+33)
  4227  0123  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4228                           
  4229                           ;PIR_B1.c: 100: setLED(1, 0);
  4230  0124  01F6               	clrf	setLED@command
  4231  0125  2988               	goto	L13
  4232  0126                     l3692:	
  4233                           ;PIR_B1.c: 102: } else {
  4234                           
  4235                           ;PIR_B1.c: 101: setLED(2, 0);
  4236                           
  4237                           
  4238                           ;PIR_B1.c: 103: _PIR.RangeCount++;
  4239  0126  3001               	movlw	1
  4240  0127  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0128  1303               	bcf	3,6	;RP1=0, select bank0
  4242  0129  00D5               	movwf	??_PIR_Main
  4243  012A  0855               	movf	??_PIR_Main,w
  4244  012B  1683               	bsf	3,5	;RP0=1, select bank1
  4245  012C  1303               	bcf	3,6	;RP1=0, select bank1
  4246  012D  07CB               	addwf	(__PIR^(0+128)+43),f
  4247                           
  4248                           ;PIR_B1.c: 104: _PIR.Count++;
  4249  012E  3001               	movlw	1
  4250  012F  07C1               	addwf	(__PIR^(0+128)+33),f
  4251  0130  1803               	skipnc
  4252  0131  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4253  0132  3000               	movlw	0
  4254  0133  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4255                           
  4256                           ;PIR_B1.c: 105: if (_PIR.Count == _PIR.TriggerValue) {
  4257  0134  0843               	movf	(__PIR^(0+128)+35),w
  4258  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0136  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0137  00D5               	movwf	??_PIR_Main
  4261  0138  01D6               	clrf	??_PIR_Main+1
  4262  0139  1683               	bsf	3,5	;RP0=1, select bank1
  4263  013A  1303               	bcf	3,6	;RP1=0, select bank1
  4264  013B  0842               	movf	((__PIR+1)^(0+128)+33),w
  4265  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4266  013D  1303               	bcf	3,6	;RP1=0, select bank0
  4267  013E  0656               	xorwf	??_PIR_Main+1,w
  4268  013F  1D03               	skipz
  4269  0140  2947               	goto	u4105
  4270  0141  1683               	bsf	3,5	;RP0=1, select bank1
  4271  0142  1303               	bcf	3,6	;RP1=0, select bank1
  4272  0143  0841               	movf	(__PIR^(0+128)+33),w
  4273  0144  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0145  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0146  0655               	xorwf	??_PIR_Main,w
  4276  0147                     u4105:	
  4277  0147  1D03               	skipz
  4278  0148  2999               	goto	l3712
  4279                           
  4280                           ;PIR_B1.c: 106: _PIR.Count = 0;
  4281  0149  1683               	bsf	3,5	;RP0=1, select bank1
  4282  014A  1303               	bcf	3,6	;RP1=0, select bank1
  4283  014B  01C1               	clrf	(__PIR^(0+128)+33)
  4284  014C  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4285                           
  4286                           ;PIR_B1.c: 107: _PIR.CloseTimeSeconds = 0;
  4287  014D  01C6               	clrf	(__PIR^(0+128)+38)
  4288                           
  4289                           ;PIR_B1.c: 108: _PIR.CloseTimeMinutes = 0;
  4290  014E  01C4               	clrf	(__PIR^(0+128)+36)
  4291  014F  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4292                           
  4293                           ;PIR_B1.c: 112: if (getLights_Status(1) == 0) {
  4294  0150  3001               	movlw	1
  4295  0151  118A  27E3  118A   	fcall	_getLights_Status
  4296  0154  3800               	iorlw	0
  4297  0155  1D03               	skipz
  4298  0156  295D               	goto	l3704
  4299                           
  4300                           ;PIR_B1.c: 113: setLights_Trigger(1, 1);
  4301  0157  01F6               	clrf	setLights_Trigger@command
  4302  0158  0AF6               	incf	setLights_Trigger@command,f
  4303  0159  3001               	movlw	1
  4304  015A  118A  275F  118A   	fcall	_setLights_Trigger
  4305  015D                     l3704:	
  4306                           
  4307                           ;PIR_B1.c: 114: }
  4308                           ;PIR_B1.c: 118: _PIR.Status = 1;
  4309  015D  1683               	bsf	3,5	;RP0=1, select bank1
  4310  015E  1303               	bcf	3,6	;RP1=0, select bank1
  4311  015F  1720               	bsf	__PIR^(0+128),6
  4312                           
  4313                           ;PIR_B1.c: 120: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4314  0160  084C               	movf	(__PIR^(0+128)+44),w
  4315  0161  074E               	addwf	(__PIR^(0+128)+46),w
  4316  0162  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0163  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0164  00D5               	movwf	??_PIR_Main
  4319  0165  01D6               	clrf	??_PIR_Main+1
  4320  0166  0DD6               	rlf	??_PIR_Main+1,f
  4321  0167  09D5               	comf	??_PIR_Main,f
  4322  0168  09D6               	comf	??_PIR_Main+1,f
  4323  0169  0AD5               	incf	??_PIR_Main,f
  4324  016A  1903               	skipnz
  4325  016B  0AD6               	incf	??_PIR_Main+1,f
  4326  016C  1683               	bsf	3,5	;RP0=1, select bank1
  4327  016D  1303               	bcf	3,6	;RP1=0, select bank1
  4328  016E  0826               	movf	(__PIR^(0+128)+6),w
  4329  016F  1283               	bcf	3,5	;RP0=0, select bank0
  4330  0170  1303               	bcf	3,6	;RP1=0, select bank0
  4331  0171  0755               	addwf	??_PIR_Main,w
  4332  0172  00D7               	movwf	??_PIR_Main+2
  4333  0173  0856               	movf	??_PIR_Main+1,w
  4334  0174  1803               	skipnc
  4335  0175  0A56               	incf	??_PIR_Main+1,w
  4336  0176  00D8               	movwf	??_PIR_Main+3
  4337  0177  0858               	movf	??_PIR_Main+3,w
  4338  0178  3A80               	xorlw	128
  4339  0179  00D9               	movwf	??_PIR_Main+4
  4340  017A  3080               	movlw	128
  4341  017B  0259               	subwf	??_PIR_Main+4,w
  4342  017C  1D03               	skipz
  4343  017D  2984               	goto	u4125
  4344  017E  1683               	bsf	3,5	;RP0=1, select bank1
  4345  017F  1303               	bcf	3,6	;RP1=0, select bank1
  4346  0180  0821               	movf	(__PIR^(0+128)+1),w
  4347  0181  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0182  1303               	bcf	3,6	;RP1=0, select bank0
  4349  0183  0257               	subwf	??_PIR_Main+2,w
  4350  0184                     u4125:	
  4351  0184  1C03               	skipc
  4352  0185  298E               	goto	l3710
  4353                           
  4354                           ;PIR_B1.c: 121: setLED(1, 1);
  4355  0186  01F6               	clrf	setLED@command
  4356  0187  0AF6               	incf	setLED@command,f
  4357  0188                     L13:	
  4358  0188  3001               	movlw	1
  4359  0189  118A  23C3  118A   	fcall	_setLED
  4360                           
  4361                           ;PIR_B1.c: 122: setLED(2, 0);
  4362  018C  01F6               	clrf	setLED@command
  4363  018D  2995               	goto	L10
  4364  018E                     l3710:	
  4365                           ;PIR_B1.c: 123: } else {
  4366                           
  4367                           
  4368                           ;PIR_B1.c: 124: setLED(1, 0);
  4369  018E  01F6               	clrf	setLED@command
  4370  018F  3001               	movlw	1
  4371  0190  118A  23C3  118A   	fcall	_setLED
  4372                           
  4373                           ;PIR_B1.c: 125: setLED(2, 1);
  4374  0193  01F6               	clrf	setLED@command
  4375  0194  0AF6               	incf	setLED@command,f
  4376  0195                     L10:	
  4377  0195  3002               	movlw	2
  4378  0196  118A  23C3  118A   	fcall	_setLED
  4379  0199                     l3712:	
  4380                           
  4381                           ;PIR_B1.c: 126: }
  4382                           ;PIR_B1.c: 127: }
  4383                           ;PIR_B1.c: 128: }
  4384                           ;PIR_B1.c: 129: }
  4385                           ;PIR_B1.c: 130: }
  4386                           ;PIR_B1.c: 131: }
  4387                           ;PIR_B1.c: 132: }
  4388                           ;PIR_B1.c: 133: if (_PIR.OK == 0) {
  4389  0199  1683               	bsf	3,5	;RP0=1, select bank1
  4390  019A  1303               	bcf	3,6	;RP1=0, select bank1
  4391  019B  19A0               	btfsc	__PIR^(0+128),3
  4392  019C  29B3               	goto	l3722
  4393                           
  4394                           ;PIR_B1.c: 134: _PIR.Count++;
  4395  019D  3001               	movlw	1
  4396  019E  07C1               	addwf	(__PIR^(0+128)+33),f
  4397  019F  1803               	skipnc
  4398  01A0  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4399  01A1  3000               	movlw	0
  4400  01A2  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4401                           
  4402                           ;PIR_B1.c: 135: if (_PIR.Count == 3000) {
  4403  01A3  300B               	movlw	11
  4404  01A4  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4405  01A5  1D03               	skipz
  4406  01A6  29A9               	goto	u4145
  4407  01A7  30B8               	movlw	184
  4408  01A8  0641               	xorwf	(__PIR^(0+128)+33),w
  4409  01A9                     u4145:	
  4410  01A9  1D03               	skipz
  4411  01AA  29B3               	goto	l3722
  4412                           
  4413                           ;PIR_B1.c: 136: _PIR.Count = 0;
  4414  01AB  01C1               	clrf	(__PIR^(0+128)+33)
  4415  01AC  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4416                           
  4417                           ;PIR_B1.c: 137: _PIR.OK = 1;
  4418  01AD  15A0               	bsf	__PIR^(0+128),3
  4419                           
  4420                           ;PIR_B1.c: 138: setLED(2, 0);
  4421  01AE  01F6               	clrf	setLED@command
  4422  01AF  3002               	movlw	2
  4423  01B0  118A  23C3  118A   	fcall	_setLED
  4424  01B3                     l3722:	
  4425                           
  4426                           ;PIR_B1.c: 139: }
  4427                           ;PIR_B1.c: 140: }
  4428                           ;PIR_B1.c: 141: if (_PIR.Status == 1) {
  4429  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  4430  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  4431  01B5  1F20               	btfss	__PIR^(0+128),6
  4432  01B6  0008               	return
  4433                           
  4434                           ;PIR_B1.c: 142: _PIR.CloseTimeSeconds++;
  4435  01B7  3001               	movlw	1
  4436  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4437  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4438  01BA  00D5               	movwf	??_PIR_Main
  4439  01BB  0855               	movf	??_PIR_Main,w
  4440  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  4441  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  4442  01BE  07C6               	addwf	(__PIR^(0+128)+38),f
  4443                           
  4444                           ;PIR_B1.c: 143: if (_PIR.CloseTimeSeconds == 100) {
  4445  01BF  0846               	movf	(__PIR^(0+128)+38),w
  4446  01C0  3A64               	xorlw	100
  4447  01C1  1D03               	skipz
  4448  01C2  0008               	return
  4449                           
  4450                           ;PIR_B1.c: 144: _PIR.CloseTimeSeconds = 0;
  4451  01C3  01C6               	clrf	(__PIR^(0+128)+38)
  4452                           
  4453                           ;PIR_B1.c: 145: _PIR.CloseTimeMinutes++;
  4454  01C4  3001               	movlw	1
  4455  01C5  07C4               	addwf	(__PIR^(0+128)+36),f
  4456  01C6  1803               	skipnc
  4457  01C7  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4458  01C8  3000               	movlw	0
  4459  01C9  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4460                           
  4461                           ;PIR_B1.c: 146: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4462  01CA  0848               	movf	((__PIR+1)^(0+128)+39),w
  4463  01CB  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4464  01CC  1D03               	skipz
  4465  01CD  29D0               	goto	u4175
  4466  01CE  0847               	movf	(__PIR^(0+128)+39),w
  4467  01CF  0644               	xorwf	(__PIR^(0+128)+36),w
  4468  01D0                     u4175:	
  4469  01D0  1D03               	skipz
  4470  01D1  0008               	return
  4471                           
  4472                           ;PIR_B1.c: 147: _PIR.CloseTimeMinutes = 0;
  4473  01D2  01C4               	clrf	(__PIR^(0+128)+36)
  4474  01D3  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4475                           
  4476                           ;PIR_B1.c: 148: _PIR.Status = 0;
  4477  01D4  1320               	bcf	__PIR^(0+128),6
  4478                           
  4479                           ;PIR_B1.c: 152: if (getLights_Status(1) == 1) {
  4480  01D5  3001               	movlw	1
  4481  01D6  118A  27E3  118A   	fcall	_getLights_Status
  4482  01D9  3A01               	xorlw	1
  4483  01DA  1D03               	skipz
  4484  01DB  0008               	return
  4485                           
  4486                           ;PIR_B1.c: 153: setLights_Trigger(1, 0);
  4487  01DC  01F6               	clrf	setLights_Trigger@command
  4488  01DD  3001               	movlw	1
  4489  01DE  118A  275F         	fcall	_setLights_Trigger
  4490  01E0  0008               	return
  4491  01E1                     __end_of_PIR_Main:	
  4492                           
  4493                           	psect	text18
  4494  075F                     __ptext18:	
  4495 ;; *************** function _setLights_Trigger *****************
  4496 ;; Defined at:
  4497 ;;		line 214 in file "../src/TriacRelay_B1.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  lights          1    wreg     unsigned char 
  4500 ;;  command         1    6[COMMON] unsigned char 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  lights          1    1[BANK0 ] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;		None               void
  4505 ;; Registers used:
  4506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4512 ;;      Params:         1       0       0       0
  4513 ;;      Locals:         0       1       0       0
  4514 ;;      Temps:          0       1       0       0
  4515 ;;      Totals:         1       2       0       0
  4516 ;;Total ram usage:        3 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    3
  4519 ;; This function calls:
  4520 ;;		_LightsPointSelect
  4521 ;; This function is called by:
  4522 ;;		_PIR_Main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           
  4527                           ;psect for function _setLights_Trigger
  4528  075F                     _setLights_Trigger:	
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4532                           ;setLights_Trigger@lights stored from wreg
  4533  075F  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0760  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0761  00D2               	movwf	setLights_Trigger@lights
  4536                           
  4537                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  4538  0762  0852               	movf	setLights_Trigger@lights,w
  4539  0763  158A  279A         	fcall	_LightsPointSelect
  4540                           
  4541                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  4542  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0766  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0767  0830               	movf	_Lights,w
  4545  0768  0084               	movwf	4
  4546  0769  1383               	bcf	3,7	;select IRP bank0
  4547  076A  1580               	bsf	0,3
  4548                           
  4549                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  4550  076B  0876               	movf	setLights_Trigger@command,w
  4551  076C  3A01               	xorlw	1
  4552  076D  3000               	movlw	0
  4553  076E  1903               	skipnz
  4554  076F  3001               	movlw	1
  4555  0770  00D1               	movwf	??_setLights_Trigger
  4556  0771  0830               	movf	_Lights,w
  4557  0772  0084               	movwf	4
  4558  0773  0ED1               	swapf	??_setLights_Trigger,f
  4559  0774  0800               	movf	0,w
  4560  0775  0651               	xorwf	??_setLights_Trigger,w
  4561  0776  39EF               	andlw	-17
  4562  0777  0651               	xorwf	??_setLights_Trigger,w
  4563  0778  0080               	movwf	0
  4564  0779  0008               	return
  4565  077A                     __end_of_setLights_Trigger:	
  4566                           
  4567                           	psect	text19
  4568  07E3                     __ptext19:	
  4569 ;; *************** function _getLights_Status *****************
  4570 ;; Defined at:
  4571 ;;		line 207 in file "../src/TriacRelay_B1.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  lights          1    wreg     unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  lights          1    0[BANK0 ] unsigned char 
  4576 ;;  status          1    1[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4586 ;;      Params:         0       0       0       0
  4587 ;;      Locals:         0       2       0       0
  4588 ;;      Temps:          0       0       0       0
  4589 ;;      Totals:         0       2       0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    3
  4593 ;; This function calls:
  4594 ;;		_LightsPointSelect
  4595 ;; This function is called by:
  4596 ;;		_PIR_Main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _getLights_Status
  4602  07E3                     _getLights_Status:	
  4603                           
  4604                           ;incstack = 0
  4605                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4606                           ;getLights_Status@lights stored from wreg
  4607  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  4608  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  4609  07E5  00D1               	movwf	getLights_Status@lights
  4610                           
  4611                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  4612  07E6  0851               	movf	getLights_Status@lights,w
  4613  07E7  158A  279A         	fcall	_LightsPointSelect
  4614                           
  4615                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  4616  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  4617  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  4618  07EB  0830               	movf	_Lights,w
  4619  07EC  0084               	movwf	4
  4620  07ED  3000               	movlw	0
  4621  07EE  1383               	bcf	3,7	;select IRP bank0
  4622  07EF  1900               	btfsc	0,2
  4623  07F0  3001               	movlw	1
  4624  07F1  00D2               	movwf	getLights_Status@status
  4625                           
  4626                           ;TriacRelay_B1.c: 210: return status;
  4627  07F2  0852               	movf	getLights_Status@status,w
  4628  07F3  0008               	return
  4629  07F4                     __end_of_getLights_Status:	
  4630                           
  4631                           	psect	text20
  4632  0F67                     __ptext20:	
  4633 ;; *************** function _getCDS_Status *****************
  4634 ;; Defined at:
  4635 ;;		line 44 in file "../src/CDS_B1.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  result          1    4[COMMON] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      unsigned char 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4649 ;;      Params:         0       0       0       0
  4650 ;;      Locals:         1       0       0       0
  4651 ;;      Temps:          0       0       0       0
  4652 ;;      Totals:         1       0       0       0
  4653 ;;Total ram usage:        1 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_PIR_Main
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _getCDS_Status
  4665  0F67                     _getCDS_Status:	
  4666                           
  4667                           ;CDS_B1.c: 45: char result = _CDS.Status;
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4671  0F67  3000               	movlw	0
  4672  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0F6A  1A28               	btfsc	__CDS,4
  4675  0F6B  3001               	movlw	1
  4676  0F6C  00F4               	movwf	getCDS_Status@result
  4677                           
  4678                           ;CDS_B1.c: 46: return result;
  4679  0F6D  0874               	movf	getCDS_Status@result,w
  4680  0F6E  0008               	return
  4681  0F6F                     __end_of_getCDS_Status:	
  4682                           
  4683                           	psect	text21
  4684  0FF0                     __ptext21:	
  4685 ;; *************** function _PIR_Initialization *****************
  4686 ;; Defined at:
  4687 ;;		line 7 in file "../src/PIR_B1.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;		None               void
  4694 ;; Registers used:
  4695 ;;		wreg
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4701 ;;      Params:         0       0       0       0
  4702 ;;      Locals:         0       0       0       0
  4703 ;;      Temps:          1       0       0       0
  4704 ;;      Totals:         1       0       0       0
  4705 ;;Total ram usage:        1 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:    2
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_main
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           
  4716                           ;psect for function _PIR_Initialization
  4717  0FF0                     _PIR_Initialization:	
  4718                           
  4719                           ;PIR_B1.c: 8: _PIR.Enable = 1;
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in _PIR_Initialization: [wreg]
  4723  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  4724  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  4725  0FF2  1420               	bsf	__PIR^(0+128),0
  4726                           
  4727                           ;PIR_B1.c: 9: _PIR.RangeValue = 7;
  4728  0FF3  3007               	movlw	7
  4729  0FF4  00F4               	movwf	??_PIR_Initialization
  4730  0FF5  0874               	movf	??_PIR_Initialization,w
  4731  0FF6  00CC               	movwf	(__PIR^(0+128)+44)
  4732                           
  4733                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 150;
  4734  0FF7  3096               	movlw	150
  4735  0FF8  00C7               	movwf	(__PIR^(0+128)+39)
  4736  0FF9  3000               	movlw	0
  4737  0FFA  00C8               	movwf	(__PIR^(0+128)+40)
  4738                           
  4739                           ;PIR_B1.c: 11: _PIR.TriggerValue = 2;
  4740  0FFB  3002               	movlw	2
  4741  0FFC  00F4               	movwf	??_PIR_Initialization
  4742  0FFD  0874               	movf	??_PIR_Initialization,w
  4743  0FFE  00C3               	movwf	(__PIR^(0+128)+35)
  4744  0FFF  0008               	return
  4745  1000                     __end_of_PIR_Initialization:	
  4746                           
  4747                           	psect	text22
  4748  0FC2                     __ptext22:	
  4749 ;; *************** function _Mcu_Initialization *****************
  4750 ;; Defined at:
  4751 ;;		line 30 in file "../src/MCU_B1.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;		None               void
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4765 ;;      Params:         0       0       0       0
  4766 ;;      Locals:         0       0       0       0
  4767 ;;      Temps:          0       0       0       0
  4768 ;;      Totals:         0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    3
  4772 ;; This function calls:
  4773 ;;		_ADC_Set
  4774 ;;		_Fosc_Set
  4775 ;;		_IO_Set
  4776 ;;		_TMR1_Set
  4777 ;;		_WDT_Set
  4778 ;; This function is called by:
  4779 ;;		_main
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           
  4784                           ;psect for function _Mcu_Initialization
  4785  0FC2                     _Mcu_Initialization:	
  4786                           
  4787                           ;MCU_B1.c: 32: Fosc_Set();
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4791  0FC2  158A  2755  158A   	fcall	_Fosc_Set
  4792                           
  4793                           ;MCU_B1.c: 34: IO_Set();
  4794  0FC5  118A  2794  158A   	fcall	_IO_Set
  4795                           
  4796                           ;MCU_B1.c: 36: ;;
  4797                           ;MCU_B1.c: 38: TMR1_Set();
  4798  0FC8  158A  27B4  158A   	fcall	_TMR1_Set
  4799                           
  4800                           ;MCU_B1.c: 40: ADC_Set();
  4801  0FCB  158A  2760  158A   	fcall	_ADC_Set
  4802                           
  4803                           ;MCU_B1.c: 42: ;;
  4804                           ;MCU_B1.c: 44: ;;
  4805                           ;MCU_B1.c: 46: ;;
  4806                           ;MCU_B1.c: 48: ;;
  4807                           ;MCU_B1.c: 50: ;;
  4808                           ;MCU_B1.c: 52: WDT_Set();
  4809  0FCE  118A  27F4         	fcall	_WDT_Set
  4810  0FD0  0008               	return
  4811  0FD1                     __end_of_Mcu_Initialization:	
  4812                           
  4813                           	psect	text23
  4814  07F4                     __ptext23:	
  4815 ;; *************** function _WDT_Set *****************
  4816 ;; Defined at:
  4817 ;;		line 1005 in file "../src/MCU_B1.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;		None               void
  4824 ;; Registers used:
  4825 ;;		wreg
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4831 ;;      Params:         0       0       0       0
  4832 ;;      Locals:         0       0       0       0
  4833 ;;      Temps:          1       0       0       0
  4834 ;;      Totals:         1       0       0       0
  4835 ;;Total ram usage:        1 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    2
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_Mcu_Initialization
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _WDT_Set
  4847  07F4                     _WDT_Set:	
  4848                           
  4849                           ;MCU_B1.c: 1007: PSA = 1;
  4850                           
  4851                           ;incstack = 0
  4852                           ; Regs used in _WDT_Set: [wreg]
  4853  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  4854  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  4855  07F6  1581               	bsf	1,3	;volatile
  4856                           
  4857                           ;MCU_B1.c: 1008: PS0 = 1;
  4858  07F7  1401               	bsf	1,0	;volatile
  4859                           
  4860                           ;MCU_B1.c: 1009: PS1 = 1;
  4861  07F8  1481               	bsf	1,1	;volatile
  4862                           
  4863                           ;MCU_B1.c: 1010: PS2 = 1;
  4864  07F9  1501               	bsf	1,2	;volatile
  4865                           
  4866                           ;MCU_B1.c: 1014: WDT.Enable = 1;
  4867  07FA  1477               	bsf	_WDT,0
  4868                           
  4869                           ;MCU_B1.c: 1015: WDT.Timer = 10;
  4870  07FB  300A               	movlw	10
  4871  07FC  00F4               	movwf	??_WDT_Set
  4872  07FD  0874               	movf	??_WDT_Set,w
  4873  07FE  00F8               	movwf	_WDT+1
  4874  07FF  0008               	return
  4875  0800                     __end_of_WDT_Set:	
  4876                           
  4877                           	psect	text24
  4878  0FB4                     __ptext24:	
  4879 ;; *************** function _TMR1_Set *****************
  4880 ;; Defined at:
  4881 ;;		line 199 in file "../src/MCU_B1.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;		None               void
  4888 ;; Registers used:
  4889 ;;		wreg
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4895 ;;      Params:         0       0       0       0
  4896 ;;      Locals:         0       0       0       0
  4897 ;;      Temps:          0       0       0       0
  4898 ;;      Totals:         0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    2
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_Mcu_Initialization
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           
  4910                           ;psect for function _TMR1_Set
  4911  0FB4                     _TMR1_Set:	
  4912                           
  4913                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in _TMR1_Set: [wreg]
  4917  0FB4  3041               	movlw	65
  4918  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  4919  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  4920  0FB7  0090               	movwf	16	;volatile
  4921                           
  4922                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  4923  0FB8  30FA               	movlw	250
  4924  0FB9  008F               	movwf	15	;volatile
  4925                           
  4926                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  4927  0FBA  3038               	movlw	56
  4928  0FBB  008E               	movwf	14	;volatile
  4929                           
  4930                           ;MCU_B1.c: 203: TMR1IE = 1;
  4931  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  4932  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  4933  0FBE  140C               	bsf	12,0	;volatile
  4934                           
  4935                           ;MCU_B1.c: 204: PEIE = 1;
  4936  0FBF  170B               	bsf	11,6	;volatile
  4937                           
  4938                           ;MCU_B1.c: 205: GIE = 1;
  4939  0FC0  178B               	bsf	11,7	;volatile
  4940  0FC1  0008               	return
  4941  0FC2                     __end_of_TMR1_Set:	
  4942                           
  4943                           	psect	text25
  4944  0794                     __ptext25:	
  4945 ;; *************** function _IO_Set *****************
  4946 ;; Defined at:
  4947 ;;		line 60 in file "../src/MCU_B1.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;		None               void
  4954 ;; Registers used:
  4955 ;;		wreg, status,2
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4961 ;;      Params:         0       0       0       0
  4962 ;;      Locals:         0       0       0       0
  4963 ;;      Temps:          0       0       0       0
  4964 ;;      Totals:         0       0       0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    2
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_Mcu_Initialization
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _IO_Set
  4977  0794                     _IO_Set:	
  4978                           
  4979                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _IO_Set: [wreg+status,2]
  4983  0794  302F               	movlw	47
  4984  0795  1683               	bsf	3,5	;RP0=1, select bank1
  4985  0796  1303               	bcf	3,6	;RP1=0, select bank1
  4986  0797  0085               	movwf	5	;volatile
  4987                           
  4988                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  4989  0798  3001               	movlw	1
  4990  0799  0086               	movwf	6	;volatile
  4991                           
  4992                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  4993  079A  0187               	clrf	7	;volatile
  4994                           
  4995                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  4996  079B  3007               	movlw	7
  4997  079C  1683               	bsf	3,5	;RP0=1, select bank3
  4998  079D  1703               	bsf	3,6	;RP1=1, select bank3
  4999  079E  0085               	movwf	5	;volatile
  5000                           
  5001                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5002  079F  3001               	movlw	1
  5003  07A0  0086               	movwf	6	;volatile
  5004                           
  5005                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5006  07A1  30AF               	movlw	175
  5007  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  5008  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  5009  07A4  0085               	movwf	5	;volatile
  5010                           
  5011                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5012  07A5  3001               	movlw	1
  5013  07A6  0086               	movwf	6	;volatile
  5014                           
  5015                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5016  07A7  0187               	clrf	7	;volatile
  5017  07A8  0008               	return
  5018  07A9                     __end_of_IO_Set:	
  5019                           
  5020                           	psect	text26
  5021  0F55                     __ptext26:	
  5022 ;; *************** function _Fosc_Set *****************
  5023 ;; Defined at:
  5024 ;;		line 56 in file "../src/MCU_B1.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;		None               void
  5031 ;; Registers used:
  5032 ;;		wreg
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5038 ;;      Params:         0       0       0       0
  5039 ;;      Locals:         0       0       0       0
  5040 ;;      Temps:          0       0       0       0
  5041 ;;      Totals:         0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    2
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_Mcu_Initialization
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           
  5053                           ;psect for function _Fosc_Set
  5054  0F55                     _Fosc_Set:	
  5055                           
  5056                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in _Fosc_Set: [wreg]
  5060  0F55  303C               	movlw	60
  5061  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  5062  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  5063  0F58  0090               	movwf	16	;volatile
  5064  0F59  0008               	return
  5065  0F5A                     __end_of_Fosc_Set:	
  5066                           
  5067                           	psect	text27
  5068  0F60                     __ptext27:	
  5069 ;; *************** function _ADC_Set *****************
  5070 ;; Defined at:
  5071 ;;		line 419 in file "../src/MCU_B1.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;		None               void
  5078 ;; Registers used:
  5079 ;;		wreg
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5085 ;;      Params:         0       0       0       0
  5086 ;;      Locals:         0       0       0       0
  5087 ;;      Temps:          0       0       0       0
  5088 ;;      Totals:         0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    2
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_Mcu_Initialization
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function _ADC_Set
  5101  0F60                     _ADC_Set:	
  5102                           
  5103                           ;MCU_B1.c: 420: ADCON1 = 0x72;
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _ADC_Set: [wreg]
  5107  0F60  3072               	movlw	114
  5108  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  5109  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  5110  0F63  009F               	movwf	31	;volatile
  5111                           
  5112                           ;MCU_B1.c: 421: FVRCON = 0xc1;
  5113  0F64  30C1               	movlw	193
  5114  0F65  009D               	movwf	29	;volatile
  5115  0F66  0008               	return
  5116  0F67                     __end_of_ADC_Set:	
  5117                           
  5118                           	psect	text28
  5119  0F77                     __ptext28:	
  5120 ;; *************** function _Lights_Main *****************
  5121 ;; Defined at:
  5122 ;;		line 54 in file "../src/TriacRelay_B1.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5136 ;;      Params:         0       0       0       0
  5137 ;;      Locals:         0       0       0       0
  5138 ;;      Temps:          0       0       0       0
  5139 ;;      Totals:         0       0       0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    6
  5143 ;; This function calls:
  5144 ;;		_Lights_Close
  5145 ;;		_Lights_Control
  5146 ;;		_setLights_Main
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _Lights_Main
  5154  0F77                     _Lights_Main:	
  5155                           
  5156                           ;TriacRelay_B1.c: 56: setLights_Main(1);
  5157                           
  5158                           ;incstack = 0
  5159                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5160  0F77  3001               	movlw	1
  5161  0F78  118A  25F6  158A   	fcall	_setLights_Main
  5162                           
  5163                           ;TriacRelay_B1.c: 57: Lights_Control(1);
  5164  0F7B  3001               	movlw	1
  5165  0F7C  118A  2480  158A   	fcall	_Lights_Control
  5166                           
  5167                           ;TriacRelay_B1.c: 70: Lights_Close();
  5168  0F7F  118A  26EC         	fcall	_Lights_Close
  5169  0F81  0008               	return
  5170  0F82                     __end_of_Lights_Main:	
  5171                           
  5172                           	psect	text29
  5173  05F6                     __ptext29:	
  5174 ;; *************** function _setLights_Main *****************
  5175 ;; Defined at:
  5176 ;;		line 84 in file "../src/TriacRelay_B1.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  lights          1    wreg     unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  lights          1    9[BANK0 ] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5190 ;;      Params:         0       0       0       0
  5191 ;;      Locals:         0       3       0       0
  5192 ;;      Temps:          0       3       0       0
  5193 ;;      Totals:         0       6       0       0
  5194 ;;Total ram usage:        6 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    5
  5197 ;; This function calls:
  5198 ;;		_LightsPointSelect
  5199 ;;		_getMain_All_Error_Status
  5200 ;;		_setLights
  5201 ;; This function is called by:
  5202 ;;		_Lights_Main
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           
  5207                           ;psect for function _setLights_Main
  5208  05F6                     _setLights_Main:	
  5209                           
  5210                           ;incstack = 0
  5211                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5212                           ;setLights_Main@lights stored from wreg
  5213  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  5214  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  5215  05F8  00DA               	movwf	setLights_Main@lights
  5216                           
  5217                           ;TriacRelay_B1.c: 85: LightsPointSelect(lights);
  5218  05F9  085A               	movf	setLights_Main@lights,w
  5219  05FA  158A  279A  118A   	fcall	_LightsPointSelect
  5220                           
  5221                           ;TriacRelay_B1.c: 86: if (Lights->GO == 0) {
  5222  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  5223  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  5224  05FF  0830               	movf	_Lights,w
  5225  0600  0084               	movwf	4
  5226  0601  1383               	bcf	3,7	;select IRP bank0
  5227  0602  1880               	btfsc	0,1
  5228  0603  0008               	return
  5229                           
  5230                           ;TriacRelay_B1.c: 87: if (Lights->Trigger == 1) {
  5231  0604  0830               	movf	_Lights,w
  5232  0605  0084               	movwf	4
  5233  0606  1D80               	btfss	0,3
  5234  0607  0008               	return
  5235                           
  5236                           ;TriacRelay_B1.c: 88: if (getMain_All_Error_Status(0) == 0) {
  5237  0608  3000               	movlw	0
  5238  0609  118A  277A  118A   	fcall	_getMain_All_Error_Status
  5239  060C  3800               	iorlw	0
  5240  060D  1D03               	skipz
  5241  060E  2E18               	goto	l933
  5242                           
  5243                           ;TriacRelay_B1.c: 89: LightsControl.LoadOK = 1 == 1 ? 0 : LightsControl.LoadOK;
  5244  060F  1283               	bcf	3,5	;RP0=0, select bank0
  5245  0610  1303               	bcf	3,6	;RP1=0, select bank0
  5246  0611  01D8               	clrf	_setLights_Main$3600
  5247  0612  01D9               	clrf	_setLights_Main$3600+1
  5248  0613  0858               	movf	_setLights_Main$3600,w
  5249  0614  1131               	bcf	_LightsControl,2
  5250  0615  1D03               	skipz
  5251  0616  1531               	bsf	_LightsControl,2
  5252                           
  5253                           ;TriacRelay_B1.c: 90: } else {
  5254  0617  2E1B               	goto	l938
  5255  0618                     l933:	
  5256                           
  5257                           ;TriacRelay_B1.c: 91: LightsControl.LoadOK = 0;
  5258  0618  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0619  1303               	bcf	3,6	;RP1=0, select bank0
  5260  061A  1131               	bcf	_LightsControl,2
  5261  061B                     l938:	
  5262                           
  5263                           ;TriacRelay_B1.c: 92: }
  5264                           ;TriacRelay_B1.c: 93: if (LightsControl.LoadOK == 0) {
  5265  061B  1931               	btfsc	_LightsControl,2
  5266  061C  0008               	return
  5267                           
  5268                           ;TriacRelay_B1.c: 94: Lights->Trigger = 0;
  5269  061D  0830               	movf	_Lights,w
  5270  061E  0084               	movwf	4
  5271  061F  1383               	bcf	3,7	;select IRP bank0
  5272  0620  1180               	bcf	0,3
  5273                           
  5274                           ;TriacRelay_B1.c: 95: ;;
  5275                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  5276  0621  0830               	movf	_Lights,w
  5277  0622  0084               	movwf	4
  5278  0623  1E00               	btfss	0,4
  5279  0624  2E2B               	goto	l3390
  5280                           
  5281                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  5282  0625  01D1               	clrf	setLights@status
  5283  0626  0AD1               	incf	setLights@status,f
  5284  0627  085A               	movf	setLights_Main@lights,w
  5285  0628  118A  2528         	fcall	_setLights
  5286                           
  5287                           ;TriacRelay_B1.c: 99: } else {
  5288  062A  0008               	return
  5289  062B                     l3390:	
  5290                           
  5291                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  5292  062B  1283               	bcf	3,5	;RP0=0, select bank0
  5293  062C  1303               	bcf	3,6	;RP1=0, select bank0
  5294  062D  01D1               	clrf	setLights@status
  5295  062E  085A               	movf	setLights_Main@lights,w
  5296  062F  118A  2528         	fcall	_setLights
  5297  0631  0008               	return
  5298  0632                     __end_of_setLights_Main:	
  5299                           
  5300                           	psect	text30
  5301  0528                     __ptext30:	
  5302 ;; *************** function _setLights *****************
  5303 ;; Defined at:
  5304 ;;		line 108 in file "../src/TriacRelay_B1.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  lights          1    wreg     unsigned char 
  5307 ;;  status          1    0[BANK0 ] unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  lights          1    2[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;		None               void
  5312 ;; Registers used:
  5313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5319 ;;      Params:         0       1       0       0
  5320 ;;      Locals:         0       1       0       0
  5321 ;;      Temps:          0       1       0       0
  5322 ;;      Totals:         0       3       0       0
  5323 ;;Total ram usage:        3 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    4
  5326 ;; This function calls:
  5327 ;;		_LightsPointSelect
  5328 ;;		_setLights_Line
  5329 ;; This function is called by:
  5330 ;;		_setLights_Main
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _setLights
  5336  0528                     _setLights:	
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5340                           ;setLights@lights stored from wreg
  5341  0528  1283               	bcf	3,5	;RP0=0, select bank0
  5342  0529  1303               	bcf	3,6	;RP1=0, select bank0
  5343  052A  00D3               	movwf	setLights@lights
  5344                           
  5345                           ;TriacRelay_B1.c: 110: LightsPointSelect(lights);
  5346  052B  0853               	movf	setLights@lights,w
  5347  052C  158A  279A  118A   	fcall	_LightsPointSelect
  5348                           
  5349                           ;TriacRelay_B1.c: 116: Lights->GO = 1;
  5350  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5351  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5352  0531  0830               	movf	_Lights,w
  5353  0532  0084               	movwf	4
  5354  0533  1383               	bcf	3,7	;select IRP bank0
  5355  0534  1480               	bsf	0,1
  5356                           
  5357                           ;TriacRelay_B1.c: 117: if (status == 1) {
  5358  0535  0851               	movf	setLights@status,w
  5359  0536  3A01               	xorlw	1
  5360  0537  1D03               	skipz
  5361  0538  2D53               	goto	l3204
  5362                           
  5363                           ;TriacRelay_B1.c: 118: if (Lights->Status == 0) {
  5364  0539  0830               	movf	_Lights,w
  5365  053A  0084               	movwf	4
  5366  053B  1900               	btfsc	0,2
  5367  053C  2D6B               	goto	l3208
  5368                           
  5369                           ;TriacRelay_B1.c: 119: Lights->Status = 1;
  5370  053D  0830               	movf	_Lights,w
  5371  053E  0084               	movwf	4
  5372  053F  1500               	bsf	0,2
  5373                           
  5374                           ;TriacRelay_B1.c: 120: Lights->RelayValue = 10;
  5375  0540  300A               	movlw	10
  5376  0541  00D2               	movwf	??_setLights
  5377  0542  0830               	movf	_Lights,w
  5378  0543  3E06               	addlw	6
  5379  0544  0084               	movwf	4
  5380  0545  0852               	movf	??_setLights,w
  5381  0546  0080               	movwf	0
  5382                           
  5383                           ;TriacRelay_B1.c: 121: Lights->TriacValue = 13;
  5384  0547  300D               	movlw	13
  5385  0548  00D2               	movwf	??_setLights
  5386  0549  0830               	movf	_Lights,w
  5387  054A  3E04               	addlw	4
  5388  054B  0084               	movwf	4
  5389  054C  0852               	movf	??_setLights,w
  5390  054D  0080               	movwf	0
  5391                           
  5392                           ;TriacRelay_B1.c: 122: setLights_Line(lights);
  5393  054E  0853               	movf	setLights@lights,w
  5394  054F  158A  27A6  118A   	fcall	_setLights_Line
  5395                           
  5396                           ;TriacRelay_B1.c: 125: }
  5397                           ;TriacRelay_B1.c: 126: } else {
  5398  0552  2D6B               	goto	l3208
  5399  0553                     l3204:	
  5400                           
  5401                           ;TriacRelay_B1.c: 127: if (Lights->Status == 1) {
  5402  0553  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0554  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0555  0830               	movf	_Lights,w
  5405  0556  0084               	movwf	4
  5406  0557  1383               	bcf	3,7	;select IRP bank0
  5407  0558  1D00               	btfss	0,2
  5408  0559  2D6B               	goto	l3208
  5409                           
  5410                           ;TriacRelay_B1.c: 128: Lights->Status = 0;
  5411  055A  0830               	movf	_Lights,w
  5412  055B  0084               	movwf	4
  5413  055C  1100               	bcf	0,2
  5414                           
  5415                           ;TriacRelay_B1.c: 129: Lights->RelayValue = 4;
  5416  055D  3004               	movlw	4
  5417  055E  00D2               	movwf	??_setLights
  5418  055F  0830               	movf	_Lights,w
  5419  0560  3E06               	addlw	6
  5420  0561  0084               	movwf	4
  5421  0562  0852               	movf	??_setLights,w
  5422  0563  0080               	movwf	0
  5423                           
  5424                           ;TriacRelay_B1.c: 130: Lights->TriacValue = 7;
  5425  0564  3007               	movlw	7
  5426  0565  00D2               	movwf	??_setLights
  5427  0566  0830               	movf	_Lights,w
  5428  0567  3E04               	addlw	4
  5429  0568  0084               	movwf	4
  5430  0569  0852               	movf	??_setLights,w
  5431  056A  0080               	movwf	0
  5432  056B                     l3208:	
  5433                           
  5434                           ;TriacRelay_B1.c: 133: }
  5435                           ;TriacRelay_B1.c: 134: }
  5436                           ;TriacRelay_B1.c: 136: if (lights == 1) {
  5437  056B  1283               	bcf	3,5	;RP0=0, select bank0
  5438  056C  1303               	bcf	3,6	;RP1=0, select bank0
  5439  056D  0853               	movf	setLights@lights,w
  5440  056E  3A01               	xorlw	1
  5441  056F  1D03               	skipz
  5442  0570  0008               	return
  5443                           
  5444                           ;TriacRelay_B1.c: 137: RB2 = 1;
  5445  0571  1506               	bsf	6,2	;volatile
  5446  0572  0008               	return
  5447  0573                     __end_of_setLights:	
  5448                           
  5449                           	psect	text31
  5450  0FA6                     __ptext31:	
  5451 ;; *************** function _setLights_Line *****************
  5452 ;; Defined at:
  5453 ;;		line 221 in file "../src/TriacRelay_B1.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  lights          1    wreg     unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  lights          1    6[COMMON] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;		None               void
  5460 ;; Registers used:
  5461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5467 ;;      Params:         0       0       0       0
  5468 ;;      Locals:         1       0       0       0
  5469 ;;      Temps:          0       0       0       0
  5470 ;;      Totals:         1       0       0       0
  5471 ;;Total ram usage:        1 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    3
  5474 ;; This function calls:
  5475 ;;		_LightsPointSelect
  5476 ;; This function is called by:
  5477 ;;		_setLights
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _setLights_Line
  5483  0FA6                     _setLights_Line:	
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5487                           ;setLights_Line@lights stored from wreg
  5488  0FA6  00F6               	movwf	setLights_Line@lights
  5489                           
  5490                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  5491  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  5492  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  5493  0FA9  103F               	bcf	_Lights1+1,0
  5494                           
  5495                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  5496  0FAA  0876               	movf	setLights_Line@lights,w
  5497  0FAB  158A  279A         	fcall	_LightsPointSelect
  5498                           
  5499                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  5500  0FAD  1283               	bcf	3,5	;RP0=0, select bank0
  5501  0FAE  1303               	bcf	3,6	;RP1=0, select bank0
  5502  0FAF  0A30               	incf	_Lights,w
  5503  0FB0  0084               	movwf	4
  5504  0FB1  1383               	bcf	3,7	;select IRP bank0
  5505  0FB2  1400               	bsf	0,0
  5506  0FB3  0008               	return
  5507  0FB4                     __end_of_setLights_Line:	
  5508                           
  5509                           	psect	text32
  5510  077A                     __ptext32:	
  5511 ;; *************** function _getMain_All_Error_Status *****************
  5512 ;; Defined at:
  5513 ;;		line 333 in file "../src/Main_B1.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  command         1    wreg     unsigned char 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  command         1    3[BANK0 ] unsigned char 
  5518 ;;  status          1    2[BANK0 ] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      unsigned char 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5528 ;;      Params:         0       0       0       0
  5529 ;;      Locals:         0       4       0       0
  5530 ;;      Temps:          1       0       0       0
  5531 ;;      Totals:         1       4       0       0
  5532 ;;Total ram usage:        5 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    2
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_setTemp_Main
  5539 ;;		_PIR_Main
  5540 ;;		_setLights_Main
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           
  5545                           ;psect for function _getMain_All_Error_Status
  5546  077A                     _getMain_All_Error_Status:	
  5547                           
  5548                           ;incstack = 0
  5549                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  5550                           ;getMain_All_Error_Status@command stored from wreg
  5551  077A  1283               	bcf	3,5	;RP0=0, select bank0
  5552  077B  1303               	bcf	3,6	;RP1=0, select bank0
  5553  077C  00D4               	movwf	getMain_All_Error_Status@command
  5554                           
  5555                           ;Main_B1.c: 334: char status = 0;
  5556  077D  01D3               	clrf	getMain_All_Error_Status@status
  5557                           
  5558                           ;Main_B1.c: 341: }
  5559                           ;Main_B1.c: 342: if (command != 2) {
  5560  077E  0854               	movf	getMain_All_Error_Status@command,w
  5561  077F  3A02               	xorlw	2
  5562  0780  1903               	skipnz
  5563  0781  2F92               	goto	l3188
  5564                           
  5565                           ;Main_B1.c: 344: if (status == 0) {
  5566  0782  08D3               	movf	getMain_All_Error_Status@status,f
  5567  0783  1D03               	skipz
  5568  0784  2F92               	goto	l3188
  5569                           
  5570                           ;Main_B1.c: 345: status = Temp.ERROR == 1 ? 2 : 0;
  5571  0785  18B2               	btfsc	_Temp,1
  5572  0786  2F8A               	goto	l3186
  5573  0787  01D1               	clrf	_getMain_All_Error_Status$1878
  5574  0788  01D2               	clrf	_getMain_All_Error_Status$1878+1
  5575  0789  2F8E               	goto	l500
  5576  078A                     l3186:	
  5577  078A  3002               	movlw	2
  5578  078B  00D1               	movwf	_getMain_All_Error_Status$1878
  5579  078C  3000               	movlw	0
  5580  078D  00D2               	movwf	_getMain_All_Error_Status$1878+1
  5581  078E                     l500:	
  5582  078E  0851               	movf	_getMain_All_Error_Status$1878,w
  5583  078F  00F4               	movwf	??_getMain_All_Error_Status
  5584  0790  0874               	movf	??_getMain_All_Error_Status,w
  5585  0791  00D3               	movwf	getMain_All_Error_Status@status
  5586  0792                     l3188:	
  5587                           
  5588                           ;Main_B1.c: 356: }
  5589                           ;Main_B1.c: 360: return status;
  5590  0792  0853               	movf	getMain_All_Error_Status@status,w
  5591  0793  0008               	return
  5592  0794                     __end_of_getMain_All_Error_Status:	
  5593                           
  5594                           	psect	text33
  5595  0480                     __ptext33:	
  5596 ;; *************** function _Lights_Control *****************
  5597 ;; Defined at:
  5598 ;;		line 153 in file "../src/TriacRelay_B1.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  lights          1    wreg     unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  lights          1    6[COMMON] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;		None               void
  5605 ;; Registers used:
  5606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5612 ;;      Params:         0       0       0       0
  5613 ;;      Locals:         1       0       0       0
  5614 ;;      Temps:          0       2       0       0
  5615 ;;      Totals:         1       2       0       0
  5616 ;;Total ram usage:        3 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    3
  5619 ;; This function calls:
  5620 ;;		_LightsPointSelect
  5621 ;; This function is called by:
  5622 ;;		_Lights_Main
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           
  5627                           ;psect for function _Lights_Control
  5628  0480                     _Lights_Control:	
  5629                           
  5630                           ;incstack = 0
  5631                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5632                           ;Lights_Control@lights stored from wreg
  5633  0480  00F6               	movwf	Lights_Control@lights
  5634                           
  5635                           ;TriacRelay_B1.c: 154: LightsPointSelect(lights);
  5636  0481  0876               	movf	Lights_Control@lights,w
  5637  0482  158A  279A  118A   	fcall	_LightsPointSelect
  5638                           
  5639                           ;TriacRelay_B1.c: 155: if (Lights->GO == 1) {
  5640  0485  1283               	bcf	3,5	;RP0=0, select bank0
  5641  0486  1303               	bcf	3,6	;RP1=0, select bank0
  5642  0487  0830               	movf	_Lights,w
  5643  0488  0084               	movwf	4
  5644  0489  1383               	bcf	3,7	;select IRP bank0
  5645  048A  1C80               	btfss	0,1
  5646  048B  0008               	return
  5647                           
  5648                           ;TriacRelay_B1.c: 156: Lights->Time++;
  5649  048C  3001               	movlw	1
  5650  048D  00D1               	movwf	??_Lights_Control
  5651  048E  0830               	movf	_Lights,w
  5652  048F  3E02               	addlw	2
  5653  0490  0084               	movwf	4
  5654  0491  0851               	movf	??_Lights_Control,w
  5655  0492  0780               	addwf	0,f
  5656                           
  5657                           ;TriacRelay_B1.c: 157: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  5658  0493  0830               	movf	_Lights,w
  5659  0494  3E06               	addlw	6
  5660  0495  0084               	movwf	4
  5661  0496  0800               	movf	0,w
  5662  0497  00D1               	movwf	??_Lights_Control
  5663  0498  0830               	movf	_Lights,w
  5664  0499  3E02               	addlw	2
  5665  049A  0084               	movwf	4
  5666  049B  0800               	movf	0,w
  5667  049C  00D2               	movwf	??_Lights_Control+1
  5668  049D  0851               	movf	??_Lights_Control,w
  5669  049E  0252               	subwf	??_Lights_Control+1,w
  5670  049F  1C03               	skipc
  5671  04A0  2CB8               	goto	l3408
  5672  04A1  0830               	movf	_Lights,w
  5673  04A2  0084               	movwf	4
  5674  04A3  1B80               	btfsc	0,7
  5675  04A4  2CB8               	goto	l3408
  5676                           
  5677                           ;TriacRelay_B1.c: 158: Lights->RelaySet = 1;
  5678  04A5  0830               	movf	_Lights,w
  5679  04A6  0084               	movwf	4
  5680  04A7  1780               	bsf	0,7
  5681                           
  5682                           ;TriacRelay_B1.c: 160: if (lights == 1) {
  5683  04A8  0876               	movf	Lights_Control@lights,w
  5684  04A9  3A01               	xorlw	1
  5685  04AA  1D03               	skipz
  5686  04AB  0008               	return
  5687                           
  5688                           ;TriacRelay_B1.c: 162: RA4 = Lights->Status ? 1 : 0;
  5689  04AC  0830               	movf	_Lights,w
  5690  04AD  0084               	movwf	4
  5691  04AE  1D00               	btfss	0,2
  5692  04AF  2CB4               	goto	u3530
  5693  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  5694  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  5695  04B2  1605               	bsf	5,4	;volatile
  5696  04B3  0008               	return
  5697  04B4                     u3530:	
  5698  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5699  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5700  04B6  1205               	bcf	5,4	;volatile
  5701                           
  5702                           ;TriacRelay_B1.c: 164: }
  5703                           ;TriacRelay_B1.c: 179: } else if (Lights->Time >= Lights->TriacValue) {
  5704  04B7  0008               	return
  5705  04B8                     l3408:	
  5706  04B8  0830               	movf	_Lights,w
  5707  04B9  3E04               	addlw	4
  5708  04BA  0084               	movwf	4
  5709  04BB  1383               	bcf	3,7	;select IRP bank0
  5710  04BC  0800               	movf	0,w
  5711  04BD  00D1               	movwf	??_Lights_Control
  5712  04BE  0830               	movf	_Lights,w
  5713  04BF  3E02               	addlw	2
  5714  04C0  0084               	movwf	4
  5715  04C1  0800               	movf	0,w
  5716  04C2  00D2               	movwf	??_Lights_Control+1
  5717  04C3  0851               	movf	??_Lights_Control,w
  5718  04C4  0252               	subwf	??_Lights_Control+1,w
  5719  04C5  1C03               	skipc
  5720  04C6  0008               	return
  5721                           
  5722                           ;TriacRelay_B1.c: 180: Lights->Time = 0;
  5723  04C7  0830               	movf	_Lights,w
  5724  04C8  3E02               	addlw	2
  5725  04C9  0084               	movwf	4
  5726  04CA  0180               	clrf	0
  5727                           
  5728                           ;TriacRelay_B1.c: 181: Lights->GO = 0;
  5729  04CB  0830               	movf	_Lights,w
  5730  04CC  0084               	movwf	4
  5731  04CD  1080               	bcf	0,1
  5732                           
  5733                           ;TriacRelay_B1.c: 182: Lights->RelaySet = 0;
  5734  04CE  0830               	movf	_Lights,w
  5735  04CF  0084               	movwf	4
  5736  04D0  1380               	bcf	0,7
  5737                           
  5738                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  5739  04D1  0876               	movf	Lights_Control@lights,w
  5740  04D2  3A01               	xorlw	1
  5741  04D3  1D03               	skipz
  5742  04D4  0008               	return
  5743                           
  5744                           ;TriacRelay_B1.c: 188: RB2 = 0;
  5745  04D5  1106               	bcf	6,2	;volatile
  5746  04D6  0008               	return
  5747  04D7                     __end_of_Lights_Control:	
  5748                           
  5749                           	psect	text34
  5750  06EC                     __ptext34:	
  5751 ;; *************** function _Lights_Close *****************
  5752 ;; Defined at:
  5753 ;;		line 74 in file "../src/TriacRelay_B1.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;		None
  5758 ;; Return value:  Size  Location     Type
  5759 ;;		None               void
  5760 ;; Registers used:
  5761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5767 ;;      Params:         0       0       0       0
  5768 ;;      Locals:         0       2       0       0
  5769 ;;      Temps:          0       2       0       0
  5770 ;;      Totals:         0       4       0       0
  5771 ;;Total ram usage:        4 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    4
  5774 ;; This function calls:
  5775 ;;		_getMain_LightsStatus
  5776 ;; This function is called by:
  5777 ;;		_Lights_Main
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _Lights_Close
  5783  06EC                     _Lights_Close:	
  5784                           
  5785                           ;TriacRelay_B1.c: 75: if (LightsControl.Detect == 1) {
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5789  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  5790  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  5791  06EE  1C31               	btfss	_LightsControl,0
  5792  06EF  0008               	return
  5793                           
  5794                           ;TriacRelay_B1.c: 76: LightsControl.Detect = 0;
  5795  06F0  1031               	bcf	_LightsControl,0
  5796                           
  5797                           ;TriacRelay_B1.c: 78: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : LightsCon
      +                          trol.LoadGO;
  5798  06F1  118A  266D  118A   	fcall	_getMain_LightsStatus
  5799  06F4  3A00               	xorlw	0
  5800  06F5  1903               	skipnz
  5801  06F6  2F02               	goto	l3428
  5802  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  5803  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  5804  06F9  0C31               	rrf	_LightsControl,w
  5805  06FA  3901               	andlw	1
  5806  06FB  00D5               	movwf	??_Lights_Close
  5807  06FC  01D6               	clrf	??_Lights_Close+1
  5808  06FD  0855               	movf	??_Lights_Close,w
  5809  06FE  00D7               	movwf	_Lights_Close$3597
  5810  06FF  0856               	movf	??_Lights_Close+1,w
  5811  0700  00D8               	movwf	_Lights_Close$3597+1
  5812  0701  2F06               	goto	l3430
  5813  0702                     l3428:	
  5814  0702  1283               	bcf	3,5	;RP0=0, select bank0
  5815  0703  1303               	bcf	3,6	;RP1=0, select bank0
  5816  0704  01D7               	clrf	_Lights_Close$3597
  5817  0705  01D8               	clrf	_Lights_Close$3597+1
  5818  0706                     l3430:	
  5819  0706  0857               	movf	_Lights_Close$3597,w
  5820  0707  10B1               	bcf	_LightsControl,1
  5821  0708  1D03               	skipz
  5822  0709  14B1               	bsf	_LightsControl,1
  5823  070A  0008               	return
  5824  070B                     __end_of_Lights_Close:	
  5825                           
  5826                           	psect	text35
  5827  066D                     __ptext35:	
  5828 ;; *************** function _getMain_LightsStatus *****************
  5829 ;; Defined at:
  5830 ;;		line 309 in file "../src/Main_B1.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  i               2    1[BANK0 ] int 
  5835 ;;  status          1    3[BANK0 ] unsigned char 
  5836 ;;  count           1    0[BANK0 ] unsigned char 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      unsigned char 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5846 ;;      Params:         0       0       0       0
  5847 ;;      Locals:         0       4       0       0
  5848 ;;      Temps:          1       0       0       0
  5849 ;;      Totals:         1       4       0       0
  5850 ;;Total ram usage:        5 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    3
  5853 ;; This function calls:
  5854 ;;		_LightsPointSelect
  5855 ;; This function is called by:
  5856 ;;		_setTemp_Main
  5857 ;;		_Lights_Close
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function _getMain_LightsStatus
  5863  066D                     _getMain_LightsStatus:	
  5864                           
  5865                           ;Main_B1.c: 310: char status = 0, count = 0;
  5866                           
  5867                           ;incstack = 0
  5868                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5869  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5870  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5871  066F  01D4               	clrf	getMain_LightsStatus@status
  5872  0670  01D1               	clrf	getMain_LightsStatus@count
  5873                           
  5874                           ;Main_B1.c: 313: count = 1;
  5875  0671  01D1               	clrf	getMain_LightsStatus@count
  5876  0672  0AD1               	incf	getMain_LightsStatus@count,f
  5877                           
  5878                           ;Main_B1.c: 321: for (int i = 0; i < count; i++) {
  5879  0673  01D2               	clrf	getMain_LightsStatus@i
  5880  0674  01D3               	clrf	getMain_LightsStatus@i+1
  5881  0675                     l3168:	
  5882  0675  0853               	movf	getMain_LightsStatus@i+1,w
  5883  0676  3A80               	xorlw	128
  5884  0677  00F6               	movwf	??_getMain_LightsStatus
  5885  0678  3080               	movlw	128
  5886  0679  0276               	subwf	??_getMain_LightsStatus,w
  5887  067A  1D03               	skipz
  5888  067B  2E7E               	goto	u3075
  5889  067C  0851               	movf	getMain_LightsStatus@count,w
  5890  067D  0252               	subwf	getMain_LightsStatus@i,w
  5891  067E                     u3075:	
  5892  067E  1803               	btfsc	3,0
  5893  067F  2E9A               	goto	l3170
  5894                           
  5895                           ;Main_B1.c: 322: if (status == 0) {
  5896  0680  1283               	bcf	3,5	;RP0=0, select bank0
  5897  0681  1303               	bcf	3,6	;RP1=0, select bank0
  5898  0682  08D4               	movf	getMain_LightsStatus@status,f
  5899  0683  1D03               	skipz
  5900  0684  2E93               	goto	l3166
  5901                           
  5902                           ;Main_B1.c: 323: LightsPointSelect(i + 1);
  5903  0685  0852               	movf	getMain_LightsStatus@i,w
  5904  0686  3E01               	addlw	1
  5905  0687  158A  279A  118A   	fcall	_LightsPointSelect
  5906                           
  5907                           ;Main_B1.c: 324: status = Lights->Status == 1 ? 1 : 0;
  5908  068A  1283               	bcf	3,5	;RP0=0, select bank0
  5909  068B  1303               	bcf	3,6	;RP1=0, select bank0
  5910  068C  0830               	movf	_Lights,w
  5911  068D  0084               	movwf	4
  5912  068E  3000               	movlw	0
  5913  068F  1383               	bcf	3,7	;select IRP bank0
  5914  0690  1900               	btfsc	0,2
  5915  0691  3001               	movlw	1
  5916  0692  00D4               	movwf	getMain_LightsStatus@status
  5917  0693                     l3166:	
  5918  0693  3001               	movlw	1
  5919  0694  07D2               	addwf	getMain_LightsStatus@i,f
  5920  0695  1803               	skipnc
  5921  0696  0AD3               	incf	getMain_LightsStatus@i+1,f
  5922  0697  3000               	movlw	0
  5923  0698  07D3               	addwf	getMain_LightsStatus@i+1,f
  5924  0699  2E75               	goto	l3168
  5925  069A                     l3170:	
  5926                           
  5927                           ;Main_B1.c: 325: }
  5928                           ;Main_B1.c: 326: }
  5929                           ;Main_B1.c: 329: return status;
  5930  069A  1283               	bcf	3,5	;RP0=0, select bank0
  5931  069B  1303               	bcf	3,6	;RP1=0, select bank0
  5932  069C  0854               	movf	getMain_LightsStatus@status,w
  5933  069D  0008               	return
  5934  069E                     __end_of_getMain_LightsStatus:	
  5935                           
  5936                           	psect	text36
  5937  0F48                     __ptext36:	
  5938 ;; *************** function _Lights_Initialization *****************
  5939 ;; Defined at:
  5940 ;;		line 34 in file "../src/TriacRelay_B1.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;		None               void
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0, pclath, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5954 ;;      Params:         0       0       0       0
  5955 ;;      Locals:         0       0       0       0
  5956 ;;      Temps:          0       0       0       0
  5957 ;;      Totals:         0       0       0       0
  5958 ;;Total ram usage:        0 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    4
  5961 ;; This function calls:
  5962 ;;		_setLights_Initialization
  5963 ;; This function is called by:
  5964 ;;		_main
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           
  5969                           ;psect for function _Lights_Initialization
  5970  0F48                     _Lights_Initialization:	
  5971                           
  5972                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  5973                           
  5974                           ;incstack = 0
  5975                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5976  0F48  3001               	movlw	1
  5977  0F49  158A  2750         	fcall	_setLights_Initialization
  5978  0F4B  0008               	return
  5979  0F4C                     __end_of_Lights_Initialization:	
  5980                           
  5981                           	psect	text37
  5982  0F50                     __ptext37:	
  5983 ;; *************** function _setLights_Initialization *****************
  5984 ;; Defined at:
  5985 ;;		line 49 in file "../src/TriacRelay_B1.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  lights          1    wreg     unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  lights          1    6[COMMON] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;		None               void
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5999 ;;      Params:         0       0       0       0
  6000 ;;      Locals:         1       0       0       0
  6001 ;;      Temps:          0       0       0       0
  6002 ;;      Totals:         1       0       0       0
  6003 ;;Total ram usage:        1 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    3
  6006 ;; This function calls:
  6007 ;;		_LightsPointSelect
  6008 ;; This function is called by:
  6009 ;;		_Lights_Initialization
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function _setLights_Initialization
  6015  0F50                     _setLights_Initialization:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6019                           ;setLights_Initialization@lights stored from wreg
  6020  0F50  00F6               	movwf	setLights_Initialization@lights
  6021                           
  6022                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  6023  0F51  0876               	movf	setLights_Initialization@lights,w
  6024  0F52  158A  279A         	fcall	_LightsPointSelect
  6025  0F54  0008               	return
  6026  0F55                     __end_of_setLights_Initialization:	
  6027                           
  6028                           	psect	text38
  6029  0F9A                     __ptext38:	
  6030 ;; *************** function _LightsPointSelect *****************
  6031 ;; Defined at:
  6032 ;;		line 10 in file "../src/TriacRelay_B1.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  lights          1    wreg     unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  lights          1    5[COMMON] unsigned char 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;		None               void
  6039 ;; Registers used:
  6040 ;;		wreg
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6046 ;;      Params:         0       0       0       0
  6047 ;;      Locals:         1       0       0       0
  6048 ;;      Temps:          1       0       0       0
  6049 ;;      Totals:         2       0       0       0
  6050 ;;Total ram usage:        2 bytes
  6051 ;; Hardware stack levels used:    1
  6052 ;; Hardware stack levels required when called:    2
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_getMain_LightsStatus
  6057 ;;		_setLights_Initialization
  6058 ;;		_setLights_Main
  6059 ;;		_setLights
  6060 ;;		_Lights_Control
  6061 ;;		_getLights_Status
  6062 ;;		_setLights_Trigger
  6063 ;;		_setLights_Line
  6064 ;;		_getLights_Line
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _LightsPointSelect
  6070  0F9A                     _LightsPointSelect:	
  6071                           
  6072                           ;incstack = 0
  6073                           ; Regs used in _LightsPointSelect: [wreg]
  6074                           ;LightsPointSelect@lights stored from wreg
  6075  0F9A  00F5               	movwf	LightsPointSelect@lights
  6076                           
  6077                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  6078  0F9B  0875               	movf	LightsPointSelect@lights,w
  6079  0F9C  3A01               	xorlw	1
  6080  0F9D  1D03               	skipz
  6081  0F9E  0008               	return
  6082                           
  6083                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  6084  0F9F  303E               	movlw	_Lights1& (0+255)
  6085  0FA0  00F4               	movwf	??_LightsPointSelect
  6086  0FA1  0874               	movf	??_LightsPointSelect,w
  6087  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0FA4  00B0               	movwf	_Lights
  6090  0FA5  0008               	return
  6091  0FA6                     __end_of_LightsPointSelect:	
  6092                           
  6093                           	psect	text39
  6094  0F8E                     __ptext39:	
  6095 ;; *************** function _LED_Main *****************
  6096 ;; Defined at:
  6097 ;;		line 47 in file "../src/LED_B1.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;		None               void
  6104 ;; Registers used:
  6105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6111 ;;      Params:         0       0       0       0
  6112 ;;      Locals:         0       0       0       0
  6113 ;;      Temps:          0       0       0       0
  6114 ;;      Totals:         0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    4
  6118 ;; This function calls:
  6119 ;;		_setLED_Main
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _LED_Main
  6127  0F8E                     _LED_Main:	
  6128                           
  6129                           ;LED_B1.c: 49: setLED_Main(1);
  6130                           
  6131                           ;incstack = 0
  6132                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6133  0F8E  3001               	movlw	1
  6134  0F8F  118A  2632  158A   	fcall	_setLED_Main
  6135                           
  6136                           ;LED_B1.c: 52: setLED_Main(2);
  6137  0F92  3002               	movlw	2
  6138  0F93  118A  2632  158A   	fcall	_setLED_Main
  6139                           
  6140                           ;LED_B1.c: 58: setLED_Main(99);
  6141  0F96  3063               	movlw	99
  6142  0F97  118A  2632         	fcall	_setLED_Main
  6143  0F99  0008               	return
  6144  0F9A                     __end_of_LED_Main:	
  6145                           
  6146                           	psect	text40
  6147  0632                     __ptext40:	
  6148 ;; *************** function _setLED_Main *****************
  6149 ;; Defined at:
  6150 ;;		line 192 in file "../src/LED_B1.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  led             1    wreg     unsigned char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  led             1    6[COMMON] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;		None               void
  6157 ;; Registers used:
  6158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6164 ;;      Params:         0       0       0       0
  6165 ;;      Locals:         1       0       0       0
  6166 ;;      Temps:          0       2       0       0
  6167 ;;      Totals:         1       2       0       0
  6168 ;;Total ram usage:        3 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    3
  6171 ;; This function calls:
  6172 ;;		_LedPointSelect
  6173 ;; This function is called by:
  6174 ;;		_LED_Main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function _setLED_Main
  6180  0632                     _setLED_Main:	
  6181                           
  6182                           ;incstack = 0
  6183                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6184                           ;setLED_Main@led stored from wreg
  6185  0632  00F6               	movwf	setLED_Main@led
  6186                           
  6187                           ;LED_B1.c: 193: LedPointSelect(led);
  6188  0633  0876               	movf	setLED_Main@led,w
  6189  0634  118A  2727  118A   	fcall	_LedPointSelect
  6190                           
  6191                           ;LED_B1.c: 194: if (LED->GO == 1) {
  6192  0637  0879               	movf	_LED,w
  6193  0638  0084               	movwf	4
  6194  0639  1383               	bcf	3,7	;select IRP bank0
  6195  063A  1C80               	btfss	0,1
  6196  063B  0008               	return
  6197                           
  6198                           ;LED_B1.c: 195: LED->Time++;
  6199  063C  0A79               	incf	_LED,w
  6200  063D  0084               	movwf	4
  6201  063E  3001               	movlw	1
  6202  063F  0780               	addwf	0,f
  6203  0640  0A84               	incf	4,f
  6204  0641  1803               	skipnc
  6205  0642  0A80               	incf	0,f
  6206                           
  6207                           ;LED_B1.c: 196: if (LED->Time >= 500 / 10) {
  6208  0643  0A79               	incf	_LED,w
  6209  0644  0084               	movwf	4
  6210  0645  0800               	movf	0,w
  6211  0646  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0647  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0648  00D1               	movwf	??_setLED_Main
  6214  0649  0A84               	incf	4,f
  6215  064A  0800               	movf	0,w
  6216  064B  00D2               	movwf	??_setLED_Main+1
  6217  064C  3000               	movlw	0
  6218  064D  0252               	subwf	??_setLED_Main+1,w
  6219  064E  3032               	movlw	50
  6220  064F  1903               	skipnz
  6221  0650  0251               	subwf	??_setLED_Main,w
  6222  0651  1C03               	skipc
  6223  0652  0008               	return
  6224                           
  6225                           ;LED_B1.c: 197: LED->Time = 0;
  6226  0653  0A79               	incf	_LED,w
  6227  0654  0084               	movwf	4
  6228  0655  0180               	clrf	0
  6229  0656  0A84               	incf	4,f
  6230  0657  0180               	clrf	0
  6231                           
  6232                           ;LED_B1.c: 199: if (led == 1) {
  6233  0658  0876               	movf	setLED_Main@led,w
  6234  0659  3A01               	xorlw	1
  6235  065A  1D03               	skipz
  6236  065B  2E5F               	goto	l3276
  6237                           
  6238                           ;LED_B1.c: 200: RB4 = RB4 == 1 ? 0 : 1;
  6239  065C  3010               	movlw	16
  6240  065D  0686               	xorwf	6,f
  6241                           
  6242                           ;LED_B1.c: 201: }
  6243  065E  0008               	return
  6244  065F                     l3276:	
  6245                           
  6246                           ;LED_B1.c: 204: else if (led == 2) {
  6247  065F  0876               	movf	setLED_Main@led,w
  6248  0660  3A02               	xorlw	2
  6249  0661  1D03               	skipz
  6250  0662  2E66               	goto	l3280
  6251                           
  6252                           ;LED_B1.c: 205: RB5 = RB5 == 1 ? 0 : 1;
  6253  0663  3020               	movlw	32
  6254  0664  0686               	xorwf	6,f
  6255                           
  6256                           ;LED_B1.c: 206: }
  6257  0665  0008               	return
  6258  0666                     l3280:	
  6259                           
  6260                           ;LED_B1.c: 214: else if (led == 99) {
  6261  0666  0876               	movf	setLED_Main@led,w
  6262  0667  3A63               	xorlw	99
  6263  0668  1D03               	skipz
  6264  0669  0008               	return
  6265                           
  6266                           ;LED_B1.c: 215: RB3 = RB3 == 1 ? 0 : 1;
  6267  066A  3008               	movlw	8
  6268  066B  0686               	xorwf	6,f
  6269  066C  0008               	return
  6270  066D                     __end_of_setLED_Main:	
  6271                           
  6272                           	psect	text41
  6273  0F82                     __ptext41:	
  6274 ;; *************** function _LED_Initialization *****************
  6275 ;; Defined at:
  6276 ;;		line 31 in file "../src/LED_B1.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;		None
  6281 ;; Return value:  Size  Location     Type
  6282 ;;		None               void
  6283 ;; Registers used:
  6284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6290 ;;      Params:         0       0       0       0
  6291 ;;      Locals:         0       0       0       0
  6292 ;;      Temps:          0       0       0       0
  6293 ;;      Totals:         0       0       0       0
  6294 ;;Total ram usage:        0 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    5
  6297 ;; This function calls:
  6298 ;;		_setLED_Initialization
  6299 ;; This function is called by:
  6300 ;;		_main
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function _LED_Initialization
  6306  0F82                     _LED_Initialization:	
  6307                           
  6308                           ;LED_B1.c: 33: setLED_Initialization(1);
  6309                           
  6310                           ;incstack = 0
  6311                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6312  0F82  3001               	movlw	1
  6313  0F83  118A  27D1  158A   	fcall	_setLED_Initialization
  6314                           
  6315                           ;LED_B1.c: 36: setLED_Initialization(2);
  6316  0F86  3002               	movlw	2
  6317  0F87  118A  27D1  158A   	fcall	_setLED_Initialization
  6318                           
  6319                           ;LED_B1.c: 42: setLED_Initialization(99);
  6320  0F8A  3063               	movlw	99
  6321  0F8B  118A  27D1         	fcall	_setLED_Initialization
  6322  0F8D  0008               	return
  6323  0F8E                     __end_of_LED_Initialization:	
  6324                           
  6325                           	psect	text42
  6326  07D1                     __ptext42:	
  6327 ;; *************** function _setLED_Initialization *****************
  6328 ;; Defined at:
  6329 ;;		line 63 in file "../src/LED_B1.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  led             1    wreg     unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  led             1    1[BANK0 ] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;		None               void
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6343 ;;      Params:         0       0       0       0
  6344 ;;      Locals:         0       1       0       0
  6345 ;;      Temps:          0       0       0       0
  6346 ;;      Totals:         0       1       0       0
  6347 ;;Total ram usage:        1 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    4
  6350 ;; This function calls:
  6351 ;;		_LedPointSelect
  6352 ;;		_setLED
  6353 ;; This function is called by:
  6354 ;;		_LED_Initialization
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function _setLED_Initialization
  6360  07D1                     _setLED_Initialization:	
  6361                           
  6362                           ;incstack = 0
  6363                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6364                           ;setLED_Initialization@led stored from wreg
  6365  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  6366  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  6367  07D3  00D2               	movwf	setLED_Initialization@led
  6368                           
  6369                           ;LED_B1.c: 64: LedPointSelect(led);
  6370  07D4  0852               	movf	setLED_Initialization@led,w
  6371  07D5  118A  2727  118A   	fcall	_LedPointSelect
  6372                           
  6373                           ;LED_B1.c: 65: LED->Enable = 1;
  6374  07D8  0879               	movf	_LED,w
  6375  07D9  0084               	movwf	4
  6376  07DA  1383               	bcf	3,7	;select IRP bank0
  6377  07DB  1400               	bsf	0,0
  6378                           
  6379                           ;LED_B1.c: 66: setLED(led, 0);
  6380  07DC  01F6               	clrf	setLED@command
  6381  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  6382  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  6383  07DF  0852               	movf	setLED_Initialization@led,w
  6384  07E0  118A  23C3         	fcall	_setLED
  6385  07E2  0008               	return
  6386  07E3                     __end_of_setLED_Initialization:	
  6387                           
  6388                           	psect	text43
  6389  03C3                     __ptext43:	
  6390 ;; *************** function _setLED *****************
  6391 ;; Defined at:
  6392 ;;		line 70 in file "../src/LED_B1.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  led             1    wreg     unsigned char 
  6395 ;;  command         1    6[COMMON] unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  led             1    0[BANK0 ] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6407 ;;      Params:         1       0       0       0
  6408 ;;      Locals:         0       1       0       0
  6409 ;;      Temps:          0       0       0       0
  6410 ;;      Totals:         1       1       0       0
  6411 ;;Total ram usage:        2 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    3
  6414 ;; This function calls:
  6415 ;;		_LedPointSelect
  6416 ;; This function is called by:
  6417 ;;		_setLED_Initialization
  6418 ;;		_setTemp_Main
  6419 ;;		_PIR_Main
  6420 ;;		_setOverTemp_Exceptions
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           
  6425                           ;psect for function _setLED
  6426  03C3                     _setLED:	
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6430                           ;setLED@led stored from wreg
  6431  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  6432  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  6433  03C5  00D1               	movwf	setLED@led
  6434                           
  6435                           ;LED_B1.c: 71: LedPointSelect(led);
  6436  03C6  0851               	movf	setLED@led,w
  6437  03C7  118A  2727  118A   	fcall	_LedPointSelect
  6438                           
  6439                           ;LED_B1.c: 72: if (command == 0) {
  6440  03CA  08F6               	movf	setLED@command,f
  6441  03CB  1D03               	skipz
  6442  03CC  2BE1               	goto	l3120
  6443                           
  6444                           ;LED_B1.c: 74: if (led == 1) {
  6445  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  6446  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  6447  03CF  0851               	movf	setLED@led,w
  6448  03D0  3A01               	xorlw	1
  6449  03D1  1D03               	skipz
  6450  03D2  2BD5               	goto	l3112
  6451                           
  6452                           ;LED_B1.c: 78: RB4 = 1;
  6453  03D3  1606               	bsf	6,4	;volatile
  6454                           
  6455                           ;LED_B1.c: 80: }
  6456  03D4  0008               	return
  6457  03D5                     l3112:	
  6458                           
  6459                           ;LED_B1.c: 83: else if (led == 2) {
  6460  03D5  0851               	movf	setLED@led,w
  6461  03D6  3A02               	xorlw	2
  6462  03D7  1D03               	skipz
  6463  03D8  2BDB               	goto	l3116
  6464                           
  6465                           ;LED_B1.c: 87: RB5 = 1;
  6466  03D9  1686               	bsf	6,5	;volatile
  6467                           
  6468                           ;LED_B1.c: 89: }
  6469  03DA  0008               	return
  6470  03DB                     l3116:	
  6471                           
  6472                           ;LED_B1.c: 101: else if (led == 99) {
  6473  03DB  0851               	movf	setLED@led,w
  6474  03DC  3A63               	xorlw	99
  6475  03DD  1D03               	skipz
  6476  03DE  0008               	return
  6477                           
  6478                           ;LED_B1.c: 105: RB3 = 1;
  6479  03DF  1586               	bsf	6,3	;volatile
  6480                           
  6481                           ;LED_B1.c: 107: }
  6482                           ;LED_B1.c: 109: } else if (command == 1) {
  6483  03E0  0008               	return
  6484  03E1                     l3120:	
  6485  03E1  0876               	movf	setLED@command,w
  6486  03E2  3A01               	xorlw	1
  6487  03E3  1D03               	skipz
  6488  03E4  2BF9               	goto	l3134
  6489                           
  6490                           ;LED_B1.c: 111: if (led == 1) {
  6491  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  6492  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  6493  03E7  0851               	movf	setLED@led,w
  6494  03E8  3A01               	xorlw	1
  6495  03E9  1D03               	skipz
  6496  03EA  2BED               	goto	l3126
  6497                           
  6498                           ;LED_B1.c: 115: RB4 = 0;
  6499  03EB  1206               	bcf	6,4	;volatile
  6500                           
  6501                           ;LED_B1.c: 117: }
  6502  03EC  0008               	return
  6503  03ED                     l3126:	
  6504                           
  6505                           ;LED_B1.c: 120: else if (led == 2) {
  6506  03ED  0851               	movf	setLED@led,w
  6507  03EE  3A02               	xorlw	2
  6508  03EF  1D03               	skipz
  6509  03F0  2BF3               	goto	l3130
  6510                           
  6511                           ;LED_B1.c: 124: RB5 = 0;
  6512  03F1  1286               	bcf	6,5	;volatile
  6513                           
  6514                           ;LED_B1.c: 126: }
  6515  03F2  0008               	return
  6516  03F3                     l3130:	
  6517                           
  6518                           ;LED_B1.c: 138: else if (led == 99) {
  6519  03F3  0851               	movf	setLED@led,w
  6520  03F4  3A63               	xorlw	99
  6521  03F5  1D03               	skipz
  6522  03F6  0008               	return
  6523                           
  6524                           ;LED_B1.c: 142: RB3 = 0;
  6525  03F7  1186               	bcf	6,3	;volatile
  6526                           
  6527                           ;LED_B1.c: 144: }
  6528                           ;LED_B1.c: 146: } else if (command == 10) {
  6529  03F8  0008               	return
  6530  03F9                     l3134:	
  6531  03F9  0876               	movf	setLED@command,w
  6532  03FA  3A0A               	xorlw	10
  6533  03FB  1D03               	skipz
  6534  03FC  2C1A               	goto	l3152
  6535                           
  6536                           ;LED_B1.c: 147: LED->GO = 0;
  6537  03FD  0879               	movf	_LED,w
  6538  03FE  0084               	movwf	4
  6539  03FF  1383               	bcf	3,7	;select IRP bank0
  6540  0400  1080               	bcf	0,1
  6541                           
  6542                           ;LED_B1.c: 148: LED->Time = 0;
  6543  0401  0A79               	incf	_LED,w
  6544  0402  0084               	movwf	4
  6545  0403  0180               	clrf	0
  6546  0404  0A84               	incf	4,f
  6547  0405  0180               	clrf	0
  6548                           
  6549                           ;LED_B1.c: 150: if (led == 1) {
  6550  0406  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0407  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0408  0851               	movf	setLED@led,w
  6553  0409  3A01               	xorlw	1
  6554  040A  1D03               	skipz
  6555  040B  2C0E               	goto	l3144
  6556                           
  6557                           ;LED_B1.c: 154: RB4 = 1;
  6558  040C  1606               	bsf	6,4	;volatile
  6559                           
  6560                           ;LED_B1.c: 156: }
  6561  040D  0008               	return
  6562  040E                     l3144:	
  6563                           
  6564                           ;LED_B1.c: 159: else if (led == 2) {
  6565  040E  0851               	movf	setLED@led,w
  6566  040F  3A02               	xorlw	2
  6567  0410  1D03               	skipz
  6568  0411  2C14               	goto	l3148
  6569                           
  6570                           ;LED_B1.c: 163: RB5 = 1;
  6571  0412  1686               	bsf	6,5	;volatile
  6572                           
  6573                           ;LED_B1.c: 165: }
  6574  0413  0008               	return
  6575  0414                     l3148:	
  6576                           
  6577                           ;LED_B1.c: 177: else if (led == 99) {
  6578  0414  0851               	movf	setLED@led,w
  6579  0415  3A63               	xorlw	99
  6580  0416  1D03               	skipz
  6581  0417  0008               	return
  6582                           
  6583                           ;LED_B1.c: 181: RB3 = 1;
  6584  0418  1586               	bsf	6,3	;volatile
  6585                           
  6586                           ;LED_B1.c: 183: }
  6587                           ;LED_B1.c: 185: } else if (command == 11) {
  6588  0419  0008               	return
  6589  041A                     l3152:	
  6590  041A  0876               	movf	setLED@command,w
  6591  041B  3A0B               	xorlw	11
  6592  041C  1D03               	skipz
  6593  041D  0008               	return
  6594                           
  6595                           ;LED_B1.c: 186: LED->GO = 1;
  6596  041E  0879               	movf	_LED,w
  6597  041F  0084               	movwf	4
  6598  0420  1383               	bcf	3,7	;select IRP bank0
  6599  0421  1480               	bsf	0,1
  6600  0422  0008               	return
  6601  0423                     __end_of_setLED:	
  6602                           
  6603                           	psect	text44
  6604  0727                     __ptext44:	
  6605 ;; *************** function _LedPointSelect *****************
  6606 ;; Defined at:
  6607 ;;		line 7 in file "../src/LED_B1.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  led             1    wreg     unsigned char 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  led             1    5[COMMON] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;		None               void
  6614 ;; Registers used:
  6615 ;;		wreg
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6621 ;;      Params:         0       0       0       0
  6622 ;;      Locals:         1       0       0       0
  6623 ;;      Temps:          1       0       0       0
  6624 ;;      Totals:         2       0       0       0
  6625 ;;Total ram usage:        2 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    2
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_setLED_Initialization
  6632 ;;		_setLED
  6633 ;;		_setLED_Main
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           
  6638                           ;psect for function _LedPointSelect
  6639  0727                     _LedPointSelect:	
  6640                           
  6641                           ;incstack = 0
  6642                           ; Regs used in _LedPointSelect: [wreg]
  6643                           ;LedPointSelect@led stored from wreg
  6644  0727  00F5               	movwf	LedPointSelect@led
  6645                           
  6646                           ;LED_B1.c: 9: if (led == 1) {
  6647  0728  0875               	movf	LedPointSelect@led,w
  6648  0729  3A01               	xorlw	1
  6649  072A  1D03               	skipz
  6650  072B  2F31               	goto	l3090
  6651                           
  6652                           ;LED_B1.c: 10: LED = &VarLED1;
  6653  072C  3049               	movlw	_VarLED1& (0+255)
  6654  072D  00F4               	movwf	??_LedPointSelect
  6655  072E  0874               	movf	??_LedPointSelect,w
  6656  072F  00F9               	movwf	_LED
  6657                           
  6658                           ;LED_B1.c: 11: }
  6659  0730  0008               	return
  6660  0731                     l3090:	
  6661                           
  6662                           ;LED_B1.c: 14: else if (led == 2) {
  6663  0731  0875               	movf	LedPointSelect@led,w
  6664  0732  3A02               	xorlw	2
  6665  0733  1D03               	skipz
  6666  0734  2F3A               	goto	l3094
  6667                           
  6668                           ;LED_B1.c: 15: LED = &VarLED2;
  6669  0735  304D               	movlw	_VarLED2& (0+255)
  6670  0736  00F4               	movwf	??_LedPointSelect
  6671  0737  0874               	movf	??_LedPointSelect,w
  6672  0738  00F9               	movwf	_LED
  6673                           
  6674                           ;LED_B1.c: 16: }
  6675  0739  0008               	return
  6676  073A                     l3094:	
  6677                           
  6678                           ;LED_B1.c: 24: else if (led == 99) {
  6679  073A  0875               	movf	LedPointSelect@led,w
  6680  073B  3A63               	xorlw	99
  6681  073C  1D03               	skipz
  6682  073D  0008               	return
  6683                           
  6684                           ;LED_B1.c: 25: LED = &VarErrLED;
  6685  073E  3045               	movlw	_VarErrLED& (0+255)
  6686  073F  00F4               	movwf	??_LedPointSelect
  6687  0740  0874               	movf	??_LedPointSelect,w
  6688  0741  00F9               	movwf	_LED
  6689  0742  0008               	return
  6690  0743                     __end_of_LedPointSelect:	
  6691                           
  6692                           	psect	text45
  6693  0573                     __ptext45:	
  6694 ;; *************** function _CDS_Main *****************
  6695 ;; Defined at:
  6696 ;;		line 11 in file "../src/CDS_B1.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;		None               void
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6710 ;;      Params:         0       0       0       0
  6711 ;;      Locals:         0       0       0       0
  6712 ;;      Temps:          0       3       0       0
  6713 ;;      Totals:         0       3       0       0
  6714 ;;Total ram usage:        3 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    3
  6717 ;; This function calls:
  6718 ;;		_getMain_AD_Safe
  6719 ;; This function is called by:
  6720 ;;		_main
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _CDS_Main
  6726  0573                     _CDS_Main:	
  6727                           
  6728                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  6729                           
  6730                           ;incstack = 0
  6731                           ; Regs used in _CDS_Main: [wreg+status,2+status,0+pclath+cstack]
  6732  0573  1283               	bcf	3,5	;RP0=0, select bank0
  6733  0574  1303               	bcf	3,6	;RP1=0, select bank0
  6734  0575  1C28               	btfss	__CDS,0
  6735  0576  0008               	return
  6736                           
  6737                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  6738  0577  18A8               	btfsc	__CDS,1
  6739  0578  2D95               	goto	l89
  6740                           
  6741                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  6742  0579  19A8               	btfsc	__CDS,3
  6743  057A  0008               	return
  6744                           
  6745                           ;CDS_B1.c: 16: _CDS.Time++;
  6746  057B  3001               	movlw	1
  6747  057C  00D1               	movwf	??_CDS_Main
  6748  057D  0851               	movf	??_CDS_Main,w
  6749  057E  07A9               	addwf	__CDS+1,f
  6750                           
  6751                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  6752  057F  300A               	movlw	10
  6753  0580  0229               	subwf	__CDS+1,w
  6754  0581  1C03               	skipc
  6755  0582  0008               	return
  6756                           
  6757                           ;CDS_B1.c: 18: {
  6758                           ;CDS_B1.c: 19: if (getMain_AD_Safe() == 1) {
  6759  0583  158A  2744  118A   	fcall	_getMain_AD_Safe
  6760  0586  3A01               	xorlw	1
  6761  0587  1D03               	skipz
  6762  0588  2D8E               	goto	l3474
  6763                           
  6764                           ;CDS_B1.c: 20: _CDS.Time = 0;
  6765  0589  1283               	bcf	3,5	;RP0=0, select bank0
  6766  058A  1303               	bcf	3,6	;RP1=0, select bank0
  6767  058B  01A9               	clrf	__CDS+1
  6768                           
  6769                           ;CDS_B1.c: 21: _CDS.ADtoGO = 1;
  6770  058C  15A8               	bsf	__CDS,3
  6771                           
  6772                           ;CDS_B1.c: 22: } else {
  6773  058D  0008               	return
  6774  058E                     l3474:	
  6775                           
  6776                           ;CDS_B1.c: 23: _CDS.Time = 10;
  6777  058E  300A               	movlw	10
  6778  058F  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0590  1303               	bcf	3,6	;RP1=0, select bank0
  6780  0591  00D1               	movwf	??_CDS_Main
  6781  0592  0851               	movf	??_CDS_Main,w
  6782  0593  00A9               	movwf	__CDS+1
  6783                           
  6784                           ;CDS_B1.c: 24: }
  6785                           ;CDS_B1.c: 25: }
  6786                           ;CDS_B1.c: 26: }
  6787                           ;CDS_B1.c: 27: } else {
  6788  0594  0008               	return
  6789  0595                     l89:	
  6790                           
  6791                           ;CDS_B1.c: 28: if (_CDS.GO == 1) {
  6792  0595  1CA8               	btfss	__CDS,1
  6793  0596  0008               	return
  6794                           
  6795                           ;CDS_B1.c: 29: _CDS.GO = 0;
  6796  0597  10A8               	bcf	__CDS,1
  6797                           
  6798                           ;CDS_B1.c: 30: if (_CDS.Status == 0) {
  6799  0598  1A28               	btfsc	__CDS,4
  6800  0599  2DA0               	goto	l3482
  6801                           
  6802                           ;CDS_B1.c: 31: if (_CDS.SignalAD >= _CDS.VRAD) {
  6803  059A  082A               	movf	__CDS+2,w
  6804  059B  022B               	subwf	__CDS+3,w
  6805  059C  1C03               	skipc
  6806  059D  0008               	return
  6807                           
  6808                           ;CDS_B1.c: 32: _CDS.Status = 1;
  6809  059E  1628               	bsf	__CDS,4
  6810                           
  6811                           ;CDS_B1.c: 33: }
  6812                           ;CDS_B1.c: 34: } else {
  6813  059F  0008               	return
  6814  05A0                     l3482:	
  6815                           
  6816                           ;CDS_B1.c: 35: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  6817  05A0  082A               	movf	__CDS+2,w
  6818  05A1  3E9C               	addlw	156
  6819  05A2  00D1               	movwf	??_CDS_Main
  6820  05A3  30FF               	movlw	255
  6821  05A4  1803               	skipnc
  6822  05A5  3000               	movlw	0
  6823  05A6  00D2               	movwf	??_CDS_Main+1
  6824  05A7  0852               	movf	??_CDS_Main+1,w
  6825  05A8  3A80               	xorlw	128
  6826  05A9  00D3               	movwf	??_CDS_Main+2
  6827  05AA  3080               	movlw	128
  6828  05AB  0253               	subwf	??_CDS_Main+2,w
  6829  05AC  1D03               	skipz
  6830  05AD  2DB0               	goto	u3745
  6831  05AE  082B               	movf	__CDS+3,w
  6832  05AF  0251               	subwf	??_CDS_Main,w
  6833  05B0                     u3745:	
  6834  05B0  1C03               	skipc
  6835  05B1  0008               	return
  6836                           
  6837                           ;CDS_B1.c: 36: _CDS.Status = 0;
  6838  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  6839  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  6840  05B4  1228               	bcf	__CDS,4
  6841  05B5  0008               	return
  6842  05B6                     __end_of_CDS_Main:	
  6843                           
  6844                           	psect	text46
  6845  0F44                     __ptext46:	
  6846 ;; *************** function _getMain_AD_Safe *****************
  6847 ;; Defined at:
  6848 ;;		line 294 in file "../src/Main_B1.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  result          1    4[COMMON] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      unsigned char 
  6855 ;; Registers used:
  6856 ;;		wreg
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6862 ;;      Params:         0       0       0       0
  6863 ;;      Locals:         1       0       0       0
  6864 ;;      Temps:          0       0       0       0
  6865 ;;      Totals:         1       0       0       0
  6866 ;;Total ram usage:        1 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    2
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_CDS_Main
  6873 ;;		_setTemp_Main
  6874 ;;		_PIR_Main
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           
  6879                           ;psect for function _getMain_AD_Safe
  6880  0F44                     _getMain_AD_Safe:	
  6881                           
  6882                           ;Main_B1.c: 295: char result = 1;
  6883                           
  6884                           ;incstack = 0
  6885                           ; Regs used in _getMain_AD_Safe: [wreg]
  6886  0F44  01F4               	clrf	getMain_AD_Safe@result
  6887  0F45  0AF4               	incf	getMain_AD_Safe@result,f
  6888                           
  6889                           ;Main_B1.c: 305: return result;
  6890  0F46  0874               	movf	getMain_AD_Safe@result,w
  6891  0F47  0008               	return
  6892  0F48                     __end_of_getMain_AD_Safe:	
  6893                           
  6894                           	psect	text47
  6895  0F40                     __ptext47:	
  6896 ;; *************** function _CDS_Initialization *****************
  6897 ;; Defined at:
  6898 ;;		line 7 in file "../src/CDS_B1.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;		None               void
  6905 ;; Registers used:
  6906 ;;		None
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6912 ;;      Params:         0       0       0       0
  6913 ;;      Locals:         0       0       0       0
  6914 ;;      Temps:          0       0       0       0
  6915 ;;      Totals:         0       0       0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    2
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_main
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function _CDS_Initialization
  6928  0F40                     _CDS_Initialization:	
  6929                           
  6930                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  6931                           
  6932                           ;incstack = 0
  6933                           ; Regs used in _CDS_Initialization: []
  6934  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  6935  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  6936  0F42  1428               	bsf	__CDS,0
  6937  0F43  0008               	return
  6938  0F44                     __end_of_CDS_Initialization:	
  6939                           
  6940                           	psect	text48
  6941  0FE0                     __ptext48:	
  6942 ;; *************** function _ISR *****************
  6943 ;; Defined at:
  6944 ;;		line 107 in file "../src/MCU_B1.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;		None               void
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, pclath, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6958 ;;      Params:         0       0       0       0
  6959 ;;      Locals:         0       0       0       0
  6960 ;;      Temps:          4       0       0       0
  6961 ;;      Totals:         4       0       0       0
  6962 ;;Total ram usage:        4 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    1
  6965 ;; This function calls:
  6966 ;;		_TMR1_ISR
  6967 ;; This function is called by:
  6968 ;;		Interrupt level 1
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _ISR
  6974  0FE0                     _ISR:	
  6975                           
  6976                           ;MCU_B1.c: 109: ;;
  6977                           ;MCU_B1.c: 111: ;;
  6978                           ;MCU_B1.c: 113: TMR1_ISR();
  6979  0FE0  118A  2743  158A   	fcall	_TMR1_ISR
  6980  0FE3  0873               	movf	??_ISR+3,w
  6981  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  6982  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  6983  0FE6  00FF               	movwf	127
  6984  0FE7  0872               	movf	??_ISR+2,w
  6985  0FE8  008A               	movwf	10
  6986  0FE9  0871               	movf	??_ISR+1,w
  6987  0FEA  0084               	movwf	4
  6988  0FEB  0E70               	swapf	??_ISR^(0+-128),w
  6989  0FEC  0083               	movwf	3
  6990  0FED  0EFE               	swapf	126,f
  6991  0FEE  0E7E               	swapf	126,w
  6992  0FEF  0009               	retfie
  6993  0FF0                     __end_of_ISR:	
  6994                           
  6995                           	psect	intentry
  6996  0004                     __pintentry:	
  6997                           ;incstack = 0
  6998                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  6999                           
  7000  0004                     interrupt_function:	
  7001  007E                     saved_w	set	btemp
  7002  0004  00FE               	movwf	btemp
  7003  0005  0E03               	swapf	3,w
  7004  0006  00F0               	movwf	??_ISR
  7005  0007  0804               	movf	4,w
  7006  0008  00F1               	movwf	??_ISR+1
  7007  0009  080A               	movf	10,w
  7008  000A  00F2               	movwf	??_ISR+2
  7009  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7010  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7011  000D  087F               	movf	btemp+1,w
  7012  000E  00F3               	movwf	??_ISR+3
  7013  000F  158A  2FE0         	ljmp	_ISR
  7014                           
  7015                           	psect	text49
  7016  0743                     __ptext49:	
  7017 ;; *************** function _TMR1_ISR *****************
  7018 ;; Defined at:
  7019 ;;		line 209 in file "../src/MCU_B1.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;		None               void
  7026 ;; Registers used:
  7027 ;;		wreg, status,2
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7033 ;;      Params:         0       0       0       0
  7034 ;;      Locals:         0       0       0       0
  7035 ;;      Temps:          0       0       0       0
  7036 ;;      Totals:         0       0       0       0
  7037 ;;Total ram usage:        0 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_ISR
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function _TMR1_ISR
  7048  0743                     _TMR1_ISR:	
  7049                           
  7050                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  7051                           
  7052                           ;incstack = 0
  7053                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  7054  0743  1683               	bsf	3,5	;RP0=1, select bank1
  7055  0744  1303               	bcf	3,6	;RP1=0, select bank1
  7056  0745  1C0C               	btfss	12,0	;volatile
  7057  0746  0008               	return
  7058  0747  1283               	bcf	3,5	;RP0=0, select bank0
  7059  0748  1303               	bcf	3,6	;RP1=0, select bank0
  7060  0749  1C0C               	btfss	12,0	;volatile
  7061  074A  0008               	return
  7062                           
  7063                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  7064  074B  30FA               	movlw	250
  7065  074C  008F               	movwf	15	;volatile
  7066                           
  7067                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  7068  074D  3038               	movlw	56
  7069  074E  008E               	movwf	14	;volatile
  7070                           
  7071                           ;MCU_B1.c: 214: TMR1IF = 0;
  7072  074F  100C               	bcf	12,0	;volatile
  7073                           
  7074                           ;MCU_B1.c: 234: Timer1.Count++;
  7075  0750  3001               	movlw	1
  7076  0751  07AE               	addwf	_Timer1+1,f
  7077  0752  1803               	skipnc
  7078  0753  0AAF               	incf	_Timer1+2,f
  7079  0754  3000               	movlw	0
  7080  0755  07AF               	addwf	_Timer1+2,f
  7081                           
  7082                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  7083  0756  3064               	movlw	100
  7084  0757  062E               	xorwf	_Timer1+1,w
  7085  0758  042F               	iorwf	_Timer1+2,w
  7086  0759  1D03               	skipz
  7087  075A  0008               	return
  7088                           
  7089                           ;MCU_B1.c: 236: {
  7090                           ;MCU_B1.c: 237: Timer1.Count = 0;
  7091  075B  01AE               	clrf	_Timer1+1
  7092  075C  01AF               	clrf	_Timer1+2
  7093                           
  7094                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  7095  075D  142D               	bsf	_Timer1,0
  7096  075E  0008               	return
  7097  075F                     __end_of_TMR1_ISR:	
  7098  007E                     btemp	set	126	;btemp
  7099  007E                     wtemp	set	126
  7100  007E                     wtemp0	set	126
  7101  0080                     wtemp1	set	128
  7102  0082                     wtemp2	set	130
  7103  0084                     wtemp3	set	132
  7104  0086                     wtemp4	set	134
  7105  0088                     wtemp5	set	136
  7106  007F                     wtemp6	set	127
  7107  007E                     ttemp	set	126
  7108  007E                     ttemp0	set	126
  7109  0081                     ttemp1	set	129
  7110  0084                     ttemp2	set	132
  7111  0087                     ttemp3	set	135
  7112  007F                     ttemp4	set	127
  7113  007E                     ltemp	set	126
  7114  007E                     ltemp0	set	126
  7115  0082                     ltemp1	set	130
  7116  0086                     ltemp2	set	134
  7117  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         99
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     19      68
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_getCDS_AD
    _main->_getPIR_AD
    _main->_getTemp_AD
    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _setTemp_Main->_getMain_LightsStatus
    _setTemp_Main->_setLED
    _PIR_Main->_setLED
    _PIR_Main->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Control
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect
    _CDS_Main->_getMain_AD_Safe

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _PIR_Main->_getMain_All_Error_Status
    _Lights_Main->_setLights_Main
    _setLights_Main->_getMain_All_Error_Status
    _Lights_Close->_getMain_LightsStatus
    _LED_Main->_setLED_Main
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   13144
                                             14 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     520
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2377
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     661
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     489
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    3269
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    3269
                                              8 BANK0      1     1      0
                            ___awdiv
                    _getMain_AD_Safe
           _getMain_All_Error_Status
               _getMain_LightsStatus
                             _setLED
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             5     5      0    2728
                                              4 BANK0      5     5      0
                      _getCDS_Status
                   _getLights_Status
                    _getMain_AD_Safe
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _setLights_Trigger                                    3     2      1     405
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    1149
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       6     6      0     784
                                              4 BANK0      6     6      0
                  _LightsPointSelect
           _getMain_All_Error_Status
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     425
                                              0 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     198
                                              4 COMMON     1     1      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0     124
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         4     4      0     241
                                              4 BANK0      4     4      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     204
                                              6 COMMON     1     1      0
                                              0 BANK0      4     4      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (4) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2138
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2138
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1983
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0      23
                                              0 BANK0      3     3      0
                    _getMain_AD_Safe
 ---------------------------------------------------------------------------------
 (3) _getMain_AD_Safe                                      1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
     _getMain_AD_Safe
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _getMain_All_Error_Status
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_AD_Safe
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_AD_Safe
       _getMain_All_Error_Status
       _getMain_LightsStatus
         _LightsPointSelect
       _setLED
         _LedPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      7D      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Nov 04 17:15:46 2014

                     _WDT_Clearing 0002                                 l89 0595  
                     ___awdiv@sign 0056                                 fsr 0004  
                              l500 078E                                l673 0045  
                              l933 0618                                l678 0068  
                              l679 0094                                l599 03BF  
                              l938 061B                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0079                                _RB3 0033  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0FE0  
                              _PSA 040B                                _WDT 0077  
                              fsr0 0004                                indf 0000  
                  __end_of_ADC_Set 0F67          __end_of_LightsPointSelect 0FA6  
                 _getLights_Status 07E3            __size_of_Lights_Control 0057  
                             ?_ISR 0070                               l3112 03D5  
                             l3120 03E1                               l3130 03F3  
                             l3116 03DB                               l3204 0553  
                             l3220 042F                               l3300 0342  
                             l3126 03ED                               l3134 03F9  
                             l2430 0721                               l3144 040E  
                             l3152 041A                               l3208 056B  
                             l2424 0718                               l3090 0731  
                             l3170 069A                               l3226 043A  
                             l3314 037B                               l2426 071B  
                             l3148 0414                               l3252 0479  
                             l3244 0466                               l3236 0442  
                             l3332 039E                               l3094 073A  
                             l3166 0693                               l3430 0706  
                             l3238 0450                               l3280 0666  
                             l3168 0675                               l3408 04B8  
                             l3248 0471                               l3344 03B5  
                             l3512 06E3                               l3186 078A  
                             l3346 03B8                               l3450 05E4  
                             l3442 05C0                               l3276 065F  
                             l3428 0702                               l3188 0792  
                             l3444 05CE                               l3540 0250  
                             l3532 0240                               l3390 062B  
                             l3710 018E                               l3454 05EF  
                             l3534 0244                               l3704 015D  
                             l3640 008B                               l3712 0199  
                             l3560 0295                               l3536 0248  
                             l3528 023A                               l3544 0255  
                             l3482 05A0                               l3474 058E  
                             l3722 01B3                               l3298 033B  
                             l3570 02C3                               l3554 0279  
                             l3538 024C                               l3546 0266  
                             l3628 0070                               l3590 0319  
                             l3680 00D9                               l3664 00B6  
                             l3584 030B                               l3576 02DF  
                             l3682 00DA                               l3692 0126  
                             l3676 00CD                               l3764 0509  
                             l3758 04ED              _myMain_Initialization 0F39  
                     __CFG_WDTE$ON 0000                               u3205 0451  
                             u3215 045D                               u4105 0147  
                             u3225 0467                               u1625 07CB  
                             u3075 067E                               u4125 0184  
                             u4145 01A9                               u3185 0445  
                             u3530 04B4                               u4085 00FA  
                             u3605 05C3                               u4175 01D0  
                             u4095 011E                               u3625 05CF  
                             u3635 05DB                               _PEIE 005E  
                             u3645 05E5                               u3745 05B0  
                             __CDS 0028                               __PIR 00A0  
                             _Temp 0032                               _main 04D7  
                             btemp 007E                    __end_of_WDT_Set 0800  
                             ltemp 007E                               start 0011  
                             ttemp 007E                               wtemp 007E  
                 __end_of_CDS_Main 05B6       __size_of_Temp_Initialization 0003  
                            ??_ISR 0070                  _setLights_Trigger 075F  
                    ??_Lights_Main 0077                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0F9A                 ?_setLights_Trigger 0076  
                            ?_main 005F                    __end_of___awdiv 0480  
                            _ADRES 001E                    ___awdiv@divisor 0051  
                            _T1CON 0010                    __end_of___lwdiv 05F6  
                    ?_Lights_Close 0070                    ___awdiv@counter 0055  
                            _TMR1H 000F                              _TMR1L 000E  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                       ?_setLED_Main 0070  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087            __end_of_Timeout_Counter 07D1  
                 ?_getMain_AD_Safe 0070                ??_setLights_Trigger 0051  
                 __end_of_PIR_Main 01E1                   __end_of_TMR1_ISR 075F  
                 __end_of_TMR1_Set 0FC2                              _getAD 070B  
                 __end_of_WDT_Main 0FE0                      _LightsControl 0031  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 069E  
    __end_of_setLED_Initialization 07E3                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 005D                  getPIR_AD@channel2 0076  
                   _setLights_Main 05F6                     _setLights_Line 0FA6  
                  __initialization 0013          __end_of_setLights_Trigger 077A  
                     __end_of_main 0528                   __end_of_Fosc_Set 0F5A  
                        ??_ADC_Set 0074                             ??_main 0063  
                   ??_Lights_Close 0055                __end_of_Lights_Main 0F82  
       __size_of_LightsPointSelect 000C                             ?_getAD 0074  
           ?_myMain_Initialization 0070                             _ADCON0 001F  
                           _ADCON1 009F                   ___awdiv@dividend 0053  
                        ??_WDT_Set 0074                             _ANSELA 0185  
                           _ANSELB 0186           _getMain_All_Error_Status 077A  
                           _FVRCON 009D             getLights_Status@lights 0051  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 0794  
           getLights_Status@status 0052             __end_of_setLights_Main 0632  
           __end_of_setLights_Line 0FB4         __end_of_Mcu_Initialization 0FD1  
                           _Lights 0030                             _Timer1 002D  
      __size_of_CDS_Initialization 0004            ??_Lights_Initialization 0077  
                        ??___awdiv 0074                          ??___lwdiv 0074  
                           _setLED 03C3                             _myMain 0020  
              _setLights_Main$3600 0058                   ___awdiv@quotient 0057  
               __size_of_Temp_Main 0003                             saved_w 007E  
                 ?_Timeout_Counter 0070                     _Lights_Control 0480  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0070  
      __size_of_PIR_Initialization 0010         getMain_LightsStatus@status 0054  
          __end_of__initialization 0022                          ?_LED_Main 0070  
                    ?_my_MainTimer 0070                    ?_setLights_Main 0070  
                  ?_setLights_Line 0070         __size_of_setLights_Trigger 001B  
                   __pcstackCOMMON 0070                 __size_of_getCDS_AD 002A  
         __end_of_getLights_Status 07F4                      __end_of_getAD 0727  
                        ?_PIR_Main 0070                          ?_TMR1_ISR 0070  
                        ?_TMR1_Set 0070                 _LED_Initialization 0F82  
               __size_of_getPIR_AD 013A                        _Lights_Main 0F77  
         _setLights_Initialization 0F50                          ?_WDT_Main 0070  
             _getMain_LightsStatus 066D         __end_of_set_TimeoutCleared 0F60  
              ?_LED_Initialization 0070             __end_of_Lights_Control 04D7  
            getMain_LightsStatus@i 0052               __size_of_setLED_Main 003B  
                          ??_getAD 0075                _Temp_Initialization 0F3A  
                       ??_CDS_Main 0051                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0070  
                __end_of_Temp_Main 0F40                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                     ??_my_MainTimer 0074  
                       ??_LED_Main 0077               __end_of_Lights_Close 070B  
        getMain_LightsStatus@count 0051               ??_LED_Initialization 0077  
                LedPointSelect@led 0075                         __pmaintext 04D7  
             ?_Temp_Initialization 0070                         ??_PIR_Main 0055  
                       ??_TMR1_ISR 0070                      ?_setTemp_Main 0070  
               __size_of_setLights 004B                         ??_TMR1_Set 0074  
                       __pintentry 0004                            ?_setLED 0076  
          setLights_Trigger@lights 0052                            _ADC_Set 0F60  
                       _getTemp_AD 06C8                         ??_WDT_Main 0074  
            ?_getMain_LightsStatus 0070             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 06C8  
                          _WDT_Set 07F4                         ??_Fosc_Set 0074  
                __end_of_getPIR_AD 031B                    __size_of_IO_Set 0015  
                       getCDS_AD@i 0053                         getCDS_AD@j 0054  
                          _Lights1 003E                            _VarLED1 0049  
                          _VarLED2 004D              ??_Temp_Initialization 0074  
                   ??_setTemp_Main 0059                            ___awdiv 0423  
                          ___lwdiv 05B6                    __size_of_setLED 0060  
                          __ptext0 0000                            __ptext1 07A9  
                          __ptext2 0F39                            __ptext3 06C8  
                          __ptext4 01E1                            __ptext5 05B6  
                          __ptext6 069E                            __ptext7 070B  
                          __ptext8 0F5A                            __ptext9 07BD  
                       getPIR_AD@i 005E                         getPIR_AD@j 005C  
                     __size_of_ISR 0010         ??_getMain_All_Error_Status 0074  
          ??_myMain_Initialization 0074           ??_setTemp_Initialization 0074  
                   _LedPointSelect 0727                            clrloop0 0F70  
                __end_of_setLights 0573               end_of_initialization 0022  
            getMain_AD_Safe@result 0074           __size_of_getMain_AD_Safe 0004  
                    _getCDS_Status 0F67              _setLED_Initialization 07D1  
   __size_of_Lights_Initialization 0004      __end_of_Lights_Initialization 0F4C  
           ??_getMain_LightsStatus 0076                        ?_getTemp_AD 0070  
         setLED_Initialization@led 0052                 _Mcu_Initialization 0FC2  
             __end_of_my_MainTimer 07BD             __end_of_LedPointSelect 0743  
              ?_Mcu_Initialization 0070              __size_of_Lights_Close 001F  
                 ??_setLights_Main 0055                   ??_setLights_Line 0076  
             setLights_Main@lights 005A    getMain_All_Error_Status@command 0054  
                __size_of_CDS_Main 0043                     ?_getCDS_Status 0070  
                   __end_of_IO_Set 07A9         __end_of_CDS_Initialization 0F44  
       ??_setLights_Initialization 0076                  __size_of_LED_Main 000C  
             ??_Mcu_Initialization 0075                      ?_WDT_Clearing 0070  
                ?_getLights_Status 0070                       ?_Lights_Main 0070  
                __size_of_PIR_Main 01BC                  __size_of_TMR1_ISR 001C  
               ??_getLights_Status 0076                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 0423                       _Lights_Close 06EC  
                __size_of_WDT_Main 000F                start_initialization 0013  
                  ?_LedPointSelect 0070               setLights_Line@lights 0076  
                      __end_of_ISR 0FF0         __end_of_PIR_Initialization 1000  
              getCDS_Status@result 0074    __size_of_setTemp_Initialization 0004  
             __end_of_setTemp_Main 03C3                 _set_TimeoutCleared 0F5A  
                         ??_IO_Set 0074           __size_of_Timeout_Counter 0014  
                        _VarErrLED 0045                __size_of_getTemp_AD 0024  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
                        _Temp_Main 0F3D                    setLights@lights 0053  
              ?_set_TimeoutCleared 0070                     ??_WDT_Clearing 0074  
                ??_getMain_AD_Safe 0074                    setLights@status 0051  
                         ??_setLED 0077                           ?_ADC_Set 0070  
                 ??_Lights_Control 0051   __end_of_getMain_All_Error_Status 0794  
                    ??_setLED_Main 0051                        __pbssCOMMON 0077  
                        ___latbits 0001                      __pcstackBANK0 0051  
             ??_set_TimeoutCleared 0074                           ?_WDT_Set 0070  
                  ??_getCDS_Status 0074                          _getCDS_AD 069E  
                        _getPIR_AD 01E1        __size_of_LED_Initialization 000C  
                       ?_Temp_Main 0070                   ___lwdiv@dividend 0053  
           _setTemp_Initialization 0F4C                           ?___awdiv 0051  
            __size_of_my_MainTimer 0014                           ?___lwdiv 0051  
         setLights_Trigger@command 0076     __size_of_myMain_Initialization 0001  
    __end_of_myMain_Initialization 0F3A                     __size_of_getAD 001C  
                 ___lwdiv@quotient 0056                           _CDS_Main 0573  
              __end_of_setLED_Main 066D        __end_of_Temp_Initialization 0F3D  
                interrupt_function 0004                         ?_getCDS_AD 0076  
                         _LED_Main 0F8E                          _setLights 0528  
                        clear_ram0 0F6F   __end_of_setLights_Initialization 0F55  
                     _my_MainTimer 07A9                         ?_getPIR_AD 0076  
                         _GO_nDONE 00F9                  ??_Timeout_Counter 0074  
                         _PIR_Main 0025                           _TMR1_ISR 0743  
                         _TMR1_Set 0FB4                       ??_getTemp_AD 0051  
                         _WDT_Main 0FD1                   __size_of_ADC_Set 0007  
             __size_of_Lights_Main 000B              __size_of_setTemp_Main 00A8  
   getMain_All_Error_Status@status 0053                        getAD@adcon0 0075  
                      getAD@adcon1 0074                     setLED_Main@led 0076  
             __end_of_WDT_Clearing 0004                           _Fosc_Set 0F55  
                 __size_of_WDT_Set 000C  __size_of_getMain_All_Error_Status 001A  
        ?_getMain_All_Error_Status 0070                         ?_setLights 0051  
               __end_of_getTemp_AD 06EC                        ??_Temp_Main 0077  
    _getMain_All_Error_Status$1878 0051                          setLED@led 0051  
                     _setTemp_Main 031B                   __size_of___awdiv 005D  
                 __size_of___lwdiv 0040                   ??_LedPointSelect 0074  
               _CDS_Initialization 0F40              _Lights_Initialization 0F48  
    __size_of_getMain_LightsStatus 0031                  getTemp_AD@channel 0076  
                      _setLED_Main 0632                    ___lwdiv@divisor 0051  
              ?_CDS_Initialization 0070                    ___lwdiv@counter 0055  
                         __ptext10 0FD1                           __ptext11 0002  
                         __ptext20 0F67                           __ptext12 0F3D  
                         __ptext21 0FF0                           __ptext13 031B  
                         __ptext30 0528                           __ptext22 0FC2  
                         __ptext14 0423                           __ptext31 0FA6  
                         __ptext23 07F4                           __ptext15 0F3A  
                         __ptext40 0632                           __ptext32 077A  
                         __ptext24 0FB4                           __ptext16 0F4C  
                         __ptext41 0F82                           __ptext33 0480  
                         __ptext25 0794                           __ptext17 0025  
                         __ptext42 07D1                           __ptext34 06EC  
                         __ptext26 0F55                           __ptext18 075F  
                         __ptext43 03C3                           __ptext35 066D  
                         __ptext27 0F60                           __ptext19 07E3  
                         __ptext44 0727                           __ptext36 0F48  
                         __ptext28 0F77                           __ptext45 0573  
                         __ptext37 0F50                           __ptext29 05F6  
                         __ptext46 0F44                           __ptext38 0F9A  
                         __ptext47 0F40                           __ptext39 0F8E  
                         __ptext48 0FE0                           __ptext49 0743  
        __size_of_getLights_Status 0011            ??_setLED_Initialization 0077  
                _Lights_Close$3597 0057                    _getMain_AD_Safe 0F44  
                      ??_getCDS_AD 0051                      setLED@command 0076  
                    __size_of_main 0051                        ??_getPIR_AD 0059  
               _PIR_Initialization 0FF0               ??_CDS_Initialization 0074  
      __size_of_Mcu_Initialization 000F                ?_PIR_Initialization 0070  
                         main@argc 005F                           main@argv 0061  
__size_of_setLights_Initialization 0005          ?_setLights_Initialization 0070  
             Lights_Control@lights 0076               ??_PIR_Initialization 0074  
                         intlevel1 0000                        ??_setLights 0052  
          ?_setTemp_Initialization 0070            LightsPointSelect@lights 0075  
          __size_of_setLights_Main 003C            __size_of_setLights_Line 000E  
           ?_Lights_Initialization 0070              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0076            __end_of_getMain_AD_Safe 0F48  
      __size_of_set_TimeoutCleared 0006                  _LightsPointSelect 0F9A  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
                  _Timeout_Counter 07BD         __end_of_LED_Initialization 0F8E  
            __end_of_getCDS_Status 0F6F     __end_of_setTemp_Initialization 0F50  
                getCDS_AD@channel1 0055                  getCDS_AD@channel2 0076  
              ??_LightsPointSelect 0074  
