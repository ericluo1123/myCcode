

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Oct 29 13:50:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0096                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009F                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0186                     	;# 
   131  018C                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0096                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009F                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0186                     	;# 
   200  018C                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000E                     	;# 
   216  000F                     	;# 
   217  0010                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  0089                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  008F                     	;# 
   244  0090                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0095                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0096                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009F                     	;# 
   259  0108                     	;# 
   260  0109                     	;# 
   261  010C                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  0185                     	;# 
   268  0186                     	;# 
   269  018C                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  000E                     	;# 
   285  000F                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0014                     	;# 
   291  0015                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  0089                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  008F                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0093                     	;# 
   318  0094                     	;# 
   319  0095                     	;# 
   320  0095                     	;# 
   321  0096                     	;# 
   322  0096                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009F                     	;# 
   328  0108                     	;# 
   329  0109                     	;# 
   330  010C                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010D                     	;# 
   334  010E                     	;# 
   335  010F                     	;# 
   336  0185                     	;# 
   337  0186                     	;# 
   338  018C                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0009                     	;# 
   348  000A                     	;# 
   349  000B                     	;# 
   350  000C                     	;# 
   351  000D                     	;# 
   352  000E                     	;# 
   353  000E                     	;# 
   354  000F                     	;# 
   355  0010                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0014                     	;# 
   360  0015                     	;# 
   361  0015                     	;# 
   362  0016                     	;# 
   363  0017                     	;# 
   364  0018                     	;# 
   365  0019                     	;# 
   366  001A                     	;# 
   367  001B                     	;# 
   368  001B                     	;# 
   369  001C                     	;# 
   370  001D                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  0081                     	;# 
   374  0085                     	;# 
   375  0086                     	;# 
   376  0087                     	;# 
   377  0089                     	;# 
   378  008C                     	;# 
   379  008D                     	;# 
   380  008E                     	;# 
   381  008F                     	;# 
   382  0090                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0096                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009F                     	;# 
   397  0108                     	;# 
   398  0109                     	;# 
   399  010C                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010D                     	;# 
   403  010E                     	;# 
   404  010F                     	;# 
   405  0185                     	;# 
   406  0186                     	;# 
   407  018C                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  0089                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0096                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009F                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0186                     	;# 
   476  018C                     	;# 
   477  0000                     	;# 
   478  0001                     	;# 
   479  0002                     	;# 
   480  0003                     	;# 
   481  0004                     	;# 
   482  0005                     	;# 
   483  0006                     	;# 
   484  0007                     	;# 
   485  0009                     	;# 
   486  000A                     	;# 
   487  000B                     	;# 
   488  000C                     	;# 
   489  000D                     	;# 
   490  000E                     	;# 
   491  000E                     	;# 
   492  000F                     	;# 
   493  0010                     	;# 
   494  0011                     	;# 
   495  0012                     	;# 
   496  0013                     	;# 
   497  0014                     	;# 
   498  0015                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0017                     	;# 
   502  0018                     	;# 
   503  0019                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001D                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  0081                     	;# 
   512  0085                     	;# 
   513  0086                     	;# 
   514  0087                     	;# 
   515  0089                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0094                     	;# 
   526  0095                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0096                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009C                     	;# 
   533  009D                     	;# 
   534  009F                     	;# 
   535  0108                     	;# 
   536  0109                     	;# 
   537  010C                     	;# 
   538  010C                     	;# 
   539  010D                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0185                     	;# 
   544  0186                     	;# 
   545  018C                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  000E                     	;# 
   561  000F                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  0081                     	;# 
   581  0085                     	;# 
   582  0086                     	;# 
   583  0087                     	;# 
   584  0089                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  008F                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0093                     	;# 
   594  0094                     	;# 
   595  0095                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0096                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009F                     	;# 
   604  0108                     	;# 
   605  0109                     	;# 
   606  010C                     	;# 
   607  010C                     	;# 
   608  010D                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010F                     	;# 
   612  0185                     	;# 
   613  0186                     	;# 
   614  018C                     	;# 
   615  0000                     	;# 
   616  0001                     	;# 
   617  0002                     	;# 
   618  0003                     	;# 
   619  0004                     	;# 
   620  0005                     	;# 
   621  0006                     	;# 
   622  0007                     	;# 
   623  0009                     	;# 
   624  000A                     	;# 
   625  000B                     	;# 
   626  000C                     	;# 
   627  000D                     	;# 
   628  000E                     	;# 
   629  000E                     	;# 
   630  000F                     	;# 
   631  0010                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0013                     	;# 
   635  0014                     	;# 
   636  0015                     	;# 
   637  0015                     	;# 
   638  0016                     	;# 
   639  0017                     	;# 
   640  0018                     	;# 
   641  0019                     	;# 
   642  001A                     	;# 
   643  001B                     	;# 
   644  001B                     	;# 
   645  001C                     	;# 
   646  001D                     	;# 
   647  001E                     	;# 
   648  001F                     	;# 
   649  0081                     	;# 
   650  0085                     	;# 
   651  0086                     	;# 
   652  0087                     	;# 
   653  0089                     	;# 
   654  008C                     	;# 
   655  008D                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0091                     	;# 
   660  0092                     	;# 
   661  0093                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0095                     	;# 
   666  0096                     	;# 
   667  0096                     	;# 
   668  0098                     	;# 
   669  0099                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009F                     	;# 
   673  0108                     	;# 
   674  0109                     	;# 
   675  010C                     	;# 
   676  010C                     	;# 
   677  010D                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010F                     	;# 
   681  0185                     	;# 
   682  0186                     	;# 
   683  018C                     	;# 
   684  0000                     	;# 
   685  0001                     	;# 
   686  0002                     	;# 
   687  0003                     	;# 
   688  0004                     	;# 
   689  0005                     	;# 
   690  0006                     	;# 
   691  0007                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  000E                     	;# 
   699  000F                     	;# 
   700  0010                     	;# 
   701  0011                     	;# 
   702  0012                     	;# 
   703  0013                     	;# 
   704  0014                     	;# 
   705  0015                     	;# 
   706  0015                     	;# 
   707  0016                     	;# 
   708  0017                     	;# 
   709  0018                     	;# 
   710  0019                     	;# 
   711  001A                     	;# 
   712  001B                     	;# 
   713  001B                     	;# 
   714  001C                     	;# 
   715  001D                     	;# 
   716  001E                     	;# 
   717  001F                     	;# 
   718  0081                     	;# 
   719  0085                     	;# 
   720  0086                     	;# 
   721  0087                     	;# 
   722  0089                     	;# 
   723  008C                     	;# 
   724  008D                     	;# 
   725  008E                     	;# 
   726  008F                     	;# 
   727  0090                     	;# 
   728  0091                     	;# 
   729  0092                     	;# 
   730  0093                     	;# 
   731  0093                     	;# 
   732  0094                     	;# 
   733  0095                     	;# 
   734  0095                     	;# 
   735  0096                     	;# 
   736  0096                     	;# 
   737  0098                     	;# 
   738  0099                     	;# 
   739  009C                     	;# 
   740  009D                     	;# 
   741  009F                     	;# 
   742  0108                     	;# 
   743  0109                     	;# 
   744  010C                     	;# 
   745  010C                     	;# 
   746  010D                     	;# 
   747  010D                     	;# 
   748  010E                     	;# 
   749  010F                     	;# 
   750  0185                     	;# 
   751  0186                     	;# 
   752  018C                     	;# 
   753  0000                     	;# 
   754  0001                     	;# 
   755  0002                     	;# 
   756  0003                     	;# 
   757  0004                     	;# 
   758  0005                     	;# 
   759  0006                     	;# 
   760  0007                     	;# 
   761  0009                     	;# 
   762  000A                     	;# 
   763  000B                     	;# 
   764  000C                     	;# 
   765  000D                     	;# 
   766  000E                     	;# 
   767  000E                     	;# 
   768  000F                     	;# 
   769  0010                     	;# 
   770  0011                     	;# 
   771  0012                     	;# 
   772  0013                     	;# 
   773  0014                     	;# 
   774  0015                     	;# 
   775  0015                     	;# 
   776  0016                     	;# 
   777  0017                     	;# 
   778  0018                     	;# 
   779  0019                     	;# 
   780  001A                     	;# 
   781  001B                     	;# 
   782  001B                     	;# 
   783  001C                     	;# 
   784  001D                     	;# 
   785  001E                     	;# 
   786  001F                     	;# 
   787  0081                     	;# 
   788  0085                     	;# 
   789  0086                     	;# 
   790  0087                     	;# 
   791  0089                     	;# 
   792  008C                     	;# 
   793  008D                     	;# 
   794  008E                     	;# 
   795  008F                     	;# 
   796  0090                     	;# 
   797  0091                     	;# 
   798  0092                     	;# 
   799  0093                     	;# 
   800  0093                     	;# 
   801  0094                     	;# 
   802  0095                     	;# 
   803  0095                     	;# 
   804  0096                     	;# 
   805  0096                     	;# 
   806  0098                     	;# 
   807  0099                     	;# 
   808  009C                     	;# 
   809  009D                     	;# 
   810  009F                     	;# 
   811  0108                     	;# 
   812  0109                     	;# 
   813  010C                     	;# 
   814  010C                     	;# 
   815  010D                     	;# 
   816  010D                     	;# 
   817  010E                     	;# 
   818  010F                     	;# 
   819  0185                     	;# 
   820  0186                     	;# 
   821  018C                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0009                     	;# 
   831  000A                     	;# 
   832  000B                     	;# 
   833  000C                     	;# 
   834  000D                     	;# 
   835  000E                     	;# 
   836  000E                     	;# 
   837  000F                     	;# 
   838  0010                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0013                     	;# 
   842  0014                     	;# 
   843  0015                     	;# 
   844  0015                     	;# 
   845  0016                     	;# 
   846  0017                     	;# 
   847  0018                     	;# 
   848  0019                     	;# 
   849  001A                     	;# 
   850  001B                     	;# 
   851  001B                     	;# 
   852  001C                     	;# 
   853  001D                     	;# 
   854  001E                     	;# 
   855  001F                     	;# 
   856  0081                     	;# 
   857  0085                     	;# 
   858  0086                     	;# 
   859  0087                     	;# 
   860  0089                     	;# 
   861  008C                     	;# 
   862  008D                     	;# 
   863  008E                     	;# 
   864  008F                     	;# 
   865  0090                     	;# 
   866  0091                     	;# 
   867  0092                     	;# 
   868  0093                     	;# 
   869  0093                     	;# 
   870  0094                     	;# 
   871  0095                     	;# 
   872  0095                     	;# 
   873  0096                     	;# 
   874  0096                     	;# 
   875  0098                     	;# 
   876  0099                     	;# 
   877  009C                     	;# 
   878  009D                     	;# 
   879  009F                     	;# 
   880  0108                     	;# 
   881  0109                     	;# 
   882  010C                     	;# 
   883  010C                     	;# 
   884  010D                     	;# 
   885  010D                     	;# 
   886  010E                     	;# 
   887  010F                     	;# 
   888  0185                     	;# 
   889  0186                     	;# 
   890  018C                     	;# 
   891  0000                     	;# 
   892  0001                     	;# 
   893  0002                     	;# 
   894  0003                     	;# 
   895  0004                     	;# 
   896  0005                     	;# 
   897  0006                     	;# 
   898  0007                     	;# 
   899  0009                     	;# 
   900  000A                     	;# 
   901  000B                     	;# 
   902  000C                     	;# 
   903  000D                     	;# 
   904  000E                     	;# 
   905  000E                     	;# 
   906  000F                     	;# 
   907  0010                     	;# 
   908  0011                     	;# 
   909  0012                     	;# 
   910  0013                     	;# 
   911  0014                     	;# 
   912  0015                     	;# 
   913  0015                     	;# 
   914  0016                     	;# 
   915  0017                     	;# 
   916  0018                     	;# 
   917  0019                     	;# 
   918  001A                     	;# 
   919  001B                     	;# 
   920  001B                     	;# 
   921  001C                     	;# 
   922  001D                     	;# 
   923  001E                     	;# 
   924  001F                     	;# 
   925  0081                     	;# 
   926  0085                     	;# 
   927  0086                     	;# 
   928  0087                     	;# 
   929  0089                     	;# 
   930  008C                     	;# 
   931  008D                     	;# 
   932  008E                     	;# 
   933  008F                     	;# 
   934  0090                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0093                     	;# 
   939  0094                     	;# 
   940  0095                     	;# 
   941  0095                     	;# 
   942  0096                     	;# 
   943  0096                     	;# 
   944  0098                     	;# 
   945  0099                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009F                     	;# 
   949  0108                     	;# 
   950  0109                     	;# 
   951  010C                     	;# 
   952  010C                     	;# 
   953  010D                     	;# 
   954  010D                     	;# 
   955  010E                     	;# 
   956  010F                     	;# 
   957  0185                     	;# 
   958  0186                     	;# 
   959  018C                     	;# 
   960  0000                     	;# 
   961  0001                     	;# 
   962  0002                     	;# 
   963  0003                     	;# 
   964  0004                     	;# 
   965  0005                     	;# 
   966  0006                     	;# 
   967  0007                     	;# 
   968  0009                     	;# 
   969  000A                     	;# 
   970  000B                     	;# 
   971  000C                     	;# 
   972  000D                     	;# 
   973  000E                     	;# 
   974  000E                     	;# 
   975  000F                     	;# 
   976  0010                     	;# 
   977  0011                     	;# 
   978  0012                     	;# 
   979  0013                     	;# 
   980  0014                     	;# 
   981  0015                     	;# 
   982  0015                     	;# 
   983  0016                     	;# 
   984  0017                     	;# 
   985  0018                     	;# 
   986  0019                     	;# 
   987  001A                     	;# 
   988  001B                     	;# 
   989  001B                     	;# 
   990  001C                     	;# 
   991  001D                     	;# 
   992  001E                     	;# 
   993  001F                     	;# 
   994  0081                     	;# 
   995  0085                     	;# 
   996  0086                     	;# 
   997  0087                     	;# 
   998  0089                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  008F                     	;# 
  1003  0090                     	;# 
  1004  0091                     	;# 
  1005  0092                     	;# 
  1006  0093                     	;# 
  1007  0093                     	;# 
  1008  0094                     	;# 
  1009  0095                     	;# 
  1010  0095                     	;# 
  1011  0096                     	;# 
  1012  0096                     	;# 
  1013  0098                     	;# 
  1014  0099                     	;# 
  1015  009C                     	;# 
  1016  009D                     	;# 
  1017  009F                     	;# 
  1018  0108                     	;# 
  1019  0109                     	;# 
  1020  010C                     	;# 
  1021  010C                     	;# 
  1022  010D                     	;# 
  1023  010D                     	;# 
  1024  010E                     	;# 
  1025  010F                     	;# 
  1026  0185                     	;# 
  1027  0186                     	;# 
  1028  018C                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0009                     	;# 
  1038  000A                     	;# 
  1039  000B                     	;# 
  1040  000C                     	;# 
  1041  000D                     	;# 
  1042  000E                     	;# 
  1043  000E                     	;# 
  1044  000F                     	;# 
  1045  0010                     	;# 
  1046  0011                     	;# 
  1047  0012                     	;# 
  1048  0013                     	;# 
  1049  0014                     	;# 
  1050  0015                     	;# 
  1051  0015                     	;# 
  1052  0016                     	;# 
  1053  0017                     	;# 
  1054  0018                     	;# 
  1055  0019                     	;# 
  1056  001A                     	;# 
  1057  001B                     	;# 
  1058  001B                     	;# 
  1059  001C                     	;# 
  1060  001D                     	;# 
  1061  001E                     	;# 
  1062  001F                     	;# 
  1063  0081                     	;# 
  1064  0085                     	;# 
  1065  0086                     	;# 
  1066  0087                     	;# 
  1067  0089                     	;# 
  1068  008C                     	;# 
  1069  008D                     	;# 
  1070  008E                     	;# 
  1071  008F                     	;# 
  1072  0090                     	;# 
  1073  0091                     	;# 
  1074  0092                     	;# 
  1075  0093                     	;# 
  1076  0093                     	;# 
  1077  0094                     	;# 
  1078  0095                     	;# 
  1079  0095                     	;# 
  1080  0096                     	;# 
  1081  0096                     	;# 
  1082  0098                     	;# 
  1083  0099                     	;# 
  1084  009C                     	;# 
  1085  009D                     	;# 
  1086  009F                     	;# 
  1087  0108                     	;# 
  1088  0109                     	;# 
  1089  010C                     	;# 
  1090  010C                     	;# 
  1091  010D                     	;# 
  1092  010D                     	;# 
  1093  010E                     	;# 
  1094  010F                     	;# 
  1095  0185                     	;# 
  1096  0186                     	;# 
  1097  018C                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0009                     	;# 
  1107  000A                     	;# 
  1108  000B                     	;# 
  1109  000C                     	;# 
  1110  000D                     	;# 
  1111  000E                     	;# 
  1112  000E                     	;# 
  1113  000F                     	;# 
  1114  0010                     	;# 
  1115  0011                     	;# 
  1116  0012                     	;# 
  1117  0013                     	;# 
  1118  0014                     	;# 
  1119  0015                     	;# 
  1120  0015                     	;# 
  1121  0016                     	;# 
  1122  0017                     	;# 
  1123  0018                     	;# 
  1124  0019                     	;# 
  1125  001A                     	;# 
  1126  001B                     	;# 
  1127  001B                     	;# 
  1128  001C                     	;# 
  1129  001D                     	;# 
  1130  001E                     	;# 
  1131  001F                     	;# 
  1132  0081                     	;# 
  1133  0085                     	;# 
  1134  0086                     	;# 
  1135  0087                     	;# 
  1136  0089                     	;# 
  1137  008C                     	;# 
  1138  008D                     	;# 
  1139  008E                     	;# 
  1140  008F                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0092                     	;# 
  1144  0093                     	;# 
  1145  0093                     	;# 
  1146  0094                     	;# 
  1147  0095                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0096                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009C                     	;# 
  1154  009D                     	;# 
  1155  009F                     	;# 
  1156  0108                     	;# 
  1157  0109                     	;# 
  1158  010C                     	;# 
  1159  010C                     	;# 
  1160  010D                     	;# 
  1161  010D                     	;# 
  1162  010E                     	;# 
  1163  010F                     	;# 
  1164  0185                     	;# 
  1165  0186                     	;# 
  1166  018C                     	;# 
  1167  0000                     	;# 
  1168  0001                     	;# 
  1169  0002                     	;# 
  1170  0003                     	;# 
  1171  0004                     	;# 
  1172  0005                     	;# 
  1173  0006                     	;# 
  1174  0007                     	;# 
  1175  0009                     	;# 
  1176  000A                     	;# 
  1177  000B                     	;# 
  1178  000C                     	;# 
  1179  000D                     	;# 
  1180  000E                     	;# 
  1181  000E                     	;# 
  1182  000F                     	;# 
  1183  0010                     	;# 
  1184  0011                     	;# 
  1185  0012                     	;# 
  1186  0013                     	;# 
  1187  0014                     	;# 
  1188  0015                     	;# 
  1189  0015                     	;# 
  1190  0016                     	;# 
  1191  0017                     	;# 
  1192  0018                     	;# 
  1193  0019                     	;# 
  1194  001A                     	;# 
  1195  001B                     	;# 
  1196  001B                     	;# 
  1197  001C                     	;# 
  1198  001D                     	;# 
  1199  001E                     	;# 
  1200  001F                     	;# 
  1201  0081                     	;# 
  1202  0085                     	;# 
  1203  0086                     	;# 
  1204  0087                     	;# 
  1205  0089                     	;# 
  1206  008C                     	;# 
  1207  008D                     	;# 
  1208  008E                     	;# 
  1209  008F                     	;# 
  1210  0090                     	;# 
  1211  0091                     	;# 
  1212  0092                     	;# 
  1213  0093                     	;# 
  1214  0093                     	;# 
  1215  0094                     	;# 
  1216  0095                     	;# 
  1217  0095                     	;# 
  1218  0096                     	;# 
  1219  0096                     	;# 
  1220  0098                     	;# 
  1221  0099                     	;# 
  1222  009C                     	;# 
  1223  009D                     	;# 
  1224  009F                     	;# 
  1225  0108                     	;# 
  1226  0109                     	;# 
  1227  010C                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  010D                     	;# 
  1231  010E                     	;# 
  1232  010F                     	;# 
  1233  0185                     	;# 
  1234  0186                     	;# 
  1235  018C                     	;# 
  1236  001F                     _ADCON0	set	31
  1237  001E                     _ADRES	set	30
  1238  0005                     _PORTA	set	5
  1239  0006                     _PORTB	set	6
  1240  0007                     _PORTC	set	7
  1241  0010                     _T1CON	set	16
  1242  000F                     _TMR1H	set	15
  1243  000E                     _TMR1L	set	14
  1244  005F                     _GIE	set	95
  1245  00F9                     _GO_nDONE	set	249
  1246  005E                     _PEIE	set	94
  1247  002C                     _RA4	set	44
  1248  0032                     _RB2	set	50
  1249  0033                     _RB3	set	51
  1250  0034                     _RB4	set	52
  1251  0035                     _RB5	set	53
  1252  0060                     _TMR1IF	set	96
  1253  009F                     _ADCON1	set	159
  1254  009D                     _FVRCON	set	157
  1255  0090                     _OSCCON	set	144
  1256  0085                     _TRISA	set	133
  1257  0086                     _TRISB	set	134
  1258  0087                     _TRISC	set	135
  1259  0408                     _PS0	set	1032
  1260  0409                     _PS1	set	1033
  1261  040A                     _PS2	set	1034
  1262  040B                     _PSA	set	1035
  1263  0460                     _TMR1IE	set	1120
  1264  0185                     _ANSELA	set	389
  1265  0186                     _ANSELB	set	390
  1266                           
  1267                           	psect	text0
  1268  0000                     __ptext0:	
  1269                           ; #config settings
  1270                           
  1271                           
  1272                           ;psect for function _TMR1_ISR
  1273  0000                     
  1274                           	psect	cinit
  1275  0013                     start_initialization:	
  1276  0013                     __initialization:	
  1277                           
  1278                           ; Clear objects allocated to COMMON
  1279  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1280  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1281  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1282                           
  1283                           ; Clear objects allocated to BANK0
  1284  0016  1383               	bcf	3,7	;select IRP bank0
  1285  0017  3020               	movlw	low __pbssBANK0
  1286  0018  0084               	movwf	4
  1287  0019  305A               	movlw	low (__pbssBANK0+58)
  1288  001A  118A  27F8  118A   	fcall	clear_ram0
  1289                           
  1290                           ; Clear objects allocated to BANK1
  1291  001D  30A0               	movlw	low __pbssBANK1
  1292  001E  0084               	movwf	4
  1293  001F  30CF               	movlw	low (__pbssBANK1+47)
  1294  0020  118A  27F8         	fcall	clear_ram0
  1295  0022                     end_of_initialization:	
  1296                           ;End of C runtime variable initialization code
  1297                           
  1298  0022                     __end_of__initialization:	
  1299  0022  0183               	clrf	3
  1300  0023  118A  2C92         	ljmp	_main	;jump to C main() function
  1301                           
  1302                           	psect	bssCOMMON
  1303  0077                     __pbssCOMMON:	
  1304  0077                     _WDT:	
  1305  0077                     	ds	2
  1306  0079                     _LED:	
  1307  0079                     	ds	1
  1308                           
  1309                           	psect	bssBANK0
  1310  0020                     __pbssBANK0:	
  1311  0020                     _myMain:	
  1312  0020                     	ds	19
  1313  0033                     __CDS:	
  1314  0033                     	ds	5
  1315  0038                     _Timer1:	
  1316  0038                     	ds	3
  1317  003B                     _Lights:	
  1318  003B                     	ds	1
  1319  003C                     _Temp:	
  1320  003C                     	ds	10
  1321  0046                     _Lights1:	
  1322  0046                     	ds	8
  1323  004E                     _VarErrLED:	
  1324  004E                     	ds	4
  1325  0052                     _VarLED1:	
  1326  0052                     	ds	4
  1327  0056                     _VarLED2:	
  1328  0056                     	ds	4
  1329                           
  1330                           	psect	bssBANK1
  1331  00A0                     __pbssBANK1:	
  1332  00A0                     __PIR:	
  1333  00A0                     	ds	47
  1334                           
  1335                           	psect	clrtext
  1336  07F8                     clear_ram0:	
  1337                           ;	Called with FSR containing the base address, and
  1338                           ;	W with the last address+1
  1339                           
  1340  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1341  07F9                     clrloop0:	
  1342  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1343  07FA  0A84               	incf	4,f	;increment pointer
  1344  07FB  0604               	xorwf	4,w	;XOR with final address
  1345  07FC  1903               	btfsc	3,2	;have we reached the end yet?
  1346  07FD  3400               	retlw	0	;all done for this memory range, return
  1347  07FE  0604               	xorwf	4,w	;XOR again to restore value
  1348  07FF  2FF9               	goto	clrloop0	;do the next byte
  1349                           
  1350                           	psect	cstackCOMMON
  1351  0070                     __pcstackCOMMON:	
  1352  0070                     ?_setLED_Initialization:	
  1353  0070                     ?_setLED_Main:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0070                     ?_Fosc_Set:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0070                     ?_IO_Set:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0070                     ?_TMR1_Set:	
  1363                           ; 0 bytes @ 0x0
  1364                           
  1365  0070                     ?_ADC_Set:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0070                     ?_WDT_Set:	
  1369                           ; 0 bytes @ 0x0
  1370                           
  1371  0070                     ?_TMR1_ISR:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0070                     ??_TMR1_ISR:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0070                     ?_Timeout_Counter:	
  1378                           ; 0 bytes @ 0x0
  1379                           
  1380  0070                     ?_set_TimeoutCleared:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0070                     ?_WDT_Clearing:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0070                     ?_myMain_Initialization:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0070                     ?_Temp_Initialization:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0070                     ?_Lights_Initialization:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0070                     ?_PIR_Initialization:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0070                     ?_getTemp_AD:	
  1399                           ; 0 bytes @ 0x0
  1400                           
  1401  0070                     ?_my_MainTime:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0070                     ?_Temp_Main:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0070                     ?_Lights_Main:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0070                     ?_PIR_Main:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0070                     ?_setTemp_Enable:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0070                     ?_setTemp_Initialization:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0070                     ?_setTemp_Main:	
  1420                           ; 0 bytes @ 0x0
  1421                           
  1422  0070                     ?_setOverTemp_Exceptions:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0070                     ?_setLights_Initialization:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0070                     ?_setLights_Main:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0070                     ?_Lights_Control:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0070                     ?_CDS_Initialization:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0070                     ?_CDS_Main:	
  1438                           ; 0 bytes @ 0x0
  1439                           
  1440  0070                     ?_LedPointSelect:	
  1441                           ; 0 bytes @ 0x0
  1442                           
  1443  0070                     ?_LED_Initialization:	
  1444                           ; 0 bytes @ 0x0
  1445                           
  1446  0070                     ?_LED_Main:	
  1447                           ; 0 bytes @ 0x0
  1448                           
  1449  0070                     ?_Mcu_Initialization:	
  1450                           ; 0 bytes @ 0x0
  1451                           
  1452  0070                     ?_ISR:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0070                     ??_ISR:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0070                     ?_WDT_Main:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0070                     ?_LightsPointSelect:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0070                     ?_getLights_Status:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0070                     ?_getCDS_Status:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_getMain_Exception:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473                           
  1474                           ; 1 bytes @ 0x0
  1475  0070                     	ds	4
  1476  0074                     ??_Fosc_Set:	
  1477  0074                     ??_IO_Set:	
  1478                           ; 0 bytes @ 0x4
  1479                           
  1480  0074                     ??_TMR1_Set:	
  1481                           ; 0 bytes @ 0x4
  1482                           
  1483  0074                     ??_ADC_Set:	
  1484                           ; 0 bytes @ 0x4
  1485                           
  1486  0074                     ??_WDT_Set:	
  1487                           ; 0 bytes @ 0x4
  1488                           
  1489  0074                     ??_Timeout_Counter:	
  1490                           ; 0 bytes @ 0x4
  1491                           
  1492  0074                     ??_set_TimeoutCleared:	
  1493                           ; 0 bytes @ 0x4
  1494                           
  1495  0074                     ??_WDT_Clearing:	
  1496                           ; 0 bytes @ 0x4
  1497                           
  1498  0074                     ??_myMain_Initialization:	
  1499                           ; 0 bytes @ 0x4
  1500                           
  1501  0074                     ??_Temp_Initialization:	
  1502                           ; 0 bytes @ 0x4
  1503                           
  1504  0074                     ??_PIR_Initialization:	
  1505                           ; 0 bytes @ 0x4
  1506                           
  1507  0074                     ??_setTemp_Enable:	
  1508                           ; 0 bytes @ 0x4
  1509                           
  1510  0074                     ??_setTemp_Initialization:	
  1511                           ; 0 bytes @ 0x4
  1512                           
  1513  0074                     ??_CDS_Initialization:	
  1514                           ; 0 bytes @ 0x4
  1515                           
  1516  0074                     ??_CDS_Main:	
  1517                           ; 0 bytes @ 0x4
  1518                           
  1519  0074                     ??_getCDS_Status:	
  1520                           ; 0 bytes @ 0x4
  1521                           
  1522  0074                     ??_LedPointSelect:	
  1523                           ; 0 bytes @ 0x4
  1524                           
  1525  0074                     ??_WDT_Main:	
  1526                           ; 0 bytes @ 0x4
  1527                           
  1528  0074                     ??_getMain_Exception:	
  1529                           ; 0 bytes @ 0x4
  1530                           
  1531  0074                     ??_LightsPointSelect:	
  1532                           ; 0 bytes @ 0x4
  1533                           
  1534  0074                     ??___awdiv:	
  1535                           ; 0 bytes @ 0x4
  1536                           
  1537  0074                     ??___lwdiv:	
  1538                           ; 0 bytes @ 0x4
  1539                           
  1540  0074                     ?_getAD:	
  1541                           ; 0 bytes @ 0x4
  1542                           
  1543  0074                     getCDS_Status@result:	
  1544                           ; 1 bytes @ 0x4
  1545                           
  1546  0074                     getAD@adcon1:	
  1547                           ; 1 bytes @ 0x4
  1548                           
  1549  0074                     getMain_Exception@result:	
  1550                           ; 1 bytes @ 0x4
  1551                           
  1552  0074                     setTemp_Enable@command:	
  1553                           ; 1 bytes @ 0x4
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x4
  1557  0074                     	ds	1
  1558  0075                     ??_getAD:	
  1559  0075                     ??_my_MainTime:	
  1560                           ; 0 bytes @ 0x5
  1561                           
  1562  0075                     ??_Mcu_Initialization:	
  1563                           ; 0 bytes @ 0x5
  1564                           
  1565  0075                     LedPointSelect@led:	
  1566                           ; 0 bytes @ 0x5
  1567                           
  1568  0075                     getAD@adcon0:	
  1569                           ; 1 bytes @ 0x5
  1570                           
  1571  0075                     LightsPointSelect@lights:	
  1572                           ; 1 bytes @ 0x5
  1573                           
  1574                           
  1575                           ; 1 bytes @ 0x5
  1576  0075                     	ds	1
  1577  0076                     ?_setLED:	
  1578  0076                     ?_getPIR_AD:	
  1579                           ; 0 bytes @ 0x6
  1580                           
  1581  0076                     ??_getLights_Status:	
  1582                           ; 0 bytes @ 0x6
  1583                           
  1584  0076                     ?_setLights_Trigger:	
  1585                           ; 0 bytes @ 0x6
  1586                           
  1587  0076                     ?_setLights_Switch:	
  1588                           ; 0 bytes @ 0x6
  1589                           
  1590  0076                     ??_setLights_Initialization:	
  1591                           ; 0 bytes @ 0x6
  1592                           
  1593  0076                     ?_setLights:	
  1594                           ; 0 bytes @ 0x6
  1595                           
  1596  0076                     ?_getCDS_AD:	
  1597                           ; 0 bytes @ 0x6
  1598                           
  1599  0076                     getCDS_AD@channel2:	
  1600                           ; 0 bytes @ 0x6
  1601                           
  1602  0076                     setLED@command:	
  1603                           ; 1 bytes @ 0x6
  1604                           
  1605  0076                     setLED_Main@led:	
  1606                           ; 1 bytes @ 0x6
  1607                           
  1608  0076                     getTemp_AD@channel:	
  1609                           ; 1 bytes @ 0x6
  1610                           
  1611  0076                     getPIR_AD@channel2:	
  1612                           ; 1 bytes @ 0x6
  1613                           
  1614  0076                     setLights_Initialization@lights:	
  1615                           ; 1 bytes @ 0x6
  1616                           
  1617  0076                     setLights_Trigger@command:	
  1618                           ; 1 bytes @ 0x6
  1619                           
  1620  0076                     setLights_Switch@command:	
  1621                           ; 1 bytes @ 0x6
  1622                           
  1623  0076                     setLights@command:	
  1624                           ; 1 bytes @ 0x6
  1625                           
  1626  0076                     Lights_Control@lights:	
  1627                           ; 1 bytes @ 0x6
  1628                           
  1629                           
  1630                           ; 1 bytes @ 0x6
  1631  0076                     	ds	1
  1632  0077                     ??_setLED_Initialization:	
  1633  0077                     ??_setLED:	
  1634                           ; 0 bytes @ 0x7
  1635                           
  1636  0077                     ??_Lights_Initialization:	
  1637                           ; 0 bytes @ 0x7
  1638                           
  1639  0077                     ??_Temp_Main:	
  1640                           ; 0 bytes @ 0x7
  1641                           
  1642  0077                     ??_Lights_Main:	
  1643                           ; 0 bytes @ 0x7
  1644                           
  1645  0077                     ??_setLights_Trigger:	
  1646                           ; 0 bytes @ 0x7
  1647                           
  1648  0077                     ??_setLights_Switch:	
  1649                           ; 0 bytes @ 0x7
  1650                           
  1651  0077                     ??_setLights_Main:	
  1652                           ; 0 bytes @ 0x7
  1653                           
  1654  0077                     ??_LED_Initialization:	
  1655                           ; 0 bytes @ 0x7
  1656                           
  1657  0077                     ??_LED_Main:	
  1658                           ; 0 bytes @ 0x7
  1659                           
  1660                           
  1661                           	psect	cstackBANK0
  1662  005A                     __pcstackBANK0:	
  1663                           ; 0 bytes @ 0x7
  1664                           
  1665  005A                     ??_setLED_Main:	
  1666  005A                     ??_getTemp_AD:	
  1667                           ; 0 bytes @ 0x0
  1668                           
  1669  005A                     ??_Lights_Control:	
  1670                           ; 0 bytes @ 0x0
  1671                           
  1672  005A                     ??_setLights:	
  1673                           ; 0 bytes @ 0x0
  1674                           
  1675  005A                     ??_getCDS_AD:	
  1676                           ; 0 bytes @ 0x0
  1677                           
  1678  005A                     ?___awdiv:	
  1679                           ; 0 bytes @ 0x0
  1680                           
  1681  005A                     ?___lwdiv:	
  1682                           ; 2 bytes @ 0x0
  1683                           
  1684  005A                     setLED@led:	
  1685                           ; 2 bytes @ 0x0
  1686                           
  1687  005A                     setLights_Trigger@lights:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  005A                     setLights_Switch@lights:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  005A                     getLights_Status@lights:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  005A                     ___awdiv@divisor:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  005A                     ___lwdiv@divisor:	
  1700                           ; 2 bytes @ 0x0
  1701                           
  1702                           
  1703                           ; 2 bytes @ 0x0
  1704  005A                     	ds	1
  1705  005B                     ??_setOverTemp_Exceptions:	
  1706  005B                     setLED_Initialization@led:	
  1707                           ; 0 bytes @ 0x1
  1708                           
  1709  005B                     getLights_Status@result:	
  1710                           ; 1 bytes @ 0x1
  1711                           
  1712  005B                     setLights@lights:	
  1713                           ; 1 bytes @ 0x1
  1714                           
  1715                           
  1716                           ; 1 bytes @ 0x1
  1717  005B                     	ds	1
  1718  005C                     ??_PIR_Main:	
  1719  005C                     getCDS_AD@i:	
  1720                           ; 0 bytes @ 0x2
  1721                           
  1722  005C                     setOverTemp_Exceptions@i:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  005C                     setLights_Main@clear:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  005C                     ___awdiv@dividend:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731  005C                     ___lwdiv@dividend:	
  1732                           ; 2 bytes @ 0x2
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0x2
  1736  005C                     	ds	1
  1737  005D                     getCDS_AD@j:	
  1738  005D                     setOverTemp_Exceptions@command:	
  1739                           ; 1 bytes @ 0x3
  1740                           
  1741  005D                     setLights_Main@lights:	
  1742                           ; 1 bytes @ 0x3
  1743                           
  1744                           
  1745                           ; 1 bytes @ 0x3
  1746  005D                     	ds	1
  1747  005E                     ??_setTemp_Main:	
  1748  005E                     getCDS_AD@channel1:	
  1749                           ; 0 bytes @ 0x4
  1750                           
  1751  005E                     ___awdiv@counter:	
  1752                           ; 1 bytes @ 0x4
  1753                           
  1754  005E                     ___lwdiv@counter:	
  1755                           ; 1 bytes @ 0x4
  1756                           
  1757                           
  1758                           ; 1 bytes @ 0x4
  1759  005E                     	ds	1
  1760  005F                     ___awdiv@sign:	
  1761  005F                     ___lwdiv@quotient:	
  1762                           ; 1 bytes @ 0x5
  1763                           
  1764                           
  1765                           ; 2 bytes @ 0x5
  1766  005F                     	ds	1
  1767  0060                     ___awdiv@quotient:	
  1768                           
  1769                           ; 2 bytes @ 0x6
  1770  0060                     	ds	2
  1771  0062                     ??_getPIR_AD:	
  1772                           
  1773                           ; 0 bytes @ 0x8
  1774  0062                     	ds	3
  1775  0065                     getPIR_AD@j:	
  1776                           
  1777                           ; 1 bytes @ 0xB
  1778  0065                     	ds	1
  1779  0066                     getPIR_AD@channel1:	
  1780                           
  1781                           ; 1 bytes @ 0xC
  1782  0066                     	ds	1
  1783  0067                     getPIR_AD@i:	
  1784                           
  1785                           ; 1 bytes @ 0xD
  1786  0067                     	ds	1
  1787  0068                     ?_main:	
  1788  0068                     main@argc:	
  1789                           ; 2 bytes @ 0xE
  1790                           
  1791                           
  1792                           ; 2 bytes @ 0xE
  1793  0068                     	ds	2
  1794  006A                     main@argv:	
  1795                           
  1796                           ; 2 bytes @ 0x10
  1797  006A                     	ds	2
  1798  006C                     ??_main:	
  1799                           
  1800                           ; 0 bytes @ 0x12
  1801  006C                     	ds	1
  1802                           
  1803                           	psect	maintext
  1804  0492                     __pmaintext:	
  1805 ;;
  1806 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1807 ;;
  1808 ;; *************** function _main *****************
  1809 ;; Defined at:
  1810 ;;		line 7 in file "../src/Main_B1.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  argc            2   14[BANK0 ] int 
  1813 ;;  argv            2   16[BANK0 ] PTR PTR unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2   14[BANK0 ] int 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 17F/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1825 ;;      Params:         0       4       0       0
  1826 ;;      Locals:         0       0       0       0
  1827 ;;      Temps:          0       1       0       0
  1828 ;;      Totals:         0       5       0       0
  1829 ;;Total ram usage:        5 bytes
  1830 ;; Hardware stack levels required when called:    7
  1831 ;; This function calls:
  1832 ;;		_CDS_Initialization
  1833 ;;		_CDS_Main
  1834 ;;		_LED_Initialization
  1835 ;;		_LED_Main
  1836 ;;		_Lights_Initialization
  1837 ;;		_Lights_Main
  1838 ;;		_Mcu_Initialization
  1839 ;;		_PIR_Initialization
  1840 ;;		_PIR_Main
  1841 ;;		_Temp_Initialization
  1842 ;;		_Temp_Main
  1843 ;;		_WDT_Main
  1844 ;;		_getCDS_AD
  1845 ;;		_getPIR_AD
  1846 ;;		_getTemp_AD
  1847 ;;		_myMain_Initialization
  1848 ;;		_my_MainTime
  1849 ;; This function is called by:
  1850 ;;		Startup code after reset
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _main
  1856  0492                     _main:	
  1857                           
  1858                           ;Main_B1.c: 8: myMain_Initialization();
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1862  0492  158A  27C3  118A   	fcall	_myMain_Initialization
  1863                           
  1864                           ;Main_B1.c: 9: Mcu_Initialization();
  1865  0495  118A  2791  118A   	fcall	_Mcu_Initialization
  1866                           
  1867                           ;Main_B1.c: 10: ;;
  1868                           ;Main_B1.c: 11: LED_Initialization();
  1869  0498  118A  27EC  118A   	fcall	_LED_Initialization
  1870                           
  1871                           ;Main_B1.c: 12: ;;
  1872                           ;Main_B1.c: 14: ;;
  1873                           ;Main_B1.c: 15: Temp_Initialization();
  1874  049B  158A  27C4  118A   	fcall	_Temp_Initialization
  1875                           
  1876                           ;Main_B1.c: 16: ;;
  1877                           ;Main_B1.c: 17: ;;
  1878                           ;Main_B1.c: 18: ;;
  1879                           ;Main_B1.c: 20: ;;
  1880                           ;Main_B1.c: 21: Lights_Initialization();
  1881  049E  158A  27CE  118A   	fcall	_Lights_Initialization
  1882                           
  1883                           ;Main_B1.c: 22: CDS_Initialization();
  1884  04A1  158A  27CA  118A   	fcall	_CDS_Initialization
  1885                           
  1886                           ;Main_B1.c: 23: PIR_Initialization();
  1887  04A4  118A  2762  118A   	fcall	_PIR_Initialization
  1888                           
  1889                           ;Main_B1.c: 24: ;;
  1890                           ;Main_B1.c: 25: ;;
  1891                           ;Main_B1.c: 26: __nop();
  1892  04A7  0000               	nop
  1893  04A8                     l3449:	
  1894                           ;Main_B1.c: 27: ;;
  1895                           ;Main_B1.c: 29: while (1) {
  1896                           
  1897                           
  1898                           ;Main_B1.c: 31: if (myMain.PowerON == 1) {
  1899  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1900  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1901  04AA  1C20               	btfss	_myMain,0
  1902  04AB  2CC4               	goto	l3455
  1903                           
  1904                           ;Main_B1.c: 41: getTemp_AD(0x11);
  1905  04AC  3011               	movlw	17
  1906  04AD  118A  2662  118A   	fcall	_getTemp_AD
  1907                           
  1908                           ;Main_B1.c: 49: getCDS_AD(0x09, 0x31);
  1909  04B0  3031               	movlw	49
  1910  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1911  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1912  04B3  00EC               	movwf	??_main
  1913  04B4  086C               	movf	??_main,w
  1914  04B5  00F6               	movwf	getCDS_AD@channel2
  1915  04B6  3009               	movlw	9
  1916  04B7  118A  2638  118A   	fcall	_getCDS_AD
  1917                           
  1918                           ;Main_B1.c: 53: getPIR_AD(0x05, 0x0d);
  1919  04BA  300D               	movlw	13
  1920  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1921  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1922  04BD  00EC               	movwf	??_main
  1923  04BE  086C               	movf	??_main,w
  1924  04BF  00F6               	movwf	getPIR_AD@channel2
  1925  04C0  3005               	movlw	5
  1926  04C1  118A  21E8  118A   	fcall	_getPIR_AD
  1927  04C4                     l3455:	
  1928                           
  1929                           ;Main_B1.c: 56: }
  1930                           ;Main_B1.c: 92: if (myMain.T1_Timerout == 1) {
  1931  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1932  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1933  04C6  1D20               	btfss	_myMain,2
  1934  04C7  2CA8               	goto	l3449
  1935                           
  1936                           ;Main_B1.c: 93: myMain.T1_Timerout = 0;
  1937  04C8  1120               	bcf	_myMain,2
  1938                           
  1939                           ;Main_B1.c: 94: my_MainTime();
  1940  04C9  118A  259A  118A   	fcall	_my_MainTime
  1941                           
  1942                           ;Main_B1.c: 95: WDT_Main();
  1943  04CC  118A  2782  118A   	fcall	_WDT_Main
  1944                           
  1945                           ;Main_B1.c: 96: ;;
  1946                           ;Main_B1.c: 97: ;;
  1947                           ;Main_B1.c: 98: if (myMain.PowerON) {
  1948  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1949  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1950  04D1  1C20               	btfss	_myMain,0
  1951  04D2  2CA8               	goto	l3449
  1952                           
  1953                           ;Main_B1.c: 99: ;;
  1954                           ;Main_B1.c: 101: LED_Main();
  1955  04D3  118A  27E0  118A   	fcall	_LED_Main
  1956                           
  1957                           ;Main_B1.c: 102: ;;
  1958                           ;Main_B1.c: 104: ;;
  1959                           ;Main_B1.c: 105: Temp_Main();
  1960  04D6  158A  27C7  118A   	fcall	_Temp_Main
  1961                           
  1962                           ;Main_B1.c: 106: ;;
  1963                           ;Main_B1.c: 107: ;;
  1964                           ;Main_B1.c: 109: Lights_Main();
  1965  04D9  158A  27E8  118A   	fcall	_Lights_Main
  1966                           
  1967                           ;Main_B1.c: 110: ;;
  1968                           ;Main_B1.c: 111: ;;
  1969                           ;Main_B1.c: 112: CDS_Main();
  1970  04DC  118A  25D4  118A   	fcall	_CDS_Main
  1971                           
  1972                           ;Main_B1.c: 113: PIR_Main();
  1973  04DF  118A  2025  118A   	fcall	_PIR_Main
  1974                           
  1975                           ;Main_B1.c: 115: ;;
  1976                           ;Main_B1.c: 116: ;;
  1977                           ;Main_B1.c: 117: ;;
  1978  04E2  2CA8               	goto	l3449
  1979  04E3                     __end_of_main:	
  1980                           ;Main_B1.c: 125: }
  1981                           ;Main_B1.c: 126: }
  1982                           ;Main_B1.c: 160: }
  1983                           ;Main_B1.c: 161: return (0);
  1984                           ;	Return value of _main is never used
  1985                           
  1986                           
  1987                           	psect	text1
  1988  059A                     __ptext1:	
  1989 ;; *************** function _my_MainTime *****************
  1990 ;; Defined at:
  1991 ;;		line 180 in file "../src/Main_B1.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;		None               void
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2005 ;;      Params:         0       0       0       0
  2006 ;;      Locals:         0       0       0       0
  2007 ;;      Temps:          0       0       0       0
  2008 ;;      Totals:         0       0       0       0
  2009 ;;Total ram usage:        0 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:    3
  2012 ;; This function calls:
  2013 ;;		_setTemp_Enable
  2014 ;; This function is called by:
  2015 ;;		_main
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function _my_MainTime
  2021  059A                     _my_MainTime:	
  2022                           
  2023                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _my_MainTime: [wreg+status,2+status,0+pclath+cstack]
  2027  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2028  059B  1303               	bcf	3,6	;RP1=0, select bank0
  2029  059C  1820               	btfsc	_myMain,0
  2030  059D  2DB4               	goto	l2627
  2031                           
  2032                           ;Main_B1.c: 183: myMain.PowerCount++;
  2033  059E  3001               	movlw	1
  2034  059F  07A2               	addwf	_myMain+2,f
  2035  05A0  1803               	skipnc
  2036  05A1  0AA3               	incf	_myMain+3,f
  2037  05A2  3000               	movlw	0
  2038  05A3  07A3               	addwf	_myMain+3,f
  2039                           
  2040                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  2041  05A4  3096               	movlw	150
  2042  05A5  0622               	xorwf	_myMain+2,w
  2043  05A6  0423               	iorwf	_myMain+3,w
  2044  05A7  1D03               	skipz
  2045  05A8  2DC6               	goto	l2635
  2046                           
  2047                           ;Main_B1.c: 185: {
  2048                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  2049  05A9  01A2               	clrf	_myMain+2
  2050  05AA  01A3               	clrf	_myMain+3
  2051                           
  2052                           ;Main_B1.c: 187: myMain.PowerON = 1;
  2053  05AB  1420               	bsf	_myMain,0
  2054                           
  2055                           ;Main_B1.c: 190: setTemp_Enable(1);
  2056  05AC  3001               	movlw	1
  2057  05AD  158A  27F8  118A   	fcall	_setTemp_Enable
  2058                           
  2059                           ;Main_B1.c: 200: ;;
  2060                           ;Main_B1.c: 201: myMain.SelfTest = 1;
  2061  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2062  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2063  05B2  17A0               	bsf	_myMain,7
  2064                           
  2065                           ;Main_B1.c: 210: }
  2066                           ;Main_B1.c: 211: } else {
  2067                           
  2068                           ;Main_B1.c: 203: ;;
  2069  05B3  2DC6               	goto	l2635
  2070  05B4                     l2627:	
  2071                           
  2072                           ;Main_B1.c: 219: myMain.Count1++;
  2073  05B4  3001               	movlw	1
  2074  05B5  07A6               	addwf	_myMain+6,f
  2075  05B6  1803               	skipnc
  2076  05B7  0AA7               	incf	_myMain+7,f
  2077  05B8  3000               	movlw	0
  2078  05B9  07A7               	addwf	_myMain+7,f
  2079                           
  2080                           ;Main_B1.c: 220: if (myMain.Count1 == 100)
  2081  05BA  3064               	movlw	100
  2082  05BB  0626               	xorwf	_myMain+6,w
  2083  05BC  0427               	iorwf	_myMain+7,w
  2084  05BD  1D03               	skipz
  2085  05BE  2DC6               	goto	l2635
  2086                           
  2087                           ;Main_B1.c: 221: {
  2088                           ;Main_B1.c: 222: myMain.Count1 = 0;
  2089  05BF  01A6               	clrf	_myMain+6
  2090  05C0  01A7               	clrf	_myMain+7
  2091                           
  2092                           ;Main_B1.c: 234: if (myMain.Flag) {
  2093  05C1  1E20               	btfss	_myMain,4
  2094  05C2  2DC5               	goto	l453
  2095                           
  2096                           ;Main_B1.c: 235: myMain.Flag = 0;
  2097  05C3  1220               	bcf	_myMain,4
  2098                           
  2099                           ;Main_B1.c: 244: } else {
  2100  05C4  2DC6               	goto	l2635
  2101  05C5                     l453:	
  2102                           
  2103                           ;Main_B1.c: 245: myMain.Flag = 1;
  2104  05C5  1620               	bsf	_myMain,4
  2105  05C6                     l2635:	
  2106                           
  2107                           ;Main_B1.c: 254: }
  2108                           ;Main_B1.c: 255: }
  2109                           ;Main_B1.c: 257: }
  2110                           ;Main_B1.c: 259: myMain.Count2++;
  2111  05C6  3001               	movlw	1
  2112  05C7  07A8               	addwf	_myMain+8,f
  2113  05C8  1803               	skipnc
  2114  05C9  0AA9               	incf	_myMain+9,f
  2115  05CA  3000               	movlw	0
  2116  05CB  07A9               	addwf	_myMain+9,f
  2117                           
  2118                           ;Main_B1.c: 260: if (myMain.Count2 == 50) {
  2119  05CC  3032               	movlw	50
  2120  05CD  0628               	xorwf	_myMain+8,w
  2121  05CE  0429               	iorwf	_myMain+9,w
  2122  05CF  1D03               	skipz
  2123  05D0  0008               	return
  2124                           
  2125                           ;Main_B1.c: 261: myMain.Count2 = 0;
  2126  05D1  01A8               	clrf	_myMain+8
  2127  05D2  01A9               	clrf	_myMain+9
  2128  05D3  0008               	return
  2129  05D4                     __end_of_my_MainTime:	
  2130                           
  2131                           	psect	text2
  2132  0FF8                     __ptext2:	
  2133 ;; *************** function _setTemp_Enable *****************
  2134 ;; Defined at:
  2135 ;;		line 16 in file "../src/OverTemperature_B1.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  command         1    wreg     unsigned char 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  command         1    4[COMMON] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2149 ;;      Params:         0       0       0       0
  2150 ;;      Locals:         1       0       0       0
  2151 ;;      Temps:          0       0       0       0
  2152 ;;      Totals:         1       0       0       0
  2153 ;;Total ram usage:        1 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    2
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_my_MainTime
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _setTemp_Enable
  2165  0FF8                     _setTemp_Enable:	
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _setTemp_Enable: [wreg]
  2169                           ;setTemp_Enable@command stored from wreg
  2170  0FF8  00F4               	movwf	setTemp_Enable@command
  2171                           
  2172                           ;OverTemperature_B1.c: 17: Temp.Enable = command;
  2173  0FF9  0874               	movf	setTemp_Enable@command,w
  2174  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0FFC  103C               	bcf	_Temp,0
  2177  0FFD  1D03               	skipz
  2178  0FFE  143C               	bsf	_Temp,0
  2179  0FFF  0008               	return
  2180  1000                     __end_of_setTemp_Enable:	
  2181                           
  2182                           	psect	text3
  2183  0FC3                     __ptext3:	
  2184 ;; *************** function _myMain_Initialization *****************
  2185 ;; Defined at:
  2186 ;;		line 167 in file "../src/Main_B1.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;		None               void
  2193 ;; Registers used:
  2194 ;;		None
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2200 ;;      Params:         0       0       0       0
  2201 ;;      Locals:         0       0       0       0
  2202 ;;      Temps:          0       0       0       0
  2203 ;;      Totals:         0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    2
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _myMain_Initialization
  2216  0FC3                     _myMain_Initialization:	
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _myMain_Initialization: []
  2220  0FC3  0008               	return
  2221  0FC4                     __end_of_myMain_Initialization:	
  2222                           
  2223                           	psect	text4
  2224  0662                     __ptext4:	
  2225 ;; *************** function _getTemp_AD *****************
  2226 ;; Defined at:
  2227 ;;		line 33 in file "../src/OverTemperature_B1.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  channel         1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  channel         1    6[COMMON] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;		None               void
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2241 ;;      Params:         0       0       0       0
  2242 ;;      Locals:         1       0       0       0
  2243 ;;      Temps:          0       2       0       0
  2244 ;;      Totals:         1       2       0       0
  2245 ;;Total ram usage:        3 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    4
  2248 ;; This function calls:
  2249 ;;		_getAD
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _getTemp_AD
  2257  0662                     _getTemp_AD:	
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2261                           ;getTemp_AD@channel stored from wreg
  2262  0662  00F6               	movwf	getTemp_AD@channel
  2263                           
  2264                           ;OverTemperature_B1.c: 34: if (Temp.ADtoGO == 1) {
  2265  0663  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0664  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0665  1D3C               	btfss	_Temp,2
  2268  0666  0008               	return
  2269                           
  2270                           ;OverTemperature_B1.c: 35: Temp.ADRES = getAD(channel, 0x70);
  2271  0667  3070               	movlw	112
  2272  0668  00DA               	movwf	??_getTemp_AD
  2273  0669  085A               	movf	??_getTemp_AD,w
  2274  066A  00F4               	movwf	getAD@adcon1
  2275  066B  0876               	movf	getTemp_AD@channel,w
  2276  066C  118A  2686  118A   	fcall	_getAD
  2277  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0671  00DB               	movwf	??_getTemp_AD+1
  2280  0672  085B               	movf	??_getTemp_AD+1,w
  2281  0673  00C5               	movwf	_Temp+9
  2282                           
  2283                           ;OverTemperature_B1.c: 36: if (Temp.ADH[0] < Temp.ADRES) {
  2284  0674  0845               	movf	_Temp+9,w
  2285  0675  0243               	subwf	_Temp+7,w
  2286  0676  1803               	skipnc
  2287  0677  2E7D               	goto	l3203
  2288                           
  2289                           ;OverTemperature_B1.c: 37: Temp.ADH[0] = Temp.ADRES;
  2290  0678  0845               	movf	_Temp+9,w
  2291  0679  00DA               	movwf	??_getTemp_AD
  2292  067A  085A               	movf	??_getTemp_AD,w
  2293  067B  00C3               	movwf	_Temp+7
  2294                           
  2295                           ;OverTemperature_B1.c: 38: } else if (Temp.ADH[1] < Temp.ADRES) {
  2296  067C  0008               	return
  2297  067D                     l3203:	
  2298  067D  0845               	movf	_Temp+9,w
  2299  067E  0244               	subwf	_Temp+8,w
  2300  067F  1803               	skipnc
  2301  0680  0008               	return
  2302                           
  2303                           ;OverTemperature_B1.c: 39: Temp.ADH[1] = Temp.ADRES;
  2304  0681  0845               	movf	_Temp+9,w
  2305  0682  00DA               	movwf	??_getTemp_AD
  2306  0683  085A               	movf	??_getTemp_AD,w
  2307  0684  00C4               	movwf	_Temp+8
  2308  0685  0008               	return
  2309  0686                     __end_of_getTemp_AD:	
  2310                           
  2311                           	psect	text5
  2312  01E8                     __ptext5:	
  2313 ;; *************** function _getPIR_AD *****************
  2314 ;; Defined at:
  2315 ;;		line 172 in file "../src/PIR_B1.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  channel1        1    wreg     unsigned char 
  2318 ;;  channel2        1    6[COMMON] unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  channel1        1   12[BANK0 ] unsigned char 
  2321 ;;  i               1   13[BANK0 ] unsigned char 
  2322 ;;  j               1   11[BANK0 ] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;		None               void
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2332 ;;      Params:         1       0       0       0
  2333 ;;      Locals:         0       3       0       0
  2334 ;;      Temps:          0       3       0       0
  2335 ;;      Totals:         1       6       0       0
  2336 ;;Total ram usage:        7 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    4
  2339 ;; This function calls:
  2340 ;;		___awdiv
  2341 ;;		___lwdiv
  2342 ;;		_getAD
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _getPIR_AD
  2350  01E8                     _getPIR_AD:	
  2351                           
  2352                           ;incstack = 0
  2353                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2354                           ;getPIR_AD@channel1 stored from wreg
  2355  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2356  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2357  01EA  00E6               	movwf	getPIR_AD@channel1
  2358                           
  2359                           ;PIR_B1.c: 173: char i = 0, j = 0;
  2360  01EB  01E7               	clrf	getPIR_AD@i
  2361  01EC  01E5               	clrf	getPIR_AD@j
  2362                           
  2363                           ;PIR_B1.c: 175: if (_PIR.ADtoGO == 1) {
  2364  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2365  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2366  01EF  1CA0               	btfss	__PIR^(0+128),1
  2367  01F0  0008               	return
  2368                           
  2369                           ;PIR_B1.c: 176: _PIR.GO = 1;
  2370  01F1  1520               	bsf	__PIR^(0+128),2
  2371                           
  2372                           ;PIR_B1.c: 177: _PIR.ADRES = getAD(channel1, 0x70);
  2373  01F2  3070               	movlw	112
  2374  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2375  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2376  01F5  00E2               	movwf	??_getPIR_AD
  2377  01F6  0862               	movf	??_getPIR_AD,w
  2378  01F7  00F4               	movwf	getAD@adcon1
  2379  01F8  0866               	movf	getPIR_AD@channel1,w
  2380  01F9  118A  2686  118A   	fcall	_getAD
  2381  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2382  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2383  01FE  00E3               	movwf	??_getPIR_AD+1
  2384  01FF  0863               	movf	??_getPIR_AD+1,w
  2385  0200  1683               	bsf	3,5	;RP0=1, select bank1
  2386  0201  1303               	bcf	3,6	;RP1=0, select bank1
  2387  0202  00A2               	movwf	(__PIR^(0+128)+2)
  2388                           
  2389                           ;PIR_B1.c: 178: _PIR.VRAD = _PIR.ADRES / 51;
  2390  0203  3033               	movlw	51
  2391  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0206  00DA               	movwf	___awdiv@divisor
  2394  0207  3000               	movlw	0
  2395  0208  00DB               	movwf	___awdiv@divisor+1
  2396  0209  1683               	bsf	3,5	;RP0=1, select bank1
  2397  020A  1303               	bcf	3,6	;RP1=0, select bank1
  2398  020B  0822               	movf	(__PIR^(0+128)+2),w
  2399  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2400  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2401  020E  00E2               	movwf	??_getPIR_AD
  2402  020F  01E3               	clrf	??_getPIR_AD+1
  2403  0210  0862               	movf	??_getPIR_AD,w
  2404  0211  00DC               	movwf	___awdiv@dividend
  2405  0212  0863               	movf	??_getPIR_AD+1,w
  2406  0213  00DD               	movwf	___awdiv@dividend+1
  2407  0214  118A  2382  118A   	fcall	___awdiv
  2408  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0219  085A               	movf	?___awdiv,w
  2411  021A  00E4               	movwf	??_getPIR_AD+2
  2412  021B  0864               	movf	??_getPIR_AD+2,w
  2413  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2414  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2415  021E  00A3               	movwf	(__PIR^(0+128)+3)
  2416                           
  2417                           ;PIR_B1.c: 179: _PIR.VRAD1 = _PIR.ADRES;
  2418  021F  0822               	movf	(__PIR^(0+128)+2),w
  2419  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0222  00E2               	movwf	??_getPIR_AD
  2422  0223  0862               	movf	??_getPIR_AD,w
  2423  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0226  00A4               	movwf	(__PIR^(0+128)+4)
  2426                           
  2427                           ;PIR_B1.c: 180: _PIR.ADRES = getAD(channel2, 0x70);
  2428  0227  3070               	movlw	112
  2429  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2431  022A  00E2               	movwf	??_getPIR_AD
  2432  022B  0862               	movf	??_getPIR_AD,w
  2433  022C  00F4               	movwf	getAD@adcon1
  2434  022D  0876               	movf	getPIR_AD@channel2,w
  2435  022E  118A  2686  118A   	fcall	_getAD
  2436  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0233  00E3               	movwf	??_getPIR_AD+1
  2439  0234  0863               	movf	??_getPIR_AD+1,w
  2440  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2441  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2442  0237  00A2               	movwf	(__PIR^(0+128)+2)
  2443                           
  2444                           ;PIR_B1.c: 181: _PIR.SignalAD = _PIR.ADRES;
  2445  0238  0822               	movf	(__PIR^(0+128)+2),w
  2446  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2447  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2448  023B  00E2               	movwf	??_getPIR_AD
  2449  023C  0862               	movf	??_getPIR_AD,w
  2450  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2451  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2452  023F  00A1               	movwf	(__PIR^(0+128)+1)
  2453                           
  2454                           ;PIR_B1.c: 183: switch (_PIR.VRAD) {
  2455  0240  2A5C               	goto	l3235
  2456  0241                     l3219:	
  2457                           ;PIR_B1.c: 184: case 0:
  2458                           
  2459                           
  2460                           ;PIR_B1.c: 185: if (_PIR.VRAD1 < 10) {
  2461  0241  300A               	movlw	10
  2462  0242  0224               	subwf	(__PIR^(0+128)+4),w
  2463  0243  1803               	skipnc
  2464  0244  2A47               	goto	l3223
  2465                           
  2466                           ;PIR_B1.c: 186: _PIR.CloseTimeValue = 5;
  2467  0245  3005               	movlw	5
  2468  0246  2A48               	goto	L1
  2469  0247                     l3223:	
  2470                           ;PIR_B1.c: 187: } else {
  2471                           
  2472                           
  2473                           ;PIR_B1.c: 188: _PIR.CloseTimeValue = 60;
  2474  0247  303C               	movlw	60
  2475  0248                     L1:	
  2476  0248  00C7               	movwf	(__PIR^(0+128)+39)
  2477  0249  3000               	movlw	0
  2478  024A  2A5A               	goto	L5
  2479  024B                     l3225:	
  2480                           ;PIR_B1.c: 191: case 1:
  2481                           
  2482                           ;PIR_B1.c: 189: }
  2483                           ;PIR_B1.c: 190: break;
  2484                           
  2485                           
  2486                           ;PIR_B1.c: 192: _PIR.CloseTimeValue = 300;
  2487  024B  302C               	movlw	44
  2488  024C  00C7               	movwf	(__PIR^(0+128)+39)
  2489  024D  3001               	movlw	1
  2490  024E  2A5A               	goto	L5
  2491  024F                     l3227:	
  2492                           ;PIR_B1.c: 194: case 2:
  2493                           
  2494                           ;PIR_B1.c: 193: break;
  2495                           
  2496                           
  2497                           ;PIR_B1.c: 195: _PIR.CloseTimeValue = 600;
  2498  024F  3058               	movlw	88
  2499  0250  00C7               	movwf	(__PIR^(0+128)+39)
  2500  0251  3002               	movlw	2
  2501  0252  2A5A               	goto	L5
  2502  0253                     l3229:	
  2503                           ;PIR_B1.c: 197: case 3:
  2504                           
  2505                           ;PIR_B1.c: 196: break;
  2506                           
  2507                           
  2508                           ;PIR_B1.c: 198: _PIR.CloseTimeValue = 900;
  2509  0253  3084               	movlw	132
  2510  0254  00C7               	movwf	(__PIR^(0+128)+39)
  2511  0255  3003               	movlw	3
  2512  0256  2A5A               	goto	L5
  2513  0257                     l3231:	
  2514                           ;PIR_B1.c: 200: case 4:
  2515                           
  2516                           ;PIR_B1.c: 199: break;
  2517                           
  2518                           
  2519                           ;PIR_B1.c: 201: _PIR.CloseTimeValue = 1200;
  2520  0257  30B0               	movlw	176
  2521  0258  00C7               	movwf	(__PIR^(0+128)+39)
  2522  0259  3004               	movlw	4
  2523  025A                     L5:	
  2524  025A  00C8               	movwf	(__PIR^(0+128)+40)
  2525                           
  2526                           ;PIR_B1.c: 203: }
  2527                           
  2528                           ;PIR_B1.c: 202: break;
  2529  025B  2A6D               	goto	l3237
  2530  025C                     l3235:	
  2531  025C  0823               	movf	(__PIR^(0+128)+3),w
  2532                           
  2533                           ; Switch size 1, requested type "space"
  2534                           ; Number of cases is 5, Range of values is 0 to 4
  2535                           ; switch strategies available:
  2536                           ; Name         Instructions Cycles
  2537                           ; simple_byte           16     9 (average)
  2538                           ; direct_byte           17     7 (fixed)
  2539                           ; jumptable            260     6 (fixed)
  2540                           ;	Chosen strategy is simple_byte
  2541  025D  3A00               	xorlw	0	; case 0
  2542  025E  1903               	skipnz
  2543  025F  2A41               	goto	l3219
  2544  0260  3A01               	xorlw	1	; case 1
  2545  0261  1903               	skipnz
  2546  0262  2A4B               	goto	l3225
  2547  0263  3A03               	xorlw	3	; case 2
  2548  0264  1903               	skipnz
  2549  0265  2A4F               	goto	l3227
  2550  0266  3A01               	xorlw	1	; case 3
  2551  0267  1903               	skipnz
  2552  0268  2A53               	goto	l3229
  2553  0269  3A07               	xorlw	7	; case 4
  2554  026A  1903               	skipnz
  2555  026B  2A57               	goto	l3231
  2556  026C  2A6D               	goto	l3237
  2557  026D                     l3237:	
  2558                           
  2559                           ;PIR_B1.c: 205: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2560  026D  0821               	movf	(__PIR^(0+128)+1),w
  2561  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2562  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0270  00E2               	movwf	??_getPIR_AD
  2564  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2565  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2566  0273  0826               	movf	(__PIR^(0+128)+6),w
  2567  0274  3EA9               	addlw	(__PIR+9)& (0+255)
  2568  0275  0084               	movwf	4
  2569  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0278  0862               	movf	??_getPIR_AD,w
  2572  0279  1383               	bcf	3,7	;select IRP bank1
  2573  027A  0080               	movwf	0
  2574                           
  2575                           ;PIR_B1.c: 206: for (i = 0; i < 10; i++) {
  2576  027B  01E7               	clrf	getPIR_AD@i
  2577  027C  300A               	movlw	10
  2578  027D  0267               	subwf	getPIR_AD@i,w
  2579  027E  1803               	btfsc	3,0
  2580  027F  2A9C               	goto	l3251
  2581  0280                     l3245:	
  2582                           
  2583                           ;PIR_B1.c: 207: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2584  0280  0867               	movf	getPIR_AD@i,w
  2585  0281  3EA9               	addlw	(__PIR+9)& (0+255)
  2586  0282  0084               	movwf	4
  2587  0283  0800               	movf	0,w
  2588  0284  00E2               	movwf	??_getPIR_AD
  2589  0285  01E3               	clrf	??_getPIR_AD+1
  2590  0286  0862               	movf	??_getPIR_AD,w
  2591  0287  1683               	bsf	3,5	;RP0=1, select bank1
  2592  0288  1303               	bcf	3,6	;RP1=0, select bank1
  2593  0289  07B3               	addwf	(__PIR^(0+128)+19),f
  2594  028A  1803               	skipnc
  2595  028B  0AB4               	incf	((__PIR+1)^(0+128)+19),f
  2596  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2597  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2598  028E  0863               	movf	??_getPIR_AD+1,w
  2599  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0290  1303               	bcf	3,6	;RP1=0, select bank1
  2601  0291  07B4               	addwf	((__PIR+1)^(0+128)+19),f
  2602  0292  3001               	movlw	1
  2603  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2605  0295  00E2               	movwf	??_getPIR_AD
  2606  0296  0862               	movf	??_getPIR_AD,w
  2607  0297  07E7               	addwf	getPIR_AD@i,f
  2608  0298  300A               	movlw	10
  2609  0299  0267               	subwf	getPIR_AD@i,w
  2610  029A  1C03               	skipc
  2611  029B  2A80               	goto	l3245
  2612  029C                     l3251:	
  2613                           
  2614                           ;PIR_B1.c: 208: }
  2615                           ;PIR_B1.c: 209: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2616  029C  300A               	movlw	10
  2617  029D  00DA               	movwf	___lwdiv@divisor
  2618  029E  3000               	movlw	0
  2619  029F  00DB               	movwf	___lwdiv@divisor+1
  2620  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2621  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2622  02A2  0834               	movf	((__PIR+1)^(0+128)+19),w
  2623  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2624  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  2625  02A5  01DD               	clrf	___lwdiv@dividend+1
  2626  02A6  07DD               	addwf	___lwdiv@dividend+1,f
  2627  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2628  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2629  02A9  0833               	movf	(__PIR^(0+128)+19),w
  2630  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2631  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2632  02AC  01DC               	clrf	___lwdiv@dividend
  2633  02AD  07DC               	addwf	___lwdiv@dividend,f
  2634  02AE  118A  24E3  118A   	fcall	___lwdiv
  2635  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2636  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2637  02B3  085A               	movf	?___lwdiv,w
  2638  02B4  00E2               	movwf	??_getPIR_AD
  2639  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2640  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2641  02B7  0827               	movf	(__PIR^(0+128)+7),w
  2642  02B8  3EB5               	addlw	(__PIR+21)& (0+255)
  2643  02B9  0084               	movwf	4
  2644  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2645  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2646  02BC  0862               	movf	??_getPIR_AD,w
  2647  02BD  1383               	bcf	3,7	;select IRP bank1
  2648  02BE  0080               	movwf	0
  2649                           
  2650                           ;PIR_B1.c: 210: _PIR.TenAverageValue = 0;
  2651  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2652  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2653  02C1  01B3               	clrf	(__PIR^(0+128)+19)
  2654  02C2  01B4               	clrf	((__PIR+1)^(0+128)+19)
  2655                           
  2656                           ;PIR_B1.c: 212: for (i = 0; i <= 9; i++) {
  2657  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2658  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2659  02C5  01E7               	clrf	getPIR_AD@i
  2660  02C6  300A               	movlw	10
  2661  02C7  0267               	subwf	getPIR_AD@i,w
  2662  02C8  1803               	btfsc	3,0
  2663  02C9  2AE6               	goto	l3267
  2664  02CA                     l3261:	
  2665                           
  2666                           ;PIR_B1.c: 213: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2667  02CA  0867               	movf	getPIR_AD@i,w
  2668  02CB  3EB5               	addlw	(__PIR+21)& (0+255)
  2669  02CC  0084               	movwf	4
  2670  02CD  0800               	movf	0,w
  2671  02CE  00E2               	movwf	??_getPIR_AD
  2672  02CF  01E3               	clrf	??_getPIR_AD+1
  2673  02D0  0862               	movf	??_getPIR_AD,w
  2674  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2675  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2676  02D3  07BF               	addwf	(__PIR^(0+128)+31),f
  2677  02D4  1803               	skipnc
  2678  02D5  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2679  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2680  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2681  02D8  0863               	movf	??_getPIR_AD+1,w
  2682  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2683  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2684  02DB  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2685  02DC  3001               	movlw	1
  2686  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2687  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2688  02DF  00E2               	movwf	??_getPIR_AD
  2689  02E0  0862               	movf	??_getPIR_AD,w
  2690  02E1  07E7               	addwf	getPIR_AD@i,f
  2691  02E2  300A               	movlw	10
  2692  02E3  0267               	subwf	getPIR_AD@i,w
  2693  02E4  1C03               	skipc
  2694  02E5  2ACA               	goto	l3261
  2695  02E6                     l3267:	
  2696                           
  2697                           ;PIR_B1.c: 214: }
  2698                           ;PIR_B1.c: 215: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2699  02E6  300A               	movlw	10
  2700  02E7  00DA               	movwf	___lwdiv@divisor
  2701  02E8  3000               	movlw	0
  2702  02E9  00DB               	movwf	___lwdiv@divisor+1
  2703  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2704  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2705  02EC  0840               	movf	((__PIR+1)^(0+128)+31),w
  2706  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2707  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2708  02EF  01DD               	clrf	___lwdiv@dividend+1
  2709  02F0  07DD               	addwf	___lwdiv@dividend+1,f
  2710  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2711  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2712  02F3  083F               	movf	(__PIR^(0+128)+31),w
  2713  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2714  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2715  02F6  01DC               	clrf	___lwdiv@dividend
  2716  02F7  07DC               	addwf	___lwdiv@dividend,f
  2717  02F8  118A  24E3  118A   	fcall	___lwdiv
  2718  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2719  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2720  02FD  085A               	movf	?___lwdiv,w
  2721  02FE  00E2               	movwf	??_getPIR_AD
  2722  02FF  0862               	movf	??_getPIR_AD,w
  2723  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2725  0302  00A8               	movwf	(__PIR^(0+128)+8)
  2726                           
  2727                           ;PIR_B1.c: 216: _PIR.HundredAverageValue = 0;
  2728  0303  01BF               	clrf	(__PIR^(0+128)+31)
  2729  0304  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2730                           
  2731                           ;PIR_B1.c: 218: if (_PIR.TenCount < 10) {
  2732  0305  300A               	movlw	10
  2733  0306  0226               	subwf	(__PIR^(0+128)+6),w
  2734  0307  1803               	skipnc
  2735  0308  2B12               	goto	l3275
  2736                           
  2737                           ;PIR_B1.c: 219: _PIR.TenCount++;
  2738  0309  3001               	movlw	1
  2739  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2740  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2741  030C  00E2               	movwf	??_getPIR_AD
  2742  030D  0862               	movf	??_getPIR_AD,w
  2743  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2744  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2745  0310  07A6               	addwf	(__PIR^(0+128)+6),f
  2746                           
  2747                           ;PIR_B1.c: 220: } else {
  2748  0311  0008               	return
  2749  0312                     l3275:	
  2750                           
  2751                           ;PIR_B1.c: 221: _PIR.TenCount = 0;
  2752  0312  01A6               	clrf	(__PIR^(0+128)+6)
  2753                           
  2754                           ;PIR_B1.c: 222: if (_PIR.HundreCount < 10)
  2755  0313  300A               	movlw	10
  2756  0314  0227               	subwf	(__PIR^(0+128)+7),w
  2757  0315  1803               	skipnc
  2758  0316  2B20               	goto	l3281
  2759                           
  2760                           ;PIR_B1.c: 223: _PIR.HundreCount++;
  2761  0317  3001               	movlw	1
  2762  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2764  031A  00E2               	movwf	??_getPIR_AD
  2765  031B  0862               	movf	??_getPIR_AD,w
  2766  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2767  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2768  031E  07A7               	addwf	(__PIR^(0+128)+7),f
  2769  031F  0008               	return
  2770  0320                     l3281:	
  2771                           
  2772                           ;PIR_B1.c: 224: else
  2773                           ;PIR_B1.c: 225: _PIR.HundreCount = 0;
  2774  0320  01A7               	clrf	(__PIR^(0+128)+7)
  2775  0321  0008               	return
  2776  0322                     __end_of_getPIR_AD:	
  2777                           
  2778                           	psect	text6
  2779  04E3                     __ptext6:	
  2780 ;; *************** function ___lwdiv *****************
  2781 ;; Defined at:
  2782 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  divisor         2    0[BANK0 ] unsigned int 
  2785 ;;  dividend        2    2[BANK0 ] unsigned int 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  quotient        2    5[BANK0 ] unsigned int 
  2788 ;;  counter         1    4[BANK0 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  2    0[BANK0 ] unsigned int 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2798 ;;      Params:         0       4       0       0
  2799 ;;      Locals:         0       3       0       0
  2800 ;;      Temps:          1       0       0       0
  2801 ;;      Totals:         1       7       0       0
  2802 ;;Total ram usage:        8 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    2
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_getPIR_AD
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function ___lwdiv
  2814  04E3                     ___lwdiv:	
  2815                           
  2816                           ;incstack = 0
  2817                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2818  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2819  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2820  04E5  01DF               	clrf	___lwdiv@quotient
  2821  04E6  01E0               	clrf	___lwdiv@quotient+1
  2822  04E7  085B               	movf	___lwdiv@divisor+1,w
  2823  04E8  045A               	iorwf	___lwdiv@divisor,w
  2824  04E9  1903               	skipnz
  2825  04EA  2D1C               	goto	l3173
  2826  04EB  01DE               	clrf	___lwdiv@counter
  2827  04EC  0ADE               	incf	___lwdiv@counter,f
  2828  04ED                     l3161:	
  2829  04ED  1BDB               	btfsc	___lwdiv@divisor+1,7
  2830  04EE  2CFB               	goto	l3163
  2831  04EF  3001               	movlw	1
  2832  04F0                     u3265:	
  2833  04F0  1003               	clrc
  2834  04F1  0DDA               	rlf	___lwdiv@divisor,f
  2835  04F2  0DDB               	rlf	___lwdiv@divisor+1,f
  2836  04F3  3EFF               	addlw	-1
  2837  04F4  1D03               	skipz
  2838  04F5  2CF0               	goto	u3265
  2839  04F6  3001               	movlw	1
  2840  04F7  00F4               	movwf	??___lwdiv
  2841  04F8  0874               	movf	??___lwdiv,w
  2842  04F9  07DE               	addwf	___lwdiv@counter,f
  2843  04FA  2CED               	goto	l3161
  2844  04FB                     l3163:	
  2845  04FB  3001               	movlw	1
  2846  04FC                     u3285:	
  2847  04FC  1003               	clrc
  2848  04FD  0DDF               	rlf	___lwdiv@quotient,f
  2849  04FE  0DE0               	rlf	___lwdiv@quotient+1,f
  2850  04FF  3EFF               	addlw	-1
  2851  0500  1D03               	skipz
  2852  0501  2CFC               	goto	u3285
  2853  0502  085B               	movf	___lwdiv@divisor+1,w
  2854  0503  025D               	subwf	___lwdiv@dividend+1,w
  2855  0504  1D03               	skipz
  2856  0505  2D08               	goto	u3295
  2857  0506  085A               	movf	___lwdiv@divisor,w
  2858  0507  025C               	subwf	___lwdiv@dividend,w
  2859  0508                     u3295:	
  2860  0508  1C03               	skipc
  2861  0509  2D11               	goto	l3169
  2862  050A  085A               	movf	___lwdiv@divisor,w
  2863  050B  02DC               	subwf	___lwdiv@dividend,f
  2864  050C  085B               	movf	___lwdiv@divisor+1,w
  2865  050D  1C03               	skipc
  2866  050E  03DD               	decf	___lwdiv@dividend+1,f
  2867  050F  02DD               	subwf	___lwdiv@dividend+1,f
  2868  0510  145F               	bsf	___lwdiv@quotient,0
  2869  0511                     l3169:	
  2870  0511  3001               	movlw	1
  2871  0512                     u3305:	
  2872  0512  1003               	clrc
  2873  0513  0CDB               	rrf	___lwdiv@divisor+1,f
  2874  0514  0CDA               	rrf	___lwdiv@divisor,f
  2875  0515  3EFF               	addlw	-1
  2876  0516  1D03               	skipz
  2877  0517  2D12               	goto	u3305
  2878  0518  3001               	movlw	1
  2879  0519  02DE               	subwf	___lwdiv@counter,f
  2880  051A  1D03               	btfss	3,2
  2881  051B  2CFB               	goto	l3163
  2882  051C                     l3173:	
  2883  051C  0860               	movf	___lwdiv@quotient+1,w
  2884  051D  01DB               	clrf	?___lwdiv+1
  2885  051E  07DB               	addwf	?___lwdiv+1,f
  2886  051F  085F               	movf	___lwdiv@quotient,w
  2887  0520  01DA               	clrf	?___lwdiv
  2888  0521  07DA               	addwf	?___lwdiv,f
  2889  0522  0008               	return
  2890  0523                     __end_of___lwdiv:	
  2891                           
  2892                           	psect	text7
  2893  0382                     __ptext7:	
  2894 ;; *************** function ___awdiv *****************
  2895 ;; Defined at:
  2896 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  divisor         2    0[BANK0 ] int 
  2899 ;;  dividend        2    2[BANK0 ] int 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  quotient        2    6[BANK0 ] int 
  2902 ;;  sign            1    5[BANK0 ] unsigned char 
  2903 ;;  counter         1    4[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  2    0[BANK0 ] int 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2913 ;;      Params:         0       4       0       0
  2914 ;;      Locals:         0       4       0       0
  2915 ;;      Temps:          1       0       0       0
  2916 ;;      Totals:         1       8       0       0
  2917 ;;Total ram usage:        9 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    2
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_getPIR_AD
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function ___awdiv
  2929  0382                     ___awdiv:	
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2933  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0384  01DF               	clrf	___awdiv@sign
  2936  0385  1FDB               	btfss	___awdiv@divisor+1,7
  2937  0386  2B8E               	goto	l3115
  2938  0387  09DA               	comf	___awdiv@divisor,f
  2939  0388  09DB               	comf	___awdiv@divisor+1,f
  2940  0389  0ADA               	incf	___awdiv@divisor,f
  2941  038A  1903               	skipnz
  2942  038B  0ADB               	incf	___awdiv@divisor+1,f
  2943  038C  01DF               	clrf	___awdiv@sign
  2944  038D  0ADF               	incf	___awdiv@sign,f
  2945  038E                     l3115:	
  2946  038E  1FDD               	btfss	___awdiv@dividend+1,7
  2947  038F  2B99               	goto	l3121
  2948  0390  09DC               	comf	___awdiv@dividend,f
  2949  0391  09DD               	comf	___awdiv@dividend+1,f
  2950  0392  0ADC               	incf	___awdiv@dividend,f
  2951  0393  1903               	skipnz
  2952  0394  0ADD               	incf	___awdiv@dividend+1,f
  2953  0395  3001               	movlw	1
  2954  0396  00F4               	movwf	??___awdiv
  2955  0397  0874               	movf	??___awdiv,w
  2956  0398  06DF               	xorwf	___awdiv@sign,f
  2957  0399                     l3121:	
  2958  0399  01E0               	clrf	___awdiv@quotient
  2959  039A  01E1               	clrf	___awdiv@quotient+1
  2960  039B  085B               	movf	___awdiv@divisor+1,w
  2961  039C  045A               	iorwf	___awdiv@divisor,w
  2962  039D  1903               	skipnz
  2963  039E  2BD0               	goto	l3143
  2964  039F  01DE               	clrf	___awdiv@counter
  2965  03A0  0ADE               	incf	___awdiv@counter,f
  2966  03A1                     l3131:	
  2967  03A1  1BDB               	btfsc	___awdiv@divisor+1,7
  2968  03A2  2BAF               	goto	l3133
  2969  03A3  3001               	movlw	1
  2970  03A4                     u3185:	
  2971  03A4  1003               	clrc
  2972  03A5  0DDA               	rlf	___awdiv@divisor,f
  2973  03A6  0DDB               	rlf	___awdiv@divisor+1,f
  2974  03A7  3EFF               	addlw	-1
  2975  03A8  1D03               	skipz
  2976  03A9  2BA4               	goto	u3185
  2977  03AA  3001               	movlw	1
  2978  03AB  00F4               	movwf	??___awdiv
  2979  03AC  0874               	movf	??___awdiv,w
  2980  03AD  07DE               	addwf	___awdiv@counter,f
  2981  03AE  2BA1               	goto	l3131
  2982  03AF                     l3133:	
  2983  03AF  3001               	movlw	1
  2984  03B0                     u3205:	
  2985  03B0  1003               	clrc
  2986  03B1  0DE0               	rlf	___awdiv@quotient,f
  2987  03B2  0DE1               	rlf	___awdiv@quotient+1,f
  2988  03B3  3EFF               	addlw	-1
  2989  03B4  1D03               	skipz
  2990  03B5  2BB0               	goto	u3205
  2991  03B6  085B               	movf	___awdiv@divisor+1,w
  2992  03B7  025D               	subwf	___awdiv@dividend+1,w
  2993  03B8  1D03               	skipz
  2994  03B9  2BBC               	goto	u3215
  2995  03BA  085A               	movf	___awdiv@divisor,w
  2996  03BB  025C               	subwf	___awdiv@dividend,w
  2997  03BC                     u3215:	
  2998  03BC  1C03               	skipc
  2999  03BD  2BC5               	goto	l3139
  3000  03BE  085A               	movf	___awdiv@divisor,w
  3001  03BF  02DC               	subwf	___awdiv@dividend,f
  3002  03C0  085B               	movf	___awdiv@divisor+1,w
  3003  03C1  1C03               	skipc
  3004  03C2  03DD               	decf	___awdiv@dividend+1,f
  3005  03C3  02DD               	subwf	___awdiv@dividend+1,f
  3006  03C4  1460               	bsf	___awdiv@quotient,0
  3007  03C5                     l3139:	
  3008  03C5  3001               	movlw	1
  3009  03C6                     u3225:	
  3010  03C6  1003               	clrc
  3011  03C7  0CDB               	rrf	___awdiv@divisor+1,f
  3012  03C8  0CDA               	rrf	___awdiv@divisor,f
  3013  03C9  3EFF               	addlw	-1
  3014  03CA  1D03               	skipz
  3015  03CB  2BC6               	goto	u3225
  3016  03CC  3001               	movlw	1
  3017  03CD  02DE               	subwf	___awdiv@counter,f
  3018  03CE  1D03               	btfss	3,2
  3019  03CF  2BAF               	goto	l3133
  3020  03D0                     l3143:	
  3021  03D0  085F               	movf	___awdiv@sign,w
  3022  03D1  1903               	btfsc	3,2
  3023  03D2  2BD8               	goto	l3147
  3024  03D3  09E0               	comf	___awdiv@quotient,f
  3025  03D4  09E1               	comf	___awdiv@quotient+1,f
  3026  03D5  0AE0               	incf	___awdiv@quotient,f
  3027  03D6  1903               	skipnz
  3028  03D7  0AE1               	incf	___awdiv@quotient+1,f
  3029  03D8                     l3147:	
  3030  03D8  0861               	movf	___awdiv@quotient+1,w
  3031  03D9  01DB               	clrf	?___awdiv+1
  3032  03DA  07DB               	addwf	?___awdiv+1,f
  3033  03DB  0860               	movf	___awdiv@quotient,w
  3034  03DC  01DA               	clrf	?___awdiv
  3035  03DD  07DA               	addwf	?___awdiv,f
  3036  03DE  0008               	return
  3037  03DF                     __end_of___awdiv:	
  3038                           
  3039                           	psect	text8
  3040  0638                     __ptext8:	
  3041 ;; *************** function _getCDS_AD *****************
  3042 ;; Defined at:
  3043 ;;		line 49 in file "../src/CDS_B1.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  channel1        1    wreg     unsigned char 
  3046 ;;  channel2        1    6[COMMON] unsigned char 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  channel1        1    4[BANK0 ] unsigned char 
  3049 ;;  j               1    3[BANK0 ] unsigned char 
  3050 ;;  i               1    2[BANK0 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;		None               void
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0, pclath, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3060 ;;      Params:         1       0       0       0
  3061 ;;      Locals:         0       3       0       0
  3062 ;;      Temps:          0       2       0       0
  3063 ;;      Totals:         1       5       0       0
  3064 ;;Total ram usage:        6 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    4
  3067 ;; This function calls:
  3068 ;;		_getAD
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _getCDS_AD
  3076  0638                     _getCDS_AD:	
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3080                           ;getCDS_AD@channel1 stored from wreg
  3081  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3083  063A  00DE               	movwf	getCDS_AD@channel1
  3084                           
  3085                           ;CDS_B1.c: 50: char i = 0, j = 0;
  3086  063B  01DC               	clrf	getCDS_AD@i
  3087  063C  01DD               	clrf	getCDS_AD@j
  3088                           
  3089                           ;CDS_B1.c: 51: if (_CDS.ADtoGO == 1) {
  3090  063D  1DB3               	btfss	__CDS,3
  3091  063E  0008               	return
  3092                           
  3093                           ;CDS_B1.c: 52: _CDS.GO = 1;
  3094  063F  14B3               	bsf	__CDS,1
  3095                           
  3096                           ;CDS_B1.c: 53: _CDS.ADRES = getAD(channel1, 0x70);
  3097  0640  3070               	movlw	112
  3098  0641  00DA               	movwf	??_getCDS_AD
  3099  0642  085A               	movf	??_getCDS_AD,w
  3100  0643  00F4               	movwf	getAD@adcon1
  3101  0644  085E               	movf	getCDS_AD@channel1,w
  3102  0645  118A  2686  118A   	fcall	_getAD
  3103  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3105  064A  00DB               	movwf	??_getCDS_AD+1
  3106  064B  085B               	movf	??_getCDS_AD+1,w
  3107  064C  00B7               	movwf	__CDS+4
  3108                           
  3109                           ;CDS_B1.c: 54: _CDS.VRAD = _CDS.ADRES;
  3110  064D  0837               	movf	__CDS+4,w
  3111  064E  00DA               	movwf	??_getCDS_AD
  3112  064F  085A               	movf	??_getCDS_AD,w
  3113  0650  00B5               	movwf	__CDS+2
  3114                           
  3115                           ;CDS_B1.c: 55: _CDS.ADRES = getAD(channel2, 0x70);
  3116  0651  3070               	movlw	112
  3117  0652  00DA               	movwf	??_getCDS_AD
  3118  0653  085A               	movf	??_getCDS_AD,w
  3119  0654  00F4               	movwf	getAD@adcon1
  3120  0655  0876               	movf	getCDS_AD@channel2,w
  3121  0656  118A  2686         	fcall	_getAD
  3122  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3124  065A  00DB               	movwf	??_getCDS_AD+1
  3125  065B  085B               	movf	??_getCDS_AD+1,w
  3126  065C  00B7               	movwf	__CDS+4
  3127                           
  3128                           ;CDS_B1.c: 56: _CDS.SignalAD = _CDS.ADRES;
  3129  065D  0837               	movf	__CDS+4,w
  3130  065E  00DA               	movwf	??_getCDS_AD
  3131  065F  085A               	movf	??_getCDS_AD,w
  3132  0660  00B6               	movwf	__CDS+3
  3133  0661  0008               	return
  3134  0662                     __end_of_getCDS_AD:	
  3135                           
  3136                           	psect	text9
  3137  0686                     __ptext9:	
  3138 ;; *************** function _getAD *****************
  3139 ;; Defined at:
  3140 ;;		line 426 in file "../src/MCU_B1.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  adcon0          1    wreg     unsigned char 
  3143 ;;  adcon1          1    4[COMMON] unsigned char 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  adcon0          1    5[COMMON] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, pclath, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3155 ;;      Params:         1       0       0       0
  3156 ;;      Locals:         1       0       0       0
  3157 ;;      Temps:          0       0       0       0
  3158 ;;      Totals:         2       0       0       0
  3159 ;;Total ram usage:        2 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    3
  3162 ;; This function calls:
  3163 ;;		_Timeout_Counter
  3164 ;;		_set_TimeoutCleared
  3165 ;; This function is called by:
  3166 ;;		_getCDS_AD
  3167 ;;		_getTemp_AD
  3168 ;;		_getPIR_AD
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _getAD
  3174  0686                     _getAD:	
  3175                           
  3176                           ;incstack = 0
  3177                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3178                           ;getAD@adcon0 stored from wreg
  3179  0686  00F5               	movwf	getAD@adcon0
  3180                           
  3181                           ;MCU_B1.c: 427: ADCON0 = adcon0;
  3182  0687  0875               	movf	getAD@adcon0,w
  3183  0688  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0689  1303               	bcf	3,6	;RP1=0, select bank0
  3185  068A  009F               	movwf	31	;volatile
  3186                           
  3187                           ;MCU_B1.c: 428: ADCON1 = adcon1;
  3188  068B  0874               	movf	getAD@adcon1,w
  3189  068C  1683               	bsf	3,5	;RP0=1, select bank1
  3190  068D  1303               	bcf	3,6	;RP1=0, select bank1
  3191  068E  009F               	movwf	31	;volatile
  3192                           
  3193                           ;MCU_B1.c: 429: GO_nDONE = 1;
  3194  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3196  0691  149F               	bsf	31,1	;volatile
  3197                           
  3198                           ;MCU_B1.c: 430: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3199  0692  2E96               	goto	l2217
  3200  0693                     l2215:	
  3201                           
  3202                           ;MCU_B1.c: 431: Timeout_Counter();
  3203  0693  118A  270B  118A   	fcall	_Timeout_Counter
  3204  0696                     l2217:	
  3205  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0698  1C9F               	btfss	31,1	;volatile
  3208  0699  2E9C               	goto	l2221
  3209  069A  1D30               	btfss	_myMain+16,2
  3210  069B  2E93               	goto	l2215
  3211  069C                     l2221:	
  3212                           
  3213                           ;MCU_B1.c: 432: };
  3214                           ;MCU_B1.c: 433: set_TimeoutCleared();
  3215  069C  158A  27DB         	fcall	_set_TimeoutCleared
  3216                           
  3217                           ;MCU_B1.c: 434: return ADRES;
  3218  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3219  069F  1303               	bcf	3,6	;RP1=0, select bank0
  3220  06A0  081E               	movf	30,w	;volatile
  3221  06A1  0008               	return
  3222  06A2                     __end_of_getAD:	
  3223                           
  3224                           	psect	text10
  3225  0FDB                     __ptext10:	
  3226 ;; *************** function _set_TimeoutCleared *****************
  3227 ;; Defined at:
  3228 ;;		line 278 in file "../src/Main_B1.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;		None               void
  3235 ;; Registers used:
  3236 ;;		status,2
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3242 ;;      Params:         0       0       0       0
  3243 ;;      Locals:         0       0       0       0
  3244 ;;      Temps:          0       0       0       0
  3245 ;;      Totals:         0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    2
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_getAD
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _set_TimeoutCleared
  3258  0FDB                     _set_TimeoutCleared:	
  3259                           
  3260                           ;Main_B1.c: 279: myMain.Timeout = 0;
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _set_TimeoutCleared: [status,2]
  3264  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0FDD  1130               	bcf	_myMain+16,2
  3267                           
  3268                           ;Main_B1.c: 280: myMain.Timeout_Counter = 0;
  3269  0FDE  01B1               	clrf	_myMain+17
  3270  0FDF  01B2               	clrf	_myMain+18
  3271  0FE0  0008               	return
  3272  0FE1                     __end_of_set_TimeoutCleared:	
  3273                           
  3274                           	psect	text11
  3275  070B                     __ptext11:	
  3276 ;; *************** function _Timeout_Counter *****************
  3277 ;; Defined at:
  3278 ;;		line 268 in file "../src/Main_B1.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;		None               void
  3285 ;; Registers used:
  3286 ;;		wreg, status,2
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3292 ;;      Params:         0       0       0       0
  3293 ;;      Locals:         0       0       0       0
  3294 ;;      Temps:          0       0       0       0
  3295 ;;      Totals:         0       0       0       0
  3296 ;;Total ram usage:        0 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    2
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_getAD
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           
  3307                           ;psect for function _Timeout_Counter
  3308  070B                     _Timeout_Counter:	
  3309                           
  3310                           ;Main_B1.c: 269: myMain.Timeout_Counter++;
  3311                           
  3312                           ;incstack = 0
  3313                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3314  070B  3001               	movlw	1
  3315  070C  1283               	bcf	3,5	;RP0=0, select bank0
  3316  070D  1303               	bcf	3,6	;RP1=0, select bank0
  3317  070E  07B1               	addwf	_myMain+17,f
  3318  070F  1803               	skipnc
  3319  0710  0AB2               	incf	_myMain+18,f
  3320  0711  3000               	movlw	0
  3321  0712  07B2               	addwf	_myMain+18,f
  3322                           
  3323                           ;Main_B1.c: 270: if (myMain.Timeout_Counter == 10000) {
  3324  0713  3027               	movlw	39
  3325  0714  0632               	xorwf	_myMain+18,w
  3326  0715  1D03               	skipz
  3327  0716  2F19               	goto	u1525
  3328  0717  3010               	movlw	16
  3329  0718  0631               	xorwf	_myMain+17,w
  3330  0719                     u1525:	
  3331  0719  1D03               	skipz
  3332  071A  0008               	return
  3333                           
  3334                           ;Main_B1.c: 271: myMain.Timeout_Counter = 0;
  3335  071B  01B1               	clrf	_myMain+17
  3336  071C  01B2               	clrf	_myMain+18
  3337                           
  3338                           ;Main_B1.c: 272: myMain.Timeout = 1;
  3339  071D  1530               	bsf	_myMain+16,2
  3340  071E  0008               	return
  3341  071F                     __end_of_Timeout_Counter:	
  3342                           
  3343                           	psect	text12
  3344  0782                     __ptext12:	
  3345 ;; *************** function _WDT_Main *****************
  3346 ;; Defined at:
  3347 ;;		line 1019 in file "../src/MCU_B1.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, pclath, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3361 ;;      Params:         0       0       0       0
  3362 ;;      Locals:         0       0       0       0
  3363 ;;      Temps:          1       0       0       0
  3364 ;;      Totals:         1       0       0       0
  3365 ;;Total ram usage:        1 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    3
  3368 ;; This function calls:
  3369 ;;		_WDT_Clearing
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _WDT_Main
  3377  0782                     _WDT_Main:	
  3378                           
  3379                           ;MCU_B1.c: 1020: if (WDT.Enable == 1) {
  3380                           
  3381                           ;incstack = 0
  3382                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3383  0782  1C77               	btfss	_WDT,0
  3384  0783  0008               	return
  3385                           
  3386                           ;MCU_B1.c: 1021: if (WDT.Timer-- > 0) {
  3387  0784  3001               	movlw	1
  3388  0785  02F8               	subwf	_WDT+1,f
  3389  0786  0878               	movf	_WDT+1,w
  3390  0787  3AFF               	xorlw	255
  3391  0788  1903               	skipnz
  3392  0789  0008               	return
  3393                           
  3394                           ;MCU_B1.c: 1022: WDT.Timer = 100;
  3395  078A  3064               	movlw	100
  3396  078B  00F4               	movwf	??_WDT_Main
  3397  078C  0874               	movf	??_WDT_Main,w
  3398  078D  00F8               	movwf	_WDT+1
  3399                           
  3400                           ;MCU_B1.c: 1023: WDT_Clearing();
  3401  078E  118A  2002         	fcall	_WDT_Clearing
  3402  0790  0008               	return
  3403  0791                     __end_of_WDT_Main:	
  3404                           
  3405                           	psect	text13
  3406  0002                     __ptext13:	
  3407 ;; *************** function _WDT_Clearing *****************
  3408 ;; Defined at:
  3409 ;;		line 1029 in file "../src/MCU_B1.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;		None               void
  3416 ;; Registers used:
  3417 ;;		None
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3423 ;;      Params:         0       0       0       0
  3424 ;;      Locals:         0       0       0       0
  3425 ;;      Temps:          0       0       0       0
  3426 ;;      Totals:         0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    2
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_WDT_Main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _WDT_Clearing
  3439  0002                     _WDT_Clearing:	
  3440                           
  3441                           ;incstack = 0
  3442                           ; Regs used in _WDT_Clearing: []
  3443  0002  0064               	clrwdt	;# 
  3444  0003  0008               	return
  3445  0004                     __end_of_WDT_Clearing:	
  3446                           
  3447                           	psect	text14
  3448  0FC7                     __ptext14:	
  3449 ;; *************** function _Temp_Main *****************
  3450 ;; Defined at:
  3451 ;;		line 50 in file "../src/OverTemperature_B1.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;		None               void
  3458 ;; Registers used:
  3459 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3465 ;;      Params:         0       0       0       0
  3466 ;;      Locals:         0       0       0       0
  3467 ;;      Temps:          0       0       0       0
  3468 ;;      Totals:         0       0       0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    6
  3472 ;; This function calls:
  3473 ;;		_setTemp_Main
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function _Temp_Main
  3481  0FC7                     _Temp_Main:	
  3482                           
  3483                           ;OverTemperature_B1.c: 52: setTemp_Main();
  3484                           
  3485                           ;incstack = 0
  3486                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3487  0FC7  118A  23DF         	fcall	_setTemp_Main
  3488  0FC9  0008               	return
  3489  0FCA                     __end_of_Temp_Main:	
  3490                           
  3491                           	psect	text15
  3492  03DF                     __ptext15:	
  3493 ;; *************** function _setTemp_Main *****************
  3494 ;; Defined at:
  3495 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3509 ;;      Params:         0       0       0       0
  3510 ;;      Locals:         0       0       0       0
  3511 ;;      Temps:          0       1       0       0
  3512 ;;      Totals:         0       1       0       0
  3513 ;;Total ram usage:        1 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    5
  3516 ;; This function calls:
  3517 ;;		_setOverTemp_Exceptions
  3518 ;; This function is called by:
  3519 ;;		_Temp_Main
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _setTemp_Main
  3525  03DF                     _setTemp_Main:	
  3526                           
  3527                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3531  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3532  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3533  03E1  1C3C               	btfss	_Temp,0
  3534  03E2  0008               	return
  3535                           
  3536                           ;OverTemperature_B1.c: 59: if (Temp.ADtoGO == 0) {
  3537  03E3  193C               	btfsc	_Temp,2
  3538  03E4  2BF7               	goto	l2997
  3539                           
  3540                           ;OverTemperature_B1.c: 60: Temp.Time++;
  3541  03E5  3001               	movlw	1
  3542  03E6  07BD               	addwf	_Temp+1,f
  3543  03E7  1803               	skipnc
  3544  03E8  0ABE               	incf	_Temp+2,f
  3545  03E9  3000               	movlw	0
  3546  03EA  07BE               	addwf	_Temp+2,f
  3547                           
  3548                           ;OverTemperature_B1.c: 62: if (1 == 1) {
  3549  03EB  3001               	movlw	1
  3550  03EC  023E               	subwf	_Temp+2,w
  3551  03ED  30F4               	movlw	244
  3552  03EE  1903               	skipnz
  3553  03EF  023D               	subwf	_Temp+1,w
  3554  03F0  1C03               	skipc
  3555  03F1  0008               	return
  3556                           
  3557                           ;OverTemperature_B1.c: 63: Temp.Time = 0;
  3558  03F2  01BD               	clrf	_Temp+1
  3559  03F3  01BE               	clrf	_Temp+2
  3560                           
  3561                           ;OverTemperature_B1.c: 64: Temp.ADtoGO = 1;
  3562  03F4  153C               	bsf	_Temp,2
  3563                           
  3564                           ;OverTemperature_B1.c: 65: Temp.Safe = 0;
  3565  03F5  123C               	bcf	_Temp,4
  3566                           
  3567                           ;OverTemperature_B1.c: 67: } else {
  3568  03F6  0008               	return
  3569  03F7                     l2997:	
  3570                           ;OverTemperature_B1.c: 69: }
  3571                           ;OverTemperature_B1.c: 70: }
  3572                           ;OverTemperature_B1.c: 71: } else {
  3573                           
  3574                           ;OverTemperature_B1.c: 68: Temp.Time = 500;
  3575                           
  3576                           
  3577                           ;OverTemperature_B1.c: 72: Temp.Time++;
  3578  03F7  3001               	movlw	1
  3579  03F8  07BD               	addwf	_Temp+1,f
  3580  03F9  1803               	skipnc
  3581  03FA  0ABE               	incf	_Temp+2,f
  3582  03FB  3000               	movlw	0
  3583  03FC  07BE               	addwf	_Temp+2,f
  3584                           
  3585                           ;OverTemperature_B1.c: 73: if (Temp.Time >= 4) {
  3586  03FD  3000               	movlw	0
  3587  03FE  023E               	subwf	_Temp+2,w
  3588  03FF  3004               	movlw	4
  3589  0400  1903               	skipnz
  3590  0401  023D               	subwf	_Temp+1,w
  3591  0402  1C03               	skipc
  3592  0403  0008               	return
  3593                           
  3594                           ;OverTemperature_B1.c: 74: Temp.Time = 0;
  3595  0404  01BD               	clrf	_Temp+1
  3596  0405  01BE               	clrf	_Temp+2
  3597                           
  3598                           ;OverTemperature_B1.c: 75: Temp.ADtoGO = 0;
  3599  0406  113C               	bcf	_Temp,2
  3600                           
  3601                           ;OverTemperature_B1.c: 76: Temp.AD = Temp.ADH[1];
  3602  0407  0844               	movf	_Temp+8,w
  3603  0408  00DE               	movwf	??_setTemp_Main
  3604  0409  085E               	movf	??_setTemp_Main,w
  3605  040A  00C2               	movwf	_Temp+6
  3606                           
  3607                           ;OverTemperature_B1.c: 77: if (Temp.ERROR == 1) {
  3608  040B  1CBC               	btfss	_Temp,1
  3609  040C  2C1F               	goto	l3019
  3610                           
  3611                           ;OverTemperature_B1.c: 78: if (Temp.AD >= 150) {
  3612  040D  3096               	movlw	150
  3613  040E  0242               	subwf	_Temp+6,w
  3614  040F  1C03               	skipc
  3615  0410  2C31               	goto	l3029
  3616                           
  3617                           ;OverTemperature_B1.c: 79: Temp.Count++;
  3618  0411  3001               	movlw	1
  3619  0412  00DE               	movwf	??_setTemp_Main
  3620  0413  085E               	movf	??_setTemp_Main,w
  3621  0414  07BF               	addwf	_Temp+3,f
  3622                           
  3623                           ;OverTemperature_B1.c: 80: if (Temp.Count >= 3) {
  3624  0415  3003               	movlw	3
  3625  0416  023F               	subwf	_Temp+3,w
  3626  0417  1C03               	skipc
  3627  0418  2C34               	goto	l3031
  3628                           
  3629                           ;OverTemperature_B1.c: 81: Temp.Count = 0;
  3630  0419  01BF               	clrf	_Temp+3
  3631                           
  3632                           ;OverTemperature_B1.c: 82: setOverTemp_Exceptions(0);
  3633  041A  3000               	movlw	0
  3634  041B  118A  26A2  118A   	fcall	_setOverTemp_Exceptions
  3635                           
  3636                           ;OverTemperature_B1.c: 83: }
  3637                           ;OverTemperature_B1.c: 84: } else {
  3638  041E  2C34               	goto	l3031
  3639  041F                     l3019:	
  3640                           ;OverTemperature_B1.c: 86: }
  3641                           ;OverTemperature_B1.c: 87: } else {
  3642                           
  3643                           ;OverTemperature_B1.c: 85: Temp.Count = 0;
  3644                           
  3645                           
  3646                           ;OverTemperature_B1.c: 88: if (Temp.AD <= 137) {
  3647  041F  308A               	movlw	138
  3648  0420  0242               	subwf	_Temp+6,w
  3649  0421  1803               	skipnc
  3650  0422  2C31               	goto	l3029
  3651                           
  3652                           ;OverTemperature_B1.c: 89: Temp.Count++;
  3653  0423  3001               	movlw	1
  3654  0424  00DE               	movwf	??_setTemp_Main
  3655  0425  085E               	movf	??_setTemp_Main,w
  3656  0426  07BF               	addwf	_Temp+3,f
  3657                           
  3658                           ;OverTemperature_B1.c: 90: if (Temp.Count >= 3) {
  3659  0427  3003               	movlw	3
  3660  0428  023F               	subwf	_Temp+3,w
  3661  0429  1C03               	skipc
  3662  042A  2C34               	goto	l3031
  3663                           
  3664                           ;OverTemperature_B1.c: 91: Temp.Count = 0;
  3665  042B  01BF               	clrf	_Temp+3
  3666                           
  3667                           ;OverTemperature_B1.c: 92: setOverTemp_Exceptions(1);
  3668  042C  3001               	movlw	1
  3669  042D  118A  26A2  118A   	fcall	_setOverTemp_Exceptions
  3670                           
  3671                           ;OverTemperature_B1.c: 93: }
  3672                           ;OverTemperature_B1.c: 94: } else {
  3673  0430  2C34               	goto	l3031
  3674  0431                     l3029:	
  3675                           
  3676                           ;OverTemperature_B1.c: 95: Temp.Count = 0;
  3677  0431  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0432  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0433  01BF               	clrf	_Temp+3
  3680  0434                     l3031:	
  3681                           
  3682                           ;OverTemperature_B1.c: 96: }
  3683                           ;OverTemperature_B1.c: 97: }
  3684                           ;OverTemperature_B1.c: 98: if (Temp.ERROR == 0) {
  3685  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3687  0436  1CBC               	btfss	_Temp,1
  3688                           
  3689                           ;OverTemperature_B1.c: 99: Temp.Safe = 1;
  3690  0437  163C               	bsf	_Temp,4
  3691                           
  3692                           ;OverTemperature_B1.c: 100: }
  3693                           ;OverTemperature_B1.c: 101: ;;
  3694                           ;OverTemperature_B1.c: 102: ;;
  3695                           ;OverTemperature_B1.c: 105: Temp.ADH[0] = 0;
  3696  0438  01C3               	clrf	_Temp+7
  3697                           
  3698                           ;OverTemperature_B1.c: 106: Temp.ADH[1] = 0;
  3699  0439  01C4               	clrf	_Temp+8
  3700  043A  0008               	return
  3701  043B                     __end_of_setTemp_Main:	
  3702                           
  3703                           	psect	text16
  3704  06A2                     __ptext16:	
  3705 ;; *************** function _setOverTemp_Exceptions *****************
  3706 ;; Defined at:
  3707 ;;		line 113 in file "../src/OverTemperature_B1.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  command         1    wreg     unsigned char 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  command         1    3[BANK0 ] unsigned char 
  3712 ;;  i               1    2[BANK0 ] unsigned char 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;		None               void
  3715 ;; Registers used:
  3716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3722 ;;      Params:         0       0       0       0
  3723 ;;      Locals:         0       2       0       0
  3724 ;;      Temps:          0       1       0       0
  3725 ;;      Totals:         0       3       0       0
  3726 ;;Total ram usage:        3 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    4
  3729 ;; This function calls:
  3730 ;;		_setLED
  3731 ;; This function is called by:
  3732 ;;		_setTemp_Main
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _setOverTemp_Exceptions
  3738  06A2                     _setOverTemp_Exceptions:	
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in _setOverTemp_Exceptions: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3742                           ;setOverTemp_Exceptions@command stored from wreg
  3743  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3744  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3745  06A4  00DD               	movwf	setOverTemp_Exceptions@command
  3746                           
  3747                           ;OverTemperature_B1.c: 114: char i = command == 1 ? 0 : 1;
  3748  06A5  085D               	movf	setOverTemp_Exceptions@command,w
  3749  06A6  3A01               	xorlw	1
  3750  06A7  3000               	movlw	0
  3751  06A8  1D03               	skipz
  3752  06A9  3001               	movlw	1
  3753  06AA  00DB               	movwf	??_setOverTemp_Exceptions
  3754  06AB  085B               	movf	??_setOverTemp_Exceptions,w
  3755  06AC  00DC               	movwf	setOverTemp_Exceptions@i
  3756                           
  3757                           ;OverTemperature_B1.c: 115: Temp.ERROR = command;
  3758  06AD  085D               	movf	setOverTemp_Exceptions@command,w
  3759  06AE  10BC               	bcf	_Temp,1
  3760  06AF  1D03               	skipz
  3761  06B0  14BC               	bsf	_Temp,1
  3762                           
  3763                           ;OverTemperature_B1.c: 117: if (command == 1) {
  3764  06B1  085C               	movf	setOverTemp_Exceptions@i,w
  3765  06B2  123C               	bcf	_Temp,4
  3766  06B3  1D03               	skipz
  3767  06B4  163C               	bsf	_Temp,4
  3768                           
  3769                           ;OverTemperature_B1.c: 124: }
  3770                           ;OverTemperature_B1.c: 127: setLED(99, command + 10);
  3771                           
  3772                           ;OverTemperature_B1.c: 123: ;;
  3773                           
  3774                           ;OverTemperature_B1.c: 118: ;;
  3775                           ;OverTemperature_B1.c: 122: } else if (command == 0) {
  3776  06B5  085D               	movf	setOverTemp_Exceptions@command,w
  3777  06B6  3E0A               	addlw	10
  3778  06B7  00DB               	movwf	??_setOverTemp_Exceptions
  3779  06B8  085B               	movf	??_setOverTemp_Exceptions,w
  3780  06B9  00F6               	movwf	setLED@command
  3781  06BA  3063               	movlw	99
  3782  06BB  118A  2322         	fcall	_setLED
  3783  06BD  0008               	return
  3784  06BE                     __end_of_setOverTemp_Exceptions:	
  3785                           
  3786                           	psect	text17
  3787  0FC4                     __ptext17:	
  3788 ;; *************** function _Temp_Initialization *****************
  3789 ;; Defined at:
  3790 ;;		line 9 in file "../src/OverTemperature_B1.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3804 ;;      Params:         0       0       0       0
  3805 ;;      Locals:         0       0       0       0
  3806 ;;      Temps:          0       0       0       0
  3807 ;;      Totals:         0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    3
  3811 ;; This function calls:
  3812 ;;		_setTemp_Initialization
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _Temp_Initialization
  3820  0FC4                     _Temp_Initialization:	
  3821                           
  3822                           ;OverTemperature_B1.c: 11: setTemp_Initialization();
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3826  0FC4  158A  27D2         	fcall	_setTemp_Initialization
  3827  0FC6  0008               	return
  3828  0FC7                     __end_of_Temp_Initialization:	
  3829                           
  3830                           	psect	text18
  3831  0FD2                     __ptext18:	
  3832 ;; *************** function _setTemp_Initialization *****************
  3833 ;; Defined at:
  3834 ;;		line 45 in file "../src/OverTemperature_B1.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;		None               void
  3841 ;; Registers used:
  3842 ;;		None
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3848 ;;      Params:         0       0       0       0
  3849 ;;      Locals:         0       0       0       0
  3850 ;;      Temps:          0       0       0       0
  3851 ;;      Totals:         0       0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    2
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_Temp_Initialization
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function _setTemp_Initialization
  3864  0FD2                     _setTemp_Initialization:	
  3865                           
  3866                           ;OverTemperature_B1.c: 46: Temp.Safe = 1;
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _setTemp_Initialization: []
  3870  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0FD4  163C               	bsf	_Temp,4
  3873  0FD5  0008               	return
  3874  0FD6                     __end_of_setTemp_Initialization:	
  3875                           
  3876                           	psect	text19
  3877  0025                     __ptext19:	
  3878 ;; *************** function _PIR_Main *****************
  3879 ;; Defined at:
  3880 ;;		line 15 in file "../src/PIR_B1.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;		None               void
  3887 ;; Registers used:
  3888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3894 ;;      Params:         0       0       0       0
  3895 ;;      Locals:         0       0       0       0
  3896 ;;      Temps:          0       5       0       0
  3897 ;;      Totals:         0       5       0       0
  3898 ;;Total ram usage:        5 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    4
  3901 ;; This function calls:
  3902 ;;		_getCDS_Status
  3903 ;;		_getLights_Status
  3904 ;;		_getMain_Exception
  3905 ;;		_setLED
  3906 ;;		_setLights_Switch
  3907 ;;		_setLights_Trigger
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function _PIR_Main
  3915  0025                     _PIR_Main:	
  3916                           
  3917                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  3918                           
  3919                           ;incstack = 0
  3920                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3921  0025  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0026  1303               	bcf	3,6	;RP1=0, select bank1
  3923  0027  1C20               	btfss	__PIR^(0+128),0
  3924  0028  0008               	return
  3925                           
  3926                           ;PIR_B1.c: 18: if (getCDS_Status() == 1 && getMain_Exception() == 0) {
  3927  0029  158A  27F0  118A   	fcall	_getCDS_Status
  3928  002C  3A01               	xorlw	1
  3929  002D  1D03               	skipz
  3930  002E  2844               	goto	l623
  3931  002F  118A  27BC  118A   	fcall	_getMain_Exception
  3932  0032  3800               	iorlw	0
  3933  0033  1D03               	skipz
  3934  0034  2844               	goto	l623
  3935                           
  3936                           ;PIR_B1.c: 19: if (_PIR.Detect == 0) {
  3937  0035  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0036  1303               	bcf	3,6	;RP1=0, select bank1
  3939  0037  1A20               	btfsc	__PIR^(0+128),4
  3940  0038  287C               	goto	l3321
  3941                           
  3942                           ;PIR_B1.c: 20: _PIR.Detect = 1;
  3943  0039  1620               	bsf	__PIR^(0+128),4
  3944                           
  3945                           ;PIR_B1.c: 21: _PIR.Available = 1;
  3946  003A  17A0               	bsf	__PIR^(0+128),7
  3947                           
  3948                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  3949  003B  19A0               	btfsc	__PIR^(0+128),3
  3950  003C  287C               	goto	l3321
  3951                           
  3952                           ;PIR_B1.c: 23: setLED(2, 1);
  3953  003D  01F6               	clrf	setLED@command
  3954  003E  0AF6               	incf	setLED@command,f
  3955  003F  3002               	movlw	2
  3956  0040  118A  2322  118A   	fcall	_setLED
  3957                           
  3958                           ;PIR_B1.c: 24: }
  3959                           ;PIR_B1.c: 25: }
  3960                           ;PIR_B1.c: 26: } else {
  3961  0043  287C               	goto	l3321
  3962  0044                     l623:	
  3963                           
  3964                           ;PIR_B1.c: 27: if (_PIR.Detect == 1) {
  3965  0044  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0045  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0046  1E20               	btfss	__PIR^(0+128),4
  3968  0047  287C               	goto	l3321
  3969                           
  3970                           ;PIR_B1.c: 28: _PIR.Detect = 0;
  3971  0048  1220               	bcf	__PIR^(0+128),4
  3972                           
  3973                           ;PIR_B1.c: 29: _PIR.Available = 0;
  3974  0049  13A0               	bcf	__PIR^(0+128),7
  3975                           
  3976                           ;PIR_B1.c: 30: _PIR.Status = 0;
  3977  004A  1320               	bcf	__PIR^(0+128),6
  3978                           
  3979                           ;PIR_B1.c: 33: _PIR.Time = 0;
  3980  004B  01A5               	clrf	(__PIR^(0+128)+5)
  3981                           
  3982                           ;PIR_B1.c: 34: _PIR.RangeTime1 = 0;
  3983  004C  01CA               	clrf	(__PIR^(0+128)+42)
  3984                           
  3985                           ;PIR_B1.c: 35: _PIR.RangeValue = 15;
  3986  004D  300F               	movlw	15
  3987  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3988  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3989  0050  00DC               	movwf	??_PIR_Main
  3990  0051  085C               	movf	??_PIR_Main,w
  3991  0052  1683               	bsf	3,5	;RP0=1, select bank1
  3992  0053  1303               	bcf	3,6	;RP1=0, select bank1
  3993  0054  00CC               	movwf	(__PIR^(0+128)+44)
  3994                           
  3995                           ;PIR_B1.c: 36: _PIR.RangeCount = 0;
  3996  0055  01CB               	clrf	(__PIR^(0+128)+43)
  3997                           
  3998                           ;PIR_B1.c: 38: setLED(1, 0);
  3999  0056  01F6               	clrf	setLED@command
  4000  0057  3001               	movlw	1
  4001  0058  118A  2322  118A   	fcall	_setLED
  4002                           
  4003                           ;PIR_B1.c: 39: setLED(2, 0);
  4004  005B  01F6               	clrf	setLED@command
  4005  005C  3002               	movlw	2
  4006  005D  118A  2322  118A   	fcall	_setLED
  4007                           
  4008                           ;PIR_B1.c: 40: _PIR.Status = 0;
  4009  0060  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0061  1303               	bcf	3,6	;RP1=0, select bank1
  4011  0062  1320               	bcf	__PIR^(0+128),6
  4012                           
  4013                           ;PIR_B1.c: 41: if (_PIR.OK == 1) {
  4014  0063  1DA0               	btfss	__PIR^(0+128),3
  4015  0064  2867               	goto	l628
  4016                           
  4017                           ;PIR_B1.c: 42: _PIR.Count = 0;
  4018  0065  01C1               	clrf	(__PIR^(0+128)+33)
  4019  0066  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4020  0067                     l628:	
  4021                           
  4022                           ;PIR_B1.c: 43: }
  4023                           ;PIR_B1.c: 44: _PIR.CloseTimeSeconds = 0;
  4024  0067  01C6               	clrf	(__PIR^(0+128)+38)
  4025                           
  4026                           ;PIR_B1.c: 45: _PIR.CloseTimeMinutes = 0;
  4027  0068  01C4               	clrf	(__PIR^(0+128)+36)
  4028  0069  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4029                           
  4030                           ;PIR_B1.c: 50: if (getLights_Status(1) == 1) {
  4031  006A  3001               	movlw	1
  4032  006B  118A  2731  118A   	fcall	_getLights_Status
  4033  006E  3A01               	xorlw	1
  4034  006F  1D03               	skipz
  4035  0070  287C               	goto	l3321
  4036                           
  4037                           ;PIR_B1.c: 51: setLights_Trigger(1, 1);
  4038  0071  01F6               	clrf	setLights_Trigger@command
  4039  0072  0AF6               	incf	setLights_Trigger@command,f
  4040  0073  3001               	movlw	1
  4041  0074  118A  2742  118A   	fcall	_setLights_Trigger
  4042                           
  4043                           ;PIR_B1.c: 52: setLights_Switch(1, 0);
  4044  0077  01F6               	clrf	setLights_Switch@command
  4045  0078  3001               	movlw	1
  4046  0079  118A  2752  118A   	fcall	_setLights_Switch
  4047  007C                     l3321:	
  4048                           
  4049                           ;PIR_B1.c: 53: }
  4050                           ;PIR_B1.c: 56: }
  4051                           ;PIR_B1.c: 57: }
  4052                           ;PIR_B1.c: 59: if (_PIR.ADtoGO == 0) {
  4053  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4054  007D  1303               	bcf	3,6	;RP1=0, select bank1
  4055  007E  18A0               	btfsc	__PIR^(0+128),1
  4056  007F  288F               	goto	l630
  4057                           
  4058                           ;PIR_B1.c: 60: _PIR.Time++;
  4059  0080  3001               	movlw	1
  4060  0081  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0082  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0083  00DC               	movwf	??_PIR_Main
  4063  0084  085C               	movf	??_PIR_Main,w
  4064  0085  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0086  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0087  07A5               	addwf	(__PIR^(0+128)+5),f
  4067                           
  4068                           ;PIR_B1.c: 62: if (1 == 1) {
  4069  0088  0825               	movf	(__PIR^(0+128)+5),w
  4070  0089  3A0A               	xorlw	10
  4071  008A  1D03               	skipz
  4072  008B  299A               	goto	l3403
  4073                           
  4074                           ;PIR_B1.c: 63: _PIR.Time = 0;
  4075  008C  01A5               	clrf	(__PIR^(0+128)+5)
  4076                           
  4077                           ;PIR_B1.c: 64: _PIR.ADtoGO = 1;
  4078  008D  14A0               	bsf	__PIR^(0+128),1
  4079                           
  4080                           ;PIR_B1.c: 65: } else {
  4081  008E  299A               	goto	l3403
  4082  008F                     l630:	
  4083                           ;PIR_B1.c: 67: }
  4084                           ;PIR_B1.c: 68: }
  4085                           ;PIR_B1.c: 69: } else {
  4086                           
  4087                           ;PIR_B1.c: 66: _PIR.Time = 10;
  4088                           
  4089                           
  4090                           ;PIR_B1.c: 70: if (_PIR.GO == 1) {
  4091  008F  1D20               	btfss	__PIR^(0+128),2
  4092  0090  299A               	goto	l3403
  4093                           
  4094                           ;PIR_B1.c: 71: _PIR.GO = 0;
  4095  0091  1120               	bcf	__PIR^(0+128),2
  4096                           
  4097                           ;PIR_B1.c: 72: if (_PIR.Available == 1) {
  4098  0092  1BA0               	btfsc	__PIR^(0+128),7
  4099                           
  4100                           ;PIR_B1.c: 73: if (_PIR.OK == 1) {
  4101  0093  1DA0               	btfss	__PIR^(0+128),3
  4102  0094  299A               	goto	l3403
  4103                           
  4104                           ;PIR_B1.c: 75: _PIR.Time++;
  4105  0095  3001               	movlw	1
  4106  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0098  00DC               	movwf	??_PIR_Main
  4109  0099  085C               	movf	??_PIR_Main,w
  4110  009A  1683               	bsf	3,5	;RP0=1, select bank1
  4111  009B  1303               	bcf	3,6	;RP1=0, select bank1
  4112  009C  07A5               	addwf	(__PIR^(0+128)+5),f
  4113                           
  4114                           ;PIR_B1.c: 76: if (_PIR.Time == 60) {
  4115  009D  0825               	movf	(__PIR^(0+128)+5),w
  4116  009E  3A3C               	xorlw	60
  4117  009F  1D03               	skipz
  4118  00A0  28D5               	goto	l3373
  4119                           
  4120                           ;PIR_B1.c: 77: _PIR.Time = 0;
  4121  00A1  01A5               	clrf	(__PIR^(0+128)+5)
  4122                           
  4123                           ;PIR_B1.c: 78: if (_PIR.RangeCount >= 90) {
  4124  00A2  305A               	movlw	90
  4125  00A3  024B               	subwf	(__PIR^(0+128)+43),w
  4126  00A4  1C03               	skipc
  4127  00A5  28B1               	goto	l3355
  4128                           
  4129                           ;PIR_B1.c: 79: _PIR.RangeTime1 = 0;
  4130  00A6  01CA               	clrf	(__PIR^(0+128)+42)
  4131                           
  4132                           ;PIR_B1.c: 81: if (_PIR.RangeValue == 15) {
  4133  00A7  084C               	movf	(__PIR^(0+128)+44),w
  4134  00A8  3A0F               	xorlw	15
  4135  00A9  1903               	btfsc	3,2
  4136  00AA  28C6               	goto	L11
  4137                           
  4138                           ;PIR_B1.c: 83: } else if (_PIR.RangeValue == 25) {
  4139                           
  4140                           ;PIR_B1.c: 82: _PIR.RangeValue = 25;
  4141  00AB  084C               	movf	(__PIR^(0+128)+44),w
  4142  00AC  3A19               	xorlw	25
  4143  00AD  1D03               	skipz
  4144  00AE  28D4               	goto	l3371
  4145                           
  4146                           ;PIR_B1.c: 84: _PIR.RangeValue = 35;
  4147  00AF  3023               	movlw	35
  4148  00B0  28CD               	goto	L8
  4149  00B1                     l3355:	
  4150                           ;PIR_B1.c: 85: }
  4151                           ;PIR_B1.c: 86: } else if (_PIR.RangeCount <= 10) {
  4152                           
  4153  00B1  300B               	movlw	11
  4154  00B2  024B               	subwf	(__PIR^(0+128)+43),w
  4155  00B3  1803               	skipnc
  4156  00B4  28D4               	goto	l3371
  4157                           
  4158                           ;PIR_B1.c: 87: _PIR.RangeTime1++;
  4159  00B5  3001               	movlw	1
  4160  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  4161  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  4162  00B8  00DC               	movwf	??_PIR_Main
  4163  00B9  085C               	movf	??_PIR_Main,w
  4164  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  4165  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  4166  00BC  07CA               	addwf	(__PIR^(0+128)+42),f
  4167                           
  4168                           ;PIR_B1.c: 88: if (_PIR.RangeTime1 == 2) {
  4169  00BD  084A               	movf	(__PIR^(0+128)+42),w
  4170  00BE  3A02               	xorlw	2
  4171  00BF  1D03               	skipz
  4172  00C0  28D4               	goto	l3371
  4173                           
  4174                           ;PIR_B1.c: 89: _PIR.RangeTime1 = 0;
  4175  00C1  01CA               	clrf	(__PIR^(0+128)+42)
  4176                           
  4177                           ;PIR_B1.c: 91: if (_PIR.RangeValue == 35) {
  4178  00C2  084C               	movf	(__PIR^(0+128)+44),w
  4179  00C3  3A23               	xorlw	35
  4180  00C4  1D03               	skipz
  4181  00C5  28C8               	goto	l3367
  4182  00C6                     L11:	
  4183                           
  4184                           ;PIR_B1.c: 92: _PIR.RangeValue = 25;
  4185  00C6  3019               	movlw	25
  4186  00C7  28CD               	goto	L8
  4187  00C8                     l3367:	
  4188                           ;PIR_B1.c: 93: } else if (_PIR.RangeValue == 25) {
  4189                           
  4190  00C8  084C               	movf	(__PIR^(0+128)+44),w
  4191  00C9  3A19               	xorlw	25
  4192  00CA  1D03               	skipz
  4193  00CB  28D4               	goto	l3371
  4194                           
  4195                           ;PIR_B1.c: 94: _PIR.RangeValue = 15;
  4196  00CC  300F               	movlw	15
  4197  00CD                     L8:	
  4198  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  4199  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  4200  00CF  00DC               	movwf	??_PIR_Main
  4201  00D0  085C               	movf	??_PIR_Main,w
  4202  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  4203  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  4204  00D3  00CC               	movwf	(__PIR^(0+128)+44)
  4205  00D4                     l3371:	
  4206                           
  4207                           ;PIR_B1.c: 95: }
  4208                           ;PIR_B1.c: 96: }
  4209                           ;PIR_B1.c: 97: }
  4210                           ;PIR_B1.c: 98: _PIR.RangeCount = 0;
  4211  00D4  01CB               	clrf	(__PIR^(0+128)+43)
  4212  00D5                     l3373:	
  4213                           
  4214                           ;PIR_B1.c: 99: }
  4215                           ;PIR_B1.c: 102: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))
  4216                           ;PIR_B1.c: 103: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Of
      +                          fset)))) {
  4217  00D5  084C               	movf	(__PIR^(0+128)+44),w
  4218  00D6  074E               	addwf	(__PIR^(0+128)+46),w
  4219  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  4220  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  4221  00D9  00DC               	movwf	??_PIR_Main
  4222  00DA  01DD               	clrf	??_PIR_Main+1
  4223  00DB  0DDD               	rlf	??_PIR_Main+1,f
  4224  00DC  09DC               	comf	??_PIR_Main,f
  4225  00DD  09DD               	comf	??_PIR_Main+1,f
  4226  00DE  0ADC               	incf	??_PIR_Main,f
  4227  00DF  1903               	skipnz
  4228  00E0  0ADD               	incf	??_PIR_Main+1,f
  4229  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  4230  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  4231  00E3  0828               	movf	(__PIR^(0+128)+8),w
  4232  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  4233  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  4234  00E6  075C               	addwf	??_PIR_Main,w
  4235  00E7  00DE               	movwf	??_PIR_Main+2
  4236  00E8  085D               	movf	??_PIR_Main+1,w
  4237  00E9  1803               	skipnc
  4238  00EA  0A5D               	incf	??_PIR_Main+1,w
  4239  00EB  00DF               	movwf	??_PIR_Main+3
  4240  00EC  085F               	movf	??_PIR_Main+3,w
  4241  00ED  3A80               	xorlw	128
  4242  00EE  3C80               	sublw	128
  4243  00EF  1D03               	skipz
  4244  00F0  28F5               	goto	u3655
  4245  00F1  085E               	movf	??_PIR_Main+2,w
  4246  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  4247  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  4248  00F4  0221               	subwf	(__PIR^(0+128)+1),w
  4249  00F5                     u3655:	
  4250  00F5  1C03               	skipc
  4251  00F6  2921               	goto	l3383
  4252  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  4253  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  4254  00F9  084C               	movf	(__PIR^(0+128)+44),w
  4255  00FA  074E               	addwf	(__PIR^(0+128)+46),w
  4256  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  4257  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  4258  00FD  00DC               	movwf	??_PIR_Main
  4259  00FE  01DD               	clrf	??_PIR_Main+1
  4260  00FF  0DDD               	rlf	??_PIR_Main+1,f
  4261  0100  1683               	bsf	3,5	;RP0=1, select bank1
  4262  0101  1303               	bcf	3,6	;RP1=0, select bank1
  4263  0102  0828               	movf	(__PIR^(0+128)+8),w
  4264  0103  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0104  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0105  075C               	addwf	??_PIR_Main,w
  4267  0106  00DE               	movwf	??_PIR_Main+2
  4268  0107  3000               	movlw	0
  4269  0108  1803               	skipnc
  4270  0109  3001               	movlw	1
  4271  010A  075D               	addwf	??_PIR_Main+1,w
  4272  010B  00DF               	movwf	??_PIR_Main+3
  4273  010C  085F               	movf	??_PIR_Main+3,w
  4274  010D  3A80               	xorlw	128
  4275  010E  00E0               	movwf	??_PIR_Main+4
  4276  010F  3080               	movlw	128
  4277  0110  0260               	subwf	??_PIR_Main+4,w
  4278  0111  1D03               	skipz
  4279  0112  2919               	goto	u3665
  4280  0113  1683               	bsf	3,5	;RP0=1, select bank1
  4281  0114  1303               	bcf	3,6	;RP1=0, select bank1
  4282  0115  0821               	movf	(__PIR^(0+128)+1),w
  4283  0116  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0117  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0118  025E               	subwf	??_PIR_Main+2,w
  4286  0119                     u3665:	
  4287  0119  1C03               	skipc
  4288  011A  2921               	goto	l3383
  4289                           
  4290                           ;PIR_B1.c: 104: _PIR.Count = 0;
  4291  011B  1683               	bsf	3,5	;RP0=1, select bank1
  4292  011C  1303               	bcf	3,6	;RP1=0, select bank1
  4293  011D  01C1               	clrf	(__PIR^(0+128)+33)
  4294  011E  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4295                           
  4296                           ;PIR_B1.c: 105: setLED(1, 0);
  4297  011F  01F6               	clrf	setLED@command
  4298  0120  2989               	goto	L12
  4299  0121                     l3383:	
  4300                           ;PIR_B1.c: 107: } else {
  4301                           
  4302                           ;PIR_B1.c: 106: setLED(2, 0);
  4303                           
  4304                           
  4305                           ;PIR_B1.c: 108: _PIR.RangeCount++;
  4306  0121  3001               	movlw	1
  4307  0122  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0123  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0124  00DC               	movwf	??_PIR_Main
  4310  0125  085C               	movf	??_PIR_Main,w
  4311  0126  1683               	bsf	3,5	;RP0=1, select bank1
  4312  0127  1303               	bcf	3,6	;RP1=0, select bank1
  4313  0128  07CB               	addwf	(__PIR^(0+128)+43),f
  4314                           
  4315                           ;PIR_B1.c: 109: _PIR.Count++;
  4316  0129  3001               	movlw	1
  4317  012A  07C1               	addwf	(__PIR^(0+128)+33),f
  4318  012B  1803               	skipnc
  4319  012C  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4320  012D  3000               	movlw	0
  4321  012E  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4322                           
  4323                           ;PIR_B1.c: 110: if (_PIR.Count == _PIR.TriggerValue) {
  4324  012F  0843               	movf	(__PIR^(0+128)+35),w
  4325  0130  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0131  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0132  00DC               	movwf	??_PIR_Main
  4328  0133  01DD               	clrf	??_PIR_Main+1
  4329  0134  1683               	bsf	3,5	;RP0=1, select bank1
  4330  0135  1303               	bcf	3,6	;RP1=0, select bank1
  4331  0136  0842               	movf	((__PIR+1)^(0+128)+33),w
  4332  0137  1283               	bcf	3,5	;RP0=0, select bank0
  4333  0138  1303               	bcf	3,6	;RP1=0, select bank0
  4334  0139  065D               	xorwf	??_PIR_Main+1,w
  4335  013A  1D03               	skipz
  4336  013B  2942               	goto	u3675
  4337  013C  1683               	bsf	3,5	;RP0=1, select bank1
  4338  013D  1303               	bcf	3,6	;RP1=0, select bank1
  4339  013E  0841               	movf	(__PIR^(0+128)+33),w
  4340  013F  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0140  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0141  065C               	xorwf	??_PIR_Main,w
  4343  0142                     u3675:	
  4344  0142  1D03               	skipz
  4345  0143  299A               	goto	l3403
  4346                           
  4347                           ;PIR_B1.c: 111: _PIR.Count = 0;
  4348  0144  1683               	bsf	3,5	;RP0=1, select bank1
  4349  0145  1303               	bcf	3,6	;RP1=0, select bank1
  4350  0146  01C1               	clrf	(__PIR^(0+128)+33)
  4351  0147  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4352                           
  4353                           ;PIR_B1.c: 112: _PIR.CloseTimeSeconds = 0;
  4354  0148  01C6               	clrf	(__PIR^(0+128)+38)
  4355                           
  4356                           ;PIR_B1.c: 113: _PIR.CloseTimeMinutes = 0;
  4357  0149  01C4               	clrf	(__PIR^(0+128)+36)
  4358  014A  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4359                           
  4360                           ;PIR_B1.c: 117: if (getLights_Status(1) == 0) {
  4361  014B  3001               	movlw	1
  4362  014C  118A  2731  118A   	fcall	_getLights_Status
  4363  014F  3800               	iorlw	0
  4364  0150  1D03               	skipz
  4365  0151  295E               	goto	l3395
  4366                           
  4367                           ;PIR_B1.c: 118: setLights_Trigger(1, 1);
  4368  0152  01F6               	clrf	setLights_Trigger@command
  4369  0153  0AF6               	incf	setLights_Trigger@command,f
  4370  0154  3001               	movlw	1
  4371  0155  118A  2742  118A   	fcall	_setLights_Trigger
  4372                           
  4373                           ;PIR_B1.c: 119: setLights_Switch(1, 1);
  4374  0158  01F6               	clrf	setLights_Switch@command
  4375  0159  0AF6               	incf	setLights_Switch@command,f
  4376  015A  3001               	movlw	1
  4377  015B  118A  2752  118A   	fcall	_setLights_Switch
  4378  015E                     l3395:	
  4379                           
  4380                           ;PIR_B1.c: 120: }
  4381                           ;PIR_B1.c: 124: _PIR.Status = 1;
  4382  015E  1683               	bsf	3,5	;RP0=1, select bank1
  4383  015F  1303               	bcf	3,6	;RP1=0, select bank1
  4384  0160  1720               	bsf	__PIR^(0+128),6
  4385                           
  4386                           ;PIR_B1.c: 126: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4387  0161  084C               	movf	(__PIR^(0+128)+44),w
  4388  0162  074E               	addwf	(__PIR^(0+128)+46),w
  4389  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0165  00DC               	movwf	??_PIR_Main
  4392  0166  01DD               	clrf	??_PIR_Main+1
  4393  0167  0DDD               	rlf	??_PIR_Main+1,f
  4394  0168  09DC               	comf	??_PIR_Main,f
  4395  0169  09DD               	comf	??_PIR_Main+1,f
  4396  016A  0ADC               	incf	??_PIR_Main,f
  4397  016B  1903               	skipnz
  4398  016C  0ADD               	incf	??_PIR_Main+1,f
  4399  016D  1683               	bsf	3,5	;RP0=1, select bank1
  4400  016E  1303               	bcf	3,6	;RP1=0, select bank1
  4401  016F  0828               	movf	(__PIR^(0+128)+8),w
  4402  0170  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0171  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0172  075C               	addwf	??_PIR_Main,w
  4405  0173  00DE               	movwf	??_PIR_Main+2
  4406  0174  085D               	movf	??_PIR_Main+1,w
  4407  0175  1803               	skipnc
  4408  0176  0A5D               	incf	??_PIR_Main+1,w
  4409  0177  00DF               	movwf	??_PIR_Main+3
  4410  0178  085F               	movf	??_PIR_Main+3,w
  4411  0179  3A80               	xorlw	128
  4412  017A  00E0               	movwf	??_PIR_Main+4
  4413  017B  3080               	movlw	128
  4414  017C  0260               	subwf	??_PIR_Main+4,w
  4415  017D  1D03               	skipz
  4416  017E  2985               	goto	u3695
  4417  017F  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0180  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0181  0821               	movf	(__PIR^(0+128)+1),w
  4420  0182  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0183  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0184  025E               	subwf	??_PIR_Main+2,w
  4423  0185                     u3695:	
  4424  0185  1C03               	skipc
  4425  0186  298F               	goto	l3401
  4426                           
  4427                           ;PIR_B1.c: 127: setLED(1, 1);
  4428  0187  01F6               	clrf	setLED@command
  4429  0188  0AF6               	incf	setLED@command,f
  4430  0189                     L12:	
  4431  0189  3001               	movlw	1
  4432  018A  118A  2322  118A   	fcall	_setLED
  4433                           
  4434                           ;PIR_B1.c: 128: setLED(2, 0);
  4435  018D  01F6               	clrf	setLED@command
  4436  018E  2996               	goto	L9
  4437  018F                     l3401:	
  4438                           ;PIR_B1.c: 129: } else {
  4439                           
  4440                           
  4441                           ;PIR_B1.c: 130: setLED(1, 0);
  4442  018F  01F6               	clrf	setLED@command
  4443  0190  3001               	movlw	1
  4444  0191  118A  2322  118A   	fcall	_setLED
  4445                           
  4446                           ;PIR_B1.c: 131: setLED(2, 1);
  4447  0194  01F6               	clrf	setLED@command
  4448  0195  0AF6               	incf	setLED@command,f
  4449  0196                     L9:	
  4450  0196  3002               	movlw	2
  4451  0197  118A  2322  118A   	fcall	_setLED
  4452  019A                     l3403:	
  4453                           
  4454                           ;PIR_B1.c: 132: }
  4455                           ;PIR_B1.c: 133: }
  4456                           ;PIR_B1.c: 134: }
  4457                           ;PIR_B1.c: 135: }
  4458                           ;PIR_B1.c: 136: }
  4459                           ;PIR_B1.c: 137: }
  4460                           ;PIR_B1.c: 138: }
  4461                           ;PIR_B1.c: 139: if (_PIR.OK == 0) {
  4462  019A  1683               	bsf	3,5	;RP0=1, select bank1
  4463  019B  1303               	bcf	3,6	;RP1=0, select bank1
  4464  019C  19A0               	btfsc	__PIR^(0+128),3
  4465  019D  29B4               	goto	l3413
  4466                           
  4467                           ;PIR_B1.c: 140: _PIR.Count++;
  4468  019E  3001               	movlw	1
  4469  019F  07C1               	addwf	(__PIR^(0+128)+33),f
  4470  01A0  1803               	skipnc
  4471  01A1  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4472  01A2  3000               	movlw	0
  4473  01A3  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4474                           
  4475                           ;PIR_B1.c: 141: if (_PIR.Count == 3000) {
  4476  01A4  300B               	movlw	11
  4477  01A5  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4478  01A6  1D03               	skipz
  4479  01A7  29AA               	goto	u3715
  4480  01A8  30B8               	movlw	184
  4481  01A9  0641               	xorwf	(__PIR^(0+128)+33),w
  4482  01AA                     u3715:	
  4483  01AA  1D03               	skipz
  4484  01AB  29B4               	goto	l3413
  4485                           
  4486                           ;PIR_B1.c: 142: _PIR.Count = 0;
  4487  01AC  01C1               	clrf	(__PIR^(0+128)+33)
  4488  01AD  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4489                           
  4490                           ;PIR_B1.c: 143: _PIR.OK = 1;
  4491  01AE  15A0               	bsf	__PIR^(0+128),3
  4492                           
  4493                           ;PIR_B1.c: 144: setLED(2, 0);
  4494  01AF  01F6               	clrf	setLED@command
  4495  01B0  3002               	movlw	2
  4496  01B1  118A  2322  118A   	fcall	_setLED
  4497  01B4                     l3413:	
  4498                           
  4499                           ;PIR_B1.c: 145: }
  4500                           ;PIR_B1.c: 146: }
  4501                           ;PIR_B1.c: 147: if (_PIR.Status == 1) {
  4502  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  4503  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  4504  01B6  1F20               	btfss	__PIR^(0+128),6
  4505  01B7  0008               	return
  4506                           
  4507                           ;PIR_B1.c: 148: _PIR.CloseTimeSeconds++;
  4508  01B8  3001               	movlw	1
  4509  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4510  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  4511  01BB  00DC               	movwf	??_PIR_Main
  4512  01BC  085C               	movf	??_PIR_Main,w
  4513  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  4514  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  4515  01BF  07C6               	addwf	(__PIR^(0+128)+38),f
  4516                           
  4517                           ;PIR_B1.c: 149: if (_PIR.CloseTimeSeconds == 100) {
  4518  01C0  0846               	movf	(__PIR^(0+128)+38),w
  4519  01C1  3A64               	xorlw	100
  4520  01C2  1D03               	skipz
  4521  01C3  0008               	return
  4522                           
  4523                           ;PIR_B1.c: 150: _PIR.CloseTimeSeconds = 0;
  4524  01C4  01C6               	clrf	(__PIR^(0+128)+38)
  4525                           
  4526                           ;PIR_B1.c: 151: _PIR.CloseTimeMinutes++;
  4527  01C5  3001               	movlw	1
  4528  01C6  07C4               	addwf	(__PIR^(0+128)+36),f
  4529  01C7  1803               	skipnc
  4530  01C8  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4531  01C9  3000               	movlw	0
  4532  01CA  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4533                           
  4534                           ;PIR_B1.c: 152: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4535  01CB  0848               	movf	((__PIR+1)^(0+128)+39),w
  4536  01CC  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4537  01CD  1D03               	skipz
  4538  01CE  29D1               	goto	u3745
  4539  01CF  0847               	movf	(__PIR^(0+128)+39),w
  4540  01D0  0644               	xorwf	(__PIR^(0+128)+36),w
  4541  01D1                     u3745:	
  4542  01D1  1D03               	skipz
  4543  01D2  0008               	return
  4544                           
  4545                           ;PIR_B1.c: 153: _PIR.CloseTimeMinutes = 0;
  4546  01D3  01C4               	clrf	(__PIR^(0+128)+36)
  4547  01D4  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4548                           
  4549                           ;PIR_B1.c: 154: _PIR.Status = 0;
  4550  01D5  1320               	bcf	__PIR^(0+128),6
  4551                           
  4552                           ;PIR_B1.c: 158: if (getLights_Status(1) == 1) {
  4553  01D6  3001               	movlw	1
  4554  01D7  118A  2731  118A   	fcall	_getLights_Status
  4555  01DA  3A01               	xorlw	1
  4556  01DB  1D03               	skipz
  4557  01DC  0008               	return
  4558                           
  4559                           ;PIR_B1.c: 159: setLights_Trigger(1, 1);
  4560  01DD  01F6               	clrf	setLights_Trigger@command
  4561  01DE  0AF6               	incf	setLights_Trigger@command,f
  4562  01DF  3001               	movlw	1
  4563  01E0  118A  2742  118A   	fcall	_setLights_Trigger
  4564                           
  4565                           ;PIR_B1.c: 160: setLights_Switch(1, 0);
  4566  01E3  01F6               	clrf	setLights_Switch@command
  4567  01E4  3001               	movlw	1
  4568  01E5  118A  2752         	fcall	_setLights_Switch
  4569  01E7  0008               	return
  4570  01E8                     __end_of_PIR_Main:	
  4571                           
  4572                           	psect	text20
  4573  0742                     __ptext20:	
  4574 ;; *************** function _setLights_Trigger *****************
  4575 ;; Defined at:
  4576 ;;		line 132 in file "../src/TriacRelay_B1.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  lights          1    wreg     unsigned char 
  4579 ;;  command         1    6[COMMON] unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  lights          1    0[BANK0 ] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;		None               void
  4584 ;; Registers used:
  4585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4591 ;;      Params:         1       0       0       0
  4592 ;;      Locals:         0       1       0       0
  4593 ;;      Temps:          0       0       0       0
  4594 ;;      Totals:         1       1       0       0
  4595 ;;Total ram usage:        2 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:    3
  4598 ;; This function calls:
  4599 ;;		_LightsPointSelect
  4600 ;; This function is called by:
  4601 ;;		_PIR_Main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function _setLights_Trigger
  4607  0742                     _setLights_Trigger:	
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4611                           ;setLights_Trigger@lights stored from wreg
  4612  0742  1283               	bcf	3,5	;RP0=0, select bank0
  4613  0743  1303               	bcf	3,6	;RP1=0, select bank0
  4614  0744  00DA               	movwf	setLights_Trigger@lights
  4615                           
  4616                           ;TriacRelay_B1.c: 133: LightsPointSelect(lights);
  4617  0745  085A               	movf	setLights_Trigger@lights,w
  4618  0746  118A  27D4         	fcall	_LightsPointSelect
  4619                           
  4620                           ;TriacRelay_B1.c: 134: Lights->Trigger = command;
  4621  0748  1283               	bcf	3,5	;RP0=0, select bank0
  4622  0749  1303               	bcf	3,6	;RP1=0, select bank0
  4623  074A  083B               	movf	_Lights,w
  4624  074B  0084               	movwf	4
  4625  074C  0876               	movf	setLights_Trigger@command,w
  4626  074D  1383               	bcf	3,7	;select IRP bank0
  4627  074E  1280               	bcf	0,5
  4628  074F  1D03               	skipz
  4629  0750  1680               	bsf	0,5
  4630  0751  0008               	return
  4631  0752                     __end_of_setLights_Trigger:	
  4632                           
  4633                           	psect	text21
  4634  0752                     __ptext21:	
  4635 ;; *************** function _setLights_Switch *****************
  4636 ;; Defined at:
  4637 ;;		line 137 in file "../src/TriacRelay_B1.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  lights          1    wreg     unsigned char 
  4640 ;;  command         1    6[COMMON] unsigned char 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  lights          1    0[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4652 ;;      Params:         1       0       0       0
  4653 ;;      Locals:         0       1       0       0
  4654 ;;      Temps:          0       0       0       0
  4655 ;;      Totals:         1       1       0       0
  4656 ;;Total ram usage:        2 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    3
  4659 ;; This function calls:
  4660 ;;		_LightsPointSelect
  4661 ;; This function is called by:
  4662 ;;		_PIR_Main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _setLights_Switch
  4668  0752                     _setLights_Switch:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _setLights_Switch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4672                           ;setLights_Switch@lights stored from wreg
  4673  0752  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0753  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0754  00DA               	movwf	setLights_Switch@lights
  4676                           
  4677                           ;TriacRelay_B1.c: 138: LightsPointSelect(lights);
  4678  0755  085A               	movf	setLights_Switch@lights,w
  4679  0756  118A  27D4         	fcall	_LightsPointSelect
  4680                           
  4681                           ;TriacRelay_B1.c: 139: Lights->Switch = command;
  4682  0758  1283               	bcf	3,5	;RP0=0, select bank0
  4683  0759  1303               	bcf	3,6	;RP1=0, select bank0
  4684  075A  083B               	movf	_Lights,w
  4685  075B  0084               	movwf	4
  4686  075C  0876               	movf	setLights_Switch@command,w
  4687  075D  1383               	bcf	3,7	;select IRP bank0
  4688  075E  1300               	bcf	0,6
  4689  075F  1D03               	skipz
  4690  0760  1700               	bsf	0,6
  4691  0761  0008               	return
  4692  0762                     __end_of_setLights_Switch:	
  4693                           
  4694                           	psect	text22
  4695  07BC                     __ptext22:	
  4696 ;; *************** function _getMain_Exception *****************
  4697 ;; Defined at:
  4698 ;;		line 284 in file "../src/Main_B1.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  result          1    4[COMMON] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      unsigned char 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4712 ;;      Params:         0       0       0       0
  4713 ;;      Locals:         1       0       0       0
  4714 ;;      Temps:          0       0       0       0
  4715 ;;      Totals:         1       0       0       0
  4716 ;;Total ram usage:        1 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    2
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_PIR_Main
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _getMain_Exception
  4728  07BC                     _getMain_Exception:	
  4729                           
  4730                           ;Main_B1.c: 285: char result = 0;
  4731                           
  4732                           ;incstack = 0
  4733                           ; Regs used in _getMain_Exception: [wreg+status,2+status,0]
  4734  07BC  01F4               	clrf	getMain_Exception@result
  4735                           
  4736                           ;Main_B1.c: 293: if (result == 0) {
  4737  07BD  08F4               	movf	getMain_Exception@result,f
  4738  07BE  1D03               	skipz
  4739  07BF  2FC6               	goto	l2263
  4740                           
  4741                           ;Main_B1.c: 294: result = Temp.ERROR == 1 ? 1 : 0;
  4742  07C0  3000               	movlw	0
  4743  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  4744  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  4745  07C3  18BC               	btfsc	_Temp,1
  4746  07C4  3001               	movlw	1
  4747  07C5  00F4               	movwf	getMain_Exception@result
  4748  07C6                     l2263:	
  4749                           
  4750                           ;Main_B1.c: 295: }
  4751                           ;Main_B1.c: 297: return result;
  4752  07C6  0874               	movf	getMain_Exception@result,w
  4753  07C7  0008               	return
  4754  07C8                     __end_of_getMain_Exception:	
  4755                           
  4756                           	psect	text23
  4757  0731                     __ptext23:	
  4758 ;; *************** function _getLights_Status *****************
  4759 ;; Defined at:
  4760 ;;		line 167 in file "../src/TriacRelay_B1.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  lights          1    wreg     unsigned char 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  lights          1    0[BANK0 ] unsigned char 
  4765 ;;  result          1    1[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4775 ;;      Params:         0       0       0       0
  4776 ;;      Locals:         0       2       0       0
  4777 ;;      Temps:          0       0       0       0
  4778 ;;      Totals:         0       2       0       0
  4779 ;;Total ram usage:        2 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    3
  4782 ;; This function calls:
  4783 ;;		_LightsPointSelect
  4784 ;; This function is called by:
  4785 ;;		_PIR_Main
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           
  4790                           ;psect for function _getLights_Status
  4791  0731                     _getLights_Status:	
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4795                           ;getLights_Status@lights stored from wreg
  4796  0731  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0732  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0733  00DA               	movwf	getLights_Status@lights
  4799                           
  4800                           ;TriacRelay_B1.c: 168: LightsPointSelect(lights);
  4801  0734  085A               	movf	getLights_Status@lights,w
  4802  0735  118A  27D4         	fcall	_LightsPointSelect
  4803                           
  4804                           ;TriacRelay_B1.c: 169: char result = Lights->Status;
  4805  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4806  0738  1303               	bcf	3,6	;RP1=0, select bank0
  4807  0739  083B               	movf	_Lights,w
  4808  073A  0084               	movwf	4
  4809  073B  3000               	movlw	0
  4810  073C  1383               	bcf	3,7	;select IRP bank0
  4811  073D  1900               	btfsc	0,2
  4812  073E  3001               	movlw	1
  4813  073F  00DB               	movwf	getLights_Status@result
  4814                           
  4815                           ;TriacRelay_B1.c: 170: return result;
  4816  0740  085B               	movf	getLights_Status@result,w
  4817  0741  0008               	return
  4818  0742                     __end_of_getLights_Status:	
  4819                           
  4820                           	psect	text24
  4821  0FF0                     __ptext24:	
  4822 ;; *************** function _getCDS_Status *****************
  4823 ;; Defined at:
  4824 ;;		line 44 in file "../src/CDS_B1.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  result          1    4[COMMON] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      unsigned char 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4838 ;;      Params:         0       0       0       0
  4839 ;;      Locals:         1       0       0       0
  4840 ;;      Temps:          0       0       0       0
  4841 ;;      Totals:         1       0       0       0
  4842 ;;Total ram usage:        1 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    2
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_PIR_Main
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function _getCDS_Status
  4854  0FF0                     _getCDS_Status:	
  4855                           
  4856                           ;CDS_B1.c: 45: char result = _CDS.Status;
  4857                           
  4858                           ;incstack = 0
  4859                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4860  0FF0  3000               	movlw	0
  4861  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0FF3  1A33               	btfsc	__CDS,4
  4864  0FF4  3001               	movlw	1
  4865  0FF5  00F4               	movwf	getCDS_Status@result
  4866                           
  4867                           ;CDS_B1.c: 46: return result;
  4868  0FF6  0874               	movf	getCDS_Status@result,w
  4869  0FF7  0008               	return
  4870  0FF8                     __end_of_getCDS_Status:	
  4871                           
  4872                           	psect	text25
  4873  0762                     __ptext25:	
  4874 ;; *************** function _PIR_Initialization *****************
  4875 ;; Defined at:
  4876 ;;		line 7 in file "../src/PIR_B1.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;		None               void
  4883 ;; Registers used:
  4884 ;;		wreg
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4890 ;;      Params:         0       0       0       0
  4891 ;;      Locals:         0       0       0       0
  4892 ;;      Temps:          1       0       0       0
  4893 ;;      Totals:         1       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    2
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_main
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           
  4905                           ;psect for function _PIR_Initialization
  4906  0762                     _PIR_Initialization:	
  4907                           
  4908                           ;PIR_B1.c: 8: _PIR.Enable = 1;
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in _PIR_Initialization: [wreg]
  4912  0762  1683               	bsf	3,5	;RP0=1, select bank1
  4913  0763  1303               	bcf	3,6	;RP1=0, select bank1
  4914  0764  1420               	bsf	__PIR^(0+128),0
  4915                           
  4916                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  4917  0765  300F               	movlw	15
  4918  0766  00F4               	movwf	??_PIR_Initialization
  4919  0767  0874               	movf	??_PIR_Initialization,w
  4920  0768  00CC               	movwf	(__PIR^(0+128)+44)
  4921                           
  4922                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 150;
  4923  0769  3096               	movlw	150
  4924  076A  00C7               	movwf	(__PIR^(0+128)+39)
  4925  076B  3000               	movlw	0
  4926  076C  00C8               	movwf	(__PIR^(0+128)+40)
  4927                           
  4928                           ;PIR_B1.c: 11: _PIR.TriggerValue = 2;
  4929  076D  3002               	movlw	2
  4930  076E  00F4               	movwf	??_PIR_Initialization
  4931  076F  0874               	movf	??_PIR_Initialization,w
  4932  0770  00C3               	movwf	(__PIR^(0+128)+35)
  4933  0771  0008               	return
  4934  0772                     __end_of_PIR_Initialization:	
  4935                           
  4936                           	psect	text26
  4937  0791                     __ptext26:	
  4938 ;; *************** function _Mcu_Initialization *****************
  4939 ;; Defined at:
  4940 ;;		line 30 in file "../src/MCU_B1.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4954 ;;      Params:         0       0       0       0
  4955 ;;      Locals:         0       0       0       0
  4956 ;;      Temps:          0       0       0       0
  4957 ;;      Totals:         0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    3
  4961 ;; This function calls:
  4962 ;;		_ADC_Set
  4963 ;;		_Fosc_Set
  4964 ;;		_IO_Set
  4965 ;;		_TMR1_Set
  4966 ;;		_WDT_Set
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _Mcu_Initialization
  4974  0791                     _Mcu_Initialization:	
  4975                           
  4976                           ;MCU_B1.c: 32: Fosc_Set();
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4980  0791  158A  27D6  118A   	fcall	_Fosc_Set
  4981                           
  4982                           ;MCU_B1.c: 34: IO_Set();
  4983  0794  118A  26F6  118A   	fcall	_IO_Set
  4984                           
  4985                           ;MCU_B1.c: 36: ;;
  4986                           ;MCU_B1.c: 38: TMR1_Set();
  4987  0797  118A  27A0  118A   	fcall	_TMR1_Set
  4988                           
  4989                           ;MCU_B1.c: 40: ADC_Set();
  4990  079A  158A  27E1  118A   	fcall	_ADC_Set
  4991                           
  4992                           ;MCU_B1.c: 42: ;;
  4993                           ;MCU_B1.c: 44: ;;
  4994                           ;MCU_B1.c: 46: ;;
  4995                           ;MCU_B1.c: 48: ;;
  4996                           ;MCU_B1.c: 50: ;;
  4997                           ;MCU_B1.c: 52: WDT_Set();
  4998  079D  118A  27C8         	fcall	_WDT_Set
  4999  079F  0008               	return
  5000  07A0                     __end_of_Mcu_Initialization:	
  5001                           
  5002                           	psect	text27
  5003  07C8                     __ptext27:	
  5004 ;; *************** function _WDT_Set *****************
  5005 ;; Defined at:
  5006 ;;		line 1005 in file "../src/MCU_B1.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5020 ;;      Params:         0       0       0       0
  5021 ;;      Locals:         0       0       0       0
  5022 ;;      Temps:          1       0       0       0
  5023 ;;      Totals:         1       0       0       0
  5024 ;;Total ram usage:        1 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_Mcu_Initialization
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _WDT_Set
  5036  07C8                     _WDT_Set:	
  5037                           
  5038                           ;MCU_B1.c: 1007: PSA = 1;
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _WDT_Set: [wreg]
  5042  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  5043  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  5044  07CA  1581               	bsf	1,3	;volatile
  5045                           
  5046                           ;MCU_B1.c: 1008: PS0 = 1;
  5047  07CB  1401               	bsf	1,0	;volatile
  5048                           
  5049                           ;MCU_B1.c: 1009: PS1 = 1;
  5050  07CC  1481               	bsf	1,1	;volatile
  5051                           
  5052                           ;MCU_B1.c: 1010: PS2 = 1;
  5053  07CD  1501               	bsf	1,2	;volatile
  5054                           
  5055                           ;MCU_B1.c: 1014: WDT.Enable = 1;
  5056  07CE  1477               	bsf	_WDT,0
  5057                           
  5058                           ;MCU_B1.c: 1015: WDT.Timer = 10;
  5059  07CF  300A               	movlw	10
  5060  07D0  00F4               	movwf	??_WDT_Set
  5061  07D1  0874               	movf	??_WDT_Set,w
  5062  07D2  00F8               	movwf	_WDT+1
  5063  07D3  0008               	return
  5064  07D4                     __end_of_WDT_Set:	
  5065                           
  5066                           	psect	text28
  5067  07A0                     __ptext28:	
  5068 ;; *************** function _TMR1_Set *****************
  5069 ;; Defined at:
  5070 ;;		line 199 in file "../src/MCU_B1.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;		None
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;		None               void
  5077 ;; Registers used:
  5078 ;;		wreg
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5084 ;;      Params:         0       0       0       0
  5085 ;;      Locals:         0       0       0       0
  5086 ;;      Temps:          0       0       0       0
  5087 ;;      Totals:         0       0       0       0
  5088 ;;Total ram usage:        0 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    2
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_Mcu_Initialization
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           
  5099                           ;psect for function _TMR1_Set
  5100  07A0                     _TMR1_Set:	
  5101                           
  5102                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5103                           
  5104                           ;incstack = 0
  5105                           ; Regs used in _TMR1_Set: [wreg]
  5106  07A0  3041               	movlw	65
  5107  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  5108  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  5109  07A3  0090               	movwf	16	;volatile
  5110                           
  5111                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5112  07A4  30FA               	movlw	250
  5113  07A5  008F               	movwf	15	;volatile
  5114                           
  5115                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5116  07A6  3038               	movlw	56
  5117  07A7  008E               	movwf	14	;volatile
  5118                           
  5119                           ;MCU_B1.c: 203: TMR1IE = 1;
  5120  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  5121  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  5122  07AA  140C               	bsf	12,0	;volatile
  5123                           
  5124                           ;MCU_B1.c: 204: PEIE = 1;
  5125  07AB  170B               	bsf	11,6	;volatile
  5126                           
  5127                           ;MCU_B1.c: 205: GIE = 1;
  5128  07AC  178B               	bsf	11,7	;volatile
  5129  07AD  0008               	return
  5130  07AE                     __end_of_TMR1_Set:	
  5131                           
  5132                           	psect	text29
  5133  06F6                     __ptext29:	
  5134 ;; *************** function _IO_Set *****************
  5135 ;; Defined at:
  5136 ;;		line 60 in file "../src/MCU_B1.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;		None               void
  5143 ;; Registers used:
  5144 ;;		wreg, status,2
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5150 ;;      Params:         0       0       0       0
  5151 ;;      Locals:         0       0       0       0
  5152 ;;      Temps:          0       0       0       0
  5153 ;;      Totals:         0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    2
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_Mcu_Initialization
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _IO_Set
  5166  06F6                     _IO_Set:	
  5167                           
  5168                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _IO_Set: [wreg+status,2]
  5172  06F6  302F               	movlw	47
  5173  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  5174  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  5175  06F9  0085               	movwf	5	;volatile
  5176                           
  5177                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5178  06FA  3001               	movlw	1
  5179  06FB  0086               	movwf	6	;volatile
  5180                           
  5181                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5182  06FC  0187               	clrf	7	;volatile
  5183                           
  5184                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5185  06FD  3007               	movlw	7
  5186  06FE  1683               	bsf	3,5	;RP0=1, select bank3
  5187  06FF  1703               	bsf	3,6	;RP1=1, select bank3
  5188  0700  0085               	movwf	5	;volatile
  5189                           
  5190                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5191  0701  3001               	movlw	1
  5192  0702  0086               	movwf	6	;volatile
  5193                           
  5194                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5195  0703  30AF               	movlw	175
  5196  0704  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0705  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0706  0085               	movwf	5	;volatile
  5199                           
  5200                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5201  0707  3001               	movlw	1
  5202  0708  0086               	movwf	6	;volatile
  5203                           
  5204                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5205  0709  0187               	clrf	7	;volatile
  5206  070A  0008               	return
  5207  070B                     __end_of_IO_Set:	
  5208                           
  5209                           	psect	text30
  5210  0FD6                     __ptext30:	
  5211 ;; *************** function _Fosc_Set *****************
  5212 ;; Defined at:
  5213 ;;		line 56 in file "../src/MCU_B1.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;		None               void
  5220 ;; Registers used:
  5221 ;;		wreg
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5227 ;;      Params:         0       0       0       0
  5228 ;;      Locals:         0       0       0       0
  5229 ;;      Temps:          0       0       0       0
  5230 ;;      Totals:         0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    2
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_Mcu_Initialization
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           
  5242                           ;psect for function _Fosc_Set
  5243  0FD6                     _Fosc_Set:	
  5244                           
  5245                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5246                           
  5247                           ;incstack = 0
  5248                           ; Regs used in _Fosc_Set: [wreg]
  5249  0FD6  303C               	movlw	60
  5250  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  5251  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  5252  0FD9  0090               	movwf	16	;volatile
  5253  0FDA  0008               	return
  5254  0FDB                     __end_of_Fosc_Set:	
  5255                           
  5256                           	psect	text31
  5257  0FE1                     __ptext31:	
  5258 ;; *************** function _ADC_Set *****************
  5259 ;; Defined at:
  5260 ;;		line 419 in file "../src/MCU_B1.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;		None               void
  5267 ;; Registers used:
  5268 ;;		wreg
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5274 ;;      Params:         0       0       0       0
  5275 ;;      Locals:         0       0       0       0
  5276 ;;      Temps:          0       0       0       0
  5277 ;;      Totals:         0       0       0       0
  5278 ;;Total ram usage:        0 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    2
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_Mcu_Initialization
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _ADC_Set
  5290  0FE1                     _ADC_Set:	
  5291                           
  5292                           ;MCU_B1.c: 420: ADCON1 = 0x72;
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in _ADC_Set: [wreg]
  5296  0FE1  3072               	movlw	114
  5297  0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  5298  0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  5299  0FE4  009F               	movwf	31	;volatile
  5300                           
  5301                           ;MCU_B1.c: 421: FVRCON = 0xc1;
  5302  0FE5  30C1               	movlw	193
  5303  0FE6  009D               	movwf	29	;volatile
  5304  0FE7  0008               	return
  5305  0FE8                     __end_of_ADC_Set:	
  5306                           
  5307                           	psect	text32
  5308  0FE8                     __ptext32:	
  5309 ;; *************** function _Lights_Main *****************
  5310 ;; Defined at:
  5311 ;;		line 53 in file "../src/TriacRelay_B1.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;		None               void
  5318 ;; Registers used:
  5319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5325 ;;      Params:         0       0       0       0
  5326 ;;      Locals:         0       0       0       0
  5327 ;;      Temps:          0       0       0       0
  5328 ;;      Totals:         0       0       0       0
  5329 ;;Total ram usage:        0 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    5
  5332 ;; This function calls:
  5333 ;;		_Lights_Control
  5334 ;;		_setLights_Main
  5335 ;; This function is called by:
  5336 ;;		_main
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function _Lights_Main
  5342  0FE8                     _Lights_Main:	
  5343                           
  5344                           ;TriacRelay_B1.c: 55: setLights_Main(1);
  5345                           
  5346                           ;incstack = 0
  5347                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5348  0FE8  3001               	movlw	1
  5349  0FE9  118A  2608  158A   	fcall	_setLights_Main
  5350                           
  5351                           ;TriacRelay_B1.c: 67: Lights_Control(1);
  5352  0FEC  3001               	movlw	1
  5353  0FED  118A  243B         	fcall	_Lights_Control
  5354  0FEF  0008               	return
  5355  0FF0                     __end_of_Lights_Main:	
  5356                           
  5357                           	psect	text33
  5358  0608                     __ptext33:	
  5359 ;; *************** function _setLights_Main *****************
  5360 ;; Defined at:
  5361 ;;		line 79 in file "../src/TriacRelay_B1.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  lights          1    wreg     unsigned char 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  lights          1    3[BANK0 ] unsigned char 
  5366 ;;  clear           1    2[BANK0 ] unsigned char 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;		None               void
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5376 ;;      Params:         0       0       0       0
  5377 ;;      Locals:         0       2       0       0
  5378 ;;      Temps:          0       0       0       0
  5379 ;;      Totals:         0       2       0       0
  5380 ;;Total ram usage:        2 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    4
  5383 ;; This function calls:
  5384 ;;		_LightsPointSelect
  5385 ;;		_setLights
  5386 ;; This function is called by:
  5387 ;;		_Lights_Main
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function _setLights_Main
  5393  0608                     _setLights_Main:	
  5394                           
  5395                           ;incstack = 0
  5396                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5397                           ;setLights_Main@lights stored from wreg
  5398  0608  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0609  1303               	bcf	3,6	;RP1=0, select bank0
  5400  060A  00DD               	movwf	setLights_Main@lights
  5401                           
  5402                           ;TriacRelay_B1.c: 80: char clear = 1;
  5403  060B  01DC               	clrf	setLights_Main@clear
  5404  060C  0ADC               	incf	setLights_Main@clear,f
  5405                           
  5406                           ;TriacRelay_B1.c: 81: LightsPointSelect(lights);
  5407  060D  085D               	movf	setLights_Main@lights,w
  5408  060E  118A  27D4  118A   	fcall	_LightsPointSelect
  5409                           
  5410                           ;TriacRelay_B1.c: 82: if (Lights->GO == 0) {
  5411  0611  1283               	bcf	3,5	;RP0=0, select bank0
  5412  0612  1303               	bcf	3,6	;RP1=0, select bank0
  5413  0613  083B               	movf	_Lights,w
  5414  0614  0084               	movwf	4
  5415  0615  1383               	bcf	3,7	;select IRP bank0
  5416  0616  1880               	btfsc	0,1
  5417  0617  0008               	return
  5418                           
  5419                           ;TriacRelay_B1.c: 102: if (Lights->Trigger == 1) {
  5420  0618  083B               	movf	_Lights,w
  5421  0619  0084               	movwf	4
  5422  061A  1E80               	btfss	0,5
  5423  061B  0008               	return
  5424                           
  5425                           ;TriacRelay_B1.c: 103: if (clear == 1) {
  5426  061C  085C               	movf	setLights_Main@clear,w
  5427  061D  3A01               	xorlw	1
  5428  061E  1D03               	skipz
  5429  061F  0008               	return
  5430                           
  5431                           ;TriacRelay_B1.c: 104: if (Lights->Switch == 1) {
  5432  0620  083B               	movf	_Lights,w
  5433  0621  0084               	movwf	4
  5434  0622  1F00               	btfss	0,6
  5435  0623  2E2D               	goto	l3075
  5436                           
  5437                           ;TriacRelay_B1.c: 105: Lights->Trigger = 0;
  5438  0624  083B               	movf	_Lights,w
  5439  0625  0084               	movwf	4
  5440  0626  1280               	bcf	0,5
  5441                           
  5442                           ;TriacRelay_B1.c: 107: setLights(lights, 1);
  5443  0627  01F6               	clrf	setLights@command
  5444  0628  0AF6               	incf	setLights@command,f
  5445  0629  085D               	movf	setLights_Main@lights,w
  5446  062A  118A  2523         	fcall	_setLights
  5447                           
  5448                           ;TriacRelay_B1.c: 113: } else {
  5449  062C  0008               	return
  5450  062D                     l3075:	
  5451                           
  5452                           ;TriacRelay_B1.c: 114: Lights->Trigger = 0;
  5453  062D  1283               	bcf	3,5	;RP0=0, select bank0
  5454  062E  1303               	bcf	3,6	;RP1=0, select bank0
  5455  062F  083B               	movf	_Lights,w
  5456  0630  0084               	movwf	4
  5457  0631  1383               	bcf	3,7	;select IRP bank0
  5458  0632  1280               	bcf	0,5
  5459                           
  5460                           ;TriacRelay_B1.c: 116: setLights(lights, 0);
  5461  0633  01F6               	clrf	setLights@command
  5462  0634  085D               	movf	setLights_Main@lights,w
  5463  0635  118A  2523         	fcall	_setLights
  5464  0637  0008               	return
  5465  0638                     __end_of_setLights_Main:	
  5466                           
  5467                           	psect	text34
  5468  0523                     __ptext34:	
  5469 ;; *************** function _setLights *****************
  5470 ;; Defined at:
  5471 ;;		line 173 in file "../src/TriacRelay_B1.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  lights          1    wreg     unsigned char 
  5474 ;;  command         1    6[COMMON] unsigned char 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  lights          1    1[BANK0 ] unsigned char 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;		None               void
  5479 ;; Registers used:
  5480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5486 ;;      Params:         1       0       0       0
  5487 ;;      Locals:         0       1       0       0
  5488 ;;      Temps:          0       1       0       0
  5489 ;;      Totals:         1       2       0       0
  5490 ;;Total ram usage:        3 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    3
  5493 ;; This function calls:
  5494 ;;		_LightsPointSelect
  5495 ;; This function is called by:
  5496 ;;		_setLights_Main
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _setLights
  5502  0523                     _setLights:	
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5506                           ;setLights@lights stored from wreg
  5507  0523  1283               	bcf	3,5	;RP0=0, select bank0
  5508  0524  1303               	bcf	3,6	;RP1=0, select bank0
  5509  0525  00DB               	movwf	setLights@lights
  5510                           
  5511                           ;TriacRelay_B1.c: 175: LightsPointSelect(lights);
  5512  0526  085B               	movf	setLights@lights,w
  5513  0527  118A  27D4  118A   	fcall	_LightsPointSelect
  5514                           
  5515                           ;TriacRelay_B1.c: 177: Lights->GO = 1;
  5516  052A  1283               	bcf	3,5	;RP0=0, select bank0
  5517  052B  1303               	bcf	3,6	;RP1=0, select bank0
  5518  052C  083B               	movf	_Lights,w
  5519  052D  0084               	movwf	4
  5520  052E  1383               	bcf	3,7	;select IRP bank0
  5521  052F  1480               	bsf	0,1
  5522                           
  5523                           ;TriacRelay_B1.c: 178: if (command == 1) {
  5524  0530  0876               	movf	setLights@command,w
  5525  0531  3A01               	xorlw	1
  5526  0532  1D03               	skipz
  5527  0533  2D44               	goto	l2947
  5528                           
  5529                           ;TriacRelay_B1.c: 179: if (Lights->Status == 0) {
  5530  0534  083B               	movf	_Lights,w
  5531  0535  0084               	movwf	4
  5532  0536  1900               	btfsc	0,2
  5533  0537  2D59               	goto	l2951
  5534                           
  5535                           ;TriacRelay_B1.c: 180: Lights->Status = 1;
  5536  0538  083B               	movf	_Lights,w
  5537  0539  0084               	movwf	4
  5538  053A  1500               	bsf	0,2
  5539                           
  5540                           ;TriacRelay_B1.c: 181: Lights->RelayValue = 7;
  5541  053B  3007               	movlw	7
  5542  053C  00DA               	movwf	??_setLights
  5543  053D  083B               	movf	_Lights,w
  5544  053E  3E06               	addlw	6
  5545  053F  0084               	movwf	4
  5546  0540  085A               	movf	??_setLights,w
  5547  0541  0080               	movwf	0
  5548                           
  5549                           ;TriacRelay_B1.c: 182: Lights->TriacValue = 14;
  5550  0542  300E               	movlw	14
  5551  0543  2D53               	goto	L13
  5552  0544                     l2947:	
  5553                           ;TriacRelay_B1.c: 183: }
  5554                           ;TriacRelay_B1.c: 184: } else {
  5555                           
  5556                           
  5557                           ;TriacRelay_B1.c: 185: if (Lights->Status == 1) {
  5558  0544  083B               	movf	_Lights,w
  5559  0545  0084               	movwf	4
  5560  0546  1D00               	btfss	0,2
  5561  0547  2D59               	goto	l2951
  5562                           
  5563                           ;TriacRelay_B1.c: 186: Lights->Status = 0;
  5564  0548  083B               	movf	_Lights,w
  5565  0549  0084               	movwf	4
  5566  054A  1100               	bcf	0,2
  5567                           
  5568                           ;TriacRelay_B1.c: 187: Lights->RelayValue = 4;
  5569  054B  3004               	movlw	4
  5570  054C  00DA               	movwf	??_setLights
  5571  054D  083B               	movf	_Lights,w
  5572  054E  3E06               	addlw	6
  5573  054F  0084               	movwf	4
  5574  0550  085A               	movf	??_setLights,w
  5575  0551  0080               	movwf	0
  5576                           
  5577                           ;TriacRelay_B1.c: 188: Lights->TriacValue = 8;
  5578  0552  3008               	movlw	8
  5579  0553                     L13:	
  5580  0553  00DA               	movwf	??_setLights
  5581  0554  083B               	movf	_Lights,w
  5582  0555  3E04               	addlw	4
  5583  0556  0084               	movwf	4
  5584  0557  085A               	movf	??_setLights,w
  5585  0558  0080               	movwf	0
  5586  0559                     l2951:	
  5587                           
  5588                           ;TriacRelay_B1.c: 189: }
  5589                           ;TriacRelay_B1.c: 190: }
  5590                           ;TriacRelay_B1.c: 192: if (lights == 1) {
  5591  0559  085B               	movf	setLights@lights,w
  5592  055A  3A01               	xorlw	1
  5593  055B  1D03               	skipz
  5594  055C  0008               	return
  5595                           
  5596                           ;TriacRelay_B1.c: 193: RB2 = 1;
  5597  055D  1506               	bsf	6,2	;volatile
  5598  055E  0008               	return
  5599  055F                     __end_of_setLights:	
  5600                           
  5601                           	psect	text35
  5602  043B                     __ptext35:	
  5603 ;; *************** function _Lights_Control *****************
  5604 ;; Defined at:
  5605 ;;		line 208 in file "../src/TriacRelay_B1.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  lights          1    wreg     unsigned char 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  lights          1    6[COMMON] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5619 ;;      Params:         0       0       0       0
  5620 ;;      Locals:         1       0       0       0
  5621 ;;      Temps:          0       2       0       0
  5622 ;;      Totals:         1       2       0       0
  5623 ;;Total ram usage:        3 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    3
  5626 ;; This function calls:
  5627 ;;		_LightsPointSelect
  5628 ;; This function is called by:
  5629 ;;		_Lights_Main
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function _Lights_Control
  5635  043B                     _Lights_Control:	
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5639                           ;Lights_Control@lights stored from wreg
  5640  043B  00F6               	movwf	Lights_Control@lights
  5641                           
  5642                           ;TriacRelay_B1.c: 209: LightsPointSelect(lights);
  5643  043C  0876               	movf	Lights_Control@lights,w
  5644  043D  118A  27D4  118A   	fcall	_LightsPointSelect
  5645                           
  5646                           ;TriacRelay_B1.c: 210: if (Lights->GO == 1) {
  5647  0440  1283               	bcf	3,5	;RP0=0, select bank0
  5648  0441  1303               	bcf	3,6	;RP1=0, select bank0
  5649  0442  083B               	movf	_Lights,w
  5650  0443  0084               	movwf	4
  5651  0444  1383               	bcf	3,7	;select IRP bank0
  5652  0445  1C80               	btfss	0,1
  5653  0446  0008               	return
  5654                           
  5655                           ;TriacRelay_B1.c: 211: Lights->Time++;
  5656  0447  3001               	movlw	1
  5657  0448  00DA               	movwf	??_Lights_Control
  5658  0449  083B               	movf	_Lights,w
  5659  044A  3E02               	addlw	2
  5660  044B  0084               	movwf	4
  5661  044C  085A               	movf	??_Lights_Control,w
  5662  044D  0780               	addwf	0,f
  5663                           
  5664                           ;TriacRelay_B1.c: 212: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  5665  044E  083B               	movf	_Lights,w
  5666  044F  3E06               	addlw	6
  5667  0450  0084               	movwf	4
  5668  0451  0800               	movf	0,w
  5669  0452  00DA               	movwf	??_Lights_Control
  5670  0453  083B               	movf	_Lights,w
  5671  0454  3E02               	addlw	2
  5672  0455  0084               	movwf	4
  5673  0456  0800               	movf	0,w
  5674  0457  00DB               	movwf	??_Lights_Control+1
  5675  0458  085A               	movf	??_Lights_Control,w
  5676  0459  025B               	subwf	??_Lights_Control+1,w
  5677  045A  1C03               	skipc
  5678  045B  2C73               	goto	l3095
  5679  045C  0A3B               	incf	_Lights,w
  5680  045D  0084               	movwf	4
  5681  045E  1900               	btfsc	0,2
  5682  045F  2C73               	goto	l3095
  5683                           
  5684                           ;TriacRelay_B1.c: 213: Lights->RelaySet = 1;
  5685  0460  0A3B               	incf	_Lights,w
  5686  0461  0084               	movwf	4
  5687  0462  1500               	bsf	0,2
  5688                           
  5689                           ;TriacRelay_B1.c: 215: if (lights == 1) {
  5690  0463  0876               	movf	Lights_Control@lights,w
  5691  0464  3A01               	xorlw	1
  5692  0465  1D03               	skipz
  5693  0466  0008               	return
  5694                           
  5695                           ;TriacRelay_B1.c: 217: RA4 = Lights->Status ? 1 : 0;
  5696  0467  083B               	movf	_Lights,w
  5697  0468  0084               	movwf	4
  5698  0469  1D00               	btfss	0,2
  5699  046A  2C6F               	goto	u3110
  5700  046B  1283               	bcf	3,5	;RP0=0, select bank0
  5701  046C  1303               	bcf	3,6	;RP1=0, select bank0
  5702  046D  1605               	bsf	5,4	;volatile
  5703  046E  0008               	return
  5704  046F                     u3110:	
  5705  046F  1283               	bcf	3,5	;RP0=0, select bank0
  5706  0470  1303               	bcf	3,6	;RP1=0, select bank0
  5707  0471  1205               	bcf	5,4	;volatile
  5708                           
  5709                           ;TriacRelay_B1.c: 219: }
  5710                           ;TriacRelay_B1.c: 234: } else if (Lights->Time >= Lights->TriacValue) {
  5711  0472  0008               	return
  5712  0473                     l3095:	
  5713  0473  083B               	movf	_Lights,w
  5714  0474  3E04               	addlw	4
  5715  0475  0084               	movwf	4
  5716  0476  1383               	bcf	3,7	;select IRP bank0
  5717  0477  0800               	movf	0,w
  5718  0478  00DA               	movwf	??_Lights_Control
  5719  0479  083B               	movf	_Lights,w
  5720  047A  3E02               	addlw	2
  5721  047B  0084               	movwf	4
  5722  047C  0800               	movf	0,w
  5723  047D  00DB               	movwf	??_Lights_Control+1
  5724  047E  085A               	movf	??_Lights_Control,w
  5725  047F  025B               	subwf	??_Lights_Control+1,w
  5726  0480  1C03               	skipc
  5727  0481  0008               	return
  5728                           
  5729                           ;TriacRelay_B1.c: 235: Lights->Time = 0;
  5730  0482  083B               	movf	_Lights,w
  5731  0483  3E02               	addlw	2
  5732  0484  0084               	movwf	4
  5733  0485  0180               	clrf	0
  5734                           
  5735                           ;TriacRelay_B1.c: 236: Lights->GO = 0;
  5736  0486  083B               	movf	_Lights,w
  5737  0487  0084               	movwf	4
  5738  0488  1080               	bcf	0,1
  5739                           
  5740                           ;TriacRelay_B1.c: 237: Lights->RelaySet = 0;
  5741  0489  0A3B               	incf	_Lights,w
  5742  048A  0084               	movwf	4
  5743  048B  1100               	bcf	0,2
  5744                           
  5745                           ;TriacRelay_B1.c: 239: if (lights == 1) {
  5746  048C  0876               	movf	Lights_Control@lights,w
  5747  048D  3A01               	xorlw	1
  5748  048E  1D03               	skipz
  5749  048F  0008               	return
  5750                           
  5751                           ;TriacRelay_B1.c: 240: RB2 = 0;
  5752  0490  1106               	bcf	6,2	;volatile
  5753  0491  0008               	return
  5754  0492                     __end_of_Lights_Control:	
  5755                           
  5756                           	psect	text36
  5757  0FCE                     __ptext36:	
  5758 ;; *************** function _Lights_Initialization *****************
  5759 ;; Defined at:
  5760 ;;		line 33 in file "../src/TriacRelay_B1.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;		None               void
  5767 ;; Registers used:
  5768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5774 ;;      Params:         0       0       0       0
  5775 ;;      Locals:         0       0       0       0
  5776 ;;      Temps:          0       0       0       0
  5777 ;;      Totals:         0       0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    4
  5781 ;; This function calls:
  5782 ;;		_setLights_Initialization
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           
  5789                           ;psect for function _Lights_Initialization
  5790  0FCE                     _Lights_Initialization:	
  5791                           
  5792                           ;TriacRelay_B1.c: 35: setLights_Initialization(1);
  5793                           
  5794                           ;incstack = 0
  5795                           ; Regs used in _Lights_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5796  0FCE  3001               	movlw	1
  5797  0FCF  118A  27AE         	fcall	_setLights_Initialization
  5798  0FD1  0008               	return
  5799  0FD2                     __end_of_Lights_Initialization:	
  5800                           
  5801                           	psect	text37
  5802  07AE                     __ptext37:	
  5803 ;; *************** function _setLights_Initialization *****************
  5804 ;; Defined at:
  5805 ;;		line 47 in file "../src/TriacRelay_B1.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  lights          1    wreg     unsigned char 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  lights          1    6[COMMON] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;		None               void
  5812 ;; Registers used:
  5813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5819 ;;      Params:         0       0       0       0
  5820 ;;      Locals:         1       0       0       0
  5821 ;;      Temps:          0       0       0       0
  5822 ;;      Totals:         1       0       0       0
  5823 ;;Total ram usage:        1 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    3
  5826 ;; This function calls:
  5827 ;;		_LightsPointSelect
  5828 ;; This function is called by:
  5829 ;;		_Lights_Initialization
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _setLights_Initialization
  5835  07AE                     _setLights_Initialization:	
  5836                           
  5837                           ;incstack = 0
  5838                           ; Regs used in _setLights_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5839                           ;setLights_Initialization@lights stored from wreg
  5840  07AE  00F6               	movwf	setLights_Initialization@lights
  5841                           
  5842                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  5843  07AF  0876               	movf	setLights_Initialization@lights,w
  5844  07B0  118A  27D4         	fcall	_LightsPointSelect
  5845                           
  5846                           ;TriacRelay_B1.c: 49: Lights->Open = 1;
  5847  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  5848  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  5849  07B4  083B               	movf	_Lights,w
  5850  07B5  0084               	movwf	4
  5851  07B6  1383               	bcf	3,7	;select IRP bank0
  5852  07B7  1580               	bsf	0,3
  5853                           
  5854                           ;TriacRelay_B1.c: 50: Lights->Close = 1;
  5855  07B8  083B               	movf	_Lights,w
  5856  07B9  0084               	movwf	4
  5857  07BA  1600               	bsf	0,4
  5858  07BB  0008               	return
  5859  07BC                     __end_of_setLights_Initialization:	
  5860                           
  5861                           	psect	text38
  5862  07D4                     __ptext38:	
  5863 ;; *************** function _LightsPointSelect *****************
  5864 ;; Defined at:
  5865 ;;		line 10 in file "../src/TriacRelay_B1.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  lights          1    wreg     unsigned char 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  lights          1    5[COMMON] unsigned char 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;		None               void
  5872 ;; Registers used:
  5873 ;;		wreg
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5879 ;;      Params:         0       0       0       0
  5880 ;;      Locals:         1       0       0       0
  5881 ;;      Temps:          1       0       0       0
  5882 ;;      Totals:         2       0       0       0
  5883 ;;Total ram usage:        2 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    2
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_setLights_Initialization
  5890 ;;		_setLights_Main
  5891 ;;		_setLights_Trigger
  5892 ;;		_setLights_Switch
  5893 ;;		_getLights_Status
  5894 ;;		_setLights
  5895 ;;		_Lights_Control
  5896 ;;		_setLights_Clear
  5897 ;;		_setLights_Open
  5898 ;;		_getLights_Open
  5899 ;;		_setLights_Close
  5900 ;;		_getLights_Close
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function _LightsPointSelect
  5906  07D4                     _LightsPointSelect:	
  5907                           
  5908                           ;incstack = 0
  5909                           ; Regs used in _LightsPointSelect: [wreg]
  5910                           ;LightsPointSelect@lights stored from wreg
  5911  07D4  00F5               	movwf	LightsPointSelect@lights
  5912                           
  5913                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  5914  07D5  0875               	movf	LightsPointSelect@lights,w
  5915  07D6  3A01               	xorlw	1
  5916  07D7  1D03               	skipz
  5917  07D8  0008               	return
  5918                           
  5919                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  5920  07D9  3046               	movlw	_Lights1& (0+255)
  5921  07DA  00F4               	movwf	??_LightsPointSelect
  5922  07DB  0874               	movf	??_LightsPointSelect,w
  5923  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  5924  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  5925  07DE  00BB               	movwf	_Lights
  5926  07DF  0008               	return
  5927  07E0                     __end_of_LightsPointSelect:	
  5928                           
  5929                           	psect	text39
  5930  07E0                     __ptext39:	
  5931 ;; *************** function _LED_Main *****************
  5932 ;; Defined at:
  5933 ;;		line 47 in file "../src/LED_B1.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;		None               void
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5947 ;;      Params:         0       0       0       0
  5948 ;;      Locals:         0       0       0       0
  5949 ;;      Temps:          0       0       0       0
  5950 ;;      Totals:         0       0       0       0
  5951 ;;Total ram usage:        0 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    4
  5954 ;; This function calls:
  5955 ;;		_setLED_Main
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           
  5962                           ;psect for function _LED_Main
  5963  07E0                     _LED_Main:	
  5964                           
  5965                           ;LED_B1.c: 49: setLED_Main(1);
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5969  07E0  3001               	movlw	1
  5970  07E1  118A  255F  118A   	fcall	_setLED_Main
  5971                           
  5972                           ;LED_B1.c: 52: setLED_Main(2);
  5973  07E4  3002               	movlw	2
  5974  07E5  118A  255F  118A   	fcall	_setLED_Main
  5975                           
  5976                           ;LED_B1.c: 58: setLED_Main(99);
  5977  07E8  3063               	movlw	99
  5978  07E9  118A  255F         	fcall	_setLED_Main
  5979  07EB  0008               	return
  5980  07EC                     __end_of_LED_Main:	
  5981                           
  5982                           	psect	text40
  5983  055F                     __ptext40:	
  5984 ;; *************** function _setLED_Main *****************
  5985 ;; Defined at:
  5986 ;;		line 192 in file "../src/LED_B1.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  led             1    wreg     unsigned char 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  led             1    6[COMMON] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;		None               void
  5993 ;; Registers used:
  5994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6000 ;;      Params:         0       0       0       0
  6001 ;;      Locals:         1       0       0       0
  6002 ;;      Temps:          0       2       0       0
  6003 ;;      Totals:         1       2       0       0
  6004 ;;Total ram usage:        3 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    3
  6007 ;; This function calls:
  6008 ;;		_LedPointSelect
  6009 ;; This function is called by:
  6010 ;;		_LED_Main
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _setLED_Main
  6016  055F                     _setLED_Main:	
  6017                           
  6018                           ;incstack = 0
  6019                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6020                           ;setLED_Main@led stored from wreg
  6021  055F  00F6               	movwf	setLED_Main@led
  6022                           
  6023                           ;LED_B1.c: 193: LedPointSelect(led);
  6024  0560  0876               	movf	setLED_Main@led,w
  6025  0561  118A  26BE  118A   	fcall	_LedPointSelect
  6026                           
  6027                           ;LED_B1.c: 194: if (LED->GO == 1) {
  6028  0564  0879               	movf	_LED,w
  6029  0565  0084               	movwf	4
  6030  0566  1383               	bcf	3,7	;select IRP bank0
  6031  0567  1C80               	btfss	0,1
  6032  0568  0008               	return
  6033                           
  6034                           ;LED_B1.c: 195: LED->Time++;
  6035  0569  0A79               	incf	_LED,w
  6036  056A  0084               	movwf	4
  6037  056B  3001               	movlw	1
  6038  056C  0780               	addwf	0,f
  6039  056D  0A84               	incf	4,f
  6040  056E  1803               	skipnc
  6041  056F  0A80               	incf	0,f
  6042                           
  6043                           ;LED_B1.c: 196: if (LED->Time >= 500 / 10) {
  6044  0570  0A79               	incf	_LED,w
  6045  0571  0084               	movwf	4
  6046  0572  0800               	movf	0,w
  6047  0573  1283               	bcf	3,5	;RP0=0, select bank0
  6048  0574  1303               	bcf	3,6	;RP1=0, select bank0
  6049  0575  00DA               	movwf	??_setLED_Main
  6050  0576  0A84               	incf	4,f
  6051  0577  0800               	movf	0,w
  6052  0578  00DB               	movwf	??_setLED_Main+1
  6053  0579  3000               	movlw	0
  6054  057A  025B               	subwf	??_setLED_Main+1,w
  6055  057B  3032               	movlw	50
  6056  057C  1903               	skipnz
  6057  057D  025A               	subwf	??_setLED_Main,w
  6058  057E  1C03               	skipc
  6059  057F  0008               	return
  6060                           
  6061                           ;LED_B1.c: 197: LED->Time = 0;
  6062  0580  0A79               	incf	_LED,w
  6063  0581  0084               	movwf	4
  6064  0582  0180               	clrf	0
  6065  0583  0A84               	incf	4,f
  6066  0584  0180               	clrf	0
  6067                           
  6068                           ;LED_B1.c: 199: if (led == 1) {
  6069  0585  0876               	movf	setLED_Main@led,w
  6070  0586  3A01               	xorlw	1
  6071  0587  1D03               	skipz
  6072  0588  2D8C               	goto	l2975
  6073                           
  6074                           ;LED_B1.c: 200: RB4 = RB4 == 1 ? 0 : 1;
  6075  0589  3010               	movlw	16
  6076  058A  0686               	xorwf	6,f
  6077                           
  6078                           ;LED_B1.c: 201: }
  6079  058B  0008               	return
  6080  058C                     l2975:	
  6081                           
  6082                           ;LED_B1.c: 204: else if (led == 2) {
  6083  058C  0876               	movf	setLED_Main@led,w
  6084  058D  3A02               	xorlw	2
  6085  058E  1D03               	skipz
  6086  058F  2D93               	goto	l2979
  6087                           
  6088                           ;LED_B1.c: 205: RB5 = RB5 == 1 ? 0 : 1;
  6089  0590  3020               	movlw	32
  6090  0591  0686               	xorwf	6,f
  6091                           
  6092                           ;LED_B1.c: 206: }
  6093  0592  0008               	return
  6094  0593                     l2979:	
  6095                           
  6096                           ;LED_B1.c: 214: else if (led == 99) {
  6097  0593  0876               	movf	setLED_Main@led,w
  6098  0594  3A63               	xorlw	99
  6099  0595  1D03               	skipz
  6100  0596  0008               	return
  6101                           
  6102                           ;LED_B1.c: 215: RB3 = RB3 == 1 ? 0 : 1;
  6103  0597  3008               	movlw	8
  6104  0598  0686               	xorwf	6,f
  6105  0599  0008               	return
  6106  059A                     __end_of_setLED_Main:	
  6107                           
  6108                           	psect	text41
  6109  07EC                     __ptext41:	
  6110 ;; *************** function _LED_Initialization *****************
  6111 ;; Defined at:
  6112 ;;		line 31 in file "../src/LED_B1.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;		None
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;		None
  6117 ;; Return value:  Size  Location     Type
  6118 ;;		None               void
  6119 ;; Registers used:
  6120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6126 ;;      Params:         0       0       0       0
  6127 ;;      Locals:         0       0       0       0
  6128 ;;      Temps:          0       0       0       0
  6129 ;;      Totals:         0       0       0       0
  6130 ;;Total ram usage:        0 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    5
  6133 ;; This function calls:
  6134 ;;		_setLED_Initialization
  6135 ;; This function is called by:
  6136 ;;		_main
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function _LED_Initialization
  6142  07EC                     _LED_Initialization:	
  6143                           
  6144                           ;LED_B1.c: 33: setLED_Initialization(1);
  6145                           
  6146                           ;incstack = 0
  6147                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6148  07EC  3001               	movlw	1
  6149  07ED  118A  271F  118A   	fcall	_setLED_Initialization
  6150                           
  6151                           ;LED_B1.c: 36: setLED_Initialization(2);
  6152  07F0  3002               	movlw	2
  6153  07F1  118A  271F  118A   	fcall	_setLED_Initialization
  6154                           
  6155                           ;LED_B1.c: 42: setLED_Initialization(99);
  6156  07F4  3063               	movlw	99
  6157  07F5  118A  271F         	fcall	_setLED_Initialization
  6158  07F7  0008               	return
  6159  07F8                     __end_of_LED_Initialization:	
  6160                           
  6161                           	psect	text42
  6162  071F                     __ptext42:	
  6163 ;; *************** function _setLED_Initialization *****************
  6164 ;; Defined at:
  6165 ;;		line 63 in file "../src/LED_B1.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  led             1    wreg     unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;  led             1    1[BANK0 ] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;		None               void
  6172 ;; Registers used:
  6173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6179 ;;      Params:         0       0       0       0
  6180 ;;      Locals:         0       1       0       0
  6181 ;;      Temps:          0       0       0       0
  6182 ;;      Totals:         0       1       0       0
  6183 ;;Total ram usage:        1 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    4
  6186 ;; This function calls:
  6187 ;;		_LedPointSelect
  6188 ;;		_setLED
  6189 ;; This function is called by:
  6190 ;;		_LED_Initialization
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           
  6195                           ;psect for function _setLED_Initialization
  6196  071F                     _setLED_Initialization:	
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6200                           ;setLED_Initialization@led stored from wreg
  6201  071F  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0720  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0721  00DB               	movwf	setLED_Initialization@led
  6204                           
  6205                           ;LED_B1.c: 64: LedPointSelect(led);
  6206  0722  085B               	movf	setLED_Initialization@led,w
  6207  0723  118A  26BE  118A   	fcall	_LedPointSelect
  6208                           
  6209                           ;LED_B1.c: 65: LED->Enable = 1;
  6210  0726  0879               	movf	_LED,w
  6211  0727  0084               	movwf	4
  6212  0728  1383               	bcf	3,7	;select IRP bank0
  6213  0729  1400               	bsf	0,0
  6214                           
  6215                           ;LED_B1.c: 66: setLED(led, 0);
  6216  072A  01F6               	clrf	setLED@command
  6217  072B  1283               	bcf	3,5	;RP0=0, select bank0
  6218  072C  1303               	bcf	3,6	;RP1=0, select bank0
  6219  072D  085B               	movf	setLED_Initialization@led,w
  6220  072E  118A  2322         	fcall	_setLED
  6221  0730  0008               	return
  6222  0731                     __end_of_setLED_Initialization:	
  6223                           
  6224                           	psect	text43
  6225  0322                     __ptext43:	
  6226 ;; *************** function _setLED *****************
  6227 ;; Defined at:
  6228 ;;		line 70 in file "../src/LED_B1.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  led             1    wreg     unsigned char 
  6231 ;;  command         1    6[COMMON] unsigned char 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  led             1    0[BANK0 ] unsigned char 
  6234 ;; Return value:  Size  Location     Type
  6235 ;;		None               void
  6236 ;; Registers used:
  6237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6243 ;;      Params:         1       0       0       0
  6244 ;;      Locals:         0       1       0       0
  6245 ;;      Temps:          0       0       0       0
  6246 ;;      Totals:         1       1       0       0
  6247 ;;Total ram usage:        2 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    3
  6250 ;; This function calls:
  6251 ;;		_LedPointSelect
  6252 ;; This function is called by:
  6253 ;;		_setLED_Initialization
  6254 ;;		_setOverTemp_Exceptions
  6255 ;;		_PIR_Main
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function _setLED
  6261  0322                     _setLED:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6265                           ;setLED@led stored from wreg
  6266  0322  1283               	bcf	3,5	;RP0=0, select bank0
  6267  0323  1303               	bcf	3,6	;RP1=0, select bank0
  6268  0324  00DA               	movwf	setLED@led
  6269                           
  6270                           ;LED_B1.c: 71: LedPointSelect(led);
  6271  0325  085A               	movf	setLED@led,w
  6272  0326  118A  26BE  118A   	fcall	_LedPointSelect
  6273                           
  6274                           ;LED_B1.c: 72: if (command == 0) {
  6275  0329  08F6               	movf	setLED@command,f
  6276  032A  1D03               	skipz
  6277  032B  2B40               	goto	l2889
  6278                           
  6279                           ;LED_B1.c: 74: if (led == 1) {
  6280  032C  1283               	bcf	3,5	;RP0=0, select bank0
  6281  032D  1303               	bcf	3,6	;RP1=0, select bank0
  6282  032E  085A               	movf	setLED@led,w
  6283  032F  3A01               	xorlw	1
  6284  0330  1D03               	skipz
  6285  0331  2B34               	goto	l2881
  6286                           
  6287                           ;LED_B1.c: 78: RB4 = 1;
  6288  0332  1606               	bsf	6,4	;volatile
  6289                           
  6290                           ;LED_B1.c: 80: }
  6291  0333  0008               	return
  6292  0334                     l2881:	
  6293                           
  6294                           ;LED_B1.c: 83: else if (led == 2) {
  6295  0334  085A               	movf	setLED@led,w
  6296  0335  3A02               	xorlw	2
  6297  0336  1D03               	skipz
  6298  0337  2B3A               	goto	l2885
  6299                           
  6300                           ;LED_B1.c: 87: RB5 = 1;
  6301  0338  1686               	bsf	6,5	;volatile
  6302                           
  6303                           ;LED_B1.c: 89: }
  6304  0339  0008               	return
  6305  033A                     l2885:	
  6306                           
  6307                           ;LED_B1.c: 101: else if (led == 99) {
  6308  033A  085A               	movf	setLED@led,w
  6309  033B  3A63               	xorlw	99
  6310  033C  1D03               	skipz
  6311  033D  0008               	return
  6312                           
  6313                           ;LED_B1.c: 105: RB3 = 1;
  6314  033E  1586               	bsf	6,3	;volatile
  6315                           
  6316                           ;LED_B1.c: 107: }
  6317                           ;LED_B1.c: 109: } else if (command == 1) {
  6318  033F  0008               	return
  6319  0340                     l2889:	
  6320  0340  0876               	movf	setLED@command,w
  6321  0341  3A01               	xorlw	1
  6322  0342  1D03               	skipz
  6323  0343  2B58               	goto	l2903
  6324                           
  6325                           ;LED_B1.c: 111: if (led == 1) {
  6326  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0345  1303               	bcf	3,6	;RP1=0, select bank0
  6328  0346  085A               	movf	setLED@led,w
  6329  0347  3A01               	xorlw	1
  6330  0348  1D03               	skipz
  6331  0349  2B4C               	goto	l2895
  6332                           
  6333                           ;LED_B1.c: 115: RB4 = 0;
  6334  034A  1206               	bcf	6,4	;volatile
  6335                           
  6336                           ;LED_B1.c: 117: }
  6337  034B  0008               	return
  6338  034C                     l2895:	
  6339                           
  6340                           ;LED_B1.c: 120: else if (led == 2) {
  6341  034C  085A               	movf	setLED@led,w
  6342  034D  3A02               	xorlw	2
  6343  034E  1D03               	skipz
  6344  034F  2B52               	goto	l2899
  6345                           
  6346                           ;LED_B1.c: 124: RB5 = 0;
  6347  0350  1286               	bcf	6,5	;volatile
  6348                           
  6349                           ;LED_B1.c: 126: }
  6350  0351  0008               	return
  6351  0352                     l2899:	
  6352                           
  6353                           ;LED_B1.c: 138: else if (led == 99) {
  6354  0352  085A               	movf	setLED@led,w
  6355  0353  3A63               	xorlw	99
  6356  0354  1D03               	skipz
  6357  0355  0008               	return
  6358                           
  6359                           ;LED_B1.c: 142: RB3 = 0;
  6360  0356  1186               	bcf	6,3	;volatile
  6361                           
  6362                           ;LED_B1.c: 144: }
  6363                           ;LED_B1.c: 146: } else if (command == 10) {
  6364  0357  0008               	return
  6365  0358                     l2903:	
  6366  0358  0876               	movf	setLED@command,w
  6367  0359  3A0A               	xorlw	10
  6368  035A  1D03               	skipz
  6369  035B  2B79               	goto	l2921
  6370                           
  6371                           ;LED_B1.c: 147: LED->GO = 0;
  6372  035C  0879               	movf	_LED,w
  6373  035D  0084               	movwf	4
  6374  035E  1383               	bcf	3,7	;select IRP bank0
  6375  035F  1080               	bcf	0,1
  6376                           
  6377                           ;LED_B1.c: 148: LED->Time = 0;
  6378  0360  0A79               	incf	_LED,w
  6379  0361  0084               	movwf	4
  6380  0362  0180               	clrf	0
  6381  0363  0A84               	incf	4,f
  6382  0364  0180               	clrf	0
  6383                           
  6384                           ;LED_B1.c: 150: if (led == 1) {
  6385  0365  1283               	bcf	3,5	;RP0=0, select bank0
  6386  0366  1303               	bcf	3,6	;RP1=0, select bank0
  6387  0367  085A               	movf	setLED@led,w
  6388  0368  3A01               	xorlw	1
  6389  0369  1D03               	skipz
  6390  036A  2B6D               	goto	l2913
  6391                           
  6392                           ;LED_B1.c: 154: RB4 = 1;
  6393  036B  1606               	bsf	6,4	;volatile
  6394                           
  6395                           ;LED_B1.c: 156: }
  6396  036C  0008               	return
  6397  036D                     l2913:	
  6398                           
  6399                           ;LED_B1.c: 159: else if (led == 2) {
  6400  036D  085A               	movf	setLED@led,w
  6401  036E  3A02               	xorlw	2
  6402  036F  1D03               	skipz
  6403  0370  2B73               	goto	l2917
  6404                           
  6405                           ;LED_B1.c: 163: RB5 = 1;
  6406  0371  1686               	bsf	6,5	;volatile
  6407                           
  6408                           ;LED_B1.c: 165: }
  6409  0372  0008               	return
  6410  0373                     l2917:	
  6411                           
  6412                           ;LED_B1.c: 177: else if (led == 99) {
  6413  0373  085A               	movf	setLED@led,w
  6414  0374  3A63               	xorlw	99
  6415  0375  1D03               	skipz
  6416  0376  0008               	return
  6417                           
  6418                           ;LED_B1.c: 181: RB3 = 1;
  6419  0377  1586               	bsf	6,3	;volatile
  6420                           
  6421                           ;LED_B1.c: 183: }
  6422                           ;LED_B1.c: 185: } else if (command == 11) {
  6423  0378  0008               	return
  6424  0379                     l2921:	
  6425  0379  0876               	movf	setLED@command,w
  6426  037A  3A0B               	xorlw	11
  6427  037B  1D03               	skipz
  6428  037C  0008               	return
  6429                           
  6430                           ;LED_B1.c: 186: LED->GO = 1;
  6431  037D  0879               	movf	_LED,w
  6432  037E  0084               	movwf	4
  6433  037F  1383               	bcf	3,7	;select IRP bank0
  6434  0380  1480               	bsf	0,1
  6435  0381  0008               	return
  6436  0382                     __end_of_setLED:	
  6437                           
  6438                           	psect	text44
  6439  06BE                     __ptext44:	
  6440 ;; *************** function _LedPointSelect *****************
  6441 ;; Defined at:
  6442 ;;		line 7 in file "../src/LED_B1.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  led             1    wreg     unsigned char 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  led             1    5[COMMON] unsigned char 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;		None               void
  6449 ;; Registers used:
  6450 ;;		wreg
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6456 ;;      Params:         0       0       0       0
  6457 ;;      Locals:         1       0       0       0
  6458 ;;      Temps:          1       0       0       0
  6459 ;;      Totals:         2       0       0       0
  6460 ;;Total ram usage:        2 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:    2
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_setLED_Initialization
  6467 ;;		_setLED
  6468 ;;		_setLED_Main
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           
  6473                           ;psect for function _LedPointSelect
  6474  06BE                     _LedPointSelect:	
  6475                           
  6476                           ;incstack = 0
  6477                           ; Regs used in _LedPointSelect: [wreg]
  6478                           ;LedPointSelect@led stored from wreg
  6479  06BE  00F5               	movwf	LedPointSelect@led
  6480                           
  6481                           ;LED_B1.c: 9: if (led == 1) {
  6482  06BF  0875               	movf	LedPointSelect@led,w
  6483  06C0  3A01               	xorlw	1
  6484  06C1  1D03               	skipz
  6485  06C2  2EC8               	goto	l2865
  6486                           
  6487                           ;LED_B1.c: 10: LED = &VarLED1;
  6488  06C3  3052               	movlw	_VarLED1& (0+255)
  6489  06C4  00F4               	movwf	??_LedPointSelect
  6490  06C5  0874               	movf	??_LedPointSelect,w
  6491  06C6  00F9               	movwf	_LED
  6492                           
  6493                           ;LED_B1.c: 11: }
  6494  06C7  0008               	return
  6495  06C8                     l2865:	
  6496                           
  6497                           ;LED_B1.c: 14: else if (led == 2) {
  6498  06C8  0875               	movf	LedPointSelect@led,w
  6499  06C9  3A02               	xorlw	2
  6500  06CA  1D03               	skipz
  6501  06CB  2ED1               	goto	l2869
  6502                           
  6503                           ;LED_B1.c: 15: LED = &VarLED2;
  6504  06CC  3056               	movlw	_VarLED2& (0+255)
  6505  06CD  00F4               	movwf	??_LedPointSelect
  6506  06CE  0874               	movf	??_LedPointSelect,w
  6507  06CF  00F9               	movwf	_LED
  6508                           
  6509                           ;LED_B1.c: 16: }
  6510  06D0  0008               	return
  6511  06D1                     l2869:	
  6512                           
  6513                           ;LED_B1.c: 24: else if (led == 99) {
  6514  06D1  0875               	movf	LedPointSelect@led,w
  6515  06D2  3A63               	xorlw	99
  6516  06D3  1D03               	skipz
  6517  06D4  0008               	return
  6518                           
  6519                           ;LED_B1.c: 25: LED = &VarErrLED;
  6520  06D5  304E               	movlw	_VarErrLED& (0+255)
  6521  06D6  00F4               	movwf	??_LedPointSelect
  6522  06D7  0874               	movf	??_LedPointSelect,w
  6523  06D8  00F9               	movwf	_LED
  6524  06D9  0008               	return
  6525  06DA                     __end_of_LedPointSelect:	
  6526                           
  6527                           	psect	text45
  6528  05D4                     __ptext45:	
  6529 ;; *************** function _CDS_Main *****************
  6530 ;; Defined at:
  6531 ;;		line 11 in file "../src/CDS_B1.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;		None
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;		None               void
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6545 ;;      Params:         0       0       0       0
  6546 ;;      Locals:         0       0       0       0
  6547 ;;      Temps:          3       0       0       0
  6548 ;;      Totals:         3       0       0       0
  6549 ;;Total ram usage:        3 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; Hardware stack levels required when called:    2
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_main
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           
  6560                           ;psect for function _CDS_Main
  6561  05D4                     _CDS_Main:	
  6562                           
  6563                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  6564                           
  6565                           ;incstack = 0
  6566                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  6567  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  6568  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  6569  05D6  1C33               	btfss	__CDS,0
  6570  05D7  0008               	return
  6571                           
  6572                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  6573  05D8  18B3               	btfsc	__CDS,1
  6574  05D9  2DE7               	goto	l81
  6575                           
  6576                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  6577  05DA  19B3               	btfsc	__CDS,3
  6578  05DB  0008               	return
  6579                           
  6580                           ;CDS_B1.c: 16: _CDS.Time++;
  6581  05DC  3001               	movlw	1
  6582  05DD  00F4               	movwf	??_CDS_Main
  6583  05DE  0874               	movf	??_CDS_Main,w
  6584  05DF  07B4               	addwf	__CDS+1,f
  6585                           
  6586                           ;CDS_B1.c: 18: {
  6587                           ;CDS_B1.c: 19: if (1 == 1) {
  6588  05E0  300A               	movlw	10
  6589  05E1  0234               	subwf	__CDS+1,w
  6590  05E2  1C03               	skipc
  6591  05E3  0008               	return
  6592                           
  6593                           ;CDS_B1.c: 20: _CDS.Time = 0;
  6594  05E4  01B4               	clrf	__CDS+1
  6595                           
  6596                           ;CDS_B1.c: 21: _CDS.ADtoGO = 1;
  6597  05E5  15B3               	bsf	__CDS,3
  6598                           
  6599                           ;CDS_B1.c: 22: } else {
  6600  05E6  0008               	return
  6601  05E7                     l81:	
  6602                           ;CDS_B1.c: 24: }
  6603                           ;CDS_B1.c: 25: }
  6604                           ;CDS_B1.c: 26: }
  6605                           ;CDS_B1.c: 27: } else {
  6606                           
  6607                           ;CDS_B1.c: 23: _CDS.Time = 10;
  6608                           
  6609                           
  6610                           ;CDS_B1.c: 28: if (_CDS.GO == 1) {
  6611  05E7  1CB3               	btfss	__CDS,1
  6612  05E8  0008               	return
  6613                           
  6614                           ;CDS_B1.c: 29: _CDS.GO = 0;
  6615  05E9  10B3               	bcf	__CDS,1
  6616                           
  6617                           ;CDS_B1.c: 30: if (_CDS.Status == 0) {
  6618  05EA  1A33               	btfsc	__CDS,4
  6619  05EB  2DF2               	goto	l2487
  6620                           
  6621                           ;CDS_B1.c: 31: if (_CDS.SignalAD >= _CDS.VRAD) {
  6622  05EC  0835               	movf	__CDS+2,w
  6623  05ED  0236               	subwf	__CDS+3,w
  6624  05EE  1C03               	skipc
  6625  05EF  0008               	return
  6626                           
  6627                           ;CDS_B1.c: 32: _CDS.Status = 1;
  6628  05F0  1633               	bsf	__CDS,4
  6629                           
  6630                           ;CDS_B1.c: 33: }
  6631                           ;CDS_B1.c: 34: } else {
  6632  05F1  0008               	return
  6633  05F2                     l2487:	
  6634                           
  6635                           ;CDS_B1.c: 35: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  6636  05F2  0835               	movf	__CDS+2,w
  6637  05F3  3E9C               	addlw	156
  6638  05F4  00F4               	movwf	??_CDS_Main
  6639  05F5  30FF               	movlw	255
  6640  05F6  1803               	skipnc
  6641  05F7  3000               	movlw	0
  6642  05F8  00F5               	movwf	??_CDS_Main+1
  6643  05F9  0875               	movf	??_CDS_Main+1,w
  6644  05FA  3A80               	xorlw	128
  6645  05FB  00F6               	movwf	??_CDS_Main+2
  6646  05FC  3080               	movlw	128
  6647  05FD  0276               	subwf	??_CDS_Main+2,w
  6648  05FE  1D03               	skipz
  6649  05FF  2E02               	goto	u2115
  6650  0600  0836               	movf	__CDS+3,w
  6651  0601  0274               	subwf	??_CDS_Main,w
  6652  0602                     u2115:	
  6653  0602  1C03               	skipc
  6654  0603  0008               	return
  6655                           
  6656                           ;CDS_B1.c: 36: _CDS.Status = 0;
  6657  0604  1283               	bcf	3,5	;RP0=0, select bank0
  6658  0605  1303               	bcf	3,6	;RP1=0, select bank0
  6659  0606  1233               	bcf	__CDS,4
  6660  0607  0008               	return
  6661  0608                     __end_of_CDS_Main:	
  6662                           
  6663                           	psect	text46
  6664  0FCA                     __ptext46:	
  6665 ;; *************** function _CDS_Initialization *****************
  6666 ;; Defined at:
  6667 ;;		line 7 in file "../src/CDS_B1.c"
  6668 ;; Parameters:    Size  Location     Type
  6669 ;;		None
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;		None               void
  6674 ;; Registers used:
  6675 ;;		None
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6681 ;;      Params:         0       0       0       0
  6682 ;;      Locals:         0       0       0       0
  6683 ;;      Temps:          0       0       0       0
  6684 ;;      Totals:         0       0       0       0
  6685 ;;Total ram usage:        0 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    2
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_main
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           
  6696                           ;psect for function _CDS_Initialization
  6697  0FCA                     _CDS_Initialization:	
  6698                           
  6699                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  6700                           
  6701                           ;incstack = 0
  6702                           ; Regs used in _CDS_Initialization: []
  6703  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  6704  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  6705  0FCC  1433               	bsf	__CDS,0
  6706  0FCD  0008               	return
  6707  0FCE                     __end_of_CDS_Initialization:	
  6708                           
  6709                           	psect	text47
  6710  0772                     __ptext47:	
  6711 ;; *************** function _ISR *****************
  6712 ;; Defined at:
  6713 ;;		line 107 in file "../src/MCU_B1.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;		None
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;		None               void
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, pclath, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6727 ;;      Params:         0       0       0       0
  6728 ;;      Locals:         0       0       0       0
  6729 ;;      Temps:          4       0       0       0
  6730 ;;      Totals:         4       0       0       0
  6731 ;;Total ram usage:        4 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    1
  6734 ;; This function calls:
  6735 ;;		_TMR1_ISR
  6736 ;; This function is called by:
  6737 ;;		Interrupt level 1
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           
  6742                           ;psect for function _ISR
  6743  0772                     _ISR:	
  6744                           
  6745                           ;MCU_B1.c: 109: ;;
  6746                           ;MCU_B1.c: 111: ;;
  6747                           ;MCU_B1.c: 113: TMR1_ISR();
  6748  0772  118A  26DA  118A   	fcall	_TMR1_ISR
  6749  0775  0873               	movf	??_ISR+3,w
  6750  0776  1283               	bcf	3,5	;RP0=0, select bank0
  6751  0777  1303               	bcf	3,6	;RP1=0, select bank0
  6752  0778  00FF               	movwf	127
  6753  0779  0872               	movf	??_ISR+2,w
  6754  077A  008A               	movwf	10
  6755  077B  0871               	movf	??_ISR+1,w
  6756  077C  0084               	movwf	4
  6757  077D  0E70               	swapf	??_ISR^(0+-128),w
  6758  077E  0083               	movwf	3
  6759  077F  0EFE               	swapf	126,f
  6760  0780  0E7E               	swapf	126,w
  6761  0781  0009               	retfie
  6762  0782                     __end_of_ISR:	
  6763                           
  6764                           	psect	intentry
  6765  0004                     __pintentry:	
  6766                           ;incstack = 0
  6767                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  6768                           
  6769  0004                     interrupt_function:	
  6770  007E                     saved_w	set	btemp
  6771  0004  00FE               	movwf	btemp
  6772  0005  0E03               	swapf	3,w
  6773  0006  00F0               	movwf	??_ISR
  6774  0007  0804               	movf	4,w
  6775  0008  00F1               	movwf	??_ISR+1
  6776  0009  080A               	movf	10,w
  6777  000A  00F2               	movwf	??_ISR+2
  6778  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6779  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6780  000D  087F               	movf	btemp+1,w
  6781  000E  00F3               	movwf	??_ISR+3
  6782  000F  118A  2F72         	ljmp	_ISR
  6783                           
  6784                           	psect	text48
  6785  06DA                     __ptext48:	
  6786 ;; *************** function _TMR1_ISR *****************
  6787 ;; Defined at:
  6788 ;;		line 209 in file "../src/MCU_B1.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;		None               void
  6795 ;; Registers used:
  6796 ;;		wreg, status,2
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6802 ;;      Params:         0       0       0       0
  6803 ;;      Locals:         0       0       0       0
  6804 ;;      Temps:          0       0       0       0
  6805 ;;      Totals:         0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_ISR
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           
  6816                           ;psect for function _TMR1_ISR
  6817  06DA                     _TMR1_ISR:	
  6818                           
  6819                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  6820                           
  6821                           ;incstack = 0
  6822                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  6823  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  6824  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  6825  06DC  1C0C               	btfss	12,0	;volatile
  6826  06DD  0008               	return
  6827  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  6828  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  6829  06E0  1C0C               	btfss	12,0	;volatile
  6830  06E1  0008               	return
  6831                           
  6832                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  6833  06E2  30FA               	movlw	250
  6834  06E3  008F               	movwf	15	;volatile
  6835                           
  6836                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  6837  06E4  3038               	movlw	56
  6838  06E5  008E               	movwf	14	;volatile
  6839                           
  6840                           ;MCU_B1.c: 214: TMR1IF = 0;
  6841  06E6  100C               	bcf	12,0	;volatile
  6842                           
  6843                           ;MCU_B1.c: 234: Timer1.Count++;
  6844  06E7  3001               	movlw	1
  6845  06E8  07B9               	addwf	_Timer1+1,f
  6846  06E9  1803               	skipnc
  6847  06EA  0ABA               	incf	_Timer1+2,f
  6848  06EB  3000               	movlw	0
  6849  06EC  07BA               	addwf	_Timer1+2,f
  6850                           
  6851                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  6852  06ED  3064               	movlw	100
  6853  06EE  0639               	xorwf	_Timer1+1,w
  6854  06EF  043A               	iorwf	_Timer1+2,w
  6855  06F0  1D03               	skipz
  6856  06F1  0008               	return
  6857                           
  6858                           ;MCU_B1.c: 236: {
  6859                           ;MCU_B1.c: 237: Timer1.Count = 0;
  6860  06F2  01B9               	clrf	_Timer1+1
  6861  06F3  01BA               	clrf	_Timer1+2
  6862                           
  6863                           ;MCU_B1.c: 238: myMain.T1_Timerout = 1;
  6864  06F4  1520               	bsf	_myMain,2
  6865  06F5  0008               	return
  6866  06F6                     __end_of_TMR1_ISR:	
  6867  007E                     btemp	set	126	;btemp
  6868  007E                     wtemp	set	126
  6869  007E                     wtemp0	set	126
  6870  0080                     wtemp1	set	128
  6871  0082                     wtemp2	set	130
  6872  0084                     wtemp3	set	132
  6873  0086                     wtemp4	set	134
  6874  0088                     wtemp5	set	136
  6875  007F                     wtemp6	set	127
  6876  007E                     ttemp	set	126
  6877  007E                     ttemp0	set	126
  6878  0081                     ttemp1	set	129
  6879  0084                     ttemp2	set	132
  6880  0087                     ttemp3	set	135
  6881  007F                     ttemp4	set	127
  6882  007E                     ltemp	set	126
  6883  007E                     ltemp0	set	126
  6884  0082                     ltemp1	set	130
  6885  0086                     ltemp2	set	134
  6886  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     19      77
    BANK1            80      0      47
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 8
		 -> NULL(NULL[0]), Lights1(BANK0[8]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_CDS_Main
    _main->_getCDS_AD
    _main->_getPIR_AD
    _main->_getTemp_AD
    _my_MainTime->_setTemp_Enable
    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _setOverTemp_Exceptions->_setLED
    _PIR_Main->_setLED
    _PIR_Main->_setLights_Switch
    _PIR_Main->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _setLights_Switch->_LightsPointSelect
    _getLights_Status->_LightsPointSelect
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _setLights->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setOverTemp_Exceptions
    _setOverTemp_Exceptions->_setLED
    _PIR_Main->_getLights_Status
    _Lights_Main->_setLights_Main
    _setLights_Main->_setLights
    _LED_Main->_setLED_Main
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   10909
                                             14 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                        _my_MainTime
 ---------------------------------------------------------------------------------
 (1) _my_MainTime                                          0     0      0      22
                     _setTemp_Enable
 ---------------------------------------------------------------------------------
 (2) _setTemp_Enable                                       1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     520
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2169
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     661
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     489
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1964
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    1964
                                              4 BANK0      1     1      0
             _setOverTemp_Exceptions
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_Exceptions                               3     3      0    1964
                                              1 BANK0      3     3      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             5     5      0    2750
                                              2 BANK0      5     5      0
                      _getCDS_Status
                   _getLights_Status
                  _getMain_Exception
                             _setLED
                   _setLights_Switch
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _setLights_Trigger                                    2     1      1     405
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLights_Switch                                     2     1      1     405
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getMain_Exception                                    1     1      0      46
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     614
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       2     2      0     490
                                              2 BANK0      2     2      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     332
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0     124
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1930
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1930
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (4) _setLED                                               2     1      1    1775
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (5) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_Exception
     _setLED
       _LedPointSelect
     _setLights_Switch
       _LightsPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _setOverTemp_Exceptions
         _setLED
           _LedPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTime
     _setTemp_Enable

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      86       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2F       7       58.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      86      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Oct 29 13:50:21 2014

                     _WDT_Clearing 0002                                 l81 05E7  
                     ___awdiv@sign 005F                                 fsr 0004  
                              l453 05C5                                l630 008F  
                              l623 0044                                l628 0067  
                              _GIE 005F                                _RB2 0032  
                              _RA4 002C                                _LED 0079  
                              _RB3 0033                                _RB4 0034  
                              _RB5 0035                                _PS0 0408  
                              _PS1 0409                                _PS2 040A  
                              _ISR 0772                                _PSA 040B  
                              _WDT 0077                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0FE8  
        __end_of_LightsPointSelect 07E0                   _getLights_Status 0731  
          __size_of_setTemp_Enable 0008            __size_of_Lights_Control 0057  
                             ?_ISR 0070                               l2221 069C  
                             l3031 0434                               l2215 0693  
                             l2217 0696                               l3121 0399  
                             l3019 041F                               l3131 03A1  
                             l3115 038E                               l3203 067D  
                             l3029 0431                               l3133 03AF  
                             l2263 07C6                               l3143 03D0  
                             l3231 0257                               l3223 0247  
                             l3401 018F                               l3321 007C  
                             l3161 04ED                               l3225 024B  
                             l3075 062D                               l3403 019A  
                             l3147 03D8                               l3139 03C5  
                             l3163 04FB                               l3251 029C  
                             l3227 024F                               l3219 0241  
                             l3235 025C                               l3413 01B4  
                             l3173 051C                               l3261 02CA  
                             l3245 0280                               l3229 0253  
                             l3237 026D                               l3095 0473  
                             l3169 0511                               l3281 0320  
                             l3371 00D4                               l3355 00B1  
                             l3275 0312                               l3267 02E6  
                             l2635 05C6                               l2627 05B4  
                             l3373 00D5                               l2487 05F2  
                             l2903 0358                               l3383 0121  
                             l3367 00C8                               l3455 04C4  
                             l2913 036D                               l2921 0379  
                             l3449 04A8                               l3395 015E  
                             l2917 0373                               l2951 0559  
                             l2865 06C8                               l2881 0334  
                             l2947 0544                               l2869 06D1  
                             l2885 033A                               l2895 034C  
                             l2975 058C                               l2889 0340  
                             l2899 0352                               l2979 0593  
                             l2997 03F7                  ?_setLights_Switch 0076  
            _myMain_Initialization 0FC3                       __CFG_WDTE$ON 0000  
                             u2115 0602                               u3110 046F  
                             u1525 0719                               u3205 03B0  
                             u3215 03BC                               u3225 03C6  
                             u3305 0512                               u3185 03A4  
                             u3265 04F0                               u3285 04FC  
                             u3295 0508                               u3715 01AA  
                             _PEIE 005E                               u3655 00F5  
                             u3745 01D1                               u3665 0119  
                             u3675 0142                               u3695 0185  
                             __CDS 0033                               __PIR 00A0  
                             _Temp 003C                 ??_setLights_Switch 0077  
                             _main 0492                               btemp 007E  
                  __end_of_WDT_Set 07D4                               ltemp 007E  
                             start 0011                               ttemp 007E  
                             wtemp 007E                   __end_of_CDS_Main 0608  
     __size_of_Temp_Initialization 0003                              ??_ISR 0070  
                _setLights_Trigger 0742                      ??_Lights_Main 0077  
                    __CFG_PLLEN$ON 0000                   __end_of_LED_Main 07EC  
               ?_setLights_Trigger 0076                              ?_main 0068  
                  __end_of___awdiv 03DF                              _ADRES 001E  
                  ___awdiv@divisor 005A                              _T1CON 0010  
                  __end_of___lwdiv 0523                    ___awdiv@counter 005E  
                            _TMR1H 000F                              _TMR1L 000E  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                       ?_setLED_Main 0070  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087            __end_of_Timeout_Counter 071F  
              ??_setLights_Trigger 0077                   __end_of_PIR_Main 01E8  
                 __end_of_TMR1_ISR 06F6                   __end_of_TMR1_Set 07AE  
                            _getAD 0686                   __end_of_WDT_Main 0791  
                   __CFG_BOREN$OFF 0000                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012      __end_of_setLED_Initialization 0731  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                  getPIR_AD@channel1 0066  
                getPIR_AD@channel2 0076                       ?_my_MainTime 0070  
                   _setLights_Main 0608                    __initialization 0013  
        __end_of_setLights_Trigger 0752                       __end_of_main 04E3  
                 __end_of_Fosc_Set 0FDB                          ??_ADC_Set 0074  
          setOverTemp_Exceptions@i 005C                             ??_main 006C  
              __end_of_Lights_Main 0FF0         __size_of_LightsPointSelect 000C  
                           ?_getAD 0074             ?_myMain_Initialization 0070  
                           _ADCON0 001F                             _ADCON1 009F  
                 ___awdiv@dividend 005C                          ??_WDT_Set 0074  
                           _ANSELA 0185                             _ANSELB 0186  
                           _FVRCON 009D             getLights_Status@lights 005A  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 06F6  
           getLights_Status@result 005B                   setLights@command 0076  
           __end_of_setLights_Main 0638         __end_of_Mcu_Initialization 07A0  
                           _Lights 003B                             _Timer1 0038  
      __size_of_CDS_Initialization 0004            ??_Lights_Initialization 0077  
                        ??___awdiv 0074                          ??___lwdiv 0074  
                           _setLED 0322                             _myMain 0020  
                 ___awdiv@quotient 0060                 __size_of_Temp_Main 0003  
                           saved_w 007E                   ?_Timeout_Counter 0070  
                   _setTemp_Enable 0FF8                     _Lights_Control 043B  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0070  
      __size_of_PIR_Initialization 0010            __end_of__initialization 0022  
                        ?_LED_Main 0070                    ?_setLights_Main 0070  
       __size_of_setLights_Trigger 0010                     __pcstackCOMMON 0070  
               __size_of_getCDS_AD 002A           __end_of_getLights_Status 0742  
                    __end_of_getAD 06A2                          ?_PIR_Main 0070  
                        ?_TMR1_ISR 0070                          ?_TMR1_Set 0070  
               _LED_Initialization 07EC                 __size_of_getPIR_AD 013A  
                      _Lights_Main 0FE8           _setLights_Initialization 07AE  
                        ?_WDT_Main 0070         __end_of_set_TimeoutCleared 0FE1  
              ?_LED_Initialization 0070             __end_of_setTemp_Enable 1000  
           __end_of_Lights_Control 0492               __size_of_setLED_Main 003B  
                          ??_getAD 0075                _Temp_Initialization 0FC4  
                       ??_CDS_Main 0074                         __pbssBANK0 0020  
                       __pbssBANK1 00A0                          ?_Fosc_Set 0070  
                __end_of_Temp_Main 0FCA                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                         ??_LED_Main 0077  
             ??_LED_Initialization 0077                  LedPointSelect@led 0075  
                       __pmaintext 0492               ?_Temp_Initialization 0070  
             __size_of_my_MainTime 003A                         ??_PIR_Main 005C  
                       ??_TMR1_ISR 0070          __size_of_setLights_Switch 0010  
                    ?_setTemp_Main 0070                 __size_of_setLights 003C  
                       ??_TMR1_Set 0074                         __pintentry 0004  
           setLights_Switch@lights 005A                            ?_setLED 0076  
          setLights_Trigger@lights 005A                            _ADC_Set 0FE1  
                       _getTemp_AD 0662                         ??_WDT_Main 0074  
           __size_of_getCDS_Status 0008                    ?_setTemp_Enable 0070  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 0662  
                          _WDT_Set 07C8                         ??_Fosc_Set 0074  
                __end_of_getPIR_AD 0322                    __size_of_IO_Set 0015  
                       getCDS_AD@i 005C                         getCDS_AD@j 005D  
                          _Lights1 0046                            _VarLED1 0052  
                          _VarLED2 0056              ??_Temp_Initialization 0074  
                   ??_setTemp_Main 005E                            ___awdiv 0382  
                          ___lwdiv 04E3           ??_setOverTemp_Exceptions 005B  
                  __size_of_setLED 0060                            __ptext0 0000  
                          __ptext1 059A                            __ptext2 0FF8  
                          __ptext3 0FC3                            __ptext4 0662  
                          __ptext5 01E8                            __ptext6 04E3  
                          __ptext7 0382                            __ptext8 0638  
                          __ptext9 0686                         getPIR_AD@i 0067  
                       getPIR_AD@j 0065                       __size_of_ISR 0010  
          ??_myMain_Initialization 0074           ??_setTemp_Initialization 0074  
                   _LedPointSelect 06BE                            clrloop0 07F9  
                __end_of_setLights 055F               end_of_initialization 0022  
                    _getCDS_Status 0FF0              _setLED_Initialization 071F  
   __size_of_Lights_Initialization 0004      __end_of_Lights_Initialization 0FD2  
                      ?_getTemp_AD 0070           setLED_Initialization@led 005B  
               _Mcu_Initialization 0791             __end_of_LedPointSelect 06DA  
              ?_Mcu_Initialization 0070                   ??_setLights_Main 0077  
             setLights_Main@lights 005D                  __size_of_CDS_Main 0034  
                   ?_getCDS_Status 0070                     __end_of_IO_Set 070B  
       __end_of_CDS_Initialization 0FCE         ??_setLights_Initialization 0076  
                __size_of_LED_Main 000C                  _getMain_Exception 07BC  
             ??_Mcu_Initialization 0075                      ?_WDT_Clearing 0070  
                 _setLights_Switch 0752                 ?_getMain_Exception 0070  
                ?_getLights_Status 0070                       ?_Lights_Main 0070  
  __size_of_setOverTemp_Exceptions 001C                  __size_of_PIR_Main 01C3  
                __size_of_TMR1_ISR 001C                 ??_getLights_Status 0076  
                __size_of_TMR1_Set 000E                     __end_of_setLED 0382  
              ??_getMain_Exception 0074                  __size_of_WDT_Main 000F  
              start_initialization 0013                    ?_LedPointSelect 0070  
                      __end_of_ISR 0782         __end_of_PIR_Initialization 0772  
              getCDS_Status@result 0074    __size_of_setTemp_Initialization 0004  
             __end_of_setTemp_Main 043B                 _set_TimeoutCleared 0FDB  
                         ??_IO_Set 0074           __size_of_Timeout_Counter 0014  
                        _VarErrLED 004E                __size_of_getTemp_AD 0024  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
        __end_of_getMain_Exception 07C8                          _Temp_Main 0FC7  
                  setLights@lights 005B      setOverTemp_Exceptions@command 005D  
              ?_set_TimeoutCleared 0070                     ??_WDT_Clearing 0074  
                         ??_setLED 0077                   ??_setTemp_Enable 0074  
                         ?_ADC_Set 0070                   ??_Lights_Control 005A  
                    ??_setLED_Main 005A                        __pbssCOMMON 0077  
                        ___latbits 0001              setTemp_Enable@command 0074  
                    __pcstackBANK0 005A               ??_set_TimeoutCleared 0074  
                         ?_WDT_Set 0070                    ??_getCDS_Status 0074  
           _setOverTemp_Exceptions 06A2                          _getCDS_AD 0638  
                    ??_my_MainTime 0075                          _getPIR_AD 01E8  
      __size_of_LED_Initialization 000C                         ?_Temp_Main 0070  
                 ___lwdiv@dividend 005C             _setTemp_Initialization 0FD2  
                         ?___awdiv 005A                           ?___lwdiv 005A  
          setLights_Switch@command 0076           setLights_Trigger@command 0076  
   __size_of_myMain_Initialization 0001      __end_of_myMain_Initialization 0FC4  
                   __size_of_getAD 001C                   ___lwdiv@quotient 005F  
                         _CDS_Main 05D4                __end_of_setLED_Main 059A  
      __end_of_Temp_Initialization 0FC7                  interrupt_function 0004  
                       ?_getCDS_AD 0076                           _LED_Main 07E0  
                        _setLights 0523                          clear_ram0 07F8  
       __size_of_getMain_Exception 000C   __end_of_setLights_Initialization 07BC  
                       ?_getPIR_AD 0076            getMain_Exception@result 0074  
                         _GO_nDONE 00F9                  ??_Timeout_Counter 0074  
                         _PIR_Main 0025                           _TMR1_ISR 06DA  
                         _TMR1_Set 07A0                __end_of_my_MainTime 05D4  
                     ??_getTemp_AD 005A                           _WDT_Main 0782  
              setLights_Main@clear 005C                   __size_of_ADC_Set 0007  
             __size_of_Lights_Main 0008              __size_of_setTemp_Main 005C  
                      getAD@adcon0 0075                        getAD@adcon1 0074  
                   setLED_Main@led 0076               __end_of_WDT_Clearing 0004  
         __end_of_setLights_Switch 0762                           _Fosc_Set 0FD6  
                 __size_of_WDT_Set 000C                         ?_setLights 0076  
               __end_of_getTemp_AD 0686                        ??_Temp_Main 0077  
                        setLED@led 005A                       _setTemp_Main 03DF  
                 __size_of___awdiv 005D                   __size_of___lwdiv 0040  
                 ??_LedPointSelect 0074                 _CDS_Initialization 0FCA  
            _Lights_Initialization 0FCE                  getTemp_AD@channel 0076  
                      _setLED_Main 055F                    ___lwdiv@divisor 005A  
              ?_CDS_Initialization 0070                    ___lwdiv@counter 005E  
                         __ptext10 0FDB                           __ptext11 070B  
                         __ptext20 0742                           __ptext12 0782  
                         __ptext21 0752                           __ptext13 0002  
                         __ptext30 0FD6                           __ptext22 07BC  
                         __ptext14 0FC7                           __ptext31 0FE1  
                         __ptext23 0731                           __ptext15 03DF  
                         __ptext40 055F                           __ptext32 0FE8  
                         __ptext24 0FF0                           __ptext16 06A2  
                         __ptext41 07EC                           __ptext33 0608  
                         __ptext25 0762                           __ptext17 0FC4  
                         __ptext42 071F                           __ptext34 0523  
                         __ptext26 0791                           __ptext18 0FD2  
                         __ptext43 0322                           __ptext35 043B  
                         __ptext27 07C8                           __ptext19 0025  
                         __ptext44 06BE                           __ptext36 0FCE  
                         __ptext28 07A0                           __ptext45 05D4  
                         __ptext37 07AE                           __ptext29 06F6  
                         __ptext46 0FCA                           __ptext38 07D4  
                         __ptext47 0772                           __ptext39 07E0  
                         __ptext48 06DA          __size_of_getLights_Status 0011  
          ??_setLED_Initialization 0077                        ??_getCDS_AD 005A  
                    setLED@command 0076                      __size_of_main 0051  
                      ??_getPIR_AD 0062                 _PIR_Initialization 0762  
                      _my_MainTime 059A               ??_CDS_Initialization 0074  
      __size_of_Mcu_Initialization 000F                ?_PIR_Initialization 0070  
                         main@argc 0068                           main@argv 006A  
__size_of_setLights_Initialization 000E          ?_setLights_Initialization 0070  
             Lights_Control@lights 0076            ?_setOverTemp_Exceptions 0070  
             ??_PIR_Initialization 0074                           intlevel1 0000  
                      ??_setLights 005A            ?_setTemp_Initialization 0070  
          LightsPointSelect@lights 0075            __size_of_setLights_Main 0030  
           ?_Lights_Initialization 0070              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0076     __end_of_setOverTemp_Exceptions 06BE  
      __size_of_set_TimeoutCleared 0006                  _LightsPointSelect 07D4  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
                  _Timeout_Counter 070B         __end_of_LED_Initialization 07F8  
            __end_of_getCDS_Status 0FF8     __end_of_setTemp_Initialization 0FD6  
                getCDS_AD@channel1 005E                  getCDS_AD@channel2 0076  
              ??_LightsPointSelect 0074  
