

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Dec 11 13:38:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    77                           	dabs	1,0x7E,2
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0096                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009F                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0186                     	;# 
   146  018C                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0096                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009F                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0186                     	;# 
   215  018C                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0096                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009F                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0186                     	;# 
   284  018C                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0096                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009F                     	;# 
   343  0108                     	;# 
   344  0109                     	;# 
   345  010C                     	;# 
   346  010C                     	;# 
   347  010D                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  0185                     	;# 
   352  0186                     	;# 
   353  018C                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001D                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  0081                     	;# 
   389  0085                     	;# 
   390  0086                     	;# 
   391  0087                     	;# 
   392  0089                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0095                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0096                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009F                     	;# 
   412  0108                     	;# 
   413  0109                     	;# 
   414  010C                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010D                     	;# 
   418  010E                     	;# 
   419  010F                     	;# 
   420  0185                     	;# 
   421  0186                     	;# 
   422  018C                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  000E                     	;# 
   437  000E                     	;# 
   438  000F                     	;# 
   439  0010                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001B                     	;# 
   453  001C                     	;# 
   454  001D                     	;# 
   455  001E                     	;# 
   456  001F                     	;# 
   457  0081                     	;# 
   458  0085                     	;# 
   459  0086                     	;# 
   460  0087                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  008F                     	;# 
   466  0090                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0095                     	;# 
   473  0095                     	;# 
   474  0096                     	;# 
   475  0096                     	;# 
   476  0098                     	;# 
   477  0099                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009F                     	;# 
   481  0108                     	;# 
   482  0109                     	;# 
   483  010C                     	;# 
   484  010C                     	;# 
   485  010D                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0186                     	;# 
   491  018C                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000E                     	;# 
   507  000F                     	;# 
   508  0010                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0014                     	;# 
   513  0015                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0017                     	;# 
   517  0018                     	;# 
   518  0019                     	;# 
   519  001A                     	;# 
   520  001B                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  001D                     	;# 
   524  001E                     	;# 
   525  001F                     	;# 
   526  0081                     	;# 
   527  0085                     	;# 
   528  0086                     	;# 
   529  0087                     	;# 
   530  0089                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  008E                     	;# 
   534  008F                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0096                     	;# 
   545  0098                     	;# 
   546  0099                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009F                     	;# 
   550  0108                     	;# 
   551  0109                     	;# 
   552  010C                     	;# 
   553  010C                     	;# 
   554  010D                     	;# 
   555  010D                     	;# 
   556  010E                     	;# 
   557  010F                     	;# 
   558  0185                     	;# 
   559  0186                     	;# 
   560  018C                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000D                     	;# 
   574  000E                     	;# 
   575  000E                     	;# 
   576  000F                     	;# 
   577  0010                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  0081                     	;# 
   596  0085                     	;# 
   597  0086                     	;# 
   598  0087                     	;# 
   599  0089                     	;# 
   600  008C                     	;# 
   601  008D                     	;# 
   602  008E                     	;# 
   603  008F                     	;# 
   604  0090                     	;# 
   605  0091                     	;# 
   606  0092                     	;# 
   607  0093                     	;# 
   608  0093                     	;# 
   609  0094                     	;# 
   610  0095                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0096                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009F                     	;# 
   619  0108                     	;# 
   620  0109                     	;# 
   621  010C                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0185                     	;# 
   628  0186                     	;# 
   629  018C                     	;# 
   630  0000                     	;# 
   631  0001                     	;# 
   632  0002                     	;# 
   633  0003                     	;# 
   634  0004                     	;# 
   635  0005                     	;# 
   636  0006                     	;# 
   637  0007                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  000E                     	;# 
   645  000F                     	;# 
   646  0010                     	;# 
   647  0011                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0014                     	;# 
   651  0015                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0017                     	;# 
   655  0018                     	;# 
   656  0019                     	;# 
   657  001A                     	;# 
   658  001B                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  001D                     	;# 
   662  001E                     	;# 
   663  001F                     	;# 
   664  0081                     	;# 
   665  0085                     	;# 
   666  0086                     	;# 
   667  0087                     	;# 
   668  0089                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  008F                     	;# 
   673  0090                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0093                     	;# 
   677  0093                     	;# 
   678  0094                     	;# 
   679  0095                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0096                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009C                     	;# 
   686  009D                     	;# 
   687  009F                     	;# 
   688  0108                     	;# 
   689  0109                     	;# 
   690  010C                     	;# 
   691  010C                     	;# 
   692  010D                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  010F                     	;# 
   696  0185                     	;# 
   697  0186                     	;# 
   698  018C                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000D                     	;# 
   712  000E                     	;# 
   713  000E                     	;# 
   714  000F                     	;# 
   715  0010                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0014                     	;# 
   720  0015                     	;# 
   721  0015                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001B                     	;# 
   729  001C                     	;# 
   730  001D                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  0081                     	;# 
   734  0085                     	;# 
   735  0086                     	;# 
   736  0087                     	;# 
   737  0089                     	;# 
   738  008C                     	;# 
   739  008D                     	;# 
   740  008E                     	;# 
   741  008F                     	;# 
   742  0090                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0093                     	;# 
   747  0094                     	;# 
   748  0095                     	;# 
   749  0095                     	;# 
   750  0096                     	;# 
   751  0096                     	;# 
   752  0098                     	;# 
   753  0099                     	;# 
   754  009C                     	;# 
   755  009D                     	;# 
   756  009F                     	;# 
   757  0108                     	;# 
   758  0109                     	;# 
   759  010C                     	;# 
   760  010C                     	;# 
   761  010D                     	;# 
   762  010D                     	;# 
   763  010E                     	;# 
   764  010F                     	;# 
   765  0185                     	;# 
   766  0186                     	;# 
   767  018C                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0009                     	;# 
   777  000A                     	;# 
   778  000B                     	;# 
   779  000C                     	;# 
   780  000D                     	;# 
   781  000E                     	;# 
   782  000E                     	;# 
   783  000F                     	;# 
   784  0010                     	;# 
   785  0011                     	;# 
   786  0012                     	;# 
   787  0013                     	;# 
   788  0014                     	;# 
   789  0015                     	;# 
   790  0015                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  001A                     	;# 
   796  001B                     	;# 
   797  001B                     	;# 
   798  001C                     	;# 
   799  001D                     	;# 
   800  001E                     	;# 
   801  001F                     	;# 
   802  0081                     	;# 
   803  0085                     	;# 
   804  0086                     	;# 
   805  0087                     	;# 
   806  0089                     	;# 
   807  008C                     	;# 
   808  008D                     	;# 
   809  008E                     	;# 
   810  008F                     	;# 
   811  0090                     	;# 
   812  0091                     	;# 
   813  0092                     	;# 
   814  0093                     	;# 
   815  0093                     	;# 
   816  0094                     	;# 
   817  0095                     	;# 
   818  0095                     	;# 
   819  0096                     	;# 
   820  0096                     	;# 
   821  0098                     	;# 
   822  0099                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009F                     	;# 
   826  0108                     	;# 
   827  0109                     	;# 
   828  010C                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  010F                     	;# 
   834  0185                     	;# 
   835  0186                     	;# 
   836  018C                     	;# 
   837  0000                     	;# 
   838  0001                     	;# 
   839  0002                     	;# 
   840  0003                     	;# 
   841  0004                     	;# 
   842  0005                     	;# 
   843  0006                     	;# 
   844  0007                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  000E                     	;# 
   852  000F                     	;# 
   853  0010                     	;# 
   854  0011                     	;# 
   855  0012                     	;# 
   856  0013                     	;# 
   857  0014                     	;# 
   858  0015                     	;# 
   859  0015                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  001A                     	;# 
   865  001B                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001D                     	;# 
   869  001E                     	;# 
   870  001F                     	;# 
   871  0081                     	;# 
   872  0085                     	;# 
   873  0086                     	;# 
   874  0087                     	;# 
   875  0089                     	;# 
   876  008C                     	;# 
   877  008D                     	;# 
   878  008E                     	;# 
   879  008F                     	;# 
   880  0090                     	;# 
   881  0091                     	;# 
   882  0092                     	;# 
   883  0093                     	;# 
   884  0093                     	;# 
   885  0094                     	;# 
   886  0095                     	;# 
   887  0095                     	;# 
   888  0096                     	;# 
   889  0096                     	;# 
   890  0098                     	;# 
   891  0099                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009F                     	;# 
   895  0108                     	;# 
   896  0109                     	;# 
   897  010C                     	;# 
   898  010C                     	;# 
   899  010D                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  010F                     	;# 
   903  0185                     	;# 
   904  0186                     	;# 
   905  018C                     	;# 
   906  0000                     	;# 
   907  0001                     	;# 
   908  0002                     	;# 
   909  0003                     	;# 
   910  0004                     	;# 
   911  0005                     	;# 
   912  0006                     	;# 
   913  0007                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  000D                     	;# 
   919  000E                     	;# 
   920  000E                     	;# 
   921  000F                     	;# 
   922  0010                     	;# 
   923  0011                     	;# 
   924  0012                     	;# 
   925  0013                     	;# 
   926  0014                     	;# 
   927  0015                     	;# 
   928  0015                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001B                     	;# 
   936  001C                     	;# 
   937  001D                     	;# 
   938  001E                     	;# 
   939  001F                     	;# 
   940  0081                     	;# 
   941  0085                     	;# 
   942  0086                     	;# 
   943  0087                     	;# 
   944  0089                     	;# 
   945  008C                     	;# 
   946  008D                     	;# 
   947  008E                     	;# 
   948  008F                     	;# 
   949  0090                     	;# 
   950  0091                     	;# 
   951  0092                     	;# 
   952  0093                     	;# 
   953  0093                     	;# 
   954  0094                     	;# 
   955  0095                     	;# 
   956  0095                     	;# 
   957  0096                     	;# 
   958  0096                     	;# 
   959  0098                     	;# 
   960  0099                     	;# 
   961  009C                     	;# 
   962  009D                     	;# 
   963  009F                     	;# 
   964  0108                     	;# 
   965  0109                     	;# 
   966  010C                     	;# 
   967  010C                     	;# 
   968  010D                     	;# 
   969  010D                     	;# 
   970  010E                     	;# 
   971  010F                     	;# 
   972  0185                     	;# 
   973  0186                     	;# 
   974  018C                     	;# 
   975  0000                     	;# 
   976  0001                     	;# 
   977  0002                     	;# 
   978  0003                     	;# 
   979  0004                     	;# 
   980  0005                     	;# 
   981  0006                     	;# 
   982  0007                     	;# 
   983  0009                     	;# 
   984  000A                     	;# 
   985  000B                     	;# 
   986  000C                     	;# 
   987  000D                     	;# 
   988  000E                     	;# 
   989  000E                     	;# 
   990  000F                     	;# 
   991  0010                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0013                     	;# 
   995  0014                     	;# 
   996  0015                     	;# 
   997  0015                     	;# 
   998  0016                     	;# 
   999  0017                     	;# 
  1000  0018                     	;# 
  1001  0019                     	;# 
  1002  001A                     	;# 
  1003  001B                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  001D                     	;# 
  1007  001E                     	;# 
  1008  001F                     	;# 
  1009  0081                     	;# 
  1010  0085                     	;# 
  1011  0086                     	;# 
  1012  0087                     	;# 
  1013  0089                     	;# 
  1014  008C                     	;# 
  1015  008D                     	;# 
  1016  008E                     	;# 
  1017  008F                     	;# 
  1018  0090                     	;# 
  1019  0091                     	;# 
  1020  0092                     	;# 
  1021  0093                     	;# 
  1022  0093                     	;# 
  1023  0094                     	;# 
  1024  0095                     	;# 
  1025  0095                     	;# 
  1026  0096                     	;# 
  1027  0096                     	;# 
  1028  0098                     	;# 
  1029  0099                     	;# 
  1030  009C                     	;# 
  1031  009D                     	;# 
  1032  009F                     	;# 
  1033  0108                     	;# 
  1034  0109                     	;# 
  1035  010C                     	;# 
  1036  010C                     	;# 
  1037  010D                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  010F                     	;# 
  1041  0185                     	;# 
  1042  0186                     	;# 
  1043  018C                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0009                     	;# 
  1053  000A                     	;# 
  1054  000B                     	;# 
  1055  000C                     	;# 
  1056  000D                     	;# 
  1057  000E                     	;# 
  1058  000E                     	;# 
  1059  000F                     	;# 
  1060  0010                     	;# 
  1061  0011                     	;# 
  1062  0012                     	;# 
  1063  0013                     	;# 
  1064  0014                     	;# 
  1065  0015                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0017                     	;# 
  1069  0018                     	;# 
  1070  0019                     	;# 
  1071  001A                     	;# 
  1072  001B                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  001D                     	;# 
  1076  001E                     	;# 
  1077  001F                     	;# 
  1078  0081                     	;# 
  1079  0085                     	;# 
  1080  0086                     	;# 
  1081  0087                     	;# 
  1082  0089                     	;# 
  1083  008C                     	;# 
  1084  008D                     	;# 
  1085  008E                     	;# 
  1086  008F                     	;# 
  1087  0090                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0093                     	;# 
  1091  0093                     	;# 
  1092  0094                     	;# 
  1093  0095                     	;# 
  1094  0095                     	;# 
  1095  0096                     	;# 
  1096  0096                     	;# 
  1097  0098                     	;# 
  1098  0099                     	;# 
  1099  009C                     	;# 
  1100  009D                     	;# 
  1101  009F                     	;# 
  1102  0108                     	;# 
  1103  0109                     	;# 
  1104  010C                     	;# 
  1105  010C                     	;# 
  1106  010D                     	;# 
  1107  010D                     	;# 
  1108  010E                     	;# 
  1109  010F                     	;# 
  1110  0185                     	;# 
  1111  0186                     	;# 
  1112  018C                     	;# 
  1113  0000                     	;# 
  1114  0001                     	;# 
  1115  0002                     	;# 
  1116  0003                     	;# 
  1117  0004                     	;# 
  1118  0005                     	;# 
  1119  0006                     	;# 
  1120  0007                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  000E                     	;# 
  1128  000F                     	;# 
  1129  0010                     	;# 
  1130  0011                     	;# 
  1131  0012                     	;# 
  1132  0013                     	;# 
  1133  0014                     	;# 
  1134  0015                     	;# 
  1135  0015                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001B                     	;# 
  1143  001C                     	;# 
  1144  001D                     	;# 
  1145  001E                     	;# 
  1146  001F                     	;# 
  1147  0081                     	;# 
  1148  0085                     	;# 
  1149  0086                     	;# 
  1150  0087                     	;# 
  1151  0089                     	;# 
  1152  008C                     	;# 
  1153  008D                     	;# 
  1154  008E                     	;# 
  1155  008F                     	;# 
  1156  0090                     	;# 
  1157  0091                     	;# 
  1158  0092                     	;# 
  1159  0093                     	;# 
  1160  0093                     	;# 
  1161  0094                     	;# 
  1162  0095                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0096                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009C                     	;# 
  1169  009D                     	;# 
  1170  009F                     	;# 
  1171  0108                     	;# 
  1172  0109                     	;# 
  1173  010C                     	;# 
  1174  010C                     	;# 
  1175  010D                     	;# 
  1176  010D                     	;# 
  1177  010E                     	;# 
  1178  010F                     	;# 
  1179  0185                     	;# 
  1180  0186                     	;# 
  1181  018C                     	;# 
  1182  0000                     	;# 
  1183  0001                     	;# 
  1184  0002                     	;# 
  1185  0003                     	;# 
  1186  0004                     	;# 
  1187  0005                     	;# 
  1188  0006                     	;# 
  1189  0007                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  000E                     	;# 
  1196  000E                     	;# 
  1197  000F                     	;# 
  1198  0010                     	;# 
  1199  0011                     	;# 
  1200  0012                     	;# 
  1201  0013                     	;# 
  1202  0014                     	;# 
  1203  0015                     	;# 
  1204  0015                     	;# 
  1205  0016                     	;# 
  1206  0017                     	;# 
  1207  0018                     	;# 
  1208  0019                     	;# 
  1209  001A                     	;# 
  1210  001B                     	;# 
  1211  001B                     	;# 
  1212  001C                     	;# 
  1213  001D                     	;# 
  1214  001E                     	;# 
  1215  001F                     	;# 
  1216  0081                     	;# 
  1217  0085                     	;# 
  1218  0086                     	;# 
  1219  0087                     	;# 
  1220  0089                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  008F                     	;# 
  1225  0090                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0093                     	;# 
  1230  0094                     	;# 
  1231  0095                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0096                     	;# 
  1235  0098                     	;# 
  1236  0099                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009F                     	;# 
  1240  0108                     	;# 
  1241  0109                     	;# 
  1242  010C                     	;# 
  1243  010C                     	;# 
  1244  010D                     	;# 
  1245  010D                     	;# 
  1246  010E                     	;# 
  1247  010F                     	;# 
  1248  0185                     	;# 
  1249  0186                     	;# 
  1250  018C                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0009                     	;# 
  1260  000A                     	;# 
  1261  000B                     	;# 
  1262  000C                     	;# 
  1263  000D                     	;# 
  1264  000E                     	;# 
  1265  000E                     	;# 
  1266  000F                     	;# 
  1267  0010                     	;# 
  1268  0011                     	;# 
  1269  0012                     	;# 
  1270  0013                     	;# 
  1271  0014                     	;# 
  1272  0015                     	;# 
  1273  0015                     	;# 
  1274  0016                     	;# 
  1275  0017                     	;# 
  1276  0018                     	;# 
  1277  0019                     	;# 
  1278  001A                     	;# 
  1279  001B                     	;# 
  1280  001B                     	;# 
  1281  001C                     	;# 
  1282  001D                     	;# 
  1283  001E                     	;# 
  1284  001F                     	;# 
  1285  0081                     	;# 
  1286  0085                     	;# 
  1287  0086                     	;# 
  1288  0087                     	;# 
  1289  0089                     	;# 
  1290  008C                     	;# 
  1291  008D                     	;# 
  1292  008E                     	;# 
  1293  008F                     	;# 
  1294  0090                     	;# 
  1295  0091                     	;# 
  1296  0092                     	;# 
  1297  0093                     	;# 
  1298  0093                     	;# 
  1299  0094                     	;# 
  1300  0095                     	;# 
  1301  0095                     	;# 
  1302  0096                     	;# 
  1303  0096                     	;# 
  1304  0098                     	;# 
  1305  0099                     	;# 
  1306  009C                     	;# 
  1307  009D                     	;# 
  1308  009F                     	;# 
  1309  0108                     	;# 
  1310  0109                     	;# 
  1311  010C                     	;# 
  1312  010C                     	;# 
  1313  010D                     	;# 
  1314  010D                     	;# 
  1315  010E                     	;# 
  1316  010F                     	;# 
  1317  0185                     	;# 
  1318  0186                     	;# 
  1319  018C                     	;# 
  1320  001F                     _ADCON0	set	31
  1321  001E                     _ADRES	set	30
  1322  0005                     _PORTA	set	5
  1323  0006                     _PORTB	set	6
  1324  0007                     _PORTC	set	7
  1325  0010                     _T1CON	set	16
  1326  000F                     _TMR1H	set	15
  1327  000E                     _TMR1L	set	14
  1328  005F                     _GIE	set	95
  1329  00F9                     _GO_nDONE	set	249
  1330  005E                     _PEIE	set	94
  1331  002C                     _RA4	set	44
  1332  002D                     _RA5	set	45
  1333  0032                     _RB2	set	50
  1334  0033                     _RB3	set	51
  1335  0034                     _RB4	set	52
  1336  0035                     _RB5	set	53
  1337  0060                     _TMR1IF	set	96
  1338  009F                     _ADCON1	set	159
  1339  009D                     _FVRCON	set	157
  1340  0090                     _OSCCON	set	144
  1341  0085                     _TRISA	set	133
  1342  0086                     _TRISB	set	134
  1343  0087                     _TRISC	set	135
  1344  0408                     _PS0	set	1032
  1345  0409                     _PS1	set	1033
  1346  040A                     _PS2	set	1034
  1347  040B                     _PSA	set	1035
  1348  0460                     _TMR1IE	set	1120
  1349  0185                     _ANSELA	set	389
  1350  0186                     _ANSELB	set	390
  1351                           
  1352                           	psect	text0
  1353  0000                     __ptext0:	
  1354                           ; #config settings
  1355                           
  1356                           
  1357                           ;psect for function _TMR1_ISR
  1358  0000                     
  1359                           	psect	cinit
  1360  0013                     start_initialization:	
  1361  0013                     __initialization:	
  1362                           
  1363                           ; Clear objects allocated to COMMON
  1364  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1365  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1366  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369  0016  1383               	bcf	3,7	;select IRP bank0
  1370  0017  3020               	movlw	low __pbssBANK0
  1371  0018  0084               	movwf	4
  1372  0019  3059               	movlw	low (__pbssBANK0+57)
  1373  001A  158A  23A4  118A   	fcall	clear_ram0
  1374                           
  1375                           ; Clear objects allocated to BANK1
  1376  001D  30A0               	movlw	low __pbssBANK1
  1377  001E  0084               	movwf	4
  1378  001F  30EF               	movlw	low (__pbssBANK1+79)
  1379  0020  158A  23A4         	fcall	clear_ram0
  1380  0022                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0022                     __end_of__initialization:	
  1384  0022  0183               	clrf	3
  1385  0023  158A  2F9A         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0077                     __pbssCOMMON:	
  1389  0077                     _LED:	
  1390  0077                     	ds	1
  1391  0078                     _Lights:	
  1392  0078                     	ds	1
  1393  0079                     _SwDetect:	
  1394  0079                     	ds	1
  1395                           
  1396                           	psect	bssBANK0
  1397  0020                     __pbssBANK0:	
  1398  0020                     _myMain:	
  1399  0020                     	ds	6
  1400  0026                     _SYSC:	
  1401  0026                     	ds	5
  1402  002B                     __CDS:	
  1403  002B                     	ds	5
  1404  0030                     _PIRLED:	
  1405  0030                     	ds	4
  1406  0034                     _Timer1:	
  1407  0034                     	ds	3
  1408  0037                     _WDT:	
  1409  0037                     	ds	2
  1410  0039                     _LightsControl:	
  1411  0039                     	ds	1
  1412  003A                     _Temp:	
  1413  003A                     	ds	12
  1414  0046                     _Lights1:	
  1415  0046                     	ds	7
  1416  004D                     _VarErrLED:	
  1417  004D                     	ds	4
  1418  0051                     _VarLED1:	
  1419  0051                     	ds	4
  1420  0055                     _VarLED2:	
  1421  0055                     	ds	4
  1422                           
  1423                           	psect	bssBANK1
  1424  00A0                     __pbssBANK1:	
  1425  00A0                     __PIR:	
  1426  00A0                     	ds	46
  1427  00CE                     _Load:	
  1428  00CE                     	ds	33
  1429                           
  1430                           	psect	clrtext
  1431  0BA4                     clear_ram0:	
  1432                           ;	Called with FSR containing the base address, and
  1433                           ;	W with the last address+1
  1434                           
  1435  0BA4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1436  0BA5                     clrloop0:	
  1437  0BA5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1438  0BA6  0A84               	incf	4,f	;increment pointer
  1439  0BA7  0604               	xorwf	4,w	;XOR with final address
  1440  0BA8  1903               	btfsc	3,2	;have we reached the end yet?
  1441  0BA9  3400               	retlw	0	;all done for this memory range, return
  1442  0BAA  0604               	xorwf	4,w	;XOR again to restore value
  1443  0BAB  2BA5               	goto	clrloop0	;do the next byte
  1444                           
  1445                           	psect	cstackCOMMON
  1446  0070                     __pcstackCOMMON:	
  1447  0070                     ?_setLED_Initialization:	
  1448  0070                     ?_setPIRLED_Main:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_Fosc_Set:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_IO_Set:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_TMR1_Set:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_ADC_Set:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_WDT_Set:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_TMR1_ISR:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ??_TMR1_ISR:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_Timeout_Counter:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ?_set_TimeoutCleared:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_WDT_Clearing:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_myMain_Initialization:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_SYSC_Initialization:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_Temp_Initialization:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_Load_Initialization:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Lights_Initialization:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_PIR_Initialization:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_DetectSYSC_Signal:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_getLoad_AD:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_getTemp_AD:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_my_MainTimer:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_SYSC_Main:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_Temp_Main:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_Load_Main:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Lights_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_PIR_Main:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Exception_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_setLoad_AH_AL_Restore:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_setTemp_Initialization:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_setTemp_Main:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_setSYSC_Initialization:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_setSYSC_Main:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_setLights_Initialization:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_setLights_Main:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_Lights_Control:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_Lights_Close:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_setLights_Line:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_CDS_Initialization:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_CDS_Main:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_LedPointSelect:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_LED_Initialization:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ?_LED_Main:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_Mcu_Initialization:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ?_ISR:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ??_ISR:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ?_WDT_Main:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_LightsPointSelect:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ?_getAll_Lights_Line:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ?_getLights_Status:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_getLightsControl_OK:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ?_getCDS_Status:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_getMain_LightsStatus:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_getMain_All_Error_Status:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_getMain_Lights_Count:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_getMain_LoadOK:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_getLoad_OK:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616                           
  1617                           ; 1 bytes @ 0x0
  1618  0070                     	ds	4
  1619  0074                     ??_Fosc_Set:	
  1620  0074                     ??_IO_Set:	
  1621                           ; 0 bytes @ 0x4
  1622                           
  1623  0074                     ??_TMR1_Set:	
  1624                           ; 0 bytes @ 0x4
  1625                           
  1626  0074                     ??_ADC_Set:	
  1627                           ; 0 bytes @ 0x4
  1628                           
  1629  0074                     ??_WDT_Set:	
  1630                           ; 0 bytes @ 0x4
  1631                           
  1632  0074                     ??_Timeout_Counter:	
  1633                           ; 0 bytes @ 0x4
  1634                           
  1635  0074                     ??_set_TimeoutCleared:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638  0074                     ??_WDT_Clearing:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??_myMain_Initialization:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??_SYSC_Initialization:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ??_Temp_Initialization:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     ??_PIR_Initialization:	
  1651                           ; 0 bytes @ 0x4
  1652                           
  1653  0074                     ??_DetectSYSC_Signal:	
  1654                           ; 0 bytes @ 0x4
  1655                           
  1656  0074                     ??_my_MainTimer:	
  1657                           ; 0 bytes @ 0x4
  1658                           
  1659  0074                     ??_getLightsControl_OK:	
  1660                           ; 0 bytes @ 0x4
  1661                           
  1662  0074                     ??_setLoad_AH_AL_Restore:	
  1663                           ; 0 bytes @ 0x4
  1664                           
  1665  0074                     ??_setTemp_Initialization:	
  1666                           ; 0 bytes @ 0x4
  1667                           
  1668  0074                     ??_setSYSC_Initialization:	
  1669                           ; 0 bytes @ 0x4
  1670                           
  1671  0074                     ??_CDS_Initialization:	
  1672                           ; 0 bytes @ 0x4
  1673                           
  1674  0074                     ??_CDS_Main:	
  1675                           ; 0 bytes @ 0x4
  1676                           
  1677  0074                     ??_getCDS_Status:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     ??_LedPointSelect:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     ??_WDT_Main:	
  1684                           ; 0 bytes @ 0x4
  1685                           
  1686  0074                     ??_getMain_All_Error_Status:	
  1687                           ; 0 bytes @ 0x4
  1688                           
  1689  0074                     ??_getMain_Lights_Count:	
  1690                           ; 0 bytes @ 0x4
  1691                           
  1692  0074                     ??_getLoad_OK:	
  1693                           ; 0 bytes @ 0x4
  1694                           
  1695  0074                     ??_LightsPointSelect:	
  1696                           ; 0 bytes @ 0x4
  1697                           
  1698  0074                     ??___awdiv:	
  1699                           ; 0 bytes @ 0x4
  1700                           
  1701  0074                     ??___lwdiv:	
  1702                           ; 0 bytes @ 0x4
  1703                           
  1704  0074                     ?_getAD:	
  1705                           ; 0 bytes @ 0x4
  1706                           
  1707  0074                     getCDS_Status@status:	
  1708                           ; 1 bytes @ 0x4
  1709                           
  1710  0074                     getAD@adcon1:	
  1711                           ; 1 bytes @ 0x4
  1712                           
  1713  0074                     getLoad_OK@ok:	
  1714                           ; 1 bytes @ 0x4
  1715                           
  1716  0074                     getLightsControl_OK@loadok:	
  1717                           ; 1 bytes @ 0x4
  1718                           
  1719                           
  1720                           ; 1 bytes @ 0x4
  1721  0074                     	ds	1
  1722  0075                     ??_getAD:	
  1723  0075                     ??_SYSC_Main:	
  1724                           ; 0 bytes @ 0x5
  1725                           
  1726  0075                     ??_setSYSC_Main:	
  1727                           ; 0 bytes @ 0x5
  1728                           
  1729  0075                     ??_Mcu_Initialization:	
  1730                           ; 0 bytes @ 0x5
  1731                           
  1732  0075                     ??_getMain_LoadOK:	
  1733                           ; 0 bytes @ 0x5
  1734                           
  1735  0075                     LedPointSelect@led:	
  1736                           ; 0 bytes @ 0x5
  1737                           
  1738  0075                     getAD@adcon0:	
  1739                           ; 1 bytes @ 0x5
  1740                           
  1741  0075                     setLoad_AH_AL_Restore@i:	
  1742                           ; 1 bytes @ 0x5
  1743                           
  1744  0075                     LightsPointSelect@lights:	
  1745                           ; 1 bytes @ 0x5
  1746                           
  1747                           
  1748                           ; 1 bytes @ 0x5
  1749  0075                     	ds	1
  1750  0076                     ?_setLED:	
  1751  0076                     ??_Load_Initialization:	
  1752                           ; 0 bytes @ 0x6
  1753                           
  1754  0076                     ?_getPIR_AD:	
  1755                           ; 0 bytes @ 0x6
  1756                           
  1757  0076                     ??_getAll_Lights_Line:	
  1758                           ; 0 bytes @ 0x6
  1759                           
  1760  0076                     ??_getLights_Status:	
  1761                           ; 0 bytes @ 0x6
  1762                           
  1763  0076                     ?_setLights_Trigger:	
  1764                           ; 0 bytes @ 0x6
  1765                           
  1766  0076                     ??_setLights_Initialization:	
  1767                           ; 0 bytes @ 0x6
  1768                           
  1769  0076                     ??_setLights_Line:	
  1770                           ; 0 bytes @ 0x6
  1771                           
  1772  0076                     ?_getCDS_AD:	
  1773                           ; 0 bytes @ 0x6
  1774                           
  1775  0076                     ??_getMain_LightsStatus:	
  1776                           ; 0 bytes @ 0x6
  1777                           
  1778  0076                     getCDS_AD@channel2:	
  1779                           ; 0 bytes @ 0x6
  1780                           
  1781  0076                     setLED@command:	
  1782                           ; 1 bytes @ 0x6
  1783                           
  1784  0076                     getMain_LoadOK@ok:	
  1785                           ; 1 bytes @ 0x6
  1786                           
  1787  0076                     getTemp_AD@channel:	
  1788                           ; 1 bytes @ 0x6
  1789                           
  1790  0076                     getPIR_AD@channel2:	
  1791                           ; 1 bytes @ 0x6
  1792                           
  1793  0076                     setLights_Initialization@lights:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796  0076                     setLights_Trigger@command:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799  0076                     setLights_Line@lights:	
  1800                           ; 1 bytes @ 0x6
  1801                           
  1802  0076                     getAll_Lights_Line@line:	
  1803                           ; 1 bytes @ 0x6
  1804                           
  1805                           
  1806                           ; 1 bytes @ 0x6
  1807  0076                     	ds	1
  1808  0077                     ??_setLED_Initialization:	
  1809  0077                     ??_setLED:	
  1810                           ; 0 bytes @ 0x7
  1811                           
  1812  0077                     ??_Lights_Initialization:	
  1813                           ; 0 bytes @ 0x7
  1814                           
  1815  0077                     ??_Temp_Main:	
  1816                           ; 0 bytes @ 0x7
  1817                           
  1818  0077                     ??_setLights_Main:	
  1819                           ; 0 bytes @ 0x7
  1820                           
  1821  0077                     ??_LED_Initialization:	
  1822                           ; 0 bytes @ 0x7
  1823                           
  1824  0077                     ??_LED_Main:	
  1825                           ; 0 bytes @ 0x7
  1826                           
  1827                           
  1828                           	psect	cstackBANK0
  1829  0059                     __pcstackBANK0:	
  1830                           ; 0 bytes @ 0x7
  1831                           
  1832  0059                     ??_getLoad_AD:	
  1833  0059                     ??_getTemp_AD:	
  1834                           ; 0 bytes @ 0x0
  1835                           
  1836  0059                     ??_setLights_Trigger:	
  1837                           ; 0 bytes @ 0x0
  1838                           
  1839  0059                     ??_Lights_Control:	
  1840                           ; 0 bytes @ 0x0
  1841                           
  1842  0059                     ??_getCDS_AD:	
  1843                           ; 0 bytes @ 0x0
  1844                           
  1845  0059                     ?___awdiv:	
  1846                           ; 0 bytes @ 0x0
  1847                           
  1848  0059                     ?___lwdiv:	
  1849                           ; 2 bytes @ 0x0
  1850                           
  1851  0059                     setLED@led:	
  1852                           ; 2 bytes @ 0x0
  1853                           
  1854  0059                     getMain_Lights_Count@count:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857  0059                     getLights_Status@lights:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860  0059                     _getMain_All_Error_Status$2238:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863  0059                     ___awdiv@divisor:	
  1864                           ; 2 bytes @ 0x0
  1865                           
  1866  0059                     ___lwdiv@divisor:	
  1867                           ; 2 bytes @ 0x0
  1868                           
  1869                           
  1870                           ; 2 bytes @ 0x0
  1871  0059                     	ds	1
  1872  005A                     ??_setPIRLED_Main:	
  1873  005A                     setLED_Initialization@led:	
  1874                           ; 0 bytes @ 0x1
  1875                           
  1876  005A                     getMain_Lights_Count@status2:	
  1877                           ; 1 bytes @ 0x1
  1878                           
  1879  005A                     getLights_Status@status:	
  1880                           ; 1 bytes @ 0x1
  1881                           
  1882  005A                     setLights_Trigger@lights:	
  1883                           ; 1 bytes @ 0x1
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0x1
  1887  005A                     	ds	1
  1888  005B                     getCDS_AD@i:	
  1889  005B                     setPIRLED_Main@count:	
  1890                           ; 1 bytes @ 0x2
  1891                           
  1892  005B                     getMain_LightsStatus@count:	
  1893                           ; 1 bytes @ 0x2
  1894                           
  1895  005B                     getMain_Lights_Count@status3:	
  1896                           ; 1 bytes @ 0x2
  1897                           
  1898  005B                     getLoad_AD@channel:	
  1899                           ; 1 bytes @ 0x2
  1900                           
  1901  005B                     _getMain_All_Error_Status$2239:	
  1902                           ; 1 bytes @ 0x2
  1903                           
  1904  005B                     _Lights_Control$4380:	
  1905                           ; 2 bytes @ 0x2
  1906                           
  1907  005B                     ___awdiv@dividend:	
  1908                           ; 2 bytes @ 0x2
  1909                           
  1910  005B                     ___lwdiv@dividend:	
  1911                           ; 2 bytes @ 0x2
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x2
  1915  005B                     	ds	1
  1916  005C                     getCDS_AD@j:	
  1917  005C                     getMain_Lights_Count@status1:	
  1918                           ; 1 bytes @ 0x3
  1919                           
  1920  005C                     getLoad_AD@k:	
  1921                           ; 1 bytes @ 0x3
  1922                           
  1923  005C                     getMain_LightsStatus@i:	
  1924                           ; 1 bytes @ 0x3
  1925                           
  1926                           
  1927                           ; 2 bytes @ 0x3
  1928  005C                     	ds	1
  1929  005D                     getCDS_AD@channel1:	
  1930  005D                     getMain_All_Error_Status@command:	
  1931                           ; 1 bytes @ 0x4
  1932                           
  1933  005D                     getLoad_AD@j:	
  1934                           ; 1 bytes @ 0x4
  1935                           
  1936  005D                     Lights_Control@lights:	
  1937                           ; 1 bytes @ 0x4
  1938                           
  1939  005D                     ___awdiv@counter:	
  1940                           ; 1 bytes @ 0x4
  1941                           
  1942  005D                     ___lwdiv@counter:	
  1943                           ; 1 bytes @ 0x4
  1944                           
  1945                           
  1946                           ; 1 bytes @ 0x4
  1947  005D                     	ds	1
  1948  005E                     getMain_LightsStatus@status:	
  1949  005E                     getMain_All_Error_Status@status:	
  1950                           ; 1 bytes @ 0x5
  1951                           
  1952  005E                     getLoad_AD@i:	
  1953                           ; 1 bytes @ 0x5
  1954                           
  1955  005E                     ___awdiv@sign:	
  1956                           ; 1 bytes @ 0x5
  1957                           
  1958  005E                     ___lwdiv@quotient:	
  1959                           ; 1 bytes @ 0x5
  1960                           
  1961                           
  1962                           ; 2 bytes @ 0x5
  1963  005E                     	ds	1
  1964  005F                     ??_PIR_Main:	
  1965  005F                     ??_Exception_Main:	
  1966                           ; 0 bytes @ 0x6
  1967                           
  1968  005F                     ??_Lights_Close:	
  1969                           ; 0 bytes @ 0x6
  1970                           
  1971  005F                     ?_setLights:	
  1972                           ; 0 bytes @ 0x6
  1973                           
  1974  005F                     setLights@status:	
  1975                           ; 0 bytes @ 0x6
  1976                           
  1977  005F                     ___awdiv@quotient:	
  1978                           ; 1 bytes @ 0x6
  1979                           
  1980                           
  1981                           ; 2 bytes @ 0x6
  1982  005F                     	ds	1
  1983  0060                     ??_Load_Main:	
  1984  0060                     ??_setLights:	
  1985                           ; 0 bytes @ 0x7
  1986                           
  1987  0060                     Exception_Main@count:	
  1988                           ; 0 bytes @ 0x7
  1989                           
  1990                           
  1991                           ; 1 bytes @ 0x7
  1992  0060                     	ds	1
  1993  0061                     ??_getPIR_AD:	
  1994  0061                     ??_setTemp_Main:	
  1995                           ; 0 bytes @ 0x8
  1996                           
  1997  0061                     Exception_Main@status:	
  1998                           ; 0 bytes @ 0x8
  1999                           
  2000  0061                     setLights@lights:	
  2001                           ; 1 bytes @ 0x8
  2002                           
  2003                           
  2004                           ; 1 bytes @ 0x8
  2005  0061                     	ds	1
  2006  0062                     Load_Main@j:	
  2007  0062                     setTemp_Main@error:	
  2008                           ; 1 bytes @ 0x9
  2009                           
  2010  0062                     setLights_Main@lights:	
  2011                           ; 1 bytes @ 0x9
  2012                           
  2013  0062                     Exception_Main@i:	
  2014                           ; 1 bytes @ 0x9
  2015                           
  2016                           
  2017                           ; 2 bytes @ 0x9
  2018  0062                     	ds	1
  2019  0063                     ??_Lights_Main:	
  2020  0063                     Load_Main@adjgo:	
  2021                           ; 0 bytes @ 0xA
  2022                           
  2023                           
  2024                           ; 1 bytes @ 0xA
  2025  0063                     	ds	1
  2026  0064                     Exception_Main@error:	
  2027  0064                     _Load_Main$2496:	
  2028                           ; 1 bytes @ 0xB
  2029                           
  2030  0064                     PIR_Main@error:	
  2031                           ; 1 bytes @ 0xB
  2032                           
  2033  0064                     getPIR_AD@j:	
  2034                           ; 1 bytes @ 0xB
  2035                           
  2036                           
  2037                           ; 1 bytes @ 0xB
  2038  0064                     	ds	1
  2039  0065                     Load_Main@error:	
  2040  0065                     getPIR_AD@channel1:	
  2041                           ; 1 bytes @ 0xC
  2042                           
  2043  0065                     _PIR_Main$2976:	
  2044                           ; 1 bytes @ 0xC
  2045                           
  2046                           
  2047                           ; 2 bytes @ 0xC
  2048  0065                     	ds	1
  2049  0066                     Load_Main@i:	
  2050  0066                     getPIR_AD@i:	
  2051                           ; 1 bytes @ 0xD
  2052                           
  2053  0066                     _Lights_Main$4371:	
  2054                           ; 1 bytes @ 0xD
  2055                           
  2056                           
  2057                           ; 2 bytes @ 0xD
  2058  0066                     	ds	1
  2059  0067                     PIR_Main@cds:	
  2060                           
  2061                           ; 1 bytes @ 0xE
  2062  0067                     	ds	1
  2063  0068                     ?_main:	
  2064  0068                     main@argc:	
  2065                           ; 2 bytes @ 0xF
  2066                           
  2067                           
  2068                           ; 2 bytes @ 0xF
  2069  0068                     	ds	2
  2070  006A                     main@argv:	
  2071                           
  2072                           ; 2 bytes @ 0x11
  2073  006A                     	ds	2
  2074  006C                     ??_main:	
  2075                           
  2076                           ; 0 bytes @ 0x13
  2077  006C                     	ds	1
  2078                           
  2079                           	psect	maintext
  2080  0F9A                     __pmaintext:	
  2081 ;;
  2082 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2083 ;;
  2084 ;; *************** function _main *****************
  2085 ;; Defined at:
  2086 ;;		line 7 in file "../src/Main_B1.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  argc            2   15[BANK0 ] int 
  2089 ;;  argv            2   17[BANK0 ] PTR PTR unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  2   15[BANK0 ] int 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 17F/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2101 ;;      Params:         0       4       0       0
  2102 ;;      Locals:         0       0       0       0
  2103 ;;      Temps:          0       1       0       0
  2104 ;;      Totals:         0       5       0       0
  2105 ;;Total ram usage:        5 bytes
  2106 ;; Hardware stack levels required when called:    7
  2107 ;; This function calls:
  2108 ;;		_CDS_Initialization
  2109 ;;		_CDS_Main
  2110 ;;		_DetectSYSC_Signal
  2111 ;;		_Exception_Main
  2112 ;;		_LED_Initialization
  2113 ;;		_LED_Main
  2114 ;;		_Lights_Initialization
  2115 ;;		_Lights_Main
  2116 ;;		_Load_Initialization
  2117 ;;		_Load_Main
  2118 ;;		_Mcu_Initialization
  2119 ;;		_PIR_Initialization
  2120 ;;		_PIR_Main
  2121 ;;		_SYSC_Initialization
  2122 ;;		_SYSC_Main
  2123 ;;		_Temp_Initialization
  2124 ;;		_Temp_Main
  2125 ;;		_WDT_Main
  2126 ;;		_getCDS_AD
  2127 ;;		_getLoad_AD
  2128 ;;		_getPIR_AD
  2129 ;;		_getTemp_AD
  2130 ;;		_myMain_Initialization
  2131 ;;		_my_MainTimer
  2132 ;; This function is called by:
  2133 ;;		Startup code after reset
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _main
  2139  0F9A                     _main:	
  2140                           
  2141                           ;Main_B1.c: 8: myMain_Initialization();
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2145  0F9A  118A  2003  158A   	fcall	_myMain_Initialization
  2146                           
  2147                           ;Main_B1.c: 9: Mcu_Initialization();
  2148  0F9D  158A  241C  158A   	fcall	_Mcu_Initialization
  2149                           
  2150                           ;Main_B1.c: 10: ;;
  2151                           ;Main_B1.c: 11: LED_Initialization();
  2152  0FA0  158A  23C1  158A   	fcall	_LED_Initialization
  2153                           
  2154                           ;Main_B1.c: 12: ;;
  2155                           ;Main_B1.c: 14: SYSC_Initialization();
  2156  0FA3  158A  2357  158A   	fcall	_SYSC_Initialization
  2157                           
  2158                           ;Main_B1.c: 15: Temp_Initialization();
  2159  0FA6  158A  235D  158A   	fcall	_Temp_Initialization
  2160                           
  2161                           ;Main_B1.c: 16: Load_Initialization();
  2162  0FA9  158A  2379  158A   	fcall	_Load_Initialization
  2163                           
  2164                           ;Main_B1.c: 17: ;;
  2165                           ;Main_B1.c: 18: ;;
  2166                           ;Main_B1.c: 20: ;;
  2167                           ;Main_B1.c: 21: Lights_Initialization();
  2168  0FAC  158A  2367  158A   	fcall	_Lights_Initialization
  2169                           
  2170                           ;Main_B1.c: 22: CDS_Initialization();
  2171  0FAF  158A  2363  158A   	fcall	_CDS_Initialization
  2172                           
  2173                           ;Main_B1.c: 23: PIR_Initialization();
  2174  0FB2  158A  23B6  158A   	fcall	_PIR_Initialization
  2175  0FB5                     l5237:	
  2176                           ;Main_B1.c: 24: ;;
  2177                           ;Main_B1.c: 25: ;;
  2178                           ;Main_B1.c: 26: ;;
  2179                           ;Main_B1.c: 27: ;;
  2180                           ;Main_B1.c: 28: ;;
  2181                           ;Main_B1.c: 30: while (1) {
  2182                           
  2183                           
  2184                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2185  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0FB7  1C20               	btfss	_myMain,0
  2188  0FB8  2FD8               	goto	l5249
  2189                           
  2190                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2191  0FB9  158A  23F2  158A   	fcall	_DetectSYSC_Signal
  2192                           
  2193                           ;Main_B1.c: 38: getLoad_AD(0x01);
  2194  0FBC  3001               	movlw	1
  2195  0FBD  118A  2659  158A   	fcall	_getLoad_AD
  2196                           
  2197                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2198  0FC0  3011               	movlw	17
  2199  0FC1  158A  2545  158A   	fcall	_getTemp_AD
  2200                           
  2201                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2202  0FC4  3031               	movlw	49
  2203  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2204  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2205  0FC7  00EC               	movwf	??_main
  2206  0FC8  086C               	movf	??_main,w
  2207  0FC9  00F6               	movwf	getCDS_AD@channel2
  2208  0FCA  3009               	movlw	9
  2209  0FCB  158A  2594  158A   	fcall	_getCDS_AD
  2210                           
  2211                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2212  0FCE  300D               	movlw	13
  2213  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0FD1  00EC               	movwf	??_main
  2216  0FD2  086C               	movf	??_main,w
  2217  0FD3  00F6               	movwf	getPIR_AD@channel2
  2218  0FD4  3005               	movlw	5
  2219  0FD5  118A  23B1  158A   	fcall	_getPIR_AD
  2220  0FD8                     l5249:	
  2221                           
  2222                           ;Main_B1.c: 57: }
  2223                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2224  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0FDA  1C34               	btfss	_Timer1,0
  2227  0FDB  2FB5               	goto	l5237
  2228                           
  2229                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2230  0FDC  1034               	bcf	_Timer1,0
  2231                           
  2232                           ;Main_B1.c: 96: my_MainTimer();
  2233  0FDD  158A  24D8  158A   	fcall	_my_MainTimer
  2234                           
  2235                           ;Main_B1.c: 97: WDT_Main();
  2236  0FE0  158A  245D  158A   	fcall	_WDT_Main
  2237                           
  2238                           ;Main_B1.c: 98: ;;
  2239                           ;Main_B1.c: 99: ;;
  2240                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2241  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  2243  0FE5  1C20               	btfss	_myMain,0
  2244  0FE6  2FB5               	goto	l5237
  2245                           
  2246                           ;Main_B1.c: 101: ;;
  2247                           ;Main_B1.c: 103: LED_Main();
  2248  0FE7  158A  2354  158A   	fcall	_LED_Main
  2249                           
  2250                           ;Main_B1.c: 104: ;;
  2251                           ;Main_B1.c: 106: SYSC_Main();
  2252  0FEA  158A  235A  158A   	fcall	_SYSC_Main
  2253                           
  2254                           ;Main_B1.c: 107: Temp_Main();
  2255  0FED  158A  2360  158A   	fcall	_Temp_Main
  2256                           
  2257                           ;Main_B1.c: 108: Load_Main();
  2258  0FF0  118A  2203  158A   	fcall	_Load_Main
  2259                           
  2260                           ;Main_B1.c: 109: ;;
  2261                           ;Main_B1.c: 111: Lights_Main();
  2262  0FF3  158A  2623  158A   	fcall	_Lights_Main
  2263                           
  2264                           ;Main_B1.c: 112: ;;
  2265                           ;Main_B1.c: 113: ;;
  2266                           ;Main_B1.c: 114: CDS_Main();
  2267  0FF6  158A  25EF  158A   	fcall	_CDS_Main
  2268                           
  2269                           ;Main_B1.c: 115: PIR_Main();
  2270  0FF9  118A  2025  158A   	fcall	_PIR_Main
  2271                           
  2272                           ;Main_B1.c: 117: ;;
  2273                           ;Main_B1.c: 118: ;;
  2274                           ;Main_B1.c: 119: ;;
  2275                           ;Main_B1.c: 120: ;;
  2276                           ;Main_B1.c: 121: Exception_Main();
  2277  0FFC  118A  25E6  158A   	fcall	_Exception_Main
  2278  0FFF  2FB5               	goto	l5237
  2279  1000                     __end_of_main:	
  2280                           ;Main_B1.c: 128: }
  2281                           ;Main_B1.c: 129: }
  2282                           ;Main_B1.c: 163: }
  2283                           ;Main_B1.c: 164: return (0);
  2284                           ;	Return value of _main is never used
  2285                           
  2286                           
  2287                           	psect	text1
  2288  0CD8                     __ptext1:	
  2289 ;; *************** function _my_MainTimer *****************
  2290 ;; Defined at:
  2291 ;;		line 185 in file "../src/Main_B1.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;		None               void
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2305 ;;      Params:         0       0       0       0
  2306 ;;      Locals:         0       0       0       0
  2307 ;;      Temps:          1       0       0       0
  2308 ;;      Totals:         1       0       0       0
  2309 ;;Total ram usage:        1 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    2
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _my_MainTimer
  2321  0CD8                     _my_MainTimer:	
  2322                           
  2323                           ;Main_B1.c: 188: if (myMain.PowerON == 0) {
  2324                           
  2325                           ;incstack = 0
  2326                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2327  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0CDA  1820               	btfsc	_myMain,0
  2330  0CDB  2CE8               	goto	l3761
  2331                           
  2332                           ;Main_B1.c: 189: myMain.PowerCount++;
  2333  0CDC  3001               	movlw	1
  2334  0CDD  00F4               	movwf	??_my_MainTimer
  2335  0CDE  0874               	movf	??_my_MainTimer,w
  2336  0CDF  07A1               	addwf	_myMain+1,f
  2337                           
  2338                           ;Main_B1.c: 190: if (myMain.PowerCount == 150) {
  2339  0CE0  0821               	movf	_myMain+1,w
  2340  0CE1  3A96               	xorlw	150
  2341  0CE2  1D03               	skipz
  2342  0CE3  0008               	return
  2343                           
  2344                           ;Main_B1.c: 191: myMain.PowerCount = 0;
  2345  0CE4  01A1               	clrf	_myMain+1
  2346                           
  2347                           ;Main_B1.c: 192: myMain.PowerON = 1;
  2348  0CE5  1420               	bsf	_myMain,0
  2349                           
  2350                           ;Main_B1.c: 197: ;;
  2351                           ;Main_B1.c: 198: myMain.SelfTest = 1;
  2352  0CE6  1620               	bsf	_myMain,4
  2353                           
  2354                           ;Main_B1.c: 207: }
  2355                           ;Main_B1.c: 208: } else {
  2356  0CE7  0008               	return
  2357  0CE8                     l3761:	
  2358                           
  2359                           ;Main_B1.c: 209: myMain.PowerCount++;
  2360  0CE8  3001               	movlw	1
  2361  0CE9  00F4               	movwf	??_my_MainTimer
  2362  0CEA  0874               	movf	??_my_MainTimer,w
  2363  0CEB  07A1               	addwf	_myMain+1,f
  2364                           
  2365                           ;Main_B1.c: 210: if (myMain.PowerCount == 100) {
  2366  0CEC  0821               	movf	_myMain+1,w
  2367  0CED  3A64               	xorlw	100
  2368  0CEE  1D03               	skipz
  2369  0CEF  0008               	return
  2370                           
  2371                           ;Main_B1.c: 211: myMain.PowerCount = 0;
  2372  0CF0  01A1               	clrf	_myMain+1
  2373  0CF1  0008               	return
  2374  0CF2                     __end_of_my_MainTimer:	
  2375                           
  2376                           	psect	text2
  2377  0003                     __ptext2:	
  2378 ;; *************** function _myMain_Initialization *****************
  2379 ;; Defined at:
  2380 ;;		line 170 in file "../src/Main_B1.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		None
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2394 ;;      Params:         0       0       0       0
  2395 ;;      Locals:         0       0       0       0
  2396 ;;      Temps:          0       0       0       0
  2397 ;;      Totals:         0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    2
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _myMain_Initialization
  2410  0003                     _myMain_Initialization:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _myMain_Initialization: []
  2414  0003  0008               	return
  2415  0004                     __end_of_myMain_Initialization:	
  2416                           
  2417                           	psect	text3
  2418  0D45                     __ptext3:	
  2419 ;; *************** function _getTemp_AD *****************
  2420 ;; Defined at:
  2421 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  channel         1    wreg     unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  channel         1    6[COMMON] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2435 ;;      Params:         0       0       0       0
  2436 ;;      Locals:         1       0       0       0
  2437 ;;      Temps:          0       2       0       0
  2438 ;;      Totals:         1       2       0       0
  2439 ;;Total ram usage:        3 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    4
  2442 ;; This function calls:
  2443 ;;		_getAD
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _getTemp_AD
  2451  0D45                     _getTemp_AD:	
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2455                           ;getTemp_AD@channel stored from wreg
  2456  0D45  00F6               	movwf	getTemp_AD@channel
  2457                           
  2458                           ;OverTemperature_B1.c: 18: if (Temp.ADtoGO == 1) {
  2459  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0D48  1D3A               	btfss	_Temp,2
  2462  0D49  0008               	return
  2463                           
  2464                           ;OverTemperature_B1.c: 19: Temp.ADRES = getAD(channel, 0x70);
  2465  0D4A  3070               	movlw	112
  2466  0D4B  00D9               	movwf	??_getTemp_AD
  2467  0D4C  0859               	movf	??_getTemp_AD,w
  2468  0D4D  00F4               	movwf	getAD@adcon1
  2469  0D4E  0876               	movf	getTemp_AD@channel,w
  2470  0D4F  158A  2529  158A   	fcall	_getAD
  2471  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0D54  00DA               	movwf	??_getTemp_AD+1
  2474  0D55  085A               	movf	??_getTemp_AD+1,w
  2475  0D56  00C3               	movwf	_Temp+9
  2476                           
  2477                           ;OverTemperature_B1.c: 20: if (Temp.ADRES > 0) {
  2478  0D57  0843               	movf	_Temp+9,w
  2479  0D58  1903               	btfsc	3,2
  2480  0D59  0008               	return
  2481                           
  2482                           ;OverTemperature_B1.c: 21: if (Temp.ADH[0] < Temp.ADRES) {
  2483  0D5A  0843               	movf	_Temp+9,w
  2484  0D5B  0241               	subwf	_Temp+7,w
  2485  0D5C  1803               	skipnc
  2486  0D5D  2D63               	goto	l4771
  2487                           
  2488                           ;OverTemperature_B1.c: 22: Temp.ADH[0] = Temp.ADRES;
  2489  0D5E  0843               	movf	_Temp+9,w
  2490  0D5F  00D9               	movwf	??_getTemp_AD
  2491  0D60  0859               	movf	??_getTemp_AD,w
  2492  0D61  00C1               	movwf	_Temp+7
  2493                           
  2494                           ;OverTemperature_B1.c: 23: } else if (Temp.ADH[1] < Temp.ADRES) {
  2495  0D62  0008               	return
  2496  0D63                     l4771:	
  2497  0D63  0843               	movf	_Temp+9,w
  2498  0D64  0242               	subwf	_Temp+8,w
  2499  0D65  1803               	skipnc
  2500  0D66  0008               	return
  2501                           
  2502                           ;OverTemperature_B1.c: 24: Temp.ADH[1] = Temp.ADRES;
  2503  0D67  0843               	movf	_Temp+9,w
  2504  0D68  00D9               	movwf	??_getTemp_AD
  2505  0D69  0859               	movf	??_getTemp_AD,w
  2506  0D6A  00C2               	movwf	_Temp+8
  2507  0D6B  0008               	return
  2508  0D6C                     __end_of_getTemp_AD:	
  2509                           
  2510                           	psect	text4
  2511  03B1                     __ptext4:	
  2512 ;; *************** function _getPIR_AD *****************
  2513 ;; Defined at:
  2514 ;;		line 222 in file "../src/PIR_B1.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  channel1        1    wreg     unsigned char 
  2517 ;;  channel2        1    6[COMMON] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  channel1        1   12[BANK0 ] unsigned char 
  2520 ;;  i               1   13[BANK0 ] unsigned char 
  2521 ;;  j               1   11[BANK0 ] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2531 ;;      Params:         1       0       0       0
  2532 ;;      Locals:         0       3       0       0
  2533 ;;      Temps:          0       3       0       0
  2534 ;;      Totals:         1       6       0       0
  2535 ;;Total ram usage:        7 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    4
  2538 ;; This function calls:
  2539 ;;		___awdiv
  2540 ;;		___lwdiv
  2541 ;;		_getAD
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _getPIR_AD
  2549  03B1                     _getPIR_AD:	
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2553                           ;getPIR_AD@channel1 stored from wreg
  2554  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2555  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2556  03B3  00E5               	movwf	getPIR_AD@channel1
  2557                           
  2558                           ;PIR_B1.c: 223: char i = 0, j = 0;
  2559  03B4  01E6               	clrf	getPIR_AD@i
  2560  03B5  01E4               	clrf	getPIR_AD@j
  2561                           
  2562                           ;PIR_B1.c: 225: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2563  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2564  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2565  03B8  1CA0               	btfss	__PIR^(0+128),1
  2566  03B9  0008               	return
  2567  03BA  1920               	btfsc	__PIR^(0+128),2
  2568  03BB  0008               	return
  2569                           
  2570                           ;PIR_B1.c: 226: _PIR.GO = 1;
  2571  03BC  1520               	bsf	__PIR^(0+128),2
  2572                           
  2573                           ;PIR_B1.c: 227: _PIR.ADRES = getAD(channel1, 0x70);
  2574  03BD  3070               	movlw	112
  2575  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2576  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2577  03C0  00E1               	movwf	??_getPIR_AD
  2578  03C1  0861               	movf	??_getPIR_AD,w
  2579  03C2  00F4               	movwf	getAD@adcon1
  2580  03C3  0865               	movf	getPIR_AD@channel1,w
  2581  03C4  158A  2529  118A   	fcall	_getAD
  2582  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2583  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2584  03C9  00E2               	movwf	??_getPIR_AD+1
  2585  03CA  0862               	movf	??_getPIR_AD+1,w
  2586  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  2587  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  2588  03CD  00A2               	movwf	(__PIR^(0+128)+2)
  2589                           
  2590                           ;PIR_B1.c: 228: _PIR.VRAD = _PIR.ADRES / 25;
  2591  03CE  3019               	movlw	25
  2592  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2593  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2594  03D1  00D9               	movwf	___awdiv@divisor
  2595  03D2  3000               	movlw	0
  2596  03D3  00DA               	movwf	___awdiv@divisor+1
  2597  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2598  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2599  03D6  0822               	movf	(__PIR^(0+128)+2),w
  2600  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2601  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2602  03D9  00E1               	movwf	??_getPIR_AD
  2603  03DA  01E2               	clrf	??_getPIR_AD+1
  2604  03DB  0861               	movf	??_getPIR_AD,w
  2605  03DC  00DB               	movwf	___awdiv@dividend
  2606  03DD  0862               	movf	??_getPIR_AD+1,w
  2607  03DE  00DC               	movwf	___awdiv@dividend+1
  2608  03DF  158A  26DC  118A   	fcall	___awdiv
  2609  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2610  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2611  03E4  0859               	movf	?___awdiv,w
  2612  03E5  00E3               	movwf	??_getPIR_AD+2
  2613  03E6  0863               	movf	??_getPIR_AD+2,w
  2614  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2615  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2616  03E9  00A3               	movwf	(__PIR^(0+128)+3)
  2617                           
  2618                           ;PIR_B1.c: 229: _PIR.VRAD1 = _PIR.ADRES;
  2619  03EA  0822               	movf	(__PIR^(0+128)+2),w
  2620  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2621  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2622  03ED  00E1               	movwf	??_getPIR_AD
  2623  03EE  0861               	movf	??_getPIR_AD,w
  2624  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2625  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2626  03F1  00A4               	movwf	(__PIR^(0+128)+4)
  2627                           
  2628                           ;PIR_B1.c: 230: _PIR.ADRES = getAD(channel2, 0x70);
  2629  03F2  3070               	movlw	112
  2630  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2631  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2632  03F5  00E1               	movwf	??_getPIR_AD
  2633  03F6  0861               	movf	??_getPIR_AD,w
  2634  03F7  00F4               	movwf	getAD@adcon1
  2635  03F8  0876               	movf	getPIR_AD@channel2,w
  2636  03F9  158A  2529  118A   	fcall	_getAD
  2637  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2638  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2639  03FE  00E2               	movwf	??_getPIR_AD+1
  2640  03FF  0862               	movf	??_getPIR_AD+1,w
  2641  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0401  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0402  00A2               	movwf	(__PIR^(0+128)+2)
  2644                           
  2645                           ;PIR_B1.c: 231: _PIR.SignalAD = _PIR.ADRES;
  2646  0403  0822               	movf	(__PIR^(0+128)+2),w
  2647  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0406  00E1               	movwf	??_getPIR_AD
  2650  0407  0861               	movf	??_getPIR_AD,w
  2651  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0409  1303               	bcf	3,6	;RP1=0, select bank1
  2653  040A  00A1               	movwf	(__PIR^(0+128)+1)
  2654                           
  2655                           ;PIR_B1.c: 233: if (_PIR.VRAD < 1) {
  2656  040B  08A3               	movf	(__PIR^(0+128)+3),f
  2657  040C  1D03               	skipz
  2658  040D  2C10               	goto	l4793
  2659                           
  2660                           ;PIR_B1.c: 234: _PIR.CloseTimeValue = 5;
  2661  040E  3005               	movlw	5
  2662  040F  2C15               	goto	L1
  2663  0410                     l4793:	
  2664                           ;PIR_B1.c: 235: } else if (_PIR.VRAD < 3) {
  2665                           
  2666  0410  3003               	movlw	3
  2667  0411  0223               	subwf	(__PIR^(0+128)+3),w
  2668  0412  1803               	skipnc
  2669  0413  2C18               	goto	l4797
  2670                           
  2671                           ;PIR_B1.c: 236: _PIR.CloseTimeValue = 60;
  2672  0414  303C               	movlw	60
  2673  0415                     L1:	
  2674  0415  00C7               	movwf	(__PIR^(0+128)+39)
  2675  0416  3000               	movlw	0
  2676  0417  2C33               	goto	L5
  2677  0418                     l4797:	
  2678                           ;PIR_B1.c: 237: } else if (_PIR.VRAD < 5) {
  2679                           
  2680  0418  3005               	movlw	5
  2681  0419  0223               	subwf	(__PIR^(0+128)+3),w
  2682  041A  1803               	skipnc
  2683  041B  2C20               	goto	l4801
  2684                           
  2685                           ;PIR_B1.c: 238: _PIR.CloseTimeValue = 300;
  2686  041C  302C               	movlw	44
  2687  041D  00C7               	movwf	(__PIR^(0+128)+39)
  2688  041E  3001               	movlw	1
  2689  041F  2C33               	goto	L5
  2690  0420                     l4801:	
  2691                           ;PIR_B1.c: 239: } else if (_PIR.VRAD < 7) {
  2692                           
  2693  0420  3007               	movlw	7
  2694  0421  0223               	subwf	(__PIR^(0+128)+3),w
  2695  0422  1803               	skipnc
  2696  0423  2C28               	goto	l4805
  2697                           
  2698                           ;PIR_B1.c: 240: _PIR.CloseTimeValue = 600;
  2699  0424  3058               	movlw	88
  2700  0425  00C7               	movwf	(__PIR^(0+128)+39)
  2701  0426  3002               	movlw	2
  2702  0427  2C33               	goto	L5
  2703  0428                     l4805:	
  2704                           ;PIR_B1.c: 241: } else if (_PIR.VRAD < 9) {
  2705                           
  2706  0428  3009               	movlw	9
  2707  0429  0223               	subwf	(__PIR^(0+128)+3),w
  2708  042A  1803               	skipnc
  2709  042B  2C30               	goto	l4809
  2710                           
  2711                           ;PIR_B1.c: 242: _PIR.CloseTimeValue = 900;
  2712  042C  3084               	movlw	132
  2713  042D  00C7               	movwf	(__PIR^(0+128)+39)
  2714  042E  3003               	movlw	3
  2715  042F  2C33               	goto	L5
  2716  0430                     l4809:	
  2717                           ;PIR_B1.c: 243: } else {
  2718                           
  2719                           
  2720                           ;PIR_B1.c: 244: _PIR.CloseTimeValue = 1200;
  2721  0430  30B0               	movlw	176
  2722  0431  00C7               	movwf	(__PIR^(0+128)+39)
  2723  0432  3004               	movlw	4
  2724  0433                     L5:	
  2725  0433  00C8               	movwf	(__PIR^(0+128)+40)
  2726                           
  2727                           ;PIR_B1.c: 245: }
  2728                           ;PIR_B1.c: 254: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2729  0434  0821               	movf	(__PIR^(0+128)+1),w
  2730  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0437  00E1               	movwf	??_getPIR_AD
  2733  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2735  043A  0827               	movf	(__PIR^(0+128)+7),w
  2736  043B  3EA8               	addlw	(__PIR+8)& (0+255)
  2737  043C  0084               	movwf	4
  2738  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2739  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2740  043F  0861               	movf	??_getPIR_AD,w
  2741  0440  1383               	bcf	3,7	;select IRP bank1
  2742  0441  0080               	movwf	0
  2743                           
  2744                           ;PIR_B1.c: 255: for (i = 0; i < 10; i++) {
  2745  0442  01E6               	clrf	getPIR_AD@i
  2746  0443  300A               	movlw	10
  2747  0444  0266               	subwf	getPIR_AD@i,w
  2748  0445  1803               	btfsc	3,0
  2749  0446  2C63               	goto	l4825
  2750  0447                     l4819:	
  2751                           
  2752                           ;PIR_B1.c: 256: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2753  0447  0866               	movf	getPIR_AD@i,w
  2754  0448  3EA8               	addlw	(__PIR+8)& (0+255)
  2755  0449  0084               	movwf	4
  2756  044A  0800               	movf	0,w
  2757  044B  00E1               	movwf	??_getPIR_AD
  2758  044C  01E2               	clrf	??_getPIR_AD+1
  2759  044D  0861               	movf	??_getPIR_AD,w
  2760  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2761  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0450  07B2               	addwf	(__PIR^(0+128)+18),f
  2763  0451  1803               	skipnc
  2764  0452  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2765  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0455  0862               	movf	??_getPIR_AD+1,w
  2768  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2769  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2770  0458  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2771  0459  3001               	movlw	1
  2772  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2773  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2774  045C  00E1               	movwf	??_getPIR_AD
  2775  045D  0861               	movf	??_getPIR_AD,w
  2776  045E  07E6               	addwf	getPIR_AD@i,f
  2777  045F  300A               	movlw	10
  2778  0460  0266               	subwf	getPIR_AD@i,w
  2779  0461  1C03               	skipc
  2780  0462  2C47               	goto	l4819
  2781  0463                     l4825:	
  2782                           
  2783                           ;PIR_B1.c: 257: }
  2784                           ;PIR_B1.c: 258: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2785  0463  300A               	movlw	10
  2786  0464  00D9               	movwf	___lwdiv@divisor
  2787  0465  3000               	movlw	0
  2788  0466  00DA               	movwf	___lwdiv@divisor+1
  2789  0467  1683               	bsf	3,5	;RP0=1, select bank1
  2790  0468  1303               	bcf	3,6	;RP1=0, select bank1
  2791  0469  0833               	movf	((__PIR+1)^(0+128)+18),w
  2792  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2793  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2794  046C  01DC               	clrf	___lwdiv@dividend+1
  2795  046D  07DC               	addwf	___lwdiv@dividend+1,f
  2796  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2797  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0470  0832               	movf	(__PIR^(0+128)+18),w
  2799  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0473  01DB               	clrf	___lwdiv@dividend
  2802  0474  07DB               	addwf	___lwdiv@dividend,f
  2803  0475  158A  269C  118A   	fcall	___lwdiv
  2804  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2806  047A  0859               	movf	?___lwdiv,w
  2807  047B  00E1               	movwf	??_getPIR_AD
  2808  047C  1683               	bsf	3,5	;RP0=1, select bank1
  2809  047D  1303               	bcf	3,6	;RP1=0, select bank1
  2810  047E  0834               	movf	(__PIR^(0+128)+20),w
  2811  047F  3EB5               	addlw	(__PIR+21)& (0+255)
  2812  0480  0084               	movwf	4
  2813  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0483  0861               	movf	??_getPIR_AD,w
  2816  0484  1383               	bcf	3,7	;select IRP bank1
  2817  0485  0080               	movwf	0
  2818                           
  2819                           ;PIR_B1.c: 259: _PIR.TenAverageValue = 0;
  2820  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2822  0488  01B2               	clrf	(__PIR^(0+128)+18)
  2823  0489  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2824                           
  2825                           ;PIR_B1.c: 261: for (i = 0; i <= 9; i++) {
  2826  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2827  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2828  048C  01E6               	clrf	getPIR_AD@i
  2829  048D  300A               	movlw	10
  2830  048E  0266               	subwf	getPIR_AD@i,w
  2831  048F  1803               	btfsc	3,0
  2832  0490  2CAD               	goto	l4841
  2833  0491                     l4835:	
  2834                           
  2835                           ;PIR_B1.c: 262: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2836  0491  0866               	movf	getPIR_AD@i,w
  2837  0492  3EB5               	addlw	(__PIR+21)& (0+255)
  2838  0493  0084               	movwf	4
  2839  0494  0800               	movf	0,w
  2840  0495  00E1               	movwf	??_getPIR_AD
  2841  0496  01E2               	clrf	??_getPIR_AD+1
  2842  0497  0861               	movf	??_getPIR_AD,w
  2843  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2844  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2845  049A  07BF               	addwf	(__PIR^(0+128)+31),f
  2846  049B  1803               	skipnc
  2847  049C  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2848  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2849  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2850  049F  0862               	movf	??_getPIR_AD+1,w
  2851  04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2852  04A1  1303               	bcf	3,6	;RP1=0, select bank1
  2853  04A2  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2854  04A3  3001               	movlw	1
  2855  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2856  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2857  04A6  00E1               	movwf	??_getPIR_AD
  2858  04A7  0861               	movf	??_getPIR_AD,w
  2859  04A8  07E6               	addwf	getPIR_AD@i,f
  2860  04A9  300A               	movlw	10
  2861  04AA  0266               	subwf	getPIR_AD@i,w
  2862  04AB  1C03               	skipc
  2863  04AC  2C91               	goto	l4835
  2864  04AD                     l4841:	
  2865                           
  2866                           ;PIR_B1.c: 263: }
  2867                           ;PIR_B1.c: 264: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2868  04AD  300A               	movlw	10
  2869  04AE  00D9               	movwf	___lwdiv@divisor
  2870  04AF  3000               	movlw	0
  2871  04B0  00DA               	movwf	___lwdiv@divisor+1
  2872  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2873  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2874  04B3  0840               	movf	((__PIR+1)^(0+128)+31),w
  2875  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2876  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2877  04B6  01DC               	clrf	___lwdiv@dividend+1
  2878  04B7  07DC               	addwf	___lwdiv@dividend+1,f
  2879  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2880  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2881  04BA  083F               	movf	(__PIR^(0+128)+31),w
  2882  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2883  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2884  04BD  01DB               	clrf	___lwdiv@dividend
  2885  04BE  07DB               	addwf	___lwdiv@dividend,f
  2886  04BF  158A  269C  118A   	fcall	___lwdiv
  2887  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2888  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2889  04C4  0859               	movf	?___lwdiv,w
  2890  04C5  00E1               	movwf	??_getPIR_AD
  2891  04C6  0861               	movf	??_getPIR_AD,w
  2892  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  2893  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  2894  04C9  00A6               	movwf	(__PIR^(0+128)+6)
  2895                           
  2896                           ;PIR_B1.c: 265: _PIR.HundredAverageValue = 0;
  2897  04CA  01BF               	clrf	(__PIR^(0+128)+31)
  2898  04CB  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2899                           
  2900                           ;PIR_B1.c: 267: if (_PIR.TenCount < 10) {
  2901  04CC  300A               	movlw	10
  2902  04CD  0227               	subwf	(__PIR^(0+128)+7),w
  2903  04CE  1803               	skipnc
  2904  04CF  2CD9               	goto	l4849
  2905                           
  2906                           ;PIR_B1.c: 268: _PIR.TenCount++;
  2907  04D0  3001               	movlw	1
  2908  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2909  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2910  04D3  00E1               	movwf	??_getPIR_AD
  2911  04D4  0861               	movf	??_getPIR_AD,w
  2912  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2913  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2914  04D7  07A7               	addwf	(__PIR^(0+128)+7),f
  2915                           
  2916                           ;PIR_B1.c: 269: } else {
  2917  04D8  0008               	return
  2918  04D9                     l4849:	
  2919                           
  2920                           ;PIR_B1.c: 270: _PIR.TenCount = 0;
  2921  04D9  01A7               	clrf	(__PIR^(0+128)+7)
  2922                           
  2923                           ;PIR_B1.c: 271: if (_PIR.HundreCount < 10)
  2924  04DA  300A               	movlw	10
  2925  04DB  0234               	subwf	(__PIR^(0+128)+20),w
  2926  04DC  1803               	skipnc
  2927  04DD  2CE7               	goto	l4855
  2928                           
  2929                           ;PIR_B1.c: 272: _PIR.HundreCount++;
  2930  04DE  3001               	movlw	1
  2931  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2932  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2933  04E1  00E1               	movwf	??_getPIR_AD
  2934  04E2  0861               	movf	??_getPIR_AD,w
  2935  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2936  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2937  04E5  07B4               	addwf	(__PIR^(0+128)+20),f
  2938  04E6  0008               	return
  2939  04E7                     l4855:	
  2940                           
  2941                           ;PIR_B1.c: 273: else
  2942                           ;PIR_B1.c: 274: _PIR.HundreCount = 0;
  2943  04E7  01B4               	clrf	(__PIR^(0+128)+20)
  2944  04E8  0008               	return
  2945  04E9                     __end_of_getPIR_AD:	
  2946                           
  2947                           	psect	text5
  2948  0659                     __ptext5:	
  2949 ;; *************** function _getLoad_AD *****************
  2950 ;; Defined at:
  2951 ;;		line 15 in file "../src/OverLoad_B1.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  channel         1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  channel         1    2[BANK0 ] unsigned char 
  2956 ;;  i               1    5[BANK0 ] unsigned char 
  2957 ;;  j               1    4[BANK0 ] unsigned char 
  2958 ;;  k               1    3[BANK0 ] unsigned char 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2968 ;;      Params:         0       0       0       0
  2969 ;;      Locals:         0       4       0       0
  2970 ;;      Temps:          0       2       0       0
  2971 ;;      Totals:         0       6       0       0
  2972 ;;Total ram usage:        6 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    4
  2975 ;; This function calls:
  2976 ;;		_getAD
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _getLoad_AD
  2984  0659                     _getLoad_AD:	
  2985                           
  2986                           ;incstack = 0
  2987                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2988                           ;getLoad_AD@channel stored from wreg
  2989  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2990  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2991  065B  00DB               	movwf	getLoad_AD@channel
  2992                           
  2993                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  2994  065C  01DE               	clrf	getLoad_AD@i
  2995  065D  01DD               	clrf	getLoad_AD@j
  2996  065E  01DC               	clrf	getLoad_AD@k
  2997                           
  2998                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  2999  065F  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0660  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0661  1E4E               	btfss	_Load^(0+128),4
  3002  0662  0008               	return
  3003                           
  3004                           ;OverLoad_B1.c: 19: Load.ADRES = getAD(channel, 0x73);
  3005  0663  3073               	movlw	115
  3006  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0666  00D9               	movwf	??_getLoad_AD
  3009  0667  0859               	movf	??_getLoad_AD,w
  3010  0668  00F4               	movwf	getAD@adcon1
  3011  0669  085B               	movf	getLoad_AD@channel,w
  3012  066A  158A  2529  118A   	fcall	_getAD
  3013  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3014  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3015  066F  00DA               	movwf	??_getLoad_AD+1
  3016  0670  085A               	movf	??_getLoad_AD+1,w
  3017  0671  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0672  1303               	bcf	3,6	;RP1=0, select bank1
  3019  0673  00E3               	movwf	(_Load^(0+128)+21)
  3020                           
  3021                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3022  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0676  01DE               	clrf	getLoad_AD@i
  3025  0677  3004               	movlw	4
  3026  0678  025E               	subwf	getLoad_AD@i,w
  3027  0679  1803               	btfsc	3,0
  3028  067A  2EA0               	goto	l4741
  3029  067B                     l4729:	
  3030                           
  3031                           ;OverLoad_B1.c: 22: if (Load.AH[i] < Load.ADRES && j == 0) {
  3032  067B  085E               	movf	getLoad_AD@i,w
  3033  067C  3ED8               	addlw	(_Load+10)& (0+255)
  3034  067D  0084               	movwf	4
  3035  067E  1683               	bsf	3,5	;RP0=1, select bank1
  3036  067F  1303               	bcf	3,6	;RP1=0, select bank1
  3037  0680  0863               	movf	(_Load^(0+128)+21),w
  3038  0681  1383               	bcf	3,7	;select IRP bank1
  3039  0682  0200               	subwf	0,w
  3040  0683  1803               	skipnc
  3041  0684  2E97               	goto	l4737
  3042  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0687  08DD               	movf	getLoad_AD@j,f
  3045  0688  1D03               	skipz
  3046  0689  2E97               	goto	l4737
  3047                           
  3048                           ;OverLoad_B1.c: 23: Load.AH[i] = Load.ADRES;
  3049  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3050  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3051  068C  0863               	movf	(_Load^(0+128)+21),w
  3052  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3053  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3054  068F  00D9               	movwf	??_getLoad_AD
  3055  0690  085E               	movf	getLoad_AD@i,w
  3056  0691  3ED8               	addlw	(_Load+10)& (0+255)
  3057  0692  0084               	movwf	4
  3058  0693  0859               	movf	??_getLoad_AD,w
  3059  0694  0080               	movwf	0
  3060                           
  3061                           ;OverLoad_B1.c: 24: j = 1;
  3062  0695  01DD               	clrf	getLoad_AD@j
  3063  0696  0ADD               	incf	getLoad_AD@j,f
  3064  0697                     l4737:	
  3065  0697  3001               	movlw	1
  3066  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0699  00D9               	movwf	??_getLoad_AD
  3068  069A  0859               	movf	??_getLoad_AD,w
  3069  069B  07DE               	addwf	getLoad_AD@i,f
  3070  069C  3004               	movlw	4
  3071  069D  025E               	subwf	getLoad_AD@i,w
  3072  069E  1C03               	skipc
  3073  069F  2E7B               	goto	l4729
  3074  06A0                     l4741:	
  3075                           
  3076                           ;OverLoad_B1.c: 25: }
  3077                           ;OverLoad_B1.c: 26: }
  3078                           ;OverLoad_B1.c: 27: if (j == 0) {
  3079  06A0  08DD               	movf	getLoad_AD@j,f
  3080  06A1  1D03               	skipz
  3081  06A2  0008               	return
  3082                           
  3083                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3084  06A3  01DE               	clrf	getLoad_AD@i
  3085  06A4                     L6:	
  3086  06A4  3004               	movlw	4
  3087  06A5  025E               	subwf	getLoad_AD@i,w
  3088  06A6  1803               	btfsc	3,0
  3089  06A7  0008               	return
  3090                           
  3091                           ;OverLoad_B1.c: 29: if (Load.AL[i] > Load.ADRES && k == 0) {
  3092  06A8  085E               	movf	getLoad_AD@i,w
  3093  06A9  3EDD               	addlw	(_Load+15)& (0+255)
  3094  06AA  0084               	movwf	4
  3095  06AB  1383               	bcf	3,7	;select IRP bank1
  3096  06AC  0800               	movf	0,w
  3097  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  3098  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  3099  06AF  0263               	subwf	(_Load^(0+128)+21),w
  3100  06B0  1803               	skipnc
  3101  06B1  2EC4               	goto	l4757
  3102  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3103  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3104  06B4  08DC               	movf	getLoad_AD@k,f
  3105  06B5  1D03               	skipz
  3106  06B6  2EC4               	goto	l4757
  3107                           
  3108                           ;OverLoad_B1.c: 30: Load.AL[i] = Load.ADRES;
  3109  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  3110  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  3111  06B9  0863               	movf	(_Load^(0+128)+21),w
  3112  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3113  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3114  06BC  00D9               	movwf	??_getLoad_AD
  3115  06BD  085E               	movf	getLoad_AD@i,w
  3116  06BE  3EDD               	addlw	(_Load+15)& (0+255)
  3117  06BF  0084               	movwf	4
  3118  06C0  0859               	movf	??_getLoad_AD,w
  3119  06C1  0080               	movwf	0
  3120                           
  3121                           ;OverLoad_B1.c: 31: k = 1;
  3122  06C2  01DC               	clrf	getLoad_AD@k
  3123  06C3  0ADC               	incf	getLoad_AD@k,f
  3124  06C4                     l4757:	
  3125  06C4  3001               	movlw	1
  3126  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3127  06C6  00D9               	movwf	??_getLoad_AD
  3128  06C7  0859               	movf	??_getLoad_AD,w
  3129  06C8  07DE               	addwf	getLoad_AD@i,f
  3130  06C9  2EA4               	goto	L6
  3131  06CA                     __end_of_getLoad_AD:	
  3132                           
  3133                           	psect	text6
  3134  0D94                     __ptext6:	
  3135 ;; *************** function _getCDS_AD *****************
  3136 ;; Defined at:
  3137 ;;		line 48 in file "../src/CDS_B1.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  channel1        1    wreg     unsigned char 
  3140 ;;  channel2        1    6[COMMON] unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  channel1        1    4[BANK0 ] unsigned char 
  3143 ;;  j               1    3[BANK0 ] unsigned char 
  3144 ;;  i               1    2[BANK0 ] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3154 ;;      Params:         1       0       0       0
  3155 ;;      Locals:         0       3       0       0
  3156 ;;      Temps:          0       2       0       0
  3157 ;;      Totals:         1       5       0       0
  3158 ;;Total ram usage:        6 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    4
  3161 ;; This function calls:
  3162 ;;		_getAD
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _getCDS_AD
  3170  0D94                     _getCDS_AD:	
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3174                           ;getCDS_AD@channel1 stored from wreg
  3175  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0D96  00DD               	movwf	getCDS_AD@channel1
  3178                           
  3179                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3180  0D97  01DB               	clrf	getCDS_AD@i
  3181  0D98  01DC               	clrf	getCDS_AD@j
  3182                           
  3183                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3184  0D99  1DAB               	btfss	__CDS,3
  3185  0D9A  0008               	return
  3186                           
  3187                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3188  0D9B  14AB               	bsf	__CDS,1
  3189                           
  3190                           ;CDS_B1.c: 52: _CDS.ADRES = getAD(channel1, 0x70);
  3191  0D9C  3070               	movlw	112
  3192  0D9D  00D9               	movwf	??_getCDS_AD
  3193  0D9E  0859               	movf	??_getCDS_AD,w
  3194  0D9F  00F4               	movwf	getAD@adcon1
  3195  0DA0  085D               	movf	getCDS_AD@channel1,w
  3196  0DA1  158A  2529  158A   	fcall	_getAD
  3197  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0DA6  00DA               	movwf	??_getCDS_AD+1
  3200  0DA7  085A               	movf	??_getCDS_AD+1,w
  3201  0DA8  00AF               	movwf	__CDS+4
  3202                           
  3203                           ;CDS_B1.c: 53: _CDS.VRAD = _CDS.ADRES;
  3204  0DA9  082F               	movf	__CDS+4,w
  3205  0DAA  00D9               	movwf	??_getCDS_AD
  3206  0DAB  0859               	movf	??_getCDS_AD,w
  3207  0DAC  00AD               	movwf	__CDS+2
  3208                           
  3209                           ;CDS_B1.c: 54: _CDS.ADRES = getAD(channel2, 0x70);
  3210  0DAD  3070               	movlw	112
  3211  0DAE  00D9               	movwf	??_getCDS_AD
  3212  0DAF  0859               	movf	??_getCDS_AD,w
  3213  0DB0  00F4               	movwf	getAD@adcon1
  3214  0DB1  0876               	movf	getCDS_AD@channel2,w
  3215  0DB2  158A  2529         	fcall	_getAD
  3216  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0DB6  00DA               	movwf	??_getCDS_AD+1
  3219  0DB7  085A               	movf	??_getCDS_AD+1,w
  3220  0DB8  00AF               	movwf	__CDS+4
  3221                           
  3222                           ;CDS_B1.c: 55: _CDS.SignalAD = _CDS.ADRES;
  3223  0DB9  082F               	movf	__CDS+4,w
  3224  0DBA  00D9               	movwf	??_getCDS_AD
  3225  0DBB  0859               	movf	??_getCDS_AD,w
  3226  0DBC  00AE               	movwf	__CDS+3
  3227  0DBD  0008               	return
  3228  0DBE                     __end_of_getCDS_AD:	
  3229                           
  3230                           	psect	text7
  3231  0D29                     __ptext7:	
  3232 ;; *************** function _getAD *****************
  3233 ;; Defined at:
  3234 ;;		line 427 in file "../src/MCU_B1.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  adcon0          1    wreg     unsigned char 
  3237 ;;  adcon1          1    4[COMMON] unsigned char 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  adcon0          1    5[COMMON] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      unsigned char 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3249 ;;      Params:         1       0       0       0
  3250 ;;      Locals:         1       0       0       0
  3251 ;;      Temps:          0       0       0       0
  3252 ;;      Totals:         2       0       0       0
  3253 ;;Total ram usage:        2 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    3
  3256 ;; This function calls:
  3257 ;;		_Timeout_Counter
  3258 ;;		_set_TimeoutCleared
  3259 ;; This function is called by:
  3260 ;;		_getCDS_AD
  3261 ;;		_getLoad_AD
  3262 ;;		_getTemp_AD
  3263 ;;		_getPIR_AD
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           
  3268                           ;psect for function _getAD
  3269  0D29                     _getAD:	
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3273                           ;getAD@adcon0 stored from wreg
  3274  0D29  00F5               	movwf	getAD@adcon0
  3275                           
  3276                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  3277  0D2A  0875               	movf	getAD@adcon0,w
  3278  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0D2D  009F               	movwf	31	;volatile
  3281                           
  3282                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  3283  0D2E  0874               	movf	getAD@adcon1,w
  3284  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  3286  0D31  009F               	movwf	31	;volatile
  3287                           
  3288                           ;MCU_B1.c: 430: GO_nDONE = 1;
  3289  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0D34  149F               	bsf	31,1	;volatile
  3292                           
  3293                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3294  0D35  2D39               	goto	l3223
  3295  0D36                     l3221:	
  3296                           
  3297                           ;MCU_B1.c: 432: Timeout_Counter();
  3298  0D36  158A  2480  158A   	fcall	_Timeout_Counter
  3299  0D39                     l3223:	
  3300  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0D3B  1C9F               	btfss	31,1	;volatile
  3303  0D3C  2D3F               	goto	l3227
  3304  0D3D  1D23               	btfss	_myMain+3,2
  3305  0D3E  2D36               	goto	l3221
  3306  0D3F                     l3227:	
  3307                           
  3308                           ;MCU_B1.c: 433: };
  3309                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3310  0D3F  158A  237F         	fcall	_set_TimeoutCleared
  3311                           
  3312                           ;MCU_B1.c: 435: return ADRES;
  3313  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0D43  081E               	movf	30,w	;volatile
  3316  0D44  0008               	return
  3317  0D45                     __end_of_getAD:	
  3318                           
  3319                           	psect	text8
  3320  0B7F                     __ptext8:	
  3321 ;; *************** function _set_TimeoutCleared *****************
  3322 ;; Defined at:
  3323 ;;		line 283 in file "../src/Main_B1.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		status,2
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3337 ;;      Params:         0       0       0       0
  3338 ;;      Locals:         0       0       0       0
  3339 ;;      Temps:          0       0       0       0
  3340 ;;      Totals:         0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_getAD
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _set_TimeoutCleared
  3353  0B7F                     _set_TimeoutCleared:	
  3354                           
  3355                           ;Main_B1.c: 284: myMain.Timeout = 0;
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _set_TimeoutCleared: [status,2]
  3359  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0B81  1123               	bcf	_myMain+3,2
  3362                           
  3363                           ;Main_B1.c: 285: myMain.Timeout_Counter = 0;
  3364  0B82  01A4               	clrf	_myMain+4
  3365  0B83  01A5               	clrf	_myMain+5
  3366  0B84  0008               	return
  3367  0B85                     __end_of_set_TimeoutCleared:	
  3368                           
  3369                           	psect	text9
  3370  0C80                     __ptext9:	
  3371 ;; *************** function _Timeout_Counter *****************
  3372 ;; Defined at:
  3373 ;;		line 274 in file "../src/Main_B1.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;		None               void
  3380 ;; Registers used:
  3381 ;;		wreg, status,2
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3387 ;;      Params:         0       0       0       0
  3388 ;;      Locals:         0       0       0       0
  3389 ;;      Temps:          0       0       0       0
  3390 ;;      Totals:         0       0       0       0
  3391 ;;Total ram usage:        0 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    2
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_getAD
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _Timeout_Counter
  3403  0C80                     _Timeout_Counter:	
  3404                           
  3405                           ;Main_B1.c: 275: myMain.Timeout_Counter++;
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3409  0C80  3001               	movlw	1
  3410  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0C83  07A4               	addwf	_myMain+4,f
  3413  0C84  1803               	skipnc
  3414  0C85  0AA5               	incf	_myMain+5,f
  3415  0C86  3000               	movlw	0
  3416  0C87  07A5               	addwf	_myMain+5,f
  3417                           
  3418                           ;Main_B1.c: 276: if (myMain.Timeout_Counter == 10000) {
  3419  0C88  3027               	movlw	39
  3420  0C89  0625               	xorwf	_myMain+5,w
  3421  0C8A  1D03               	skipz
  3422  0C8B  2C8E               	goto	u2745
  3423  0C8C  3010               	movlw	16
  3424  0C8D  0624               	xorwf	_myMain+4,w
  3425  0C8E                     u2745:	
  3426  0C8E  1D03               	skipz
  3427  0C8F  0008               	return
  3428                           
  3429                           ;Main_B1.c: 277: myMain.Timeout_Counter = 0;
  3430  0C90  01A4               	clrf	_myMain+4
  3431  0C91  01A5               	clrf	_myMain+5
  3432                           
  3433                           ;Main_B1.c: 278: myMain.Timeout = 1;
  3434  0C92  1523               	bsf	_myMain+3,2
  3435  0C93  0008               	return
  3436  0C94                     __end_of_Timeout_Counter:	
  3437                           
  3438                           	psect	text10
  3439  0C5D                     __ptext10:	
  3440 ;; *************** function _WDT_Main *****************
  3441 ;; Defined at:
  3442 ;;		line 1098 in file "../src/MCU_B1.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;		None               void
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3456 ;;      Params:         0       0       0       0
  3457 ;;      Locals:         0       0       0       0
  3458 ;;      Temps:          1       0       0       0
  3459 ;;      Totals:         1       0       0       0
  3460 ;;Total ram usage:        1 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    3
  3463 ;; This function calls:
  3464 ;;		_WDT_Clearing
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _WDT_Main
  3472  0C5D                     _WDT_Main:	
  3473                           
  3474                           ;MCU_B1.c: 1099: if (WDT.Enable == 1) {
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3478  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0C5E  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0C5F  1C37               	btfss	_WDT,0
  3481  0C60  0008               	return
  3482                           
  3483                           ;MCU_B1.c: 1100: if (WDT.Timer-- > 0) {
  3484  0C61  3001               	movlw	1
  3485  0C62  02B8               	subwf	_WDT+1,f
  3486  0C63  0838               	movf	_WDT+1,w
  3487  0C64  3AFF               	xorlw	255
  3488  0C65  1903               	skipnz
  3489  0C66  0008               	return
  3490                           
  3491                           ;MCU_B1.c: 1101: WDT.Timer = 100;
  3492  0C67  3064               	movlw	100
  3493  0C68  00F4               	movwf	??_WDT_Main
  3494  0C69  0874               	movf	??_WDT_Main,w
  3495  0C6A  00B8               	movwf	_WDT+1
  3496                           
  3497                           ;MCU_B1.c: 1102: WDT_Clearing();
  3498  0C6B  118A  27FE         	fcall	_WDT_Clearing
  3499  0C6D  0008               	return
  3500  0C6E                     __end_of_WDT_Main:	
  3501                           
  3502                           	psect	text11
  3503  07FE                     __ptext11:	
  3504 ;; *************** function _WDT_Clearing *****************
  3505 ;; Defined at:
  3506 ;;		line 1108 in file "../src/MCU_B1.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		None
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3520 ;;      Params:         0       0       0       0
  3521 ;;      Locals:         0       0       0       0
  3522 ;;      Temps:          0       0       0       0
  3523 ;;      Totals:         0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    2
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_WDT_Main
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _WDT_Clearing
  3536  07FE                     _WDT_Clearing:	
  3537                           
  3538                           ;incstack = 0
  3539                           ; Regs used in _WDT_Clearing: []
  3540  07FE  0064               	clrwdt	;# 
  3541  07FF  0008               	return
  3542  0800                     __end_of_WDT_Clearing:	
  3543                           
  3544                           	psect	text12
  3545  0B60                     __ptext12:	
  3546 ;; *************** function _Temp_Main *****************
  3547 ;; Defined at:
  3548 ;;		line 49 in file "../src/OverTemperature_B1.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;		None               void
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3562 ;;      Params:         0       0       0       0
  3563 ;;      Locals:         0       0       0       0
  3564 ;;      Temps:          0       0       0       0
  3565 ;;      Totals:         0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    6
  3569 ;; This function calls:
  3570 ;;		_setTemp_Main
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _Temp_Main
  3578  0B60                     _Temp_Main:	
  3579                           
  3580                           ;OverTemperature_B1.c: 51: setTemp_Main();
  3581                           
  3582                           ;incstack = 0
  3583                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3584  0B60  118A  24E9         	fcall	_setTemp_Main
  3585  0B62  0008               	return
  3586  0B63                     __end_of_Temp_Main:	
  3587                           
  3588                           	psect	text13
  3589  04E9                     __ptext13:	
  3590 ;; *************** function _setTemp_Main *****************
  3591 ;; Defined at:
  3592 ;;		line 56 in file "../src/OverTemperature_B1.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  error           1    9[BANK0 ] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;		None               void
  3599 ;; Registers used:
  3600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3606 ;;      Params:         0       0       0       0
  3607 ;;      Locals:         0       1       0       0
  3608 ;;      Temps:          0       1       0       0
  3609 ;;      Totals:         0       2       0       0
  3610 ;;Total ram usage:        2 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    5
  3613 ;; This function calls:
  3614 ;;		___awdiv
  3615 ;;		_getMain_All_Error_Status
  3616 ;;		_getMain_LightsStatus
  3617 ;; This function is called by:
  3618 ;;		_Temp_Main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           
  3623                           ;psect for function _setTemp_Main
  3624  04E9                     _setTemp_Main:	
  3625                           
  3626                           ;OverTemperature_B1.c: 57: char error = getMain_All_Error_Status(0);
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3630  04E9  3000               	movlw	0
  3631  04EA  158A  265E  118A   	fcall	_getMain_All_Error_Status
  3632  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  3633  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  3634  04EF  00E1               	movwf	??_setTemp_Main
  3635  04F0  0861               	movf	??_setTemp_Main,w
  3636  04F1  00E2               	movwf	setTemp_Main@error
  3637                           
  3638                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3639  04F2  1C3A               	btfss	_Temp,0
  3640  04F3  2D6B               	goto	l799
  3641                           
  3642                           ;OverTemperature_B1.c: 65: if (Temp.ADtoGO == 0) {
  3643  04F4  193A               	btfsc	_Temp,2
  3644  04F5  2D07               	goto	l4551
  3645                           
  3646                           ;OverTemperature_B1.c: 66: Temp.Time++;
  3647  04F6  3001               	movlw	1
  3648  04F7  07BB               	addwf	_Temp+1,f
  3649  04F8  1803               	skipnc
  3650  04F9  0ABC               	incf	_Temp+2,f
  3651  04FA  3000               	movlw	0
  3652  04FB  07BC               	addwf	_Temp+2,f
  3653                           
  3654                           ;OverTemperature_B1.c: 67: if (Temp.Time >= 500) {
  3655  04FC  3001               	movlw	1
  3656  04FD  023C               	subwf	_Temp+2,w
  3657  04FE  30F4               	movlw	244
  3658  04FF  1903               	skipnz
  3659  0500  023B               	subwf	_Temp+1,w
  3660  0501  1C03               	skipc
  3661  0502  0008               	return
  3662                           
  3663                           ;OverTemperature_B1.c: 68: Temp.Time = 0;
  3664  0503  01BB               	clrf	_Temp+1
  3665  0504  01BC               	clrf	_Temp+2
  3666                           
  3667                           ;OverTemperature_B1.c: 69: Temp.ADtoGO = 1;
  3668  0505  153A               	bsf	_Temp,2
  3669                           
  3670                           ;OverTemperature_B1.c: 70: }
  3671                           ;OverTemperature_B1.c: 71: } else {
  3672  0506  0008               	return
  3673  0507                     l4551:	
  3674                           
  3675                           ;OverTemperature_B1.c: 72: Temp.Time++;
  3676  0507  3001               	movlw	1
  3677  0508  07BB               	addwf	_Temp+1,f
  3678  0509  1803               	skipnc
  3679  050A  0ABC               	incf	_Temp+2,f
  3680  050B  3000               	movlw	0
  3681  050C  07BC               	addwf	_Temp+2,f
  3682                           
  3683                           ;OverTemperature_B1.c: 73: if (Temp.Time >= 5) {
  3684  050D  3000               	movlw	0
  3685  050E  023C               	subwf	_Temp+2,w
  3686  050F  3005               	movlw	5
  3687  0510  1903               	skipnz
  3688  0511  023B               	subwf	_Temp+1,w
  3689  0512  1C03               	skipc
  3690  0513  0008               	return
  3691                           
  3692                           ;OverTemperature_B1.c: 74: Temp.Time = 0;
  3693  0514  01BB               	clrf	_Temp+1
  3694  0515  01BC               	clrf	_Temp+2
  3695                           
  3696                           ;OverTemperature_B1.c: 76: if (Temp.ADH[0] > 0 && Temp.ADH[1] > 0) {
  3697  0516  0841               	movf	_Temp+7,w
  3698  0517  1903               	btfsc	3,2
  3699  0518  2D68               	goto	l804
  3700  0519  0842               	movf	_Temp+8,w
  3701  051A  1903               	btfsc	3,2
  3702  051B  2D68               	goto	l804
  3703                           
  3704                           ;OverTemperature_B1.c: 77: Temp.ADtoGO = 0;
  3705  051C  113A               	bcf	_Temp,2
  3706                           
  3707                           ;OverTemperature_B1.c: 78: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3708  051D  3002               	movlw	2
  3709  051E  00D9               	movwf	___awdiv@divisor
  3710  051F  3000               	movlw	0
  3711  0520  00DA               	movwf	___awdiv@divisor+1
  3712  0521  0841               	movf	_Temp+7,w
  3713  0522  0742               	addwf	_Temp+8,w
  3714  0523  00DB               	movwf	___awdiv@dividend
  3715  0524  01DC               	clrf	___awdiv@dividend+1
  3716  0525  0DDC               	rlf	___awdiv@dividend+1,f
  3717  0526  158A  26DC  118A   	fcall	___awdiv
  3718  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3719  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3720  052B  0859               	movf	?___awdiv,w
  3721  052C  00E1               	movwf	??_setTemp_Main
  3722  052D  0861               	movf	??_setTemp_Main,w
  3723  052E  00C0               	movwf	_Temp+6
  3724                           
  3725                           ;OverTemperature_B1.c: 81: if (getMain_LightsStatus() == 1) {
  3726  052F  158A  25BE  118A   	fcall	_getMain_LightsStatus
  3727  0532  3A01               	xorlw	1
  3728  0533  1D03               	skipz
  3729  0534  2D3D               	goto	l4567
  3730                           
  3731                           ;OverTemperature_B1.c: 82: Temp.SafeValue = 0x85;
  3732  0535  3085               	movlw	133
  3733  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0538  00E1               	movwf	??_setTemp_Main
  3736  0539  0861               	movf	??_setTemp_Main,w
  3737  053A  00C4               	movwf	_Temp+10
  3738                           
  3739                           ;OverTemperature_B1.c: 83: Temp.DangerValue = 0x70;
  3740  053B  3070               	movlw	112
  3741  053C  2D44               	goto	L7
  3742  053D                     l4567:	
  3743                           ;OverTemperature_B1.c: 84: } else {
  3744                           
  3745                           
  3746                           ;OverTemperature_B1.c: 85: Temp.SafeValue = 0x4f;
  3747  053D  304F               	movlw	79
  3748  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3749  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0540  00E1               	movwf	??_setTemp_Main
  3751  0541  0861               	movf	??_setTemp_Main,w
  3752  0542  00C4               	movwf	_Temp+10
  3753                           
  3754                           ;OverTemperature_B1.c: 86: Temp.DangerValue = 0x40;
  3755  0543  3040               	movlw	64
  3756  0544                     L7:	
  3757  0544  00E1               	movwf	??_setTemp_Main
  3758  0545  0861               	movf	??_setTemp_Main,w
  3759  0546  00C5               	movwf	_Temp+11
  3760                           
  3761                           ;OverTemperature_B1.c: 87: }
  3762                           ;OverTemperature_B1.c: 96: if (Temp.ERROR == 1) {
  3763  0547  1CBA               	btfss	_Temp,1
  3764  0548  2D58               	goto	l4583
  3765                           
  3766                           ;OverTemperature_B1.c: 97: if (Temp.AD >= Temp.SafeValue) {
  3767  0549  0844               	movf	_Temp+10,w
  3768  054A  0240               	subwf	_Temp+6,w
  3769  054B  1C03               	skipc
  3770  054C  2D67               	goto	l4593
  3771                           
  3772                           ;OverTemperature_B1.c: 98: Temp.Count++;
  3773  054D  3001               	movlw	1
  3774  054E  00E1               	movwf	??_setTemp_Main
  3775  054F  0861               	movf	??_setTemp_Main,w
  3776  0550  07BD               	addwf	_Temp+3,f
  3777                           
  3778                           ;OverTemperature_B1.c: 99: if (Temp.Count >= 3) {
  3779  0551  3003               	movlw	3
  3780  0552  023D               	subwf	_Temp+3,w
  3781  0553  1C03               	skipc
  3782  0554  2D68               	goto	l804
  3783                           
  3784                           ;OverTemperature_B1.c: 100: Temp.Count = 0;
  3785  0555  01BD               	clrf	_Temp+3
  3786                           
  3787                           ;OverTemperature_B1.c: 101: Temp.ERROR = 0;
  3788  0556  10BA               	bcf	_Temp,1
  3789                           
  3790                           ;OverTemperature_B1.c: 103: }
  3791                           ;OverTemperature_B1.c: 104: } else {
  3792                           
  3793                           ;OverTemperature_B1.c: 102: ;;
  3794  0557  2D68               	goto	l804
  3795  0558                     l4583:	
  3796                           ;OverTemperature_B1.c: 106: }
  3797                           ;OverTemperature_B1.c: 107: } else {
  3798                           
  3799                           ;OverTemperature_B1.c: 105: Temp.Count = 0;
  3800                           
  3801                           
  3802                           ;OverTemperature_B1.c: 108: if (Temp.AD <= Temp.DangerValue) {
  3803  0558  0840               	movf	_Temp+6,w
  3804  0559  0245               	subwf	_Temp+11,w
  3805  055A  1C03               	skipc
  3806  055B  2D67               	goto	l4593
  3807                           
  3808                           ;OverTemperature_B1.c: 109: Temp.Count++;
  3809  055C  3001               	movlw	1
  3810  055D  00E1               	movwf	??_setTemp_Main
  3811  055E  0861               	movf	??_setTemp_Main,w
  3812  055F  07BD               	addwf	_Temp+3,f
  3813                           
  3814                           ;OverTemperature_B1.c: 110: if (Temp.Count >= 3) {
  3815  0560  3003               	movlw	3
  3816  0561  023D               	subwf	_Temp+3,w
  3817  0562  1C03               	skipc
  3818  0563  2D68               	goto	l804
  3819                           
  3820                           ;OverTemperature_B1.c: 111: Temp.Count = 0;
  3821  0564  01BD               	clrf	_Temp+3
  3822                           
  3823                           ;OverTemperature_B1.c: 112: Temp.ERROR = 1;
  3824  0565  14BA               	bsf	_Temp,1
  3825                           
  3826                           ;OverTemperature_B1.c: 113: }
  3827                           ;OverTemperature_B1.c: 114: } else {
  3828  0566  2D68               	goto	l804
  3829  0567                     l4593:	
  3830                           
  3831                           ;OverTemperature_B1.c: 115: Temp.Count = 0;
  3832  0567  01BD               	clrf	_Temp+3
  3833  0568                     l804:	
  3834                           ;OverTemperature_B1.c: 116: }
  3835                           ;OverTemperature_B1.c: 117: }
  3836                           ;OverTemperature_B1.c: 118: ;;
  3837                           ;OverTemperature_B1.c: 119: ;;
  3838                           
  3839                           
  3840                           ;OverTemperature_B1.c: 135: }
  3841                           ;OverTemperature_B1.c: 136: Temp.ADH[0] = 0;
  3842  0568  01C1               	clrf	_Temp+7
  3843                           
  3844                           ;OverTemperature_B1.c: 137: Temp.ADH[1] = 0;
  3845  0569  01C2               	clrf	_Temp+8
  3846                           
  3847                           ;OverTemperature_B1.c: 138: }
  3848                           ;OverTemperature_B1.c: 139: }
  3849                           ;OverTemperature_B1.c: 141: } else {
  3850  056A  0008               	return
  3851  056B                     l799:	
  3852                           
  3853                           ;OverTemperature_B1.c: 142: if (myMain.PowerON == 1) {
  3854  056B  1C20               	btfss	_myMain,0
  3855  056C  0008               	return
  3856                           
  3857                           ;OverTemperature_B1.c: 143: Temp.Enable = 1;
  3858  056D  143A               	bsf	_Temp,0
  3859  056E  0008               	return
  3860  056F                     __end_of_setTemp_Main:	
  3861                           
  3862                           	psect	text14
  3863  0EDC                     __ptext14:	
  3864 ;; *************** function ___awdiv *****************
  3865 ;; Defined at:
  3866 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  divisor         2    0[BANK0 ] int 
  3869 ;;  dividend        2    2[BANK0 ] int 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  quotient        2    6[BANK0 ] int 
  3872 ;;  sign            1    5[BANK0 ] unsigned char 
  3873 ;;  counter         1    4[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    0[BANK0 ] int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3883 ;;      Params:         0       4       0       0
  3884 ;;      Locals:         0       4       0       0
  3885 ;;      Temps:          1       0       0       0
  3886 ;;      Totals:         1       8       0       0
  3887 ;;Total ram usage:        9 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_setTemp_Main
  3894 ;;		_getPIR_AD
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function ___awdiv
  3900  0EDC                     ___awdiv:	
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3904  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0EDE  01DE               	clrf	___awdiv@sign
  3907  0EDF  1FDA               	btfss	___awdiv@divisor+1,7
  3908  0EE0  2EE8               	goto	l4433
  3909  0EE1  09D9               	comf	___awdiv@divisor,f
  3910  0EE2  09DA               	comf	___awdiv@divisor+1,f
  3911  0EE3  0AD9               	incf	___awdiv@divisor,f
  3912  0EE4  1903               	skipnz
  3913  0EE5  0ADA               	incf	___awdiv@divisor+1,f
  3914  0EE6  01DE               	clrf	___awdiv@sign
  3915  0EE7  0ADE               	incf	___awdiv@sign,f
  3916  0EE8                     l4433:	
  3917  0EE8  1FDC               	btfss	___awdiv@dividend+1,7
  3918  0EE9  2EF3               	goto	l4439
  3919  0EEA  09DB               	comf	___awdiv@dividend,f
  3920  0EEB  09DC               	comf	___awdiv@dividend+1,f
  3921  0EEC  0ADB               	incf	___awdiv@dividend,f
  3922  0EED  1903               	skipnz
  3923  0EEE  0ADC               	incf	___awdiv@dividend+1,f
  3924  0EEF  3001               	movlw	1
  3925  0EF0  00F4               	movwf	??___awdiv
  3926  0EF1  0874               	movf	??___awdiv,w
  3927  0EF2  06DE               	xorwf	___awdiv@sign,f
  3928  0EF3                     l4439:	
  3929  0EF3  01DF               	clrf	___awdiv@quotient
  3930  0EF4  01E0               	clrf	___awdiv@quotient+1
  3931  0EF5  085A               	movf	___awdiv@divisor+1,w
  3932  0EF6  0459               	iorwf	___awdiv@divisor,w
  3933  0EF7  1903               	skipnz
  3934  0EF8  2F2A               	goto	l4461
  3935  0EF9  01DD               	clrf	___awdiv@counter
  3936  0EFA  0ADD               	incf	___awdiv@counter,f
  3937  0EFB                     l4449:	
  3938  0EFB  1BDA               	btfsc	___awdiv@divisor+1,7
  3939  0EFC  2F09               	goto	l4451
  3940  0EFD  3001               	movlw	1
  3941  0EFE                     u5265:	
  3942  0EFE  1003               	clrc
  3943  0EFF  0DD9               	rlf	___awdiv@divisor,f
  3944  0F00  0DDA               	rlf	___awdiv@divisor+1,f
  3945  0F01  3EFF               	addlw	-1
  3946  0F02  1D03               	skipz
  3947  0F03  2EFE               	goto	u5265
  3948  0F04  3001               	movlw	1
  3949  0F05  00F4               	movwf	??___awdiv
  3950  0F06  0874               	movf	??___awdiv,w
  3951  0F07  07DD               	addwf	___awdiv@counter,f
  3952  0F08  2EFB               	goto	l4449
  3953  0F09                     l4451:	
  3954  0F09  3001               	movlw	1
  3955  0F0A                     u5285:	
  3956  0F0A  1003               	clrc
  3957  0F0B  0DDF               	rlf	___awdiv@quotient,f
  3958  0F0C  0DE0               	rlf	___awdiv@quotient+1,f
  3959  0F0D  3EFF               	addlw	-1
  3960  0F0E  1D03               	skipz
  3961  0F0F  2F0A               	goto	u5285
  3962  0F10  085A               	movf	___awdiv@divisor+1,w
  3963  0F11  025C               	subwf	___awdiv@dividend+1,w
  3964  0F12  1D03               	skipz
  3965  0F13  2F16               	goto	u5295
  3966  0F14  0859               	movf	___awdiv@divisor,w
  3967  0F15  025B               	subwf	___awdiv@dividend,w
  3968  0F16                     u5295:	
  3969  0F16  1C03               	skipc
  3970  0F17  2F1F               	goto	l4457
  3971  0F18  0859               	movf	___awdiv@divisor,w
  3972  0F19  02DB               	subwf	___awdiv@dividend,f
  3973  0F1A  085A               	movf	___awdiv@divisor+1,w
  3974  0F1B  1C03               	skipc
  3975  0F1C  03DC               	decf	___awdiv@dividend+1,f
  3976  0F1D  02DC               	subwf	___awdiv@dividend+1,f
  3977  0F1E  145F               	bsf	___awdiv@quotient,0
  3978  0F1F                     l4457:	
  3979  0F1F  3001               	movlw	1
  3980  0F20                     u5305:	
  3981  0F20  1003               	clrc
  3982  0F21  0CDA               	rrf	___awdiv@divisor+1,f
  3983  0F22  0CD9               	rrf	___awdiv@divisor,f
  3984  0F23  3EFF               	addlw	-1
  3985  0F24  1D03               	skipz
  3986  0F25  2F20               	goto	u5305
  3987  0F26  3001               	movlw	1
  3988  0F27  02DD               	subwf	___awdiv@counter,f
  3989  0F28  1D03               	btfss	3,2
  3990  0F29  2F09               	goto	l4451
  3991  0F2A                     l4461:	
  3992  0F2A  085E               	movf	___awdiv@sign,w
  3993  0F2B  1903               	btfsc	3,2
  3994  0F2C  2F32               	goto	l4465
  3995  0F2D  09DF               	comf	___awdiv@quotient,f
  3996  0F2E  09E0               	comf	___awdiv@quotient+1,f
  3997  0F2F  0ADF               	incf	___awdiv@quotient,f
  3998  0F30  1903               	skipnz
  3999  0F31  0AE0               	incf	___awdiv@quotient+1,f
  4000  0F32                     l4465:	
  4001  0F32  0860               	movf	___awdiv@quotient+1,w
  4002  0F33  01DA               	clrf	?___awdiv+1
  4003  0F34  07DA               	addwf	?___awdiv+1,f
  4004  0F35  085F               	movf	___awdiv@quotient,w
  4005  0F36  01D9               	clrf	?___awdiv
  4006  0F37  07D9               	addwf	?___awdiv,f
  4007  0F38  0008               	return
  4008  0F39                     __end_of___awdiv:	
  4009                           
  4010                           	psect	text15
  4011  0B5D                     __ptext15:	
  4012 ;; *************** function _Temp_Initialization *****************
  4013 ;; Defined at:
  4014 ;;		line 8 in file "../src/OverTemperature_B1.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;		None               void
  4021 ;; Registers used:
  4022 ;;		status,2, status,0, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4028 ;;      Params:         0       0       0       0
  4029 ;;      Locals:         0       0       0       0
  4030 ;;      Temps:          0       0       0       0
  4031 ;;      Totals:         0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    3
  4035 ;; This function calls:
  4036 ;;		_setTemp_Initialization
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _Temp_Initialization
  4044  0B5D                     _Temp_Initialization:	
  4045                           
  4046                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4050  0B5D  118A  2002         	fcall	_setTemp_Initialization
  4051  0B5F  0008               	return
  4052  0B60                     __end_of_Temp_Initialization:	
  4053                           
  4054                           	psect	text16
  4055  0002                     __ptext16:	
  4056 ;; *************** function _setTemp_Initialization *****************
  4057 ;; Defined at:
  4058 ;;		line 44 in file "../src/OverTemperature_B1.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		None
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4072 ;;      Params:         0       0       0       0
  4073 ;;      Locals:         0       0       0       0
  4074 ;;      Temps:          0       0       0       0
  4075 ;;      Totals:         0       0       0       0
  4076 ;;Total ram usage:        0 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    2
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_Temp_Initialization
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _setTemp_Initialization
  4088  0002                     _setTemp_Initialization:	
  4089                           
  4090                           ;incstack = 0
  4091                           ; Regs used in _setTemp_Initialization: []
  4092  0002  0008               	return
  4093  0003                     __end_of_setTemp_Initialization:	
  4094                           
  4095                           	psect	text17
  4096  0B5A                     __ptext17:	
  4097 ;; *************** function _SYSC_Main *****************
  4098 ;; Defined at:
  4099 ;;		line 17 in file "../src/SYSC_B1.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4113 ;;      Params:         0       0       0       0
  4114 ;;      Locals:         0       0       0       0
  4115 ;;      Temps:          0       0       0       0
  4116 ;;      Totals:         0       0       0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    4
  4120 ;; This function calls:
  4121 ;;		_setSYSC_Main
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function _SYSC_Main
  4129  0B5A                     _SYSC_Main:	
  4130                           
  4131                           ;SYSC_B1.c: 19: setSYSC_Main();
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4135  0B5A  118A  27A6         	fcall	_setSYSC_Main
  4136  0B5C  0008               	return
  4137  0B5D                     __end_of_SYSC_Main:	
  4138                           
  4139                           	psect	text18
  4140  07A6                     __ptext18:	
  4141 ;; *************** function _setSYSC_Main *****************
  4142 ;; Defined at:
  4143 ;;		line 23 in file "../src/SYSC_B1.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;		None               void
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4157 ;;      Params:         0       0       0       0
  4158 ;;      Locals:         0       0       0       0
  4159 ;;      Temps:          0       0       0       0
  4160 ;;      Totals:         0       0       0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    3
  4164 ;; This function calls:
  4165 ;;		_getMain_All_Error_Status
  4166 ;; This function is called by:
  4167 ;;		_SYSC_Main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           
  4172                           ;psect for function _setSYSC_Main
  4173  07A6                     _setSYSC_Main:	
  4174                           
  4175                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4176                           
  4177                           ;incstack = 0
  4178                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4179  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4180  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  4181  07A8  1C26               	btfss	_SYSC,0
  4182  07A9  0008               	return
  4183                           
  4184                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4185  07AA  18A6               	btfsc	_SYSC,1
  4186  07AB  2FBD               	goto	l4607
  4187                           
  4188                           ;SYSC_B1.c: 27: SYSC.Timer++;
  4189  07AC  3001               	movlw	1
  4190  07AD  07A7               	addwf	_SYSC+1,f
  4191  07AE  1803               	skipnc
  4192  07AF  0AA8               	incf	_SYSC+2,f
  4193  07B0  3000               	movlw	0
  4194  07B1  07A8               	addwf	_SYSC+2,f
  4195                           
  4196                           ;SYSC_B1.c: 28: if (SYSC.Timer >= 16)
  4197  07B2  3000               	movlw	0
  4198  07B3  0228               	subwf	_SYSC+2,w
  4199  07B4  3010               	movlw	16
  4200  07B5  1903               	skipnz
  4201  07B6  0227               	subwf	_SYSC+1,w
  4202  07B7  1C03               	skipc
  4203  07B8  0008               	return
  4204                           
  4205                           ;SYSC_B1.c: 29: {
  4206                           ;SYSC_B1.c: 30: SYSC.Timer = 0;
  4207  07B9  01A7               	clrf	_SYSC+1
  4208  07BA  01A8               	clrf	_SYSC+2
  4209                           
  4210                           ;SYSC_B1.c: 31: SYSC.ERROR = 1;
  4211  07BB  14A6               	bsf	_SYSC,1
  4212                           
  4213                           ;SYSC_B1.c: 32: }
  4214                           ;SYSC_B1.c: 33: } else {
  4215  07BC  0008               	return
  4216  07BD                     l4607:	
  4217                           
  4218                           ;SYSC_B1.c: 34: if (getMain_All_Error_Status(1) == 0) {
  4219  07BD  3001               	movlw	1
  4220  07BE  158A  265E  118A   	fcall	_getMain_All_Error_Status
  4221  07C1  3800               	iorlw	0
  4222  07C2  1D03               	skipz
  4223  07C3  0008               	return
  4224                           
  4225                           ;SYSC_B1.c: 35: SYSC.Timer++;
  4226  07C4  3001               	movlw	1
  4227  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4228  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4229  07C7  07A7               	addwf	_SYSC+1,f
  4230  07C8  1803               	skipnc
  4231  07C9  0AA8               	incf	_SYSC+2,f
  4232  07CA  3000               	movlw	0
  4233  07CB  07A8               	addwf	_SYSC+2,f
  4234                           
  4235                           ;SYSC_B1.c: 36: if (SYSC.Timer == 50) {
  4236  07CC  3032               	movlw	50
  4237  07CD  0627               	xorwf	_SYSC+1,w
  4238  07CE  0428               	iorwf	_SYSC+2,w
  4239  07CF  1D03               	skipz
  4240  07D0  2FD6               	goto	l4613
  4241                           
  4242                           ;SYSC_B1.c: 37: SYSC.Timer = 0;
  4243  07D1  01A7               	clrf	_SYSC+1
  4244  07D2  01A8               	clrf	_SYSC+2
  4245                           
  4246                           ;SYSC_B1.c: 38: SYSC.Counter = 0;
  4247  07D3  01A9               	clrf	_SYSC+3
  4248  07D4  01AA               	clrf	_SYSC+4
  4249                           
  4250                           ;SYSC_B1.c: 39: } else {
  4251  07D5  0008               	return
  4252  07D6                     l4613:	
  4253                           
  4254                           ;SYSC_B1.c: 40: SYSC.Counter++;
  4255  07D6  3001               	movlw	1
  4256  07D7  07A9               	addwf	_SYSC+3,f
  4257  07D8  1803               	skipnc
  4258  07D9  0AAA               	incf	_SYSC+4,f
  4259  07DA  3000               	movlw	0
  4260  07DB  07AA               	addwf	_SYSC+4,f
  4261                           
  4262                           ;SYSC_B1.c: 41: if (SYSC.Counter == 1000) {
  4263  07DC  3003               	movlw	3
  4264  07DD  062A               	xorwf	_SYSC+4,w
  4265  07DE  1D03               	skipz
  4266  07DF  2FE2               	goto	u5635
  4267  07E0  30E8               	movlw	232
  4268  07E1  0629               	xorwf	_SYSC+3,w
  4269  07E2                     u5635:	
  4270  07E2  1D03               	skipz
  4271  07E3  0008               	return
  4272                           
  4273                           ;SYSC_B1.c: 42: SYSC.Counter = 0;
  4274  07E4  01A9               	clrf	_SYSC+3
  4275  07E5  01AA               	clrf	_SYSC+4
  4276                           
  4277                           ;SYSC_B1.c: 43: SYSC.ERROR = 0;
  4278  07E6  10A6               	bcf	_SYSC,1
  4279  07E7  0008               	return
  4280  07E8                     __end_of_setSYSC_Main:	
  4281                           
  4282                           	psect	text19
  4283  0B57                     __ptext19:	
  4284 ;; *************** function _SYSC_Initialization *****************
  4285 ;; Defined at:
  4286 ;;		line 7 in file "../src/SYSC_B1.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;		None               void
  4293 ;; Registers used:
  4294 ;;		status,2, status,0, pclath, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4300 ;;      Params:         0       0       0       0
  4301 ;;      Locals:         0       0       0       0
  4302 ;;      Temps:          0       0       0       0
  4303 ;;      Totals:         0       0       0       0
  4304 ;;Total ram usage:        0 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    3
  4307 ;; This function calls:
  4308 ;;		_setSYSC_Initialization
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _SYSC_Initialization
  4316  0B57                     _SYSC_Initialization:	
  4317                           
  4318                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4322  0B57  158A  236B         	fcall	_setSYSC_Initialization
  4323  0B59  0008               	return
  4324  0B5A                     __end_of_SYSC_Initialization:	
  4325                           
  4326                           	psect	text20
  4327  0B6B                     __ptext20:	
  4328 ;; *************** function _setSYSC_Initialization *****************
  4329 ;; Defined at:
  4330 ;;		line 13 in file "../src/SYSC_B1.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;		None               void
  4337 ;; Registers used:
  4338 ;;		None
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4344 ;;      Params:         0       0       0       0
  4345 ;;      Locals:         0       0       0       0
  4346 ;;      Temps:          0       0       0       0
  4347 ;;      Totals:         0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    2
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_SYSC_Initialization
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           
  4359                           ;psect for function _setSYSC_Initialization
  4360  0B6B                     _setSYSC_Initialization:	
  4361                           
  4362                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in _setSYSC_Initialization: []
  4366  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0B6D  1426               	bsf	_SYSC,0
  4369  0B6E  0008               	return
  4370  0B6F                     __end_of_setSYSC_Initialization:	
  4371                           
  4372                           	psect	text21
  4373  0025                     __ptext21:	
  4374 ;; *************** function _PIR_Main *****************
  4375 ;; Defined at:
  4376 ;;		line 13 in file "../src/PIR_B1.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  cds             1   14[BANK0 ] unsigned char 
  4381 ;;  error           1   11[BANK0 ] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;		None               void
  4384 ;; Registers used:
  4385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4391 ;;      Params:         0       0       0       0
  4392 ;;      Locals:         0       4       0       0
  4393 ;;      Temps:          0       5       0       0
  4394 ;;      Totals:         0       9       0       0
  4395 ;;Total ram usage:        9 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    4
  4398 ;; This function calls:
  4399 ;;		_getCDS_Status
  4400 ;;		_getLights_Status
  4401 ;;		_getMain_All_Error_Status
  4402 ;;		_setLED
  4403 ;;		_setLights_Trigger
  4404 ;; This function is called by:
  4405 ;;		_main
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           
  4410                           ;psect for function _PIR_Main
  4411  0025                     _PIR_Main:	
  4412                           
  4413                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4414                           
  4415                           ;incstack = 0
  4416                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4417  0025  3000               	movlw	0
  4418  0026  158A  265E  118A   	fcall	_getMain_All_Error_Status
  4419  0029  1283               	bcf	3,5	;RP0=0, select bank0
  4420  002A  1303               	bcf	3,6	;RP1=0, select bank0
  4421  002B  00DF               	movwf	??_PIR_Main
  4422  002C  085F               	movf	??_PIR_Main,w
  4423  002D  00E4               	movwf	PIR_Main@error
  4424                           
  4425                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4426  002E  158A  239C  118A   	fcall	_getCDS_Status
  4427  0031  1283               	bcf	3,5	;RP0=0, select bank0
  4428  0032  1303               	bcf	3,6	;RP1=0, select bank0
  4429  0033  00DF               	movwf	??_PIR_Main
  4430  0034  085F               	movf	??_PIR_Main,w
  4431  0035  00E7               	movwf	PIR_Main@cds
  4432                           
  4433                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  4434  0036  1683               	bsf	3,5	;RP0=1, select bank1
  4435  0037  1303               	bcf	3,6	;RP1=0, select bank1
  4436  0038  1C20               	btfss	__PIR^(0+128),0
  4437  0039  29E9               	goto	l869
  4438                           
  4439                           ;PIR_B1.c: 17: if (error == 0) {
  4440  003A  1283               	bcf	3,5	;RP0=0, select bank0
  4441  003B  1303               	bcf	3,6	;RP1=0, select bank0
  4442  003C  08E4               	movf	PIR_Main@error,f
  4443  003D  1D03               	skipz
  4444  003E  2870               	goto	l870
  4445                           
  4446                           ;PIR_B1.c: 19: if (cds == 1) {
  4447  003F  0867               	movf	PIR_Main@cds,w
  4448  0040  3A01               	xorlw	1
  4449  0041  1D03               	skipz
  4450  0042  2847               	goto	l871
  4451                           
  4452                           ;PIR_B1.c: 20: _PIR.Available = 1;
  4453  0043  1683               	bsf	3,5	;RP0=1, select bank1
  4454  0044  1303               	bcf	3,6	;RP1=0, select bank1
  4455  0045  17A0               	bsf	__PIR^(0+128),7
  4456                           
  4457                           ;PIR_B1.c: 21: } else {
  4458  0046  2862               	goto	l5039
  4459  0047                     l871:	
  4460                           
  4461                           ;PIR_B1.c: 22: _PIR.Available = 0;
  4462  0047  1683               	bsf	3,5	;RP0=1, select bank1
  4463  0048  1303               	bcf	3,6	;RP1=0, select bank1
  4464  0049  13A0               	bcf	__PIR^(0+128),7
  4465                           
  4466                           ;PIR_B1.c: 23: if (_PIR.OK == 1) {
  4467  004A  1DA0               	btfss	__PIR^(0+128),3
  4468  004B  2862               	goto	l5039
  4469                           
  4470                           ;PIR_B1.c: 24: if (getLights_Status(1) == 1) {
  4471  004C  3001               	movlw	1
  4472  004D  158A  243B  118A   	fcall	_getLights_Status
  4473  0050  3A01               	xorlw	1
  4474  0051  1D03               	skipz
  4475  0052  2858               	goto	l874
  4476                           
  4477                           ;PIR_B1.c: 25: setLights_Trigger(1, 0);
  4478  0053  01F6               	clrf	setLights_Trigger@command
  4479  0054  3001               	movlw	1
  4480  0055  158A  24F2  118A   	fcall	_setLights_Trigger
  4481  0058                     l874:	
  4482                           
  4483                           ;PIR_B1.c: 26: }
  4484                           ;PIR_B1.c: 27: setLED(1, 0);
  4485  0058  01F6               	clrf	setLED@command
  4486  0059  3001               	movlw	1
  4487  005A  118A  256F  118A   	fcall	_setLED
  4488                           
  4489                           ;PIR_B1.c: 28: setLED(2, 0);
  4490  005D  01F6               	clrf	setLED@command
  4491  005E  3002               	movlw	2
  4492  005F  118A  256F  118A   	fcall	_setLED
  4493  0062                     l5039:	
  4494                           
  4495                           ;PIR_B1.c: 29: }
  4496                           ;PIR_B1.c: 30: }
  4497                           ;PIR_B1.c: 34: if (_PIR.Detect == 0) {
  4498  0062  1683               	bsf	3,5	;RP0=1, select bank1
  4499  0063  1303               	bcf	3,6	;RP1=0, select bank1
  4500  0064  1A20               	btfsc	__PIR^(0+128),4
  4501  0065  2876               	goto	l877
  4502                           
  4503                           ;PIR_B1.c: 35: _PIR.Detect = 1;
  4504  0066  1620               	bsf	__PIR^(0+128),4
  4505                           
  4506                           ;PIR_B1.c: 36: if (_PIR.OK == 0) {
  4507  0067  19A0               	btfsc	__PIR^(0+128),3
  4508  0068  2876               	goto	l877
  4509                           
  4510                           ;PIR_B1.c: 37: setLED(1, 1);
  4511  0069  01F6               	clrf	setLED@command
  4512  006A  0AF6               	incf	setLED@command,f
  4513  006B  3001               	movlw	1
  4514  006C  118A  256F  118A   	fcall	_setLED
  4515                           
  4516                           ;PIR_B1.c: 38: }
  4517                           ;PIR_B1.c: 39: }
  4518                           ;PIR_B1.c: 40: } else {
  4519  006F  2876               	goto	l877
  4520  0070                     l870:	
  4521                           
  4522                           ;PIR_B1.c: 41: if (_PIR.Detect == 1) {
  4523  0070  1683               	bsf	3,5	;RP0=1, select bank1
  4524  0071  1303               	bcf	3,6	;RP1=0, select bank1
  4525  0072  1E20               	btfss	__PIR^(0+128),4
  4526  0073  2876               	goto	l877
  4527                           
  4528                           ;PIR_B1.c: 42: _PIR.Detect = 0;
  4529  0074  1220               	bcf	__PIR^(0+128),4
  4530                           
  4531                           ;PIR_B1.c: 43: _PIR.Available = 0;
  4532  0075  13A0               	bcf	__PIR^(0+128),7
  4533  0076                     l877:	
  4534                           
  4535                           ;PIR_B1.c: 61: }
  4536                           ;PIR_B1.c: 62: }
  4537                           ;PIR_B1.c: 64: if (_PIR.ADtoGO == 0) {
  4538  0076  1683               	bsf	3,5	;RP0=1, select bank1
  4539  0077  1303               	bcf	3,6	;RP1=0, select bank1
  4540  0078  18A0               	btfsc	__PIR^(0+128),1
  4541  0079  2889               	goto	l879
  4542                           
  4543                           ;PIR_B1.c: 65: _PIR.Time++;
  4544  007A  3001               	movlw	1
  4545  007B  1283               	bcf	3,5	;RP0=0, select bank0
  4546  007C  1303               	bcf	3,6	;RP1=0, select bank0
  4547  007D  00DF               	movwf	??_PIR_Main
  4548  007E  085F               	movf	??_PIR_Main,w
  4549  007F  1683               	bsf	3,5	;RP0=1, select bank1
  4550  0080  1303               	bcf	3,6	;RP1=0, select bank1
  4551  0081  07A5               	addwf	(__PIR^(0+128)+5),f
  4552                           
  4553                           ;PIR_B1.c: 66: if (_PIR.Time == 10) {
  4554  0082  0825               	movf	(__PIR^(0+128)+5),w
  4555  0083  3A0A               	xorlw	10
  4556  0084  1D03               	skipz
  4557  0085  2990               	goto	l5129
  4558                           
  4559                           ;PIR_B1.c: 67: _PIR.Time = 0;
  4560  0086  01A5               	clrf	(__PIR^(0+128)+5)
  4561                           
  4562                           ;PIR_B1.c: 68: _PIR.ADtoGO = 1;
  4563  0087  14A0               	bsf	__PIR^(0+128),1
  4564                           
  4565                           ;PIR_B1.c: 69: }
  4566                           ;PIR_B1.c: 70: } else {
  4567  0088  2990               	goto	l5129
  4568  0089                     l879:	
  4569                           
  4570                           ;PIR_B1.c: 71: if (_PIR.GO == 1) {
  4571  0089  1D20               	btfss	__PIR^(0+128),2
  4572  008A  2990               	goto	l5129
  4573                           
  4574                           ;PIR_B1.c: 72: _PIR.GO = 0;
  4575  008B  1120               	bcf	__PIR^(0+128),2
  4576                           
  4577                           ;PIR_B1.c: 73: _PIR.ADtoGO = 0;
  4578  008C  10A0               	bcf	__PIR^(0+128),1
  4579                           
  4580                           ;PIR_B1.c: 74: if (_PIR.Available == 1) {
  4581  008D  1BA0               	btfsc	__PIR^(0+128),7
  4582                           
  4583                           ;PIR_B1.c: 75: if (_PIR.OK == 1) {
  4584  008E  1DA0               	btfss	__PIR^(0+128),3
  4585  008F  2990               	goto	l5129
  4586                           
  4587                           ;PIR_B1.c: 77: _PIR.Time++;
  4588  0090  3001               	movlw	1
  4589  0091  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0092  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0093  00DF               	movwf	??_PIR_Main
  4592  0094  085F               	movf	??_PIR_Main,w
  4593  0095  1683               	bsf	3,5	;RP0=1, select bank1
  4594  0096  1303               	bcf	3,6	;RP1=0, select bank1
  4595  0097  07A5               	addwf	(__PIR^(0+128)+5),f
  4596                           
  4597                           ;PIR_B1.c: 78: if (_PIR.Time == 60) {
  4598  0098  0825               	movf	(__PIR^(0+128)+5),w
  4599  0099  3A3C               	xorlw	60
  4600  009A  1D03               	skipz
  4601  009B  28D0               	goto	l5095
  4602                           
  4603                           ;PIR_B1.c: 79: _PIR.Time = 0;
  4604  009C  01A5               	clrf	(__PIR^(0+128)+5)
  4605                           
  4606                           ;PIR_B1.c: 80: if (_PIR.RangeCount >= 90) {
  4607  009D  305A               	movlw	90
  4608  009E  024B               	subwf	(__PIR^(0+128)+43),w
  4609  009F  1C03               	skipc
  4610  00A0  28AC               	goto	l5077
  4611                           
  4612                           ;PIR_B1.c: 81: _PIR.RangeTime1 = 0;
  4613  00A1  01CA               	clrf	(__PIR^(0+128)+42)
  4614                           
  4615                           ;PIR_B1.c: 83: if (_PIR.RangeValue == 25) {
  4616  00A2  084C               	movf	(__PIR^(0+128)+44),w
  4617  00A3  3A19               	xorlw	25
  4618  00A4  1903               	btfsc	3,2
  4619  00A5  28C1               	goto	L14
  4620                           
  4621                           ;PIR_B1.c: 85: } else if (_PIR.RangeValue == (25+10)) {
  4622                           
  4623                           ;PIR_B1.c: 84: _PIR.RangeValue = (25+10);
  4624  00A6  084C               	movf	(__PIR^(0+128)+44),w
  4625  00A7  3A23               	xorlw	35
  4626  00A8  1D03               	skipz
  4627  00A9  28CF               	goto	l5093
  4628                           
  4629                           ;PIR_B1.c: 86: _PIR.RangeValue = (25+20);
  4630  00AA  302D               	movlw	45
  4631  00AB  28C8               	goto	L10
  4632  00AC                     l5077:	
  4633                           ;PIR_B1.c: 87: }
  4634                           ;PIR_B1.c: 88: } else if (_PIR.RangeCount <= 10) {
  4635                           
  4636  00AC  300B               	movlw	11
  4637  00AD  024B               	subwf	(__PIR^(0+128)+43),w
  4638  00AE  1803               	skipnc
  4639  00AF  28CF               	goto	l5093
  4640                           
  4641                           ;PIR_B1.c: 89: _PIR.RangeTime1++;
  4642  00B0  3001               	movlw	1
  4643  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  4644  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  4645  00B3  00DF               	movwf	??_PIR_Main
  4646  00B4  085F               	movf	??_PIR_Main,w
  4647  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  4648  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  4649  00B7  07CA               	addwf	(__PIR^(0+128)+42),f
  4650                           
  4651                           ;PIR_B1.c: 90: if (_PIR.RangeTime1 == 2) {
  4652  00B8  084A               	movf	(__PIR^(0+128)+42),w
  4653  00B9  3A02               	xorlw	2
  4654  00BA  1D03               	skipz
  4655  00BB  28CF               	goto	l5093
  4656                           
  4657                           ;PIR_B1.c: 91: _PIR.RangeTime1 = 0;
  4658  00BC  01CA               	clrf	(__PIR^(0+128)+42)
  4659                           
  4660                           ;PIR_B1.c: 93: if (_PIR.RangeValue == (25+20)) {
  4661  00BD  084C               	movf	(__PIR^(0+128)+44),w
  4662  00BE  3A2D               	xorlw	45
  4663  00BF  1D03               	skipz
  4664  00C0  28C3               	goto	l5089
  4665  00C1                     L14:	
  4666                           
  4667                           ;PIR_B1.c: 94: _PIR.RangeValue = (25+10);
  4668  00C1  3023               	movlw	35
  4669  00C2  28C8               	goto	L10
  4670  00C3                     l5089:	
  4671                           ;PIR_B1.c: 95: } else if (_PIR.RangeValue == (25+10)) {
  4672                           
  4673  00C3  084C               	movf	(__PIR^(0+128)+44),w
  4674  00C4  3A23               	xorlw	35
  4675  00C5  1D03               	skipz
  4676  00C6  28CF               	goto	l5093
  4677                           
  4678                           ;PIR_B1.c: 96: _PIR.RangeValue = 25;
  4679  00C7  3019               	movlw	25
  4680  00C8                     L10:	
  4681  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  4682  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  4683  00CA  00DF               	movwf	??_PIR_Main
  4684  00CB  085F               	movf	??_PIR_Main,w
  4685  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  4686  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  4687  00CE  00CC               	movwf	(__PIR^(0+128)+44)
  4688  00CF                     l5093:	
  4689                           
  4690                           ;PIR_B1.c: 97: }
  4691                           ;PIR_B1.c: 98: }
  4692                           ;PIR_B1.c: 99: }
  4693                           ;PIR_B1.c: 100: _PIR.RangeCount = 0;
  4694  00CF  01CB               	clrf	(__PIR^(0+128)+43)
  4695  00D0                     l5095:	
  4696                           
  4697                           ;PIR_B1.c: 101: }
  4698                           ;PIR_B1.c: 104: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4699                           ;PIR_B1.c: 105: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4700  00D0  084C               	movf	(__PIR^(0+128)+44),w
  4701  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  4702  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  4703  00D3  00DF               	movwf	??_PIR_Main
  4704  00D4  01E0               	clrf	??_PIR_Main+1
  4705  00D5  09DF               	comf	??_PIR_Main,f
  4706  00D6  09E0               	comf	??_PIR_Main+1,f
  4707  00D7  0ADF               	incf	??_PIR_Main,f
  4708  00D8  1903               	skipnz
  4709  00D9  0AE0               	incf	??_PIR_Main+1,f
  4710  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  4711  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  4712  00DC  0826               	movf	(__PIR^(0+128)+6),w
  4713  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  4714  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  4715  00DF  075F               	addwf	??_PIR_Main,w
  4716  00E0  00E1               	movwf	??_PIR_Main+2
  4717  00E1  0860               	movf	??_PIR_Main+1,w
  4718  00E2  1803               	skipnc
  4719  00E3  0A60               	incf	??_PIR_Main+1,w
  4720  00E4  00E2               	movwf	??_PIR_Main+3
  4721  00E5  0862               	movf	??_PIR_Main+3,w
  4722  00E6  3A80               	xorlw	128
  4723  00E7  3C80               	sublw	128
  4724  00E8  1D03               	skipz
  4725  00E9  28EE               	goto	u6655
  4726  00EA  0861               	movf	??_PIR_Main+2,w
  4727  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  4728  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  4729  00ED  0221               	subwf	(__PIR^(0+128)+1),w
  4730  00EE                     u6655:	
  4731  00EE  1C03               	skipc
  4732  00EF  290E               	goto	l5105
  4733  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  4734  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  4735  00F2  0826               	movf	(__PIR^(0+128)+6),w
  4736  00F3  074C               	addwf	(__PIR^(0+128)+44),w
  4737  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  4738  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  4739  00F6  00DF               	movwf	??_PIR_Main
  4740  00F7  01E0               	clrf	??_PIR_Main+1
  4741  00F8  0DE0               	rlf	??_PIR_Main+1,f
  4742  00F9  0860               	movf	??_PIR_Main+1,w
  4743  00FA  3A80               	xorlw	128
  4744  00FB  00E1               	movwf	??_PIR_Main+2
  4745  00FC  3080               	movlw	128
  4746  00FD  0261               	subwf	??_PIR_Main+2,w
  4747  00FE  1D03               	skipz
  4748  00FF  2906               	goto	u6665
  4749  0100  1683               	bsf	3,5	;RP0=1, select bank1
  4750  0101  1303               	bcf	3,6	;RP1=0, select bank1
  4751  0102  0821               	movf	(__PIR^(0+128)+1),w
  4752  0103  1283               	bcf	3,5	;RP0=0, select bank0
  4753  0104  1303               	bcf	3,6	;RP1=0, select bank0
  4754  0105  025F               	subwf	??_PIR_Main,w
  4755  0106                     u6665:	
  4756  0106  1C03               	skipc
  4757  0107  290E               	goto	l5105
  4758                           
  4759                           ;PIR_B1.c: 107: _PIR.Count = 0;
  4760  0108  1683               	bsf	3,5	;RP0=1, select bank1
  4761  0109  1303               	bcf	3,6	;RP1=0, select bank1
  4762  010A  01C1               	clrf	(__PIR^(0+128)+33)
  4763  010B  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4764                           
  4765                           ;PIR_B1.c: 113: setLED(1, 0);
  4766  010C  01F6               	clrf	setLED@command
  4767  010D  297F               	goto	L15
  4768  010E                     l5105:	
  4769                           ;PIR_B1.c: 115: } else {
  4770                           
  4771                           ;PIR_B1.c: 114: setLED(2, 0);
  4772                           
  4773                           
  4774                           ;PIR_B1.c: 117: _PIR.RangeCount++;
  4775  010E  3001               	movlw	1
  4776  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0111  00DF               	movwf	??_PIR_Main
  4779  0112  085F               	movf	??_PIR_Main,w
  4780  0113  1683               	bsf	3,5	;RP0=1, select bank1
  4781  0114  1303               	bcf	3,6	;RP1=0, select bank1
  4782  0115  07CB               	addwf	(__PIR^(0+128)+43),f
  4783                           
  4784                           ;PIR_B1.c: 118: _PIR.Count++;
  4785  0116  3001               	movlw	1
  4786  0117  07C1               	addwf	(__PIR^(0+128)+33),f
  4787  0118  1803               	skipnc
  4788  0119  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4789  011A  3000               	movlw	0
  4790  011B  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4791                           
  4792                           ;PIR_B1.c: 120: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 3;
  4793  011C  1B20               	btfsc	__PIR^(0+128),6
  4794  011D  2922               	goto	l5113
  4795  011E  3003               	movlw	3
  4796  011F  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0120  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0121  2924               	goto	L11
  4799  0122                     l5113:	
  4800  0122  3003               	movlw	3
  4801  0123  1283               	bcf	3,5	;RP0=0, select bank0
  4802  0124                     L11:	
  4803  0124  00E5               	movwf	_PIR_Main$2976
  4804  0125  3000               	movlw	0
  4805  0126  00E6               	movwf	_PIR_Main$2976+1
  4806  0127  0865               	movf	_PIR_Main$2976,w
  4807  0128  00DF               	movwf	??_PIR_Main
  4808  0129  085F               	movf	??_PIR_Main,w
  4809  012A  1683               	bsf	3,5	;RP0=1, select bank1
  4810  012B  1303               	bcf	3,6	;RP1=0, select bank1
  4811  012C  00C3               	movwf	(__PIR^(0+128)+35)
  4812                           
  4813                           ;PIR_B1.c: 122: if (_PIR.Count == _PIR.TriggerValue) {
  4814  012D  0843               	movf	(__PIR^(0+128)+35),w
  4815  012E  1283               	bcf	3,5	;RP0=0, select bank0
  4816  012F  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0130  00DF               	movwf	??_PIR_Main
  4818  0131  01E0               	clrf	??_PIR_Main+1
  4819  0132  1683               	bsf	3,5	;RP0=1, select bank1
  4820  0133  1303               	bcf	3,6	;RP1=0, select bank1
  4821  0134  0842               	movf	((__PIR+1)^(0+128)+33),w
  4822  0135  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0136  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0137  0660               	xorwf	??_PIR_Main+1,w
  4825  0138  1D03               	skipz
  4826  0139  2940               	goto	u6685
  4827  013A  1683               	bsf	3,5	;RP0=1, select bank1
  4828  013B  1303               	bcf	3,6	;RP1=0, select bank1
  4829  013C  0841               	movf	(__PIR^(0+128)+33),w
  4830  013D  1283               	bcf	3,5	;RP0=0, select bank0
  4831  013E  1303               	bcf	3,6	;RP1=0, select bank0
  4832  013F  065F               	xorwf	??_PIR_Main,w
  4833  0140                     u6685:	
  4834  0140  1D03               	skipz
  4835  0141  2990               	goto	l5129
  4836                           
  4837                           ;PIR_B1.c: 123: _PIR.Count = 0;
  4838  0142  1683               	bsf	3,5	;RP0=1, select bank1
  4839  0143  1303               	bcf	3,6	;RP1=0, select bank1
  4840  0144  01C1               	clrf	(__PIR^(0+128)+33)
  4841  0145  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4842                           
  4843                           ;PIR_B1.c: 125: _PIR.CloseTimeSeconds = 0;
  4844  0146  01C6               	clrf	(__PIR^(0+128)+38)
  4845                           
  4846                           ;PIR_B1.c: 126: _PIR.CloseTimeMinutes = 0;
  4847  0147  01C4               	clrf	(__PIR^(0+128)+36)
  4848  0148  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4849                           
  4850                           ;PIR_B1.c: 127: _PIR.Status = 1;
  4851  0149  1720               	bsf	__PIR^(0+128),6
  4852                           
  4853                           ;PIR_B1.c: 131: if (getLights_Status(1) == 0) {
  4854  014A  3001               	movlw	1
  4855  014B  158A  243B  118A   	fcall	_getLights_Status
  4856  014E  3800               	iorlw	0
  4857  014F  1D03               	skipz
  4858  0150  2957               	goto	l5123
  4859                           
  4860                           ;PIR_B1.c: 132: setLights_Trigger(1, 1);
  4861  0151  01F6               	clrf	setLights_Trigger@command
  4862  0152  0AF6               	incf	setLights_Trigger@command,f
  4863  0153  3001               	movlw	1
  4864  0154  158A  24F2  118A   	fcall	_setLights_Trigger
  4865  0157                     l5123:	
  4866                           
  4867                           ;PIR_B1.c: 133: }
  4868                           ;PIR_B1.c: 137: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4869  0157  1683               	bsf	3,5	;RP0=1, select bank1
  4870  0158  1303               	bcf	3,6	;RP1=0, select bank1
  4871  0159  084C               	movf	(__PIR^(0+128)+44),w
  4872  015A  1283               	bcf	3,5	;RP0=0, select bank0
  4873  015B  1303               	bcf	3,6	;RP1=0, select bank0
  4874  015C  00DF               	movwf	??_PIR_Main
  4875  015D  01E0               	clrf	??_PIR_Main+1
  4876  015E  09DF               	comf	??_PIR_Main,f
  4877  015F  09E0               	comf	??_PIR_Main+1,f
  4878  0160  0ADF               	incf	??_PIR_Main,f
  4879  0161  1903               	skipnz
  4880  0162  0AE0               	incf	??_PIR_Main+1,f
  4881  0163  1683               	bsf	3,5	;RP0=1, select bank1
  4882  0164  1303               	bcf	3,6	;RP1=0, select bank1
  4883  0165  0826               	movf	(__PIR^(0+128)+6),w
  4884  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0168  075F               	addwf	??_PIR_Main,w
  4887  0169  00E1               	movwf	??_PIR_Main+2
  4888  016A  0860               	movf	??_PIR_Main+1,w
  4889  016B  1803               	skipnc
  4890  016C  0A60               	incf	??_PIR_Main+1,w
  4891  016D  00E2               	movwf	??_PIR_Main+3
  4892  016E  0862               	movf	??_PIR_Main+3,w
  4893  016F  3A80               	xorlw	128
  4894  0170  00E3               	movwf	??_PIR_Main+4
  4895  0171  3080               	movlw	128
  4896  0172  0263               	subwf	??_PIR_Main+4,w
  4897  0173  1D03               	skipz
  4898  0174  297B               	goto	u6705
  4899  0175  1683               	bsf	3,5	;RP0=1, select bank1
  4900  0176  1303               	bcf	3,6	;RP1=0, select bank1
  4901  0177  0821               	movf	(__PIR^(0+128)+1),w
  4902  0178  1283               	bcf	3,5	;RP0=0, select bank0
  4903  0179  1303               	bcf	3,6	;RP1=0, select bank0
  4904  017A  0261               	subwf	??_PIR_Main+2,w
  4905  017B                     u6705:	
  4906  017B  1C03               	skipc
  4907  017C  2985               	goto	l5127
  4908                           
  4909                           ;PIR_B1.c: 138: setLED(1, 1);
  4910  017D  01F6               	clrf	setLED@command
  4911  017E  0AF6               	incf	setLED@command,f
  4912  017F                     L15:	
  4913  017F  3001               	movlw	1
  4914  0180  118A  256F  118A   	fcall	_setLED
  4915                           
  4916                           ;PIR_B1.c: 139: setLED(2, 0);
  4917  0183  01F6               	clrf	setLED@command
  4918  0184  298C               	goto	L12
  4919  0185                     l5127:	
  4920                           ;PIR_B1.c: 140: } else {
  4921                           
  4922                           
  4923                           ;PIR_B1.c: 141: setLED(1, 0);
  4924  0185  01F6               	clrf	setLED@command
  4925  0186  3001               	movlw	1
  4926  0187  118A  256F  118A   	fcall	_setLED
  4927                           
  4928                           ;PIR_B1.c: 142: setLED(2, 1);
  4929  018A  01F6               	clrf	setLED@command
  4930  018B  0AF6               	incf	setLED@command,f
  4931  018C                     L12:	
  4932  018C  3002               	movlw	2
  4933  018D  118A  256F  118A   	fcall	_setLED
  4934  0190                     l5129:	
  4935                           
  4936                           ;PIR_B1.c: 143: }
  4937                           ;PIR_B1.c: 167: }
  4938                           ;PIR_B1.c: 168: }
  4939                           ;PIR_B1.c: 169: }
  4940                           ;PIR_B1.c: 170: }
  4941                           ;PIR_B1.c: 171: }
  4942                           ;PIR_B1.c: 172: }
  4943                           ;PIR_B1.c: 173: if (_PIR.OK == 0) {
  4944  0190  1683               	bsf	3,5	;RP0=1, select bank1
  4945  0191  1303               	bcf	3,6	;RP1=0, select bank1
  4946  0192  19A0               	btfsc	__PIR^(0+128),3
  4947  0193  29BB               	goto	l5145
  4948                           
  4949                           ;PIR_B1.c: 174: _PIR.Count++;
  4950  0194  3001               	movlw	1
  4951  0195  07C1               	addwf	(__PIR^(0+128)+33),f
  4952  0196  1803               	skipnc
  4953  0197  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4954  0198  3000               	movlw	0
  4955  0199  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4956                           
  4957                           ;PIR_B1.c: 175: if (_PIR.Count == 3000) {
  4958  019A  300B               	movlw	11
  4959  019B  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4960  019C  1D03               	skipz
  4961  019D  29A0               	goto	u6725
  4962  019E  30B8               	movlw	184
  4963  019F  0641               	xorwf	(__PIR^(0+128)+33),w
  4964  01A0                     u6725:	
  4965  01A0  1D03               	skipz
  4966  01A1  29BB               	goto	l5145
  4967                           
  4968                           ;PIR_B1.c: 176: _PIR.Count = 0;
  4969  01A2  01C1               	clrf	(__PIR^(0+128)+33)
  4970  01A3  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4971                           
  4972                           ;PIR_B1.c: 177: _PIR.OK = 1;
  4973  01A4  15A0               	bsf	__PIR^(0+128),3
  4974                           
  4975                           ;PIR_B1.c: 178: setLED(1, 0);
  4976  01A5  01F6               	clrf	setLED@command
  4977  01A6  3001               	movlw	1
  4978  01A7  118A  256F  118A   	fcall	_setLED
  4979                           
  4980                           ;PIR_B1.c: 179: if (cds == 0) {
  4981  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  4982  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  4983  01AC  08E7               	movf	PIR_Main@cds,f
  4984  01AD  1D03               	skipz
  4985  01AE  29BB               	goto	l5145
  4986                           
  4987                           ;PIR_B1.c: 180: if (getLights_Status(1) == 1) {
  4988  01AF  3001               	movlw	1
  4989  01B0  158A  243B  118A   	fcall	_getLights_Status
  4990  01B3  3A01               	xorlw	1
  4991  01B4  1D03               	skipz
  4992  01B5  29BB               	goto	l5145
  4993                           
  4994                           ;PIR_B1.c: 181: setLights_Trigger(1, 0);
  4995  01B6  01F6               	clrf	setLights_Trigger@command
  4996  01B7  3001               	movlw	1
  4997  01B8  158A  24F2  118A   	fcall	_setLights_Trigger
  4998  01BB                     l5145:	
  4999                           
  5000                           ;PIR_B1.c: 182: }
  5001                           ;PIR_B1.c: 183: }
  5002                           ;PIR_B1.c: 184: }
  5003                           ;PIR_B1.c: 185: }
  5004                           ;PIR_B1.c: 186: if (_PIR.Status == 1) {
  5005  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  5006  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  5007  01BD  1F20               	btfss	__PIR^(0+128),6
  5008  01BE  0008               	return
  5009                           
  5010                           ;PIR_B1.c: 187: _PIR.CloseTimeSeconds++;
  5011  01BF  3001               	movlw	1
  5012  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  5013  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  5014  01C2  00DF               	movwf	??_PIR_Main
  5015  01C3  085F               	movf	??_PIR_Main,w
  5016  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  5017  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  5018  01C6  07C6               	addwf	(__PIR^(0+128)+38),f
  5019                           
  5020                           ;PIR_B1.c: 188: if (_PIR.CloseTimeSeconds == 100) {
  5021  01C7  0846               	movf	(__PIR^(0+128)+38),w
  5022  01C8  3A64               	xorlw	100
  5023  01C9  1D03               	skipz
  5024  01CA  0008               	return
  5025                           
  5026                           ;PIR_B1.c: 189: _PIR.CloseTimeSeconds = 0;
  5027  01CB  01C6               	clrf	(__PIR^(0+128)+38)
  5028                           
  5029                           ;PIR_B1.c: 190: _PIR.CloseTimeMinutes++;
  5030  01CC  3001               	movlw	1
  5031  01CD  07C4               	addwf	(__PIR^(0+128)+36),f
  5032  01CE  1803               	skipnc
  5033  01CF  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  5034  01D0  3000               	movlw	0
  5035  01D1  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  5036                           
  5037                           ;PIR_B1.c: 191: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  5038  01D2  0848               	movf	((__PIR+1)^(0+128)+39),w
  5039  01D3  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  5040  01D4  1D03               	skipz
  5041  01D5  29D8               	goto	u6775
  5042  01D6  0847               	movf	(__PIR^(0+128)+39),w
  5043  01D7  0644               	xorwf	(__PIR^(0+128)+36),w
  5044  01D8                     u6775:	
  5045  01D8  1D03               	skipz
  5046  01D9  0008               	return
  5047                           
  5048                           ;PIR_B1.c: 192: _PIR.CloseTimeMinutes = 0;
  5049  01DA  01C4               	clrf	(__PIR^(0+128)+36)
  5050  01DB  01C5               	clrf	((__PIR+1)^(0+128)+36)
  5051                           
  5052                           ;PIR_B1.c: 193: _PIR.Status = 0;
  5053  01DC  1320               	bcf	__PIR^(0+128),6
  5054                           
  5055                           ;PIR_B1.c: 197: if (getLights_Status(1) == 1) {
  5056  01DD  3001               	movlw	1
  5057  01DE  158A  243B  118A   	fcall	_getLights_Status
  5058  01E1  3A01               	xorlw	1
  5059  01E2  1D03               	skipz
  5060  01E3  0008               	return
  5061                           
  5062                           ;PIR_B1.c: 198: setLights_Trigger(1, 0);
  5063  01E4  01F6               	clrf	setLights_Trigger@command
  5064  01E5  3001               	movlw	1
  5065  01E6  158A  24F2         	fcall	_setLights_Trigger
  5066                           
  5067                           ;PIR_B1.c: 199: }
  5068                           ;PIR_B1.c: 203: }
  5069                           ;PIR_B1.c: 204: }
  5070                           ;PIR_B1.c: 205: }
  5071                           ;PIR_B1.c: 206: } else {
  5072  01E8  0008               	return
  5073  01E9                     l869:	
  5074                           
  5075                           ;PIR_B1.c: 207: if (myMain.PowerON == 1) {
  5076  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  5077  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  5078  01EB  1C20               	btfss	_myMain,0
  5079  01EC  0008               	return
  5080                           
  5081                           ;PIR_B1.c: 208: _PIR.Enable = 1;
  5082  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  5083  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  5084  01EF  1420               	bsf	__PIR^(0+128),0
  5085                           
  5086                           ;PIR_B1.c: 209: setLED(1, 1);
  5087  01F0  01F6               	clrf	setLED@command
  5088  01F1  0AF6               	incf	setLED@command,f
  5089  01F2  3001               	movlw	1
  5090  01F3  118A  256F  118A   	fcall	_setLED
  5091                           
  5092                           ;PIR_B1.c: 212: if (getLights_Status(1) == 0) {
  5093  01F6  3001               	movlw	1
  5094  01F7  158A  243B  118A   	fcall	_getLights_Status
  5095  01FA  3800               	iorlw	0
  5096  01FB  1D03               	skipz
  5097  01FC  0008               	return
  5098                           
  5099                           ;PIR_B1.c: 213: setLights_Trigger(1, 1);
  5100  01FD  01F6               	clrf	setLights_Trigger@command
  5101  01FE  0AF6               	incf	setLights_Trigger@command,f
  5102  01FF  3001               	movlw	1
  5103  0200  158A  24F2         	fcall	_setLights_Trigger
  5104  0202  0008               	return
  5105  0203                     __end_of_PIR_Main:	
  5106                           
  5107                           	psect	text22
  5108  0B9C                     __ptext22:	
  5109 ;; *************** function _getCDS_Status *****************
  5110 ;; Defined at:
  5111 ;;		line 42 in file "../src/CDS_B1.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  status          1    4[COMMON] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      unsigned char 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5125 ;;      Params:         0       0       0       0
  5126 ;;      Locals:         1       0       0       0
  5127 ;;      Temps:          0       0       0       0
  5128 ;;      Totals:         1       0       0       0
  5129 ;;Total ram usage:        1 bytes
  5130 ;; Hardware stack levels used:    1
  5131 ;; Hardware stack levels required when called:    2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_PIR_Main
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           
  5140                           ;psect for function _getCDS_Status
  5141  0B9C                     _getCDS_Status:	
  5142                           
  5143                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  5144                           
  5145                           ;incstack = 0
  5146                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5147  0B9C  3000               	movlw	0
  5148  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0B9F  1A2B               	btfsc	__CDS,4
  5151  0BA0  3001               	movlw	1
  5152  0BA1  00F4               	movwf	getCDS_Status@status
  5153                           
  5154                           ;CDS_B1.c: 44: return status;
  5155  0BA2  0874               	movf	getCDS_Status@status,w
  5156  0BA3  0008               	return
  5157  0BA4                     __end_of_getCDS_Status:	
  5158                           
  5159                           	psect	text23
  5160  0BB6                     __ptext23:	
  5161 ;; *************** function _PIR_Initialization *****************
  5162 ;; Defined at:
  5163 ;;		line 7 in file "../src/PIR_B1.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;		None               void
  5170 ;; Registers used:
  5171 ;;		wreg
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5177 ;;      Params:         0       0       0       0
  5178 ;;      Locals:         0       0       0       0
  5179 ;;      Temps:          1       0       0       0
  5180 ;;      Totals:         1       0       0       0
  5181 ;;Total ram usage:        1 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    2
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_main
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _PIR_Initialization
  5193  0BB6                     _PIR_Initialization:	
  5194                           
  5195                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  5196                           
  5197                           ;incstack = 0
  5198                           ; Regs used in _PIR_Initialization: [wreg]
  5199  0BB6  3019               	movlw	25
  5200  0BB7  00F4               	movwf	??_PIR_Initialization
  5201  0BB8  0874               	movf	??_PIR_Initialization,w
  5202  0BB9  1683               	bsf	3,5	;RP0=1, select bank1
  5203  0BBA  1303               	bcf	3,6	;RP1=0, select bank1
  5204  0BBB  00CC               	movwf	(__PIR^(0+128)+44)
  5205                           
  5206                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  5207  0BBC  3005               	movlw	5
  5208  0BBD  00C7               	movwf	(__PIR^(0+128)+39)
  5209  0BBE  3000               	movlw	0
  5210  0BBF  00C8               	movwf	(__PIR^(0+128)+40)
  5211  0BC0  0008               	return
  5212  0BC1                     __end_of_PIR_Initialization:	
  5213                           
  5214                           	psect	text24
  5215  0C1C                     __ptext24:	
  5216 ;; *************** function _Mcu_Initialization *****************
  5217 ;; Defined at:
  5218 ;;		line 30 in file "../src/MCU_B1.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;		None               void
  5225 ;; Registers used:
  5226 ;;		wreg, status,2, status,0, pclath, cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5232 ;;      Params:         0       0       0       0
  5233 ;;      Locals:         0       0       0       0
  5234 ;;      Temps:          0       0       0       0
  5235 ;;      Totals:         0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    3
  5239 ;; This function calls:
  5240 ;;		_ADC_Set
  5241 ;;		_Fosc_Set
  5242 ;;		_IO_Set
  5243 ;;		_TMR1_Set
  5244 ;;		_WDT_Set
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           
  5251                           ;psect for function _Mcu_Initialization
  5252  0C1C                     _Mcu_Initialization:	
  5253                           
  5254                           ;MCU_B1.c: 32: Fosc_Set();
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5258  0C1C  158A  2374  158A   	fcall	_Fosc_Set
  5259                           
  5260                           ;MCU_B1.c: 34: IO_Set();
  5261  0C1F  158A  24A9  158A   	fcall	_IO_Set
  5262                           
  5263                           ;MCU_B1.c: 36: ;;
  5264                           ;MCU_B1.c: 38: TMR1_Set();
  5265  0C22  158A  2400  158A   	fcall	_TMR1_Set
  5266                           
  5267                           ;MCU_B1.c: 40: ADC_Set();
  5268  0C25  158A  2385  158A   	fcall	_ADC_Set
  5269                           
  5270                           ;MCU_B1.c: 42: ;;
  5271                           ;MCU_B1.c: 44: ;;
  5272                           ;MCU_B1.c: 46: ;;
  5273                           ;MCU_B1.c: 48: ;;
  5274                           ;MCU_B1.c: 50: ;;
  5275                           ;MCU_B1.c: 52: WDT_Set();
  5276  0C28  158A  240E         	fcall	_WDT_Set
  5277  0C2A  0008               	return
  5278  0C2B                     __end_of_Mcu_Initialization:	
  5279                           
  5280                           	psect	text25
  5281  0C0E                     __ptext25:	
  5282 ;; *************** function _WDT_Set *****************
  5283 ;; Defined at:
  5284 ;;		line 1084 in file "../src/MCU_B1.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;		None               void
  5291 ;; Registers used:
  5292 ;;		wreg
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5298 ;;      Params:         0       0       0       0
  5299 ;;      Locals:         0       0       0       0
  5300 ;;      Temps:          1       0       0       0
  5301 ;;      Totals:         1       0       0       0
  5302 ;;Total ram usage:        1 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    2
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_Mcu_Initialization
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           
  5313                           ;psect for function _WDT_Set
  5314  0C0E                     _WDT_Set:	
  5315                           
  5316                           ;MCU_B1.c: 1086: PSA = 1;
  5317                           
  5318                           ;incstack = 0
  5319                           ; Regs used in _WDT_Set: [wreg]
  5320  0C0E  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0C0F  1303               	bcf	3,6	;RP1=0, select bank1
  5322  0C10  1581               	bsf	1,3	;volatile
  5323                           
  5324                           ;MCU_B1.c: 1087: PS0 = 1;
  5325  0C11  1401               	bsf	1,0	;volatile
  5326                           
  5327                           ;MCU_B1.c: 1088: PS1 = 1;
  5328  0C12  1481               	bsf	1,1	;volatile
  5329                           
  5330                           ;MCU_B1.c: 1089: PS2 = 1;
  5331  0C13  1501               	bsf	1,2	;volatile
  5332                           
  5333                           ;MCU_B1.c: 1093: WDT.Enable = 1;
  5334  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  5335  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  5336  0C16  1437               	bsf	_WDT,0
  5337                           
  5338                           ;MCU_B1.c: 1094: WDT.Timer = 10;
  5339  0C17  300A               	movlw	10
  5340  0C18  00F4               	movwf	??_WDT_Set
  5341  0C19  0874               	movf	??_WDT_Set,w
  5342  0C1A  00B8               	movwf	_WDT+1
  5343  0C1B  0008               	return
  5344  0C1C                     __end_of_WDT_Set:	
  5345                           
  5346                           	psect	text26
  5347  0C00                     __ptext26:	
  5348 ;; *************** function _TMR1_Set *****************
  5349 ;; Defined at:
  5350 ;;		line 199 in file "../src/MCU_B1.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;		None               void
  5357 ;; Registers used:
  5358 ;;		wreg
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5364 ;;      Params:         0       0       0       0
  5365 ;;      Locals:         0       0       0       0
  5366 ;;      Temps:          0       0       0       0
  5367 ;;      Totals:         0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    2
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_Mcu_Initialization
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           
  5379                           ;psect for function _TMR1_Set
  5380  0C00                     _TMR1_Set:	
  5381                           
  5382                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in _TMR1_Set: [wreg]
  5386  0C00  3041               	movlw	65
  5387  0C01  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0C02  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0C03  0090               	movwf	16	;volatile
  5390                           
  5391                           ;MCU_B1.c: 201: TMR1H = (int)((65536-1480)/256);
  5392  0C04  30FA               	movlw	250
  5393  0C05  008F               	movwf	15	;volatile
  5394                           
  5395                           ;MCU_B1.c: 202: TMR1L = (int)((65536-1480)%256);
  5396  0C06  3038               	movlw	56
  5397  0C07  008E               	movwf	14	;volatile
  5398                           
  5399                           ;MCU_B1.c: 203: TMR1IE = 1;
  5400  0C08  1683               	bsf	3,5	;RP0=1, select bank1
  5401  0C09  1303               	bcf	3,6	;RP1=0, select bank1
  5402  0C0A  140C               	bsf	12,0	;volatile
  5403                           
  5404                           ;MCU_B1.c: 204: PEIE = 1;
  5405  0C0B  170B               	bsf	11,6	;volatile
  5406                           
  5407                           ;MCU_B1.c: 205: GIE = 1;
  5408  0C0C  178B               	bsf	11,7	;volatile
  5409  0C0D  0008               	return
  5410  0C0E                     __end_of_TMR1_Set:	
  5411                           
  5412                           	psect	text27
  5413  0CA9                     __ptext27:	
  5414 ;; *************** function _IO_Set *****************
  5415 ;; Defined at:
  5416 ;;		line 60 in file "../src/MCU_B1.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;		None
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;		None               void
  5423 ;; Registers used:
  5424 ;;		wreg, status,2
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5430 ;;      Params:         0       0       0       0
  5431 ;;      Locals:         0       0       0       0
  5432 ;;      Temps:          0       0       0       0
  5433 ;;      Totals:         0       0       0       0
  5434 ;;Total ram usage:        0 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_Mcu_Initialization
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           
  5445                           ;psect for function _IO_Set
  5446  0CA9                     _IO_Set:	
  5447                           
  5448                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5449                           
  5450                           ;incstack = 0
  5451                           ; Regs used in _IO_Set: [wreg+status,2]
  5452  0CA9  302F               	movlw	47
  5453  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  5454  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  5455  0CAC  0085               	movwf	5	;volatile
  5456                           
  5457                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5458  0CAD  3001               	movlw	1
  5459  0CAE  0086               	movwf	6	;volatile
  5460                           
  5461                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5462  0CAF  0187               	clrf	7	;volatile
  5463                           
  5464                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5465  0CB0  3007               	movlw	7
  5466  0CB1  1683               	bsf	3,5	;RP0=1, select bank3
  5467  0CB2  1703               	bsf	3,6	;RP1=1, select bank3
  5468  0CB3  0085               	movwf	5	;volatile
  5469                           
  5470                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5471  0CB4  3001               	movlw	1
  5472  0CB5  0086               	movwf	6	;volatile
  5473                           
  5474                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5475  0CB6  30AF               	movlw	175
  5476  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0CB9  0085               	movwf	5	;volatile
  5479                           
  5480                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5481  0CBA  3001               	movlw	1
  5482  0CBB  0086               	movwf	6	;volatile
  5483                           
  5484                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5485  0CBC  0187               	clrf	7	;volatile
  5486  0CBD  0008               	return
  5487  0CBE                     __end_of_IO_Set:	
  5488                           
  5489                           	psect	text28
  5490  0B74                     __ptext28:	
  5491 ;; *************** function _Fosc_Set *****************
  5492 ;; Defined at:
  5493 ;;		line 56 in file "../src/MCU_B1.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;		None               void
  5500 ;; Registers used:
  5501 ;;		wreg
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5507 ;;      Params:         0       0       0       0
  5508 ;;      Locals:         0       0       0       0
  5509 ;;      Temps:          0       0       0       0
  5510 ;;      Totals:         0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    2
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_Mcu_Initialization
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           
  5522                           ;psect for function _Fosc_Set
  5523  0B74                     _Fosc_Set:	
  5524                           
  5525                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in _Fosc_Set: [wreg]
  5529  0B74  303C               	movlw	60
  5530  0B75  1683               	bsf	3,5	;RP0=1, select bank1
  5531  0B76  1303               	bcf	3,6	;RP1=0, select bank1
  5532  0B77  0090               	movwf	16	;volatile
  5533  0B78  0008               	return
  5534  0B79                     __end_of_Fosc_Set:	
  5535                           
  5536                           	psect	text29
  5537  0B85                     __ptext29:	
  5538 ;; *************** function _ADC_Set *****************
  5539 ;; Defined at:
  5540 ;;		line 420 in file "../src/MCU_B1.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;		None               void
  5547 ;; Registers used:
  5548 ;;		wreg
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5554 ;;      Params:         0       0       0       0
  5555 ;;      Locals:         0       0       0       0
  5556 ;;      Temps:          0       0       0       0
  5557 ;;      Totals:         0       0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    2
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_Mcu_Initialization
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _ADC_Set
  5570  0B85                     _ADC_Set:	
  5571                           
  5572                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _ADC_Set: [wreg]
  5576  0B85  3073               	movlw	115
  5577  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  5578  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  5579  0B88  009F               	movwf	31	;volatile
  5580                           
  5581                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  5582  0B89  30C1               	movlw	193
  5583  0B8A  009D               	movwf	29	;volatile
  5584  0B8B  0008               	return
  5585  0B8C                     __end_of_ADC_Set:	
  5586                           
  5587                           	psect	text30
  5588  0203                     __ptext30:	
  5589 ;; *************** function _Load_Main *****************
  5590 ;; Defined at:
  5591 ;;		line 39 in file "../src/OverLoad_B1.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  i               1   13[BANK0 ] unsigned char 
  5596 ;;  error           1   12[BANK0 ] unsigned char 
  5597 ;;  adjgo           1   10[BANK0 ] unsigned char 
  5598 ;;  j               1    9[BANK0 ] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;		None               void
  5601 ;; Registers used:
  5602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5608 ;;      Params:         0       0       0       0
  5609 ;;      Locals:         0       5       0       0
  5610 ;;      Temps:          0       2       0       0
  5611 ;;      Totals:         0       7       0       0
  5612 ;;Total ram usage:        7 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    5
  5615 ;; This function calls:
  5616 ;;		___lwdiv
  5617 ;;		_getMain_All_Error_Status
  5618 ;;		_getMain_LightsStatus
  5619 ;;		_getMain_Lights_Count
  5620 ;;		_getMain_LoadOK
  5621 ;;		_setLoad_AH_AL_Restore
  5622 ;; This function is called by:
  5623 ;;		_main
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _Load_Main
  5629  0203                     _Load_Main:	
  5630                           
  5631                           ;OverLoad_B1.c: 40: char i = 0, j = 0, error = getMain_All_Error_Status(0), adjgo = 0;
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5635  0203  1283               	bcf	3,5	;RP0=0, select bank0
  5636  0204  1303               	bcf	3,6	;RP1=0, select bank0
  5637  0205  01E6               	clrf	Load_Main@i
  5638  0206  01E2               	clrf	Load_Main@j
  5639  0207  3000               	movlw	0
  5640  0208  158A  265E  118A   	fcall	_getMain_All_Error_Status
  5641  020B  1283               	bcf	3,5	;RP0=0, select bank0
  5642  020C  1303               	bcf	3,6	;RP1=0, select bank0
  5643  020D  00E0               	movwf	??_Load_Main
  5644  020E  0860               	movf	??_Load_Main,w
  5645  020F  00E5               	movwf	Load_Main@error
  5646  0210  01E3               	clrf	Load_Main@adjgo
  5647                           
  5648                           ;OverLoad_B1.c: 42: if (Load.Enable == 1) {
  5649  0211  1683               	bsf	3,5	;RP0=1, select bank1
  5650  0212  1303               	bcf	3,6	;RP1=0, select bank1
  5651  0213  1C4E               	btfss	_Load^(0+128),0
  5652  0214  2BA9               	goto	l691
  5653                           
  5654                           ;OverLoad_B1.c: 57: Load.GO = getMain_LightsStatus() == 1 && error == 0 && adjgo == 0 ? 
      +                          1 : 0;
  5655  0215  1283               	bcf	3,5	;RP0=0, select bank0
  5656  0216  1303               	bcf	3,6	;RP1=0, select bank0
  5657  0217  01E4               	clrf	_Load_Main$2496
  5658  0218  158A  25BE  118A   	fcall	_getMain_LightsStatus
  5659  021B  3A01               	xorlw	1
  5660  021C  1D03               	skipz
  5661  021D  2A28               	goto	l4879
  5662  021E  1283               	bcf	3,5	;RP0=0, select bank0
  5663  021F  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0220  08E5               	movf	Load_Main@error,f
  5665  0221  1D03               	skipz
  5666  0222  2A28               	goto	l4879
  5667  0223  08E3               	movf	Load_Main@adjgo,f
  5668  0224  1D03               	skipz
  5669  0225  2A28               	goto	l4879
  5670  0226  01E4               	clrf	_Load_Main$2496
  5671  0227  0AE4               	incf	_Load_Main$2496,f
  5672  0228                     l4879:	
  5673  0228  1283               	bcf	3,5	;RP0=0, select bank0
  5674  0229  1303               	bcf	3,6	;RP1=0, select bank0
  5675  022A  0864               	movf	_Load_Main$2496,w
  5676  022B  1683               	bsf	3,5	;RP0=1, select bank1
  5677  022C  1303               	bcf	3,6	;RP1=0, select bank1
  5678  022D  10CE               	bcf	_Load^(0+128),1
  5679  022E  1D03               	skipz
  5680  022F  14CE               	bsf	_Load^(0+128),1
  5681                           
  5682                           ;OverLoad_B1.c: 58: if (getMain_LoadOK() == 1 && Load.Run == 0) {
  5683  0230  158A  23D9  118A   	fcall	_getMain_LoadOK
  5684  0233  3A01               	xorlw	1
  5685  0234  1D03               	skipz
  5686  0235  2A3C               	goto	l694
  5687  0236  1683               	bsf	3,5	;RP0=1, select bank1
  5688  0237  1303               	bcf	3,6	;RP1=0, select bank1
  5689  0238  19CE               	btfsc	_Load^(0+128),3
  5690  0239  2A3C               	goto	l694
  5691                           
  5692                           ;OverLoad_B1.c: 59: Load.Run = 1;
  5693  023A  15CE               	bsf	_Load^(0+128),3
  5694                           
  5695                           ;OverLoad_B1.c: 60: Load.OK = 0;
  5696  023B  13CE               	bcf	_Load^(0+128),7
  5697  023C                     l694:	
  5698                           
  5699                           ;OverLoad_B1.c: 61: }
  5700                           ;OverLoad_B1.c: 64: if (Load.GO == 1) {
  5701  023C  1683               	bsf	3,5	;RP0=1, select bank1
  5702  023D  1303               	bcf	3,6	;RP1=0, select bank1
  5703  023E  1CCE               	btfss	_Load^(0+128),1
  5704  023F  2B74               	goto	l695
  5705                           
  5706                           ;OverLoad_B1.c: 65: Load.LightsON = 1;
  5707  0240  154E               	bsf	_Load^(0+128),2
  5708                           
  5709                           ;OverLoad_B1.c: 67: if (Load.ADtoGO == 1) {
  5710  0241  1E4E               	btfss	_Load^(0+128),4
  5711  0242  2B72               	goto	l696
  5712                           
  5713                           ;OverLoad_B1.c: 68: Load.Time++;
  5714  0243  3001               	movlw	1
  5715  0244  07CF               	addwf	(_Load^(0+128)+1),f
  5716  0245  1803               	skipnc
  5717  0246  0AD0               	incf	((_Load+1)^(0+128)+1),f
  5718  0247  3000               	movlw	0
  5719  0248  07D0               	addwf	((_Load+1)^(0+128)+1),f
  5720                           
  5721                           ;OverLoad_B1.c: 69: if (Load.Time >= 5) {
  5722  0249  3000               	movlw	0
  5723  024A  0250               	subwf	((_Load+1)^(0+128)+1),w
  5724  024B  3005               	movlw	5
  5725  024C  1903               	skipnz
  5726  024D  024F               	subwf	(_Load^(0+128)+1),w
  5727  024E  1C03               	skipc
  5728  024F  0008               	return
  5729                           
  5730                           ;OverLoad_B1.c: 70: Load.Time = 0;
  5731  0250  01CF               	clrf	(_Load^(0+128)+1)
  5732  0251  01D0               	clrf	((_Load+1)^(0+128)+1)
  5733                           
  5734                           ;OverLoad_B1.c: 71: Load.ADtoGO = 0;
  5735  0252  124E               	bcf	_Load^(0+128),4
  5736                           
  5737                           ;OverLoad_B1.c: 73: for (i = 1; i < 4; i++) {
  5738  0253  1283               	bcf	3,5	;RP0=0, select bank0
  5739  0254  1303               	bcf	3,6	;RP1=0, select bank0
  5740  0255  01E6               	clrf	Load_Main@i
  5741  0256  0AE6               	incf	Load_Main@i,f
  5742  0257  3004               	movlw	4
  5743  0258  0266               	subwf	Load_Main@i,w
  5744  0259  1803               	btfsc	3,0
  5745  025A  2A8C               	goto	l4907
  5746  025B                     l4901:	
  5747                           
  5748                           ;OverLoad_B1.c: 74: Load.ADH += Load.AH[i];
  5749  025B  0866               	movf	Load_Main@i,w
  5750  025C  3ED8               	addlw	(_Load+10)& (0+255)
  5751  025D  0084               	movwf	4
  5752  025E  1383               	bcf	3,7	;select IRP bank1
  5753  025F  0800               	movf	0,w
  5754  0260  00E0               	movwf	??_Load_Main
  5755  0261  01E1               	clrf	??_Load_Main+1
  5756  0262  0860               	movf	??_Load_Main,w
  5757  0263  1683               	bsf	3,5	;RP0=1, select bank1
  5758  0264  1303               	bcf	3,6	;RP1=0, select bank1
  5759  0265  07D3               	addwf	(_Load^(0+128)+5),f
  5760  0266  1803               	skipnc
  5761  0267  0AD4               	incf	((_Load+1)^(0+128)+5),f
  5762  0268  1283               	bcf	3,5	;RP0=0, select bank0
  5763  0269  1303               	bcf	3,6	;RP1=0, select bank0
  5764  026A  0861               	movf	??_Load_Main+1,w
  5765  026B  1683               	bsf	3,5	;RP0=1, select bank1
  5766  026C  1303               	bcf	3,6	;RP1=0, select bank1
  5767  026D  07D4               	addwf	((_Load+1)^(0+128)+5),f
  5768                           
  5769                           ;OverLoad_B1.c: 75: Load.ADL += Load.AL[i];
  5770  026E  1283               	bcf	3,5	;RP0=0, select bank0
  5771  026F  1303               	bcf	3,6	;RP1=0, select bank0
  5772  0270  0866               	movf	Load_Main@i,w
  5773  0271  3EDD               	addlw	(_Load+15)& (0+255)
  5774  0272  0084               	movwf	4
  5775  0273  0800               	movf	0,w
  5776  0274  00E0               	movwf	??_Load_Main
  5777  0275  01E1               	clrf	??_Load_Main+1
  5778  0276  0860               	movf	??_Load_Main,w
  5779  0277  1683               	bsf	3,5	;RP0=1, select bank1
  5780  0278  1303               	bcf	3,6	;RP1=0, select bank1
  5781  0279  07D5               	addwf	(_Load^(0+128)+7),f
  5782  027A  1803               	skipnc
  5783  027B  0AD6               	incf	((_Load+1)^(0+128)+7),f
  5784  027C  1283               	bcf	3,5	;RP0=0, select bank0
  5785  027D  1303               	bcf	3,6	;RP1=0, select bank0
  5786  027E  0861               	movf	??_Load_Main+1,w
  5787  027F  1683               	bsf	3,5	;RP0=1, select bank1
  5788  0280  1303               	bcf	3,6	;RP1=0, select bank1
  5789  0281  07D6               	addwf	((_Load+1)^(0+128)+7),f
  5790  0282  3001               	movlw	1
  5791  0283  1283               	bcf	3,5	;RP0=0, select bank0
  5792  0284  1303               	bcf	3,6	;RP1=0, select bank0
  5793  0285  00E0               	movwf	??_Load_Main
  5794  0286  0860               	movf	??_Load_Main,w
  5795  0287  07E6               	addwf	Load_Main@i,f
  5796  0288  3004               	movlw	4
  5797  0289  0266               	subwf	Load_Main@i,w
  5798  028A  1C03               	skipc
  5799  028B  2A5B               	goto	l4901
  5800  028C                     l4907:	
  5801                           
  5802                           ;OverLoad_B1.c: 76: }
  5803                           ;OverLoad_B1.c: 77: Load.ADH /= 3;
  5804  028C  3003               	movlw	3
  5805  028D  00D9               	movwf	___lwdiv@divisor
  5806  028E  3000               	movlw	0
  5807  028F  00DA               	movwf	___lwdiv@divisor+1
  5808  0290  1683               	bsf	3,5	;RP0=1, select bank1
  5809  0291  1303               	bcf	3,6	;RP1=0, select bank1
  5810  0292  0854               	movf	((_Load+1)^(0+128)+5),w
  5811  0293  1283               	bcf	3,5	;RP0=0, select bank0
  5812  0294  1303               	bcf	3,6	;RP1=0, select bank0
  5813  0295  01DC               	clrf	___lwdiv@dividend+1
  5814  0296  07DC               	addwf	___lwdiv@dividend+1,f
  5815  0297  1683               	bsf	3,5	;RP0=1, select bank1
  5816  0298  1303               	bcf	3,6	;RP1=0, select bank1
  5817  0299  0853               	movf	(_Load^(0+128)+5),w
  5818  029A  1283               	bcf	3,5	;RP0=0, select bank0
  5819  029B  1303               	bcf	3,6	;RP1=0, select bank0
  5820  029C  01DB               	clrf	___lwdiv@dividend
  5821  029D  07DB               	addwf	___lwdiv@dividend,f
  5822  029E  158A  269C  118A   	fcall	___lwdiv
  5823  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  5824  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  5825  02A3  085A               	movf	?___lwdiv+1,w
  5826  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  5827  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  5828  02A6  01D4               	clrf	((_Load+1)^(0+128)+5)
  5829  02A7  07D4               	addwf	((_Load+1)^(0+128)+5),f
  5830  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  5831  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  5832  02AA  0859               	movf	?___lwdiv,w
  5833  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  5834  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  5835  02AD  01D3               	clrf	(_Load^(0+128)+5)
  5836  02AE  07D3               	addwf	(_Load^(0+128)+5),f
  5837                           
  5838                           ;OverLoad_B1.c: 78: Load.ADL /= 3;
  5839  02AF  3003               	movlw	3
  5840  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  5841  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  5842  02B2  00D9               	movwf	___lwdiv@divisor
  5843  02B3  3000               	movlw	0
  5844  02B4  00DA               	movwf	___lwdiv@divisor+1
  5845  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  5846  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  5847  02B7  0856               	movf	((_Load+1)^(0+128)+7),w
  5848  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  5849  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  5850  02BA  01DC               	clrf	___lwdiv@dividend+1
  5851  02BB  07DC               	addwf	___lwdiv@dividend+1,f
  5852  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  5853  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  5854  02BE  0855               	movf	(_Load^(0+128)+7),w
  5855  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  5856  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  5857  02C1  01DB               	clrf	___lwdiv@dividend
  5858  02C2  07DB               	addwf	___lwdiv@dividend,f
  5859  02C3  158A  269C  118A   	fcall	___lwdiv
  5860  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  5861  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  5862  02C8  085A               	movf	?___lwdiv+1,w
  5863  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  5864  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  5865  02CB  01D6               	clrf	((_Load+1)^(0+128)+7)
  5866  02CC  07D6               	addwf	((_Load+1)^(0+128)+7),f
  5867  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  5868  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  5869  02CF  0859               	movf	?___lwdiv,w
  5870  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  5871  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  5872  02D2  01D5               	clrf	(_Load^(0+128)+7)
  5873  02D3  07D5               	addwf	(_Load^(0+128)+7),f
  5874                           
  5875                           ;OverLoad_B1.c: 79: setLoad_AH_AL_Restore();
  5876  02D4  118A  27E8  118A   	fcall	_setLoad_AH_AL_Restore
  5877                           
  5878                           ;OverLoad_B1.c: 81: if (Load.ADH > Load.ADL) {
  5879  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  5880  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  5881  02D9  0854               	movf	((_Load+1)^(0+128)+5),w
  5882  02DA  0256               	subwf	((_Load+1)^(0+128)+7),w
  5883  02DB  1D03               	skipz
  5884  02DC  2ADF               	goto	u6245
  5885  02DD  0853               	movf	(_Load^(0+128)+5),w
  5886  02DE  0255               	subwf	(_Load^(0+128)+7),w
  5887  02DF                     u6245:	
  5888  02DF  1803               	skipnc
  5889  02E0  0008               	return
  5890                           
  5891                           ;OverLoad_B1.c: 82: Load.AD = Load.ADH - Load.ADL;
  5892  02E1  0355               	decf	(_Load^(0+128)+7),w
  5893  02E2  3AFF               	xorlw	255
  5894  02E3  0753               	addwf	(_Load^(0+128)+5),w
  5895  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  5896  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  5897  02E6  00E0               	movwf	??_Load_Main
  5898  02E7  0860               	movf	??_Load_Main,w
  5899  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  5900  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  5901  02EA  00E2               	movwf	(_Load^(0+128)+20)
  5902                           
  5903                           ;OverLoad_B1.c: 83: Load.ADH = 0;
  5904  02EB  01D3               	clrf	(_Load^(0+128)+5)
  5905  02EC  01D4               	clrf	((_Load+1)^(0+128)+5)
  5906                           
  5907                           ;OverLoad_B1.c: 84: Load.ADL = 0;
  5908  02ED  01D5               	clrf	(_Load^(0+128)+7)
  5909  02EE  01D6               	clrf	((_Load+1)^(0+128)+7)
  5910                           
  5911                           ;OverLoad_B1.c: 85: Load.LightsCount = getMain_Lights_Count();
  5912  02EF  158A  244C  118A   	fcall	_getMain_Lights_Count
  5913  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  5914  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  5915  02F4  00E0               	movwf	??_Load_Main
  5916  02F5  0860               	movf	??_Load_Main,w
  5917  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  5918  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  5919  02F8  00ED               	movwf	(_Load^(0+128)+31)
  5920                           
  5921                           ;OverLoad_B1.c: 87: if (Load.Run == 1) {
  5922  02F9  1DCE               	btfss	_Load^(0+128),3
  5923  02FA  2B28               	goto	l701
  5924                           
  5925                           ;OverLoad_B1.c: 88: if (Load.Count < 2) {
  5926  02FB  3002               	movlw	2
  5927  02FC  026A               	subwf	(_Load^(0+128)+28),w
  5928  02FD  1803               	skipnc
  5929  02FE  2B28               	goto	l701
  5930                           
  5931                           ;OverLoad_B1.c: 89: Load.Count++;
  5932  02FF  3001               	movlw	1
  5933  0300  1283               	bcf	3,5	;RP0=0, select bank0
  5934  0301  1303               	bcf	3,6	;RP1=0, select bank0
  5935  0302  00E0               	movwf	??_Load_Main
  5936  0303  0860               	movf	??_Load_Main,w
  5937  0304  1683               	bsf	3,5	;RP0=1, select bank1
  5938  0305  1303               	bcf	3,6	;RP1=0, select bank1
  5939  0306  07EA               	addwf	(_Load^(0+128)+28),f
  5940                           
  5941                           ;OverLoad_B1.c: 90: if (Load.Count == 1) {
  5942  0307  086A               	movf	(_Load^(0+128)+28),w
  5943  0308  3A01               	xorlw	1
  5944  0309  1D03               	skipz
  5945  030A  2B15               	goto	l4931
  5946                           
  5947                           ;OverLoad_B1.c: 91: Load.ErrorCountValue = 2;
  5948  030B  3002               	movlw	2
  5949  030C  1283               	bcf	3,5	;RP0=0, select bank0
  5950  030D  1303               	bcf	3,6	;RP1=0, select bank0
  5951  030E  00E0               	movwf	??_Load_Main
  5952  030F  0860               	movf	??_Load_Main,w
  5953  0310  1683               	bsf	3,5	;RP0=1, select bank1
  5954  0311  1303               	bcf	3,6	;RP1=0, select bank1
  5955  0312  00EC               	movwf	(_Load^(0+128)+30)
  5956                           
  5957                           ;OverLoad_B1.c: 92: Load.JudgeValue = (20*2);
  5958  0313  3028               	movlw	40
  5959  0314  2B1E               	goto	L16
  5960  0315                     l4931:	
  5961                           ;OverLoad_B1.c: 93: } else if (Load.Count == 2) {
  5962                           
  5963  0315  086A               	movf	(_Load^(0+128)+28),w
  5964  0316  3A02               	xorlw	2
  5965  0317  1D03               	skipz
  5966  0318  2B28               	goto	l701
  5967                           
  5968                           ;OverLoad_B1.c: 94: if (Load.LightsCount == 1) {
  5969  0319  086D               	movf	(_Load^(0+128)+31),w
  5970  031A  3A01               	xorlw	1
  5971  031B  1D03               	skipz
  5972  031C  2B21               	goto	l4937
  5973                           
  5974                           ;OverLoad_B1.c: 95: Load.JudgeValue = (int)(6*2);
  5975  031D  300C               	movlw	12
  5976  031E                     L16:	
  5977  031E  00E6               	movwf	(_Load^(0+128)+24)
  5978  031F  3000               	movlw	0
  5979  0320  2B27               	goto	L17
  5980  0321                     l4937:	
  5981                           ;OverLoad_B1.c: 96: } else {
  5982                           
  5983                           
  5984                           ;OverLoad_B1.c: 97: Load.JudgeValue = (int)(6*2) + Load.TotalLoad;
  5985  0321  0857               	movf	(_Load^(0+128)+9),w
  5986  0322  3E0C               	addlw	12
  5987  0323  00E6               	movwf	(_Load^(0+128)+24)
  5988  0324  3000               	movlw	0
  5989  0325  1803               	skipnc
  5990  0326  3001               	movlw	1
  5991  0327                     L17:	
  5992  0327  00E7               	movwf	(_Load^(0+128)+25)
  5993  0328                     l701:	
  5994                           
  5995                           ;OverLoad_B1.c: 98: }
  5996                           ;OverLoad_B1.c: 99: }
  5997                           ;OverLoad_B1.c: 100: }
  5998                           ;OverLoad_B1.c: 101: }
  5999                           ;OverLoad_B1.c: 103: if (Load.AD >= Load.JudgeValue) {
  6000  0328  0862               	movf	(_Load^(0+128)+20),w
  6001  0329  1283               	bcf	3,5	;RP0=0, select bank0
  6002  032A  1303               	bcf	3,6	;RP1=0, select bank0
  6003  032B  00E0               	movwf	??_Load_Main
  6004  032C  01E1               	clrf	??_Load_Main+1
  6005  032D  1683               	bsf	3,5	;RP0=1, select bank1
  6006  032E  1303               	bcf	3,6	;RP1=0, select bank1
  6007  032F  0867               	movf	((_Load+1)^(0+128)+24),w
  6008  0330  1283               	bcf	3,5	;RP0=0, select bank0
  6009  0331  1303               	bcf	3,6	;RP1=0, select bank0
  6010  0332  0261               	subwf	??_Load_Main+1,w
  6011  0333  1D03               	skipz
  6012  0334  2B3B               	goto	u6305
  6013  0335  1683               	bsf	3,5	;RP0=1, select bank1
  6014  0336  1303               	bcf	3,6	;RP1=0, select bank1
  6015  0337  0866               	movf	(_Load^(0+128)+24),w
  6016  0338  1283               	bcf	3,5	;RP0=0, select bank0
  6017  0339  1303               	bcf	3,6	;RP1=0, select bank0
  6018  033A  0260               	subwf	??_Load_Main,w
  6019  033B                     u6305:	
  6020  033B  1C03               	skipc
  6021  033C  2B4A               	goto	l4947
  6022                           
  6023                           ;OverLoad_B1.c: 104: Load.ErrorCount++;
  6024  033D  3001               	movlw	1
  6025  033E  00E0               	movwf	??_Load_Main
  6026  033F  0860               	movf	??_Load_Main,w
  6027  0340  1683               	bsf	3,5	;RP0=1, select bank1
  6028  0341  1303               	bcf	3,6	;RP1=0, select bank1
  6029  0342  07EB               	addwf	(_Load^(0+128)+29),f
  6030                           
  6031                           ;OverLoad_B1.c: 105: if (Load.ErrorCount > Load.ErrorCountValue) {
  6032  0343  086B               	movf	(_Load^(0+128)+29),w
  6033  0344  026C               	subwf	(_Load^(0+128)+30),w
  6034  0345  1803               	skipnc
  6035  0346  0008               	return
  6036                           
  6037                           ;OverLoad_B1.c: 106: Load.ErrorCount = 0;
  6038  0347  01EB               	clrf	(_Load^(0+128)+29)
  6039                           
  6040                           ;OverLoad_B1.c: 107: Load.ERROR = 1;
  6041  0348  16CE               	bsf	_Load^(0+128),5
  6042                           
  6043                           ;OverLoad_B1.c: 128: }
  6044                           ;OverLoad_B1.c: 129: } else {
  6045  0349  0008               	return
  6046  034A                     l4947:	
  6047                           
  6048                           ;OverLoad_B1.c: 130: Load.ErrorCount = 0;
  6049  034A  1683               	bsf	3,5	;RP0=1, select bank1
  6050  034B  1303               	bcf	3,6	;RP1=0, select bank1
  6051  034C  01EB               	clrf	(_Load^(0+128)+29)
  6052                           
  6053                           ;OverLoad_B1.c: 131: if (Load.Run == 1) {
  6054  034D  1DCE               	btfss	_Load^(0+128),3
  6055  034E  0008               	return
  6056                           
  6057                           ;OverLoad_B1.c: 132: if (Load.OK == 0) {
  6058  034F  1BCE               	btfsc	_Load^(0+128),7
  6059  0350  0008               	return
  6060                           
  6061                           ;OverLoad_B1.c: 133: Load.SafeCount++;
  6062  0351  3001               	movlw	1
  6063  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6065  0354  00E0               	movwf	??_Load_Main
  6066  0355  0860               	movf	??_Load_Main,w
  6067  0356  1683               	bsf	3,5	;RP0=1, select bank1
  6068  0357  1303               	bcf	3,6	;RP1=0, select bank1
  6069  0358  07EE               	addwf	(_Load^(0+128)+32),f
  6070                           
  6071                           ;OverLoad_B1.c: 134: if (Load.SafeCount >= 3) {
  6072  0359  3003               	movlw	3
  6073  035A  026E               	subwf	(_Load^(0+128)+32),w
  6074  035B  1C03               	skipc
  6075  035C  0008               	return
  6076                           
  6077                           ;OverLoad_B1.c: 135: Load.SafeCount = 0;
  6078  035D  01EE               	clrf	(_Load^(0+128)+32)
  6079                           
  6080                           ;OverLoad_B1.c: 136: Load.OK = 1;
  6081  035E  17CE               	bsf	_Load^(0+128),7
  6082                           
  6083                           ;OverLoad_B1.c: 137: Load.Run = 0;
  6084  035F  11CE               	bcf	_Load^(0+128),3
  6085                           
  6086                           ;OverLoad_B1.c: 138: Load.Count = 0;
  6087  0360  01EA               	clrf	(_Load^(0+128)+28)
  6088                           
  6089                           ;OverLoad_B1.c: 139: Load.TotalLoad = Load.AD;
  6090  0361  0862               	movf	(_Load^(0+128)+20),w
  6091  0362  1283               	bcf	3,5	;RP0=0, select bank0
  6092  0363  1303               	bcf	3,6	;RP1=0, select bank0
  6093  0364  00E0               	movwf	??_Load_Main
  6094  0365  0860               	movf	??_Load_Main,w
  6095  0366  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0367  1303               	bcf	3,6	;RP1=0, select bank1
  6097  0368  00D7               	movwf	(_Load^(0+128)+9)
  6098                           
  6099                           ;OverLoad_B1.c: 140: Load.ErrorCountValue = 3;
  6100  0369  3003               	movlw	3
  6101  036A  1283               	bcf	3,5	;RP0=0, select bank0
  6102  036B  1303               	bcf	3,6	;RP1=0, select bank0
  6103  036C  00E0               	movwf	??_Load_Main
  6104  036D  0860               	movf	??_Load_Main,w
  6105  036E  1683               	bsf	3,5	;RP0=1, select bank1
  6106  036F  1303               	bcf	3,6	;RP1=0, select bank1
  6107  0370  00EC               	movwf	(_Load^(0+128)+30)
  6108                           
  6109                           ;OverLoad_B1.c: 164: }
  6110                           ;OverLoad_B1.c: 165: }
  6111                           ;OverLoad_B1.c: 166: }
  6112                           ;OverLoad_B1.c: 167: }
  6113                           ;OverLoad_B1.c: 168: }
  6114                           ;OverLoad_B1.c: 169: }
  6115                           ;OverLoad_B1.c: 170: } else {
  6116  0371  0008               	return
  6117  0372                     l696:	
  6118                           
  6119                           ;OverLoad_B1.c: 171: Load.ADtoGO = 1;
  6120  0372  164E               	bsf	_Load^(0+128),4
  6121                           
  6122                           ;OverLoad_B1.c: 172: }
  6123                           ;OverLoad_B1.c: 173: } else {
  6124  0373  0008               	return
  6125  0374                     l695:	
  6126                           
  6127                           ;OverLoad_B1.c: 174: if (Load.LightsON == 1 && error != 3) {
  6128  0374  1D4E               	btfss	_Load^(0+128),2
  6129  0375  2B94               	goto	l4997
  6130  0376  1283               	bcf	3,5	;RP0=0, select bank0
  6131  0377  1303               	bcf	3,6	;RP1=0, select bank0
  6132  0378  0865               	movf	Load_Main@error,w
  6133  0379  3A03               	xorlw	3
  6134  037A  1903               	skipnz
  6135  037B  2B94               	goto	l4997
  6136                           
  6137                           ;OverLoad_B1.c: 175: Load.LightsON = 0;
  6138  037C  1683               	bsf	3,5	;RP0=1, select bank1
  6139  037D  1303               	bcf	3,6	;RP1=0, select bank1
  6140  037E  114E               	bcf	_Load^(0+128),2
  6141                           
  6142                           ;OverLoad_B1.c: 177: Load.Time = 0;
  6143  037F  01CF               	clrf	(_Load^(0+128)+1)
  6144  0380  01D0               	clrf	((_Load+1)^(0+128)+1)
  6145                           
  6146                           ;OverLoad_B1.c: 178: Load.ADtoGO = 0;
  6147  0381  124E               	bcf	_Load^(0+128),4
  6148                           
  6149                           ;OverLoad_B1.c: 179: setLoad_AH_AL_Restore();
  6150  0382  118A  27E8  118A   	fcall	_setLoad_AH_AL_Restore
  6151                           
  6152                           ;OverLoad_B1.c: 180: Load.Count = 0;
  6153  0385  1683               	bsf	3,5	;RP0=1, select bank1
  6154  0386  1303               	bcf	3,6	;RP1=0, select bank1
  6155  0387  01EA               	clrf	(_Load^(0+128)+28)
  6156                           
  6157                           ;OverLoad_B1.c: 181: Load.ErrorCount = 0;
  6158  0388  01EB               	clrf	(_Load^(0+128)+29)
  6159                           
  6160                           ;OverLoad_B1.c: 182: Load.SafeCount = 0;
  6161  0389  01EE               	clrf	(_Load^(0+128)+32)
  6162                           
  6163                           ;OverLoad_B1.c: 184: Load.ADH = 0;
  6164  038A  01D3               	clrf	(_Load^(0+128)+5)
  6165  038B  01D4               	clrf	((_Load+1)^(0+128)+5)
  6166                           
  6167                           ;OverLoad_B1.c: 185: Load.ADL = 0;
  6168  038C  01D5               	clrf	(_Load^(0+128)+7)
  6169  038D  01D6               	clrf	((_Load+1)^(0+128)+7)
  6170                           
  6171                           ;OverLoad_B1.c: 186: Load.AD = 0;
  6172  038E  01E2               	clrf	(_Load^(0+128)+20)
  6173                           
  6174                           ;OverLoad_B1.c: 187: Load.JudgeValue = 0;
  6175  038F  01E6               	clrf	(_Load^(0+128)+24)
  6176  0390  01E7               	clrf	((_Load+1)^(0+128)+24)
  6177                           
  6178                           ;OverLoad_B1.c: 188: Load.LightsCount = 0;
  6179  0391  01ED               	clrf	(_Load^(0+128)+31)
  6180                           
  6181                           ;OverLoad_B1.c: 189: Load.Run = 0;
  6182  0392  11CE               	bcf	_Load^(0+128),3
  6183                           
  6184                           ;OverLoad_B1.c: 190: Load.OK = 1;
  6185  0393  17CE               	bsf	_Load^(0+128),7
  6186  0394                     l4997:	
  6187                           
  6188                           ;OverLoad_B1.c: 211: }
  6189                           ;OverLoad_B1.c: 212: if (Load.ERROR == 1) {
  6190  0394  1683               	bsf	3,5	;RP0=1, select bank1
  6191  0395  1303               	bcf	3,6	;RP1=0, select bank1
  6192  0396  1ECE               	btfss	_Load^(0+128),5
  6193  0397  0008               	return
  6194                           
  6195                           ;OverLoad_B1.c: 213: Load.ErrorTime++;
  6196  0398  3001               	movlw	1
  6197  0399  07D1               	addwf	(_Load^(0+128)+3),f
  6198  039A  1803               	skipnc
  6199  039B  0AD2               	incf	((_Load+1)^(0+128)+3),f
  6200  039C  3000               	movlw	0
  6201  039D  07D2               	addwf	((_Load+1)^(0+128)+3),f
  6202                           
  6203                           ;OverLoad_B1.c: 214: if (Load.ErrorTime >= 1000) {
  6204  039E  3003               	movlw	3
  6205  039F  0252               	subwf	((_Load+1)^(0+128)+3),w
  6206  03A0  30E8               	movlw	232
  6207  03A1  1903               	skipnz
  6208  03A2  0251               	subwf	(_Load^(0+128)+3),w
  6209  03A3  1C03               	skipc
  6210  03A4  0008               	return
  6211                           
  6212                           ;OverLoad_B1.c: 215: Load.ErrorTime = 0;
  6213  03A5  01D1               	clrf	(_Load^(0+128)+3)
  6214  03A6  01D2               	clrf	((_Load+1)^(0+128)+3)
  6215                           
  6216                           ;OverLoad_B1.c: 216: Load.ERROR = 0;
  6217  03A7  12CE               	bcf	_Load^(0+128),5
  6218                           
  6219                           ;OverLoad_B1.c: 217: }
  6220                           ;OverLoad_B1.c: 218: }
  6221                           ;OverLoad_B1.c: 219: }
  6222                           ;OverLoad_B1.c: 220: } else {
  6223  03A8  0008               	return
  6224  03A9                     l691:	
  6225                           
  6226                           ;OverLoad_B1.c: 221: if (myMain.PowerON == 1) {
  6227  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  6228  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  6229  03AB  1C20               	btfss	_myMain,0
  6230  03AC  0008               	return
  6231                           
  6232                           ;OverLoad_B1.c: 223: Load.Enable = 1;
  6233  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  6234  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  6235  03AF  144E               	bsf	_Load^(0+128),0
  6236  03B0  0008               	return
  6237  03B1                     __end_of_Load_Main:	
  6238                           
  6239                           	psect	text31
  6240  0BD9                     __ptext31:	
  6241 ;; *************** function _getMain_LoadOK *****************
  6242 ;; Defined at:
  6243 ;;		line 475 in file "../src/Main_B1.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  ok              1    6[COMMON] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      unsigned char 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, pclath, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6257 ;;      Params:         0       0       0       0
  6258 ;;      Locals:         1       0       0       0
  6259 ;;      Temps:          1       0       0       0
  6260 ;;      Totals:         2       0       0       0
  6261 ;;Total ram usage:        2 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    3
  6264 ;; This function calls:
  6265 ;;		_getLightsControl_OK
  6266 ;; This function is called by:
  6267 ;;		_Load_Main
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _getMain_LoadOK
  6273  0BD9                     _getMain_LoadOK:	
  6274                           
  6275                           ;Main_B1.c: 476: char ok = 0;
  6276                           
  6277                           ;incstack = 0
  6278                           ; Regs used in _getMain_LoadOK: [wreg+status,2+pclath+cstack]
  6279  0BD9  01F6               	clrf	getMain_LoadOK@ok
  6280                           
  6281                           ;Main_B1.c: 479: ok = getLightsControl_OK() == 1 ? 1 : 0;
  6282  0BDA  158A  2394         	fcall	_getLightsControl_OK
  6283  0BDC  3A01               	xorlw	1
  6284  0BDD  3000               	movlw	0
  6285  0BDE  1903               	skipnz
  6286  0BDF  3001               	movlw	1
  6287  0BE0  00F5               	movwf	??_getMain_LoadOK
  6288  0BE1  0875               	movf	??_getMain_LoadOK,w
  6289  0BE2  00F6               	movwf	getMain_LoadOK@ok
  6290                           
  6291                           ;Main_B1.c: 484: return ok;
  6292  0BE3  0876               	movf	getMain_LoadOK@ok,w
  6293  0BE4  0008               	return
  6294  0BE5                     __end_of_getMain_LoadOK:	
  6295                           
  6296                           	psect	text32
  6297  0B94                     __ptext32:	
  6298 ;; *************** function _getLightsControl_OK *****************
  6299 ;; Defined at:
  6300 ;;		line 260 in file "../src/TriacRelay_B1.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;		None
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;  loadok          1    4[COMMON] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      unsigned char 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6314 ;;      Params:         0       0       0       0
  6315 ;;      Locals:         1       0       0       0
  6316 ;;      Temps:          0       0       0       0
  6317 ;;      Totals:         1       0       0       0
  6318 ;;Total ram usage:        1 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    2
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_getMain_LoadOK
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           
  6329                           ;psect for function _getLightsControl_OK
  6330  0B94                     _getLightsControl_OK:	
  6331                           
  6332                           ;TriacRelay_B1.c: 261: char loadok = LightsControl.LoadOK == 1 ? 1 : 0;
  6333                           
  6334                           ;incstack = 0
  6335                           ; Regs used in _getLightsControl_OK: [wreg+status,2]
  6336  0B94  3000               	movlw	0
  6337  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  6338  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  6339  0B97  1939               	btfsc	_LightsControl,2
  6340  0B98  3001               	movlw	1
  6341  0B99  00F4               	movwf	getLightsControl_OK@loadok
  6342                           
  6343                           ;TriacRelay_B1.c: 262: return loadok;
  6344  0B9A  0874               	movf	getLightsControl_OK@loadok,w
  6345  0B9B  0008               	return
  6346  0B9C                     __end_of_getLightsControl_OK:	
  6347                           
  6348                           	psect	text33
  6349  0C4C                     __ptext33:	
  6350 ;; *************** function _getMain_Lights_Count *****************
  6351 ;; Defined at:
  6352 ;;		line 445 in file "../src/Main_B1.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  status1         1    3[BANK0 ] unsigned char 
  6357 ;;  status3         1    2[BANK0 ] unsigned char 
  6358 ;;  status2         1    1[BANK0 ] unsigned char 
  6359 ;;  count           1    0[BANK0 ] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      unsigned char 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6369 ;;      Params:         0       0       0       0
  6370 ;;      Locals:         0       4       0       0
  6371 ;;      Temps:          1       0       0       0
  6372 ;;      Totals:         1       4       0       0
  6373 ;;Total ram usage:        5 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    2
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_Load_Main
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _getMain_Lights_Count
  6385  0C4C                     _getMain_Lights_Count:	
  6386                           
  6387                           ;Main_B1.c: 446: char status1 = 0, status2 = 0, status3 = 0, count = 0;
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _getMain_Lights_Count: [wreg+status,2+status,0]
  6391  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  6392  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  6393  0C4E  01DC               	clrf	getMain_Lights_Count@status1
  6394  0C4F  01DA               	clrf	getMain_Lights_Count@status2
  6395  0C50  01DB               	clrf	getMain_Lights_Count@status3
  6396  0C51  01D9               	clrf	getMain_Lights_Count@count
  6397                           
  6398                           ;Main_B1.c: 462: status1 = Lights1.Loop == 1 ? 1 : 0;
  6399  0C52  3000               	movlw	0
  6400  0C53  18C7               	btfsc	_Lights1+1,1
  6401  0C54  3001               	movlw	1
  6402  0C55  00DC               	movwf	getMain_Lights_Count@status1
  6403                           
  6404                           ;Main_B1.c: 471: return count = (status1 + status2 + status3);
  6405  0C56  085A               	movf	getMain_Lights_Count@status2,w
  6406  0C57  075C               	addwf	getMain_Lights_Count@status1,w
  6407  0C58  00F4               	movwf	??_getMain_Lights_Count
  6408  0C59  085B               	movf	getMain_Lights_Count@status3,w
  6409  0C5A  0774               	addwf	??_getMain_Lights_Count,w
  6410  0C5B  00D9               	movwf	getMain_Lights_Count@count
  6411  0C5C  0008               	return
  6412  0C5D                     __end_of_getMain_Lights_Count:	
  6413                           
  6414                           	psect	text34
  6415  0E9C                     __ptext34:	
  6416 ;; *************** function ___lwdiv *****************
  6417 ;; Defined at:
  6418 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  divisor         2    0[BANK0 ] unsigned int 
  6421 ;;  dividend        2    2[BANK0 ] unsigned int 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  quotient        2    5[BANK0 ] unsigned int 
  6424 ;;  counter         1    4[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2    0[BANK0 ] unsigned int 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6434 ;;      Params:         0       4       0       0
  6435 ;;      Locals:         0       3       0       0
  6436 ;;      Temps:          1       0       0       0
  6437 ;;      Totals:         1       7       0       0
  6438 ;;Total ram usage:        8 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    2
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_Load_Main
  6445 ;;		_getPIR_AD
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function ___lwdiv
  6451  0E9C                     ___lwdiv:	
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6455  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  6456  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  6457  0E9E  01DE               	clrf	___lwdiv@quotient
  6458  0E9F  01DF               	clrf	___lwdiv@quotient+1
  6459  0EA0  085A               	movf	___lwdiv@divisor+1,w
  6460  0EA1  0459               	iorwf	___lwdiv@divisor,w
  6461  0EA2  1903               	skipnz
  6462  0EA3  2ED5               	goto	l4695
  6463  0EA4  01DD               	clrf	___lwdiv@counter
  6464  0EA5  0ADD               	incf	___lwdiv@counter,f
  6465  0EA6                     l4683:	
  6466  0EA6  1BDA               	btfsc	___lwdiv@divisor+1,7
  6467  0EA7  2EB4               	goto	l4685
  6468  0EA8  3001               	movlw	1
  6469  0EA9                     u5795:	
  6470  0EA9  1003               	clrc
  6471  0EAA  0DD9               	rlf	___lwdiv@divisor,f
  6472  0EAB  0DDA               	rlf	___lwdiv@divisor+1,f
  6473  0EAC  3EFF               	addlw	-1
  6474  0EAD  1D03               	skipz
  6475  0EAE  2EA9               	goto	u5795
  6476  0EAF  3001               	movlw	1
  6477  0EB0  00F4               	movwf	??___lwdiv
  6478  0EB1  0874               	movf	??___lwdiv,w
  6479  0EB2  07DD               	addwf	___lwdiv@counter,f
  6480  0EB3  2EA6               	goto	l4683
  6481  0EB4                     l4685:	
  6482  0EB4  3001               	movlw	1
  6483  0EB5                     u5815:	
  6484  0EB5  1003               	clrc
  6485  0EB6  0DDE               	rlf	___lwdiv@quotient,f
  6486  0EB7  0DDF               	rlf	___lwdiv@quotient+1,f
  6487  0EB8  3EFF               	addlw	-1
  6488  0EB9  1D03               	skipz
  6489  0EBA  2EB5               	goto	u5815
  6490  0EBB  085A               	movf	___lwdiv@divisor+1,w
  6491  0EBC  025C               	subwf	___lwdiv@dividend+1,w
  6492  0EBD  1D03               	skipz
  6493  0EBE  2EC1               	goto	u5825
  6494  0EBF  0859               	movf	___lwdiv@divisor,w
  6495  0EC0  025B               	subwf	___lwdiv@dividend,w
  6496  0EC1                     u5825:	
  6497  0EC1  1C03               	skipc
  6498  0EC2  2ECA               	goto	l4691
  6499  0EC3  0859               	movf	___lwdiv@divisor,w
  6500  0EC4  02DB               	subwf	___lwdiv@dividend,f
  6501  0EC5  085A               	movf	___lwdiv@divisor+1,w
  6502  0EC6  1C03               	skipc
  6503  0EC7  03DC               	decf	___lwdiv@dividend+1,f
  6504  0EC8  02DC               	subwf	___lwdiv@dividend+1,f
  6505  0EC9  145E               	bsf	___lwdiv@quotient,0
  6506  0ECA                     l4691:	
  6507  0ECA  3001               	movlw	1
  6508  0ECB                     u5835:	
  6509  0ECB  1003               	clrc
  6510  0ECC  0CDA               	rrf	___lwdiv@divisor+1,f
  6511  0ECD  0CD9               	rrf	___lwdiv@divisor,f
  6512  0ECE  3EFF               	addlw	-1
  6513  0ECF  1D03               	skipz
  6514  0ED0  2ECB               	goto	u5835
  6515  0ED1  3001               	movlw	1
  6516  0ED2  02DD               	subwf	___lwdiv@counter,f
  6517  0ED3  1D03               	btfss	3,2
  6518  0ED4  2EB4               	goto	l4685
  6519  0ED5                     l4695:	
  6520  0ED5  085F               	movf	___lwdiv@quotient+1,w
  6521  0ED6  01DA               	clrf	?___lwdiv+1
  6522  0ED7  07DA               	addwf	?___lwdiv+1,f
  6523  0ED8  085E               	movf	___lwdiv@quotient,w
  6524  0ED9  01D9               	clrf	?___lwdiv
  6525  0EDA  07D9               	addwf	?___lwdiv,f
  6526  0EDB  0008               	return
  6527  0EDC                     __end_of___lwdiv:	
  6528                           
  6529                           	psect	text35
  6530  0B79                     __ptext35:	
  6531 ;; *************** function _Load_Initialization *****************
  6532 ;; Defined at:
  6533 ;;		line 9 in file "../src/OverLoad_B1.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;		None
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;		None
  6538 ;; Return value:  Size  Location     Type
  6539 ;;		None               void
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6547 ;;      Params:         0       0       0       0
  6548 ;;      Locals:         0       0       0       0
  6549 ;;      Temps:          0       0       0       0
  6550 ;;      Totals:         0       0       0       0
  6551 ;;Total ram usage:        0 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    3
  6554 ;; This function calls:
  6555 ;;		_setLoad_AH_AL_Restore
  6556 ;; This function is called by:
  6557 ;;		_main
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function _Load_Initialization
  6563  0B79                     _Load_Initialization:	
  6564                           
  6565                           ;OverLoad_B1.c: 10: Load.OK = 1;
  6566                           
  6567                           ;incstack = 0
  6568                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6569  0B79  1683               	bsf	3,5	;RP0=1, select bank1
  6570  0B7A  1303               	bcf	3,6	;RP1=0, select bank1
  6571  0B7B  17CE               	bsf	_Load^(0+128),7
  6572                           
  6573                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6574  0B7C  118A  27E8         	fcall	_setLoad_AH_AL_Restore
  6575  0B7E  0008               	return
  6576  0B7F                     __end_of_Load_Initialization:	
  6577                           
  6578                           	psect	text36
  6579  07E8                     __ptext36:	
  6580 ;; *************** function _setLoad_AH_AL_Restore *****************
  6581 ;; Defined at:
  6582 ;;		line 251 in file "../src/OverLoad_B1.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  i               1    5[COMMON] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;		None               void
  6589 ;; Registers used:
  6590 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6596 ;;      Params:         0       0       0       0
  6597 ;;      Locals:         1       0       0       0
  6598 ;;      Temps:          1       0       0       0
  6599 ;;      Totals:         2       0       0       0
  6600 ;;Total ram usage:        2 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    2
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_Load_Initialization
  6607 ;;		_Load_Main
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           
  6612                           ;psect for function _setLoad_AH_AL_Restore
  6613  07E8                     _setLoad_AH_AL_Restore:	
  6614                           
  6615                           ;OverLoad_B1.c: 252: char i;
  6616                           ;OverLoad_B1.c: 253: for (i = 0; i < 5; i++) {
  6617                           
  6618                           ;incstack = 0
  6619                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6620  07E8  01F5               	clrf	setLoad_AH_AL_Restore@i
  6621  07E9                     L18:	
  6622  07E9  3005               	movlw	5
  6623  07EA  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6624  07EB  1803               	btfsc	3,0
  6625  07EC  0008               	return
  6626                           
  6627                           ;OverLoad_B1.c: 254: Load.AH[i] = 0;
  6628  07ED  0875               	movf	setLoad_AH_AL_Restore@i,w
  6629  07EE  3ED8               	addlw	(_Load+10)& (0+255)
  6630  07EF  0084               	movwf	4
  6631  07F0  1383               	bcf	3,7	;select IRP bank1
  6632  07F1  0180               	clrf	0
  6633                           
  6634                           ;OverLoad_B1.c: 255: Load.AL[i] = 0xff;
  6635  07F2  30FF               	movlw	255
  6636  07F3  00F4               	movwf	??_setLoad_AH_AL_Restore
  6637  07F4  0875               	movf	setLoad_AH_AL_Restore@i,w
  6638  07F5  3EDD               	addlw	(_Load+15)& (0+255)
  6639  07F6  0084               	movwf	4
  6640  07F7  0874               	movf	??_setLoad_AH_AL_Restore,w
  6641  07F8  0080               	movwf	0
  6642  07F9  3001               	movlw	1
  6643  07FA  00F4               	movwf	??_setLoad_AH_AL_Restore
  6644  07FB  0874               	movf	??_setLoad_AH_AL_Restore,w
  6645  07FC  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6646  07FD  2FE9               	goto	L18
  6647  07FE                     __end_of_setLoad_AH_AL_Restore:	
  6648                           
  6649                           	psect	text37
  6650  0E23                     __ptext37:	
  6651 ;; *************** function _Lights_Main *****************
  6652 ;; Defined at:
  6653 ;;		line 54 in file "../src/TriacRelay_B1.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;		None               void
  6660 ;; Registers used:
  6661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6667 ;;      Params:         0       0       0       0
  6668 ;;      Locals:         0       2       0       0
  6669 ;;      Temps:          0       3       0       0
  6670 ;;      Totals:         0       5       0       0
  6671 ;;Total ram usage:        5 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    6
  6674 ;; This function calls:
  6675 ;;		_Lights_Close
  6676 ;;		_Lights_Control
  6677 ;;		_getLoad_OK
  6678 ;;		_getMain_All_Error_Status
  6679 ;;		_getMain_LightsStatus
  6680 ;;		_setLights_Main
  6681 ;; This function is called by:
  6682 ;;		_main
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           
  6687                           ;psect for function _Lights_Main
  6688  0E23                     _Lights_Main:	
  6689                           
  6690                           ;TriacRelay_B1.c: 57: if (getMain_All_Error_Status(0) == 0) {
  6691                           
  6692                           ;incstack = 0
  6693                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6694  0E23  3000               	movlw	0
  6695  0E24  158A  265E  158A   	fcall	_getMain_All_Error_Status
  6696  0E27  3800               	iorlw	0
  6697  0E28  1D03               	skipz
  6698  0E29  2E50               	goto	l1216
  6699                           
  6700                           ;TriacRelay_B1.c: 58: if (LightsControl.LoadOK == 1) {
  6701  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  6702  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  6703  0E2C  1D39               	btfss	_LightsControl,2
  6704  0E2D  2E53               	goto	l5021
  6705                           
  6706                           ;TriacRelay_B1.c: 59: LightsControl.LoadOK = getLoad_OK() == 1 || getMain_LightsStatus()
      +                           == 0 ? 0 : LightsControl.LoadOK;
  6707  0E2E  158A  238C  158A   	fcall	_getLoad_OK
  6708  0E31  3A01               	xorlw	1
  6709  0E32  1903               	skipnz
  6710  0E33  2E47               	goto	l5017
  6711  0E34  158A  25BE  158A   	fcall	_getMain_LightsStatus
  6712  0E37  3A00               	xorlw	0
  6713  0E38  1903               	skipnz
  6714  0E39  2E47               	goto	l5017
  6715  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0E3C  0C39               	rrf	_LightsControl,w
  6718  0E3D  00E3               	movwf	??_Lights_Main
  6719  0E3E  0C63               	rrf	??_Lights_Main,w
  6720  0E3F  3901               	andlw	1
  6721  0E40  00E4               	movwf	??_Lights_Main+1
  6722  0E41  01E5               	clrf	??_Lights_Main+2
  6723  0E42  0864               	movf	??_Lights_Main+1,w
  6724  0E43  00E6               	movwf	_Lights_Main$4371
  6725  0E44  0865               	movf	??_Lights_Main+2,w
  6726  0E45  00E7               	movwf	_Lights_Main$4371+1
  6727  0E46  2E4B               	goto	l5019
  6728  0E47                     l5017:	
  6729  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  6730  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  6731  0E49  01E6               	clrf	_Lights_Main$4371
  6732  0E4A  01E7               	clrf	_Lights_Main$4371+1
  6733  0E4B                     l5019:	
  6734  0E4B  0866               	movf	_Lights_Main$4371,w
  6735  0E4C  1139               	bcf	_LightsControl,2
  6736  0E4D  1D03               	skipz
  6737  0E4E  1539               	bsf	_LightsControl,2
  6738                           
  6739                           ;TriacRelay_B1.c: 60: }
  6740                           ;TriacRelay_B1.c: 61: } else {
  6741  0E4F  2E53               	goto	l5021
  6742  0E50                     l1216:	
  6743                           
  6744                           ;TriacRelay_B1.c: 62: LightsControl.LoadOK = 0;
  6745  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  6746  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  6747  0E52  1139               	bcf	_LightsControl,2
  6748  0E53                     l5021:	
  6749                           
  6750                           ;TriacRelay_B1.c: 63: }
  6751                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  6752  0E53  3001               	movlw	1
  6753  0E54  158A  256C  158A   	fcall	_setLights_Main
  6754                           
  6755                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  6756  0E57  3001               	movlw	1
  6757  0E58  118A  2739  158A   	fcall	_Lights_Control
  6758                           
  6759                           ;TriacRelay_B1.c: 81: Lights_Close();
  6760  0E5B  158A  2494         	fcall	_Lights_Close
  6761  0E5D  0008               	return
  6762  0E5E                     __end_of_Lights_Main:	
  6763                           
  6764                           	psect	text38
  6765  0D6C                     __ptext38:	
  6766 ;; *************** function _setLights_Main *****************
  6767 ;; Defined at:
  6768 ;;		line 93 in file "../src/TriacRelay_B1.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  lights          1    wreg     unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  lights          1    9[BANK0 ] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6782 ;;      Params:         0       0       0       0
  6783 ;;      Locals:         0       1       0       0
  6784 ;;      Temps:          0       0       0       0
  6785 ;;      Totals:         0       1       0       0
  6786 ;;Total ram usage:        1 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    5
  6789 ;; This function calls:
  6790 ;;		_LightsPointSelect
  6791 ;;		_setLights
  6792 ;; This function is called by:
  6793 ;;		_Lights_Main
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function _setLights_Main
  6799  0D6C                     _setLights_Main:	
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6803                           ;setLights_Main@lights stored from wreg
  6804  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  6805  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  6806  0D6E  00E2               	movwf	setLights_Main@lights
  6807                           
  6808                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  6809  0D6F  0862               	movf	setLights_Main@lights,w
  6810  0D70  158A  23AC  158A   	fcall	_LightsPointSelect
  6811                           
  6812                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  6813  0D73  0878               	movf	_Lights,w
  6814  0D74  0084               	movwf	4
  6815  0D75  1383               	bcf	3,7	;select IRP bank0
  6816  0D76  1880               	btfsc	0,1
  6817  0D77  0008               	return
  6818                           
  6819                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  6820  0D78  0878               	movf	_Lights,w
  6821  0D79  0084               	movwf	4
  6822  0D7A  1D80               	btfss	0,3
  6823  0D7B  0008               	return
  6824                           
  6825                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  6826  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  6827  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  6828  0D7E  1939               	btfsc	_LightsControl,2
  6829  0D7F  0008               	return
  6830                           
  6831                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  6832  0D80  0878               	movf	_Lights,w
  6833  0D81  0084               	movwf	4
  6834  0D82  1180               	bcf	0,3
  6835                           
  6836                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  6837  0D83  0878               	movf	_Lights,w
  6838  0D84  0084               	movwf	4
  6839  0D85  1E00               	btfss	0,4
  6840  0D86  2D8D               	goto	l4633
  6841                           
  6842                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  6843  0D87  01DF               	clrf	setLights@status
  6844  0D88  0ADF               	incf	setLights@status,f
  6845  0D89  0862               	movf	setLights_Main@lights,w
  6846  0D8A  158A  2739         	fcall	_setLights
  6847                           
  6848                           ;TriacRelay_B1.c: 102: } else {
  6849  0D8C  0008               	return
  6850  0D8D                     l4633:	
  6851                           
  6852                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  6853  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0D8F  01DF               	clrf	setLights@status
  6856  0D90  0862               	movf	setLights_Main@lights,w
  6857  0D91  158A  2739         	fcall	_setLights
  6858  0D93  0008               	return
  6859  0D94                     __end_of_setLights_Main:	
  6860                           
  6861                           	psect	text39
  6862  0F39                     __ptext39:	
  6863 ;; *************** function _setLights *****************
  6864 ;; Defined at:
  6865 ;;		line 111 in file "../src/TriacRelay_B1.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  lights          1    wreg     unsigned char 
  6868 ;;  status          1    6[BANK0 ] unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  lights          1    8[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;		None               void
  6873 ;; Registers used:
  6874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6880 ;;      Params:         0       1       0       0
  6881 ;;      Locals:         0       1       0       0
  6882 ;;      Temps:          0       1       0       0
  6883 ;;      Totals:         0       3       0       0
  6884 ;;Total ram usage:        3 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    4
  6887 ;; This function calls:
  6888 ;;		_LightsPointSelect
  6889 ;;		_getMain_All_Error_Status
  6890 ;;		_setLights_Line
  6891 ;; This function is called by:
  6892 ;;		_setLights_Main
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           
  6897                           ;psect for function _setLights
  6898  0F39                     _setLights:	
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6902                           ;setLights@lights stored from wreg
  6903  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0F3B  00E1               	movwf	setLights@lights
  6906                           
  6907                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  6908  0F3C  0861               	movf	setLights@lights,w
  6909  0F3D  158A  23AC  158A   	fcall	_LightsPointSelect
  6910                           
  6911                           ;TriacRelay_B1.c: 116: LightsControl.LoadOK = getMain_All_Error_Status(0) == 0 ? 1 : 0;
  6912  0F40  3000               	movlw	0
  6913  0F41  158A  265E  158A   	fcall	_getMain_All_Error_Status
  6914  0F44  3A00               	xorlw	0
  6915  0F45  3000               	movlw	0
  6916  0F46  1903               	skipnz
  6917  0F47  3001               	movlw	1
  6918  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  6919  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  6920  0F4A  00E0               	movwf	??_setLights
  6921  0F4B  0DE0               	rlf	??_setLights,f
  6922  0F4C  0DE0               	rlf	??_setLights,f
  6923  0F4D  0839               	movf	_LightsControl,w
  6924  0F4E  0660               	xorwf	??_setLights,w
  6925  0F4F  39FB               	andlw	-5
  6926  0F50  0660               	xorwf	??_setLights,w
  6927  0F51  00B9               	movwf	_LightsControl
  6928                           
  6929                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  6930  0F52  0878               	movf	_Lights,w
  6931  0F53  0084               	movwf	4
  6932  0F54  1383               	bcf	3,7	;select IRP bank0
  6933  0F55  1480               	bsf	0,1
  6934                           
  6935                           ;TriacRelay_B1.c: 121: if (status == 1) {
  6936  0F56  085F               	movf	setLights@status,w
  6937  0F57  3A01               	xorlw	1
  6938  0F58  1D03               	skipz
  6939  0F59  2F77               	goto	l4417
  6940                           
  6941                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  6942  0F5A  0878               	movf	_Lights,w
  6943  0F5B  0084               	movwf	4
  6944  0F5C  1900               	btfsc	0,2
  6945  0F5D  2F92               	goto	l4421
  6946                           
  6947                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  6948  0F5E  0878               	movf	_Lights,w
  6949  0F5F  0084               	movwf	4
  6950  0F60  1500               	bsf	0,2
  6951                           
  6952                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  6953  0F61  0A78               	incf	_Lights,w
  6954  0F62  0084               	movwf	4
  6955  0F63  1480               	bsf	0,1
  6956                           
  6957                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  6958  0F64  300A               	movlw	10
  6959  0F65  00E0               	movwf	??_setLights
  6960  0F66  0878               	movf	_Lights,w
  6961  0F67  3E06               	addlw	6
  6962  0F68  0084               	movwf	4
  6963  0F69  0860               	movf	??_setLights,w
  6964  0F6A  0080               	movwf	0
  6965                           
  6966                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  6967  0F6B  300D               	movlw	13
  6968  0F6C  00E0               	movwf	??_setLights
  6969  0F6D  0878               	movf	_Lights,w
  6970  0F6E  3E04               	addlw	4
  6971  0F6F  0084               	movwf	4
  6972  0F70  0860               	movf	??_setLights,w
  6973  0F71  0080               	movwf	0
  6974                           
  6975                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  6976  0F72  0861               	movf	setLights@lights,w
  6977  0F73  158A  23CD  158A   	fcall	_setLights_Line
  6978                           
  6979                           ;TriacRelay_B1.c: 128: }
  6980                           ;TriacRelay_B1.c: 129: } else {
  6981  0F76  2F92               	goto	l4421
  6982  0F77                     l4417:	
  6983                           
  6984                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  6985  0F77  0878               	movf	_Lights,w
  6986  0F78  0084               	movwf	4
  6987  0F79  1383               	bcf	3,7	;select IRP bank0
  6988  0F7A  1D00               	btfss	0,2
  6989  0F7B  2F92               	goto	l4421
  6990                           
  6991                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  6992  0F7C  0878               	movf	_Lights,w
  6993  0F7D  0084               	movwf	4
  6994  0F7E  1100               	bcf	0,2
  6995                           
  6996                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  6997  0F7F  0A78               	incf	_Lights,w
  6998  0F80  0084               	movwf	4
  6999  0F81  1080               	bcf	0,1
  7000                           
  7001                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  7002  0F82  3004               	movlw	4
  7003  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  7004  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  7005  0F85  00E0               	movwf	??_setLights
  7006  0F86  0878               	movf	_Lights,w
  7007  0F87  3E06               	addlw	6
  7008  0F88  0084               	movwf	4
  7009  0F89  0860               	movf	??_setLights,w
  7010  0F8A  0080               	movwf	0
  7011                           
  7012                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  7013  0F8B  3007               	movlw	7
  7014  0F8C  00E0               	movwf	??_setLights
  7015  0F8D  0878               	movf	_Lights,w
  7016  0F8E  3E04               	addlw	4
  7017  0F8F  0084               	movwf	4
  7018  0F90  0860               	movf	??_setLights,w
  7019  0F91  0080               	movwf	0
  7020  0F92                     l4421:	
  7021                           
  7022                           ;TriacRelay_B1.c: 135: }
  7023                           ;TriacRelay_B1.c: 136: }
  7024                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  7025  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  7026  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  7027  0F94  0861               	movf	setLights@lights,w
  7028  0F95  3A01               	xorlw	1
  7029  0F96  1D03               	skipz
  7030  0F97  0008               	return
  7031                           
  7032                           ;TriacRelay_B1.c: 139: RB2 = 1;
  7033  0F98  1506               	bsf	6,2	;volatile
  7034  0F99  0008               	return
  7035  0F9A                     __end_of_setLights:	
  7036                           
  7037                           	psect	text40
  7038  0BCD                     __ptext40:	
  7039 ;; *************** function _setLights_Line *****************
  7040 ;; Defined at:
  7041 ;;		line 221 in file "../src/TriacRelay_B1.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  lights          1    wreg     unsigned char 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  lights          1    6[COMMON] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7055 ;;      Params:         0       0       0       0
  7056 ;;      Locals:         1       0       0       0
  7057 ;;      Temps:          0       0       0       0
  7058 ;;      Totals:         1       0       0       0
  7059 ;;Total ram usage:        1 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    3
  7062 ;; This function calls:
  7063 ;;		_LightsPointSelect
  7064 ;; This function is called by:
  7065 ;;		_setLights
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           
  7070                           ;psect for function _setLights_Line
  7071  0BCD                     _setLights_Line:	
  7072                           
  7073                           ;incstack = 0
  7074                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7075                           ;setLights_Line@lights stored from wreg
  7076  0BCD  00F6               	movwf	setLights_Line@lights
  7077                           
  7078                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  7079  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  7080  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  7081  0BD0  1047               	bcf	_Lights1+1,0
  7082                           
  7083                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  7084  0BD1  0876               	movf	setLights_Line@lights,w
  7085  0BD2  158A  23AC         	fcall	_LightsPointSelect
  7086                           
  7087                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  7088  0BD4  0A78               	incf	_Lights,w
  7089  0BD5  0084               	movwf	4
  7090  0BD6  1383               	bcf	3,7	;select IRP bank0
  7091  0BD7  1400               	bsf	0,0
  7092  0BD8  0008               	return
  7093  0BD9                     __end_of_setLights_Line:	
  7094                           
  7095                           	psect	text41
  7096  0B8C                     __ptext41:	
  7097 ;; *************** function _getLoad_OK *****************
  7098 ;; Defined at:
  7099 ;;		line 230 in file "../src/OverLoad_B1.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;		None
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  ok              1    4[COMMON] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      unsigned char 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7113 ;;      Params:         0       0       0       0
  7114 ;;      Locals:         1       0       0       0
  7115 ;;      Temps:          0       0       0       0
  7116 ;;      Totals:         1       0       0       0
  7117 ;;Total ram usage:        1 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:    2
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_Lights_Main
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           
  7128                           ;psect for function _getLoad_OK
  7129  0B8C                     _getLoad_OK:	
  7130                           
  7131                           ;OverLoad_B1.c: 231: char ok = Load.OK == 1 ? 1 : 0;
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7135  0B8C  3000               	movlw	0
  7136  0B8D  1683               	bsf	3,5	;RP0=1, select bank1
  7137  0B8E  1303               	bcf	3,6	;RP1=0, select bank1
  7138  0B8F  1BCE               	btfsc	_Load^(0+128),7
  7139  0B90  3001               	movlw	1
  7140  0B91  00F4               	movwf	getLoad_OK@ok
  7141                           
  7142                           ;OverLoad_B1.c: 233: return ok;
  7143  0B92  0874               	movf	getLoad_OK@ok,w
  7144  0B93  0008               	return
  7145  0B94                     __end_of_getLoad_OK:	
  7146                           
  7147                           	psect	text42
  7148  0739                     __ptext42:	
  7149 ;; *************** function _Lights_Control *****************
  7150 ;; Defined at:
  7151 ;;		line 155 in file "../src/TriacRelay_B1.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  lights          1    wreg     unsigned char 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  lights          1    4[BANK0 ] unsigned char 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;		None               void
  7158 ;; Registers used:
  7159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7165 ;;      Params:         0       0       0       0
  7166 ;;      Locals:         0       3       0       0
  7167 ;;      Temps:          0       2       0       0
  7168 ;;      Totals:         0       5       0       0
  7169 ;;Total ram usage:        5 bytes
  7170 ;; Hardware stack levels used:    1
  7171 ;; Hardware stack levels required when called:    3
  7172 ;; This function calls:
  7173 ;;		_LightsPointSelect
  7174 ;; This function is called by:
  7175 ;;		_Lights_Main
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           
  7180                           ;psect for function _Lights_Control
  7181  0739                     _Lights_Control:	
  7182                           
  7183                           ;incstack = 0
  7184                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7185                           ;Lights_Control@lights stored from wreg
  7186  0739  1283               	bcf	3,5	;RP0=0, select bank0
  7187  073A  1303               	bcf	3,6	;RP1=0, select bank0
  7188  073B  00DD               	movwf	Lights_Control@lights
  7189                           
  7190                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  7191  073C  085D               	movf	Lights_Control@lights,w
  7192  073D  158A  23AC  118A   	fcall	_LightsPointSelect
  7193                           
  7194                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  7195  0740  0878               	movf	_Lights,w
  7196  0741  0084               	movwf	4
  7197  0742  1383               	bcf	3,7	;select IRP bank0
  7198  0743  1C80               	btfss	0,1
  7199  0744  0008               	return
  7200                           
  7201                           ;TriacRelay_B1.c: 158: Lights->Time++;
  7202  0745  3001               	movlw	1
  7203  0746  1283               	bcf	3,5	;RP0=0, select bank0
  7204  0747  1303               	bcf	3,6	;RP1=0, select bank0
  7205  0748  00D9               	movwf	??_Lights_Control
  7206  0749  0878               	movf	_Lights,w
  7207  074A  3E02               	addlw	2
  7208  074B  0084               	movwf	4
  7209  074C  0859               	movf	??_Lights_Control,w
  7210  074D  0780               	addwf	0,f
  7211                           
  7212                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  7213  074E  0878               	movf	_Lights,w
  7214  074F  3E06               	addlw	6
  7215  0750  0084               	movwf	4
  7216  0751  0800               	movf	0,w
  7217  0752  00D9               	movwf	??_Lights_Control
  7218  0753  0878               	movf	_Lights,w
  7219  0754  3E02               	addlw	2
  7220  0755  0084               	movwf	4
  7221  0756  0800               	movf	0,w
  7222  0757  00DA               	movwf	??_Lights_Control+1
  7223  0758  0859               	movf	??_Lights_Control,w
  7224  0759  025A               	subwf	??_Lights_Control+1,w
  7225  075A  1C03               	skipc
  7226  075B  2F73               	goto	l4651
  7227  075C  0878               	movf	_Lights,w
  7228  075D  0084               	movwf	4
  7229  075E  1B80               	btfsc	0,7
  7230  075F  2F73               	goto	l4651
  7231                           
  7232                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  7233  0760  0878               	movf	_Lights,w
  7234  0761  0084               	movwf	4
  7235  0762  1780               	bsf	0,7
  7236                           
  7237                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  7238  0763  085D               	movf	Lights_Control@lights,w
  7239  0764  3A01               	xorlw	1
  7240  0765  1D03               	skipz
  7241  0766  0008               	return
  7242                           
  7243                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  7244  0767  0878               	movf	_Lights,w
  7245  0768  0084               	movwf	4
  7246  0769  1D00               	btfss	0,2
  7247  076A  2F6F               	goto	u5720
  7248  076B  1283               	bcf	3,5	;RP0=0, select bank0
  7249  076C  1303               	bcf	3,6	;RP1=0, select bank0
  7250  076D  1605               	bsf	5,4	;volatile
  7251  076E  0008               	return
  7252  076F                     u5720:	
  7253  076F  1283               	bcf	3,5	;RP0=0, select bank0
  7254  0770  1303               	bcf	3,6	;RP1=0, select bank0
  7255  0771  1205               	bcf	5,4	;volatile
  7256                           
  7257                           ;TriacRelay_B1.c: 164: }
  7258                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  7259  0772  0008               	return
  7260  0773                     l4651:	
  7261  0773  0878               	movf	_Lights,w
  7262  0774  3E04               	addlw	4
  7263  0775  0084               	movwf	4
  7264  0776  1383               	bcf	3,7	;select IRP bank0
  7265  0777  0800               	movf	0,w
  7266  0778  00D9               	movwf	??_Lights_Control
  7267  0779  0878               	movf	_Lights,w
  7268  077A  3E02               	addlw	2
  7269  077B  0084               	movwf	4
  7270  077C  0800               	movf	0,w
  7271  077D  00DA               	movwf	??_Lights_Control+1
  7272  077E  0859               	movf	??_Lights_Control,w
  7273  077F  025A               	subwf	??_Lights_Control+1,w
  7274  0780  1C03               	skipc
  7275  0781  0008               	return
  7276                           
  7277                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  7278  0782  0878               	movf	_Lights,w
  7279  0783  3E02               	addlw	2
  7280  0784  0084               	movwf	4
  7281  0785  0180               	clrf	0
  7282                           
  7283                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  7284  0786  0878               	movf	_Lights,w
  7285  0787  0084               	movwf	4
  7286  0788  1080               	bcf	0,1
  7287                           
  7288                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  7289  0789  0878               	movf	_Lights,w
  7290  078A  0084               	movwf	4
  7291  078B  1380               	bcf	0,7
  7292                           
  7293                           ;TriacRelay_B1.c: 183: LightsControl.Detect = Lights->Status == 0 ? 1 : LightsControl.De
      +                          tect;
  7294  078C  0878               	movf	_Lights,w
  7295  078D  0084               	movwf	4
  7296  078E  1D00               	btfss	0,2
  7297  078F  2F98               	goto	l4663
  7298  0790  0839               	movf	_LightsControl,w
  7299  0791  3901               	andlw	1
  7300  0792  00D9               	movwf	??_Lights_Control
  7301  0793  01DA               	clrf	??_Lights_Control+1
  7302  0794  0859               	movf	??_Lights_Control,w
  7303  0795  00DB               	movwf	_Lights_Control$4380
  7304  0796  085A               	movf	??_Lights_Control+1,w
  7305  0797  2F9B               	goto	L19
  7306  0798                     l4663:	
  7307  0798  3001               	movlw	1
  7308  0799  00DB               	movwf	_Lights_Control$4380
  7309  079A  3000               	movlw	0
  7310  079B                     L19:	
  7311  079B  00DC               	movwf	_Lights_Control$4380+1
  7312  079C  085B               	movf	_Lights_Control$4380,w
  7313  079D  1039               	bcf	_LightsControl,0
  7314  079E  1D03               	skipz
  7315  079F  1439               	bsf	_LightsControl,0
  7316                           
  7317                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  7318  07A0  085D               	movf	Lights_Control@lights,w
  7319  07A1  3A01               	xorlw	1
  7320  07A2  1D03               	skipz
  7321  07A3  0008               	return
  7322                           
  7323                           ;TriacRelay_B1.c: 188: RB2 = 0;
  7324  07A4  1106               	bcf	6,2	;volatile
  7325  07A5  0008               	return
  7326  07A6                     __end_of_Lights_Control:	
  7327                           
  7328                           	psect	text43
  7329  0C94                     __ptext43:	
  7330 ;; *************** function _Lights_Close *****************
  7331 ;; Defined at:
  7332 ;;		line 85 in file "../src/TriacRelay_B1.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;		None               void
  7339 ;; Registers used:
  7340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7346 ;;      Params:         0       0       0       0
  7347 ;;      Locals:         0       0       0       0
  7348 ;;      Temps:          0       1       0       0
  7349 ;;      Totals:         0       1       0       0
  7350 ;;Total ram usage:        1 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    5
  7353 ;; This function calls:
  7354 ;;		_getMain_LightsStatus
  7355 ;; This function is called by:
  7356 ;;		_Lights_Main
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           
  7361                           ;psect for function _Lights_Close
  7362  0C94                     _Lights_Close:	
  7363                           
  7364                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  7365                           
  7366                           ;incstack = 0
  7367                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7368  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  7369  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  7370  0C96  1C39               	btfss	_LightsControl,0
  7371  0C97  0008               	return
  7372                           
  7373                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  7374  0C98  1039               	bcf	_LightsControl,0
  7375                           
  7376                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  7377  0C99  158A  25BE         	fcall	_getMain_LightsStatus
  7378  0C9B  3800               	iorlw	0
  7379  0C9C  3000               	movlw	0
  7380  0C9D  1D03               	skipz
  7381  0C9E  3001               	movlw	1
  7382  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  7383  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  7384  0CA1  00DF               	movwf	??_Lights_Close
  7385  0CA2  0DDF               	rlf	??_Lights_Close,f
  7386  0CA3  0839               	movf	_LightsControl,w
  7387  0CA4  065F               	xorwf	??_Lights_Close,w
  7388  0CA5  39FD               	andlw	-3
  7389  0CA6  065F               	xorwf	??_Lights_Close,w
  7390  0CA7  00B9               	movwf	_LightsControl
  7391  0CA8  0008               	return
  7392  0CA9                     __end_of_Lights_Close:	
  7393                           
  7394                           	psect	text44
  7395  0DBE                     __ptext44:	
  7396 ;; *************** function _getMain_LightsStatus *****************
  7397 ;; Defined at:
  7398 ;;		line 375 in file "../src/Main_B1.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;		None
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  i               2    3[BANK0 ] int 
  7403 ;;  status          1    5[BANK0 ] unsigned char 
  7404 ;;  count           1    2[BANK0 ] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      unsigned char 
  7407 ;; Registers used:
  7408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7414 ;;      Params:         0       0       0       0
  7415 ;;      Locals:         0       4       0       0
  7416 ;;      Temps:          1       0       0       0
  7417 ;;      Totals:         1       4       0       0
  7418 ;;Total ram usage:        5 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    4
  7421 ;; This function calls:
  7422 ;;		_getLights_Status
  7423 ;; This function is called by:
  7424 ;;		_Load_Main
  7425 ;;		_setTemp_Main
  7426 ;;		_Lights_Main
  7427 ;;		_Lights_Close
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function _getMain_LightsStatus
  7433  0DBE                     _getMain_LightsStatus:	
  7434                           
  7435                           ;Main_B1.c: 376: char status = 0, count = 0;
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7439  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  7440  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  7441  0DC0  01DE               	clrf	getMain_LightsStatus@status
  7442  0DC1  01DB               	clrf	getMain_LightsStatus@count
  7443                           
  7444                           ;Main_B1.c: 379: count = 1;
  7445  0DC2  01DB               	clrf	getMain_LightsStatus@count
  7446  0DC3  0ADB               	incf	getMain_LightsStatus@count,f
  7447                           
  7448                           ;Main_B1.c: 390: for (int i = 0; i < count; i++) {
  7449  0DC4  01DC               	clrf	getMain_LightsStatus@i
  7450  0DC5  01DD               	clrf	getMain_LightsStatus@i+1
  7451  0DC6                     l4399:	
  7452  0DC6  085D               	movf	getMain_LightsStatus@i+1,w
  7453  0DC7  3A80               	xorlw	128
  7454  0DC8  00F6               	movwf	??_getMain_LightsStatus
  7455  0DC9  3080               	movlw	128
  7456  0DCA  0276               	subwf	??_getMain_LightsStatus,w
  7457  0DCB  1D03               	skipz
  7458  0DCC  2DCF               	goto	u5185
  7459  0DCD  085B               	movf	getMain_LightsStatus@count,w
  7460  0DCE  025C               	subwf	getMain_LightsStatus@i,w
  7461  0DCF                     u5185:	
  7462  0DCF  1803               	btfsc	3,0
  7463  0DD0  2DEB               	goto	l4401
  7464                           
  7465                           ;Main_B1.c: 391: if (status == 0) {
  7466  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  7467  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  7468  0DD3  08DE               	movf	getMain_LightsStatus@status,f
  7469  0DD4  1D03               	skipz
  7470  0DD5  2DE4               	goto	l4397
  7471                           
  7472                           ;Main_B1.c: 393: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  7473  0DD6  085C               	movf	getMain_LightsStatus@i,w
  7474  0DD7  3E01               	addlw	1
  7475  0DD8  158A  243B  158A   	fcall	_getLights_Status
  7476  0DDB  3A01               	xorlw	1
  7477  0DDC  3000               	movlw	0
  7478  0DDD  1903               	skipnz
  7479  0DDE  3001               	movlw	1
  7480  0DDF  00F6               	movwf	??_getMain_LightsStatus
  7481  0DE0  0876               	movf	??_getMain_LightsStatus,w
  7482  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  7483  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  7484  0DE3  00DE               	movwf	getMain_LightsStatus@status
  7485  0DE4                     l4397:	
  7486  0DE4  3001               	movlw	1
  7487  0DE5  07DC               	addwf	getMain_LightsStatus@i,f
  7488  0DE6  1803               	skipnc
  7489  0DE7  0ADD               	incf	getMain_LightsStatus@i+1,f
  7490  0DE8  3000               	movlw	0
  7491  0DE9  07DD               	addwf	getMain_LightsStatus@i+1,f
  7492  0DEA  2DC6               	goto	l4399
  7493  0DEB                     l4401:	
  7494                           
  7495                           ;Main_B1.c: 398: }
  7496                           ;Main_B1.c: 399: }
  7497                           ;Main_B1.c: 400: return status;
  7498  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  7499  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  7500  0DED  085E               	movf	getMain_LightsStatus@status,w
  7501  0DEE  0008               	return
  7502  0DEF                     __end_of_getMain_LightsStatus:	
  7503                           
  7504                           	psect	text45
  7505  0B67                     __ptext45:	
  7506 ;; *************** function _Lights_Initialization *****************
  7507 ;; Defined at:
  7508 ;;		line 34 in file "../src/TriacRelay_B1.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;		None               void
  7515 ;; Registers used:
  7516 ;;		wreg, status,2, status,0, pclath, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7522 ;;      Params:         0       0       0       0
  7523 ;;      Locals:         0       0       0       0
  7524 ;;      Temps:          0       0       0       0
  7525 ;;      Totals:         0       0       0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    4
  7529 ;; This function calls:
  7530 ;;		_setLights_Initialization
  7531 ;; This function is called by:
  7532 ;;		_main
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           
  7537                           ;psect for function _Lights_Initialization
  7538  0B67                     _Lights_Initialization:	
  7539                           
  7540                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7544  0B67  3001               	movlw	1
  7545  0B68  158A  236F         	fcall	_setLights_Initialization
  7546  0B6A  0008               	return
  7547  0B6B                     __end_of_Lights_Initialization:	
  7548                           
  7549                           	psect	text46
  7550  0B6F                     __ptext46:	
  7551 ;; *************** function _setLights_Initialization *****************
  7552 ;; Defined at:
  7553 ;;		line 49 in file "../src/TriacRelay_B1.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  lights          1    wreg     unsigned char 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  lights          1    6[COMMON] unsigned char 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;		None               void
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0, pclath, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7567 ;;      Params:         0       0       0       0
  7568 ;;      Locals:         1       0       0       0
  7569 ;;      Temps:          0       0       0       0
  7570 ;;      Totals:         1       0       0       0
  7571 ;;Total ram usage:        1 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:    3
  7574 ;; This function calls:
  7575 ;;		_LightsPointSelect
  7576 ;; This function is called by:
  7577 ;;		_Lights_Initialization
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function _setLights_Initialization
  7583  0B6F                     _setLights_Initialization:	
  7584                           
  7585                           ;incstack = 0
  7586                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7587                           ;setLights_Initialization@lights stored from wreg
  7588  0B6F  00F6               	movwf	setLights_Initialization@lights
  7589                           
  7590                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  7591  0B70  0876               	movf	setLights_Initialization@lights,w
  7592  0B71  158A  23AC         	fcall	_LightsPointSelect
  7593  0B73  0008               	return
  7594  0B74                     __end_of_setLights_Initialization:	
  7595                           
  7596                           	psect	text47
  7597  0B54                     __ptext47:	
  7598 ;; *************** function _LED_Main *****************
  7599 ;; Defined at:
  7600 ;;		line 47 in file "../src/LED_B1.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;		None
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;		None               void
  7607 ;; Registers used:
  7608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7614 ;;      Params:         0       0       0       0
  7615 ;;      Locals:         0       0       0       0
  7616 ;;      Temps:          0       0       0       0
  7617 ;;      Totals:         0       0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    5
  7621 ;; This function calls:
  7622 ;;		_setPIRLED_Main
  7623 ;; This function is called by:
  7624 ;;		_main
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           
  7629                           ;psect for function _LED_Main
  7630  0B54                     _LED_Main:	
  7631                           
  7632                           ;LED_B1.c: 50: setPIRLED_Main();
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7636  0B54  118A  26CA         	fcall	_setPIRLED_Main
  7637  0B56  0008               	return
  7638  0B57                     __end_of_LED_Main:	
  7639                           
  7640                           	psect	text48
  7641  06CA                     __ptext48:	
  7642 ;; *************** function _setPIRLED_Main *****************
  7643 ;; Defined at:
  7644 ;;		line 253 in file "../src/LED_B1.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  count           1    2[BANK0 ] unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;		None               void
  7651 ;; Registers used:
  7652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7658 ;;      Params:         0       0       0       0
  7659 ;;      Locals:         0       1       0       0
  7660 ;;      Temps:          0       1       0       0
  7661 ;;      Totals:         0       2       0       0
  7662 ;;Total ram usage:        2 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    4
  7665 ;; This function calls:
  7666 ;;		_setLED
  7667 ;; This function is called by:
  7668 ;;		_LED_Main
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function _setPIRLED_Main
  7674  06CA                     _setPIRLED_Main:	
  7675                           
  7676                           ;LED_B1.c: 254: char count;
  7677                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  7678                           
  7679                           ;incstack = 0
  7680                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7681  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  7682  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  7683  06CC  1C30               	btfss	_PIRLED,0
  7684  06CD  0008               	return
  7685                           
  7686                           ;LED_B1.c: 256: PIRLED.Time++;
  7687  06CE  3001               	movlw	1
  7688  06CF  07B2               	addwf	_PIRLED+2,f
  7689  06D0  1803               	skipnc
  7690  06D1  0AB3               	incf	_PIRLED+3,f
  7691  06D2  3000               	movlw	0
  7692  06D3  07B3               	addwf	_PIRLED+3,f
  7693                           
  7694                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  7695  06D4  3000               	movlw	0
  7696  06D5  0233               	subwf	_PIRLED+3,w
  7697  06D6  3032               	movlw	50
  7698  06D7  1903               	skipnz
  7699  06D8  0232               	subwf	_PIRLED+2,w
  7700  06D9  1C03               	skipc
  7701  06DA  0008               	return
  7702                           
  7703                           ;LED_B1.c: 258: PIRLED.Time = 0;
  7704  06DB  01B2               	clrf	_PIRLED+2
  7705  06DC  01B3               	clrf	_PIRLED+3
  7706                           
  7707                           ;LED_B1.c: 259: setLED(1, 0);
  7708  06DD  01F6               	clrf	setLED@command
  7709  06DE  3001               	movlw	1
  7710  06DF  118A  256F  118A   	fcall	_setLED
  7711                           
  7712                           ;LED_B1.c: 260: setLED(2, 0);
  7713  06E2  01F6               	clrf	setLED@command
  7714  06E3  3002               	movlw	2
  7715  06E4  118A  256F  118A   	fcall	_setLED
  7716                           
  7717                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  7718  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  7719  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  7720  06E9  1CB0               	btfss	_PIRLED,1
  7721  06EA  2EEF               	goto	l4489
  7722                           
  7723                           ;LED_B1.c: 262: count = 4;
  7724  06EB  3004               	movlw	4
  7725  06EC  00DA               	movwf	??_setPIRLED_Main
  7726  06ED  085A               	movf	??_setPIRLED_Main,w
  7727  06EE  00DB               	movwf	setPIRLED_Main@count
  7728  06EF                     l4489:	
  7729                           
  7730                           ;LED_B1.c: 263: }
  7731                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  7732  06EF  1D30               	btfss	_PIRLED,2
  7733  06F0  2EF5               	goto	l4493
  7734                           
  7735                           ;LED_B1.c: 265: count = 6;
  7736  06F1  3006               	movlw	6
  7737  06F2  00DA               	movwf	??_setPIRLED_Main
  7738  06F3  085A               	movf	??_setPIRLED_Main,w
  7739  06F4  00DB               	movwf	setPIRLED_Main@count
  7740  06F5                     l4493:	
  7741                           
  7742                           ;LED_B1.c: 266: }
  7743                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  7744  06F5  1DB0               	btfss	_PIRLED,3
  7745  06F6  2EFB               	goto	l4497
  7746                           
  7747                           ;LED_B1.c: 268: count = 8;
  7748  06F7  3008               	movlw	8
  7749  06F8  00DA               	movwf	??_setPIRLED_Main
  7750  06F9  085A               	movf	??_setPIRLED_Main,w
  7751  06FA  00DB               	movwf	setPIRLED_Main@count
  7752  06FB                     l4497:	
  7753                           
  7754                           ;LED_B1.c: 269: }
  7755                           ;LED_B1.c: 270: PIRLED.Count++;
  7756  06FB  3001               	movlw	1
  7757  06FC  00DA               	movwf	??_setPIRLED_Main
  7758  06FD  085A               	movf	??_setPIRLED_Main,w
  7759  06FE  07B1               	addwf	_PIRLED+1,f
  7760                           
  7761                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7762  06FF  0831               	movf	_PIRLED+1,w
  7763  0700  3A01               	xorlw	1
  7764  0701  1903               	skipnz
  7765  0702  2F07               	goto	l4503
  7766  0703  0831               	movf	_PIRLED+1,w
  7767  0704  3A02               	xorlw	2
  7768  0705  1D03               	skipz
  7769  0706  2F1B               	goto	l4507
  7770  0707                     l4503:	
  7771                           
  7772                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7773  0707  1003               	clrc
  7774  0708  1E30               	btfss	_PIRLED,4
  7775  0709  1403               	setc
  7776  070A  1C03               	btfss	3,0
  7777  070B  2F10               	goto	u5400
  7778  070C  1283               	bcf	3,5	;RP0=0, select bank0
  7779  070D  1303               	bcf	3,6	;RP1=0, select bank0
  7780  070E  1630               	bsf	_PIRLED,4
  7781  070F  2F13               	goto	l4505
  7782  0710                     u5400:	
  7783  0710  1283               	bcf	3,5	;RP0=0, select bank0
  7784  0711  1303               	bcf	3,6	;RP1=0, select bank0
  7785  0712  1230               	bcf	_PIRLED,4
  7786  0713                     l4505:	
  7787                           
  7788                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  7789  0713  3000               	movlw	0
  7790  0714  1A30               	btfsc	_PIRLED,4
  7791  0715  3001               	movlw	1
  7792  0716  00F6               	movwf	setLED@command
  7793  0717  3002               	movlw	2
  7794  0718  118A  256F         	fcall	_setLED
  7795                           
  7796                           ;LED_B1.c: 274: } else {
  7797  071A  0008               	return
  7798  071B                     l4507:	
  7799                           
  7800                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7801  071B  1003               	clrc
  7802  071C  1283               	bcf	3,5	;RP0=0, select bank0
  7803  071D  1303               	bcf	3,6	;RP1=0, select bank0
  7804  071E  1E30               	btfss	_PIRLED,4
  7805  071F  1403               	setc
  7806  0720  1C03               	btfss	3,0
  7807  0721  2F26               	goto	u5420
  7808  0722  1283               	bcf	3,5	;RP0=0, select bank0
  7809  0723  1303               	bcf	3,6	;RP1=0, select bank0
  7810  0724  1630               	bsf	_PIRLED,4
  7811  0725  2F29               	goto	l4509
  7812  0726                     u5420:	
  7813  0726  1283               	bcf	3,5	;RP0=0, select bank0
  7814  0727  1303               	bcf	3,6	;RP1=0, select bank0
  7815  0728  1230               	bcf	_PIRLED,4
  7816  0729                     l4509:	
  7817                           
  7818                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  7819  0729  3000               	movlw	0
  7820  072A  1A30               	btfsc	_PIRLED,4
  7821  072B  3001               	movlw	1
  7822  072C  00F6               	movwf	setLED@command
  7823  072D  3001               	movlw	1
  7824  072E  118A  256F  118A   	fcall	_setLED
  7825                           
  7826                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  7827  0731  1283               	bcf	3,5	;RP0=0, select bank0
  7828  0732  1303               	bcf	3,6	;RP1=0, select bank0
  7829  0733  0831               	movf	_PIRLED+1,w
  7830  0734  065B               	xorwf	setPIRLED_Main@count,w
  7831  0735  1D03               	skipz
  7832  0736  0008               	return
  7833                           
  7834                           ;LED_B1.c: 278: PIRLED.Count = 0;
  7835  0737  01B1               	clrf	_PIRLED+1
  7836  0738  0008               	return
  7837  0739                     __end_of_setPIRLED_Main:	
  7838                           
  7839                           	psect	text49
  7840  0BC1                     __ptext49:	
  7841 ;; *************** function _LED_Initialization *****************
  7842 ;; Defined at:
  7843 ;;		line 31 in file "../src/LED_B1.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;		None
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;		None
  7848 ;; Return value:  Size  Location     Type
  7849 ;;		None               void
  7850 ;; Registers used:
  7851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7857 ;;      Params:         0       0       0       0
  7858 ;;      Locals:         0       0       0       0
  7859 ;;      Temps:          0       0       0       0
  7860 ;;      Totals:         0       0       0       0
  7861 ;;Total ram usage:        0 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    5
  7864 ;; This function calls:
  7865 ;;		_setLED_Initialization
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           
  7872                           ;psect for function _LED_Initialization
  7873  0BC1                     _LED_Initialization:	
  7874                           
  7875                           ;LED_B1.c: 33: setLED_Initialization(1);
  7876                           
  7877                           ;incstack = 0
  7878                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7879  0BC1  3001               	movlw	1
  7880  0BC2  158A  246E  158A   	fcall	_setLED_Initialization
  7881                           
  7882                           ;LED_B1.c: 36: setLED_Initialization(2);
  7883  0BC5  3002               	movlw	2
  7884  0BC6  158A  246E  158A   	fcall	_setLED_Initialization
  7885                           
  7886                           ;LED_B1.c: 42: setLED_Initialization(99);
  7887  0BC9  3063               	movlw	99
  7888  0BCA  158A  246E         	fcall	_setLED_Initialization
  7889  0BCC  0008               	return
  7890  0BCD                     __end_of_LED_Initialization:	
  7891                           
  7892                           	psect	text50
  7893  0C6E                     __ptext50:	
  7894 ;; *************** function _setLED_Initialization *****************
  7895 ;; Defined at:
  7896 ;;		line 69 in file "../src/LED_B1.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  led             1    wreg     unsigned char 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  led             1    1[BANK0 ] unsigned char 
  7901 ;; Return value:  Size  Location     Type
  7902 ;;		None               void
  7903 ;; Registers used:
  7904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7910 ;;      Params:         0       0       0       0
  7911 ;;      Locals:         0       1       0       0
  7912 ;;      Temps:          0       0       0       0
  7913 ;;      Totals:         0       1       0       0
  7914 ;;Total ram usage:        1 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    4
  7917 ;; This function calls:
  7918 ;;		_LedPointSelect
  7919 ;;		_setLED
  7920 ;; This function is called by:
  7921 ;;		_LED_Initialization
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function _setLED_Initialization
  7927  0C6E                     _setLED_Initialization:	
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7931                           ;setLED_Initialization@led stored from wreg
  7932  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  7933  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  7934  0C70  00DA               	movwf	setLED_Initialization@led
  7935                           
  7936                           ;LED_B1.c: 70: LedPointSelect(led);
  7937  0C71  085A               	movf	setLED_Initialization@led,w
  7938  0C72  158A  24BE  158A   	fcall	_LedPointSelect
  7939                           
  7940                           ;LED_B1.c: 71: LED->Enable = 1;
  7941  0C75  0877               	movf	_LED,w
  7942  0C76  0084               	movwf	4
  7943  0C77  1383               	bcf	3,7	;select IRP bank0
  7944  0C78  1400               	bsf	0,0
  7945                           
  7946                           ;LED_B1.c: 72: setLED(led, 0);
  7947  0C79  01F6               	clrf	setLED@command
  7948  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  7949  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  7950  0C7C  085A               	movf	setLED_Initialization@led,w
  7951  0C7D  118A  256F         	fcall	_setLED
  7952  0C7F  0008               	return
  7953  0C80                     __end_of_setLED_Initialization:	
  7954                           
  7955                           	psect	text51
  7956  05E6                     __ptext51:	
  7957 ;; *************** function _Exception_Main *****************
  7958 ;; Defined at:
  7959 ;;		line 488 in file "../src/Main_B1.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  i               2    9[BANK0 ] int 
  7964 ;;  count           1    7[BANK0 ] unsigned char 
  7965 ;;  status          1    8[BANK0 ] unsigned char 
  7966 ;;  error           1   11[BANK0 ] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;		None               void
  7969 ;; Registers used:
  7970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7976 ;;      Params:         0       0       0       0
  7977 ;;      Locals:         0       5       0       0
  7978 ;;      Temps:          0       1       0       0
  7979 ;;      Totals:         0       6       0       0
  7980 ;;Total ram usage:        6 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    4
  7983 ;; This function calls:
  7984 ;;		_getAll_Lights_Line
  7985 ;;		_getLights_Status
  7986 ;;		_getMain_All_Error_Status
  7987 ;;		_setLED
  7988 ;;		_setLights_Trigger
  7989 ;; This function is called by:
  7990 ;;		_main
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           
  7995                           ;psect for function _Exception_Main
  7996  05E6                     _Exception_Main:	
  7997                           
  7998                           ;Main_B1.c: 489: char error = getMain_All_Error_Status(0);
  7999                           
  8000                           ;incstack = 0
  8001                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8002  05E6  3000               	movlw	0
  8003  05E7  158A  265E  118A   	fcall	_getMain_All_Error_Status
  8004  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  8005  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  8006  05EC  00DF               	movwf	??_Exception_Main
  8007  05ED  085F               	movf	??_Exception_Main,w
  8008  05EE  00E4               	movwf	Exception_Main@error
  8009                           
  8010                           ;Main_B1.c: 491: if (myMain.Error_Run == 1) {
  8011  05EF  1DA3               	btfss	_myMain+3,3
  8012  05F0  2DFD               	goto	l5181
  8013                           
  8014                           ;Main_B1.c: 492: if (error == 0) {
  8015  05F1  08E4               	movf	Exception_Main@error,f
  8016  05F2  1D03               	skipz
  8017  05F3  0008               	return
  8018                           
  8019                           ;Main_B1.c: 493: myMain.Error_Run = 0;
  8020  05F4  11A3               	bcf	_myMain+3,3
  8021                           
  8022                           ;Main_B1.c: 495: setLED(error, 110);
  8023  05F5  306E               	movlw	110
  8024  05F6  00DF               	movwf	??_Exception_Main
  8025  05F7  085F               	movf	??_Exception_Main,w
  8026  05F8  00F6               	movwf	setLED@command
  8027  05F9  0864               	movf	Exception_Main@error,w
  8028  05FA  118A  256F         	fcall	_setLED
  8029                           
  8030                           ;Main_B1.c: 500: }
  8031                           ;Main_B1.c: 501: } else {
  8032  05FC  0008               	return
  8033  05FD                     l5181:	
  8034                           
  8035                           ;Main_B1.c: 502: if (error != 0) {
  8036  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  8037  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  8038  05FF  0864               	movf	Exception_Main@error,w
  8039  0600  1903               	btfsc	3,2
  8040  0601  0008               	return
  8041                           
  8042                           ;Main_B1.c: 503: myMain.Error_Run = 1;
  8043  0602  15A3               	bsf	_myMain+3,3
  8044                           
  8045                           ;Main_B1.c: 546: setLED(error, 111);
  8046  0603  306F               	movlw	111
  8047  0604  00DF               	movwf	??_Exception_Main
  8048  0605  085F               	movf	??_Exception_Main,w
  8049  0606  00F6               	movwf	setLED@command
  8050  0607  0864               	movf	Exception_Main@error,w
  8051  0608  118A  256F  118A   	fcall	_setLED
  8052                           
  8053                           ;Main_B1.c: 547: if (error == 3) {
  8054  060B  1283               	bcf	3,5	;RP0=0, select bank0
  8055  060C  1303               	bcf	3,6	;RP1=0, select bank0
  8056  060D  0864               	movf	Exception_Main@error,w
  8057  060E  3A03               	xorlw	3
  8058  060F  1D03               	skipz
  8059  0610  2E2C               	goto	l621
  8060                           
  8061                           ;Main_B1.c: 548: char status = getAll_Lights_Line();
  8062  0611  158A  23E5  118A   	fcall	_getAll_Lights_Line
  8063  0614  1283               	bcf	3,5	;RP0=0, select bank0
  8064  0615  1303               	bcf	3,6	;RP1=0, select bank0
  8065  0616  00DF               	movwf	??_Exception_Main
  8066  0617  085F               	movf	??_Exception_Main,w
  8067  0618  00E1               	movwf	Exception_Main@status
  8068                           
  8069                           ;Main_B1.c: 549: if (getLights_Status(status) == 1) {
  8070  0619  0861               	movf	Exception_Main@status,w
  8071  061A  158A  243B  118A   	fcall	_getLights_Status
  8072  061D  3A01               	xorlw	1
  8073  061E  1903               	btfsc	3,2
  8074  061F  2E23               	goto	l5191
  8075  0620  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0621  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0622  0008               	return
  8078  0623                     l5191:	
  8079                           
  8080                           ;Main_B1.c: 550: setLights_Trigger(status, 0);
  8081  0623  01F6               	clrf	setLights_Trigger@command
  8082  0624  1283               	bcf	3,5	;RP0=0, select bank0
  8083  0625  1303               	bcf	3,6	;RP1=0, select bank0
  8084  0626  0861               	movf	Exception_Main@status,w
  8085  0627  158A  24F2         	fcall	_setLights_Trigger
  8086  0629  1283               	bcf	3,5	;RP0=0, select bank0
  8087  062A  1303               	bcf	3,6	;RP1=0, select bank0
  8088  062B  0008               	return
  8089  062C                     l621:	
  8090                           ;Main_B1.c: 551: }
  8091                           ;Main_B1.c: 552: } else {
  8092                           
  8093                           
  8094                           ;Main_B1.c: 554: char count = 1;
  8095  062C  01E0               	clrf	Exception_Main@count
  8096  062D  0AE0               	incf	Exception_Main@count,f
  8097                           
  8098                           ;Main_B1.c: 562: for (int i = 0; i < count; i++) {
  8099  062E  01E2               	clrf	Exception_Main@i
  8100  062F  01E3               	clrf	Exception_Main@i+1
  8101  0630                     l5201:	
  8102  0630  0863               	movf	Exception_Main@i+1,w
  8103  0631  3A80               	xorlw	128
  8104  0632  00DF               	movwf	??_Exception_Main
  8105  0633  3080               	movlw	128
  8106  0634  025F               	subwf	??_Exception_Main,w
  8107  0635  1D03               	skipz
  8108  0636  2E39               	goto	u6875
  8109  0637  0860               	movf	Exception_Main@count,w
  8110  0638  0262               	subwf	Exception_Main@i,w
  8111  0639                     u6875:	
  8112  0639  1803               	btfsc	3,0
  8113  063A  2E56               	goto	u6870
  8114                           
  8115                           ;Main_B1.c: 563: if (getLights_Status(i + 1) == 1) {
  8116  063B  1283               	bcf	3,5	;RP0=0, select bank0
  8117  063C  1303               	bcf	3,6	;RP1=0, select bank0
  8118  063D  0862               	movf	Exception_Main@i,w
  8119  063E  3E01               	addlw	1
  8120  063F  158A  243B  118A   	fcall	_getLights_Status
  8121  0642  3A01               	xorlw	1
  8122  0643  1D03               	skipz
  8123  0644  2E4D               	goto	l5199
  8124                           
  8125                           ;Main_B1.c: 564: setLights_Trigger(i + 1, 0);
  8126  0645  01F6               	clrf	setLights_Trigger@command
  8127  0646  1283               	bcf	3,5	;RP0=0, select bank0
  8128  0647  1303               	bcf	3,6	;RP1=0, select bank0
  8129  0648  0862               	movf	Exception_Main@i,w
  8130  0649  3E01               	addlw	1
  8131  064A  158A  24F2  118A   	fcall	_setLights_Trigger
  8132  064D                     l5199:	
  8133  064D  3001               	movlw	1
  8134  064E  1283               	bcf	3,5	;RP0=0, select bank0
  8135  064F  1303               	bcf	3,6	;RP1=0, select bank0
  8136  0650  07E2               	addwf	Exception_Main@i,f
  8137  0651  1803               	skipnc
  8138  0652  0AE3               	incf	Exception_Main@i+1,f
  8139  0653  3000               	movlw	0
  8140  0654  07E3               	addwf	Exception_Main@i+1,f
  8141  0655  2E30               	goto	l5201
  8142  0656                     u6870:	
  8143  0656  1283               	bcf	3,5	;RP0=0, select bank0
  8144  0657  1303               	bcf	3,6	;RP1=0, select bank0
  8145  0658  0008               	return
  8146  0659                     __end_of_Exception_Main:	
  8147                           
  8148                           	psect	text52
  8149  0CF2                     __ptext52:	
  8150 ;; *************** function _setLights_Trigger *****************
  8151 ;; Defined at:
  8152 ;;		line 214 in file "../src/TriacRelay_B1.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  lights          1    wreg     unsigned char 
  8155 ;;  command         1    6[COMMON] unsigned char 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  lights          1    1[BANK0 ] unsigned char 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;		None               void
  8160 ;; Registers used:
  8161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8167 ;;      Params:         1       0       0       0
  8168 ;;      Locals:         0       1       0       0
  8169 ;;      Temps:          0       1       0       0
  8170 ;;      Totals:         1       2       0       0
  8171 ;;Total ram usage:        3 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:    3
  8174 ;; This function calls:
  8175 ;;		_LightsPointSelect
  8176 ;; This function is called by:
  8177 ;;		_Exception_Main
  8178 ;;		_PIR_Main
  8179 ;;		_setMain_Exception
  8180 ;;		_setLights_ErrorClose
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function _setLights_Trigger
  8186  0CF2                     _setLights_Trigger:	
  8187                           
  8188                           ;incstack = 0
  8189                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8190                           ;setLights_Trigger@lights stored from wreg
  8191  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  8192  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  8193  0CF4  00DA               	movwf	setLights_Trigger@lights
  8194                           
  8195                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  8196  0CF5  085A               	movf	setLights_Trigger@lights,w
  8197  0CF6  158A  23AC         	fcall	_LightsPointSelect
  8198                           
  8199                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  8200  0CF8  0878               	movf	_Lights,w
  8201  0CF9  0084               	movwf	4
  8202  0CFA  1383               	bcf	3,7	;select IRP bank0
  8203  0CFB  1580               	bsf	0,3
  8204                           
  8205                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  8206  0CFC  0876               	movf	setLights_Trigger@command,w
  8207  0CFD  3A01               	xorlw	1
  8208  0CFE  3000               	movlw	0
  8209  0CFF  1903               	skipnz
  8210  0D00  3001               	movlw	1
  8211  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  8212  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  8213  0D03  00D9               	movwf	??_setLights_Trigger
  8214  0D04  0878               	movf	_Lights,w
  8215  0D05  0084               	movwf	4
  8216  0D06  0ED9               	swapf	??_setLights_Trigger,f
  8217  0D07  0800               	movf	0,w
  8218  0D08  0659               	xorwf	??_setLights_Trigger,w
  8219  0D09  39EF               	andlw	-17
  8220  0D0A  0659               	xorwf	??_setLights_Trigger,w
  8221  0D0B  0080               	movwf	0
  8222  0D0C  0008               	return
  8223  0D0D                     __end_of_setLights_Trigger:	
  8224                           
  8225                           	psect	text53
  8226  056F                     __ptext53:	
  8227 ;; *************** function _setLED *****************
  8228 ;; Defined at:
  8229 ;;		line 76 in file "../src/LED_B1.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  led             1    wreg     unsigned char 
  8232 ;;  command         1    6[COMMON] unsigned char 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;  led             1    0[BANK0 ] unsigned char 
  8235 ;; Return value:  Size  Location     Type
  8236 ;;		None               void
  8237 ;; Registers used:
  8238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8244 ;;      Params:         1       0       0       0
  8245 ;;      Locals:         0       1       0       0
  8246 ;;      Temps:          0       0       0       0
  8247 ;;      Totals:         1       1       0       0
  8248 ;;Total ram usage:        2 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    3
  8251 ;; This function calls:
  8252 ;;		_LedPointSelect
  8253 ;; This function is called by:
  8254 ;;		_setLED_Initialization
  8255 ;;		_setPIRLED_Main
  8256 ;;		_Exception_Main
  8257 ;;		_PIR_Main
  8258 ;;		_setMain_Exception
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function _setLED
  8264  056F                     _setLED:	
  8265                           
  8266                           ;incstack = 0
  8267                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8268                           ;setLED@led stored from wreg
  8269  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8270  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8271  0571  00D9               	movwf	setLED@led
  8272                           
  8273                           ;LED_B1.c: 77: LedPointSelect(led);
  8274  0572  0859               	movf	setLED@led,w
  8275  0573  158A  24BE  118A   	fcall	_LedPointSelect
  8276                           
  8277                           ;LED_B1.c: 78: if (command == 0) {
  8278  0576  08F6               	movf	setLED@command,f
  8279  0577  1D03               	skipz
  8280  0578  2D87               	goto	l4323
  8281                           
  8282                           ;LED_B1.c: 80: if (led == 1) {
  8283  0579  1283               	bcf	3,5	;RP0=0, select bank0
  8284  057A  1303               	bcf	3,6	;RP1=0, select bank0
  8285  057B  0859               	movf	setLED@led,w
  8286  057C  3A01               	xorlw	1
  8287  057D  1903               	btfsc	3,2
  8288                           
  8289                           ;LED_B1.c: 84: RB4 = 1;
  8290  057E  1606               	bsf	6,4	;volatile
  8291                           
  8292                           ;LED_B1.c: 86: }
  8293                           ;LED_B1.c: 89: if (led == 2) {
  8294  057F  0859               	movf	setLED@led,w
  8295  0580  3A02               	xorlw	2
  8296  0581  1903               	btfsc	3,2
  8297                           
  8298                           ;LED_B1.c: 93: RB5 = 1;
  8299  0582  1686               	bsf	6,5	;volatile
  8300                           
  8301                           ;LED_B1.c: 95: }
  8302                           ;LED_B1.c: 107: if (led == 99) {
  8303  0583  0859               	movf	setLED@led,w
  8304  0584  3A63               	xorlw	99
  8305  0585  1903               	btfsc	3,2
  8306                           
  8307                           ;LED_B1.c: 111: RB3 = 1;
  8308  0586  1586               	bsf	6,3	;volatile
  8309  0587                     l4323:	
  8310                           
  8311                           ;LED_B1.c: 113: }
  8312                           ;LED_B1.c: 115: }
  8313                           ;LED_B1.c: 116: if (command == 1) {
  8314  0587  0876               	movf	setLED@command,w
  8315  0588  3A01               	xorlw	1
  8316  0589  1D03               	skipz
  8317  058A  2D99               	goto	l4337
  8318                           
  8319                           ;LED_B1.c: 118: if (led == 1) {
  8320  058B  1283               	bcf	3,5	;RP0=0, select bank0
  8321  058C  1303               	bcf	3,6	;RP1=0, select bank0
  8322  058D  0859               	movf	setLED@led,w
  8323  058E  3A01               	xorlw	1
  8324  058F  1903               	btfsc	3,2
  8325                           
  8326                           ;LED_B1.c: 122: RB4 = 0;
  8327  0590  1206               	bcf	6,4	;volatile
  8328                           
  8329                           ;LED_B1.c: 124: }
  8330                           ;LED_B1.c: 127: if (led == 2) {
  8331  0591  0859               	movf	setLED@led,w
  8332  0592  3A02               	xorlw	2
  8333  0593  1903               	btfsc	3,2
  8334                           
  8335                           ;LED_B1.c: 131: RB5 = 0;
  8336  0594  1286               	bcf	6,5	;volatile
  8337                           
  8338                           ;LED_B1.c: 133: }
  8339                           ;LED_B1.c: 145: if (led == 99) {
  8340  0595  0859               	movf	setLED@led,w
  8341  0596  3A63               	xorlw	99
  8342  0597  1903               	btfsc	3,2
  8343                           
  8344                           ;LED_B1.c: 149: RB3 = 0;
  8345  0598  1186               	bcf	6,3	;volatile
  8346  0599                     l4337:	
  8347                           
  8348                           ;LED_B1.c: 151: }
  8349                           ;LED_B1.c: 153: }
  8350                           ;LED_B1.c: 154: if (command == 10) {
  8351  0599  0876               	movf	setLED@command,w
  8352  059A  3A0A               	xorlw	10
  8353  059B  1D03               	skipz
  8354  059C  2DB6               	goto	l4355
  8355                           
  8356                           ;LED_B1.c: 155: LED->GO = 0;
  8357  059D  0877               	movf	_LED,w
  8358  059E  0084               	movwf	4
  8359  059F  1383               	bcf	3,7	;select IRP bank0
  8360  05A0  1080               	bcf	0,1
  8361                           
  8362                           ;LED_B1.c: 156: LED->Time = 0;
  8363  05A1  0A77               	incf	_LED,w
  8364  05A2  0084               	movwf	4
  8365  05A3  0180               	clrf	0
  8366  05A4  0A84               	incf	4,f
  8367  05A5  0180               	clrf	0
  8368                           
  8369                           ;LED_B1.c: 158: if (led == 1) {
  8370  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  8371  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  8372  05A8  0859               	movf	setLED@led,w
  8373  05A9  3A01               	xorlw	1
  8374  05AA  1D03               	skipz
  8375  05AB  2DAE               	goto	l4347
  8376                           
  8377                           ;LED_B1.c: 162: RB4 = 1;
  8378  05AC  1606               	bsf	6,4	;volatile
  8379                           
  8380                           ;LED_B1.c: 164: }
  8381  05AD  2DB2               	goto	l4351
  8382  05AE                     l4347:	
  8383                           
  8384                           ;LED_B1.c: 167: else if (led == 2) {
  8385  05AE  0859               	movf	setLED@led,w
  8386  05AF  3A02               	xorlw	2
  8387  05B0  1903               	btfsc	3,2
  8388                           
  8389                           ;LED_B1.c: 171: RB5 = 1;
  8390  05B1  1686               	bsf	6,5	;volatile
  8391  05B2                     l4351:	
  8392                           
  8393                           ;LED_B1.c: 173: }
  8394                           ;LED_B1.c: 185: if (led == 99) {
  8395  05B2  0859               	movf	setLED@led,w
  8396  05B3  3A63               	xorlw	99
  8397  05B4  1903               	btfsc	3,2
  8398                           
  8399                           ;LED_B1.c: 189: RB3 = 1;
  8400  05B5  1586               	bsf	6,3	;volatile
  8401  05B6                     l4355:	
  8402                           
  8403                           ;LED_B1.c: 191: }
  8404                           ;LED_B1.c: 193: }
  8405                           ;LED_B1.c: 194: if (command == 11) {
  8406  05B6  0876               	movf	setLED@command,w
  8407  05B7  3A0B               	xorlw	11
  8408  05B8  1D03               	skipz
  8409  05B9  2DBE               	goto	l4359
  8410                           
  8411                           ;LED_B1.c: 195: LED->GO = 1;
  8412  05BA  0877               	movf	_LED,w
  8413  05BB  0084               	movwf	4
  8414  05BC  1383               	bcf	3,7	;select IRP bank0
  8415  05BD  1480               	bsf	0,1
  8416  05BE                     l4359:	
  8417                           
  8418                           ;LED_B1.c: 196: }
  8419                           ;LED_B1.c: 198: if (command == 111) {
  8420  05BE  0876               	movf	setLED@command,w
  8421  05BF  3A6F               	xorlw	111
  8422  05C0  1D03               	skipz
  8423  05C1  2DDE               	goto	l4385
  8424                           
  8425                           ;LED_B1.c: 199: PIRLED.Count = 0;
  8426  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  8427  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  8428  05C4  01B1               	clrf	_PIRLED+1
  8429                           
  8430                           ;LED_B1.c: 200: PIRLED.Time = 0;
  8431  05C5  01B2               	clrf	_PIRLED+2
  8432  05C6  01B3               	clrf	_PIRLED+3
  8433                           
  8434                           ;LED_B1.c: 201: PIRLED.status = 0;
  8435  05C7  1230               	bcf	_PIRLED,4
  8436                           
  8437                           ;LED_B1.c: 202: PIRLED.GO = 1;
  8438  05C8  1430               	bsf	_PIRLED,0
  8439                           
  8440                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  8441  05C9  10B0               	bcf	_PIRLED,1
  8442                           
  8443                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  8444  05CA  1130               	bcf	_PIRLED,2
  8445                           
  8446                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  8447  05CB  11B0               	bcf	_PIRLED,3
  8448                           
  8449                           ;LED_B1.c: 206: if (led == 1) {
  8450  05CC  0859               	movf	setLED@led,w
  8451  05CD  3A01               	xorlw	1
  8452  05CE  1D03               	skipz
  8453  05CF  2DD2               	goto	l4377
  8454                           
  8455                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  8456  05D0  14B0               	bsf	_PIRLED,1
  8457                           
  8458                           ;LED_B1.c: 208: } else if (led == 2) {
  8459  05D1  0008               	return
  8460  05D2                     l4377:	
  8461  05D2  0859               	movf	setLED@led,w
  8462  05D3  3A02               	xorlw	2
  8463  05D4  1D03               	skipz
  8464  05D5  2DD8               	goto	l4381
  8465                           
  8466                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  8467  05D6  1530               	bsf	_PIRLED,2
  8468                           
  8469                           ;LED_B1.c: 210: } else if (led == 3) {
  8470  05D7  0008               	return
  8471  05D8                     l4381:	
  8472  05D8  0859               	movf	setLED@led,w
  8473  05D9  3A03               	xorlw	3
  8474  05DA  1D03               	skipz
  8475  05DB  0008               	return
  8476                           
  8477                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  8478  05DC  15B0               	bsf	_PIRLED,3
  8479                           
  8480                           ;LED_B1.c: 212: }
  8481                           ;LED_B1.c: 213: } else if (command == 110) {
  8482  05DD  0008               	return
  8483  05DE                     l4385:	
  8484  05DE  0876               	movf	setLED@command,w
  8485  05DF  3A6E               	xorlw	110
  8486  05E0  1D03               	skipz
  8487  05E1  0008               	return
  8488                           
  8489                           ;LED_B1.c: 214: PIRLED.GO = 0;
  8490  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  8491  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  8492  05E4  1030               	bcf	_PIRLED,0
  8493  05E5  0008               	return
  8494  05E6                     __end_of_setLED:	
  8495                           
  8496                           	psect	text54
  8497  0CBE                     __ptext54:	
  8498 ;; *************** function _LedPointSelect *****************
  8499 ;; Defined at:
  8500 ;;		line 7 in file "../src/LED_B1.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  led             1    wreg     unsigned char 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;  led             1    5[COMMON] unsigned char 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;		None               void
  8507 ;; Registers used:
  8508 ;;		wreg
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8514 ;;      Params:         0       0       0       0
  8515 ;;      Locals:         1       0       0       0
  8516 ;;      Temps:          1       0       0       0
  8517 ;;      Totals:         2       0       0       0
  8518 ;;Total ram usage:        2 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; Hardware stack levels required when called:    2
  8521 ;; This function calls:
  8522 ;;		Nothing
  8523 ;; This function is called by:
  8524 ;;		_setLED_Initialization
  8525 ;;		_setLED
  8526 ;;		_setLED_Main
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           
  8531                           ;psect for function _LedPointSelect
  8532  0CBE                     _LedPointSelect:	
  8533                           
  8534                           ;incstack = 0
  8535                           ; Regs used in _LedPointSelect: [wreg]
  8536                           ;LedPointSelect@led stored from wreg
  8537  0CBE  00F5               	movwf	LedPointSelect@led
  8538                           
  8539                           ;LED_B1.c: 9: if (led == 1) {
  8540  0CBF  0875               	movf	LedPointSelect@led,w
  8541  0CC0  3A01               	xorlw	1
  8542  0CC1  1D03               	skipz
  8543  0CC2  2CC7               	goto	l244
  8544                           
  8545                           ;LED_B1.c: 10: LED = &VarLED1;
  8546  0CC3  3051               	movlw	_VarLED1& (0+255)
  8547  0CC4  00F4               	movwf	??_LedPointSelect
  8548  0CC5  0874               	movf	??_LedPointSelect,w
  8549  0CC6  00F7               	movwf	_LED
  8550  0CC7                     l244:	
  8551                           
  8552                           ;LED_B1.c: 11: }
  8553                           ;LED_B1.c: 14: if (led == 2) {
  8554  0CC7  0875               	movf	LedPointSelect@led,w
  8555  0CC8  3A02               	xorlw	2
  8556  0CC9  1D03               	skipz
  8557  0CCA  2CCF               	goto	l245
  8558                           
  8559                           ;LED_B1.c: 15: LED = &VarLED2;
  8560  0CCB  3055               	movlw	_VarLED2& (0+255)
  8561  0CCC  00F4               	movwf	??_LedPointSelect
  8562  0CCD  0874               	movf	??_LedPointSelect,w
  8563  0CCE  00F7               	movwf	_LED
  8564  0CCF                     l245:	
  8565                           
  8566                           ;LED_B1.c: 16: }
  8567                           ;LED_B1.c: 24: if (led == 99) {
  8568  0CCF  0875               	movf	LedPointSelect@led,w
  8569  0CD0  3A63               	xorlw	99
  8570  0CD1  1D03               	skipz
  8571  0CD2  0008               	return
  8572                           
  8573                           ;LED_B1.c: 25: LED = &VarErrLED;
  8574  0CD3  304D               	movlw	_VarErrLED& (0+255)
  8575  0CD4  00F4               	movwf	??_LedPointSelect
  8576  0CD5  0874               	movf	??_LedPointSelect,w
  8577  0CD6  00F7               	movwf	_LED
  8578  0CD7  0008               	return
  8579  0CD8                     __end_of_LedPointSelect:	
  8580                           
  8581                           	psect	text55
  8582  0E5E                     __ptext55:	
  8583 ;; *************** function _getMain_All_Error_Status *****************
  8584 ;; Defined at:
  8585 ;;		line 404 in file "../src/Main_B1.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  command         1    wreg     unsigned char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  command         1    4[BANK0 ] unsigned char 
  8590 ;;  status          1    5[BANK0 ] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      unsigned char 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8600 ;;      Params:         0       0       0       0
  8601 ;;      Locals:         0       6       0       0
  8602 ;;      Temps:          1       0       0       0
  8603 ;;      Totals:         1       6       0       0
  8604 ;;Total ram usage:        7 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    2
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_Exception_Main
  8611 ;;		_Load_Main
  8612 ;;		_setTemp_Main
  8613 ;;		_PIR_Main
  8614 ;;		_setSYSC_Main
  8615 ;;		_Lights_Main
  8616 ;;		_setLights
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           
  8621                           ;psect for function _getMain_All_Error_Status
  8622  0E5E                     _getMain_All_Error_Status:	
  8623                           
  8624                           ;incstack = 0
  8625                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  8626                           ;getMain_All_Error_Status@command stored from wreg
  8627  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  8628  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  8629  0E60  00DD               	movwf	getMain_All_Error_Status@command
  8630                           
  8631                           ;Main_B1.c: 405: char status = 0;
  8632  0E61  01DE               	clrf	getMain_All_Error_Status@status
  8633                           
  8634                           ;Main_B1.c: 408: if (status == 0 && command != 1) {
  8635  0E62  08DE               	movf	getMain_All_Error_Status@status,f
  8636  0E63  1D03               	skipz
  8637  0E64  2E6D               	goto	l4279
  8638  0E65  085D               	movf	getMain_All_Error_Status@command,w
  8639  0E66  3A01               	xorlw	1
  8640  0E67  1903               	skipnz
  8641  0E68  2E6D               	goto	l4279
  8642                           
  8643                           ;Main_B1.c: 409: status = SYSC.ERROR == 1 ? 1 : 0;
  8644  0E69  3000               	movlw	0
  8645  0E6A  18A6               	btfsc	_SYSC,1
  8646  0E6B  3001               	movlw	1
  8647  0E6C  00DE               	movwf	getMain_All_Error_Status@status
  8648  0E6D                     l4279:	
  8649                           
  8650                           ;Main_B1.c: 410: }
  8651                           ;Main_B1.c: 416: if (status == 0 && command != 2) {
  8652  0E6D  08DE               	movf	getMain_All_Error_Status@status,f
  8653  0E6E  1D03               	skipz
  8654  0E6F  2E81               	goto	l4289
  8655  0E70  085D               	movf	getMain_All_Error_Status@command,w
  8656  0E71  3A02               	xorlw	2
  8657  0E72  1903               	skipnz
  8658  0E73  2E81               	goto	l4289
  8659                           
  8660                           ;Main_B1.c: 417: status = Temp.ERROR == 1 ? 2 : 0;
  8661  0E74  18BA               	btfsc	_Temp,1
  8662  0E75  2E79               	goto	l4287
  8663  0E76  01D9               	clrf	_getMain_All_Error_Status$2238
  8664  0E77  01DA               	clrf	_getMain_All_Error_Status$2238+1
  8665  0E78  2E7D               	goto	l602
  8666  0E79                     l4287:	
  8667  0E79  3002               	movlw	2
  8668  0E7A  00D9               	movwf	_getMain_All_Error_Status$2238
  8669  0E7B  3000               	movlw	0
  8670  0E7C  00DA               	movwf	_getMain_All_Error_Status$2238+1
  8671  0E7D                     l602:	
  8672  0E7D  0859               	movf	_getMain_All_Error_Status$2238,w
  8673  0E7E  00F4               	movwf	??_getMain_All_Error_Status
  8674  0E7F  0874               	movf	??_getMain_All_Error_Status,w
  8675  0E80  00DE               	movwf	getMain_All_Error_Status@status
  8676  0E81                     l4289:	
  8677                           
  8678                           ;Main_B1.c: 418: }
  8679                           ;Main_B1.c: 423: if (status == 0 && command != 3) {
  8680  0E81  08DE               	movf	getMain_All_Error_Status@status,f
  8681  0E82  1D03               	skipz
  8682  0E83  2E9A               	goto	l603
  8683  0E84  085D               	movf	getMain_All_Error_Status@command,w
  8684  0E85  3A03               	xorlw	3
  8685  0E86  1903               	skipnz
  8686  0E87  2E9A               	goto	l603
  8687                           
  8688                           ;Main_B1.c: 424: status = Load.ERROR == 1 ? 3 : 0;
  8689  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  8690  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  8691  0E8A  1ACE               	btfsc	_Load^(0+128),5
  8692  0E8B  2E91               	goto	l4297
  8693  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  8694  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  8695  0E8E  01DB               	clrf	_getMain_All_Error_Status$2239
  8696  0E8F  01DC               	clrf	_getMain_All_Error_Status$2239+1
  8697  0E90  2E96               	goto	l607
  8698  0E91                     l4297:	
  8699  0E91  3003               	movlw	3
  8700  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  8701  0E93  00DB               	movwf	_getMain_All_Error_Status$2239
  8702  0E94  3000               	movlw	0
  8703  0E95  00DC               	movwf	_getMain_All_Error_Status$2239+1
  8704  0E96                     l607:	
  8705  0E96  085B               	movf	_getMain_All_Error_Status$2239,w
  8706  0E97  00F4               	movwf	??_getMain_All_Error_Status
  8707  0E98  0874               	movf	??_getMain_All_Error_Status,w
  8708  0E99  00DE               	movwf	getMain_All_Error_Status@status
  8709  0E9A                     l603:	
  8710                           
  8711                           ;Main_B1.c: 425: }
  8712                           ;Main_B1.c: 441: return status;
  8713  0E9A  085E               	movf	getMain_All_Error_Status@status,w
  8714  0E9B  0008               	return
  8715  0E9C                     __end_of_getMain_All_Error_Status:	
  8716                           
  8717                           	psect	text56
  8718  0C3B                     __ptext56:	
  8719 ;; *************** function _getLights_Status *****************
  8720 ;; Defined at:
  8721 ;;		line 207 in file "../src/TriacRelay_B1.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  lights          1    wreg     unsigned char 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  lights          1    0[BANK0 ] unsigned char 
  8726 ;;  status          1    1[BANK0 ] unsigned char 
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      unsigned char 
  8729 ;; Registers used:
  8730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8736 ;;      Params:         0       0       0       0
  8737 ;;      Locals:         0       2       0       0
  8738 ;;      Temps:          0       0       0       0
  8739 ;;      Totals:         0       2       0       0
  8740 ;;Total ram usage:        2 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:    3
  8743 ;; This function calls:
  8744 ;;		_LightsPointSelect
  8745 ;; This function is called by:
  8746 ;;		_getMain_LightsStatus
  8747 ;;		_Exception_Main
  8748 ;;		_PIR_Main
  8749 ;;		_setMain_Exception
  8750 ;;		_setLights_ErrorClose
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _getLights_Status
  8756  0C3B                     _getLights_Status:	
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8760                           ;getLights_Status@lights stored from wreg
  8761  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  8762  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  8763  0C3D  00D9               	movwf	getLights_Status@lights
  8764                           
  8765                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  8766  0C3E  0859               	movf	getLights_Status@lights,w
  8767  0C3F  158A  23AC         	fcall	_LightsPointSelect
  8768                           
  8769                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  8770  0C41  0878               	movf	_Lights,w
  8771  0C42  0084               	movwf	4
  8772  0C43  3000               	movlw	0
  8773  0C44  1383               	bcf	3,7	;select IRP bank0
  8774  0C45  1900               	btfsc	0,2
  8775  0C46  3001               	movlw	1
  8776  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  8777  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  8778  0C49  00DA               	movwf	getLights_Status@status
  8779                           
  8780                           ;TriacRelay_B1.c: 210: return status;
  8781  0C4A  085A               	movf	getLights_Status@status,w
  8782  0C4B  0008               	return
  8783  0C4C                     __end_of_getLights_Status:	
  8784                           
  8785                           	psect	text57
  8786  0BE5                     __ptext57:	
  8787 ;; *************** function _getAll_Lights_Line *****************
  8788 ;; Defined at:
  8789 ;;		line 236 in file "../src/TriacRelay_B1.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;		None
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  line            1    6[COMMON] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  1    wreg      unsigned char 
  8796 ;; Registers used:
  8797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8803 ;;      Params:         0       0       0       0
  8804 ;;      Locals:         1       0       0       0
  8805 ;;      Temps:          0       0       0       0
  8806 ;;      Totals:         1       0       0       0
  8807 ;;Total ram usage:        1 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    3
  8810 ;; This function calls:
  8811 ;;		_LightsPointSelect
  8812 ;; This function is called by:
  8813 ;;		_Exception_Main
  8814 ;;		_setMain_Exception
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           
  8819                           ;psect for function _getAll_Lights_Line
  8820  0BE5                     _getAll_Lights_Line:	
  8821                           
  8822                           ;TriacRelay_B1.c: 237: char line = 0;
  8823                           
  8824                           ;incstack = 0
  8825                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8826  0BE5  01F6               	clrf	getAll_Lights_Line@line
  8827                           
  8828                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  8829  0BE6  3001               	movlw	1
  8830  0BE7  158A  23AC         	fcall	_LightsPointSelect
  8831                           
  8832                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  8833  0BE9  0A78               	incf	_Lights,w
  8834  0BEA  0084               	movwf	4
  8835  0BEB  3000               	movlw	0
  8836  0BEC  1383               	bcf	3,7	;select IRP bank0
  8837  0BED  1800               	btfsc	0,0
  8838  0BEE  3001               	movlw	1
  8839  0BEF  00F6               	movwf	getAll_Lights_Line@line
  8840                           
  8841                           ;TriacRelay_B1.c: 250: return line;
  8842  0BF0  0876               	movf	getAll_Lights_Line@line,w
  8843  0BF1  0008               	return
  8844  0BF2                     __end_of_getAll_Lights_Line:	
  8845                           
  8846                           	psect	text58
  8847  0BAC                     __ptext58:	
  8848 ;; *************** function _LightsPointSelect *****************
  8849 ;; Defined at:
  8850 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  lights          1    wreg     unsigned char 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  lights          1    5[COMMON] unsigned char 
  8855 ;; Return value:  Size  Location     Type
  8856 ;;		None               void
  8857 ;; Registers used:
  8858 ;;		wreg
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8864 ;;      Params:         0       0       0       0
  8865 ;;      Locals:         1       0       0       0
  8866 ;;      Temps:          1       0       0       0
  8867 ;;      Totals:         2       0       0       0
  8868 ;;Total ram usage:        2 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    2
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_setLights_Initialization
  8875 ;;		_setLights_Main
  8876 ;;		_setLights
  8877 ;;		_Lights_Control
  8878 ;;		_getLights_Status
  8879 ;;		_setLights_Trigger
  8880 ;;		_setLights_Line
  8881 ;;		_getAll_Lights_Line
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           
  8886                           ;psect for function _LightsPointSelect
  8887  0BAC                     _LightsPointSelect:	
  8888                           
  8889                           ;incstack = 0
  8890                           ; Regs used in _LightsPointSelect: [wreg]
  8891                           ;LightsPointSelect@lights stored from wreg
  8892  0BAC  00F5               	movwf	LightsPointSelect@lights
  8893                           
  8894                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  8895  0BAD  0875               	movf	LightsPointSelect@lights,w
  8896  0BAE  3A01               	xorlw	1
  8897  0BAF  1D03               	skipz
  8898  0BB0  0008               	return
  8899                           
  8900                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  8901  0BB1  3046               	movlw	_Lights1& (0+255)
  8902  0BB2  00F4               	movwf	??_LightsPointSelect
  8903  0BB3  0874               	movf	??_LightsPointSelect,w
  8904  0BB4  00F8               	movwf	_Lights
  8905  0BB5  0008               	return
  8906  0BB6                     __end_of_LightsPointSelect:	
  8907                           
  8908                           	psect	text59
  8909  0BF2                     __ptext59:	
  8910 ;; *************** function _DetectSYSC_Signal *****************
  8911 ;; Defined at:
  8912 ;;		line 51 in file "../src/SYSC_B1.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;		None               void
  8919 ;; Registers used:
  8920 ;;		status,2
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8926 ;;      Params:         0       0       0       0
  8927 ;;      Locals:         0       0       0       0
  8928 ;;      Temps:          0       0       0       0
  8929 ;;      Totals:         0       0       0       0
  8930 ;;Total ram usage:        0 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    2
  8933 ;; This function calls:
  8934 ;;		Nothing
  8935 ;; This function is called by:
  8936 ;;		_main
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           
  8941                           ;psect for function _DetectSYSC_Signal
  8942  0BF2                     _DetectSYSC_Signal:	
  8943                           
  8944                           ;SYSC_B1.c: 52: if (SYSC.Signal == 0) {
  8945                           
  8946                           ;incstack = 0
  8947                           ; Regs used in _DetectSYSC_Signal: [status,2]
  8948  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  8949  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  8950  0BF4  19A6               	btfsc	_SYSC,3
  8951  0BF5  2BFC               	goto	l1075
  8952                           
  8953                           ;SYSC_B1.c: 53: if (RA5 == 1) {
  8954  0BF6  1E85               	btfss	5,5	;volatile
  8955  0BF7  0008               	return
  8956                           
  8957                           ;SYSC_B1.c: 54: SYSC.Signal = 1;
  8958  0BF8  15A6               	bsf	_SYSC,3
  8959                           
  8960                           ;SYSC_B1.c: 55: SYSC.Timer = 0;
  8961  0BF9  01A7               	clrf	_SYSC+1
  8962  0BFA  01A8               	clrf	_SYSC+2
  8963                           
  8964                           ;SYSC_B1.c: 56: }
  8965                           ;SYSC_B1.c: 57: } else {
  8966  0BFB  0008               	return
  8967  0BFC                     l1075:	
  8968                           
  8969                           ;SYSC_B1.c: 58: if (RA5 == 0) {
  8970  0BFC  1A85               	btfsc	5,5	;volatile
  8971  0BFD  0008               	return
  8972                           
  8973                           ;SYSC_B1.c: 59: SYSC.Signal = 0;
  8974  0BFE  11A6               	bcf	_SYSC,3
  8975  0BFF  0008               	return
  8976  0C00                     __end_of_DetectSYSC_Signal:	
  8977                           
  8978                           	psect	text60
  8979  0DEF                     __ptext60:	
  8980 ;; *************** function _CDS_Main *****************
  8981 ;; Defined at:
  8982 ;;		line 11 in file "../src/CDS_B1.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;		None
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;		None               void
  8989 ;; Registers used:
  8990 ;;		wreg, status,2, status,0
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8996 ;;      Params:         0       0       0       0
  8997 ;;      Locals:         0       0       0       0
  8998 ;;      Temps:          3       0       0       0
  8999 ;;      Totals:         3       0       0       0
  9000 ;;Total ram usage:        3 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:    2
  9003 ;; This function calls:
  9004 ;;		Nothing
  9005 ;; This function is called by:
  9006 ;;		_main
  9007 ;; This function uses a non-reentrant model
  9008 ;;
  9009                           
  9010                           
  9011                           ;psect for function _CDS_Main
  9012  0DEF                     _CDS_Main:	
  9013                           
  9014                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9015                           
  9016                           ;incstack = 0
  9017                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9018  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  9019  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  9020  0DF1  1C2B               	btfss	__CDS,0
  9021  0DF2  0008               	return
  9022                           
  9023                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9024  0DF3  18AB               	btfsc	__CDS,1
  9025  0DF4  2E02               	goto	l111
  9026                           
  9027                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9028  0DF5  19AB               	btfsc	__CDS,3
  9029  0DF6  0008               	return
  9030                           
  9031                           ;CDS_B1.c: 16: _CDS.Time++;
  9032  0DF7  3001               	movlw	1
  9033  0DF8  00F4               	movwf	??_CDS_Main
  9034  0DF9  0874               	movf	??_CDS_Main,w
  9035  0DFA  07AC               	addwf	__CDS+1,f
  9036                           
  9037                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  9038  0DFB  300A               	movlw	10
  9039  0DFC  022C               	subwf	__CDS+1,w
  9040  0DFD  1C03               	skipc
  9041  0DFE  0008               	return
  9042                           
  9043                           ;CDS_B1.c: 18: {
  9044                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9045  0DFF  01AC               	clrf	__CDS+1
  9046                           
  9047                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9048  0E00  15AB               	bsf	__CDS,3
  9049                           
  9050                           ;CDS_B1.c: 21: }
  9051                           ;CDS_B1.c: 22: }
  9052                           ;CDS_B1.c: 23: } else {
  9053  0E01  0008               	return
  9054  0E02                     l111:	
  9055                           
  9056                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9057  0E02  1CAB               	btfss	__CDS,1
  9058  0E03  0008               	return
  9059                           
  9060                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9061  0E04  10AB               	bcf	__CDS,1
  9062                           
  9063                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9064  0E05  1A2B               	btfsc	__CDS,4
  9065  0E06  2E0D               	goto	l3545
  9066                           
  9067                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9068  0E07  082D               	movf	__CDS+2,w
  9069  0E08  022E               	subwf	__CDS+3,w
  9070  0E09  1C03               	skipc
  9071  0E0A  0008               	return
  9072                           
  9073                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9074  0E0B  162B               	bsf	__CDS,4
  9075                           
  9076                           ;CDS_B1.c: 29: }
  9077                           ;CDS_B1.c: 30: } else {
  9078  0E0C  0008               	return
  9079  0E0D                     l3545:	
  9080                           
  9081                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9082  0E0D  082D               	movf	__CDS+2,w
  9083  0E0E  3E9C               	addlw	156
  9084  0E0F  00F4               	movwf	??_CDS_Main
  9085  0E10  30FF               	movlw	255
  9086  0E11  1803               	skipnc
  9087  0E12  3000               	movlw	0
  9088  0E13  00F5               	movwf	??_CDS_Main+1
  9089  0E14  0875               	movf	??_CDS_Main+1,w
  9090  0E15  3A80               	xorlw	128
  9091  0E16  00F6               	movwf	??_CDS_Main+2
  9092  0E17  3080               	movlw	128
  9093  0E18  0276               	subwf	??_CDS_Main+2,w
  9094  0E19  1D03               	skipz
  9095  0E1A  2E1D               	goto	u3545
  9096  0E1B  082E               	movf	__CDS+3,w
  9097  0E1C  0274               	subwf	??_CDS_Main,w
  9098  0E1D                     u3545:	
  9099  0E1D  1C03               	skipc
  9100  0E1E  0008               	return
  9101                           
  9102                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9103  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  9104  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  9105  0E21  122B               	bcf	__CDS,4
  9106  0E22  0008               	return
  9107  0E23                     __end_of_CDS_Main:	
  9108                           
  9109                           	psect	text61
  9110  0B63                     __ptext61:	
  9111 ;; *************** function _CDS_Initialization *****************
  9112 ;; Defined at:
  9113 ;;		line 7 in file "../src/CDS_B1.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;		None
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;		None
  9118 ;; Return value:  Size  Location     Type
  9119 ;;		None               void
  9120 ;; Registers used:
  9121 ;;		None
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9127 ;;      Params:         0       0       0       0
  9128 ;;      Locals:         0       0       0       0
  9129 ;;      Temps:          0       0       0       0
  9130 ;;      Totals:         0       0       0       0
  9131 ;;Total ram usage:        0 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:    2
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_main
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           
  9142                           ;psect for function _CDS_Initialization
  9143  0B63                     _CDS_Initialization:	
  9144                           
  9145                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9146                           
  9147                           ;incstack = 0
  9148                           ; Regs used in _CDS_Initialization: []
  9149  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  9150  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  9151  0B65  142B               	bsf	__CDS,0
  9152  0B66  0008               	return
  9153  0B67                     __end_of_CDS_Initialization:	
  9154                           
  9155                           	psect	text62
  9156  0C2B                     __ptext62:	
  9157 ;; *************** function _ISR *****************
  9158 ;; Defined at:
  9159 ;;		line 107 in file "../src/MCU_B1.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;		None               void
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0, pclath, cstack
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9173 ;;      Params:         0       0       0       0
  9174 ;;      Locals:         0       0       0       0
  9175 ;;      Temps:          4       0       0       0
  9176 ;;      Totals:         4       0       0       0
  9177 ;;Total ram usage:        4 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    1
  9180 ;; This function calls:
  9181 ;;		_TMR1_ISR
  9182 ;; This function is called by:
  9183 ;;		Interrupt level 1
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           
  9188                           ;psect for function _ISR
  9189  0C2B                     _ISR:	
  9190                           
  9191                           ;MCU_B1.c: 109: ;;
  9192                           ;MCU_B1.c: 111: ;;
  9193                           ;MCU_B1.c: 113: TMR1_ISR();
  9194  0C2B  158A  250D  158A   	fcall	_TMR1_ISR
  9195  0C2E  0873               	movf	??_ISR+3,w
  9196  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  9197  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  9198  0C31  00FF               	movwf	127
  9199  0C32  0872               	movf	??_ISR+2,w
  9200  0C33  008A               	movwf	10
  9201  0C34  0871               	movf	??_ISR+1,w
  9202  0C35  0084               	movwf	4
  9203  0C36  0E70               	swapf	??_ISR^(0+-128),w
  9204  0C37  0083               	movwf	3
  9205  0C38  0EFE               	swapf	126,f
  9206  0C39  0E7E               	swapf	126,w
  9207  0C3A  0009               	retfie
  9208  0C3B                     __end_of_ISR:	
  9209                           
  9210                           	psect	intentry
  9211  0004                     __pintentry:	
  9212                           ;incstack = 0
  9213                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9214                           
  9215  0004                     interrupt_function:	
  9216  007E                     saved_w	set	btemp
  9217  0004  00FE               	movwf	btemp
  9218  0005  0E03               	swapf	3,w
  9219  0006  00F0               	movwf	??_ISR
  9220  0007  0804               	movf	4,w
  9221  0008  00F1               	movwf	??_ISR+1
  9222  0009  080A               	movf	10,w
  9223  000A  00F2               	movwf	??_ISR+2
  9224  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9225  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9226  000D  087F               	movf	btemp+1,w
  9227  000E  00F3               	movwf	??_ISR+3
  9228  000F  158A  2C2B         	ljmp	_ISR
  9229                           
  9230                           	psect	text63
  9231  0D0D                     __ptext63:	
  9232 ;; *************** function _TMR1_ISR *****************
  9233 ;; Defined at:
  9234 ;;		line 209 in file "../src/MCU_B1.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;		None
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;		None               void
  9241 ;; Registers used:
  9242 ;;		wreg, status,2
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9248 ;;      Params:         0       0       0       0
  9249 ;;      Locals:         0       0       0       0
  9250 ;;      Temps:          0       0       0       0
  9251 ;;      Totals:         0       0       0       0
  9252 ;;Total ram usage:        0 bytes
  9253 ;; Hardware stack levels used:    1
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		_ISR
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           
  9262                           ;psect for function _TMR1_ISR
  9263  0D0D                     _TMR1_ISR:	
  9264                           
  9265                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  9266                           
  9267                           ;incstack = 0
  9268                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9269  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  9270  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  9271  0D0F  1C0C               	btfss	12,0	;volatile
  9272  0D10  0008               	return
  9273  0D11  1283               	bcf	3,5	;RP0=0, select bank0
  9274  0D12  1303               	bcf	3,6	;RP1=0, select bank0
  9275  0D13  1C0C               	btfss	12,0	;volatile
  9276  0D14  0008               	return
  9277                           
  9278                           ;MCU_B1.c: 212: TMR1H = (int)((65536-1480)/256);
  9279  0D15  30FA               	movlw	250
  9280  0D16  008F               	movwf	15	;volatile
  9281                           
  9282                           ;MCU_B1.c: 213: TMR1L = (int)((65536-1480)%256);
  9283  0D17  3038               	movlw	56
  9284  0D18  008E               	movwf	14	;volatile
  9285                           
  9286                           ;MCU_B1.c: 214: TMR1IF = 0;
  9287  0D19  100C               	bcf	12,0	;volatile
  9288                           
  9289                           ;MCU_B1.c: 234: Timer1.Count++;
  9290  0D1A  3001               	movlw	1
  9291  0D1B  07B5               	addwf	_Timer1+1,f
  9292  0D1C  1803               	skipnc
  9293  0D1D  0AB6               	incf	_Timer1+2,f
  9294  0D1E  3000               	movlw	0
  9295  0D1F  07B6               	addwf	_Timer1+2,f
  9296                           
  9297                           ;MCU_B1.c: 235: if (Timer1.Count == 100) {
  9298  0D20  3064               	movlw	100
  9299  0D21  0635               	xorwf	_Timer1+1,w
  9300  0D22  0436               	iorwf	_Timer1+2,w
  9301  0D23  1D03               	skipz
  9302  0D24  0008               	return
  9303                           
  9304                           ;MCU_B1.c: 236: Timer1.Count = 0;
  9305  0D25  01B5               	clrf	_Timer1+1
  9306  0D26  01B6               	clrf	_Timer1+2
  9307                           
  9308                           ;MCU_B1.c: 237: Timer1.Timeout = 1;
  9309  0D27  1434               	bsf	_Timer1,0
  9310  0D28  0008               	return
  9311  0D29                     __end_of_TMR1_ISR:	
  9312  007E                     btemp	set	126	;btemp
  9313  007E                     wtemp	set	126
  9314  007E                     wtemp0	set	126
  9315  0080                     wtemp1	set	128
  9316  0082                     wtemp2	set	130
  9317  0084                     wtemp3	set	132
  9318  0086                     wtemp4	set	134
  9319  0088                     wtemp5	set	136
  9320  007F                     wtemp6	set	127
  9321  007E                     ttemp	set	126
  9322  007E                     ttemp0	set	126
  9323  0081                     ttemp1	set	129
  9324  0084                     ttemp2	set	132
  9325  0087                     ttemp3	set	135
  9326  007F                     ttemp4	set	127
  9327  007E                     ltemp	set	126
  9328  007E                     ltemp0	set	126
  9329  0082                     ltemp1	set	130
  9330  0086                     ltemp2	set	134
  9331  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     20      77
    BANK1            80      0      79
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_CDS_Main
    _main->_getCDS_AD
    _main->_getPIR_AD
    _main->_getTemp_AD
    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _setTemp_Main->_getMain_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_setLED
    _PIR_Main->_setLights_Trigger
    _Mcu_Initialization->_WDT_Set
    _Load_Main->_getMain_LightsStatus
    _Load_Main->_getMain_LoadOK
    _getMain_LoadOK->_getLightsControl_OK
    _Load_Initialization->_setLoad_AH_AL_Restore
    _Lights_Main->_getMain_LightsStatus
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _setPIRLED_Main->_setLED
    _setLED_Initialization->_setLED
    _Exception_Main->_getAll_Lights_Line
    _Exception_Main->_setLED
    _Exception_Main->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect
    _getLights_Status->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lights_Main
    _main->_PIR_Main
    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Load_Main->___lwdiv
    _Lights_Main->_setLights_Main
    _setLights_Main->_setLights
    _setLights->_getMain_All_Error_Status
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   22176
                                             15 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     459
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2381
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           6     6      0     827
                                              0 BANK0      6     6      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     573
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     428
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1328
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         2     2      0    1328
                                              8 BANK0      2     2      0
                            ___awdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     753
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     303
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     303
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             9     9      0    3720
                                              6 BANK0      9     9      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            7     7      0    1949
                                              7 BANK0      7     7      0
                            ___lwdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
               _getMain_Lights_Count
                     _getMain_LoadOK
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_LoadOK                                       2     2      0      47
                                              5 COMMON     2     2      0
                _getLightsControl_OK
 ---------------------------------------------------------------------------------
 (3) _getLightsControl_OK                                  1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 5     5      0     111
                                              4 COMMON     1     1      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     857
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          5     5      0    1860
                                             10 BANK0      5     5      0
                       _Lights_Close
                     _Lights_Control
                         _getLoad_OK
           _getMain_All_Error_Status
               _getMain_LightsStatus
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     798
                                              9 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     674
                                              6 BANK0      3     2      1
                  _LightsPointSelect
           _getMain_All_Error_Status
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getLoad_OK                                           1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       5     5      0     161
                                              0 BANK0      5     5      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     269
                                              6 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     269
                                              6 COMMON     1     1      0
                                              2 BANK0      4     4      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2262
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2262
                                              1 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2377
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2377
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       6     6      0    3985
                                              6 BANK0      6     6      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _setLights_Trigger                                    3     2      1     940
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2222
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     303
                                              4 COMMON     1     1      0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      68
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _Exception_Main
     _getAll_Lights_Line
       _LightsPointSelect
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_LightsStatus
       _getLights_Status
         _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _getMain_All_Error_Status
         _setLights_Line
           _LightsPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     _getMain_All_Error_Status
     _getMain_LightsStatus
       _getLights_Status
         _LightsPointSelect
     _getMain_Lights_Count
     _getMain_LoadOK
       _getLightsControl_OK
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      A6      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Dec 11 13:38:28 2014

                     _WDT_Clearing 07FE          getMain_Lights_Count@count 0059  
                     ___awdiv@sign 005E                                 fsr 0004  
                              l111 0E02                                l244 0CC7  
                              l245 0CCF                                l602 0E7D  
                              l603 0E9A                                l621 062C  
                              l701 0328                                l607 0E96  
                              l804 0568                                l691 03A9  
                              l694 023C                                l870 0070  
                              l695 0374                                l871 0047  
                              l696 0372                                l874 0058  
                              l877 0076                                l869 01E9  
                              l879 0089                                l799 056B  
                              _GIE 005F                                _RB2 0032  
                              _RA4 002C                                _LED 0077  
                              _RB3 0033                                _RA5 002D  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0C2B  
                              _PSA 040B                                _WDT 0037  
           getAll_Lights_Line@line 0076                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0B8C  
        __end_of_LightsPointSelect 0BB6                   _getLights_Status 0C3B  
          __size_of_Lights_Control 006D                               ?_ISR 0070  
                       Load_Main@i 0066                         Load_Main@j 0062  
                             l1216 0E50                               l1075 0BFC  
                             l3221 0D36                               l3223 0D39  
                             l3227 0D3F                               l5021 0E53  
                   _Load_Main$2496 0064                               l5201 0630  
                             l4401 0DEB                               l5017 0E47  
                             l5113 0122                               l5105 010E  
                             l4323 0587                               l5019 0E4B  
                             l5123 0157                               l4421 0F92  
                             l4351 05B2                               l4503 0707  
                             l5127 0185                               l5039 0062  
                             l3545 0E0D                               l4337 0599  
                             l4505 0713                               l4417 0F77  
                             l5145 01BB                               l5129 0190  
                             l4433 0EE8                               l4347 05AE  
                             l4355 05B6                               l4507 071B  
                             l4451 0F09                               l4381 05D8  
                             l5181 05FD                               l4509 0729  
                             l5093 00CF                               l5077 00AC  
                             l4613 07D6                               l4461 0F2A  
                             l5237 0FB5                               l4287 0E79  
                             l4279 0E6D                               l4359 05BE  
                             l5191 0623                               l5095 00D0  
                             l4607 07BD                               l4439 0EF3  
                             l4551 0507                               l4297 0E91  
                             l4289 0E81                               l4377 05D2  
                             l4385 05DE                               l4633 0D8D  
                             l5089 00C3                               l4465 0F32  
                             l4457 0F1F                               l4449 0EFB  
                             l4801 0420                               l3761 0CE8  
                             l5249 0FD8                               l4651 0773  
                             l4493 06F5                               l4397 0DE4  
                             l4901 025B                               l4741 06A0  
                             l4805 0428                               l5199 064D  
                             l4399 0DC6                               l4663 0798  
                             l4583 0558                               l4567 053D  
                             l4497 06FB                               l4489 06EF  
                             l4593 0567                               l4737 0697  
                             l4729 067B                               l4841 04AD  
                             l4825 0463                               l4809 0430  
                             l4691 0ECA                               l4683 0EA6  
                             l4931 0315                               l4907 028C  
                             l4835 0491                               l4819 0447  
                             l4771 0D63                               l4685 0EB4  
                             l4757 06C4                               l4695 0ED5  
                             l4855 04E7                               l4937 0321  
                             l4849 04D9                               l4793 0410  
                             l4947 034A                               l4797 0418  
                             l4879 0228                               l4997 0394  
            _myMain_Initialization 0003                       __CFG_WDTE$ON 0000  
                             u5400 0710                               u3545 0E1D  
                             u5305 0F20                               u2745 0C8E  
                             _PEIE 005E                               u5420 0726  
                             u5185 0DCF                               u6305 033B  
                             u5265 0EFE                               u6245 02DF  
                             u5285 0F0A                               u5295 0F16  
                             u5720 076F                               u5635 07E2  
                             u5815 0EB5                               u5825 0EC1  
                             u6705 017B                               u5835 0ECB  
                             u6725 01A0                               u6655 00EE  
                             u6665 0106                               u5795 0EA9  
                             u6685 0140                               u6870 0656  
                             u6775 01D8                               u6875 0639  
                             __CDS 002B            ?_setSYSC_Initialization 0070  
                             _SYSC 0026                               __PIR 00A0  
                             _Load 00CE                               _Temp 003A  
                             _main 0F9A                               btemp 007E  
                  __end_of_WDT_Set 0C1C                               ltemp 007E  
                             start 0011                               ttemp 007E  
                             wtemp 007E                   __end_of_CDS_Main 0E23  
     __size_of_Temp_Initialization 0003                              ??_ISR 0070  
                _setLights_Trigger 0CF2                      ??_Lights_Main 0063  
                    __CFG_PLLEN$ON 0000                   __end_of_LED_Main 0B57  
               ?_setLights_Trigger 0076                   ??_setPIRLED_Main 005A  
                            ?_main 0068                    __end_of___awdiv 0F39  
                            _ADRES 001E                    ___awdiv@divisor 0059  
                            _T1CON 0010                    __end_of___lwdiv 0EDC  
                    ?_Lights_Close 0070                    ___awdiv@counter 005D  
                            _TMR1H 000F                              _TMR1L 000E  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
          __end_of_Timeout_Counter 0C94                ??_setLights_Trigger 0059  
                 __end_of_PIR_Main 0203                   __end_of_TMR1_ISR 0D29  
                 __end_of_TMR1_Set 0C0E                              _getAD 0D29  
   __end_of_setSYSC_Initialization 0B6F                   __end_of_WDT_Main 0C6E  
                    _LightsControl 0039                     __CFG_BOREN$OFF 0000  
     __end_of_getMain_Lights_Count 0C5D                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 0DEF  
    __end_of_setLED_Initialization 0C80                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 0065                  getPIR_AD@channel2 0076  
           ?_setLoad_AH_AL_Restore 0070                  setTemp_Main@error 0062  
                   _setLights_Main 0D6C                     _setLights_Line 0BCD  
                  __initialization 0013                 __size_of_SYSC_Main 0003  
        __end_of_setLights_Trigger 0D0D                       __end_of_main 1000  
                 __end_of_Fosc_Set 0B79                     _Exception_Main 05E6  
                        ??_ADC_Set 0074                             ??_main 006C  
                   ??_Lights_Close 005F                __end_of_Lights_Main 0E5E  
       __size_of_LightsPointSelect 000A                             ?_getAD 0074  
           ?_myMain_Initialization 0070                             _ADCON0 001F  
                           _ADCON1 009F                   ___awdiv@dividend 005B  
                        ??_WDT_Set 0074                             _ANSELA 0185  
                           _ANSELB 0186           _getMain_All_Error_Status 0E5E  
                           _FVRCON 009D             getLights_Status@lights 0059  
                           _PIRLED 0030                             _OSCCON 0090  
               __size_of_Load_Main 01AE                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 0CA9  
           getLights_Status@status 005A             __end_of_setLights_Main 0D94  
           __end_of_setLights_Line 0BD9                _getLightsControl_OK 0B94  
     __size_of_SYSC_Initialization 0003         __end_of_Mcu_Initialization 0C2B  
                           _Lights 0078                             _Timer1 0034  
      __size_of_CDS_Initialization 0004            ??_Lights_Initialization 0077  
           __end_of_Exception_Main 0659                          ??___awdiv 0074  
                        ??___lwdiv 0074               Exception_Main@status 0061  
                           _setLED 056F                             _myMain 0020  
                 ___awdiv@quotient 005F                 __size_of_Temp_Main 0003  
      __end_of_Load_Initialization 0B7F               ?_getLightsControl_OK 0070  
                           saved_w 007E                   ?_Timeout_Counter 0070  
      getMain_Lights_Count@status1 005C        getMain_Lights_Count@status2 005A  
      getMain_Lights_Count@status3 005B                  __end_of_SYSC_Main 0B5D  
                   _Lights_Control 0739            __size_of_LedPointSelect 001A  
                        ?_CDS_Main 0070            __size_of_getMain_LoadOK 000C  
      __size_of_PIR_Initialization 000B         getMain_LightsStatus@status 005E  
          __end_of__initialization 0022                          ?_LED_Main 0070  
                    ?_my_MainTimer 0070                    ?_setLights_Main 0070  
                  ?_setLights_Line 0070                      ?_setSYSC_Main 0070  
       __size_of_setLights_Trigger 001B                     __pcstackCOMMON 0070  
               __size_of_getCDS_AD 002A                    ?_Exception_Main 0070  
         __end_of_getLights_Status 0C4C                      __end_of_getAD 0D45  
                        ?_PIR_Main 0070                          ?_TMR1_ISR 0070  
                        ?_TMR1_Set 0070             setLoad_AH_AL_Restore@i 0075  
               _LED_Initialization 0BC1                 __size_of_getPIR_AD 0138  
                      _Lights_Main 0E23           _setLights_Initialization 0B6F  
             _getMain_Lights_Count 0C4C                          ?_WDT_Main 0070  
                __end_of_Load_Main 03B1              ??_getLightsControl_OK 0074  
             _getMain_LightsStatus 0DBE         __end_of_set_TimeoutCleared 0B85  
              ?_LED_Initialization 0070             __end_of_Lights_Control 07A6  
            getMain_LightsStatus@i 005C                            ??_getAD 0075  
              _Temp_Initialization 0B5D                         ??_CDS_Main 0074  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                        ?_Fosc_Set 0070        __size_of_getAll_Lights_Line 000D  
                __end_of_Temp_Main 0B63                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                     ??_my_MainTimer 0074  
                       ??_LED_Main 0077               __end_of_Lights_Close 0CA9  
                   ??_setSYSC_Main 0075          getMain_LightsStatus@count 005B  
             ??_LED_Initialization 0077                  LedPointSelect@led 0075  
                       __pmaintext 0F9A               ?_Temp_Initialization 0070  
                       ??_PIR_Main 005F                         ??_TMR1_ISR 0070  
                    ?_setTemp_Main 0070                 __size_of_setLights 0061  
                       _getLoad_AD 0659                         ??_TMR1_Set 0074  
                       __pintentry 0004                         _getLoad_OK 0B8C  
                          ?_setLED 0076            setLights_Trigger@lights 005A  
            ?_getMain_Lights_Count 0070                            _ADC_Set 0B85  
                       _getTemp_AD 0D45                         ??_WDT_Main 0074  
            ?_getMain_LightsStatus 0070             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 0DBE  
                          _WDT_Set 0C0E                         ??_Fosc_Set 0074  
                __end_of_getPIR_AD 04E9            ??_setLoad_AH_AL_Restore 0074  
                  __size_of_IO_Set 0015                         getCDS_AD@i 005B  
                       getCDS_AD@j 005C                            _Lights1 0046  
                          _VarLED1 0051                            _VarLED2 0055  
            ??_Temp_Initialization 0074                     ??_setTemp_Main 0061  
                          ___awdiv 0EDC          getLightsControl_OK@loadok 0074  
                          ___lwdiv 0E9C                        PIR_Main@cds 0067  
                  __size_of_setLED 0077                            __ptext0 0000  
                          __ptext1 0CD8                            __ptext2 0003  
                          __ptext3 0D45                            __ptext4 03B1  
                          __ptext5 0659                            __ptext6 0D94  
                          __ptext7 0D29                            __ptext8 0B7F  
                          __ptext9 0C80                         getPIR_AD@i 0066  
                       getPIR_AD@j 0064                       __size_of_ISR 0010  
       ??_getMain_All_Error_Status 0074                _SYSC_Initialization 0B57  
          ??_myMain_Initialization 0074           ??_setTemp_Initialization 0074  
                   _LedPointSelect 0CBE                     _getMain_LoadOK 0BD9  
                          clrloop0 0BA5                  __end_of_setLights 0F9A  
             end_of_initialization 0022                      _getCDS_Status 0B9C  
             ?_SYSC_Initialization 0070              _setLED_Initialization 0C6E  
                      ?_getLoad_AD 0070     __size_of_Lights_Initialization 0004  
                      ?_getLoad_OK 0070             ??_getMain_Lights_Count 0074  
    __end_of_Lights_Initialization 0B6B             ??_getMain_LightsStatus 0076  
                      ?_getTemp_AD 0070           setLED_Initialization@led 005A  
               _Mcu_Initialization 0C1C               __end_of_my_MainTimer 0CF2  
             __end_of_setSYSC_Main 07E8             __end_of_LedPointSelect 0CD8  
           __end_of_getMain_LoadOK 0BE5                setPIRLED_Main@count 005B  
              ?_Mcu_Initialization 0070              __size_of_Lights_Close 0015  
          __size_of_setPIRLED_Main 006F                   ??_setLights_Main 0077  
                 ??_setLights_Line 0076               setLights_Main@lights 0062  
                        _SYSC_Main 0B5A    getMain_All_Error_Status@command 005D  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0070  
            ??_SYSC_Initialization 0074                   ??_Exception_Main 005F  
                   __end_of_IO_Set 0CBE         __end_of_CDS_Initialization 0B67  
       ??_setLights_Initialization 0076                  __size_of_LED_Main 0003  
             ??_Mcu_Initialization 0075                      ?_WDT_Clearing 0070  
                ?_getLights_Status 0070                       ?_Lights_Main 0070  
                __size_of_PIR_Main 01DE                  __size_of_TMR1_ISR 001C  
               ??_getLights_Status 0076                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 05E6           ??_setSYSC_Initialization 0074  
                     _Lights_Close 0C94                  __size_of_WDT_Main 0011  
              _Lights_Control$4380 005B                start_initialization 0013  
                  ?_LedPointSelect 0070               setLights_Line@lights 0076  
                        _Load_Main 0203                        __end_of_ISR 0C3B  
                  ?_getMain_LoadOK 0070         __end_of_PIR_Initialization 0BC1  
     __size_of_Load_Initialization 0006    __size_of_setTemp_Initialization 0001  
              getCDS_Status@status 0074               __end_of_setTemp_Main 056F  
              __size_of_getLoad_AD 0071                __size_of_getLoad_OK 0008  
                       ?_SYSC_Main 0070                 _set_TimeoutCleared 0B7F  
                         ??_IO_Set 0074           __size_of_Timeout_Counter 0014  
                        _VarErrLED 004D                __size_of_getTemp_AD 0027  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
                        _Temp_Main 0B60                    setLights@lights 0061  
              ?_set_TimeoutCleared 0070                     ??_WDT_Clearing 0074  
              Exception_Main@count 0060                    setLights@status 005F  
              Exception_Main@error 0064        __end_of_getLightsControl_OK 0B9C  
                         ??_setLED 0077                           ?_ADC_Set 0070  
                 ??_Lights_Control 0059   __end_of_getMain_All_Error_Status 0E9C  
                      __pbssCOMMON 0077                          ___latbits 0001  
                       ?_Load_Main 0070                      __pcstackBANK0 0059  
             ??_set_TimeoutCleared 0074         __end_of_getAll_Lights_Line 0BF2  
                         ?_WDT_Set 0070                    ??_getCDS_Status 0074  
                    PIR_Main@error 0064                          _getCDS_AD 0D94  
   __size_of_setLoad_AH_AL_Restore 0016      __end_of_setLoad_AH_AL_Restore 07FE  
                        _getPIR_AD 03B1        __size_of_LED_Initialization 000C  
                  Exception_Main@i 0062                         ?_Temp_Main 0070  
                   Load_Main@adjgo 0063                   ___lwdiv@dividend 005B  
                   Load_Main@error 0065             _setTemp_Initialization 0002  
                    _PIR_Main$2976 0065                           ?___awdiv 0059  
            __size_of_my_MainTimer 001A                           ?___lwdiv 0059  
            __size_of_setSYSC_Main 0042                   getMain_LoadOK@ok 0076  
         setLights_Trigger@command 0076    __size_of_setSYSC_Initialization 0004  
   __size_of_myMain_Initialization 0001      __end_of_myMain_Initialization 0004  
                   __size_of_getAD 001C                   ___lwdiv@quotient 005E  
                   _setPIRLED_Main 06CA                           _CDS_Main 0DEF  
                      ??_SYSC_Main 0075        __end_of_Temp_Initialization 0B60  
                interrupt_function 0004                         ?_getCDS_AD 0076  
                         _LED_Main 0B54                          _setLights 0F39  
                        clear_ram0 0BA4   __end_of_setLights_Initialization 0B74  
                     _my_MainTimer 0CD8                         ?_getPIR_AD 0076  
                     _setSYSC_Main 07A6                           _GO_nDONE 00F9  
                ??_Timeout_Counter 0074                           _PIR_Main 0025  
                     ??_getLoad_AD 0059                           _TMR1_ISR 0D0D  
                     ??_getLoad_OK 0074                           _TMR1_Set 0C00  
                     ??_getTemp_AD 0059                           _WDT_Main 0C5D  
                 __size_of_ADC_Set 0007               __size_of_Lights_Main 003B  
            __size_of_setTemp_Main 0086                        ??_Load_Main 0060  
           __end_of_setPIRLED_Main 0739     getMain_All_Error_Status@status 005E  
                      getAD@adcon0 0075                        getAD@adcon1 0074  
             __end_of_WDT_Clearing 0800                           _Fosc_Set 0B74  
                 __size_of_WDT_Set 000E                 __end_of_getLoad_AD 06CA  
               __end_of_getLoad_OK 0B94  __size_of_getMain_All_Error_Status 003E  
        ?_getMain_All_Error_Status 0070                         ?_setLights 005F  
               __end_of_getTemp_AD 0D6C             _setSYSC_Initialization 0B6B  
                getLoad_AD@channel 005B                  _DetectSYSC_Signal 0BF2  
                         _SwDetect 0079                        ??_Temp_Main 0077  
    _getMain_All_Error_Status$2238 0059      _getMain_All_Error_Status$2239 005B  
              _Load_Initialization 0B79                 ?_DetectSYSC_Signal 0070  
                        setLED@led 0059                       _setTemp_Main 04E9  
                 __size_of___awdiv 005D                   __size_of___lwdiv 0040  
                 ??_LedPointSelect 0074      __size_of_getMain_Lights_Count 0011  
              ??_DetectSYSC_Signal 0074                 _CDS_Initialization 0B63  
                 ??_getMain_LoadOK 0075              _Lights_Initialization 0B67  
    __size_of_getMain_LightsStatus 0031                  getTemp_AD@channel 0076  
                  ?_setPIRLED_Main 0070                    ___lwdiv@divisor 0059  
             ?_Load_Initialization 0070                ?_CDS_Initialization 0070  
                  ___lwdiv@counter 005D                           __ptext10 0C5D  
                         __ptext11 07FE                           __ptext20 0B6B  
                         __ptext12 0B60                           __ptext21 0025  
                         __ptext13 04E9                           __ptext30 0203  
                         __ptext22 0B9C                           __ptext14 0EDC  
                         __ptext31 0BD9                           __ptext23 0BB6  
                         __ptext15 0B5D                           __ptext40 0BCD  
                         __ptext32 0B94                           __ptext24 0C1C  
                         __ptext16 0002                           __ptext41 0B8C  
                         __ptext33 0C4C                           __ptext25 0C0E  
                         __ptext17 0B5A                           __ptext50 0C6E  
                         __ptext42 0739                           __ptext34 0E9C  
                         __ptext26 0C00                           __ptext18 07A6  
                         __ptext51 05E6                           __ptext43 0C94  
                         __ptext35 0B79                           __ptext27 0CA9  
                         __ptext19 0B57                           __ptext60 0DEF  
                         __ptext52 0CF2                           __ptext44 0DBE  
                         __ptext36 07E8                           __ptext28 0B74  
                         __ptext61 0B63                           __ptext53 056F  
                         __ptext45 0B67                           __ptext37 0E23  
                         __ptext29 0B85                           __ptext62 0C2B  
                         __ptext54 0CBE                           __ptext46 0B6F  
                         __ptext38 0D6C                           __ptext63 0D0D  
                         __ptext55 0E5E                           __ptext47 0B54  
                         __ptext39 0F39                           __ptext56 0C3B  
                         __ptext48 06CA                           __ptext57 0BE5  
                         __ptext49 0BC1                           __ptext58 0BAC  
                         __ptext59 0BF2          __size_of_getLights_Status 0011  
      __end_of_SYSC_Initialization 0B5A            ??_setLED_Initialization 0077  
                      ??_getCDS_AD 0059                      setLED@command 0076  
        __end_of_DetectSYSC_Signal 0C00                      __size_of_main 0066  
                      ??_getPIR_AD 0061                 _PIR_Initialization 0BB6  
             ??_CDS_Initialization 0074        __size_of_Mcu_Initialization 000F  
                     getLoad_OK@ok 0074                ?_PIR_Initialization 0070  
                         main@argc 0068                           main@argv 006A  
__size_of_setLights_Initialization 0005          ?_setLights_Initialization 0070  
            ??_Load_Initialization 0076               Lights_Control@lights 005D  
             ??_PIR_Initialization 0074                           intlevel1 0000  
                 _Lights_Main$4371 0066                        ??_setLights 0060  
          ?_setTemp_Initialization 0070            LightsPointSelect@lights 0075  
               _getAll_Lights_Line 0BE5                        getLoad_AD@i 005E  
                      getLoad_AD@j 005D                        getLoad_AD@k 005C  
          __size_of_setLights_Main 0028            __size_of_setLights_Line 000C  
              ?_getAll_Lights_Line 0070             ?_Lights_Initialization 0070  
          __size_of_Exception_Main 0073              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0076       __size_of_getLightsControl_OK 0008  
      __size_of_set_TimeoutCleared 0006                  _LightsPointSelect 0BAC  
             ??_getAll_Lights_Line 0076                 __CFG_FOSC$INTOSCIO 0000  
               ?_LightsPointSelect 0070                    _Timeout_Counter 0C80  
       __end_of_LED_Initialization 0BCD              __end_of_getCDS_Status 0BA4  
   __end_of_setTemp_Initialization 0003         __size_of_DetectSYSC_Signal 000E  
                getCDS_AD@channel1 005D                  getCDS_AD@channel2 0076  
              ??_LightsPointSelect 0074              _setLoad_AH_AL_Restore 07E8  
