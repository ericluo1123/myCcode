

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Nov 06 17:13:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,delta=2
    68                           	psect	text55,local,class=CODE,merge=1,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text63,local,class=CODE,merge=1,delta=2
    77                           	psect	intentry,global,class=CODE,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    79                           	dabs	1,0x7E,2
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0096                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009F                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0186                     	;# 
   148  018C                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0095                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0096                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009F                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0186                     	;# 
   217  018C                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0096                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009F                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0186                     	;# 
   286  018C                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0096                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009C                     	;# 
   343  009D                     	;# 
   344  009F                     	;# 
   345  0108                     	;# 
   346  0109                     	;# 
   347  010C                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  0185                     	;# 
   354  0186                     	;# 
   355  018C                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  000E                     	;# 
   371  000F                     	;# 
   372  0010                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0013                     	;# 
   376  0014                     	;# 
   377  0015                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0017                     	;# 
   381  0018                     	;# 
   382  0019                     	;# 
   383  001A                     	;# 
   384  001B                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  001D                     	;# 
   388  001E                     	;# 
   389  001F                     	;# 
   390  0081                     	;# 
   391  0085                     	;# 
   392  0086                     	;# 
   393  0087                     	;# 
   394  0089                     	;# 
   395  008C                     	;# 
   396  008D                     	;# 
   397  008E                     	;# 
   398  008F                     	;# 
   399  0090                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0093                     	;# 
   404  0094                     	;# 
   405  0095                     	;# 
   406  0095                     	;# 
   407  0096                     	;# 
   408  0096                     	;# 
   409  0098                     	;# 
   410  0099                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009F                     	;# 
   414  0108                     	;# 
   415  0109                     	;# 
   416  010C                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  010F                     	;# 
   422  0185                     	;# 
   423  0186                     	;# 
   424  018C                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0009                     	;# 
   434  000A                     	;# 
   435  000B                     	;# 
   436  000C                     	;# 
   437  000D                     	;# 
   438  000E                     	;# 
   439  000E                     	;# 
   440  000F                     	;# 
   441  0010                     	;# 
   442  0011                     	;# 
   443  0012                     	;# 
   444  0013                     	;# 
   445  0014                     	;# 
   446  0015                     	;# 
   447  0015                     	;# 
   448  0016                     	;# 
   449  0017                     	;# 
   450  0018                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001B                     	;# 
   455  001C                     	;# 
   456  001D                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  0081                     	;# 
   460  0085                     	;# 
   461  0086                     	;# 
   462  0087                     	;# 
   463  0089                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  008F                     	;# 
   468  0090                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0093                     	;# 
   473  0094                     	;# 
   474  0095                     	;# 
   475  0095                     	;# 
   476  0096                     	;# 
   477  0096                     	;# 
   478  0098                     	;# 
   479  0099                     	;# 
   480  009C                     	;# 
   481  009D                     	;# 
   482  009F                     	;# 
   483  0108                     	;# 
   484  0109                     	;# 
   485  010C                     	;# 
   486  010C                     	;# 
   487  010D                     	;# 
   488  010D                     	;# 
   489  010E                     	;# 
   490  010F                     	;# 
   491  0185                     	;# 
   492  0186                     	;# 
   493  018C                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000D                     	;# 
   507  000E                     	;# 
   508  000E                     	;# 
   509  000F                     	;# 
   510  0010                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0014                     	;# 
   515  0015                     	;# 
   516  0015                     	;# 
   517  0016                     	;# 
   518  0017                     	;# 
   519  0018                     	;# 
   520  0019                     	;# 
   521  001A                     	;# 
   522  001B                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  001D                     	;# 
   526  001E                     	;# 
   527  001F                     	;# 
   528  0081                     	;# 
   529  0085                     	;# 
   530  0086                     	;# 
   531  0087                     	;# 
   532  0089                     	;# 
   533  008C                     	;# 
   534  008D                     	;# 
   535  008E                     	;# 
   536  008F                     	;# 
   537  0090                     	;# 
   538  0091                     	;# 
   539  0092                     	;# 
   540  0093                     	;# 
   541  0093                     	;# 
   542  0094                     	;# 
   543  0095                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0096                     	;# 
   547  0098                     	;# 
   548  0099                     	;# 
   549  009C                     	;# 
   550  009D                     	;# 
   551  009F                     	;# 
   552  0108                     	;# 
   553  0109                     	;# 
   554  010C                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  0185                     	;# 
   561  0186                     	;# 
   562  018C                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0009                     	;# 
   572  000A                     	;# 
   573  000B                     	;# 
   574  000C                     	;# 
   575  000D                     	;# 
   576  000E                     	;# 
   577  000E                     	;# 
   578  000F                     	;# 
   579  0010                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0013                     	;# 
   583  0014                     	;# 
   584  0015                     	;# 
   585  0015                     	;# 
   586  0016                     	;# 
   587  0017                     	;# 
   588  0018                     	;# 
   589  0019                     	;# 
   590  001A                     	;# 
   591  001B                     	;# 
   592  001B                     	;# 
   593  001C                     	;# 
   594  001D                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  0081                     	;# 
   598  0085                     	;# 
   599  0086                     	;# 
   600  0087                     	;# 
   601  0089                     	;# 
   602  008C                     	;# 
   603  008D                     	;# 
   604  008E                     	;# 
   605  008F                     	;# 
   606  0090                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0093                     	;# 
   611  0094                     	;# 
   612  0095                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0096                     	;# 
   616  0098                     	;# 
   617  0099                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009F                     	;# 
   621  0108                     	;# 
   622  0109                     	;# 
   623  010C                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  0185                     	;# 
   630  0186                     	;# 
   631  018C                     	;# 
   632  0000                     	;# 
   633  0001                     	;# 
   634  0002                     	;# 
   635  0003                     	;# 
   636  0004                     	;# 
   637  0005                     	;# 
   638  0006                     	;# 
   639  0007                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  000E                     	;# 
   647  000F                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0014                     	;# 
   653  0015                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  001B                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  0081                     	;# 
   667  0085                     	;# 
   668  0086                     	;# 
   669  0087                     	;# 
   670  0089                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  008F                     	;# 
   675  0090                     	;# 
   676  0091                     	;# 
   677  0092                     	;# 
   678  0093                     	;# 
   679  0093                     	;# 
   680  0094                     	;# 
   681  0095                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0096                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009C                     	;# 
   688  009D                     	;# 
   689  009F                     	;# 
   690  0108                     	;# 
   691  0109                     	;# 
   692  010C                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010D                     	;# 
   696  010E                     	;# 
   697  010F                     	;# 
   698  0185                     	;# 
   699  0186                     	;# 
   700  018C                     	;# 
   701  0000                     	;# 
   702  0001                     	;# 
   703  0002                     	;# 
   704  0003                     	;# 
   705  0004                     	;# 
   706  0005                     	;# 
   707  0006                     	;# 
   708  0007                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000E                     	;# 
   716  000F                     	;# 
   717  0010                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0014                     	;# 
   722  0015                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001B                     	;# 
   730  001B                     	;# 
   731  001C                     	;# 
   732  001D                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  0081                     	;# 
   736  0085                     	;# 
   737  0086                     	;# 
   738  0087                     	;# 
   739  0089                     	;# 
   740  008C                     	;# 
   741  008D                     	;# 
   742  008E                     	;# 
   743  008F                     	;# 
   744  0090                     	;# 
   745  0091                     	;# 
   746  0092                     	;# 
   747  0093                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0095                     	;# 
   752  0096                     	;# 
   753  0096                     	;# 
   754  0098                     	;# 
   755  0099                     	;# 
   756  009C                     	;# 
   757  009D                     	;# 
   758  009F                     	;# 
   759  0108                     	;# 
   760  0109                     	;# 
   761  010C                     	;# 
   762  010C                     	;# 
   763  010D                     	;# 
   764  010D                     	;# 
   765  010E                     	;# 
   766  010F                     	;# 
   767  0185                     	;# 
   768  0186                     	;# 
   769  018C                     	;# 
   770  0000                     	;# 
   771  0001                     	;# 
   772  0002                     	;# 
   773  0003                     	;# 
   774  0004                     	;# 
   775  0005                     	;# 
   776  0006                     	;# 
   777  0007                     	;# 
   778  0009                     	;# 
   779  000A                     	;# 
   780  000B                     	;# 
   781  000C                     	;# 
   782  000D                     	;# 
   783  000E                     	;# 
   784  000E                     	;# 
   785  000F                     	;# 
   786  0010                     	;# 
   787  0011                     	;# 
   788  0012                     	;# 
   789  0013                     	;# 
   790  0014                     	;# 
   791  0015                     	;# 
   792  0015                     	;# 
   793  0016                     	;# 
   794  0017                     	;# 
   795  0018                     	;# 
   796  0019                     	;# 
   797  001A                     	;# 
   798  001B                     	;# 
   799  001B                     	;# 
   800  001C                     	;# 
   801  001D                     	;# 
   802  001E                     	;# 
   803  001F                     	;# 
   804  0081                     	;# 
   805  0085                     	;# 
   806  0086                     	;# 
   807  0087                     	;# 
   808  0089                     	;# 
   809  008C                     	;# 
   810  008D                     	;# 
   811  008E                     	;# 
   812  008F                     	;# 
   813  0090                     	;# 
   814  0091                     	;# 
   815  0092                     	;# 
   816  0093                     	;# 
   817  0093                     	;# 
   818  0094                     	;# 
   819  0095                     	;# 
   820  0095                     	;# 
   821  0096                     	;# 
   822  0096                     	;# 
   823  0098                     	;# 
   824  0099                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009F                     	;# 
   828  0108                     	;# 
   829  0109                     	;# 
   830  010C                     	;# 
   831  010C                     	;# 
   832  010D                     	;# 
   833  010D                     	;# 
   834  010E                     	;# 
   835  010F                     	;# 
   836  0185                     	;# 
   837  0186                     	;# 
   838  018C                     	;# 
   839  0000                     	;# 
   840  0001                     	;# 
   841  0002                     	;# 
   842  0003                     	;# 
   843  0004                     	;# 
   844  0005                     	;# 
   845  0006                     	;# 
   846  0007                     	;# 
   847  0009                     	;# 
   848  000A                     	;# 
   849  000B                     	;# 
   850  000C                     	;# 
   851  000D                     	;# 
   852  000E                     	;# 
   853  000E                     	;# 
   854  000F                     	;# 
   855  0010                     	;# 
   856  0011                     	;# 
   857  0012                     	;# 
   858  0013                     	;# 
   859  0014                     	;# 
   860  0015                     	;# 
   861  0015                     	;# 
   862  0016                     	;# 
   863  0017                     	;# 
   864  0018                     	;# 
   865  0019                     	;# 
   866  001A                     	;# 
   867  001B                     	;# 
   868  001B                     	;# 
   869  001C                     	;# 
   870  001D                     	;# 
   871  001E                     	;# 
   872  001F                     	;# 
   873  0081                     	;# 
   874  0085                     	;# 
   875  0086                     	;# 
   876  0087                     	;# 
   877  0089                     	;# 
   878  008C                     	;# 
   879  008D                     	;# 
   880  008E                     	;# 
   881  008F                     	;# 
   882  0090                     	;# 
   883  0091                     	;# 
   884  0092                     	;# 
   885  0093                     	;# 
   886  0093                     	;# 
   887  0094                     	;# 
   888  0095                     	;# 
   889  0095                     	;# 
   890  0096                     	;# 
   891  0096                     	;# 
   892  0098                     	;# 
   893  0099                     	;# 
   894  009C                     	;# 
   895  009D                     	;# 
   896  009F                     	;# 
   897  0108                     	;# 
   898  0109                     	;# 
   899  010C                     	;# 
   900  010C                     	;# 
   901  010D                     	;# 
   902  010D                     	;# 
   903  010E                     	;# 
   904  010F                     	;# 
   905  0185                     	;# 
   906  0186                     	;# 
   907  018C                     	;# 
   908  0000                     	;# 
   909  0001                     	;# 
   910  0002                     	;# 
   911  0003                     	;# 
   912  0004                     	;# 
   913  0005                     	;# 
   914  0006                     	;# 
   915  0007                     	;# 
   916  0009                     	;# 
   917  000A                     	;# 
   918  000B                     	;# 
   919  000C                     	;# 
   920  000D                     	;# 
   921  000E                     	;# 
   922  000E                     	;# 
   923  000F                     	;# 
   924  0010                     	;# 
   925  0011                     	;# 
   926  0012                     	;# 
   927  0013                     	;# 
   928  0014                     	;# 
   929  0015                     	;# 
   930  0015                     	;# 
   931  0016                     	;# 
   932  0017                     	;# 
   933  0018                     	;# 
   934  0019                     	;# 
   935  001A                     	;# 
   936  001B                     	;# 
   937  001B                     	;# 
   938  001C                     	;# 
   939  001D                     	;# 
   940  001E                     	;# 
   941  001F                     	;# 
   942  0081                     	;# 
   943  0085                     	;# 
   944  0086                     	;# 
   945  0087                     	;# 
   946  0089                     	;# 
   947  008C                     	;# 
   948  008D                     	;# 
   949  008E                     	;# 
   950  008F                     	;# 
   951  0090                     	;# 
   952  0091                     	;# 
   953  0092                     	;# 
   954  0093                     	;# 
   955  0093                     	;# 
   956  0094                     	;# 
   957  0095                     	;# 
   958  0095                     	;# 
   959  0096                     	;# 
   960  0096                     	;# 
   961  0098                     	;# 
   962  0099                     	;# 
   963  009C                     	;# 
   964  009D                     	;# 
   965  009F                     	;# 
   966  0108                     	;# 
   967  0109                     	;# 
   968  010C                     	;# 
   969  010C                     	;# 
   970  010D                     	;# 
   971  010D                     	;# 
   972  010E                     	;# 
   973  010F                     	;# 
   974  0185                     	;# 
   975  0186                     	;# 
   976  018C                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0009                     	;# 
   986  000A                     	;# 
   987  000B                     	;# 
   988  000C                     	;# 
   989  000D                     	;# 
   990  000E                     	;# 
   991  000E                     	;# 
   992  000F                     	;# 
   993  0010                     	;# 
   994  0011                     	;# 
   995  0012                     	;# 
   996  0013                     	;# 
   997  0014                     	;# 
   998  0015                     	;# 
   999  0015                     	;# 
  1000  0016                     	;# 
  1001  0017                     	;# 
  1002  0018                     	;# 
  1003  0019                     	;# 
  1004  001A                     	;# 
  1005  001B                     	;# 
  1006  001B                     	;# 
  1007  001C                     	;# 
  1008  001D                     	;# 
  1009  001E                     	;# 
  1010  001F                     	;# 
  1011  0081                     	;# 
  1012  0085                     	;# 
  1013  0086                     	;# 
  1014  0087                     	;# 
  1015  0089                     	;# 
  1016  008C                     	;# 
  1017  008D                     	;# 
  1018  008E                     	;# 
  1019  008F                     	;# 
  1020  0090                     	;# 
  1021  0091                     	;# 
  1022  0092                     	;# 
  1023  0093                     	;# 
  1024  0093                     	;# 
  1025  0094                     	;# 
  1026  0095                     	;# 
  1027  0095                     	;# 
  1028  0096                     	;# 
  1029  0096                     	;# 
  1030  0098                     	;# 
  1031  0099                     	;# 
  1032  009C                     	;# 
  1033  009D                     	;# 
  1034  009F                     	;# 
  1035  0108                     	;# 
  1036  0109                     	;# 
  1037  010C                     	;# 
  1038  010C                     	;# 
  1039  010D                     	;# 
  1040  010D                     	;# 
  1041  010E                     	;# 
  1042  010F                     	;# 
  1043  0185                     	;# 
  1044  0186                     	;# 
  1045  018C                     	;# 
  1046  0000                     	;# 
  1047  0001                     	;# 
  1048  0002                     	;# 
  1049  0003                     	;# 
  1050  0004                     	;# 
  1051  0005                     	;# 
  1052  0006                     	;# 
  1053  0007                     	;# 
  1054  0009                     	;# 
  1055  000A                     	;# 
  1056  000B                     	;# 
  1057  000C                     	;# 
  1058  000D                     	;# 
  1059  000E                     	;# 
  1060  000E                     	;# 
  1061  000F                     	;# 
  1062  0010                     	;# 
  1063  0011                     	;# 
  1064  0012                     	;# 
  1065  0013                     	;# 
  1066  0014                     	;# 
  1067  0015                     	;# 
  1068  0015                     	;# 
  1069  0016                     	;# 
  1070  0017                     	;# 
  1071  0018                     	;# 
  1072  0019                     	;# 
  1073  001A                     	;# 
  1074  001B                     	;# 
  1075  001B                     	;# 
  1076  001C                     	;# 
  1077  001D                     	;# 
  1078  001E                     	;# 
  1079  001F                     	;# 
  1080  0081                     	;# 
  1081  0085                     	;# 
  1082  0086                     	;# 
  1083  0087                     	;# 
  1084  0089                     	;# 
  1085  008C                     	;# 
  1086  008D                     	;# 
  1087  008E                     	;# 
  1088  008F                     	;# 
  1089  0090                     	;# 
  1090  0091                     	;# 
  1091  0092                     	;# 
  1092  0093                     	;# 
  1093  0093                     	;# 
  1094  0094                     	;# 
  1095  0095                     	;# 
  1096  0095                     	;# 
  1097  0096                     	;# 
  1098  0096                     	;# 
  1099  0098                     	;# 
  1100  0099                     	;# 
  1101  009C                     	;# 
  1102  009D                     	;# 
  1103  009F                     	;# 
  1104  0108                     	;# 
  1105  0109                     	;# 
  1106  010C                     	;# 
  1107  010C                     	;# 
  1108  010D                     	;# 
  1109  010D                     	;# 
  1110  010E                     	;# 
  1111  010F                     	;# 
  1112  0185                     	;# 
  1113  0186                     	;# 
  1114  018C                     	;# 
  1115  0000                     	;# 
  1116  0001                     	;# 
  1117  0002                     	;# 
  1118  0003                     	;# 
  1119  0004                     	;# 
  1120  0005                     	;# 
  1121  0006                     	;# 
  1122  0007                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  000E                     	;# 
  1130  000F                     	;# 
  1131  0010                     	;# 
  1132  0011                     	;# 
  1133  0012                     	;# 
  1134  0013                     	;# 
  1135  0014                     	;# 
  1136  0015                     	;# 
  1137  0015                     	;# 
  1138  0016                     	;# 
  1139  0017                     	;# 
  1140  0018                     	;# 
  1141  0019                     	;# 
  1142  001A                     	;# 
  1143  001B                     	;# 
  1144  001B                     	;# 
  1145  001C                     	;# 
  1146  001D                     	;# 
  1147  001E                     	;# 
  1148  001F                     	;# 
  1149  0081                     	;# 
  1150  0085                     	;# 
  1151  0086                     	;# 
  1152  0087                     	;# 
  1153  0089                     	;# 
  1154  008C                     	;# 
  1155  008D                     	;# 
  1156  008E                     	;# 
  1157  008F                     	;# 
  1158  0090                     	;# 
  1159  0091                     	;# 
  1160  0092                     	;# 
  1161  0093                     	;# 
  1162  0093                     	;# 
  1163  0094                     	;# 
  1164  0095                     	;# 
  1165  0095                     	;# 
  1166  0096                     	;# 
  1167  0096                     	;# 
  1168  0098                     	;# 
  1169  0099                     	;# 
  1170  009C                     	;# 
  1171  009D                     	;# 
  1172  009F                     	;# 
  1173  0108                     	;# 
  1174  0109                     	;# 
  1175  010C                     	;# 
  1176  010C                     	;# 
  1177  010D                     	;# 
  1178  010D                     	;# 
  1179  010E                     	;# 
  1180  010F                     	;# 
  1181  0185                     	;# 
  1182  0186                     	;# 
  1183  018C                     	;# 
  1184  0000                     	;# 
  1185  0001                     	;# 
  1186  0002                     	;# 
  1187  0003                     	;# 
  1188  0004                     	;# 
  1189  0005                     	;# 
  1190  0006                     	;# 
  1191  0007                     	;# 
  1192  0009                     	;# 
  1193  000A                     	;# 
  1194  000B                     	;# 
  1195  000C                     	;# 
  1196  000D                     	;# 
  1197  000E                     	;# 
  1198  000E                     	;# 
  1199  000F                     	;# 
  1200  0010                     	;# 
  1201  0011                     	;# 
  1202  0012                     	;# 
  1203  0013                     	;# 
  1204  0014                     	;# 
  1205  0015                     	;# 
  1206  0015                     	;# 
  1207  0016                     	;# 
  1208  0017                     	;# 
  1209  0018                     	;# 
  1210  0019                     	;# 
  1211  001A                     	;# 
  1212  001B                     	;# 
  1213  001B                     	;# 
  1214  001C                     	;# 
  1215  001D                     	;# 
  1216  001E                     	;# 
  1217  001F                     	;# 
  1218  0081                     	;# 
  1219  0085                     	;# 
  1220  0086                     	;# 
  1221  0087                     	;# 
  1222  0089                     	;# 
  1223  008C                     	;# 
  1224  008D                     	;# 
  1225  008E                     	;# 
  1226  008F                     	;# 
  1227  0090                     	;# 
  1228  0091                     	;# 
  1229  0092                     	;# 
  1230  0093                     	;# 
  1231  0093                     	;# 
  1232  0094                     	;# 
  1233  0095                     	;# 
  1234  0095                     	;# 
  1235  0096                     	;# 
  1236  0096                     	;# 
  1237  0098                     	;# 
  1238  0099                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009F                     	;# 
  1242  0108                     	;# 
  1243  0109                     	;# 
  1244  010C                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010D                     	;# 
  1248  010E                     	;# 
  1249  010F                     	;# 
  1250  0185                     	;# 
  1251  0186                     	;# 
  1252  018C                     	;# 
  1253  001F                     _ADCON0	set	31
  1254  001E                     _ADRES	set	30
  1255  0005                     _PORTA	set	5
  1256  0006                     _PORTB	set	6
  1257  0007                     _PORTC	set	7
  1258  0010                     _T1CON	set	16
  1259  000F                     _TMR1H	set	15
  1260  000E                     _TMR1L	set	14
  1261  005F                     _GIE	set	95
  1262  00F9                     _GO_nDONE	set	249
  1263  005E                     _PEIE	set	94
  1264  002C                     _RA4	set	44
  1265  002D                     _RA5	set	45
  1266  0032                     _RB2	set	50
  1267  0033                     _RB3	set	51
  1268  0034                     _RB4	set	52
  1269  0035                     _RB5	set	53
  1270  0060                     _TMR1IF	set	96
  1271  009F                     _ADCON1	set	159
  1272  009D                     _FVRCON	set	157
  1273  0090                     _OSCCON	set	144
  1274  0085                     _TRISA	set	133
  1275  0086                     _TRISB	set	134
  1276  0087                     _TRISC	set	135
  1277  0408                     _PS0	set	1032
  1278  0409                     _PS1	set	1033
  1279  040A                     _PS2	set	1034
  1280  040B                     _PSA	set	1035
  1281  0460                     _TMR1IE	set	1120
  1282  0185                     _ANSELA	set	389
  1283  0186                     _ANSELB	set	390
  1284                           
  1285                           	psect	text0
  1286  0000                     __ptext0:	
  1287                           ; #config settings
  1288                           
  1289                           
  1290                           ;psect for function _TMR1_ISR
  1291  0000                     
  1292                           	psect	cinit
  1293  0013                     start_initialization:	
  1294  0013                     __initialization:	
  1295                           
  1296                           ; Clear objects allocated to COMMON
  1297  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1298  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1299  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1300                           
  1301                           ; Clear objects allocated to BANK0
  1302  0016  1383               	bcf	3,7	;select IRP bank0
  1303  0017  3020               	movlw	low __pbssBANK0
  1304  0018  0084               	movwf	4
  1305  0019  3055               	movlw	low (__pbssBANK0+53)
  1306  001A  158A  2324  118A   	fcall	clear_ram0
  1307                           
  1308                           ; Clear objects allocated to BANK1
  1309  001D  30A0               	movlw	low __pbssBANK1
  1310  001E  0084               	movwf	4
  1311  001F  30EF               	movlw	low (__pbssBANK1+79)
  1312  0020  158A  2324  118A   	fcall	clear_ram0
  1313                           
  1314                           ; Clear objects allocated to BANK2
  1315  0023  1783               	bsf	3,7	;select IRP bank2
  1316  0024  3020               	movlw	low __pbssBANK2
  1317  0025  0084               	movwf	4
  1318  0026  3027               	movlw	low (__pbssBANK2+7)
  1319  0027  158A  2324         	fcall	clear_ram0
  1320  0029                     end_of_initialization:	
  1321                           ;End of C runtime variable initialization code
  1322                           
  1323  0029                     __end_of__initialization:	
  1324  0029  0183               	clrf	3
  1325  002A  158A  2F2F         	ljmp	_main	;jump to C main() function
  1326                           
  1327                           	psect	bssCOMMON
  1328  0077                     __pbssCOMMON:	
  1329  0077                     _LED:	
  1330  0077                     	ds	1
  1331  0078                     _LightsControl:	
  1332  0078                     	ds	1
  1333  0079                     _SwDetect:	
  1334  0079                     	ds	1
  1335                           
  1336                           	psect	bssBANK0
  1337  0020                     __pbssBANK0:	
  1338  0020                     _myMain:	
  1339  0020                     	ds	9
  1340  0029                     _SYSC:	
  1341  0029                     	ds	5
  1342  002E                     __CDS:	
  1343  002E                     	ds	5
  1344  0033                     _PIRLED:	
  1345  0033                     	ds	4
  1346  0037                     _Timer1:	
  1347  0037                     	ds	3
  1348  003A                     _WDT:	
  1349  003A                     	ds	2
  1350  003C                     _Lights:	
  1351  003C                     	ds	1
  1352  003D                     _Temp:	
  1353  003D                     	ds	12
  1354  0049                     _VarErrLED:	
  1355  0049                     	ds	4
  1356  004D                     _VarLED1:	
  1357  004D                     	ds	4
  1358  0051                     _VarLED2:	
  1359  0051                     	ds	4
  1360                           
  1361                           	psect	bssBANK1
  1362  00A0                     __pbssBANK1:	
  1363  00A0                     __PIR:	
  1364  00A0                     	ds	47
  1365  00CF                     _Load:	
  1366  00CF                     	ds	32
  1367                           
  1368                           	psect	bssBANK2
  1369  0120                     __pbssBANK2:	
  1370  0120                     _Lights1:	
  1371  0120                     	ds	7
  1372                           
  1373                           	psect	clrtext
  1374  0B24                     clear_ram0:	
  1375                           ;	Called with FSR containing the base address, and
  1376                           ;	W with the last address+1
  1377                           
  1378  0B24  0064               	clrwdt	;clear the watchdog before getting into this loop
  1379  0B25                     clrloop0:	
  1380  0B25  0180               	clrf	0	;clear RAM location pointed to by FSR
  1381  0B26  0A84               	incf	4,f	;increment pointer
  1382  0B27  0604               	xorwf	4,w	;XOR with final address
  1383  0B28  1903               	btfsc	3,2	;have we reached the end yet?
  1384  0B29  3400               	retlw	0	;all done for this memory range, return
  1385  0B2A  0604               	xorwf	4,w	;XOR again to restore value
  1386  0B2B  2B25               	goto	clrloop0	;do the next byte
  1387                           
  1388                           	psect	cstackCOMMON
  1389  0070                     __pcstackCOMMON:	
  1390  0070                     ?_setLED_Initialization:	
  1391  0070                     ?_setLED_Main:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0070                     ?_setPIRLED_Main:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0070                     ?_Fosc_Set:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0070                     ?_IO_Set:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0070                     ?_TMR1_Set:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0070                     ?_ADC_Set:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0070                     ?_WDT_Set:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0070                     ?_TMR1_ISR:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0070                     ??_TMR1_ISR:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0070                     ?_Timeout_Counter:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0070                     ?_set_TimeoutCleared:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0070                     ?_WDT_Clearing:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0070                     ?_myMain_Initialization:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0070                     ?_SYSC_Initialization:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0070                     ?_Temp_Initialization:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0070                     ?_Load_Initialization:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0070                     ?_Lights_Initialization:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0070                     ?_PIR_Initialization:	
  1443                           ; 0 bytes @ 0x0
  1444                           
  1445  0070                     ?_DetectSYSC_Signal:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ?_getLoad_AD:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_getTemp_AD:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_my_MainTimer:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_SYSC_Main:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_Temp_Main:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_Load_Main:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_Lights_Main:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_PIR_Main:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_setLoad_AH_AL_Restore:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ?_setTemp_Initialization:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_setTemp_Main:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_setSYSC_Initialization:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_setSYSC_Main:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_setLights_Initialization:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_setLights_Main:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Lights_Control:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Lights_Close:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_setLights_Line:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_CDS_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_CDS_Main:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_LedPointSelect:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_LED_Initialization:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_LED_Main:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_Mcu_Initialization:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_ISR:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ??_ISR:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_WDT_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_setMain_Exception:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_LightsPointSelect:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_getAll_Lights_Line:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_getLights_Status:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_getLightsControl_GO:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_getLightsControl_OK:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_getCDS_Status:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_getMain_LightsStatus:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_getMain_All_Error_Status:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_getMain_Lights_Count:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_getLoad_OK:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562                           
  1563                           ; 1 bytes @ 0x0
  1564  0070                     	ds	4
  1565  0074                     ??_Fosc_Set:	
  1566  0074                     ??_IO_Set:	
  1567                           ; 0 bytes @ 0x4
  1568                           
  1569  0074                     ??_TMR1_Set:	
  1570                           ; 0 bytes @ 0x4
  1571                           
  1572  0074                     ??_ADC_Set:	
  1573                           ; 0 bytes @ 0x4
  1574                           
  1575  0074                     ??_WDT_Set:	
  1576                           ; 0 bytes @ 0x4
  1577                           
  1578  0074                     ??_Timeout_Counter:	
  1579                           ; 0 bytes @ 0x4
  1580                           
  1581  0074                     ??_set_TimeoutCleared:	
  1582                           ; 0 bytes @ 0x4
  1583                           
  1584  0074                     ??_WDT_Clearing:	
  1585                           ; 0 bytes @ 0x4
  1586                           
  1587  0074                     ??_myMain_Initialization:	
  1588                           ; 0 bytes @ 0x4
  1589                           
  1590  0074                     ??_SYSC_Initialization:	
  1591                           ; 0 bytes @ 0x4
  1592                           
  1593  0074                     ??_Temp_Initialization:	
  1594                           ; 0 bytes @ 0x4
  1595                           
  1596  0074                     ??_DetectSYSC_Signal:	
  1597                           ; 0 bytes @ 0x4
  1598                           
  1599  0074                     ??_my_MainTimer:	
  1600                           ; 0 bytes @ 0x4
  1601                           
  1602  0074                     ??_setLoad_AH_AL_Restore:	
  1603                           ; 0 bytes @ 0x4
  1604                           
  1605  0074                     ??_getLightsControl_GO:	
  1606                           ; 0 bytes @ 0x4
  1607                           
  1608  0074                     ??_getLightsControl_OK:	
  1609                           ; 0 bytes @ 0x4
  1610                           
  1611  0074                     ??_setTemp_Initialization:	
  1612                           ; 0 bytes @ 0x4
  1613                           
  1614  0074                     ??_setSYSC_Initialization:	
  1615                           ; 0 bytes @ 0x4
  1616                           
  1617  0074                     ??_CDS_Initialization:	
  1618                           ; 0 bytes @ 0x4
  1619                           
  1620  0074                     ??_CDS_Main:	
  1621                           ; 0 bytes @ 0x4
  1622                           
  1623  0074                     ??_getCDS_Status:	
  1624                           ; 0 bytes @ 0x4
  1625                           
  1626  0074                     ??_LedPointSelect:	
  1627                           ; 0 bytes @ 0x4
  1628                           
  1629  0074                     ??_WDT_Main:	
  1630                           ; 0 bytes @ 0x4
  1631                           
  1632  0074                     ??_getMain_Lights_Count:	
  1633                           ; 0 bytes @ 0x4
  1634                           
  1635  0074                     ??_getLoad_OK:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638  0074                     ??_LightsPointSelect:	
  1639                           ; 0 bytes @ 0x4
  1640                           
  1641  0074                     ??___awdiv:	
  1642                           ; 0 bytes @ 0x4
  1643                           
  1644  0074                     ??___lwdiv:	
  1645                           ; 0 bytes @ 0x4
  1646                           
  1647  0074                     ?_getAD:	
  1648                           ; 0 bytes @ 0x4
  1649                           
  1650  0074                     getCDS_Status@status:	
  1651                           ; 1 bytes @ 0x4
  1652                           
  1653  0074                     getAD@adcon1:	
  1654                           ; 1 bytes @ 0x4
  1655                           
  1656  0074                     getLoad_OK@ok:	
  1657                           ; 1 bytes @ 0x4
  1658                           
  1659  0074                     getLightsControl_GO@loadgo:	
  1660                           ; 1 bytes @ 0x4
  1661                           
  1662  0074                     getLightsControl_OK@loadok:	
  1663                           ; 1 bytes @ 0x4
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0x4
  1667  0074                     	ds	1
  1668  0075                     ??_getAD:	
  1669  0075                     ??_Mcu_Initialization:	
  1670                           ; 0 bytes @ 0x5
  1671                           
  1672  0075                     ??_getMain_All_Error_Status:	
  1673                           ; 0 bytes @ 0x5
  1674                           
  1675  0075                     LedPointSelect@led:	
  1676                           ; 0 bytes @ 0x5
  1677                           
  1678  0075                     getAD@adcon0:	
  1679                           ; 1 bytes @ 0x5
  1680                           
  1681  0075                     setLoad_AH_AL_Restore@i:	
  1682                           ; 1 bytes @ 0x5
  1683                           
  1684  0075                     LightsPointSelect@lights:	
  1685                           ; 1 bytes @ 0x5
  1686                           
  1687                           
  1688                           ; 1 bytes @ 0x5
  1689  0075                     	ds	1
  1690  0076                     ?_setLED:	
  1691  0076                     ??_Load_Initialization:	
  1692                           ; 0 bytes @ 0x6
  1693                           
  1694  0076                     ?_getPIR_AD:	
  1695                           ; 0 bytes @ 0x6
  1696                           
  1697  0076                     ??_getAll_Lights_Line:	
  1698                           ; 0 bytes @ 0x6
  1699                           
  1700  0076                     ?_setLights_Trigger:	
  1701                           ; 0 bytes @ 0x6
  1702                           
  1703  0076                     ??_getLights_Status:	
  1704                           ; 0 bytes @ 0x6
  1705                           
  1706  0076                     ??_setLights_Initialization:	
  1707                           ; 0 bytes @ 0x6
  1708                           
  1709  0076                     ??_setLights_Line:	
  1710                           ; 0 bytes @ 0x6
  1711                           
  1712  0076                     ?_getCDS_AD:	
  1713                           ; 0 bytes @ 0x6
  1714                           
  1715  0076                     ??_getMain_LightsStatus:	
  1716                           ; 0 bytes @ 0x6
  1717                           
  1718  0076                     getCDS_AD@channel2:	
  1719                           ; 0 bytes @ 0x6
  1720                           
  1721  0076                     setLED@command:	
  1722                           ; 1 bytes @ 0x6
  1723                           
  1724  0076                     setLED_Main@led:	
  1725                           ; 1 bytes @ 0x6
  1726                           
  1727  0076                     getTemp_AD@channel:	
  1728                           ; 1 bytes @ 0x6
  1729                           
  1730  0076                     getPIR_AD@channel2:	
  1731                           ; 1 bytes @ 0x6
  1732                           
  1733  0076                     setLights_Initialization@lights:	
  1734                           ; 1 bytes @ 0x6
  1735                           
  1736  0076                     setLights_Trigger@command:	
  1737                           ; 1 bytes @ 0x6
  1738                           
  1739  0076                     setLights_Line@lights:	
  1740                           ; 1 bytes @ 0x6
  1741                           
  1742  0076                     getAll_Lights_Line@line:	
  1743                           ; 1 bytes @ 0x6
  1744                           
  1745                           
  1746                           ; 1 bytes @ 0x6
  1747  0076                     	ds	1
  1748  0077                     ??_setLED_Initialization:	
  1749  0077                     ??_setLED:	
  1750                           ; 0 bytes @ 0x7
  1751                           
  1752  0077                     ??_Lights_Initialization:	
  1753                           ; 0 bytes @ 0x7
  1754                           
  1755  0077                     ??_SYSC_Main:	
  1756                           ; 0 bytes @ 0x7
  1757                           
  1758  0077                     ??_Temp_Main:	
  1759                           ; 0 bytes @ 0x7
  1760                           
  1761  0077                     ??_Lights_Main:	
  1762                           ; 0 bytes @ 0x7
  1763                           
  1764  0077                     ??_LED_Initialization:	
  1765                           ; 0 bytes @ 0x7
  1766                           
  1767  0077                     ??_LED_Main:	
  1768                           ; 0 bytes @ 0x7
  1769                           
  1770                           
  1771                           	psect	cstackBANK0
  1772  0055                     __pcstackBANK0:	
  1773                           ; 0 bytes @ 0x7
  1774                           
  1775  0055                     ??_setLED_Main:	
  1776  0055                     ??_getLoad_AD:	
  1777                           ; 0 bytes @ 0x0
  1778                           
  1779  0055                     ??_getTemp_AD:	
  1780                           ; 0 bytes @ 0x0
  1781                           
  1782  0055                     ??_setLights_Trigger:	
  1783                           ; 0 bytes @ 0x0
  1784                           
  1785  0055                     ??_Lights_Control:	
  1786                           ; 0 bytes @ 0x0
  1787                           
  1788  0055                     ??_getCDS_AD:	
  1789                           ; 0 bytes @ 0x0
  1790                           
  1791  0055                     ?___awdiv:	
  1792                           ; 0 bytes @ 0x0
  1793                           
  1794  0055                     ?___lwdiv:	
  1795                           ; 2 bytes @ 0x0
  1796                           
  1797  0055                     setLED@led:	
  1798                           ; 2 bytes @ 0x0
  1799                           
  1800  0055                     getMain_Lights_Count@count:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803  0055                     getLights_Status@lights:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806  0055                     _getMain_All_Error_Status$2475:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809  0055                     ___awdiv@divisor:	
  1810                           ; 2 bytes @ 0x0
  1811                           
  1812  0055                     ___lwdiv@divisor:	
  1813                           ; 2 bytes @ 0x0
  1814                           
  1815                           
  1816                           ; 2 bytes @ 0x0
  1817  0055                     	ds	1
  1818  0056                     ??_setPIRLED_Main:	
  1819  0056                     ??_PIR_Initialization:	
  1820                           ; 0 bytes @ 0x1
  1821                           
  1822  0056                     setLED_Initialization@led:	
  1823                           ; 0 bytes @ 0x1
  1824                           
  1825  0056                     getMain_Lights_Count@status2:	
  1826                           ; 1 bytes @ 0x1
  1827                           
  1828  0056                     getLights_Status@status:	
  1829                           ; 1 bytes @ 0x1
  1830                           
  1831  0056                     setLights_Trigger@lights:	
  1832                           ; 1 bytes @ 0x1
  1833                           
  1834                           
  1835                           ; 1 bytes @ 0x1
  1836  0056                     	ds	1
  1837  0057                     ??_setMain_Exception:	
  1838  0057                     getCDS_AD@i:	
  1839                           ; 0 bytes @ 0x2
  1840                           
  1841  0057                     setPIRLED_Main@count:	
  1842                           ; 1 bytes @ 0x2
  1843                           
  1844  0057                     getMain_LightsStatus@status:	
  1845                           ; 1 bytes @ 0x2
  1846                           
  1847  0057                     getMain_Lights_Count@status3:	
  1848                           ; 1 bytes @ 0x2
  1849                           
  1850  0057                     getLoad_AD@channel:	
  1851                           ; 1 bytes @ 0x2
  1852                           
  1853  0057                     _getMain_All_Error_Status$2484:	
  1854                           ; 1 bytes @ 0x2
  1855                           
  1856  0057                     _Lights_Control$4869:	
  1857                           ; 2 bytes @ 0x2
  1858                           
  1859  0057                     ___awdiv@dividend:	
  1860                           ; 2 bytes @ 0x2
  1861                           
  1862  0057                     ___lwdiv@dividend:	
  1863                           ; 2 bytes @ 0x2
  1864                           
  1865                           
  1866                           ; 2 bytes @ 0x2
  1867  0057                     	ds	1
  1868  0058                     ??_Lights_Close:	
  1869  0058                     getCDS_AD@j:	
  1870                           ; 0 bytes @ 0x3
  1871                           
  1872  0058                     setMain_Exception@command:	
  1873                           ; 1 bytes @ 0x3
  1874                           
  1875  0058                     getMain_Lights_Count@status1:	
  1876                           ; 1 bytes @ 0x3
  1877                           
  1878  0058                     getLoad_AD@k:	
  1879                           ; 1 bytes @ 0x3
  1880                           
  1881                           
  1882                           ; 1 bytes @ 0x3
  1883  0058                     	ds	1
  1884  0059                     getCDS_AD@channel1:	
  1885  0059                     setMain_Exception@status:	
  1886                           ; 1 bytes @ 0x4
  1887                           
  1888  0059                     getLoad_AD@j:	
  1889                           ; 1 bytes @ 0x4
  1890                           
  1891  0059                     Lights_Control@lights:	
  1892                           ; 1 bytes @ 0x4
  1893                           
  1894  0059                     ___awdiv@counter:	
  1895                           ; 1 bytes @ 0x4
  1896                           
  1897  0059                     ___lwdiv@counter:	
  1898                           ; 1 bytes @ 0x4
  1899                           
  1900  0059                     _getMain_All_Error_Status$2486:	
  1901                           ; 1 bytes @ 0x4
  1902                           
  1903                           
  1904                           ; 2 bytes @ 0x4
  1905  0059                     	ds	1
  1906  005A                     getLoad_AD@i:	
  1907  005A                     ___awdiv@sign:	
  1908                           ; 1 bytes @ 0x5
  1909                           
  1910  005A                     ___lwdiv@quotient:	
  1911                           ; 1 bytes @ 0x5
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x5
  1915  005A                     	ds	1
  1916  005B                     getMain_All_Error_Status@command:	
  1917  005B                     ___awdiv@quotient:	
  1918                           ; 1 bytes @ 0x6
  1919                           
  1920                           
  1921                           ; 2 bytes @ 0x6
  1922  005B                     	ds	1
  1923  005C                     getMain_All_Error_Status@status:	
  1924                           
  1925                           ; 1 bytes @ 0x7
  1926  005C                     	ds	1
  1927  005D                     ??_getPIR_AD:	
  1928  005D                     ??_Load_Main:	
  1929                           ; 0 bytes @ 0x8
  1930                           
  1931  005D                     ??_PIR_Main:	
  1932                           ; 0 bytes @ 0x8
  1933                           
  1934  005D                     ??_setTemp_Main:	
  1935                           ; 0 bytes @ 0x8
  1936                           
  1937  005D                     ??_setSYSC_Main:	
  1938                           ; 0 bytes @ 0x8
  1939                           
  1940  005D                     ?_setLights:	
  1941                           ; 0 bytes @ 0x8
  1942                           
  1943  005D                     setLights@status:	
  1944                           ; 0 bytes @ 0x8
  1945                           
  1946                           
  1947                           ; 1 bytes @ 0x8
  1948  005D                     	ds	1
  1949  005E                     ??_setLights:	
  1950                           
  1951                           ; 0 bytes @ 0x9
  1952  005E                     	ds	1
  1953  005F                     Load_Main@j:	
  1954                           
  1955                           ; 1 bytes @ 0xA
  1956  005F                     	ds	1
  1957  0060                     Load_Main@error:	
  1958  0060                     getPIR_AD@j:	
  1959                           ; 1 bytes @ 0xB
  1960                           
  1961  0060                     _setLights$4866:	
  1962                           ; 1 bytes @ 0xB
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0xB
  1966  0060                     	ds	1
  1967  0061                     _Load_Main$2773:	
  1968  0061                     getPIR_AD@channel1:	
  1969                           ; 1 bytes @ 0xC
  1970                           
  1971                           
  1972                           ; 1 bytes @ 0xC
  1973  0061                     	ds	1
  1974  0062                     Load_Main@i:	
  1975  0062                     getPIR_AD@i:	
  1976                           ; 1 bytes @ 0xD
  1977                           
  1978  0062                     setLights@lights:	
  1979                           ; 1 bytes @ 0xD
  1980                           
  1981  0062                     _PIR_Main$3308:	
  1982                           ; 1 bytes @ 0xD
  1983                           
  1984                           
  1985                           ; 2 bytes @ 0xD
  1986  0062                     	ds	1
  1987  0063                     ??_setLights_Main:	
  1988                           
  1989                           ; 0 bytes @ 0xE
  1990  0063                     	ds	1
  1991  0064                     PIR_Main@error:	
  1992                           
  1993                           ; 1 bytes @ 0xF
  1994  0064                     	ds	2
  1995  0066                     _setLights_Main$4862:	
  1996                           
  1997                           ; 2 bytes @ 0x11
  1998  0066                     	ds	2
  1999  0068                     setLights_Main@lights:	
  2000                           
  2001                           ; 1 bytes @ 0x13
  2002  0068                     	ds	1
  2003  0069                     ?_main:	
  2004  0069                     main@argc:	
  2005                           ; 2 bytes @ 0x14
  2006                           
  2007                           
  2008                           ; 2 bytes @ 0x14
  2009  0069                     	ds	2
  2010  006B                     main@argv:	
  2011                           
  2012                           ; 2 bytes @ 0x16
  2013  006B                     	ds	2
  2014  006D                     ??_main:	
  2015                           
  2016                           ; 0 bytes @ 0x18
  2017  006D                     	ds	1
  2018                           
  2019                           	psect	maintext
  2020  0F2F                     __pmaintext:	
  2021 ;;
  2022 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2023 ;;
  2024 ;; *************** function _main *****************
  2025 ;; Defined at:
  2026 ;;		line 7 in file "../src/Main_B1.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  argc            2   20[BANK0 ] int 
  2029 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2   20[BANK0 ] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 17F/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2041 ;;      Params:         0       4       0       0
  2042 ;;      Locals:         0       0       0       0
  2043 ;;      Temps:          0       1       0       0
  2044 ;;      Totals:         0       5       0       0
  2045 ;;Total ram usage:        5 bytes
  2046 ;; Hardware stack levels required when called:    7
  2047 ;; This function calls:
  2048 ;;		_CDS_Initialization
  2049 ;;		_CDS_Main
  2050 ;;		_DetectSYSC_Signal
  2051 ;;		_LED_Initialization
  2052 ;;		_LED_Main
  2053 ;;		_Lights_Initialization
  2054 ;;		_Lights_Main
  2055 ;;		_Load_Initialization
  2056 ;;		_Load_Main
  2057 ;;		_Mcu_Initialization
  2058 ;;		_PIR_Initialization
  2059 ;;		_PIR_Main
  2060 ;;		_SYSC_Initialization
  2061 ;;		_SYSC_Main
  2062 ;;		_Temp_Initialization
  2063 ;;		_Temp_Main
  2064 ;;		_WDT_Main
  2065 ;;		_getCDS_AD
  2066 ;;		_getLoad_AD
  2067 ;;		_getPIR_AD
  2068 ;;		_getTemp_AD
  2069 ;;		_myMain_Initialization
  2070 ;;		_my_MainTimer
  2071 ;; This function is called by:
  2072 ;;		Startup code after reset
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _main
  2078  0F2F                     _main:	
  2079                           
  2080                           ;Main_B1.c: 8: myMain_Initialization();
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2084  0F2F  118A  27FF  158A   	fcall	_myMain_Initialization
  2085                           
  2086                           ;Main_B1.c: 9: Mcu_Initialization();
  2087  0F32  158A  2396  158A   	fcall	_Mcu_Initialization
  2088                           
  2089                           ;Main_B1.c: 10: ;;
  2090                           ;Main_B1.c: 11: LED_Initialization();
  2091  0F35  158A  2337  158A   	fcall	_LED_Initialization
  2092                           
  2093                           ;Main_B1.c: 12: ;;
  2094                           ;Main_B1.c: 14: SYSC_Initialization();
  2095  0F38  158A  22D3  158A   	fcall	_SYSC_Initialization
  2096                           
  2097                           ;Main_B1.c: 15: Temp_Initialization();
  2098  0F3B  158A  22D9  158A   	fcall	_Temp_Initialization
  2099                           
  2100                           ;Main_B1.c: 16: Load_Initialization();
  2101  0F3E  158A  22F5  158A   	fcall	_Load_Initialization
  2102                           
  2103                           ;Main_B1.c: 17: ;;
  2104                           ;Main_B1.c: 18: ;;
  2105                           ;Main_B1.c: 20: ;;
  2106                           ;Main_B1.c: 21: Lights_Initialization();
  2107  0F41  158A  22E3  158A   	fcall	_Lights_Initialization
  2108                           
  2109                           ;Main_B1.c: 22: CDS_Initialization();
  2110  0F44  158A  22DF  158A   	fcall	_CDS_Initialization
  2111                           
  2112                           ;Main_B1.c: 23: PIR_Initialization();
  2113  0F47  158A  23F8  158A   	fcall	_PIR_Initialization
  2114                           
  2115                           ;Main_B1.c: 24: ;;
  2116                           ;Main_B1.c: 25: ;;
  2117                           ;Main_B1.c: 26: __nop();
  2118  0F4A  0000               	nop
  2119  0F4B                     l5128:	
  2120                           ;Main_B1.c: 27: ;;
  2121                           ;Main_B1.c: 29: while (1) {
  2122                           
  2123                           
  2124                           ;Main_B1.c: 31: if (myMain.PowerON == 1) {
  2125  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0F4D  1C20               	btfss	_myMain,0
  2128  0F4E  2F6E               	goto	l5140
  2129                           
  2130                           ;Main_B1.c: 33: DetectSYSC_Signal();
  2131  0F4F  158A  234F  158A   	fcall	_DetectSYSC_Signal
  2132                           
  2133                           ;Main_B1.c: 37: getLoad_AD(0x01);
  2134  0F52  3001               	movlw	1
  2135  0F53  118A  267C  158A   	fcall	_getLoad_AD
  2136                           
  2137                           ;Main_B1.c: 41: getTemp_AD(0x11);
  2138  0F56  3011               	movlw	17
  2139  0F57  158A  2532  158A   	fcall	_getTemp_AD
  2140                           
  2141                           ;Main_B1.c: 49: getCDS_AD(0x09, 0x31);
  2142  0F5A  3031               	movlw	49
  2143  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0F5C  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0F5D  00ED               	movwf	??_main
  2146  0F5E  086D               	movf	??_main,w
  2147  0F5F  00F6               	movwf	getCDS_AD@channel2
  2148  0F60  3009               	movlw	9
  2149  0F61  158A  2508  158A   	fcall	_getCDS_AD
  2150                           
  2151                           ;Main_B1.c: 53: getPIR_AD(0x05, 0x0d);
  2152  0F64  300D               	movlw	13
  2153  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0F67  00ED               	movwf	??_main
  2156  0F68  086D               	movf	??_main,w
  2157  0F69  00F6               	movwf	getPIR_AD@channel2
  2158  0F6A  3005               	movlw	5
  2159  0F6B  118A  2366  158A   	fcall	_getPIR_AD
  2160  0F6E                     l5140:	
  2161                           
  2162                           ;Main_B1.c: 56: }
  2163                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  2164  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0F70  1C37               	btfss	_Timer1,0
  2167  0F71  2F4B               	goto	l5128
  2168                           
  2169                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  2170  0F72  1037               	bcf	_Timer1,0
  2171                           
  2172                           ;Main_B1.c: 94: my_MainTimer();
  2173  0F73  158A  2445  158A   	fcall	_my_MainTimer
  2174                           
  2175                           ;Main_B1.c: 95: WDT_Main();
  2176  0F76  158A  23D5  158A   	fcall	_WDT_Main
  2177                           
  2178                           ;Main_B1.c: 96: ;;
  2179                           ;Main_B1.c: 97: ;;
  2180                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  2181  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0F7B  1C20               	btfss	_myMain,0
  2184  0F7C  2F4B               	goto	l5128
  2185                           
  2186                           ;Main_B1.c: 99: ;;
  2187                           ;Main_B1.c: 101: LED_Main();
  2188  0F7D  158A  2387  158A   	fcall	_LED_Main
  2189                           
  2190                           ;Main_B1.c: 102: ;;
  2191                           ;Main_B1.c: 104: SYSC_Main();
  2192  0F80  158A  22D6  158A   	fcall	_SYSC_Main
  2193                           
  2194                           ;Main_B1.c: 105: Temp_Main();
  2195  0F83  158A  22DC  158A   	fcall	_Temp_Main
  2196                           
  2197                           ;Main_B1.c: 106: Load_Main();
  2198  0F86  118A  21FB  158A   	fcall	_Load_Main
  2199                           
  2200                           ;Main_B1.c: 107: ;;
  2201                           ;Main_B1.c: 109: Lights_Main();
  2202  0F89  158A  232C  158A   	fcall	_Lights_Main
  2203                           
  2204                           ;Main_B1.c: 110: ;;
  2205                           ;Main_B1.c: 111: ;;
  2206                           ;Main_B1.c: 112: CDS_Main();
  2207  0F8C  118A  27CB  158A   	fcall	_CDS_Main
  2208                           
  2209                           ;Main_B1.c: 113: PIR_Main();
  2210  0F8F  118A  202C  158A   	fcall	_PIR_Main
  2211                           
  2212                           ;Main_B1.c: 115: ;;
  2213                           ;Main_B1.c: 116: ;;
  2214                           ;Main_B1.c: 117: ;;
  2215  0F92  2F4B               	goto	l5128
  2216  0F93                     __end_of_main:	
  2217                           ;Main_B1.c: 125: }
  2218                           ;Main_B1.c: 126: }
  2219                           ;Main_B1.c: 160: }
  2220                           ;Main_B1.c: 161: return (0);
  2221                           ;	Return value of _main is never used
  2222                           
  2223                           
  2224                           	psect	text1
  2225  0C45                     __ptext1:	
  2226 ;; *************** function _my_MainTimer *****************
  2227 ;; Defined at:
  2228 ;;		line 180 in file "../src/Main_B1.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;		None               void
  2235 ;; Registers used:
  2236 ;;		wreg, status,2
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2242 ;;      Params:         0       0       0       0
  2243 ;;      Locals:         0       0       0       0
  2244 ;;      Temps:          0       0       0       0
  2245 ;;      Totals:         0       0       0       0
  2246 ;;Total ram usage:        0 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    2
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _my_MainTimer
  2258  0C45                     _my_MainTimer:	
  2259                           
  2260                           ;Main_B1.c: 182: if (myMain.PowerON == 0) {
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _my_MainTimer: [wreg+status,2]
  2264  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0C47  1820               	btfsc	_myMain,0
  2267  0C48  0008               	return
  2268                           
  2269                           ;Main_B1.c: 183: myMain.PowerCount++;
  2270  0C49  3001               	movlw	1
  2271  0C4A  07A2               	addwf	_myMain+2,f
  2272  0C4B  1803               	skipnc
  2273  0C4C  0AA3               	incf	_myMain+3,f
  2274  0C4D  3000               	movlw	0
  2275  0C4E  07A3               	addwf	_myMain+3,f
  2276                           
  2277                           ;Main_B1.c: 184: if (myMain.PowerCount == 150)
  2278  0C4F  3096               	movlw	150
  2279  0C50  0622               	xorwf	_myMain+2,w
  2280  0C51  0423               	iorwf	_myMain+3,w
  2281  0C52  1D03               	skipz
  2282  0C53  0008               	return
  2283                           
  2284                           ;Main_B1.c: 185: {
  2285                           ;Main_B1.c: 186: myMain.PowerCount = 0;
  2286  0C54  01A2               	clrf	_myMain+2
  2287  0C55  01A3               	clrf	_myMain+3
  2288                           
  2289                           ;Main_B1.c: 187: myMain.PowerON = 1;
  2290  0C56  1420               	bsf	_myMain,0
  2291                           
  2292                           ;Main_B1.c: 193: ;;
  2293                           ;Main_B1.c: 194: myMain.SelfTest = 1;
  2294  0C57  1620               	bsf	_myMain,4
  2295                           
  2296                           ;Main_B1.c: 203: }
  2297                           ;Main_B1.c: 204: } else {
  2298  0C58  0008               	return
  2299  0C59                     __end_of_my_MainTimer:	
  2300                           
  2301                           	psect	text2
  2302  07FF                     __ptext2:	
  2303 ;; *************** function _myMain_Initialization *****************
  2304 ;; Defined at:
  2305 ;;		line 167 in file "../src/Main_B1.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;		None               void
  2312 ;; Registers used:
  2313 ;;		None
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2319 ;;      Params:         0       0       0       0
  2320 ;;      Locals:         0       0       0       0
  2321 ;;      Temps:          0       0       0       0
  2322 ;;      Totals:         0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _myMain_Initialization
  2335  07FF                     _myMain_Initialization:	
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _myMain_Initialization: []
  2339  07FF  0008               	return
  2340  0800                     __end_of_myMain_Initialization:	
  2341                           
  2342                           	psect	text3
  2343  0D32                     __ptext3:	
  2344 ;; *************** function _getTemp_AD *****************
  2345 ;; Defined at:
  2346 ;;		line 16 in file "../src/OverTemperature_B1.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  channel         1    wreg     unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  channel         1    6[COMMON] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;		None               void
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2360 ;;      Params:         0       0       0       0
  2361 ;;      Locals:         1       0       0       0
  2362 ;;      Temps:          0       2       0       0
  2363 ;;      Totals:         1       2       0       0
  2364 ;;Total ram usage:        3 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    4
  2367 ;; This function calls:
  2368 ;;		_getAD
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _getTemp_AD
  2376  0D32                     _getTemp_AD:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2380                           ;getTemp_AD@channel stored from wreg
  2381  0D32  00F6               	movwf	getTemp_AD@channel
  2382                           
  2383                           ;OverTemperature_B1.c: 18: if (RA5 == 1) {
  2384  0D33  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0D34  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0D35  1E85               	btfss	5,5	;volatile
  2387  0D36  0008               	return
  2388                           
  2389                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2390  0D37  1D3D               	btfss	_Temp,2
  2391  0D38  0008               	return
  2392                           
  2393                           ;OverTemperature_B1.c: 20: Temp.ADRES = getAD(channel, 0x70);
  2394  0D39  3070               	movlw	112
  2395  0D3A  00D5               	movwf	??_getTemp_AD
  2396  0D3B  0855               	movf	??_getTemp_AD,w
  2397  0D3C  00F4               	movwf	getAD@adcon1
  2398  0D3D  0876               	movf	getTemp_AD@channel,w
  2399  0D3E  158A  24EC  158A   	fcall	_getAD
  2400  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0D43  00D6               	movwf	??_getTemp_AD+1
  2403  0D44  0856               	movf	??_getTemp_AD+1,w
  2404  0D45  00C6               	movwf	_Temp+9
  2405                           
  2406                           ;OverTemperature_B1.c: 21: if (Temp.ADRES > 0) {
  2407  0D46  0846               	movf	_Temp+9,w
  2408  0D47  1903               	btfsc	3,2
  2409  0D48  0008               	return
  2410                           
  2411                           ;OverTemperature_B1.c: 22: Temp.GO = 1;
  2412  0D49  163D               	bsf	_Temp,4
  2413                           
  2414                           ;OverTemperature_B1.c: 23: if (Temp.ADH[0] < Temp.ADRES) {
  2415  0D4A  0846               	movf	_Temp+9,w
  2416  0D4B  0244               	subwf	_Temp+7,w
  2417  0D4C  1803               	skipnc
  2418  0D4D  2D53               	goto	l4730
  2419                           
  2420                           ;OverTemperature_B1.c: 24: Temp.ADH[0] = Temp.ADRES;
  2421  0D4E  0846               	movf	_Temp+9,w
  2422  0D4F  00D5               	movwf	??_getTemp_AD
  2423  0D50  0855               	movf	??_getTemp_AD,w
  2424  0D51  00C4               	movwf	_Temp+7
  2425                           
  2426                           ;OverTemperature_B1.c: 25: } else if (Temp.ADH[1] < Temp.ADRES) {
  2427  0D52  0008               	return
  2428  0D53                     l4730:	
  2429  0D53  0846               	movf	_Temp+9,w
  2430  0D54  0245               	subwf	_Temp+8,w
  2431  0D55  1803               	skipnc
  2432  0D56  0008               	return
  2433                           
  2434                           ;OverTemperature_B1.c: 26: Temp.ADH[1] = Temp.ADRES;
  2435  0D57  0846               	movf	_Temp+9,w
  2436  0D58  00D5               	movwf	??_getTemp_AD
  2437  0D59  0855               	movf	??_getTemp_AD,w
  2438  0D5A  00C5               	movwf	_Temp+8
  2439  0D5B  0008               	return
  2440  0D5C                     __end_of_getTemp_AD:	
  2441                           
  2442                           	psect	text4
  2443  0366                     __ptext4:	
  2444 ;; *************** function _getPIR_AD *****************
  2445 ;; Defined at:
  2446 ;;		line 162 in file "../src/PIR_B1.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  channel1        1    wreg     unsigned char 
  2449 ;;  channel2        1    6[COMMON] unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  channel1        1   12[BANK0 ] unsigned char 
  2452 ;;  i               1   13[BANK0 ] unsigned char 
  2453 ;;  j               1   11[BANK0 ] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;		None               void
  2456 ;; Registers used:
  2457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2463 ;;      Params:         1       0       0       0
  2464 ;;      Locals:         0       3       0       0
  2465 ;;      Temps:          0       3       0       0
  2466 ;;      Totals:         1       6       0       0
  2467 ;;Total ram usage:        7 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    4
  2470 ;; This function calls:
  2471 ;;		___awdiv
  2472 ;;		___lwdiv
  2473 ;;		_getAD
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _getPIR_AD
  2481  0366                     _getPIR_AD:	
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2485                           ;getPIR_AD@channel1 stored from wreg
  2486  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2488  0368  00E1               	movwf	getPIR_AD@channel1
  2489                           
  2490                           ;PIR_B1.c: 163: char i = 0, j = 0;
  2491  0369  01E2               	clrf	getPIR_AD@i
  2492  036A  01E0               	clrf	getPIR_AD@j
  2493                           
  2494                           ;PIR_B1.c: 165: if (_PIR.ADtoGO == 1) {
  2495  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2496  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2497  036D  1CA0               	btfss	__PIR^(0+128),1
  2498  036E  0008               	return
  2499                           
  2500                           ;PIR_B1.c: 166: _PIR.GO = 1;
  2501  036F  1520               	bsf	__PIR^(0+128),2
  2502                           
  2503                           ;PIR_B1.c: 167: _PIR.ADRES = getAD(channel1, 0x70);
  2504  0370  3070               	movlw	112
  2505  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0373  00DD               	movwf	??_getPIR_AD
  2508  0374  085D               	movf	??_getPIR_AD,w
  2509  0375  00F4               	movwf	getAD@adcon1
  2510  0376  0861               	movf	getPIR_AD@channel1,w
  2511  0377  158A  24EC  118A   	fcall	_getAD
  2512  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2513  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2514  037C  00DE               	movwf	??_getPIR_AD+1
  2515  037D  085E               	movf	??_getPIR_AD+1,w
  2516  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2517  037F  1303               	bcf	3,6	;RP1=0, select bank1
  2518  0380  00A2               	movwf	(__PIR^(0+128)+2)
  2519                           
  2520                           ;PIR_B1.c: 168: _PIR.VRAD = _PIR.ADRES / 51;
  2521  0381  3033               	movlw	51
  2522  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0384  00D5               	movwf	___awdiv@divisor
  2525  0385  3000               	movlw	0
  2526  0386  00D6               	movwf	___awdiv@divisor+1
  2527  0387  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0388  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0389  0822               	movf	(__PIR^(0+128)+2),w
  2530  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2531  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2532  038C  00DD               	movwf	??_getPIR_AD
  2533  038D  01DE               	clrf	??_getPIR_AD+1
  2534  038E  085D               	movf	??_getPIR_AD,w
  2535  038F  00D7               	movwf	___awdiv@dividend
  2536  0390  085E               	movf	??_getPIR_AD+1,w
  2537  0391  00D8               	movwf	___awdiv@dividend+1
  2538  0392  158A  26D2  118A   	fcall	___awdiv
  2539  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0397  0855               	movf	?___awdiv,w
  2542  0398  00DF               	movwf	??_getPIR_AD+2
  2543  0399  085F               	movf	??_getPIR_AD+2,w
  2544  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2545  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2546  039C  00A3               	movwf	(__PIR^(0+128)+3)
  2547                           
  2548                           ;PIR_B1.c: 169: _PIR.VRAD1 = _PIR.ADRES;
  2549  039D  0822               	movf	(__PIR^(0+128)+2),w
  2550  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2551  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2552  03A0  00DD               	movwf	??_getPIR_AD
  2553  03A1  085D               	movf	??_getPIR_AD,w
  2554  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2555  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2556  03A4  00A4               	movwf	(__PIR^(0+128)+4)
  2557                           
  2558                           ;PIR_B1.c: 170: _PIR.ADRES = getAD(channel2, 0x70);
  2559  03A5  3070               	movlw	112
  2560  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2561  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2562  03A8  00DD               	movwf	??_getPIR_AD
  2563  03A9  085D               	movf	??_getPIR_AD,w
  2564  03AA  00F4               	movwf	getAD@adcon1
  2565  03AB  0876               	movf	getPIR_AD@channel2,w
  2566  03AC  158A  24EC  118A   	fcall	_getAD
  2567  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2568  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2569  03B1  00DE               	movwf	??_getPIR_AD+1
  2570  03B2  085E               	movf	??_getPIR_AD+1,w
  2571  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2572  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2573  03B5  00A2               	movwf	(__PIR^(0+128)+2)
  2574                           
  2575                           ;PIR_B1.c: 171: _PIR.SignalAD = _PIR.ADRES;
  2576  03B6  0822               	movf	(__PIR^(0+128)+2),w
  2577  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2578  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2579  03B9  00DD               	movwf	??_getPIR_AD
  2580  03BA  085D               	movf	??_getPIR_AD,w
  2581  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2582  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2583  03BD  00A1               	movwf	(__PIR^(0+128)+1)
  2584                           
  2585                           ;PIR_B1.c: 173: switch (_PIR.VRAD) {
  2586  03BE  2BDA               	goto	l4762
  2587  03BF                     l4746:	
  2588                           ;PIR_B1.c: 174: case 0:
  2589                           
  2590                           
  2591                           ;PIR_B1.c: 175: if (_PIR.VRAD1 < 10) {
  2592  03BF  300A               	movlw	10
  2593  03C0  0224               	subwf	(__PIR^(0+128)+4),w
  2594  03C1  1803               	skipnc
  2595  03C2  2BC5               	goto	l4750
  2596                           
  2597                           ;PIR_B1.c: 176: _PIR.CloseTimeValue = 5;
  2598  03C3  3005               	movlw	5
  2599  03C4  2BC6               	goto	L1
  2600  03C5                     l4750:	
  2601                           ;PIR_B1.c: 177: } else {
  2602                           
  2603                           
  2604                           ;PIR_B1.c: 178: _PIR.CloseTimeValue = 60;
  2605  03C5  303C               	movlw	60
  2606  03C6                     L1:	
  2607  03C6  00C7               	movwf	(__PIR^(0+128)+39)
  2608  03C7  3000               	movlw	0
  2609  03C8  2BD8               	goto	L5
  2610  03C9                     l4752:	
  2611                           ;PIR_B1.c: 181: case 1:
  2612                           
  2613                           ;PIR_B1.c: 179: }
  2614                           ;PIR_B1.c: 180: break;
  2615                           
  2616                           
  2617                           ;PIR_B1.c: 182: _PIR.CloseTimeValue = 300;
  2618  03C9  302C               	movlw	44
  2619  03CA  00C7               	movwf	(__PIR^(0+128)+39)
  2620  03CB  3001               	movlw	1
  2621  03CC  2BD8               	goto	L5
  2622  03CD                     l4754:	
  2623                           ;PIR_B1.c: 184: case 2:
  2624                           
  2625                           ;PIR_B1.c: 183: break;
  2626                           
  2627                           
  2628                           ;PIR_B1.c: 185: _PIR.CloseTimeValue = 600;
  2629  03CD  3058               	movlw	88
  2630  03CE  00C7               	movwf	(__PIR^(0+128)+39)
  2631  03CF  3002               	movlw	2
  2632  03D0  2BD8               	goto	L5
  2633  03D1                     l4756:	
  2634                           ;PIR_B1.c: 187: case 3:
  2635                           
  2636                           ;PIR_B1.c: 186: break;
  2637                           
  2638                           
  2639                           ;PIR_B1.c: 188: _PIR.CloseTimeValue = 900;
  2640  03D1  3084               	movlw	132
  2641  03D2  00C7               	movwf	(__PIR^(0+128)+39)
  2642  03D3  3003               	movlw	3
  2643  03D4  2BD8               	goto	L5
  2644  03D5                     l4758:	
  2645                           ;PIR_B1.c: 190: case 4:
  2646                           
  2647                           ;PIR_B1.c: 189: break;
  2648                           
  2649                           
  2650                           ;PIR_B1.c: 191: _PIR.CloseTimeValue = 1200;
  2651  03D5  30B0               	movlw	176
  2652  03D6  00C7               	movwf	(__PIR^(0+128)+39)
  2653  03D7  3004               	movlw	4
  2654  03D8                     L5:	
  2655  03D8  00C8               	movwf	(__PIR^(0+128)+40)
  2656                           
  2657                           ;PIR_B1.c: 193: }
  2658                           
  2659                           ;PIR_B1.c: 192: break;
  2660  03D9  2BEB               	goto	l4764
  2661  03DA                     l4762:	
  2662  03DA  0823               	movf	(__PIR^(0+128)+3),w
  2663                           
  2664                           ; Switch size 1, requested type "space"
  2665                           ; Number of cases is 5, Range of values is 0 to 4
  2666                           ; switch strategies available:
  2667                           ; Name         Instructions Cycles
  2668                           ; simple_byte           16     9 (average)
  2669                           ; direct_byte           17     7 (fixed)
  2670                           ; jumptable            260     6 (fixed)
  2671                           ;	Chosen strategy is simple_byte
  2672  03DB  3A00               	xorlw	0	; case 0
  2673  03DC  1903               	skipnz
  2674  03DD  2BBF               	goto	l4746
  2675  03DE  3A01               	xorlw	1	; case 1
  2676  03DF  1903               	skipnz
  2677  03E0  2BC9               	goto	l4752
  2678  03E1  3A03               	xorlw	3	; case 2
  2679  03E2  1903               	skipnz
  2680  03E3  2BCD               	goto	l4754
  2681  03E4  3A01               	xorlw	1	; case 3
  2682  03E5  1903               	skipnz
  2683  03E6  2BD1               	goto	l4756
  2684  03E7  3A07               	xorlw	7	; case 4
  2685  03E8  1903               	skipnz
  2686  03E9  2BD5               	goto	l4758
  2687  03EA  2BEB               	goto	l4764
  2688  03EB                     l4764:	
  2689                           
  2690                           ;PIR_B1.c: 196: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2691  03EB  0821               	movf	(__PIR^(0+128)+1),w
  2692  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2693  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2694  03EE  00DD               	movwf	??_getPIR_AD
  2695  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2696  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2697  03F1  0827               	movf	(__PIR^(0+128)+7),w
  2698  03F2  3EA8               	addlw	(__PIR+8)& (0+255)
  2699  03F3  0084               	movwf	4
  2700  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2701  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2702  03F6  085D               	movf	??_getPIR_AD,w
  2703  03F7  1383               	bcf	3,7	;select IRP bank1
  2704  03F8  0080               	movwf	0
  2705                           
  2706                           ;PIR_B1.c: 197: for (i = 0; i < 10; i++) {
  2707  03F9  01E2               	clrf	getPIR_AD@i
  2708  03FA  300A               	movlw	10
  2709  03FB  0262               	subwf	getPIR_AD@i,w
  2710  03FC  1803               	btfsc	3,0
  2711  03FD  2C1A               	goto	l4778
  2712  03FE                     l4772:	
  2713                           
  2714                           ;PIR_B1.c: 198: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2715  03FE  0862               	movf	getPIR_AD@i,w
  2716  03FF  3EA8               	addlw	(__PIR+8)& (0+255)
  2717  0400  0084               	movwf	4
  2718  0401  0800               	movf	0,w
  2719  0402  00DD               	movwf	??_getPIR_AD
  2720  0403  01DE               	clrf	??_getPIR_AD+1
  2721  0404  085D               	movf	??_getPIR_AD,w
  2722  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0407  07B2               	addwf	(__PIR^(0+128)+18),f
  2725  0408  1803               	skipnc
  2726  0409  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2727  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2728  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2729  040C  085E               	movf	??_getPIR_AD+1,w
  2730  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2731  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2732  040F  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2733  0410  3001               	movlw	1
  2734  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0413  00DD               	movwf	??_getPIR_AD
  2737  0414  085D               	movf	??_getPIR_AD,w
  2738  0415  07E2               	addwf	getPIR_AD@i,f
  2739  0416  300A               	movlw	10
  2740  0417  0262               	subwf	getPIR_AD@i,w
  2741  0418  1C03               	skipc
  2742  0419  2BFE               	goto	l4772
  2743  041A                     l4778:	
  2744                           
  2745                           ;PIR_B1.c: 199: }
  2746                           ;PIR_B1.c: 200: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2747  041A  300A               	movlw	10
  2748  041B  00D5               	movwf	___lwdiv@divisor
  2749  041C  3000               	movlw	0
  2750  041D  00D6               	movwf	___lwdiv@divisor+1
  2751  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2752  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2753  0420  0833               	movf	((__PIR+1)^(0+128)+18),w
  2754  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0423  01D8               	clrf	___lwdiv@dividend+1
  2757  0424  07D8               	addwf	___lwdiv@dividend+1,f
  2758  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2759  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2760  0427  0832               	movf	(__PIR^(0+128)+18),w
  2761  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2763  042A  01D7               	clrf	___lwdiv@dividend
  2764  042B  07D7               	addwf	___lwdiv@dividend,f
  2765  042C  158A  2597  118A   	fcall	___lwdiv
  2766  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0431  0855               	movf	?___lwdiv,w
  2769  0432  00DD               	movwf	??_getPIR_AD
  2770  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2771  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2772  0435  0834               	movf	(__PIR^(0+128)+20),w
  2773  0436  3EB5               	addlw	(__PIR+21)& (0+255)
  2774  0437  0084               	movwf	4
  2775  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2777  043A  085D               	movf	??_getPIR_AD,w
  2778  043B  1383               	bcf	3,7	;select IRP bank1
  2779  043C  0080               	movwf	0
  2780                           
  2781                           ;PIR_B1.c: 201: _PIR.TenAverageValue = 0;
  2782  043D  1683               	bsf	3,5	;RP0=1, select bank1
  2783  043E  1303               	bcf	3,6	;RP1=0, select bank1
  2784  043F  01B2               	clrf	(__PIR^(0+128)+18)
  2785  0440  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2786                           
  2787                           ;PIR_B1.c: 203: for (i = 0; i <= 9; i++) {
  2788  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0443  01E2               	clrf	getPIR_AD@i
  2791  0444  300A               	movlw	10
  2792  0445  0262               	subwf	getPIR_AD@i,w
  2793  0446  1803               	btfsc	3,0
  2794  0447  2C64               	goto	l4794
  2795  0448                     l4788:	
  2796                           
  2797                           ;PIR_B1.c: 204: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2798  0448  0862               	movf	getPIR_AD@i,w
  2799  0449  3EB5               	addlw	(__PIR+21)& (0+255)
  2800  044A  0084               	movwf	4
  2801  044B  0800               	movf	0,w
  2802  044C  00DD               	movwf	??_getPIR_AD
  2803  044D  01DE               	clrf	??_getPIR_AD+1
  2804  044E  085D               	movf	??_getPIR_AD,w
  2805  044F  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0450  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0451  07BF               	addwf	(__PIR^(0+128)+31),f
  2808  0452  1803               	skipnc
  2809  0453  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2810  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0456  085E               	movf	??_getPIR_AD+1,w
  2813  0457  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0458  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0459  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2816  045A  3001               	movlw	1
  2817  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2818  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2819  045D  00DD               	movwf	??_getPIR_AD
  2820  045E  085D               	movf	??_getPIR_AD,w
  2821  045F  07E2               	addwf	getPIR_AD@i,f
  2822  0460  300A               	movlw	10
  2823  0461  0262               	subwf	getPIR_AD@i,w
  2824  0462  1C03               	skipc
  2825  0463  2C48               	goto	l4788
  2826  0464                     l4794:	
  2827                           
  2828                           ;PIR_B1.c: 205: }
  2829                           ;PIR_B1.c: 206: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2830  0464  300A               	movlw	10
  2831  0465  00D5               	movwf	___lwdiv@divisor
  2832  0466  3000               	movlw	0
  2833  0467  00D6               	movwf	___lwdiv@divisor+1
  2834  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2835  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2836  046A  0840               	movf	((__PIR+1)^(0+128)+31),w
  2837  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2838  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2839  046D  01D8               	clrf	___lwdiv@dividend+1
  2840  046E  07D8               	addwf	___lwdiv@dividend+1,f
  2841  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2842  0470  1303               	bcf	3,6	;RP1=0, select bank1
  2843  0471  083F               	movf	(__PIR^(0+128)+31),w
  2844  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0474  01D7               	clrf	___lwdiv@dividend
  2847  0475  07D7               	addwf	___lwdiv@dividend,f
  2848  0476  158A  2597  118A   	fcall	___lwdiv
  2849  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2850  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2851  047B  0855               	movf	?___lwdiv,w
  2852  047C  00DD               	movwf	??_getPIR_AD
  2853  047D  085D               	movf	??_getPIR_AD,w
  2854  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2855  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0480  00A6               	movwf	(__PIR^(0+128)+6)
  2857                           
  2858                           ;PIR_B1.c: 207: _PIR.HundredAverageValue = 0;
  2859  0481  01BF               	clrf	(__PIR^(0+128)+31)
  2860  0482  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2861                           
  2862                           ;PIR_B1.c: 209: if (_PIR.TenCount < 10) {
  2863  0483  300A               	movlw	10
  2864  0484  0227               	subwf	(__PIR^(0+128)+7),w
  2865  0485  1803               	skipnc
  2866  0486  2C90               	goto	l4802
  2867                           
  2868                           ;PIR_B1.c: 210: _PIR.TenCount++;
  2869  0487  3001               	movlw	1
  2870  0488  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0489  1303               	bcf	3,6	;RP1=0, select bank0
  2872  048A  00DD               	movwf	??_getPIR_AD
  2873  048B  085D               	movf	??_getPIR_AD,w
  2874  048C  1683               	bsf	3,5	;RP0=1, select bank1
  2875  048D  1303               	bcf	3,6	;RP1=0, select bank1
  2876  048E  07A7               	addwf	(__PIR^(0+128)+7),f
  2877                           
  2878                           ;PIR_B1.c: 211: } else {
  2879  048F  0008               	return
  2880  0490                     l4802:	
  2881                           
  2882                           ;PIR_B1.c: 212: _PIR.TenCount = 0;
  2883  0490  01A7               	clrf	(__PIR^(0+128)+7)
  2884                           
  2885                           ;PIR_B1.c: 213: if (_PIR.HundreCount < 10)
  2886  0491  300A               	movlw	10
  2887  0492  0234               	subwf	(__PIR^(0+128)+20),w
  2888  0493  1803               	skipnc
  2889  0494  2C9E               	goto	l4808
  2890                           
  2891                           ;PIR_B1.c: 214: _PIR.HundreCount++;
  2892  0495  3001               	movlw	1
  2893  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0498  00DD               	movwf	??_getPIR_AD
  2896  0499  085D               	movf	??_getPIR_AD,w
  2897  049A  1683               	bsf	3,5	;RP0=1, select bank1
  2898  049B  1303               	bcf	3,6	;RP1=0, select bank1
  2899  049C  07B4               	addwf	(__PIR^(0+128)+20),f
  2900  049D  0008               	return
  2901  049E                     l4808:	
  2902                           
  2903                           ;PIR_B1.c: 215: else
  2904                           ;PIR_B1.c: 216: _PIR.HundreCount = 0;
  2905  049E  01B4               	clrf	(__PIR^(0+128)+20)
  2906  049F  0008               	return
  2907  04A0                     __end_of_getPIR_AD:	
  2908                           
  2909                           	psect	text5
  2910  0D97                     __ptext5:	
  2911 ;; *************** function ___lwdiv *****************
  2912 ;; Defined at:
  2913 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  divisor         2    0[BANK0 ] unsigned int 
  2916 ;;  dividend        2    2[BANK0 ] unsigned int 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  quotient        2    5[BANK0 ] unsigned int 
  2919 ;;  counter         1    4[BANK0 ] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  2    0[BANK0 ] unsigned int 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2929 ;;      Params:         0       4       0       0
  2930 ;;      Locals:         0       3       0       0
  2931 ;;      Temps:          1       0       0       0
  2932 ;;      Totals:         1       7       0       0
  2933 ;;Total ram usage:        8 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    2
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_getPIR_AD
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function ___lwdiv
  2945  0D97                     ___lwdiv:	
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2949  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0D99  01DA               	clrf	___lwdiv@quotient
  2952  0D9A  01DB               	clrf	___lwdiv@quotient+1
  2953  0D9B  0856               	movf	___lwdiv@divisor+1,w
  2954  0D9C  0455               	iorwf	___lwdiv@divisor,w
  2955  0D9D  1903               	skipnz
  2956  0D9E  2DD0               	goto	l4644
  2957  0D9F  01D9               	clrf	___lwdiv@counter
  2958  0DA0  0AD9               	incf	___lwdiv@counter,f
  2959  0DA1                     l4632:	
  2960  0DA1  1BD6               	btfsc	___lwdiv@divisor+1,7
  2961  0DA2  2DAF               	goto	l4634
  2962  0DA3  3001               	movlw	1
  2963  0DA4                     u5335:	
  2964  0DA4  1003               	clrc
  2965  0DA5  0DD5               	rlf	___lwdiv@divisor,f
  2966  0DA6  0DD6               	rlf	___lwdiv@divisor+1,f
  2967  0DA7  3EFF               	addlw	-1
  2968  0DA8  1D03               	skipz
  2969  0DA9  2DA4               	goto	u5335
  2970  0DAA  3001               	movlw	1
  2971  0DAB  00F4               	movwf	??___lwdiv
  2972  0DAC  0874               	movf	??___lwdiv,w
  2973  0DAD  07D9               	addwf	___lwdiv@counter,f
  2974  0DAE  2DA1               	goto	l4632
  2975  0DAF                     l4634:	
  2976  0DAF  3001               	movlw	1
  2977  0DB0                     u5355:	
  2978  0DB0  1003               	clrc
  2979  0DB1  0DDA               	rlf	___lwdiv@quotient,f
  2980  0DB2  0DDB               	rlf	___lwdiv@quotient+1,f
  2981  0DB3  3EFF               	addlw	-1
  2982  0DB4  1D03               	skipz
  2983  0DB5  2DB0               	goto	u5355
  2984  0DB6  0856               	movf	___lwdiv@divisor+1,w
  2985  0DB7  0258               	subwf	___lwdiv@dividend+1,w
  2986  0DB8  1D03               	skipz
  2987  0DB9  2DBC               	goto	u5365
  2988  0DBA  0855               	movf	___lwdiv@divisor,w
  2989  0DBB  0257               	subwf	___lwdiv@dividend,w
  2990  0DBC                     u5365:	
  2991  0DBC  1C03               	skipc
  2992  0DBD  2DC5               	goto	l4640
  2993  0DBE  0855               	movf	___lwdiv@divisor,w
  2994  0DBF  02D7               	subwf	___lwdiv@dividend,f
  2995  0DC0  0856               	movf	___lwdiv@divisor+1,w
  2996  0DC1  1C03               	skipc
  2997  0DC2  03D8               	decf	___lwdiv@dividend+1,f
  2998  0DC3  02D8               	subwf	___lwdiv@dividend+1,f
  2999  0DC4  145A               	bsf	___lwdiv@quotient,0
  3000  0DC5                     l4640:	
  3001  0DC5  3001               	movlw	1
  3002  0DC6                     u5375:	
  3003  0DC6  1003               	clrc
  3004  0DC7  0CD6               	rrf	___lwdiv@divisor+1,f
  3005  0DC8  0CD5               	rrf	___lwdiv@divisor,f
  3006  0DC9  3EFF               	addlw	-1
  3007  0DCA  1D03               	skipz
  3008  0DCB  2DC6               	goto	u5375
  3009  0DCC  3001               	movlw	1
  3010  0DCD  02D9               	subwf	___lwdiv@counter,f
  3011  0DCE  1D03               	btfss	3,2
  3012  0DCF  2DAF               	goto	l4634
  3013  0DD0                     l4644:	
  3014  0DD0  085B               	movf	___lwdiv@quotient+1,w
  3015  0DD1  01D6               	clrf	?___lwdiv+1
  3016  0DD2  07D6               	addwf	?___lwdiv+1,f
  3017  0DD3  085A               	movf	___lwdiv@quotient,w
  3018  0DD4  01D5               	clrf	?___lwdiv
  3019  0DD5  07D5               	addwf	?___lwdiv,f
  3020  0DD6  0008               	return
  3021  0DD7                     __end_of___lwdiv:	
  3022                           
  3023                           	psect	text6
  3024  067C                     __ptext6:	
  3025 ;; *************** function _getLoad_AD *****************
  3026 ;; Defined at:
  3027 ;;		line 15 in file "../src/OverLoad_B1.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  channel         1    wreg     unsigned char 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  channel         1    2[BANK0 ] unsigned char 
  3032 ;;  i               1    5[BANK0 ] unsigned char 
  3033 ;;  j               1    4[BANK0 ] unsigned char 
  3034 ;;  k               1    3[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3044 ;;      Params:         0       0       0       0
  3045 ;;      Locals:         0       4       0       0
  3046 ;;      Temps:          0       2       0       0
  3047 ;;      Totals:         0       6       0       0
  3048 ;;Total ram usage:        6 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    4
  3051 ;; This function calls:
  3052 ;;		_getAD
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _getLoad_AD
  3060  067C                     _getLoad_AD:	
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _getLoad_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3064                           ;getLoad_AD@channel stored from wreg
  3065  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3066  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3067  067E  00D7               	movwf	getLoad_AD@channel
  3068                           
  3069                           ;OverLoad_B1.c: 16: char i = 0, j = 0, k = 0;
  3070  067F  01DA               	clrf	getLoad_AD@i
  3071  0680  01D9               	clrf	getLoad_AD@j
  3072  0681  01D8               	clrf	getLoad_AD@k
  3073                           
  3074                           ;OverLoad_B1.c: 18: if (Load.ADtoGO == 1) {
  3075  0682  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0683  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0684  1E4F               	btfss	_Load^(0+128),4
  3078  0685  0008               	return
  3079                           
  3080                           ;OverLoad_B1.c: 19: Load.ADRES = getAD(channel, 0x73);
  3081  0686  3073               	movlw	115
  3082  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0689  00D5               	movwf	??_getLoad_AD
  3085  068A  0855               	movf	??_getLoad_AD,w
  3086  068B  00F4               	movwf	getAD@adcon1
  3087  068C  0857               	movf	getLoad_AD@channel,w
  3088  068D  158A  24EC  118A   	fcall	_getAD
  3089  0690  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0691  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0692  00D6               	movwf	??_getLoad_AD+1
  3092  0693  0856               	movf	??_getLoad_AD+1,w
  3093  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3094  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3095  0696  00E4               	movwf	(_Load^(0+128)+21)
  3096                           
  3097                           ;OverLoad_B1.c: 21: for (i = 0; i < 4; i++) {
  3098  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0698  1303               	bcf	3,6	;RP1=0, select bank0
  3100  0699  01DA               	clrf	getLoad_AD@i
  3101  069A  3004               	movlw	4
  3102  069B  025A               	subwf	getLoad_AD@i,w
  3103  069C  1803               	btfsc	3,0
  3104  069D  2EC3               	goto	l4696
  3105  069E                     l4684:	
  3106                           
  3107                           ;OverLoad_B1.c: 22: if (Load.AH[i] < Load.ADRES && j == 0) {
  3108  069E  085A               	movf	getLoad_AD@i,w
  3109  069F  3ED9               	addlw	(_Load+10)& (0+255)
  3110  06A0  0084               	movwf	4
  3111  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  3112  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  3113  06A3  0864               	movf	(_Load^(0+128)+21),w
  3114  06A4  1383               	bcf	3,7	;select IRP bank1
  3115  06A5  0200               	subwf	0,w
  3116  06A6  1803               	skipnc
  3117  06A7  2EBA               	goto	l4692
  3118  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3119  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3120  06AA  08D9               	movf	getLoad_AD@j,f
  3121  06AB  1D03               	skipz
  3122  06AC  2EBA               	goto	l4692
  3123                           
  3124                           ;OverLoad_B1.c: 23: Load.AH[i] = Load.ADRES;
  3125  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  3126  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  3127  06AF  0864               	movf	(_Load^(0+128)+21),w
  3128  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3129  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3130  06B2  00D5               	movwf	??_getLoad_AD
  3131  06B3  085A               	movf	getLoad_AD@i,w
  3132  06B4  3ED9               	addlw	(_Load+10)& (0+255)
  3133  06B5  0084               	movwf	4
  3134  06B6  0855               	movf	??_getLoad_AD,w
  3135  06B7  0080               	movwf	0
  3136                           
  3137                           ;OverLoad_B1.c: 24: j = 1;
  3138  06B8  01D9               	clrf	getLoad_AD@j
  3139  06B9  0AD9               	incf	getLoad_AD@j,f
  3140  06BA                     l4692:	
  3141  06BA  3001               	movlw	1
  3142  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3143  06BC  00D5               	movwf	??_getLoad_AD
  3144  06BD  0855               	movf	??_getLoad_AD,w
  3145  06BE  07DA               	addwf	getLoad_AD@i,f
  3146  06BF  3004               	movlw	4
  3147  06C0  025A               	subwf	getLoad_AD@i,w
  3148  06C1  1C03               	skipc
  3149  06C2  2E9E               	goto	l4684
  3150  06C3                     l4696:	
  3151                           
  3152                           ;OverLoad_B1.c: 25: }
  3153                           ;OverLoad_B1.c: 26: }
  3154                           ;OverLoad_B1.c: 27: if (j == 0) {
  3155  06C3  08D9               	movf	getLoad_AD@j,f
  3156  06C4  1D03               	skipz
  3157  06C5  0008               	return
  3158                           
  3159                           ;OverLoad_B1.c: 28: for (i = 0; i < 4; i++) {
  3160  06C6  01DA               	clrf	getLoad_AD@i
  3161  06C7                     L6:	
  3162  06C7  3004               	movlw	4
  3163  06C8  025A               	subwf	getLoad_AD@i,w
  3164  06C9  1803               	btfsc	3,0
  3165  06CA  0008               	return
  3166                           
  3167                           ;OverLoad_B1.c: 29: if (Load.AL[i] > Load.ADRES && k == 0) {
  3168  06CB  085A               	movf	getLoad_AD@i,w
  3169  06CC  3EDE               	addlw	(_Load+15)& (0+255)
  3170  06CD  0084               	movwf	4
  3171  06CE  1383               	bcf	3,7	;select IRP bank1
  3172  06CF  0800               	movf	0,w
  3173  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3174  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3175  06D2  0264               	subwf	(_Load^(0+128)+21),w
  3176  06D3  1803               	skipnc
  3177  06D4  2EE7               	goto	l4712
  3178  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3179  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3180  06D7  08D8               	movf	getLoad_AD@k,f
  3181  06D8  1D03               	skipz
  3182  06D9  2EE7               	goto	l4712
  3183                           
  3184                           ;OverLoad_B1.c: 30: Load.AL[i] = Load.ADRES;
  3185  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  3186  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  3187  06DC  0864               	movf	(_Load^(0+128)+21),w
  3188  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3189  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3190  06DF  00D5               	movwf	??_getLoad_AD
  3191  06E0  085A               	movf	getLoad_AD@i,w
  3192  06E1  3EDE               	addlw	(_Load+15)& (0+255)
  3193  06E2  0084               	movwf	4
  3194  06E3  0855               	movf	??_getLoad_AD,w
  3195  06E4  0080               	movwf	0
  3196                           
  3197                           ;OverLoad_B1.c: 31: k = 1;
  3198  06E5  01D8               	clrf	getLoad_AD@k
  3199  06E6  0AD8               	incf	getLoad_AD@k,f
  3200  06E7                     l4712:	
  3201  06E7  3001               	movlw	1
  3202  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  3203  06E9  00D5               	movwf	??_getLoad_AD
  3204  06EA  0855               	movf	??_getLoad_AD,w
  3205  06EB  07DA               	addwf	getLoad_AD@i,f
  3206  06EC  2EC7               	goto	L6
  3207  06ED                     __end_of_getLoad_AD:	
  3208                           
  3209                           	psect	text7
  3210  0D08                     __ptext7:	
  3211 ;; *************** function _getCDS_AD *****************
  3212 ;; Defined at:
  3213 ;;		line 45 in file "../src/CDS_B1.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  channel1        1    wreg     unsigned char 
  3216 ;;  channel2        1    6[COMMON] unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  channel1        1    4[BANK0 ] unsigned char 
  3219 ;;  j               1    3[BANK0 ] unsigned char 
  3220 ;;  i               1    2[BANK0 ] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;		None               void
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3230 ;;      Params:         1       0       0       0
  3231 ;;      Locals:         0       3       0       0
  3232 ;;      Temps:          0       2       0       0
  3233 ;;      Totals:         1       5       0       0
  3234 ;;Total ram usage:        6 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    4
  3237 ;; This function calls:
  3238 ;;		_getAD
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _getCDS_AD
  3246  0D08                     _getCDS_AD:	
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3250                           ;getCDS_AD@channel1 stored from wreg
  3251  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0D0A  00D9               	movwf	getCDS_AD@channel1
  3254                           
  3255                           ;CDS_B1.c: 46: char i = 0, j = 0;
  3256  0D0B  01D7               	clrf	getCDS_AD@i
  3257  0D0C  01D8               	clrf	getCDS_AD@j
  3258                           
  3259                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  3260  0D0D  1DAE               	btfss	__CDS,3
  3261  0D0E  0008               	return
  3262                           
  3263                           ;CDS_B1.c: 48: _CDS.GO = 1;
  3264  0D0F  14AE               	bsf	__CDS,1
  3265                           
  3266                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  3267  0D10  3070               	movlw	112
  3268  0D11  00D5               	movwf	??_getCDS_AD
  3269  0D12  0855               	movf	??_getCDS_AD,w
  3270  0D13  00F4               	movwf	getAD@adcon1
  3271  0D14  0859               	movf	getCDS_AD@channel1,w
  3272  0D15  158A  24EC  158A   	fcall	_getAD
  3273  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0D1A  00D6               	movwf	??_getCDS_AD+1
  3276  0D1B  0856               	movf	??_getCDS_AD+1,w
  3277  0D1C  00B2               	movwf	__CDS+4
  3278                           
  3279                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  3280  0D1D  0832               	movf	__CDS+4,w
  3281  0D1E  00D5               	movwf	??_getCDS_AD
  3282  0D1F  0855               	movf	??_getCDS_AD,w
  3283  0D20  00B0               	movwf	__CDS+2
  3284                           
  3285                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  3286  0D21  3070               	movlw	112
  3287  0D22  00D5               	movwf	??_getCDS_AD
  3288  0D23  0855               	movf	??_getCDS_AD,w
  3289  0D24  00F4               	movwf	getAD@adcon1
  3290  0D25  0876               	movf	getCDS_AD@channel2,w
  3291  0D26  158A  24EC         	fcall	_getAD
  3292  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0D2A  00D6               	movwf	??_getCDS_AD+1
  3295  0D2B  0856               	movf	??_getCDS_AD+1,w
  3296  0D2C  00B2               	movwf	__CDS+4
  3297                           
  3298                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  3299  0D2D  0832               	movf	__CDS+4,w
  3300  0D2E  00D5               	movwf	??_getCDS_AD
  3301  0D2F  0855               	movf	??_getCDS_AD,w
  3302  0D30  00B1               	movwf	__CDS+3
  3303  0D31  0008               	return
  3304  0D32                     __end_of_getCDS_AD:	
  3305                           
  3306                           	psect	text8
  3307  0CEC                     __ptext8:	
  3308 ;; *************** function _getAD *****************
  3309 ;; Defined at:
  3310 ;;		line 426 in file "../src/MCU_B1.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  adcon0          1    wreg     unsigned char 
  3313 ;;  adcon1          1    4[COMMON] unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  adcon0          1    5[COMMON] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3325 ;;      Params:         1       0       0       0
  3326 ;;      Locals:         1       0       0       0
  3327 ;;      Temps:          0       0       0       0
  3328 ;;      Totals:         2       0       0       0
  3329 ;;Total ram usage:        2 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    3
  3332 ;; This function calls:
  3333 ;;		_Timeout_Counter
  3334 ;;		_set_TimeoutCleared
  3335 ;; This function is called by:
  3336 ;;		_getCDS_AD
  3337 ;;		_getLoad_AD
  3338 ;;		_getTemp_AD
  3339 ;;		_getPIR_AD
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _getAD
  3345  0CEC                     _getAD:	
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3349                           ;getAD@adcon0 stored from wreg
  3350  0CEC  00F5               	movwf	getAD@adcon0
  3351                           
  3352                           ;MCU_B1.c: 427: ADCON0 = adcon0;
  3353  0CED  0875               	movf	getAD@adcon0,w
  3354  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0CF0  009F               	movwf	31	;volatile
  3357                           
  3358                           ;MCU_B1.c: 428: ADCON1 = adcon1;
  3359  0CF1  0874               	movf	getAD@adcon1,w
  3360  0CF2  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0CF3  1303               	bcf	3,6	;RP1=0, select bank1
  3362  0CF4  009F               	movwf	31	;volatile
  3363                           
  3364                           ;MCU_B1.c: 429: GO_nDONE = 1;
  3365  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0CF7  149F               	bsf	31,1	;volatile
  3368                           
  3369                           ;MCU_B1.c: 430: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3370  0CF8  2CFC               	goto	l3184
  3371  0CF9                     l3182:	
  3372                           
  3373                           ;MCU_B1.c: 431: Timeout_Counter();
  3374  0CF9  158A  2431  158A   	fcall	_Timeout_Counter
  3375  0CFC                     l3184:	
  3376  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0CFE  1C9F               	btfss	31,1	;volatile
  3379  0CFF  2D02               	goto	l3188
  3380  0D00  1D26               	btfss	_myMain+6,2
  3381  0D01  2CF9               	goto	l3182
  3382  0D02                     l3188:	
  3383                           
  3384                           ;MCU_B1.c: 432: };
  3385                           ;MCU_B1.c: 433: set_TimeoutCleared();
  3386  0D02  158A  2307         	fcall	_set_TimeoutCleared
  3387                           
  3388                           ;MCU_B1.c: 434: return ADRES;
  3389  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0D06  081E               	movf	30,w	;volatile
  3392  0D07  0008               	return
  3393  0D08                     __end_of_getAD:	
  3394                           
  3395                           	psect	text9
  3396  0B07                     __ptext9:	
  3397 ;; *************** function _set_TimeoutCleared *****************
  3398 ;; Defined at:
  3399 ;;		line 270 in file "../src/Main_B1.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		status,2
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3413 ;;      Params:         0       0       0       0
  3414 ;;      Locals:         0       0       0       0
  3415 ;;      Temps:          0       0       0       0
  3416 ;;      Totals:         0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    2
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_getAD
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _set_TimeoutCleared
  3429  0B07                     _set_TimeoutCleared:	
  3430                           
  3431                           ;Main_B1.c: 271: myMain.Timeout = 0;
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _set_TimeoutCleared: [status,2]
  3435  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0B09  1126               	bcf	_myMain+6,2
  3438                           
  3439                           ;Main_B1.c: 272: myMain.Timeout_Counter = 0;
  3440  0B0A  01A7               	clrf	_myMain+7
  3441  0B0B  01A8               	clrf	_myMain+8
  3442  0B0C  0008               	return
  3443  0B0D                     __end_of_set_TimeoutCleared:	
  3444                           
  3445                           	psect	text10
  3446  0C31                     __ptext10:	
  3447 ;; *************** function _Timeout_Counter *****************
  3448 ;; Defined at:
  3449 ;;		line 261 in file "../src/Main_B1.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg, status,2
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3463 ;;      Params:         0       0       0       0
  3464 ;;      Locals:         0       0       0       0
  3465 ;;      Temps:          0       0       0       0
  3466 ;;      Totals:         0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    2
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_getAD
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _Timeout_Counter
  3479  0C31                     _Timeout_Counter:	
  3480                           
  3481                           ;Main_B1.c: 262: myMain.Timeout_Counter++;
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3485  0C31  3001               	movlw	1
  3486  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0C33  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0C34  07A7               	addwf	_myMain+7,f
  3489  0C35  1803               	skipnc
  3490  0C36  0AA8               	incf	_myMain+8,f
  3491  0C37  3000               	movlw	0
  3492  0C38  07A8               	addwf	_myMain+8,f
  3493                           
  3494                           ;Main_B1.c: 263: if (myMain.Timeout_Counter == 10000) {
  3495  0C39  3027               	movlw	39
  3496  0C3A  0628               	xorwf	_myMain+8,w
  3497  0C3B  1D03               	skipz
  3498  0C3C  2C3F               	goto	u2535
  3499  0C3D  3010               	movlw	16
  3500  0C3E  0627               	xorwf	_myMain+7,w
  3501  0C3F                     u2535:	
  3502  0C3F  1D03               	skipz
  3503  0C40  0008               	return
  3504                           
  3505                           ;Main_B1.c: 264: myMain.Timeout_Counter = 0;
  3506  0C41  01A7               	clrf	_myMain+7
  3507  0C42  01A8               	clrf	_myMain+8
  3508                           
  3509                           ;Main_B1.c: 265: myMain.Timeout = 1;
  3510  0C43  1526               	bsf	_myMain+6,2
  3511  0C44  0008               	return
  3512  0C45                     __end_of_Timeout_Counter:	
  3513                           
  3514                           	psect	text11
  3515  0BD5                     __ptext11:	
  3516 ;; *************** function _WDT_Main *****************
  3517 ;; Defined at:
  3518 ;;		line 1019 in file "../src/MCU_B1.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;		None               void
  3525 ;; Registers used:
  3526 ;;		wreg, status,2, status,0, pclath, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3532 ;;      Params:         0       0       0       0
  3533 ;;      Locals:         0       0       0       0
  3534 ;;      Temps:          1       0       0       0
  3535 ;;      Totals:         1       0       0       0
  3536 ;;Total ram usage:        1 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    3
  3539 ;; This function calls:
  3540 ;;		_WDT_Clearing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _WDT_Main
  3548  0BD5                     _WDT_Main:	
  3549                           
  3550                           ;MCU_B1.c: 1020: if (WDT.Enable == 1) {
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3554  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  3555  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  3556  0BD7  1C3A               	btfss	_WDT,0
  3557  0BD8  0008               	return
  3558                           
  3559                           ;MCU_B1.c: 1021: if (WDT.Timer-- > 0) {
  3560  0BD9  3001               	movlw	1
  3561  0BDA  02BB               	subwf	_WDT+1,f
  3562  0BDB  083B               	movf	_WDT+1,w
  3563  0BDC  3AFF               	xorlw	255
  3564  0BDD  1903               	skipnz
  3565  0BDE  0008               	return
  3566                           
  3567                           ;MCU_B1.c: 1022: WDT.Timer = 100;
  3568  0BDF  3064               	movlw	100
  3569  0BE0  00F4               	movwf	??_WDT_Main
  3570  0BE1  0874               	movf	??_WDT_Main,w
  3571  0BE2  00BB               	movwf	_WDT+1
  3572                           
  3573                           ;MCU_B1.c: 1023: WDT_Clearing();
  3574  0BE3  118A  2002         	fcall	_WDT_Clearing
  3575  0BE5  0008               	return
  3576  0BE6                     __end_of_WDT_Main:	
  3577                           
  3578                           	psect	text12
  3579  0002                     __ptext12:	
  3580 ;; *************** function _WDT_Clearing *****************
  3581 ;; Defined at:
  3582 ;;		line 1029 in file "../src/MCU_B1.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;		None               void
  3589 ;; Registers used:
  3590 ;;		None
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3596 ;;      Params:         0       0       0       0
  3597 ;;      Locals:         0       0       0       0
  3598 ;;      Temps:          0       0       0       0
  3599 ;;      Totals:         0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    2
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_WDT_Main
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _WDT_Clearing
  3612  0002                     _WDT_Clearing:	
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _WDT_Clearing: []
  3616  0002  0064               	clrwdt	;# 
  3617  0003  0008               	return
  3618  0004                     __end_of_WDT_Clearing:	
  3619                           
  3620                           	psect	text13
  3621  0ADC                     __ptext13:	
  3622 ;; *************** function _Temp_Main *****************
  3623 ;; Defined at:
  3624 ;;		line 51 in file "../src/OverTemperature_B1.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3638 ;;      Params:         0       0       0       0
  3639 ;;      Locals:         0       0       0       0
  3640 ;;      Temps:          0       0       0       0
  3641 ;;      Totals:         0       0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    6
  3645 ;; This function calls:
  3646 ;;		_setTemp_Main
  3647 ;; This function is called by:
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function _Temp_Main
  3654  0ADC                     _Temp_Main:	
  3655                           
  3656                           ;OverTemperature_B1.c: 53: setTemp_Main();
  3657                           
  3658                           ;incstack = 0
  3659                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3660  0ADC  118A  25F8         	fcall	_setTemp_Main
  3661  0ADE  0008               	return
  3662  0ADF                     __end_of_Temp_Main:	
  3663                           
  3664                           	psect	text14
  3665  05F8                     __ptext14:	
  3666 ;; *************** function _setTemp_Main *****************
  3667 ;; Defined at:
  3668 ;;		line 58 in file "../src/OverTemperature_B1.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;		None               void
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3682 ;;      Params:         0       0       0       0
  3683 ;;      Locals:         0       0       0       0
  3684 ;;      Temps:          0       1       0       0
  3685 ;;      Totals:         0       1       0       0
  3686 ;;Total ram usage:        1 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    5
  3689 ;; This function calls:
  3690 ;;		___awdiv
  3691 ;;		_getMain_All_Error_Status
  3692 ;;		_getMain_LightsStatus
  3693 ;; This function is called by:
  3694 ;;		_Temp_Main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _setTemp_Main
  3700  05F8                     _setTemp_Main:	
  3701                           
  3702                           ;OverTemperature_B1.c: 59: if (Temp.Enable == 1) {
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3706  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3707  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3708  05FA  1C3D               	btfss	_Temp,0
  3709  05FB  2E78               	goto	l809
  3710                           
  3711                           ;OverTemperature_B1.c: 60: if (Temp.ADtoGO == 0) {
  3712  05FC  193D               	btfsc	_Temp,2
  3713  05FD  2E0F               	goto	l4486
  3714                           
  3715                           ;OverTemperature_B1.c: 61: Temp.Time++;
  3716  05FE  3001               	movlw	1
  3717  05FF  07BE               	addwf	_Temp+1,f
  3718  0600  1803               	skipnc
  3719  0601  0ABF               	incf	_Temp+2,f
  3720  0602  3000               	movlw	0
  3721  0603  07BF               	addwf	_Temp+2,f
  3722                           
  3723                           ;OverTemperature_B1.c: 62: if (Temp.Time >= 500) {
  3724  0604  3001               	movlw	1
  3725  0605  023F               	subwf	_Temp+2,w
  3726  0606  30F4               	movlw	244
  3727  0607  1903               	skipnz
  3728  0608  023E               	subwf	_Temp+1,w
  3729  0609  1C03               	skipc
  3730  060A  0008               	return
  3731                           
  3732                           ;OverTemperature_B1.c: 63: Temp.Time = 0;
  3733  060B  01BE               	clrf	_Temp+1
  3734  060C  01BF               	clrf	_Temp+2
  3735                           
  3736                           ;OverTemperature_B1.c: 64: Temp.ADtoGO = 1;
  3737  060D  153D               	bsf	_Temp,2
  3738                           
  3739                           ;OverTemperature_B1.c: 65: }
  3740                           ;OverTemperature_B1.c: 66: } else {
  3741  060E  0008               	return
  3742  060F                     l4486:	
  3743                           
  3744                           ;OverTemperature_B1.c: 67: if (getMain_All_Error_Status(2) == 0) {
  3745  060F  3002               	movlw	2
  3746  0610  158A  2678  118A   	fcall	_getMain_All_Error_Status
  3747  0613  3800               	iorlw	0
  3748  0614  1D03               	skipz
  3749  0615  0008               	return
  3750                           
  3751                           ;OverTemperature_B1.c: 68: Temp.Time++;
  3752  0616  3001               	movlw	1
  3753  0617  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0618  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0619  07BE               	addwf	_Temp+1,f
  3756  061A  1803               	skipnc
  3757  061B  0ABF               	incf	_Temp+2,f
  3758  061C  3000               	movlw	0
  3759  061D  07BF               	addwf	_Temp+2,f
  3760                           
  3761                           ;OverTemperature_B1.c: 69: if (Temp.Time >= 5) {
  3762  061E  3000               	movlw	0
  3763  061F  023F               	subwf	_Temp+2,w
  3764  0620  3005               	movlw	5
  3765  0621  1903               	skipnz
  3766  0622  023E               	subwf	_Temp+1,w
  3767  0623  1C03               	skipc
  3768  0624  0008               	return
  3769                           
  3770                           ;OverTemperature_B1.c: 70: Temp.Time = 0;
  3771  0625  01BE               	clrf	_Temp+1
  3772  0626  01BF               	clrf	_Temp+2
  3773                           
  3774                           ;OverTemperature_B1.c: 71: if (Temp.GO == 1) {
  3775  0627  1E3D               	btfss	_Temp,4
  3776  0628  0008               	return
  3777                           
  3778                           ;OverTemperature_B1.c: 72: Temp.ADtoGO = 0;
  3779  0629  113D               	bcf	_Temp,2
  3780                           
  3781                           ;OverTemperature_B1.c: 73: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3782  062A  3002               	movlw	2
  3783  062B  00D5               	movwf	___awdiv@divisor
  3784  062C  3000               	movlw	0
  3785  062D  00D6               	movwf	___awdiv@divisor+1
  3786  062E  0844               	movf	_Temp+7,w
  3787  062F  0745               	addwf	_Temp+8,w
  3788  0630  00D7               	movwf	___awdiv@dividend
  3789  0631  01D8               	clrf	___awdiv@dividend+1
  3790  0632  0DD8               	rlf	___awdiv@dividend+1,f
  3791  0633  158A  26D2  118A   	fcall	___awdiv
  3792  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0638  0855               	movf	?___awdiv,w
  3795  0639  00DD               	movwf	??_setTemp_Main
  3796  063A  085D               	movf	??_setTemp_Main,w
  3797  063B  00C3               	movwf	_Temp+6
  3798                           
  3799                           ;OverTemperature_B1.c: 75: if (getMain_LightsStatus() == 1) {
  3800  063C  158A  241D  118A   	fcall	_getMain_LightsStatus
  3801  063F  3A01               	xorlw	1
  3802  0640  1D03               	skipz
  3803  0641  2E4A               	goto	l4502
  3804                           
  3805                           ;OverTemperature_B1.c: 76: Temp.SafeValue = 170;
  3806  0642  30AA               	movlw	170
  3807  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0645  00DD               	movwf	??_setTemp_Main
  3810  0646  085D               	movf	??_setTemp_Main,w
  3811  0647  00C7               	movwf	_Temp+10
  3812                           
  3813                           ;OverTemperature_B1.c: 77: Temp.DangerValue = 140;
  3814  0648  308C               	movlw	140
  3815  0649  2E51               	goto	L7
  3816  064A                     l4502:	
  3817                           ;OverTemperature_B1.c: 78: } else {
  3818                           
  3819                           
  3820                           ;OverTemperature_B1.c: 79: Temp.SafeValue = 100;
  3821  064A  3064               	movlw	100
  3822  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3823  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3824  064D  00DD               	movwf	??_setTemp_Main
  3825  064E  085D               	movf	??_setTemp_Main,w
  3826  064F  00C7               	movwf	_Temp+10
  3827                           
  3828                           ;OverTemperature_B1.c: 80: Temp.DangerValue = 70;
  3829  0650  3046               	movlw	70
  3830  0651                     L7:	
  3831  0651  00DD               	movwf	??_setTemp_Main
  3832  0652  085D               	movf	??_setTemp_Main,w
  3833  0653  00C8               	movwf	_Temp+11
  3834                           
  3835                           ;OverTemperature_B1.c: 81: }
  3836                           ;OverTemperature_B1.c: 90: if (Temp.ERROR == 1) {
  3837  0654  1CBD               	btfss	_Temp,1
  3838  0655  2E65               	goto	l4518
  3839                           
  3840                           ;OverTemperature_B1.c: 91: if (Temp.AD >= Temp.SafeValue) {
  3841  0656  0847               	movf	_Temp+10,w
  3842  0657  0243               	subwf	_Temp+6,w
  3843  0658  1C03               	skipc
  3844  0659  2E74               	goto	l4528
  3845                           
  3846                           ;OverTemperature_B1.c: 92: Temp.Count++;
  3847  065A  3001               	movlw	1
  3848  065B  00DD               	movwf	??_setTemp_Main
  3849  065C  085D               	movf	??_setTemp_Main,w
  3850  065D  07C0               	addwf	_Temp+3,f
  3851                           
  3852                           ;OverTemperature_B1.c: 93: if (Temp.Count >= 3) {
  3853  065E  3003               	movlw	3
  3854  065F  0240               	subwf	_Temp+3,w
  3855  0660  1C03               	skipc
  3856  0661  2E75               	goto	l822
  3857                           
  3858                           ;OverTemperature_B1.c: 94: Temp.Count = 0;
  3859  0662  01C0               	clrf	_Temp+3
  3860                           
  3861                           ;OverTemperature_B1.c: 95: Temp.ERROR = 0;
  3862  0663  10BD               	bcf	_Temp,1
  3863                           
  3864                           ;OverTemperature_B1.c: 96: }
  3865                           ;OverTemperature_B1.c: 97: } else {
  3866  0664  2E75               	goto	l822
  3867  0665                     l4518:	
  3868                           ;OverTemperature_B1.c: 99: }
  3869                           ;OverTemperature_B1.c: 100: } else {
  3870                           
  3871                           ;OverTemperature_B1.c: 98: Temp.Count = 0;
  3872                           
  3873                           
  3874                           ;OverTemperature_B1.c: 101: if (Temp.AD <= Temp.DangerValue) {
  3875  0665  0843               	movf	_Temp+6,w
  3876  0666  0248               	subwf	_Temp+11,w
  3877  0667  1C03               	skipc
  3878  0668  2E74               	goto	l4528
  3879                           
  3880                           ;OverTemperature_B1.c: 102: Temp.Count++;
  3881  0669  3001               	movlw	1
  3882  066A  00DD               	movwf	??_setTemp_Main
  3883  066B  085D               	movf	??_setTemp_Main,w
  3884  066C  07C0               	addwf	_Temp+3,f
  3885                           
  3886                           ;OverTemperature_B1.c: 103: if (Temp.Count >= 3) {
  3887  066D  3003               	movlw	3
  3888  066E  0240               	subwf	_Temp+3,w
  3889  066F  1C03               	skipc
  3890  0670  2E75               	goto	l822
  3891                           
  3892                           ;OverTemperature_B1.c: 104: Temp.Count = 0;
  3893  0671  01C0               	clrf	_Temp+3
  3894                           
  3895                           ;OverTemperature_B1.c: 105: Temp.ERROR = 1;
  3896  0672  14BD               	bsf	_Temp,1
  3897                           
  3898                           ;OverTemperature_B1.c: 106: }
  3899                           ;OverTemperature_B1.c: 107: } else {
  3900  0673  2E75               	goto	l822
  3901  0674                     l4528:	
  3902                           
  3903                           ;OverTemperature_B1.c: 108: Temp.Count = 0;
  3904  0674  01C0               	clrf	_Temp+3
  3905  0675                     l822:	
  3906                           
  3907                           ;OverTemperature_B1.c: 109: }
  3908                           ;OverTemperature_B1.c: 110: }
  3909                           ;OverTemperature_B1.c: 111: ;;
  3910                           ;OverTemperature_B1.c: 112: ;;
  3911                           ;OverTemperature_B1.c: 115: Temp.ADH[0] = 0;
  3912  0675  01C4               	clrf	_Temp+7
  3913                           
  3914                           ;OverTemperature_B1.c: 116: Temp.ADH[1] = 0;
  3915  0676  01C5               	clrf	_Temp+8
  3916                           
  3917                           ;OverTemperature_B1.c: 117: }
  3918                           ;OverTemperature_B1.c: 118: }
  3919                           ;OverTemperature_B1.c: 119: }
  3920                           ;OverTemperature_B1.c: 120: }
  3921                           ;OverTemperature_B1.c: 121: } else {
  3922  0677  0008               	return
  3923  0678                     l809:	
  3924                           
  3925                           ;OverTemperature_B1.c: 122: if (myMain.PowerON == 1) {
  3926  0678  1C20               	btfss	_myMain,0
  3927  0679  0008               	return
  3928                           
  3929                           ;OverTemperature_B1.c: 123: Temp.Enable = 1;
  3930  067A  143D               	bsf	_Temp,0
  3931  067B  0008               	return
  3932  067C                     __end_of_setTemp_Main:	
  3933                           
  3934                           	psect	text15
  3935  0ED2                     __ptext15:	
  3936 ;; *************** function ___awdiv *****************
  3937 ;; Defined at:
  3938 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  divisor         2    0[BANK0 ] int 
  3941 ;;  dividend        2    2[BANK0 ] int 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  quotient        2    6[BANK0 ] int 
  3944 ;;  sign            1    5[BANK0 ] unsigned char 
  3945 ;;  counter         1    4[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2    0[BANK0 ] int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3955 ;;      Params:         0       4       0       0
  3956 ;;      Locals:         0       4       0       0
  3957 ;;      Temps:          1       0       0       0
  3958 ;;      Totals:         1       8       0       0
  3959 ;;Total ram usage:        9 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    2
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_setTemp_Main
  3966 ;;		_getPIR_AD
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function ___awdiv
  3972  0ED2                     ___awdiv:	
  3973                           
  3974                           ;incstack = 0
  3975                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3976  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0ED4  01DA               	clrf	___awdiv@sign
  3979  0ED5  1FD6               	btfss	___awdiv@divisor+1,7
  3980  0ED6  2EDE               	goto	l4314
  3981  0ED7  09D5               	comf	___awdiv@divisor,f
  3982  0ED8  09D6               	comf	___awdiv@divisor+1,f
  3983  0ED9  0AD5               	incf	___awdiv@divisor,f
  3984  0EDA  1903               	skipnz
  3985  0EDB  0AD6               	incf	___awdiv@divisor+1,f
  3986  0EDC  01DA               	clrf	___awdiv@sign
  3987  0EDD  0ADA               	incf	___awdiv@sign,f
  3988  0EDE                     l4314:	
  3989  0EDE  1FD8               	btfss	___awdiv@dividend+1,7
  3990  0EDF  2EE9               	goto	l4320
  3991  0EE0  09D7               	comf	___awdiv@dividend,f
  3992  0EE1  09D8               	comf	___awdiv@dividend+1,f
  3993  0EE2  0AD7               	incf	___awdiv@dividend,f
  3994  0EE3  1903               	skipnz
  3995  0EE4  0AD8               	incf	___awdiv@dividend+1,f
  3996  0EE5  3001               	movlw	1
  3997  0EE6  00F4               	movwf	??___awdiv
  3998  0EE7  0874               	movf	??___awdiv,w
  3999  0EE8  06DA               	xorwf	___awdiv@sign,f
  4000  0EE9                     l4320:	
  4001  0EE9  01DB               	clrf	___awdiv@quotient
  4002  0EEA  01DC               	clrf	___awdiv@quotient+1
  4003  0EEB  0856               	movf	___awdiv@divisor+1,w
  4004  0EEC  0455               	iorwf	___awdiv@divisor,w
  4005  0EED  1903               	skipnz
  4006  0EEE  2F20               	goto	l4342
  4007  0EEF  01D9               	clrf	___awdiv@counter
  4008  0EF0  0AD9               	incf	___awdiv@counter,f
  4009  0EF1                     l4330:	
  4010  0EF1  1BD6               	btfsc	___awdiv@divisor+1,7
  4011  0EF2  2EFF               	goto	l4332
  4012  0EF3  3001               	movlw	1
  4013  0EF4                     u4705:	
  4014  0EF4  1003               	clrc
  4015  0EF5  0DD5               	rlf	___awdiv@divisor,f
  4016  0EF6  0DD6               	rlf	___awdiv@divisor+1,f
  4017  0EF7  3EFF               	addlw	-1
  4018  0EF8  1D03               	skipz
  4019  0EF9  2EF4               	goto	u4705
  4020  0EFA  3001               	movlw	1
  4021  0EFB  00F4               	movwf	??___awdiv
  4022  0EFC  0874               	movf	??___awdiv,w
  4023  0EFD  07D9               	addwf	___awdiv@counter,f
  4024  0EFE  2EF1               	goto	l4330
  4025  0EFF                     l4332:	
  4026  0EFF  3001               	movlw	1
  4027  0F00                     u4725:	
  4028  0F00  1003               	clrc
  4029  0F01  0DDB               	rlf	___awdiv@quotient,f
  4030  0F02  0DDC               	rlf	___awdiv@quotient+1,f
  4031  0F03  3EFF               	addlw	-1
  4032  0F04  1D03               	skipz
  4033  0F05  2F00               	goto	u4725
  4034  0F06  0856               	movf	___awdiv@divisor+1,w
  4035  0F07  0258               	subwf	___awdiv@dividend+1,w
  4036  0F08  1D03               	skipz
  4037  0F09  2F0C               	goto	u4735
  4038  0F0A  0855               	movf	___awdiv@divisor,w
  4039  0F0B  0257               	subwf	___awdiv@dividend,w
  4040  0F0C                     u4735:	
  4041  0F0C  1C03               	skipc
  4042  0F0D  2F15               	goto	l4338
  4043  0F0E  0855               	movf	___awdiv@divisor,w
  4044  0F0F  02D7               	subwf	___awdiv@dividend,f
  4045  0F10  0856               	movf	___awdiv@divisor+1,w
  4046  0F11  1C03               	skipc
  4047  0F12  03D8               	decf	___awdiv@dividend+1,f
  4048  0F13  02D8               	subwf	___awdiv@dividend+1,f
  4049  0F14  145B               	bsf	___awdiv@quotient,0
  4050  0F15                     l4338:	
  4051  0F15  3001               	movlw	1
  4052  0F16                     u4745:	
  4053  0F16  1003               	clrc
  4054  0F17  0CD6               	rrf	___awdiv@divisor+1,f
  4055  0F18  0CD5               	rrf	___awdiv@divisor,f
  4056  0F19  3EFF               	addlw	-1
  4057  0F1A  1D03               	skipz
  4058  0F1B  2F16               	goto	u4745
  4059  0F1C  3001               	movlw	1
  4060  0F1D  02D9               	subwf	___awdiv@counter,f
  4061  0F1E  1D03               	btfss	3,2
  4062  0F1F  2EFF               	goto	l4332
  4063  0F20                     l4342:	
  4064  0F20  085A               	movf	___awdiv@sign,w
  4065  0F21  1903               	btfsc	3,2
  4066  0F22  2F28               	goto	l4346
  4067  0F23  09DB               	comf	___awdiv@quotient,f
  4068  0F24  09DC               	comf	___awdiv@quotient+1,f
  4069  0F25  0ADB               	incf	___awdiv@quotient,f
  4070  0F26  1903               	skipnz
  4071  0F27  0ADC               	incf	___awdiv@quotient+1,f
  4072  0F28                     l4346:	
  4073  0F28  085C               	movf	___awdiv@quotient+1,w
  4074  0F29  01D6               	clrf	?___awdiv+1
  4075  0F2A  07D6               	addwf	?___awdiv+1,f
  4076  0F2B  085B               	movf	___awdiv@quotient,w
  4077  0F2C  01D5               	clrf	?___awdiv
  4078  0F2D  07D5               	addwf	?___awdiv,f
  4079  0F2E  0008               	return
  4080  0F2F                     __end_of___awdiv:	
  4081                           
  4082                           	psect	text16
  4083  0AD9                     __ptext16:	
  4084 ;; *************** function _Temp_Initialization *****************
  4085 ;; Defined at:
  4086 ;;		line 9 in file "../src/OverTemperature_B1.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		status,2, status,0, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4100 ;;      Params:         0       0       0       0
  4101 ;;      Locals:         0       0       0       0
  4102 ;;      Temps:          0       0       0       0
  4103 ;;      Totals:         0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    3
  4107 ;; This function calls:
  4108 ;;		_setTemp_Initialization
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           
  4115                           ;psect for function _Temp_Initialization
  4116  0AD9                     _Temp_Initialization:	
  4117                           
  4118                           ;OverTemperature_B1.c: 11: setTemp_Initialization();
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4122  0AD9  158A  22D2         	fcall	_setTemp_Initialization
  4123  0ADB  0008               	return
  4124  0ADC                     __end_of_Temp_Initialization:	
  4125                           
  4126                           	psect	text17
  4127  0AD2                     __ptext17:	
  4128 ;; *************** function _setTemp_Initialization *****************
  4129 ;; Defined at:
  4130 ;;		line 46 in file "../src/OverTemperature_B1.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;		None               void
  4137 ;; Registers used:
  4138 ;;		None
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4144 ;;      Params:         0       0       0       0
  4145 ;;      Locals:         0       0       0       0
  4146 ;;      Temps:          0       0       0       0
  4147 ;;      Totals:         0       0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    2
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_Temp_Initialization
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           
  4159                           ;psect for function _setTemp_Initialization
  4160  0AD2                     _setTemp_Initialization:	
  4161                           
  4162                           ;incstack = 0
  4163                           ; Regs used in _setTemp_Initialization: []
  4164  0AD2  0008               	return
  4165  0AD3                     __end_of_setTemp_Initialization:	
  4166                           
  4167                           	psect	text18
  4168  0AD6                     __ptext18:	
  4169 ;; *************** function _SYSC_Main *****************
  4170 ;; Defined at:
  4171 ;;		line 17 in file "../src/SYSC_B1.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;		None               void
  4178 ;; Registers used:
  4179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4185 ;;      Params:         0       0       0       0
  4186 ;;      Locals:         0       0       0       0
  4187 ;;      Temps:          0       0       0       0
  4188 ;;      Totals:         0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    5
  4192 ;; This function calls:
  4193 ;;		_setSYSC_Main
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _SYSC_Main
  4201  0AD6                     _SYSC_Main:	
  4202                           
  4203                           ;SYSC_B1.c: 19: setSYSC_Main();
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _SYSC_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4207  0AD6  158A  25D7         	fcall	_setSYSC_Main
  4208  0AD8  0008               	return
  4209  0AD9                     __end_of_SYSC_Main:	
  4210                           
  4211                           	psect	text19
  4212  0DD7                     __ptext19:	
  4213 ;; *************** function _setSYSC_Main *****************
  4214 ;; Defined at:
  4215 ;;		line 23 in file "../src/SYSC_B1.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;		None               void
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4229 ;;      Params:         0       0       0       0
  4230 ;;      Locals:         0       0       0       0
  4231 ;;      Temps:          0       1       0       0
  4232 ;;      Totals:         0       1       0       0
  4233 ;;Total ram usage:        1 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    4
  4236 ;; This function calls:
  4237 ;;		_getMain_All_Error_Status
  4238 ;;		_setLED
  4239 ;; This function is called by:
  4240 ;;		_SYSC_Main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _setSYSC_Main
  4246  0DD7                     _setSYSC_Main:	
  4247                           
  4248                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _setSYSC_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4252  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0DD9  1C29               	btfss	_SYSC,0
  4255  0DDA  0008               	return
  4256                           
  4257                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4258  0DDB  18A9               	btfsc	_SYSC,1
  4259  0DDC  2DF5               	goto	l4544
  4260                           
  4261                           ;SYSC_B1.c: 27: SYSC.Timer++;
  4262  0DDD  3001               	movlw	1
  4263  0DDE  07AA               	addwf	_SYSC+1,f
  4264  0DDF  1803               	skipnc
  4265  0DE0  0AAB               	incf	_SYSC+2,f
  4266  0DE1  3000               	movlw	0
  4267  0DE2  07AB               	addwf	_SYSC+2,f
  4268                           
  4269                           ;SYSC_B1.c: 28: if (SYSC.Timer >= 16)
  4270  0DE3  3000               	movlw	0
  4271  0DE4  022B               	subwf	_SYSC+2,w
  4272  0DE5  3010               	movlw	16
  4273  0DE6  1903               	skipnz
  4274  0DE7  022A               	subwf	_SYSC+1,w
  4275  0DE8  1C03               	skipc
  4276  0DE9  0008               	return
  4277                           
  4278                           ;SYSC_B1.c: 29: {
  4279                           ;SYSC_B1.c: 30: SYSC.Timer = 0;
  4280  0DEA  01AA               	clrf	_SYSC+1
  4281  0DEB  01AB               	clrf	_SYSC+2
  4282                           
  4283                           ;SYSC_B1.c: 31: SYSC.ERROR = 1;
  4284  0DEC  14A9               	bsf	_SYSC,1
  4285                           
  4286                           ;SYSC_B1.c: 33: setLED(1, 111);
  4287  0DED  306F               	movlw	111
  4288  0DEE  00DD               	movwf	??_setSYSC_Main
  4289  0DEF  085D               	movf	??_setSYSC_Main,w
  4290  0DF0  00F6               	movwf	setLED@command
  4291  0DF1  3001               	movlw	1
  4292  0DF2  118A  2570         	fcall	_setLED
  4293                           
  4294                           ;SYSC_B1.c: 35: }
  4295                           ;SYSC_B1.c: 36: } else {
  4296  0DF4  0008               	return
  4297  0DF5                     l4544:	
  4298                           
  4299                           ;SYSC_B1.c: 37: if (getMain_All_Error_Status(1) == 0) {
  4300  0DF5  3001               	movlw	1
  4301  0DF6  158A  2678  158A   	fcall	_getMain_All_Error_Status
  4302  0DF9  3800               	iorlw	0
  4303  0DFA  1D03               	skipz
  4304  0DFB  0008               	return
  4305                           
  4306                           ;SYSC_B1.c: 38: SYSC.Timer++;
  4307  0DFC  3001               	movlw	1
  4308  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0DFF  07AA               	addwf	_SYSC+1,f
  4311  0E00  1803               	skipnc
  4312  0E01  0AAB               	incf	_SYSC+2,f
  4313  0E02  3000               	movlw	0
  4314  0E03  07AB               	addwf	_SYSC+2,f
  4315                           
  4316                           ;SYSC_B1.c: 39: if (SYSC.Timer == 50) {
  4317  0E04  3032               	movlw	50
  4318  0E05  062A               	xorwf	_SYSC+1,w
  4319  0E06  042B               	iorwf	_SYSC+2,w
  4320  0E07  1D03               	skipz
  4321  0E08  2E0E               	goto	l4550
  4322                           
  4323                           ;SYSC_B1.c: 40: SYSC.Timer = 0;
  4324  0E09  01AA               	clrf	_SYSC+1
  4325  0E0A  01AB               	clrf	_SYSC+2
  4326                           
  4327                           ;SYSC_B1.c: 41: SYSC.Counter = 0;
  4328  0E0B  01AC               	clrf	_SYSC+3
  4329  0E0C  01AD               	clrf	_SYSC+4
  4330                           
  4331                           ;SYSC_B1.c: 42: } else {
  4332  0E0D  0008               	return
  4333  0E0E                     l4550:	
  4334                           
  4335                           ;SYSC_B1.c: 43: SYSC.Counter++;
  4336  0E0E  3001               	movlw	1
  4337  0E0F  07AC               	addwf	_SYSC+3,f
  4338  0E10  1803               	skipnc
  4339  0E11  0AAD               	incf	_SYSC+4,f
  4340  0E12  3000               	movlw	0
  4341  0E13  07AD               	addwf	_SYSC+4,f
  4342                           
  4343                           ;SYSC_B1.c: 44: if (SYSC.Counter == 1000) {
  4344  0E14  3003               	movlw	3
  4345  0E15  062D               	xorwf	_SYSC+4,w
  4346  0E16  1D03               	skipz
  4347  0E17  2E1A               	goto	u5145
  4348  0E18  30E8               	movlw	232
  4349  0E19  062C               	xorwf	_SYSC+3,w
  4350  0E1A                     u5145:	
  4351  0E1A  1D03               	skipz
  4352  0E1B  0008               	return
  4353                           
  4354                           ;SYSC_B1.c: 45: SYSC.Counter = 0;
  4355  0E1C  01AC               	clrf	_SYSC+3
  4356  0E1D  01AD               	clrf	_SYSC+4
  4357                           
  4358                           ;SYSC_B1.c: 46: SYSC.ERROR = 0;
  4359  0E1E  10A9               	bcf	_SYSC,1
  4360                           
  4361                           ;SYSC_B1.c: 48: setLED(1, 110);
  4362  0E1F  306E               	movlw	110
  4363  0E20  00DD               	movwf	??_setSYSC_Main
  4364  0E21  085D               	movf	??_setSYSC_Main,w
  4365  0E22  00F6               	movwf	setLED@command
  4366  0E23  3001               	movlw	1
  4367  0E24  118A  2570         	fcall	_setLED
  4368  0E26  0008               	return
  4369  0E27                     __end_of_setSYSC_Main:	
  4370                           
  4371                           	psect	text20
  4372  0AD3                     __ptext20:	
  4373 ;; *************** function _SYSC_Initialization *****************
  4374 ;; Defined at:
  4375 ;;		line 7 in file "../src/SYSC_B1.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4389 ;;      Params:         0       0       0       0
  4390 ;;      Locals:         0       0       0       0
  4391 ;;      Temps:          0       0       0       0
  4392 ;;      Totals:         0       0       0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    3
  4396 ;; This function calls:
  4397 ;;		_setSYSC_Initialization
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _SYSC_Initialization
  4405  0AD3                     _SYSC_Initialization:	
  4406                           
  4407                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4408                           
  4409                           ;incstack = 0
  4410                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4411  0AD3  158A  22E7         	fcall	_setSYSC_Initialization
  4412  0AD5  0008               	return
  4413  0AD6                     __end_of_SYSC_Initialization:	
  4414                           
  4415                           	psect	text21
  4416  0AE7                     __ptext21:	
  4417 ;; *************** function _setSYSC_Initialization *****************
  4418 ;; Defined at:
  4419 ;;		line 13 in file "../src/SYSC_B1.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;		None               void
  4426 ;; Registers used:
  4427 ;;		None
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4433 ;;      Params:         0       0       0       0
  4434 ;;      Locals:         0       0       0       0
  4435 ;;      Temps:          0       0       0       0
  4436 ;;      Totals:         0       0       0       0
  4437 ;;Total ram usage:        0 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    2
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_SYSC_Initialization
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           
  4448                           ;psect for function _setSYSC_Initialization
  4449  0AE7                     _setSYSC_Initialization:	
  4450                           
  4451                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4452                           
  4453                           ;incstack = 0
  4454                           ; Regs used in _setSYSC_Initialization: []
  4455  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0AE9  1429               	bsf	_SYSC,0
  4458  0AEA  0008               	return
  4459  0AEB                     __end_of_setSYSC_Initialization:	
  4460                           
  4461                           	psect	text22
  4462  002C                     __ptext22:	
  4463 ;; *************** function _PIR_Main *****************
  4464 ;; Defined at:
  4465 ;;		line 14 in file "../src/PIR_B1.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  error           1   15[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;		None               void
  4472 ;; Registers used:
  4473 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4479 ;;      Params:         0       0       0       0
  4480 ;;      Locals:         0       3       0       0
  4481 ;;      Temps:          0       5       0       0
  4482 ;;      Totals:         0       8       0       0
  4483 ;;Total ram usage:        8 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    5
  4486 ;; This function calls:
  4487 ;;		_getLights_Status
  4488 ;;		_getMain_All_Error_Status
  4489 ;;		_setLED
  4490 ;;		_setLights_Trigger
  4491 ;;		_setMain_Exception
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _PIR_Main
  4499  002C                     _PIR_Main:	
  4500                           
  4501                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4505  002C  3000               	movlw	0
  4506  002D  158A  2678  118A   	fcall	_getMain_All_Error_Status
  4507  0030  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0031  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0032  00DD               	movwf	??_PIR_Main
  4510  0033  085D               	movf	??_PIR_Main,w
  4511  0034  00E4               	movwf	PIR_Main@error
  4512                           
  4513                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  4514  0035  1683               	bsf	3,5	;RP0=1, select bank1
  4515  0036  1303               	bcf	3,6	;RP1=0, select bank1
  4516  0037  1C20               	btfss	__PIR^(0+128),0
  4517  0038  29F3               	goto	l880
  4518                           
  4519                           ;PIR_B1.c: 18: if (error == 0) {
  4520  0039  1283               	bcf	3,5	;RP0=0, select bank0
  4521  003A  1303               	bcf	3,6	;RP1=0, select bank0
  4522  003B  08E4               	movf	PIR_Main@error,f
  4523  003C  1D03               	skipz
  4524  003D  2854               	goto	l881
  4525                           
  4526                           ;PIR_B1.c: 20: if (_PIR.Detect == 0) {
  4527  003E  1683               	bsf	3,5	;RP0=1, select bank1
  4528  003F  1303               	bcf	3,6	;RP1=0, select bank1
  4529  0040  1A20               	btfsc	__PIR^(0+128),4
  4530  0041  2882               	goto	l4994
  4531                           
  4532                           ;PIR_B1.c: 21: _PIR.Detect = 1;
  4533  0042  1620               	bsf	__PIR^(0+128),4
  4534                           
  4535                           ;PIR_B1.c: 22: _PIR.Available = 1;
  4536  0043  17A0               	bsf	__PIR^(0+128),7
  4537                           
  4538                           ;PIR_B1.c: 23: setLED(1, 0);
  4539  0044  01F6               	clrf	setLED@command
  4540  0045  3001               	movlw	1
  4541  0046  118A  2570  118A   	fcall	_setLED
  4542                           
  4543                           ;PIR_B1.c: 24: if (_PIR.OK == 0) {
  4544  0049  1683               	bsf	3,5	;RP0=1, select bank1
  4545  004A  1303               	bcf	3,6	;RP1=0, select bank1
  4546  004B  19A0               	btfsc	__PIR^(0+128),3
  4547  004C  2882               	goto	l4994
  4548                           
  4549                           ;PIR_B1.c: 25: setLED(2, 1);
  4550  004D  01F6               	clrf	setLED@command
  4551  004E  0AF6               	incf	setLED@command,f
  4552  004F  3002               	movlw	2
  4553  0050  118A  2570  118A   	fcall	_setLED
  4554                           
  4555                           ;PIR_B1.c: 26: }
  4556                           ;PIR_B1.c: 27: }
  4557                           ;PIR_B1.c: 28: } else {
  4558  0053  2882               	goto	l4994
  4559  0054                     l881:	
  4560                           
  4561                           ;PIR_B1.c: 29: if (_PIR.Detect == 1) {
  4562  0054  1683               	bsf	3,5	;RP0=1, select bank1
  4563  0055  1303               	bcf	3,6	;RP1=0, select bank1
  4564  0056  1E20               	btfss	__PIR^(0+128),4
  4565  0057  2882               	goto	l4994
  4566                           
  4567                           ;PIR_B1.c: 30: setMain_Exception(error);
  4568  0058  1283               	bcf	3,5	;RP0=0, select bank0
  4569  0059  1303               	bcf	3,6	;RP1=0, select bank0
  4570  005A  0864               	movf	PIR_Main@error,w
  4571  005B  118A  24A0  118A   	fcall	_setMain_Exception
  4572                           
  4573                           ;PIR_B1.c: 32: _PIR.Detect = 0;
  4574  005E  1683               	bsf	3,5	;RP0=1, select bank1
  4575  005F  1303               	bcf	3,6	;RP1=0, select bank1
  4576  0060  1220               	bcf	__PIR^(0+128),4
  4577                           
  4578                           ;PIR_B1.c: 33: _PIR.Available = 0;
  4579  0061  13A0               	bcf	__PIR^(0+128),7
  4580                           
  4581                           ;PIR_B1.c: 34: _PIR.Status = 0;
  4582  0062  1320               	bcf	__PIR^(0+128),6
  4583                           
  4584                           ;PIR_B1.c: 37: _PIR.Time = 0;
  4585  0063  01A5               	clrf	(__PIR^(0+128)+5)
  4586                           
  4587                           ;PIR_B1.c: 38: _PIR.RangeTime1 = 0;
  4588  0064  01CA               	clrf	(__PIR^(0+128)+42)
  4589                           
  4590                           ;PIR_B1.c: 39: _PIR.RangeValue = 15;
  4591  0065  300F               	movlw	15
  4592  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4593  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4594  0068  00DD               	movwf	??_PIR_Main
  4595  0069  085D               	movf	??_PIR_Main,w
  4596  006A  1683               	bsf	3,5	;RP0=1, select bank1
  4597  006B  1303               	bcf	3,6	;RP1=0, select bank1
  4598  006C  00CC               	movwf	(__PIR^(0+128)+44)
  4599                           
  4600                           ;PIR_B1.c: 40: _PIR.RangeCount = 0;
  4601  006D  01CB               	clrf	(__PIR^(0+128)+43)
  4602                           
  4603                           ;PIR_B1.c: 42: setLED(1, 1);
  4604  006E  01F6               	clrf	setLED@command
  4605  006F  0AF6               	incf	setLED@command,f
  4606  0070  3001               	movlw	1
  4607  0071  118A  2570  118A   	fcall	_setLED
  4608                           
  4609                           ;PIR_B1.c: 43: setLED(2, 0);
  4610  0074  01F6               	clrf	setLED@command
  4611  0075  3002               	movlw	2
  4612  0076  118A  2570  118A   	fcall	_setLED
  4613                           
  4614                           ;PIR_B1.c: 45: if (_PIR.OK == 1) {
  4615  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4616  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4617  007B  1DA0               	btfss	__PIR^(0+128),3
  4618  007C  287F               	goto	l886
  4619                           
  4620                           ;PIR_B1.c: 46: _PIR.Count = 0;
  4621  007D  01C1               	clrf	(__PIR^(0+128)+33)
  4622  007E  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4623  007F                     l886:	
  4624                           
  4625                           ;PIR_B1.c: 47: }
  4626                           ;PIR_B1.c: 48: _PIR.CloseTimeSeconds = 0;
  4627  007F  01C6               	clrf	(__PIR^(0+128)+38)
  4628                           
  4629                           ;PIR_B1.c: 49: _PIR.CloseTimeMinutes = 0;
  4630  0080  01C4               	clrf	(__PIR^(0+128)+36)
  4631  0081  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4632  0082                     l4994:	
  4633                           
  4634                           ;PIR_B1.c: 50: }
  4635                           ;PIR_B1.c: 51: }
  4636                           ;PIR_B1.c: 53: if (_PIR.ADtoGO == 0) {
  4637  0082  1683               	bsf	3,5	;RP0=1, select bank1
  4638  0083  1303               	bcf	3,6	;RP1=0, select bank1
  4639  0084  18A0               	btfsc	__PIR^(0+128),1
  4640  0085  2895               	goto	l887
  4641                           
  4642                           ;PIR_B1.c: 54: _PIR.Time++;
  4643  0086  3001               	movlw	1
  4644  0087  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0088  1303               	bcf	3,6	;RP1=0, select bank0
  4646  0089  00DD               	movwf	??_PIR_Main
  4647  008A  085D               	movf	??_PIR_Main,w
  4648  008B  1683               	bsf	3,5	;RP0=1, select bank1
  4649  008C  1303               	bcf	3,6	;RP1=0, select bank1
  4650  008D  07A5               	addwf	(__PIR^(0+128)+5),f
  4651                           
  4652                           ;PIR_B1.c: 55: if (_PIR.Time == 10) {
  4653  008E  0825               	movf	(__PIR^(0+128)+5),w
  4654  008F  3A0A               	xorlw	10
  4655  0090  1D03               	skipz
  4656  0091  29AB               	goto	l5078
  4657                           
  4658                           ;PIR_B1.c: 56: _PIR.Time = 0;
  4659  0092  01A5               	clrf	(__PIR^(0+128)+5)
  4660                           
  4661                           ;PIR_B1.c: 57: _PIR.ADtoGO = 1;
  4662  0093  14A0               	bsf	__PIR^(0+128),1
  4663                           
  4664                           ;PIR_B1.c: 58: }
  4665                           ;PIR_B1.c: 59: } else {
  4666  0094  29AB               	goto	l5078
  4667  0095                     l887:	
  4668                           
  4669                           ;PIR_B1.c: 60: if (_PIR.GO == 1) {
  4670  0095  1D20               	btfss	__PIR^(0+128),2
  4671  0096  29AB               	goto	l5078
  4672                           
  4673                           ;PIR_B1.c: 61: _PIR.GO = 0;
  4674  0097  1120               	bcf	__PIR^(0+128),2
  4675                           
  4676                           ;PIR_B1.c: 62: if (_PIR.Available == 1) {
  4677  0098  1BA0               	btfsc	__PIR^(0+128),7
  4678                           
  4679                           ;PIR_B1.c: 63: if (_PIR.OK == 1) {
  4680  0099  1DA0               	btfss	__PIR^(0+128),3
  4681  009A  29AB               	goto	l5078
  4682                           
  4683                           ;PIR_B1.c: 65: _PIR.Time++;
  4684  009B  3001               	movlw	1
  4685  009C  1283               	bcf	3,5	;RP0=0, select bank0
  4686  009D  1303               	bcf	3,6	;RP1=0, select bank0
  4687  009E  00DD               	movwf	??_PIR_Main
  4688  009F  085D               	movf	??_PIR_Main,w
  4689  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  4690  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  4691  00A2  07A5               	addwf	(__PIR^(0+128)+5),f
  4692                           
  4693                           ;PIR_B1.c: 66: if (_PIR.Time == 60) {
  4694  00A3  0825               	movf	(__PIR^(0+128)+5),w
  4695  00A4  3A3C               	xorlw	60
  4696  00A5  1D03               	skipz
  4697  00A6  28DB               	goto	l5044
  4698                           
  4699                           ;PIR_B1.c: 67: _PIR.Time = 0;
  4700  00A7  01A5               	clrf	(__PIR^(0+128)+5)
  4701                           
  4702                           ;PIR_B1.c: 68: if (_PIR.RangeCount >= 90) {
  4703  00A8  305A               	movlw	90
  4704  00A9  024B               	subwf	(__PIR^(0+128)+43),w
  4705  00AA  1C03               	skipc
  4706  00AB  28B7               	goto	l5026
  4707                           
  4708                           ;PIR_B1.c: 69: _PIR.RangeTime1 = 0;
  4709  00AC  01CA               	clrf	(__PIR^(0+128)+42)
  4710                           
  4711                           ;PIR_B1.c: 71: if (_PIR.RangeValue == 15) {
  4712  00AD  084C               	movf	(__PIR^(0+128)+44),w
  4713  00AE  3A0F               	xorlw	15
  4714  00AF  1903               	btfsc	3,2
  4715  00B0  28CC               	goto	L14
  4716                           
  4717                           ;PIR_B1.c: 73: } else if (_PIR.RangeValue == 25) {
  4718                           
  4719                           ;PIR_B1.c: 72: _PIR.RangeValue = 25;
  4720  00B1  084C               	movf	(__PIR^(0+128)+44),w
  4721  00B2  3A19               	xorlw	25
  4722  00B3  1D03               	skipz
  4723  00B4  28DA               	goto	l5042
  4724                           
  4725                           ;PIR_B1.c: 74: _PIR.RangeValue = 35;
  4726  00B5  3023               	movlw	35
  4727  00B6  28D3               	goto	L10
  4728  00B7                     l5026:	
  4729                           ;PIR_B1.c: 75: }
  4730                           ;PIR_B1.c: 76: } else if (_PIR.RangeCount <= 10) {
  4731                           
  4732  00B7  300B               	movlw	11
  4733  00B8  024B               	subwf	(__PIR^(0+128)+43),w
  4734  00B9  1803               	skipnc
  4735  00BA  28DA               	goto	l5042
  4736                           
  4737                           ;PIR_B1.c: 77: _PIR.RangeTime1++;
  4738  00BB  3001               	movlw	1
  4739  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  4740  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  4741  00BE  00DD               	movwf	??_PIR_Main
  4742  00BF  085D               	movf	??_PIR_Main,w
  4743  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  4744  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  4745  00C2  07CA               	addwf	(__PIR^(0+128)+42),f
  4746                           
  4747                           ;PIR_B1.c: 78: if (_PIR.RangeTime1 == 2) {
  4748  00C3  084A               	movf	(__PIR^(0+128)+42),w
  4749  00C4  3A02               	xorlw	2
  4750  00C5  1D03               	skipz
  4751  00C6  28DA               	goto	l5042
  4752                           
  4753                           ;PIR_B1.c: 79: _PIR.RangeTime1 = 0;
  4754  00C7  01CA               	clrf	(__PIR^(0+128)+42)
  4755                           
  4756                           ;PIR_B1.c: 81: if (_PIR.RangeValue == 35) {
  4757  00C8  084C               	movf	(__PIR^(0+128)+44),w
  4758  00C9  3A23               	xorlw	35
  4759  00CA  1D03               	skipz
  4760  00CB  28CE               	goto	l5038
  4761  00CC                     L14:	
  4762                           
  4763                           ;PIR_B1.c: 82: _PIR.RangeValue = 25;
  4764  00CC  3019               	movlw	25
  4765  00CD  28D3               	goto	L10
  4766  00CE                     l5038:	
  4767                           ;PIR_B1.c: 83: } else if (_PIR.RangeValue == 25) {
  4768                           
  4769  00CE  084C               	movf	(__PIR^(0+128)+44),w
  4770  00CF  3A19               	xorlw	25
  4771  00D0  1D03               	skipz
  4772  00D1  28DA               	goto	l5042
  4773                           
  4774                           ;PIR_B1.c: 84: _PIR.RangeValue = 15;
  4775  00D2  300F               	movlw	15
  4776  00D3                     L10:	
  4777  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4778  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4779  00D5  00DD               	movwf	??_PIR_Main
  4780  00D6  085D               	movf	??_PIR_Main,w
  4781  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  4782  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  4783  00D9  00CC               	movwf	(__PIR^(0+128)+44)
  4784  00DA                     l5042:	
  4785                           
  4786                           ;PIR_B1.c: 85: }
  4787                           ;PIR_B1.c: 86: }
  4788                           ;PIR_B1.c: 87: }
  4789                           ;PIR_B1.c: 88: _PIR.RangeCount = 0;
  4790  00DA  01CB               	clrf	(__PIR^(0+128)+43)
  4791  00DB                     l5044:	
  4792                           
  4793                           ;PIR_B1.c: 89: }
  4794                           ;PIR_B1.c: 92: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4795                           ;PIR_B1.c: 93: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4796  00DB  084C               	movf	(__PIR^(0+128)+44),w
  4797  00DC  074E               	addwf	(__PIR^(0+128)+46),w
  4798  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  4799  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  4800  00DF  00DD               	movwf	??_PIR_Main
  4801  00E0  01DE               	clrf	??_PIR_Main+1
  4802  00E1  0DDE               	rlf	??_PIR_Main+1,f
  4803  00E2  09DD               	comf	??_PIR_Main,f
  4804  00E3  09DE               	comf	??_PIR_Main+1,f
  4805  00E4  0ADD               	incf	??_PIR_Main,f
  4806  00E5  1903               	skipnz
  4807  00E6  0ADE               	incf	??_PIR_Main+1,f
  4808  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  4809  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  4810  00E9  0826               	movf	(__PIR^(0+128)+6),w
  4811  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4812  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4813  00EC  075D               	addwf	??_PIR_Main,w
  4814  00ED  00DF               	movwf	??_PIR_Main+2
  4815  00EE  085E               	movf	??_PIR_Main+1,w
  4816  00EF  1803               	skipnc
  4817  00F0  0A5E               	incf	??_PIR_Main+1,w
  4818  00F1  00E0               	movwf	??_PIR_Main+3
  4819  00F2  0860               	movf	??_PIR_Main+3,w
  4820  00F3  3A80               	xorlw	128
  4821  00F4  3C80               	sublw	128
  4822  00F5  1D03               	skipz
  4823  00F6  28FB               	goto	u6085
  4824  00F7  085F               	movf	??_PIR_Main+2,w
  4825  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  4826  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  4827  00FA  0221               	subwf	(__PIR^(0+128)+1),w
  4828  00FB                     u6085:	
  4829  00FB  1C03               	skipc
  4830  00FC  2927               	goto	l5054
  4831  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  4832  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  4833  00FF  084C               	movf	(__PIR^(0+128)+44),w
  4834  0100  074E               	addwf	(__PIR^(0+128)+46),w
  4835  0101  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0102  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0103  00DD               	movwf	??_PIR_Main
  4838  0104  01DE               	clrf	??_PIR_Main+1
  4839  0105  0DDE               	rlf	??_PIR_Main+1,f
  4840  0106  1683               	bsf	3,5	;RP0=1, select bank1
  4841  0107  1303               	bcf	3,6	;RP1=0, select bank1
  4842  0108  0826               	movf	(__PIR^(0+128)+6),w
  4843  0109  1283               	bcf	3,5	;RP0=0, select bank0
  4844  010A  1303               	bcf	3,6	;RP1=0, select bank0
  4845  010B  075D               	addwf	??_PIR_Main,w
  4846  010C  00DF               	movwf	??_PIR_Main+2
  4847  010D  3000               	movlw	0
  4848  010E  1803               	skipnc
  4849  010F  3001               	movlw	1
  4850  0110  075E               	addwf	??_PIR_Main+1,w
  4851  0111  00E0               	movwf	??_PIR_Main+3
  4852  0112  0860               	movf	??_PIR_Main+3,w
  4853  0113  3A80               	xorlw	128
  4854  0114  00E1               	movwf	??_PIR_Main+4
  4855  0115  3080               	movlw	128
  4856  0116  0261               	subwf	??_PIR_Main+4,w
  4857  0117  1D03               	skipz
  4858  0118  291F               	goto	u6095
  4859  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4860  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4861  011B  0821               	movf	(__PIR^(0+128)+1),w
  4862  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4863  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4864  011E  025F               	subwf	??_PIR_Main+2,w
  4865  011F                     u6095:	
  4866  011F  1C03               	skipc
  4867  0120  2927               	goto	l5054
  4868                           
  4869                           ;PIR_B1.c: 94: _PIR.Count = 0;
  4870  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0123  01C1               	clrf	(__PIR^(0+128)+33)
  4873  0124  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4874                           
  4875                           ;PIR_B1.c: 95: setLED(1, 0);
  4876  0125  01F6               	clrf	setLED@command
  4877  0126  299A               	goto	L15
  4878  0127                     l5054:	
  4879                           ;PIR_B1.c: 97: } else {
  4880                           
  4881                           ;PIR_B1.c: 96: setLED(2, 0);
  4882                           
  4883                           
  4884                           ;PIR_B1.c: 98: _PIR.RangeCount++;
  4885  0127  3001               	movlw	1
  4886  0128  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0129  1303               	bcf	3,6	;RP1=0, select bank0
  4888  012A  00DD               	movwf	??_PIR_Main
  4889  012B  085D               	movf	??_PIR_Main,w
  4890  012C  1683               	bsf	3,5	;RP0=1, select bank1
  4891  012D  1303               	bcf	3,6	;RP1=0, select bank1
  4892  012E  07CB               	addwf	(__PIR^(0+128)+43),f
  4893                           
  4894                           ;PIR_B1.c: 99: _PIR.Count++;
  4895  012F  3001               	movlw	1
  4896  0130  07C1               	addwf	(__PIR^(0+128)+33),f
  4897  0131  1803               	skipnc
  4898  0132  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4899  0133  3000               	movlw	0
  4900  0134  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4901                           
  4902                           ;PIR_B1.c: 101: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  4903  0135  1B20               	btfsc	__PIR^(0+128),6
  4904  0136  293B               	goto	l5062
  4905  0137  3002               	movlw	2
  4906  0138  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0139  1303               	bcf	3,6	;RP1=0, select bank0
  4908  013A  293D               	goto	L11
  4909  013B                     l5062:	
  4910  013B  3003               	movlw	3
  4911  013C  1283               	bcf	3,5	;RP0=0, select bank0
  4912  013D                     L11:	
  4913  013D  00E2               	movwf	_PIR_Main$3308
  4914  013E  3000               	movlw	0
  4915  013F  00E3               	movwf	_PIR_Main$3308+1
  4916  0140  0862               	movf	_PIR_Main$3308,w
  4917  0141  00DD               	movwf	??_PIR_Main
  4918  0142  085D               	movf	??_PIR_Main,w
  4919  0143  1683               	bsf	3,5	;RP0=1, select bank1
  4920  0144  1303               	bcf	3,6	;RP1=0, select bank1
  4921  0145  00C3               	movwf	(__PIR^(0+128)+35)
  4922                           
  4923                           ;PIR_B1.c: 103: if (_PIR.Count == _PIR.TriggerValue) {
  4924  0146  0843               	movf	(__PIR^(0+128)+35),w
  4925  0147  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0148  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0149  00DD               	movwf	??_PIR_Main
  4928  014A  01DE               	clrf	??_PIR_Main+1
  4929  014B  1683               	bsf	3,5	;RP0=1, select bank1
  4930  014C  1303               	bcf	3,6	;RP1=0, select bank1
  4931  014D  0842               	movf	((__PIR+1)^(0+128)+33),w
  4932  014E  1283               	bcf	3,5	;RP0=0, select bank0
  4933  014F  1303               	bcf	3,6	;RP1=0, select bank0
  4934  0150  065E               	xorwf	??_PIR_Main+1,w
  4935  0151  1D03               	skipz
  4936  0152  2959               	goto	u6115
  4937  0153  1683               	bsf	3,5	;RP0=1, select bank1
  4938  0154  1303               	bcf	3,6	;RP1=0, select bank1
  4939  0155  0841               	movf	(__PIR^(0+128)+33),w
  4940  0156  1283               	bcf	3,5	;RP0=0, select bank0
  4941  0157  1303               	bcf	3,6	;RP1=0, select bank0
  4942  0158  065D               	xorwf	??_PIR_Main,w
  4943  0159                     u6115:	
  4944  0159  1D03               	skipz
  4945  015A  29AB               	goto	l5078
  4946                           
  4947                           ;PIR_B1.c: 104: _PIR.Count = 0;
  4948  015B  1683               	bsf	3,5	;RP0=1, select bank1
  4949  015C  1303               	bcf	3,6	;RP1=0, select bank1
  4950  015D  01C1               	clrf	(__PIR^(0+128)+33)
  4951  015E  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4952                           
  4953                           ;PIR_B1.c: 105: _PIR.CloseTimeSeconds = 0;
  4954  015F  01C6               	clrf	(__PIR^(0+128)+38)
  4955                           
  4956                           ;PIR_B1.c: 106: _PIR.CloseTimeMinutes = 0;
  4957  0160  01C4               	clrf	(__PIR^(0+128)+36)
  4958  0161  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4959                           
  4960                           ;PIR_B1.c: 107: _PIR.Status = 1;
  4961  0162  1720               	bsf	__PIR^(0+128),6
  4962                           
  4963                           ;PIR_B1.c: 110: if (getLights_Status(1) == 0) {
  4964  0163  3001               	movlw	1
  4965  0164  158A  23C4  118A   	fcall	_getLights_Status
  4966  0167  3800               	iorlw	0
  4967  0168  1D03               	skipz
  4968  0169  2970               	goto	l5072
  4969                           
  4970                           ;PIR_B1.c: 111: setLights_Trigger(1, 1);
  4971  016A  01F6               	clrf	setLights_Trigger@command
  4972  016B  0AF6               	incf	setLights_Trigger@command,f
  4973  016C  3001               	movlw	1
  4974  016D  158A  2499  118A   	fcall	_setLights_Trigger
  4975  0170                     l5072:	
  4976                           
  4977                           ;PIR_B1.c: 112: }
  4978                           ;PIR_B1.c: 115: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  4979  0170  1683               	bsf	3,5	;RP0=1, select bank1
  4980  0171  1303               	bcf	3,6	;RP1=0, select bank1
  4981  0172  084C               	movf	(__PIR^(0+128)+44),w
  4982  0173  074E               	addwf	(__PIR^(0+128)+46),w
  4983  0174  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0175  1303               	bcf	3,6	;RP1=0, select bank0
  4985  0176  00DD               	movwf	??_PIR_Main
  4986  0177  01DE               	clrf	??_PIR_Main+1
  4987  0178  0DDE               	rlf	??_PIR_Main+1,f
  4988  0179  09DD               	comf	??_PIR_Main,f
  4989  017A  09DE               	comf	??_PIR_Main+1,f
  4990  017B  0ADD               	incf	??_PIR_Main,f
  4991  017C  1903               	skipnz
  4992  017D  0ADE               	incf	??_PIR_Main+1,f
  4993  017E  1683               	bsf	3,5	;RP0=1, select bank1
  4994  017F  1303               	bcf	3,6	;RP1=0, select bank1
  4995  0180  0826               	movf	(__PIR^(0+128)+6),w
  4996  0181  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0182  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0183  075D               	addwf	??_PIR_Main,w
  4999  0184  00DF               	movwf	??_PIR_Main+2
  5000  0185  085E               	movf	??_PIR_Main+1,w
  5001  0186  1803               	skipnc
  5002  0187  0A5E               	incf	??_PIR_Main+1,w
  5003  0188  00E0               	movwf	??_PIR_Main+3
  5004  0189  0860               	movf	??_PIR_Main+3,w
  5005  018A  3A80               	xorlw	128
  5006  018B  00E1               	movwf	??_PIR_Main+4
  5007  018C  3080               	movlw	128
  5008  018D  0261               	subwf	??_PIR_Main+4,w
  5009  018E  1D03               	skipz
  5010  018F  2996               	goto	u6135
  5011  0190  1683               	bsf	3,5	;RP0=1, select bank1
  5012  0191  1303               	bcf	3,6	;RP1=0, select bank1
  5013  0192  0821               	movf	(__PIR^(0+128)+1),w
  5014  0193  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0194  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0195  025F               	subwf	??_PIR_Main+2,w
  5017  0196                     u6135:	
  5018  0196  1C03               	skipc
  5019  0197  29A0               	goto	l5076
  5020                           
  5021                           ;PIR_B1.c: 116: setLED(1, 1);
  5022  0198  01F6               	clrf	setLED@command
  5023  0199  0AF6               	incf	setLED@command,f
  5024  019A                     L15:	
  5025  019A  3001               	movlw	1
  5026  019B  118A  2570  118A   	fcall	_setLED
  5027                           
  5028                           ;PIR_B1.c: 117: setLED(2, 0);
  5029  019E  01F6               	clrf	setLED@command
  5030  019F  29A7               	goto	L12
  5031  01A0                     l5076:	
  5032                           ;PIR_B1.c: 118: } else {
  5033                           
  5034                           
  5035                           ;PIR_B1.c: 119: setLED(1, 0);
  5036  01A0  01F6               	clrf	setLED@command
  5037  01A1  3001               	movlw	1
  5038  01A2  118A  2570  118A   	fcall	_setLED
  5039                           
  5040                           ;PIR_B1.c: 120: setLED(2, 1);
  5041  01A5  01F6               	clrf	setLED@command
  5042  01A6  0AF6               	incf	setLED@command,f
  5043  01A7                     L12:	
  5044  01A7  3002               	movlw	2
  5045  01A8  118A  2570  118A   	fcall	_setLED
  5046  01AB                     l5078:	
  5047                           
  5048                           ;PIR_B1.c: 121: }
  5049                           ;PIR_B1.c: 122: }
  5050                           ;PIR_B1.c: 123: }
  5051                           ;PIR_B1.c: 124: }
  5052                           ;PIR_B1.c: 125: }
  5053                           ;PIR_B1.c: 126: }
  5054                           ;PIR_B1.c: 127: }
  5055                           ;PIR_B1.c: 128: if (_PIR.OK == 0) {
  5056  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  5057  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  5058  01AD  19A0               	btfsc	__PIR^(0+128),3
  5059  01AE  29C5               	goto	l5088
  5060                           
  5061                           ;PIR_B1.c: 129: _PIR.Count++;
  5062  01AF  3001               	movlw	1
  5063  01B0  07C1               	addwf	(__PIR^(0+128)+33),f
  5064  01B1  1803               	skipnc
  5065  01B2  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  5066  01B3  3000               	movlw	0
  5067  01B4  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  5068                           
  5069                           ;PIR_B1.c: 130: if (_PIR.Count == 3000) {
  5070  01B5  300B               	movlw	11
  5071  01B6  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  5072  01B7  1D03               	skipz
  5073  01B8  29BB               	goto	u6155
  5074  01B9  30B8               	movlw	184
  5075  01BA  0641               	xorwf	(__PIR^(0+128)+33),w
  5076  01BB                     u6155:	
  5077  01BB  1D03               	skipz
  5078  01BC  29C5               	goto	l5088
  5079                           
  5080                           ;PIR_B1.c: 131: _PIR.Count = 0;
  5081  01BD  01C1               	clrf	(__PIR^(0+128)+33)
  5082  01BE  01C2               	clrf	((__PIR+1)^(0+128)+33)
  5083                           
  5084                           ;PIR_B1.c: 132: _PIR.OK = 1;
  5085  01BF  15A0               	bsf	__PIR^(0+128),3
  5086                           
  5087                           ;PIR_B1.c: 133: setLED(2, 0);
  5088  01C0  01F6               	clrf	setLED@command
  5089  01C1  3002               	movlw	2
  5090  01C2  118A  2570  118A   	fcall	_setLED
  5091  01C5                     l5088:	
  5092                           
  5093                           ;PIR_B1.c: 134: }
  5094                           ;PIR_B1.c: 135: }
  5095                           ;PIR_B1.c: 136: if (_PIR.Status == 1) {
  5096  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  5097  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  5098  01C7  1F20               	btfss	__PIR^(0+128),6
  5099  01C8  0008               	return
  5100                           
  5101                           ;PIR_B1.c: 137: _PIR.CloseTimeSeconds++;
  5102  01C9  3001               	movlw	1
  5103  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  5104  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  5105  01CC  00DD               	movwf	??_PIR_Main
  5106  01CD  085D               	movf	??_PIR_Main,w
  5107  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  5108  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  5109  01D0  07C6               	addwf	(__PIR^(0+128)+38),f
  5110                           
  5111                           ;PIR_B1.c: 138: if (_PIR.CloseTimeSeconds == 100) {
  5112  01D1  0846               	movf	(__PIR^(0+128)+38),w
  5113  01D2  3A64               	xorlw	100
  5114  01D3  1D03               	skipz
  5115  01D4  0008               	return
  5116                           
  5117                           ;PIR_B1.c: 139: _PIR.CloseTimeSeconds = 0;
  5118  01D5  01C6               	clrf	(__PIR^(0+128)+38)
  5119                           
  5120                           ;PIR_B1.c: 140: _PIR.CloseTimeMinutes++;
  5121  01D6  3001               	movlw	1
  5122  01D7  07C4               	addwf	(__PIR^(0+128)+36),f
  5123  01D8  1803               	skipnc
  5124  01D9  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  5125  01DA  3000               	movlw	0
  5126  01DB  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  5127                           
  5128                           ;PIR_B1.c: 141: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  5129  01DC  0848               	movf	((__PIR+1)^(0+128)+39),w
  5130  01DD  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  5131  01DE  1D03               	skipz
  5132  01DF  29E2               	goto	u6185
  5133  01E0  0847               	movf	(__PIR^(0+128)+39),w
  5134  01E1  0644               	xorwf	(__PIR^(0+128)+36),w
  5135  01E2                     u6185:	
  5136  01E2  1D03               	skipz
  5137  01E3  0008               	return
  5138                           
  5139                           ;PIR_B1.c: 142: _PIR.CloseTimeMinutes = 0;
  5140  01E4  01C4               	clrf	(__PIR^(0+128)+36)
  5141  01E5  01C5               	clrf	((__PIR+1)^(0+128)+36)
  5142                           
  5143                           ;PIR_B1.c: 143: _PIR.Status = 0;
  5144  01E6  1320               	bcf	__PIR^(0+128),6
  5145                           
  5146                           ;PIR_B1.c: 146: if (getLights_Status(1) == 1) {
  5147  01E7  3001               	movlw	1
  5148  01E8  158A  23C4  118A   	fcall	_getLights_Status
  5149  01EB  3A01               	xorlw	1
  5150  01EC  1D03               	skipz
  5151  01ED  0008               	return
  5152                           
  5153                           ;PIR_B1.c: 147: setLights_Trigger(1, 0);
  5154  01EE  01F6               	clrf	setLights_Trigger@command
  5155  01EF  3001               	movlw	1
  5156  01F0  158A  2499         	fcall	_setLights_Trigger
  5157                           
  5158                           ;PIR_B1.c: 148: }
  5159                           ;PIR_B1.c: 151: }
  5160                           ;PIR_B1.c: 152: }
  5161                           ;PIR_B1.c: 153: }
  5162                           ;PIR_B1.c: 154: } else {
  5163  01F2  0008               	return
  5164  01F3                     l880:	
  5165                           
  5166                           ;PIR_B1.c: 155: if (myMain.PowerON == 1) {
  5167  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  5168  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  5169  01F5  1C20               	btfss	_myMain,0
  5170  01F6  0008               	return
  5171                           
  5172                           ;PIR_B1.c: 156: _PIR.Enable = 1;
  5173  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  5174  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  5175  01F9  1420               	bsf	__PIR^(0+128),0
  5176  01FA  0008               	return
  5177  01FB                     __end_of_PIR_Main:	
  5178                           
  5179                           	psect	text23
  5180  04A0                     __ptext23:	
  5181 ;; *************** function _setMain_Exception *****************
  5182 ;; Defined at:
  5183 ;;		line 276 in file "../src/Main_B1.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  command         1    wreg     unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  command         1    3[BANK0 ] unsigned char 
  5188 ;;  status          1    4[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;		None               void
  5191 ;; Registers used:
  5192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5198 ;;      Params:         0       0       0       0
  5199 ;;      Locals:         0       2       0       0
  5200 ;;      Temps:          0       1       0       0
  5201 ;;      Totals:         0       3       0       0
  5202 ;;Total ram usage:        3 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    4
  5205 ;; This function calls:
  5206 ;;		_getAll_Lights_Line
  5207 ;;		_setLED
  5208 ;;		_setLights_Trigger
  5209 ;; This function is called by:
  5210 ;;		_PIR_Main
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function _setMain_Exception
  5216  04A0                     _setMain_Exception:	
  5217                           
  5218                           ;incstack = 0
  5219                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5220                           ;setMain_Exception@command stored from wreg
  5221  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  5222  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  5223  04A2  00D8               	movwf	setMain_Exception@command
  5224                           
  5225                           ;Main_B1.c: 277: char status = 0;
  5226  04A3  01D9               	clrf	setMain_Exception@status
  5227                           
  5228                           ;Main_B1.c: 278: switch (command) {
  5229  04A4  2D50               	goto	l4460
  5230  04A5                     l585:	
  5231                           ;Main_B1.c: 279: case 1:
  5232                           
  5233                           
  5234                           ;Main_B1.c: 280: myMain.Error = 1;
  5235  04A5  01A4               	clrf	_myMain+4
  5236  04A6  0AA4               	incf	_myMain+4,f
  5237                           
  5238                           ;Main_B1.c: 281: status = 255;
  5239  04A7  30FF               	movlw	255
  5240  04A8  00D7               	movwf	??_setMain_Exception
  5241  04A9  0857               	movf	??_setMain_Exception,w
  5242  04AA  00D9               	movwf	setMain_Exception@status
  5243                           
  5244                           ;Main_B1.c: 283: setLED(1, 111);
  5245  04AB  306F               	movlw	111
  5246  04AC  00D7               	movwf	??_setMain_Exception
  5247  04AD  0857               	movf	??_setMain_Exception,w
  5248  04AE  00F6               	movwf	setLED@command
  5249  04AF  3001               	movlw	1
  5250  04B0  118A  2570  118A   	fcall	_setLED
  5251                           
  5252                           ;Main_B1.c: 288: break;
  5253  04B3  2D61               	goto	l4462
  5254  04B4                     l4424:	
  5255                           ;Main_B1.c: 289: case 2:
  5256                           
  5257                           
  5258                           ;Main_B1.c: 290: myMain.Error = 2;
  5259  04B4  3002               	movlw	2
  5260  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  5261  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  5262  04B7  00D7               	movwf	??_setMain_Exception
  5263  04B8  0857               	movf	??_setMain_Exception,w
  5264  04B9  00A4               	movwf	_myMain+4
  5265                           
  5266                           ;Main_B1.c: 291: status = 255;
  5267  04BA  30FF               	movlw	255
  5268  04BB  00D7               	movwf	??_setMain_Exception
  5269  04BC  0857               	movf	??_setMain_Exception,w
  5270  04BD  00D9               	movwf	setMain_Exception@status
  5271                           
  5272                           ;Main_B1.c: 293: setLED(2, 111);
  5273  04BE  306F               	movlw	111
  5274  04BF  00D7               	movwf	??_setMain_Exception
  5275  04C0  0857               	movf	??_setMain_Exception,w
  5276  04C1  00F6               	movwf	setLED@command
  5277  04C2  3002               	movlw	2
  5278  04C3  118A  2570  118A   	fcall	_setLED
  5279                           
  5280                           ;Main_B1.c: 301: break;
  5281  04C6  2D61               	goto	l4462
  5282  04C7                     l4428:	
  5283                           ;Main_B1.c: 302: case 3:
  5284                           
  5285                           
  5286                           ;Main_B1.c: 303: myMain.Error = 3;
  5287  04C7  3003               	movlw	3
  5288  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  5289  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  5290  04CA  00D7               	movwf	??_setMain_Exception
  5291  04CB  0857               	movf	??_setMain_Exception,w
  5292  04CC  00A4               	movwf	_myMain+4
  5293                           
  5294                           ;Main_B1.c: 305: setLED(3, 111);
  5295  04CD  306F               	movlw	111
  5296  04CE  00D7               	movwf	??_setMain_Exception
  5297  04CF  0857               	movf	??_setMain_Exception,w
  5298  04D0  00F6               	movwf	setLED@command
  5299  04D1  3003               	movlw	3
  5300  04D2  118A  2570  118A   	fcall	_setLED
  5301                           
  5302                           ;Main_B1.c: 306: status = getAll_Lights_Line();
  5303  04D5  158A  23A5  118A   	fcall	_getAll_Lights_Line
  5304  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  5305  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  5306  04DA  00D7               	movwf	??_setMain_Exception
  5307  04DB  0857               	movf	??_setMain_Exception,w
  5308  04DC  00D9               	movwf	setMain_Exception@status
  5309                           
  5310                           ;Main_B1.c: 311: break;
  5311  04DD  2D61               	goto	l4462
  5312  04DE                     l4434:	
  5313                           ;Main_B1.c: 312: case 4:
  5314                           
  5315                           
  5316                           ;Main_B1.c: 313: myMain.Error = 4;
  5317  04DE  3004               	movlw	4
  5318  04DF  00D7               	movwf	??_setMain_Exception
  5319  04E0  0857               	movf	??_setMain_Exception,w
  5320  04E1  00A4               	movwf	_myMain+4
  5321                           
  5322                           ;Main_B1.c: 314: status = 255;
  5323  04E2  30FF               	movlw	255
  5324  04E3  00D7               	movwf	??_setMain_Exception
  5325  04E4  0857               	movf	??_setMain_Exception,w
  5326  04E5  00D9               	movwf	setMain_Exception@status
  5327                           
  5328                           ;Main_B1.c: 316: setLED(4, 111);
  5329  04E6  306F               	movlw	111
  5330  04E7  00D7               	movwf	??_setMain_Exception
  5331  04E8  0857               	movf	??_setMain_Exception,w
  5332  04E9  00F6               	movwf	setLED@command
  5333  04EA  3004               	movlw	4
  5334  04EB  118A  2570  118A   	fcall	_setLED
  5335                           
  5336                           ;Main_B1.c: 321: break;
  5337  04EE  2D61               	goto	l4462
  5338  04EF                     l4438:	
  5339                           ;Main_B1.c: 322: case 5:
  5340                           
  5341                           
  5342                           ;Main_B1.c: 323: myMain.Error = 5;
  5343  04EF  3005               	movlw	5
  5344  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  5345  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  5346  04F2  00D7               	movwf	??_setMain_Exception
  5347  04F3  0857               	movf	??_setMain_Exception,w
  5348  04F4  00A4               	movwf	_myMain+4
  5349                           
  5350                           ;Main_B1.c: 324: status = 255;
  5351  04F5  30FF               	movlw	255
  5352  04F6  00D7               	movwf	??_setMain_Exception
  5353  04F7  0857               	movf	??_setMain_Exception,w
  5354  04F8  00D9               	movwf	setMain_Exception@status
  5355                           
  5356                           ;Main_B1.c: 326: setLED(5, 111);
  5357  04F9  306F               	movlw	111
  5358  04FA  00D7               	movwf	??_setMain_Exception
  5359  04FB  0857               	movf	??_setMain_Exception,w
  5360  04FC  00F6               	movwf	setLED@command
  5361  04FD  3005               	movlw	5
  5362  04FE  118A  2570  118A   	fcall	_setLED
  5363                           
  5364                           ;Main_B1.c: 331: break;
  5365  0501  2D61               	goto	l4462
  5366  0502                     l4442:	
  5367                           ;Main_B1.c: 334: case 1:
  5368                           
  5369                           ;Main_B1.c: 333: switch (myMain.Error) {
  5370                           
  5371                           ;Main_B1.c: 332: default:
  5372                           
  5373                           
  5374                           ;Main_B1.c: 336: setLED(1, 110);
  5375  0502  306E               	movlw	110
  5376  0503  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0504  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0505  00D7               	movwf	??_setMain_Exception
  5379  0506  0857               	movf	??_setMain_Exception,w
  5380  0507  00F6               	movwf	setLED@command
  5381  0508  3001               	movlw	1
  5382  0509  118A  2570  118A   	fcall	_setLED
  5383                           
  5384                           ;Main_B1.c: 341: break;
  5385  050C  2D4C               	goto	l4456
  5386  050D                     l4444:	
  5387                           ;Main_B1.c: 343: case 2:
  5388                           
  5389                           
  5390                           ;Main_B1.c: 345: setLED(2, 110);
  5391  050D  306E               	movlw	110
  5392  050E  1283               	bcf	3,5	;RP0=0, select bank0
  5393  050F  1303               	bcf	3,6	;RP1=0, select bank0
  5394  0510  00D7               	movwf	??_setMain_Exception
  5395  0511  0857               	movf	??_setMain_Exception,w
  5396  0512  00F6               	movwf	setLED@command
  5397  0513  3002               	movlw	2
  5398  0514  118A  2570  118A   	fcall	_setLED
  5399                           
  5400                           ;Main_B1.c: 350: break;
  5401  0517  2D4C               	goto	l4456
  5402  0518                     l4446:	
  5403                           ;Main_B1.c: 351: case 3:
  5404                           
  5405                           
  5406                           ;Main_B1.c: 353: setLED(3, 110);
  5407  0518  306E               	movlw	110
  5408  0519  1283               	bcf	3,5	;RP0=0, select bank0
  5409  051A  1303               	bcf	3,6	;RP1=0, select bank0
  5410  051B  00D7               	movwf	??_setMain_Exception
  5411  051C  0857               	movf	??_setMain_Exception,w
  5412  051D  00F6               	movwf	setLED@command
  5413  051E  3003               	movlw	3
  5414  051F  118A  2570  118A   	fcall	_setLED
  5415                           
  5416                           ;Main_B1.c: 358: break;
  5417  0522  2D4C               	goto	l4456
  5418  0523                     l4448:	
  5419                           ;Main_B1.c: 359: case 4:
  5420                           
  5421                           
  5422                           ;Main_B1.c: 361: setLED(4, 110);
  5423  0523  306E               	movlw	110
  5424  0524  1283               	bcf	3,5	;RP0=0, select bank0
  5425  0525  1303               	bcf	3,6	;RP1=0, select bank0
  5426  0526  00D7               	movwf	??_setMain_Exception
  5427  0527  0857               	movf	??_setMain_Exception,w
  5428  0528  00F6               	movwf	setLED@command
  5429  0529  3004               	movlw	4
  5430  052A  118A  2570  118A   	fcall	_setLED
  5431                           
  5432                           ;Main_B1.c: 366: break;
  5433  052D  2D4C               	goto	l4456
  5434  052E                     l4450:	
  5435                           ;Main_B1.c: 367: case 5:
  5436                           
  5437                           
  5438                           ;Main_B1.c: 369: setLED(5, 110);
  5439  052E  306E               	movlw	110
  5440  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0531  00D7               	movwf	??_setMain_Exception
  5443  0532  0857               	movf	??_setMain_Exception,w
  5444  0533  00F6               	movwf	setLED@command
  5445  0534  3005               	movlw	5
  5446  0535  118A  2570  118A   	fcall	_setLED
  5447                           
  5448                           ;Main_B1.c: 375: }
  5449                           
  5450                           ;Main_B1.c: 374: break;
  5451  0538  2D4C               	goto	l4456
  5452  0539                     l4454:	
  5453  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5454  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5455  053B  0824               	movf	_myMain+4,w
  5456                           
  5457                           ; Switch size 1, requested type "space"
  5458                           ; Number of cases is 5, Range of values is 1 to 5
  5459                           ; switch strategies available:
  5460                           ; Name         Instructions Cycles
  5461                           ; simple_byte           16     9 (average)
  5462                           ; direct_byte           20    10 (fixed)
  5463                           ; jumptable            263     9 (fixed)
  5464                           ;	Chosen strategy is simple_byte
  5465  053C  3A01               	xorlw	1	; case 1
  5466  053D  1903               	skipnz
  5467  053E  2D02               	goto	l4442
  5468  053F  3A03               	xorlw	3	; case 2
  5469  0540  1903               	skipnz
  5470  0541  2D0D               	goto	l4444
  5471  0542  3A01               	xorlw	1	; case 3
  5472  0543  1903               	skipnz
  5473  0544  2D18               	goto	l4446
  5474  0545  3A07               	xorlw	7	; case 4
  5475  0546  1903               	skipnz
  5476  0547  2D23               	goto	l4448
  5477  0548  3A01               	xorlw	1	; case 5
  5478  0549  1903               	skipnz
  5479  054A  2D2E               	goto	l4450
  5480  054B  2D4C               	goto	l4456
  5481  054C                     l4456:	
  5482                           
  5483                           ;Main_B1.c: 376: myMain.Error = 0;
  5484  054C  1283               	bcf	3,5	;RP0=0, select bank0
  5485  054D  1303               	bcf	3,6	;RP1=0, select bank0
  5486  054E  01A4               	clrf	_myMain+4
  5487                           
  5488                           ;Main_B1.c: 378: }
  5489                           
  5490                           ;Main_B1.c: 377: break;
  5491  054F  2D61               	goto	l4462
  5492  0550                     l4460:	
  5493  0550  0858               	movf	setMain_Exception@command,w
  5494                           
  5495                           ; Switch size 1, requested type "space"
  5496                           ; Number of cases is 5, Range of values is 1 to 5
  5497                           ; switch strategies available:
  5498                           ; Name         Instructions Cycles
  5499                           ; simple_byte           16     9 (average)
  5500                           ; direct_byte           20    10 (fixed)
  5501                           ; jumptable            263     9 (fixed)
  5502                           ;	Chosen strategy is simple_byte
  5503  0551  3A01               	xorlw	1	; case 1
  5504  0552  1903               	skipnz
  5505  0553  2CA5               	goto	l585
  5506  0554  3A03               	xorlw	3	; case 2
  5507  0555  1903               	skipnz
  5508  0556  2CB4               	goto	l4424
  5509  0557  3A01               	xorlw	1	; case 3
  5510  0558  1903               	skipnz
  5511  0559  2CC7               	goto	l4428
  5512  055A  3A07               	xorlw	7	; case 4
  5513  055B  1903               	skipnz
  5514  055C  2CDE               	goto	l4434
  5515  055D  3A01               	xorlw	1	; case 5
  5516  055E  1903               	skipnz
  5517  055F  2CEF               	goto	l4438
  5518  0560  2D39               	goto	l4454
  5519  0561                     l4462:	
  5520                           
  5521                           ;Main_B1.c: 382: if (status == 1 || status == 255) {
  5522  0561  1283               	bcf	3,5	;RP0=0, select bank0
  5523  0562  1303               	bcf	3,6	;RP1=0, select bank0
  5524  0563  0859               	movf	setMain_Exception@status,w
  5525  0564  3A01               	xorlw	1
  5526  0565  1903               	skipnz
  5527  0566  2D6B               	goto	l4466
  5528  0567  0859               	movf	setMain_Exception@status,w
  5529  0568  3AFF               	xorlw	255
  5530  0569  1D03               	skipz
  5531  056A  0008               	return
  5532  056B                     l4466:	
  5533                           
  5534                           ;Main_B1.c: 384: setLights_Trigger(1, 0);
  5535  056B  01F6               	clrf	setLights_Trigger@command
  5536  056C  3001               	movlw	1
  5537  056D  158A  2499         	fcall	_setLights_Trigger
  5538  056F  0008               	return
  5539  0570                     __end_of_setMain_Exception:	
  5540                           
  5541                           	psect	text24
  5542  0C99                     __ptext24:	
  5543 ;; *************** function _setLights_Trigger *****************
  5544 ;; Defined at:
  5545 ;;		line 207 in file "../src/TriacRelay_B1.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;  lights          1    wreg     unsigned char 
  5548 ;;  command         1    6[COMMON] unsigned char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  lights          1    1[BANK0 ] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;		None               void
  5553 ;; Registers used:
  5554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5560 ;;      Params:         1       0       0       0
  5561 ;;      Locals:         0       1       0       0
  5562 ;;      Temps:          0       1       0       0
  5563 ;;      Totals:         1       2       0       0
  5564 ;;Total ram usage:        3 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    3
  5567 ;; This function calls:
  5568 ;;		_LightsPointSelect
  5569 ;; This function is called by:
  5570 ;;		_setMain_Exception
  5571 ;;		_PIR_Main
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _setLights_Trigger
  5577  0C99                     _setLights_Trigger:	
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5581                           ;setLights_Trigger@lights stored from wreg
  5582  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0C9B  00D6               	movwf	setLights_Trigger@lights
  5585                           
  5586                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  5587  0C9C  0856               	movf	setLights_Trigger@lights,w
  5588  0C9D  158A  2343         	fcall	_LightsPointSelect
  5589                           
  5590                           ;TriacRelay_B1.c: 209: Lights->Trigger = 1;
  5591  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5592  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5593  0CA1  083C               	movf	_Lights,w
  5594  0CA2  0084               	movwf	4
  5595  0CA3  1783               	bsf	3,7	;select IRP bank2
  5596  0CA4  1580               	bsf	0,3
  5597                           
  5598                           ;TriacRelay_B1.c: 210: Lights->Switch = command == 1 ? 1 : 0;
  5599  0CA5  0876               	movf	setLights_Trigger@command,w
  5600  0CA6  3A01               	xorlw	1
  5601  0CA7  3000               	movlw	0
  5602  0CA8  1903               	skipnz
  5603  0CA9  3001               	movlw	1
  5604  0CAA  00D5               	movwf	??_setLights_Trigger
  5605  0CAB  083C               	movf	_Lights,w
  5606  0CAC  0084               	movwf	4
  5607  0CAD  0ED5               	swapf	??_setLights_Trigger,f
  5608  0CAE  0800               	movf	0,w
  5609  0CAF  0655               	xorwf	??_setLights_Trigger,w
  5610  0CB0  39EF               	andlw	-17
  5611  0CB1  0655               	xorwf	??_setLights_Trigger,w
  5612  0CB2  0080               	movwf	0
  5613  0CB3  0008               	return
  5614  0CB4                     __end_of_setLights_Trigger:	
  5615                           
  5616                           	psect	text25
  5617  0BA5                     __ptext25:	
  5618 ;; *************** function _getAll_Lights_Line *****************
  5619 ;; Defined at:
  5620 ;;		line 229 in file "../src/TriacRelay_B1.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  line            1    6[COMMON] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5634 ;;      Params:         0       0       0       0
  5635 ;;      Locals:         1       0       0       0
  5636 ;;      Temps:          0       0       0       0
  5637 ;;      Totals:         1       0       0       0
  5638 ;;Total ram usage:        1 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    3
  5641 ;; This function calls:
  5642 ;;		_LightsPointSelect
  5643 ;; This function is called by:
  5644 ;;		_setMain_Exception
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _getAll_Lights_Line
  5650  0BA5                     _getAll_Lights_Line:	
  5651                           
  5652                           ;TriacRelay_B1.c: 230: char line = 0;
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5656  0BA5  01F6               	clrf	getAll_Lights_Line@line
  5657                           
  5658                           ;TriacRelay_B1.c: 232: LightsPointSelect(1);
  5659  0BA6  3001               	movlw	1
  5660  0BA7  158A  2343         	fcall	_LightsPointSelect
  5661                           
  5662                           ;TriacRelay_B1.c: 233: line = Lights->Line == 1 ? 1 : 0;
  5663  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  5664  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  5665  0BAB  0A3C               	incf	_Lights,w
  5666  0BAC  0084               	movwf	4
  5667  0BAD  3000               	movlw	0
  5668  0BAE  1783               	bsf	3,7	;select IRP bank2
  5669  0BAF  1800               	btfsc	0,0
  5670  0BB0  3001               	movlw	1
  5671  0BB1  00F6               	movwf	getAll_Lights_Line@line
  5672                           
  5673                           ;TriacRelay_B1.c: 243: return line;
  5674  0BB2  0876               	movf	getAll_Lights_Line@line,w
  5675  0BB3  0008               	return
  5676  0BB4                     __end_of_getAll_Lights_Line:	
  5677                           
  5678                           	psect	text26
  5679  0BF8                     __ptext26:	
  5680 ;; *************** function _PIR_Initialization *****************
  5681 ;; Defined at:
  5682 ;;		line 7 in file "../src/PIR_B1.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;		None               void
  5689 ;; Registers used:
  5690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5696 ;;      Params:         0       0       0       0
  5697 ;;      Locals:         0       0       0       0
  5698 ;;      Temps:          0       1       0       0
  5699 ;;      Totals:         0       1       0       0
  5700 ;;Total ram usage:        1 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    4
  5703 ;; This function calls:
  5704 ;;		_setLED
  5705 ;; This function is called by:
  5706 ;;		_main
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           
  5711                           ;psect for function _PIR_Initialization
  5712  0BF8                     _PIR_Initialization:	
  5713                           
  5714                           ;PIR_B1.c: 8: setLED(1, 1);
  5715                           
  5716                           ;incstack = 0
  5717                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5718  0BF8  01F6               	clrf	setLED@command
  5719  0BF9  0AF6               	incf	setLED@command,f
  5720  0BFA  3001               	movlw	1
  5721  0BFB  118A  2570         	fcall	_setLED
  5722                           
  5723                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  5724  0BFD  300F               	movlw	15
  5725  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  5726  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  5727  0C00  00D6               	movwf	??_PIR_Initialization
  5728  0C01  0856               	movf	??_PIR_Initialization,w
  5729  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  5730  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  5731  0C04  00CC               	movwf	(__PIR^(0+128)+44)
  5732                           
  5733                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  5734  0C05  3005               	movlw	5
  5735  0C06  00C7               	movwf	(__PIR^(0+128)+39)
  5736  0C07  3000               	movlw	0
  5737  0C08  00C8               	movwf	(__PIR^(0+128)+40)
  5738  0C09  0008               	return
  5739  0C0A                     __end_of_PIR_Initialization:	
  5740                           
  5741                           	psect	text27
  5742  0B96                     __ptext27:	
  5743 ;; *************** function _Mcu_Initialization *****************
  5744 ;; Defined at:
  5745 ;;		line 30 in file "../src/MCU_B1.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;		None               void
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, pclath, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5759 ;;      Params:         0       0       0       0
  5760 ;;      Locals:         0       0       0       0
  5761 ;;      Temps:          0       0       0       0
  5762 ;;      Totals:         0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    3
  5766 ;; This function calls:
  5767 ;;		_ADC_Set
  5768 ;;		_Fosc_Set
  5769 ;;		_IO_Set
  5770 ;;		_TMR1_Set
  5771 ;;		_WDT_Set
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _Mcu_Initialization
  5779  0B96                     _Mcu_Initialization:	
  5780                           
  5781                           ;MCU_B1.c: 32: Fosc_Set();
  5782                           
  5783                           ;incstack = 0
  5784                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5785  0B96  158A  22F0  158A   	fcall	_Fosc_Set
  5786                           
  5787                           ;MCU_B1.c: 34: IO_Set();
  5788  0B99  158A  246E  158A   	fcall	_IO_Set
  5789                           
  5790                           ;MCU_B1.c: 36: ;;
  5791                           ;MCU_B1.c: 38: TMR1_Set();
  5792  0B9C  158A  236B  158A   	fcall	_TMR1_Set
  5793                           
  5794                           ;MCU_B1.c: 40: ADC_Set();
  5795  0B9F  158A  230D  158A   	fcall	_ADC_Set
  5796                           
  5797                           ;MCU_B1.c: 42: ;;
  5798                           ;MCU_B1.c: 44: ;;
  5799                           ;MCU_B1.c: 46: ;;
  5800                           ;MCU_B1.c: 48: ;;
  5801                           ;MCU_B1.c: 50: ;;
  5802                           ;MCU_B1.c: 52: WDT_Set();
  5803  0BA2  158A  2379         	fcall	_WDT_Set
  5804  0BA4  0008               	return
  5805  0BA5                     __end_of_Mcu_Initialization:	
  5806                           
  5807                           	psect	text28
  5808  0B79                     __ptext28:	
  5809 ;; *************** function _WDT_Set *****************
  5810 ;; Defined at:
  5811 ;;		line 1005 in file "../src/MCU_B1.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;		None               void
  5818 ;; Registers used:
  5819 ;;		wreg
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5825 ;;      Params:         0       0       0       0
  5826 ;;      Locals:         0       0       0       0
  5827 ;;      Temps:          1       0       0       0
  5828 ;;      Totals:         1       0       0       0
  5829 ;;Total ram usage:        1 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    2
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_Mcu_Initialization
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _WDT_Set
  5841  0B79                     _WDT_Set:	
  5842                           
  5843                           ;MCU_B1.c: 1007: PSA = 1;
  5844                           
  5845                           ;incstack = 0
  5846                           ; Regs used in _WDT_Set: [wreg]
  5847  0B79  1683               	bsf	3,5	;RP0=1, select bank1
  5848  0B7A  1303               	bcf	3,6	;RP1=0, select bank1
  5849  0B7B  1581               	bsf	1,3	;volatile
  5850                           
  5851                           ;MCU_B1.c: 1008: PS0 = 1;
  5852  0B7C  1401               	bsf	1,0	;volatile
  5853                           
  5854                           ;MCU_B1.c: 1009: PS1 = 1;
  5855  0B7D  1481               	bsf	1,1	;volatile
  5856                           
  5857                           ;MCU_B1.c: 1010: PS2 = 1;
  5858  0B7E  1501               	bsf	1,2	;volatile
  5859                           
  5860                           ;MCU_B1.c: 1014: WDT.Enable = 1;
  5861  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  5862  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  5863  0B81  143A               	bsf	_WDT,0
  5864                           
  5865                           ;MCU_B1.c: 1015: WDT.Timer = 10;
  5866  0B82  300A               	movlw	10
  5867  0B83  00F4               	movwf	??_WDT_Set
  5868  0B84  0874               	movf	??_WDT_Set,w
  5869  0B85  00BB               	movwf	_WDT+1
  5870  0B86  0008               	return
  5871  0B87                     __end_of_WDT_Set:	
  5872                           
  5873                           	psect	text29
  5874  0B6B                     __ptext29:	
  5875 ;; *************** function _TMR1_Set *****************
  5876 ;; Defined at:
  5877 ;;		line 199 in file "../src/MCU_B1.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;		None               void
  5884 ;; Registers used:
  5885 ;;		wreg
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5891 ;;      Params:         0       0       0       0
  5892 ;;      Locals:         0       0       0       0
  5893 ;;      Temps:          0       0       0       0
  5894 ;;      Totals:         0       0       0       0
  5895 ;;Total ram usage:        0 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    2
  5898 ;; This function calls:
  5899 ;;		Nothing
  5900 ;; This function is called by:
  5901 ;;		_Mcu_Initialization
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _TMR1_Set
  5907  0B6B                     _TMR1_Set:	
  5908                           
  5909                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _TMR1_Set: [wreg]
  5913  0B6B  3041               	movlw	65
  5914  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  5915  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  5916  0B6E  0090               	movwf	16	;volatile
  5917                           
  5918                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  5919  0B6F  30FA               	movlw	250
  5920  0B70  008F               	movwf	15	;volatile
  5921                           
  5922                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  5923  0B71  3038               	movlw	56
  5924  0B72  008E               	movwf	14	;volatile
  5925                           
  5926                           ;MCU_B1.c: 203: TMR1IE = 1;
  5927  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  5928  0B74  1303               	bcf	3,6	;RP1=0, select bank1
  5929  0B75  140C               	bsf	12,0	;volatile
  5930                           
  5931                           ;MCU_B1.c: 204: PEIE = 1;
  5932  0B76  170B               	bsf	11,6	;volatile
  5933                           
  5934                           ;MCU_B1.c: 205: GIE = 1;
  5935  0B77  178B               	bsf	11,7	;volatile
  5936  0B78  0008               	return
  5937  0B79                     __end_of_TMR1_Set:	
  5938                           
  5939                           	psect	text30
  5940  0C6E                     __ptext30:	
  5941 ;; *************** function _IO_Set *****************
  5942 ;; Defined at:
  5943 ;;		line 60 in file "../src/MCU_B1.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;		None               void
  5950 ;; Registers used:
  5951 ;;		wreg, status,2
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5957 ;;      Params:         0       0       0       0
  5958 ;;      Locals:         0       0       0       0
  5959 ;;      Temps:          0       0       0       0
  5960 ;;      Totals:         0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    2
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_Mcu_Initialization
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function _IO_Set
  5973  0C6E                     _IO_Set:	
  5974                           
  5975                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  5976                           
  5977                           ;incstack = 0
  5978                           ; Regs used in _IO_Set: [wreg+status,2]
  5979  0C6E  302F               	movlw	47
  5980  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  5981  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  5982  0C71  0085               	movwf	5	;volatile
  5983                           
  5984                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5985  0C72  3001               	movlw	1
  5986  0C73  0086               	movwf	6	;volatile
  5987                           
  5988                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5989  0C74  0187               	clrf	7	;volatile
  5990                           
  5991                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  5992  0C75  3007               	movlw	7
  5993  0C76  1683               	bsf	3,5	;RP0=1, select bank3
  5994  0C77  1703               	bsf	3,6	;RP1=1, select bank3
  5995  0C78  0085               	movwf	5	;volatile
  5996                           
  5997                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5998  0C79  3001               	movlw	1
  5999  0C7A  0086               	movwf	6	;volatile
  6000                           
  6001                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  6002  0C7B  30AF               	movlw	175
  6003  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  6004  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  6005  0C7E  0085               	movwf	5	;volatile
  6006                           
  6007                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  6008  0C7F  3001               	movlw	1
  6009  0C80  0086               	movwf	6	;volatile
  6010                           
  6011                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  6012  0C81  0187               	clrf	7	;volatile
  6013  0C82  0008               	return
  6014  0C83                     __end_of_IO_Set:	
  6015                           
  6016                           	psect	text31
  6017  0AF0                     __ptext31:	
  6018 ;; *************** function _Fosc_Set *****************
  6019 ;; Defined at:
  6020 ;;		line 56 in file "../src/MCU_B1.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;		None
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;		None               void
  6027 ;; Registers used:
  6028 ;;		wreg
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6034 ;;      Params:         0       0       0       0
  6035 ;;      Locals:         0       0       0       0
  6036 ;;      Temps:          0       0       0       0
  6037 ;;      Totals:         0       0       0       0
  6038 ;;Total ram usage:        0 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; Hardware stack levels required when called:    2
  6041 ;; This function calls:
  6042 ;;		Nothing
  6043 ;; This function is called by:
  6044 ;;		_Mcu_Initialization
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           
  6049                           ;psect for function _Fosc_Set
  6050  0AF0                     _Fosc_Set:	
  6051                           
  6052                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  6053                           
  6054                           ;incstack = 0
  6055                           ; Regs used in _Fosc_Set: [wreg]
  6056  0AF0  303C               	movlw	60
  6057  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  6058  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  6059  0AF3  0090               	movwf	16	;volatile
  6060  0AF4  0008               	return
  6061  0AF5                     __end_of_Fosc_Set:	
  6062                           
  6063                           	psect	text32
  6064  0B0D                     __ptext32:	
  6065 ;; *************** function _ADC_Set *****************
  6066 ;; Defined at:
  6067 ;;		line 419 in file "../src/MCU_B1.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;		None               void
  6074 ;; Registers used:
  6075 ;;		wreg
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6081 ;;      Params:         0       0       0       0
  6082 ;;      Locals:         0       0       0       0
  6083 ;;      Temps:          0       0       0       0
  6084 ;;      Totals:         0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    2
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_Mcu_Initialization
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function _ADC_Set
  6097  0B0D                     _ADC_Set:	
  6098                           
  6099                           ;MCU_B1.c: 420: ADCON1 = 0x73;
  6100                           
  6101                           ;incstack = 0
  6102                           ; Regs used in _ADC_Set: [wreg]
  6103  0B0D  3073               	movlw	115
  6104  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  6105  0B0F  1303               	bcf	3,6	;RP1=0, select bank1
  6106  0B10  009F               	movwf	31	;volatile
  6107                           
  6108                           ;MCU_B1.c: 421: FVRCON = 0xc1;
  6109  0B11  30C1               	movlw	193
  6110  0B12  009D               	movwf	29	;volatile
  6111  0B13  0008               	return
  6112  0B14                     __end_of_ADC_Set:	
  6113                           
  6114                           	psect	text33
  6115  01FB                     __ptext33:	
  6116 ;; *************** function _Load_Main *****************
  6117 ;; Defined at:
  6118 ;;		line 39 in file "../src/OverLoad_B1.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;  i               1   13[BANK0 ] unsigned char 
  6123 ;;  error           1   11[BANK0 ] unsigned char 
  6124 ;;  j               1   10[BANK0 ] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;		None               void
  6127 ;; Registers used:
  6128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6134 ;;      Params:         0       0       0       0
  6135 ;;      Locals:         0       4       0       0
  6136 ;;      Temps:          0       2       0       0
  6137 ;;      Totals:         0       6       0       0
  6138 ;;Total ram usage:        6 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    4
  6141 ;; This function calls:
  6142 ;;		_getLightsControl_GO
  6143 ;;		_getLightsControl_OK
  6144 ;;		_getMain_All_Error_Status
  6145 ;;		_getMain_Lights_Count
  6146 ;;		_setLED
  6147 ;;		_setLoad_AH_AL_Restore
  6148 ;; This function is called by:
  6149 ;;		_main
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           
  6154                           ;psect for function _Load_Main
  6155  01FB                     _Load_Main:	
  6156                           
  6157                           ;OverLoad_B1.c: 40: char i = 0, j = 0, error = 0;
  6158                           
  6159                           ;incstack = 0
  6160                           ; Regs used in _Load_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6161  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  6162  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  6163  01FD  01E2               	clrf	Load_Main@i
  6164  01FE  01DF               	clrf	Load_Main@j
  6165  01FF  01E0               	clrf	Load_Main@error
  6166                           
  6167                           ;OverLoad_B1.c: 41: if (Load.Enable == 1) {
  6168  0200  1683               	bsf	3,5	;RP0=1, select bank1
  6169  0201  1303               	bcf	3,6	;RP1=0, select bank1
  6170  0202  1C4F               	btfss	_Load^(0+128),0
  6171  0203  2B5E               	goto	l697
  6172                           
  6173                           ;OverLoad_B1.c: 42: Load.GO = 0;
  6174  0204  10CF               	bcf	_Load^(0+128),1
  6175                           
  6176                           ;OverLoad_B1.c: 45: Load.GO = getLightsControl_GO() == 1 && getMain_All_Error_Status(0) 
      +                          == 0 ? 1 : 0;
  6177  0205  1283               	bcf	3,5	;RP0=0, select bank0
  6178  0206  1303               	bcf	3,6	;RP1=0, select bank0
  6179  0207  01E1               	clrf	_Load_Main$2773
  6180  0208  158A  22FB  118A   	fcall	_getLightsControl_GO
  6181  020B  3A01               	xorlw	1
  6182  020C  1D03               	skipz
  6183  020D  2A19               	goto	l4828
  6184  020E  3000               	movlw	0
  6185  020F  158A  2678  118A   	fcall	_getMain_All_Error_Status
  6186  0212  3800               	iorlw	0
  6187  0213  1D03               	skipz
  6188  0214  2A19               	goto	l4828
  6189  0215  1283               	bcf	3,5	;RP0=0, select bank0
  6190  0216  1303               	bcf	3,6	;RP1=0, select bank0
  6191  0217  01E1               	clrf	_Load_Main$2773
  6192  0218  0AE1               	incf	_Load_Main$2773,f
  6193  0219                     l4828:	
  6194  0219  1283               	bcf	3,5	;RP0=0, select bank0
  6195  021A  1303               	bcf	3,6	;RP1=0, select bank0
  6196  021B  0861               	movf	_Load_Main$2773,w
  6197  021C  1683               	bsf	3,5	;RP0=1, select bank1
  6198  021D  1303               	bcf	3,6	;RP1=0, select bank1
  6199  021E  10CF               	bcf	_Load^(0+128),1
  6200  021F  1D03               	skipz
  6201  0220  14CF               	bsf	_Load^(0+128),1
  6202                           
  6203                           ;OverLoad_B1.c: 47: if (Load.OK == 1) {
  6204  0221  1FCF               	btfss	_Load^(0+128),7
  6205  0222  2A2D               	goto	l4838
  6206                           
  6207                           ;OverLoad_B1.c: 48: if (getLightsControl_OK() == 1) {
  6208  0223  158A  2301  118A   	fcall	_getLightsControl_OK
  6209  0226  3A01               	xorlw	1
  6210  0227  1D03               	skipz
  6211  0228  2A2D               	goto	l4838
  6212                           
  6213                           ;OverLoad_B1.c: 49: Load.OK = 0;
  6214  0229  1683               	bsf	3,5	;RP0=1, select bank1
  6215  022A  1303               	bcf	3,6	;RP1=0, select bank1
  6216  022B  13CF               	bcf	_Load^(0+128),7
  6217                           
  6218                           ;OverLoad_B1.c: 50: Load.Count = 0;
  6219  022C  01EB               	clrf	(_Load^(0+128)+28)
  6220  022D                     l4838:	
  6221                           
  6222                           ;OverLoad_B1.c: 51: }
  6223                           ;OverLoad_B1.c: 52: }
  6224                           ;OverLoad_B1.c: 54: if (Load.GO == 1) {
  6225  022D  1683               	bsf	3,5	;RP0=1, select bank1
  6226  022E  1303               	bcf	3,6	;RP1=0, select bank1
  6227  022F  1CCF               	btfss	_Load^(0+128),1
  6228  0230  2B2D               	goto	l702
  6229                           
  6230                           ;OverLoad_B1.c: 55: Load.LightsON = 1;
  6231  0231  154F               	bsf	_Load^(0+128),2
  6232                           
  6233                           ;OverLoad_B1.c: 57: if (Load.ADtoGO == 1) {
  6234  0232  1E4F               	btfss	_Load^(0+128),4
  6235  0233  2B2B               	goto	l703
  6236                           
  6237                           ;OverLoad_B1.c: 59: Load.Time++;
  6238  0234  3001               	movlw	1
  6239  0235  07D0               	addwf	(_Load^(0+128)+1),f
  6240  0236  1803               	skipnc
  6241  0237  0AD1               	incf	((_Load+1)^(0+128)+1),f
  6242  0238  3000               	movlw	0
  6243  0239  07D1               	addwf	((_Load+1)^(0+128)+1),f
  6244                           
  6245                           ;OverLoad_B1.c: 60: if (Load.Time >= 5) {
  6246  023A  3000               	movlw	0
  6247  023B  0251               	subwf	((_Load+1)^(0+128)+1),w
  6248  023C  3005               	movlw	5
  6249  023D  1903               	skipnz
  6250  023E  0250               	subwf	(_Load^(0+128)+1),w
  6251  023F  1C03               	skipc
  6252  0240  0008               	return
  6253                           
  6254                           ;OverLoad_B1.c: 61: Load.Time = 0;
  6255  0241  01D0               	clrf	(_Load^(0+128)+1)
  6256  0242  01D1               	clrf	((_Load+1)^(0+128)+1)
  6257                           
  6258                           ;OverLoad_B1.c: 62: Load.ADtoGO = 0;
  6259  0243  124F               	bcf	_Load^(0+128),4
  6260                           
  6261                           ;OverLoad_B1.c: 63: Load.LightsCount = getMain_Lights_Count();
  6262  0244  158A  2459  118A   	fcall	_getMain_Lights_Count
  6263  0247  1283               	bcf	3,5	;RP0=0, select bank0
  6264  0248  1303               	bcf	3,6	;RP1=0, select bank0
  6265  0249  00DD               	movwf	??_Load_Main
  6266  024A  085D               	movf	??_Load_Main,w
  6267  024B  1683               	bsf	3,5	;RP0=1, select bank1
  6268  024C  1303               	bcf	3,6	;RP1=0, select bank1
  6269  024D  00ED               	movwf	(_Load^(0+128)+30)
  6270                           
  6271                           ;OverLoad_B1.c: 66: for (i = 0; i < 4; i++) {
  6272  024E  1283               	bcf	3,5	;RP0=0, select bank0
  6273  024F  1303               	bcf	3,6	;RP1=0, select bank0
  6274  0250  01E2               	clrf	Load_Main@i
  6275  0251  3004               	movlw	4
  6276  0252  0262               	subwf	Load_Main@i,w
  6277  0253  1803               	btfsc	3,0
  6278  0254  2A86               	goto	l4862
  6279  0255                     l4856:	
  6280                           
  6281                           ;OverLoad_B1.c: 67: Load.ADH += Load.AH[i];
  6282  0255  0862               	movf	Load_Main@i,w
  6283  0256  3ED9               	addlw	(_Load+10)& (0+255)
  6284  0257  0084               	movwf	4
  6285  0258  1383               	bcf	3,7	;select IRP bank1
  6286  0259  0800               	movf	0,w
  6287  025A  00DD               	movwf	??_Load_Main
  6288  025B  01DE               	clrf	??_Load_Main+1
  6289  025C  085D               	movf	??_Load_Main,w
  6290  025D  1683               	bsf	3,5	;RP0=1, select bank1
  6291  025E  1303               	bcf	3,6	;RP1=0, select bank1
  6292  025F  07D4               	addwf	(_Load^(0+128)+5),f
  6293  0260  1803               	skipnc
  6294  0261  0AD5               	incf	((_Load+1)^(0+128)+5),f
  6295  0262  1283               	bcf	3,5	;RP0=0, select bank0
  6296  0263  1303               	bcf	3,6	;RP1=0, select bank0
  6297  0264  085E               	movf	??_Load_Main+1,w
  6298  0265  1683               	bsf	3,5	;RP0=1, select bank1
  6299  0266  1303               	bcf	3,6	;RP1=0, select bank1
  6300  0267  07D5               	addwf	((_Load+1)^(0+128)+5),f
  6301                           
  6302                           ;OverLoad_B1.c: 68: Load.ADL += Load.AL[i];
  6303  0268  1283               	bcf	3,5	;RP0=0, select bank0
  6304  0269  1303               	bcf	3,6	;RP1=0, select bank0
  6305  026A  0862               	movf	Load_Main@i,w
  6306  026B  3EDE               	addlw	(_Load+15)& (0+255)
  6307  026C  0084               	movwf	4
  6308  026D  0800               	movf	0,w
  6309  026E  00DD               	movwf	??_Load_Main
  6310  026F  01DE               	clrf	??_Load_Main+1
  6311  0270  085D               	movf	??_Load_Main,w
  6312  0271  1683               	bsf	3,5	;RP0=1, select bank1
  6313  0272  1303               	bcf	3,6	;RP1=0, select bank1
  6314  0273  07D6               	addwf	(_Load^(0+128)+7),f
  6315  0274  1803               	skipnc
  6316  0275  0AD7               	incf	((_Load+1)^(0+128)+7),f
  6317  0276  1283               	bcf	3,5	;RP0=0, select bank0
  6318  0277  1303               	bcf	3,6	;RP1=0, select bank0
  6319  0278  085E               	movf	??_Load_Main+1,w
  6320  0279  1683               	bsf	3,5	;RP0=1, select bank1
  6321  027A  1303               	bcf	3,6	;RP1=0, select bank1
  6322  027B  07D7               	addwf	((_Load+1)^(0+128)+7),f
  6323  027C  3001               	movlw	1
  6324  027D  1283               	bcf	3,5	;RP0=0, select bank0
  6325  027E  1303               	bcf	3,6	;RP1=0, select bank0
  6326  027F  00DD               	movwf	??_Load_Main
  6327  0280  085D               	movf	??_Load_Main,w
  6328  0281  07E2               	addwf	Load_Main@i,f
  6329  0282  3004               	movlw	4
  6330  0283  0262               	subwf	Load_Main@i,w
  6331  0284  1C03               	skipc
  6332  0285  2A55               	goto	l4856
  6333  0286                     l4862:	
  6334                           
  6335                           ;OverLoad_B1.c: 69: }
  6336                           ;OverLoad_B1.c: 70: setLoad_AH_AL_Restore();
  6337  0286  158A  2483  118A   	fcall	_setLoad_AH_AL_Restore
  6338                           
  6339                           ;OverLoad_B1.c: 71: Load.ADH /= 4;
  6340  0289  3002               	movlw	2
  6341  028A  1683               	bsf	3,5	;RP0=1, select bank1
  6342  028B  1303               	bcf	3,6	;RP1=0, select bank1
  6343  028C                     u5735:	
  6344  028C  1003               	clrc
  6345  028D  0CD5               	rrf	((_Load+1)^(0+128)+5),f
  6346  028E  0CD4               	rrf	(_Load^(0+128)+5),f
  6347  028F  3EFF               	addlw	-1
  6348  0290  1D03               	skipz
  6349  0291  2A8C               	goto	u5735
  6350                           
  6351                           ;OverLoad_B1.c: 72: Load.ADL /= 4;
  6352  0292  3002               	movlw	2
  6353  0293                     u5745:	
  6354  0293  1003               	clrc
  6355  0294  0CD7               	rrf	((_Load+1)^(0+128)+7),f
  6356  0295  0CD6               	rrf	(_Load^(0+128)+7),f
  6357  0296  3EFF               	addlw	-1
  6358  0297  1D03               	skipz
  6359  0298  2A93               	goto	u5745
  6360                           
  6361                           ;OverLoad_B1.c: 74: if (Load.ADH > Load.ADL) {
  6362  0299  0855               	movf	((_Load+1)^(0+128)+5),w
  6363  029A  0257               	subwf	((_Load+1)^(0+128)+7),w
  6364  029B  1D03               	skipz
  6365  029C  2A9F               	goto	u5755
  6366  029D  0854               	movf	(_Load^(0+128)+5),w
  6367  029E  0256               	subwf	(_Load^(0+128)+7),w
  6368  029F                     u5755:	
  6369  029F  1803               	skipnc
  6370  02A0  0008               	return
  6371                           
  6372                           ;OverLoad_B1.c: 75: Load.AD = (Load.ADH - Load.ADL);
  6373  02A1  0356               	decf	(_Load^(0+128)+7),w
  6374  02A2  3AFF               	xorlw	255
  6375  02A3  0754               	addwf	(_Load^(0+128)+5),w
  6376  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  6377  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  6378  02A6  00DD               	movwf	??_Load_Main
  6379  02A7  085D               	movf	??_Load_Main,w
  6380  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  6381  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  6382  02AA  00E3               	movwf	(_Load^(0+128)+20)
  6383                           
  6384                           ;OverLoad_B1.c: 77: Load.ADH = 0;
  6385  02AB  01D4               	clrf	(_Load^(0+128)+5)
  6386  02AC  01D5               	clrf	((_Load+1)^(0+128)+5)
  6387                           
  6388                           ;OverLoad_B1.c: 78: Load.ADL = 0;
  6389  02AD  01D6               	clrf	(_Load^(0+128)+7)
  6390  02AE  01D7               	clrf	((_Load+1)^(0+128)+7)
  6391                           
  6392                           ;OverLoad_B1.c: 79: if (Load.Count < 2) {
  6393  02AF  3002               	movlw	2
  6394  02B0  026B               	subwf	(_Load^(0+128)+28),w
  6395  02B1  1803               	skipnc
  6396  02B2  2AD4               	goto	l708
  6397                           
  6398                           ;OverLoad_B1.c: 80: Load.Count++;
  6399  02B3  3001               	movlw	1
  6400  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  6401  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  6402  02B6  00DD               	movwf	??_Load_Main
  6403  02B7  085D               	movf	??_Load_Main,w
  6404  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6405  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  6406  02BA  07EB               	addwf	(_Load^(0+128)+28),f
  6407                           
  6408                           ;OverLoad_B1.c: 81: if (Load.Count == 1) {
  6409  02BB  086B               	movf	(_Load^(0+128)+28),w
  6410  02BC  3A01               	xorlw	1
  6411  02BD  1D03               	skipz
  6412  02BE  2AC1               	goto	l4884
  6413                           
  6414                           ;OverLoad_B1.c: 82: Load.JudgeValue = 80;
  6415  02BF  3050               	movlw	80
  6416  02C0  2ACA               	goto	L16
  6417  02C1                     l4884:	
  6418                           ;OverLoad_B1.c: 83: } else if (Load.Count == 2) {
  6419                           
  6420  02C1  086B               	movf	(_Load^(0+128)+28),w
  6421  02C2  3A02               	xorlw	2
  6422  02C3  1D03               	skipz
  6423  02C4  2AD4               	goto	l708
  6424                           
  6425                           ;OverLoad_B1.c: 84: if (Load.LightsCount == 1) {
  6426  02C5  086D               	movf	(_Load^(0+128)+30),w
  6427  02C6  3A01               	xorlw	1
  6428  02C7  1D03               	skipz
  6429  02C8  2ACD               	goto	l4890
  6430                           
  6431                           ;OverLoad_B1.c: 85: Load.JudgeValue = 15;
  6432  02C9  300F               	movlw	15
  6433  02CA                     L16:	
  6434  02CA  00E7               	movwf	(_Load^(0+128)+24)
  6435  02CB  3000               	movlw	0
  6436  02CC  2AD3               	goto	L17
  6437  02CD                     l4890:	
  6438                           ;OverLoad_B1.c: 86: } else {
  6439                           
  6440                           
  6441                           ;OverLoad_B1.c: 87: Load.JudgeValue = (15 + Load.TotalLoad) - 0x08;
  6442  02CD  0858               	movf	(_Load^(0+128)+9),w
  6443  02CE  3E07               	addlw	7
  6444  02CF  00E7               	movwf	(_Load^(0+128)+24)
  6445  02D0  3000               	movlw	0
  6446  02D1  1803               	skipnc
  6447  02D2  3001               	movlw	1
  6448  02D3                     L17:	
  6449  02D3  00E8               	movwf	(_Load^(0+128)+25)
  6450  02D4                     l708:	
  6451                           
  6452                           ;OverLoad_B1.c: 88: }
  6453                           ;OverLoad_B1.c: 89: }
  6454                           ;OverLoad_B1.c: 90: }
  6455                           ;OverLoad_B1.c: 92: if (Load.AD >= Load.JudgeValue) {
  6456  02D4  0863               	movf	(_Load^(0+128)+20),w
  6457  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  6458  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  6459  02D7  00DD               	movwf	??_Load_Main
  6460  02D8  01DE               	clrf	??_Load_Main+1
  6461  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  6462  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  6463  02DB  0868               	movf	((_Load+1)^(0+128)+24),w
  6464  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  6465  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  6466  02DE  025E               	subwf	??_Load_Main+1,w
  6467  02DF  1D03               	skipz
  6468  02E0  2AE7               	goto	u5805
  6469  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  6470  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  6471  02E3  0867               	movf	(_Load^(0+128)+24),w
  6472  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  6473  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  6474  02E6  025D               	subwf	??_Load_Main,w
  6475  02E7                     u5805:	
  6476  02E7  1C03               	skipc
  6477  02E8  2AFF               	goto	l4902
  6478                           
  6479                           ;OverLoad_B1.c: 93: Load.ErrorCount++;
  6480  02E9  3001               	movlw	1
  6481  02EA  00DD               	movwf	??_Load_Main
  6482  02EB  085D               	movf	??_Load_Main,w
  6483  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  6484  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  6485  02EE  07EC               	addwf	(_Load^(0+128)+29),f
  6486                           
  6487                           ;OverLoad_B1.c: 94: if (Load.ErrorCount > 2) {
  6488  02EF  3003               	movlw	3
  6489  02F0  026C               	subwf	(_Load^(0+128)+29),w
  6490  02F1  1C03               	skipc
  6491  02F2  0008               	return
  6492                           
  6493                           ;OverLoad_B1.c: 95: Load.ErrorCount = 0;
  6494  02F3  01EC               	clrf	(_Load^(0+128)+29)
  6495                           
  6496                           ;OverLoad_B1.c: 97: Load.ERROR = 1;
  6497  02F4  16CF               	bsf	_Load^(0+128),5
  6498                           
  6499                           ;OverLoad_B1.c: 99: setLED(3, 111);
  6500  02F5  306F               	movlw	111
  6501  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6502  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6503  02F8  00DD               	movwf	??_Load_Main
  6504  02F9  085D               	movf	??_Load_Main,w
  6505  02FA  00F6               	movwf	setLED@command
  6506  02FB  3003               	movlw	3
  6507  02FC  118A  2570         	fcall	_setLED
  6508                           
  6509                           ;OverLoad_B1.c: 110: }
  6510                           ;OverLoad_B1.c: 111: } else {
  6511  02FE  0008               	return
  6512  02FF                     l4902:	
  6513                           
  6514                           ;OverLoad_B1.c: 112: Load.ErrorCount = 0;
  6515  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  6516  0300  1303               	bcf	3,6	;RP1=0, select bank1
  6517  0301  01EC               	clrf	(_Load^(0+128)+29)
  6518                           
  6519                           ;OverLoad_B1.c: 113: if (Load.OK == 0) {
  6520  0302  1BCF               	btfsc	_Load^(0+128),7
  6521  0303  0008               	return
  6522                           
  6523                           ;OverLoad_B1.c: 114: Load.SafeCount++;
  6524  0304  3001               	movlw	1
  6525  0305  1283               	bcf	3,5	;RP0=0, select bank0
  6526  0306  1303               	bcf	3,6	;RP1=0, select bank0
  6527  0307  00DD               	movwf	??_Load_Main
  6528  0308  085D               	movf	??_Load_Main,w
  6529  0309  1683               	bsf	3,5	;RP0=1, select bank1
  6530  030A  1303               	bcf	3,6	;RP1=0, select bank1
  6531  030B  07EE               	addwf	(_Load^(0+128)+31),f
  6532                           
  6533                           ;OverLoad_B1.c: 115: if (Load.SafeCount >= 3) {
  6534  030C  3003               	movlw	3
  6535  030D  026E               	subwf	(_Load^(0+128)+31),w
  6536  030E  1C03               	skipc
  6537  030F  0008               	return
  6538                           
  6539                           ;OverLoad_B1.c: 116: Load.SafeCount = 0;
  6540  0310  01EE               	clrf	(_Load^(0+128)+31)
  6541                           
  6542                           ;OverLoad_B1.c: 117: Load.OK = 1;
  6543  0311  17CF               	bsf	_Load^(0+128),7
  6544                           
  6545                           ;OverLoad_B1.c: 118: Load.TotalLoad = Load.AD;
  6546  0312  0863               	movf	(_Load^(0+128)+20),w
  6547  0313  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0314  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0315  00DD               	movwf	??_Load_Main
  6550  0316  085D               	movf	??_Load_Main,w
  6551  0317  1683               	bsf	3,5	;RP0=1, select bank1
  6552  0318  1303               	bcf	3,6	;RP1=0, select bank1
  6553  0319  00D8               	movwf	(_Load^(0+128)+9)
  6554                           
  6555                           ;OverLoad_B1.c: 119: if (Load.LightsCount == 1) {
  6556  031A  086D               	movf	(_Load^(0+128)+30),w
  6557  031B  3A01               	xorlw	1
  6558  031C  1D03               	skipz
  6559  031D  2B23               	goto	l4920
  6560                           
  6561                           ;OverLoad_B1.c: 120: Load.JudgeValue = 15;
  6562  031E  300F               	movlw	15
  6563  031F  00E7               	movwf	(_Load^(0+128)+24)
  6564  0320  3000               	movlw	0
  6565  0321  00E8               	movwf	(_Load^(0+128)+25)
  6566                           
  6567                           ;OverLoad_B1.c: 121: } else {
  6568  0322  0008               	return
  6569  0323                     l4920:	
  6570                           
  6571                           ;OverLoad_B1.c: 122: Load.JudgeValue = (15 + Load.TotalLoad) - 0x08;
  6572  0323  0858               	movf	(_Load^(0+128)+9),w
  6573  0324  3E07               	addlw	7
  6574  0325  00E7               	movwf	(_Load^(0+128)+24)
  6575  0326  3000               	movlw	0
  6576  0327  1803               	skipnc
  6577  0328  3001               	movlw	1
  6578  0329  00E8               	movwf	(_Load^(0+128)+25)
  6579                           
  6580                           ;OverLoad_B1.c: 123: }
  6581                           ;OverLoad_B1.c: 124: }
  6582                           ;OverLoad_B1.c: 125: }
  6583                           ;OverLoad_B1.c: 126: }
  6584                           ;OverLoad_B1.c: 127: }
  6585                           ;OverLoad_B1.c: 128: }
  6586                           ;OverLoad_B1.c: 129: } else {
  6587  032A  0008               	return
  6588  032B                     l703:	
  6589                           
  6590                           ;OverLoad_B1.c: 130: Load.ADtoGO = 1;
  6591  032B  164F               	bsf	_Load^(0+128),4
  6592                           
  6593                           ;OverLoad_B1.c: 131: }
  6594                           ;OverLoad_B1.c: 132: } else {
  6595  032C  0008               	return
  6596  032D                     l702:	
  6597                           
  6598                           ;OverLoad_B1.c: 133: Load.OK = 1;
  6599  032D  17CF               	bsf	_Load^(0+128),7
  6600                           
  6601                           ;OverLoad_B1.c: 134: if (Load.LightsON == 1) {
  6602  032E  1D4F               	btfss	_Load^(0+128),2
  6603  032F  2B40               	goto	l4940
  6604                           
  6605                           ;OverLoad_B1.c: 135: Load.LightsON = 0;
  6606  0330  114F               	bcf	_Load^(0+128),2
  6607                           
  6608                           ;OverLoad_B1.c: 137: Load.Time = 0;
  6609  0331  01D0               	clrf	(_Load^(0+128)+1)
  6610  0332  01D1               	clrf	((_Load+1)^(0+128)+1)
  6611                           
  6612                           ;OverLoad_B1.c: 138: Load.ADtoGO = 0;
  6613  0333  124F               	bcf	_Load^(0+128),4
  6614                           
  6615                           ;OverLoad_B1.c: 139: setLoad_AH_AL_Restore();
  6616  0334  158A  2483  118A   	fcall	_setLoad_AH_AL_Restore
  6617                           
  6618                           ;OverLoad_B1.c: 140: Load.Count = 0;
  6619  0337  1683               	bsf	3,5	;RP0=1, select bank1
  6620  0338  1303               	bcf	3,6	;RP1=0, select bank1
  6621  0339  01EB               	clrf	(_Load^(0+128)+28)
  6622                           
  6623                           ;OverLoad_B1.c: 141: Load.ErrorCount = 0;
  6624  033A  01EC               	clrf	(_Load^(0+128)+29)
  6625                           
  6626                           ;OverLoad_B1.c: 142: Load.SafeCount = 0;
  6627  033B  01EE               	clrf	(_Load^(0+128)+31)
  6628                           
  6629                           ;OverLoad_B1.c: 144: Load.ADH = 0;
  6630  033C  01D4               	clrf	(_Load^(0+128)+5)
  6631  033D  01D5               	clrf	((_Load+1)^(0+128)+5)
  6632                           
  6633                           ;OverLoad_B1.c: 145: Load.ADL = 0;
  6634  033E  01D6               	clrf	(_Load^(0+128)+7)
  6635  033F  01D7               	clrf	((_Load+1)^(0+128)+7)
  6636  0340                     l4940:	
  6637                           
  6638                           ;OverLoad_B1.c: 146: }
  6639                           ;OverLoad_B1.c: 147: if (Load.ERROR == 1) {
  6640  0340  1ECF               	btfss	_Load^(0+128),5
  6641  0341  0008               	return
  6642                           
  6643                           ;OverLoad_B1.c: 148: Load.ErrorTime++;
  6644  0342  3001               	movlw	1
  6645  0343  07D2               	addwf	(_Load^(0+128)+3),f
  6646  0344  1803               	skipnc
  6647  0345  0AD3               	incf	((_Load+1)^(0+128)+3),f
  6648  0346  3000               	movlw	0
  6649  0347  07D3               	addwf	((_Load+1)^(0+128)+3),f
  6650                           
  6651                           ;OverLoad_B1.c: 149: if (Load.ErrorTime >= 1000)
  6652  0348  3003               	movlw	3
  6653  0349  0253               	subwf	((_Load+1)^(0+128)+3),w
  6654  034A  30E8               	movlw	232
  6655  034B  1903               	skipnz
  6656  034C  0252               	subwf	(_Load^(0+128)+3),w
  6657  034D  1C03               	skipc
  6658  034E  0008               	return
  6659                           
  6660                           ;OverLoad_B1.c: 150: {
  6661                           ;OverLoad_B1.c: 151: Load.ErrorTime = 0;
  6662  034F  01D2               	clrf	(_Load^(0+128)+3)
  6663  0350  01D3               	clrf	((_Load+1)^(0+128)+3)
  6664                           
  6665                           ;OverLoad_B1.c: 154: setLED(3, 110);
  6666  0351  306E               	movlw	110
  6667  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6669  0354  00DD               	movwf	??_Load_Main
  6670  0355  085D               	movf	??_Load_Main,w
  6671  0356  00F6               	movwf	setLED@command
  6672  0357  3003               	movlw	3
  6673  0358  118A  2570         	fcall	_setLED
  6674                           
  6675                           ;OverLoad_B1.c: 158: Load.ERROR = 0;
  6676  035A  1683               	bsf	3,5	;RP0=1, select bank1
  6677  035B  1303               	bcf	3,6	;RP1=0, select bank1
  6678  035C  12CF               	bcf	_Load^(0+128),5
  6679                           
  6680                           ;OverLoad_B1.c: 159: }
  6681                           ;OverLoad_B1.c: 160: }
  6682                           ;OverLoad_B1.c: 161: }
  6683                           ;OverLoad_B1.c: 162: } else {
  6684  035D  0008               	return
  6685  035E                     l697:	
  6686                           
  6687                           ;OverLoad_B1.c: 163: if (myMain.PowerON == 1) {
  6688  035E  1283               	bcf	3,5	;RP0=0, select bank0
  6689  035F  1303               	bcf	3,6	;RP1=0, select bank0
  6690  0360  1C20               	btfss	_myMain,0
  6691  0361  0008               	return
  6692                           
  6693                           ;OverLoad_B1.c: 164: Load.Enable = 1;
  6694  0362  1683               	bsf	3,5	;RP0=1, select bank1
  6695  0363  1303               	bcf	3,6	;RP1=0, select bank1
  6696  0364  144F               	bsf	_Load^(0+128),0
  6697  0365  0008               	return
  6698  0366                     __end_of_Load_Main:	
  6699                           
  6700                           	psect	text34
  6701  0C59                     __ptext34:	
  6702 ;; *************** function _getMain_Lights_Count *****************
  6703 ;; Defined at:
  6704 ;;		line 523 in file "../src/Main_B1.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  status1         1    3[BANK0 ] unsigned char 
  6709 ;;  status3         1    2[BANK0 ] unsigned char 
  6710 ;;  status2         1    1[BANK0 ] unsigned char 
  6711 ;;  count           1    0[BANK0 ] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      unsigned char 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6721 ;;      Params:         0       0       0       0
  6722 ;;      Locals:         0       4       0       0
  6723 ;;      Temps:          1       0       0       0
  6724 ;;      Totals:         1       4       0       0
  6725 ;;Total ram usage:        5 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    2
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_Load_Main
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _getMain_Lights_Count
  6737  0C59                     _getMain_Lights_Count:	
  6738                           
  6739                           ;Main_B1.c: 524: char status1 = 0, status2 = 0, status3 = 0, count = 0;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _getMain_Lights_Count: [wreg+status,2+status,0]
  6743  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6745  0C5B  01D8               	clrf	getMain_Lights_Count@status1
  6746  0C5C  01D6               	clrf	getMain_Lights_Count@status2
  6747  0C5D  01D7               	clrf	getMain_Lights_Count@status3
  6748  0C5E  01D5               	clrf	getMain_Lights_Count@count
  6749                           
  6750                           ;Main_B1.c: 530: status1 = Lights1.Status == 1 ? 1 : 0;
  6751  0C5F  3000               	movlw	0
  6752  0C60  1283               	bcf	3,5	;RP0=0, select bank2
  6753  0C61  1703               	bsf	3,6	;RP1=1, select bank2
  6754  0C62  1920               	btfsc	_Lights1^(0+256),2
  6755  0C63  3001               	movlw	1
  6756  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0C66  00D8               	movwf	getMain_Lights_Count@status1
  6759                           
  6760                           ;Main_B1.c: 539: return count = (status1 + status2 + status3);
  6761  0C67  0856               	movf	getMain_Lights_Count@status2,w
  6762  0C68  0758               	addwf	getMain_Lights_Count@status1,w
  6763  0C69  00F4               	movwf	??_getMain_Lights_Count
  6764  0C6A  0857               	movf	getMain_Lights_Count@status3,w
  6765  0C6B  0774               	addwf	??_getMain_Lights_Count,w
  6766  0C6C  00D5               	movwf	getMain_Lights_Count@count
  6767  0C6D  0008               	return
  6768  0C6E                     __end_of_getMain_Lights_Count:	
  6769                           
  6770                           	psect	text35
  6771  0B01                     __ptext35:	
  6772 ;; *************** function _getLightsControl_OK *****************
  6773 ;; Defined at:
  6774 ;;		line 253 in file "../src/TriacRelay_B1.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  loadok          1    4[COMMON] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      unsigned char 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6788 ;;      Params:         0       0       0       0
  6789 ;;      Locals:         1       0       0       0
  6790 ;;      Temps:          0       0       0       0
  6791 ;;      Totals:         1       0       0       0
  6792 ;;Total ram usage:        1 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    2
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_Load_Main
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           
  6803                           ;psect for function _getLightsControl_OK
  6804  0B01                     _getLightsControl_OK:	
  6805                           
  6806                           ;TriacRelay_B1.c: 254: char loadok = LightsControl.LoadOK == 1 ? 1 : 0;
  6807                           
  6808                           ;incstack = 0
  6809                           ; Regs used in _getLightsControl_OK: [wreg+status,2]
  6810  0B01  3000               	movlw	0
  6811  0B02  1978               	btfsc	_LightsControl,2
  6812  0B03  3001               	movlw	1
  6813  0B04  00F4               	movwf	getLightsControl_OK@loadok
  6814                           
  6815                           ;TriacRelay_B1.c: 255: return loadok;
  6816  0B05  0874               	movf	getLightsControl_OK@loadok,w
  6817  0B06  0008               	return
  6818  0B07                     __end_of_getLightsControl_OK:	
  6819                           
  6820                           	psect	text36
  6821  0AFB                     __ptext36:	
  6822 ;; *************** function _getLightsControl_GO *****************
  6823 ;; Defined at:
  6824 ;;		line 247 in file "../src/TriacRelay_B1.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;		None
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;  loadgo          1    4[COMMON] unsigned char 
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      unsigned char 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6838 ;;      Params:         0       0       0       0
  6839 ;;      Locals:         1       0       0       0
  6840 ;;      Temps:          0       0       0       0
  6841 ;;      Totals:         1       0       0       0
  6842 ;;Total ram usage:        1 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; Hardware stack levels required when called:    2
  6845 ;; This function calls:
  6846 ;;		Nothing
  6847 ;; This function is called by:
  6848 ;;		_Load_Main
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           
  6853                           ;psect for function _getLightsControl_GO
  6854  0AFB                     _getLightsControl_GO:	
  6855                           
  6856                           ;TriacRelay_B1.c: 248: char loadgo = LightsControl.LoadGO == 1 ? 1 : 0;
  6857                           
  6858                           ;incstack = 0
  6859                           ; Regs used in _getLightsControl_GO: [wreg+status,2]
  6860  0AFB  3000               	movlw	0
  6861  0AFC  18F8               	btfsc	_LightsControl,1
  6862  0AFD  3001               	movlw	1
  6863  0AFE  00F4               	movwf	getLightsControl_GO@loadgo
  6864                           
  6865                           ;TriacRelay_B1.c: 249: return loadgo;
  6866  0AFF  0874               	movf	getLightsControl_GO@loadgo,w
  6867  0B00  0008               	return
  6868  0B01                     __end_of_getLightsControl_GO:	
  6869                           
  6870                           	psect	text37
  6871  0AF5                     __ptext37:	
  6872 ;; *************** function _Load_Initialization *****************
  6873 ;; Defined at:
  6874 ;;		line 9 in file "../src/OverLoad_B1.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;		None
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;		None               void
  6881 ;; Registers used:
  6882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6888 ;;      Params:         0       0       0       0
  6889 ;;      Locals:         0       0       0       0
  6890 ;;      Temps:          0       0       0       0
  6891 ;;      Totals:         0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    3
  6895 ;; This function calls:
  6896 ;;		_setLoad_AH_AL_Restore
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           
  6903                           ;psect for function _Load_Initialization
  6904  0AF5                     _Load_Initialization:	
  6905                           
  6906                           ;OverLoad_B1.c: 10: Load.OK = 1;
  6907                           
  6908                           ;incstack = 0
  6909                           ; Regs used in _Load_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6910  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  6911  0AF6  1303               	bcf	3,6	;RP1=0, select bank1
  6912  0AF7  17CF               	bsf	_Load^(0+128),7
  6913                           
  6914                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  6915  0AF8  158A  2483         	fcall	_setLoad_AH_AL_Restore
  6916  0AFA  0008               	return
  6917  0AFB                     __end_of_Load_Initialization:	
  6918                           
  6919                           	psect	text38
  6920  0C83                     __ptext38:	
  6921 ;; *************** function _setLoad_AH_AL_Restore *****************
  6922 ;; Defined at:
  6923 ;;		line 271 in file "../src/OverLoad_B1.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  i               1    5[COMMON] unsigned char 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;		None               void
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6937 ;;      Params:         0       0       0       0
  6938 ;;      Locals:         1       0       0       0
  6939 ;;      Temps:          1       0       0       0
  6940 ;;      Totals:         2       0       0       0
  6941 ;;Total ram usage:        2 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    2
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_Load_Initialization
  6948 ;;		_Load_Main
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _setLoad_AH_AL_Restore
  6954  0C83                     _setLoad_AH_AL_Restore:	
  6955                           
  6956                           ;OverLoad_B1.c: 272: char i;
  6957                           ;OverLoad_B1.c: 273: for (i = 0; i < 5; i++) {
  6958                           
  6959                           ;incstack = 0
  6960                           ; Regs used in _setLoad_AH_AL_Restore: [wreg-fsr0h+status,2+status,0]
  6961  0C83  01F5               	clrf	setLoad_AH_AL_Restore@i
  6962  0C84                     L18:	
  6963  0C84  3005               	movlw	5
  6964  0C85  0275               	subwf	setLoad_AH_AL_Restore@i,w
  6965  0C86  1803               	btfsc	3,0
  6966  0C87  0008               	return
  6967                           
  6968                           ;OverLoad_B1.c: 274: Load.AH[i] = 0;
  6969  0C88  0875               	movf	setLoad_AH_AL_Restore@i,w
  6970  0C89  3ED9               	addlw	(_Load+10)& (0+255)
  6971  0C8A  0084               	movwf	4
  6972  0C8B  1383               	bcf	3,7	;select IRP bank1
  6973  0C8C  0180               	clrf	0
  6974                           
  6975                           ;OverLoad_B1.c: 275: Load.AL[i] = 0xff;
  6976  0C8D  30FF               	movlw	255
  6977  0C8E  00F4               	movwf	??_setLoad_AH_AL_Restore
  6978  0C8F  0875               	movf	setLoad_AH_AL_Restore@i,w
  6979  0C90  3EDE               	addlw	(_Load+15)& (0+255)
  6980  0C91  0084               	movwf	4
  6981  0C92  0874               	movf	??_setLoad_AH_AL_Restore,w
  6982  0C93  0080               	movwf	0
  6983  0C94  3001               	movlw	1
  6984  0C95  00F4               	movwf	??_setLoad_AH_AL_Restore
  6985  0C96  0874               	movf	??_setLoad_AH_AL_Restore,w
  6986  0C97  07F5               	addwf	setLoad_AH_AL_Restore@i,f
  6987  0C98  2C84               	goto	L18
  6988  0C99                     __end_of_setLoad_AH_AL_Restore:	
  6989                           
  6990                           	psect	text39
  6991  0B2C                     __ptext39:	
  6992 ;; *************** function _Lights_Main *****************
  6993 ;; Defined at:
  6994 ;;		line 54 in file "../src/TriacRelay_B1.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;		None
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;		None
  6999 ;; Return value:  Size  Location     Type
  7000 ;;		None               void
  7001 ;; Registers used:
  7002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7008 ;;      Params:         0       0       0       0
  7009 ;;      Locals:         0       0       0       0
  7010 ;;      Temps:          0       0       0       0
  7011 ;;      Totals:         0       0       0       0
  7012 ;;Total ram usage:        0 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; Hardware stack levels required when called:    6
  7015 ;; This function calls:
  7016 ;;		_Lights_Close
  7017 ;;		_Lights_Control
  7018 ;;		_setLights_Main
  7019 ;; This function is called by:
  7020 ;;		_main
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           
  7025                           ;psect for function _Lights_Main
  7026  0B2C                     _Lights_Main:	
  7027                           
  7028                           ;TriacRelay_B1.c: 56: setLights_Main(1);
  7029                           
  7030                           ;incstack = 0
  7031                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7032  0B2C  3001               	movlw	1
  7033  0B2D  158A  2627  158A   	fcall	_setLights_Main
  7034                           
  7035                           ;TriacRelay_B1.c: 57: Lights_Control(1);
  7036  0B30  3001               	movlw	1
  7037  0B31  158A  2793  158A   	fcall	_Lights_Control
  7038                           
  7039                           ;TriacRelay_B1.c: 70: Lights_Close();
  7040  0B34  158A  240A         	fcall	_Lights_Close
  7041  0B36  0008               	return
  7042  0B37                     __end_of_Lights_Main:	
  7043                           
  7044                           	psect	text40
  7045  0E27                     __ptext40:	
  7046 ;; *************** function _setLights_Main *****************
  7047 ;; Defined at:
  7048 ;;		line 82 in file "../src/TriacRelay_B1.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  lights          1    wreg     unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  lights          1   19[BANK0 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;		None               void
  7055 ;; Registers used:
  7056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7062 ;;      Params:         0       0       0       0
  7063 ;;      Locals:         0       3       0       0
  7064 ;;      Temps:          0       3       0       0
  7065 ;;      Totals:         0       6       0       0
  7066 ;;Total ram usage:        6 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    5
  7069 ;; This function calls:
  7070 ;;		_LightsPointSelect
  7071 ;;		_getLoad_OK
  7072 ;;		_getMain_All_Error_Status
  7073 ;;		_setLights
  7074 ;; This function is called by:
  7075 ;;		_Lights_Main
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _setLights_Main
  7081  0E27                     _setLights_Main:	
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7085                           ;setLights_Main@lights stored from wreg
  7086  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  7087  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  7088  0E29  00E8               	movwf	setLights_Main@lights
  7089                           
  7090                           ;TriacRelay_B1.c: 83: LightsPointSelect(lights);
  7091  0E2A  0868               	movf	setLights_Main@lights,w
  7092  0E2B  158A  2343  158A   	fcall	_LightsPointSelect
  7093                           
  7094                           ;TriacRelay_B1.c: 84: if (Lights->GO == 0) {
  7095  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  7096  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  7097  0E30  083C               	movf	_Lights,w
  7098  0E31  0084               	movwf	4
  7099  0E32  1783               	bsf	3,7	;select IRP bank2
  7100  0E33  1880               	btfsc	0,1
  7101  0E34  0008               	return
  7102                           
  7103                           ;TriacRelay_B1.c: 85: if (Lights->Trigger == 1) {
  7104  0E35  083C               	movf	_Lights,w
  7105  0E36  0084               	movwf	4
  7106  0E37  1D80               	btfss	0,3
  7107  0E38  0008               	return
  7108                           
  7109                           ;TriacRelay_B1.c: 86: if (getMain_All_Error_Status(0) == 0) {
  7110  0E39  3000               	movlw	0
  7111  0E3A  158A  2678  158A   	fcall	_getMain_All_Error_Status
  7112  0E3D  3800               	iorlw	0
  7113  0E3E  1D03               	skipz
  7114  0E3F  2E5E               	goto	l1228
  7115                           
  7116                           ;TriacRelay_B1.c: 87: if (LightsControl.LoadOK == 1) {
  7117  0E40  1D78               	btfss	_LightsControl,2
  7118  0E41  2E5F               	goto	l1234
  7119                           
  7120                           ;TriacRelay_B1.c: 88: LightsControl.LoadOK = getLoad_OK() == 1 ? 0 : LightsControl.LoadO
      +                          K;
  7121  0E42  158A  2314  158A   	fcall	_getLoad_OK
  7122  0E45  3A01               	xorlw	1
  7123  0E46  1903               	skipnz
  7124  0E47  2E55               	goto	l4574
  7125  0E48  0C78               	rrf	_LightsControl,w
  7126  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  7127  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  7128  0E4B  00E3               	movwf	??_setLights_Main
  7129  0E4C  0C63               	rrf	??_setLights_Main,w
  7130  0E4D  3901               	andlw	1
  7131  0E4E  00E4               	movwf	??_setLights_Main+1
  7132  0E4F  01E5               	clrf	??_setLights_Main+2
  7133  0E50  0864               	movf	??_setLights_Main+1,w
  7134  0E51  00E6               	movwf	_setLights_Main$4862
  7135  0E52  0865               	movf	??_setLights_Main+2,w
  7136  0E53  00E7               	movwf	_setLights_Main$4862+1
  7137  0E54  2E59               	goto	l4576
  7138  0E55                     l4574:	
  7139  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  7140  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  7141  0E57  01E6               	clrf	_setLights_Main$4862
  7142  0E58  01E7               	clrf	_setLights_Main$4862+1
  7143  0E59                     l4576:	
  7144  0E59  0866               	movf	_setLights_Main$4862,w
  7145  0E5A  1178               	bcf	_LightsControl,2
  7146  0E5B  1D03               	skipz
  7147  0E5C  1578               	bsf	_LightsControl,2
  7148                           
  7149                           ;TriacRelay_B1.c: 89: }
  7150                           ;TriacRelay_B1.c: 90: } else {
  7151  0E5D  2E5F               	goto	l1234
  7152  0E5E                     l1228:	
  7153                           
  7154                           ;TriacRelay_B1.c: 91: LightsControl.LoadOK = 0;
  7155  0E5E  1178               	bcf	_LightsControl,2
  7156  0E5F                     l1234:	
  7157                           
  7158                           ;TriacRelay_B1.c: 92: }
  7159                           ;TriacRelay_B1.c: 94: if (LightsControl.LoadOK == 0) {
  7160  0E5F  1978               	btfsc	_LightsControl,2
  7161  0E60  0008               	return
  7162                           
  7163                           ;TriacRelay_B1.c: 95: Lights->Trigger = 0;
  7164  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  7166  0E63  083C               	movf	_Lights,w
  7167  0E64  0084               	movwf	4
  7168  0E65  1783               	bsf	3,7	;select IRP bank2
  7169  0E66  1180               	bcf	0,3
  7170                           
  7171                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  7172  0E67  083C               	movf	_Lights,w
  7173  0E68  0084               	movwf	4
  7174  0E69  1E00               	btfss	0,4
  7175  0E6A  2E71               	goto	l4582
  7176                           
  7177                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  7178  0E6B  01DD               	clrf	setLights@status
  7179  0E6C  0ADD               	incf	setLights@status,f
  7180  0E6D  0868               	movf	setLights_Main@lights,w
  7181  0E6E  118A  26ED         	fcall	_setLights
  7182                           
  7183                           ;TriacRelay_B1.c: 99: } else {
  7184  0E70  0008               	return
  7185  0E71                     l4582:	
  7186                           
  7187                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  7188  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  7190  0E73  01DD               	clrf	setLights@status
  7191  0E74  0868               	movf	setLights_Main@lights,w
  7192  0E75  118A  26ED         	fcall	_setLights
  7193  0E77  0008               	return
  7194  0E78                     __end_of_setLights_Main:	
  7195                           
  7196                           	psect	text41
  7197  06ED                     __ptext41:	
  7198 ;; *************** function _setLights *****************
  7199 ;; Defined at:
  7200 ;;		line 108 in file "../src/TriacRelay_B1.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  lights          1    wreg     unsigned char 
  7203 ;;  status          1    8[BANK0 ] unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  lights          1   13[BANK0 ] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;		None               void
  7208 ;; Registers used:
  7209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7215 ;;      Params:         0       1       0       0
  7216 ;;      Locals:         0       3       0       0
  7217 ;;      Temps:          0       2       0       0
  7218 ;;      Totals:         0       6       0       0
  7219 ;;Total ram usage:        6 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    4
  7222 ;; This function calls:
  7223 ;;		_LightsPointSelect
  7224 ;;		_getMain_All_Error_Status
  7225 ;;		_setLights_Line
  7226 ;; This function is called by:
  7227 ;;		_setLights_Main
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _setLights
  7233  06ED                     _setLights:	
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7237                           ;setLights@lights stored from wreg
  7238  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  7239  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  7240  06EF  00E2               	movwf	setLights@lights
  7241                           
  7242                           ;TriacRelay_B1.c: 110: LightsPointSelect(lights);
  7243  06F0  0862               	movf	setLights@lights,w
  7244  06F1  158A  2343  118A   	fcall	_LightsPointSelect
  7245                           
  7246                           ;TriacRelay_B1.c: 112: LightsControl.LoadOK = getMain_All_Error_Status(0) == 0 ? 1 : 0;
  7247  06F4  3000               	movlw	0
  7248  06F5  158A  2678  118A   	fcall	_getMain_All_Error_Status
  7249  06F8  3A00               	xorlw	0
  7250  06F9  3000               	movlw	0
  7251  06FA  1903               	skipnz
  7252  06FB  3001               	movlw	1
  7253  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  7254  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  7255  06FE  00DE               	movwf	??_setLights
  7256  06FF  0DDE               	rlf	??_setLights,f
  7257  0700  0DDE               	rlf	??_setLights,f
  7258  0701  0878               	movf	_LightsControl,w
  7259  0702  065E               	xorwf	??_setLights,w
  7260  0703  39FB               	andlw	-5
  7261  0704  065E               	xorwf	??_setLights,w
  7262  0705  00F8               	movwf	_LightsControl
  7263                           
  7264                           ;TriacRelay_B1.c: 113: LightsControl.LoadGO = status == 1 ? 1 : LightsControl.LoadGO;
  7265  0706  085D               	movf	setLights@status,w
  7266  0707  3A01               	xorlw	1
  7267  0708  1903               	skipnz
  7268  0709  2F12               	goto	l4286
  7269  070A  0C78               	rrf	_LightsControl,w
  7270  070B  3901               	andlw	1
  7271  070C  00DE               	movwf	??_setLights
  7272  070D  01DF               	clrf	??_setLights+1
  7273  070E  085E               	movf	??_setLights,w
  7274  070F  00E0               	movwf	_setLights$4866
  7275  0710  085F               	movf	??_setLights+1,w
  7276  0711  2F15               	goto	L19
  7277  0712                     l4286:	
  7278  0712  3001               	movlw	1
  7279  0713  00E0               	movwf	_setLights$4866
  7280  0714  3000               	movlw	0
  7281  0715                     L19:	
  7282  0715  00E1               	movwf	_setLights$4866+1
  7283  0716  0860               	movf	_setLights$4866,w
  7284  0717  10F8               	bcf	_LightsControl,1
  7285  0718  1D03               	skipz
  7286  0719  14F8               	bsf	_LightsControl,1
  7287                           
  7288                           ;TriacRelay_B1.c: 115: Lights->GO = 1;
  7289  071A  083C               	movf	_Lights,w
  7290  071B  0084               	movwf	4
  7291  071C  1783               	bsf	3,7	;select IRP bank2
  7292  071D  1480               	bsf	0,1
  7293                           
  7294                           ;TriacRelay_B1.c: 116: if (status == 1) {
  7295  071E  085D               	movf	setLights@status,w
  7296  071F  3A01               	xorlw	1
  7297  0720  1D03               	skipz
  7298  0721  2F3C               	goto	l4298
  7299                           
  7300                           ;TriacRelay_B1.c: 117: if (Lights->Status == 0) {
  7301  0722  083C               	movf	_Lights,w
  7302  0723  0084               	movwf	4
  7303  0724  1900               	btfsc	0,2
  7304  0725  2F54               	goto	l4302
  7305                           
  7306                           ;TriacRelay_B1.c: 118: Lights->Status = 1;
  7307  0726  083C               	movf	_Lights,w
  7308  0727  0084               	movwf	4
  7309  0728  1500               	bsf	0,2
  7310                           
  7311                           ;TriacRelay_B1.c: 119: Lights->RelayValue = 10;
  7312  0729  300A               	movlw	10
  7313  072A  00DE               	movwf	??_setLights
  7314  072B  083C               	movf	_Lights,w
  7315  072C  3E06               	addlw	6
  7316  072D  0084               	movwf	4
  7317  072E  085E               	movf	??_setLights,w
  7318  072F  0080               	movwf	0
  7319                           
  7320                           ;TriacRelay_B1.c: 120: Lights->TriacValue = 13;
  7321  0730  300D               	movlw	13
  7322  0731  00DE               	movwf	??_setLights
  7323  0732  083C               	movf	_Lights,w
  7324  0733  3E04               	addlw	4
  7325  0734  0084               	movwf	4
  7326  0735  085E               	movf	??_setLights,w
  7327  0736  0080               	movwf	0
  7328                           
  7329                           ;TriacRelay_B1.c: 121: setLights_Line(lights);
  7330  0737  0862               	movf	setLights@lights,w
  7331  0738  158A  235D  118A   	fcall	_setLights_Line
  7332                           
  7333                           ;TriacRelay_B1.c: 122: }
  7334                           ;TriacRelay_B1.c: 123: } else {
  7335  073B  2F54               	goto	l4302
  7336  073C                     l4298:	
  7337                           
  7338                           ;TriacRelay_B1.c: 124: if (Lights->Status == 1) {
  7339  073C  1283               	bcf	3,5	;RP0=0, select bank0
  7340  073D  1303               	bcf	3,6	;RP1=0, select bank0
  7341  073E  083C               	movf	_Lights,w
  7342  073F  0084               	movwf	4
  7343  0740  1783               	bsf	3,7	;select IRP bank2
  7344  0741  1D00               	btfss	0,2
  7345  0742  2F54               	goto	l4302
  7346                           
  7347                           ;TriacRelay_B1.c: 125: Lights->Status = 0;
  7348  0743  083C               	movf	_Lights,w
  7349  0744  0084               	movwf	4
  7350  0745  1100               	bcf	0,2
  7351                           
  7352                           ;TriacRelay_B1.c: 126: Lights->RelayValue = 4;
  7353  0746  3004               	movlw	4
  7354  0747  00DE               	movwf	??_setLights
  7355  0748  083C               	movf	_Lights,w
  7356  0749  3E06               	addlw	6
  7357  074A  0084               	movwf	4
  7358  074B  085E               	movf	??_setLights,w
  7359  074C  0080               	movwf	0
  7360                           
  7361                           ;TriacRelay_B1.c: 127: Lights->TriacValue = 7;
  7362  074D  3007               	movlw	7
  7363  074E  00DE               	movwf	??_setLights
  7364  074F  083C               	movf	_Lights,w
  7365  0750  3E04               	addlw	4
  7366  0751  0084               	movwf	4
  7367  0752  085E               	movf	??_setLights,w
  7368  0753  0080               	movwf	0
  7369  0754                     l4302:	
  7370                           
  7371                           ;TriacRelay_B1.c: 128: }
  7372                           ;TriacRelay_B1.c: 129: }
  7373                           ;TriacRelay_B1.c: 131: if (lights == 1) {
  7374  0754  1283               	bcf	3,5	;RP0=0, select bank0
  7375  0755  1303               	bcf	3,6	;RP1=0, select bank0
  7376  0756  0862               	movf	setLights@lights,w
  7377  0757  3A01               	xorlw	1
  7378  0758  1D03               	skipz
  7379  0759  0008               	return
  7380                           
  7381                           ;TriacRelay_B1.c: 132: RB2 = 1;
  7382  075A  1506               	bsf	6,2	;volatile
  7383  075B  0008               	return
  7384  075C                     __end_of_setLights:	
  7385                           
  7386                           	psect	text42
  7387  0B5D                     __ptext42:	
  7388 ;; *************** function _setLights_Line *****************
  7389 ;; Defined at:
  7390 ;;		line 214 in file "../src/TriacRelay_B1.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  lights          1    wreg     unsigned char 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  lights          1    6[COMMON] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;		None               void
  7397 ;; Registers used:
  7398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7404 ;;      Params:         0       0       0       0
  7405 ;;      Locals:         1       0       0       0
  7406 ;;      Temps:          0       0       0       0
  7407 ;;      Totals:         1       0       0       0
  7408 ;;Total ram usage:        1 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    3
  7411 ;; This function calls:
  7412 ;;		_LightsPointSelect
  7413 ;; This function is called by:
  7414 ;;		_setLights
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           
  7419                           ;psect for function _setLights_Line
  7420  0B5D                     _setLights_Line:	
  7421                           
  7422                           ;incstack = 0
  7423                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7424                           ;setLights_Line@lights stored from wreg
  7425  0B5D  00F6               	movwf	setLights_Line@lights
  7426                           
  7427                           ;TriacRelay_B1.c: 216: Lights1.Line = 0;
  7428  0B5E  1283               	bcf	3,5	;RP0=0, select bank2
  7429  0B5F  1703               	bsf	3,6	;RP1=1, select bank2
  7430  0B60  1021               	bcf	(_Lights1^(0+256)+1),0
  7431                           
  7432                           ;TriacRelay_B1.c: 224: LightsPointSelect(lights);
  7433  0B61  0876               	movf	setLights_Line@lights,w
  7434  0B62  158A  2343         	fcall	_LightsPointSelect
  7435                           
  7436                           ;TriacRelay_B1.c: 225: Lights->Line = 1;
  7437  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  7438  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  7439  0B66  0A3C               	incf	_Lights,w
  7440  0B67  0084               	movwf	4
  7441  0B68  1783               	bsf	3,7	;select IRP bank2
  7442  0B69  1400               	bsf	0,0
  7443  0B6A  0008               	return
  7444  0B6B                     __end_of_setLights_Line:	
  7445                           
  7446                           	psect	text43
  7447  0E78                     __ptext43:	
  7448 ;; *************** function _getMain_All_Error_Status *****************
  7449 ;; Defined at:
  7450 ;;		line 482 in file "../src/Main_B1.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  command         1    wreg     unsigned char 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  command         1    6[BANK0 ] unsigned char 
  7455 ;;  status          1    7[BANK0 ] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      unsigned char 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7465 ;;      Params:         0       0       0       0
  7466 ;;      Locals:         0       8       0       0
  7467 ;;      Temps:          1       0       0       0
  7468 ;;      Totals:         1       8       0       0
  7469 ;;Total ram usage:        9 bytes
  7470 ;; Hardware stack levels used:    1
  7471 ;; Hardware stack levels required when called:    3
  7472 ;; This function calls:
  7473 ;;		_getCDS_Status
  7474 ;; This function is called by:
  7475 ;;		_Load_Main
  7476 ;;		_setTemp_Main
  7477 ;;		_PIR_Main
  7478 ;;		_setSYSC_Main
  7479 ;;		_setLights_Main
  7480 ;;		_setLights
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function _getMain_All_Error_Status
  7486  0E78                     _getMain_All_Error_Status:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  7490                           ;getMain_All_Error_Status@command stored from wreg
  7491  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  7492  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  7493  0E7A  00DB               	movwf	getMain_All_Error_Status@command
  7494                           
  7495                           ;Main_B1.c: 483: char status = 0;
  7496  0E7B  01DC               	clrf	getMain_All_Error_Status@status
  7497                           
  7498                           ;Main_B1.c: 486: if (status == 0 && command != 1) {
  7499  0E7C  08DC               	movf	getMain_All_Error_Status@status,f
  7500  0E7D  1D03               	skipz
  7501  0E7E  2E87               	goto	l2946
  7502  0E7F  085B               	movf	getMain_All_Error_Status@command,w
  7503  0E80  3A01               	xorlw	1
  7504  0E81  1903               	skipnz
  7505  0E82  2E87               	goto	l2946
  7506                           
  7507                           ;Main_B1.c: 487: status = SYSC.ERROR == 1 ? 1 : 0;
  7508  0E83  3000               	movlw	0
  7509  0E84  18A9               	btfsc	_SYSC,1
  7510  0E85  3001               	movlw	1
  7511  0E86  00DC               	movwf	getMain_All_Error_Status@status
  7512  0E87                     l2946:	
  7513                           
  7514                           ;Main_B1.c: 488: }
  7515                           ;Main_B1.c: 494: if (status == 0 && command != 2) {
  7516  0E87  08DC               	movf	getMain_All_Error_Status@status,f
  7517  0E88  1D03               	skipz
  7518  0E89  2E9B               	goto	l2956
  7519  0E8A  085B               	movf	getMain_All_Error_Status@command,w
  7520  0E8B  3A02               	xorlw	2
  7521  0E8C  1903               	skipnz
  7522  0E8D  2E9B               	goto	l2956
  7523                           
  7524                           ;Main_B1.c: 495: status = Temp.ERROR == 1 ? 2 : 0;
  7525  0E8E  18BD               	btfsc	_Temp,1
  7526  0E8F  2E93               	goto	l2954
  7527  0E90  01D5               	clrf	_getMain_All_Error_Status$2475
  7528  0E91  01D6               	clrf	_getMain_All_Error_Status$2475+1
  7529  0E92  2E97               	goto	l618
  7530  0E93                     l2954:	
  7531  0E93  3002               	movlw	2
  7532  0E94  00D5               	movwf	_getMain_All_Error_Status$2475
  7533  0E95  3000               	movlw	0
  7534  0E96  00D6               	movwf	_getMain_All_Error_Status$2475+1
  7535  0E97                     l618:	
  7536  0E97  0855               	movf	_getMain_All_Error_Status$2475,w
  7537  0E98  00F5               	movwf	??_getMain_All_Error_Status
  7538  0E99  0875               	movf	??_getMain_All_Error_Status,w
  7539  0E9A  00DC               	movwf	getMain_All_Error_Status@status
  7540  0E9B                     l2956:	
  7541                           
  7542                           ;Main_B1.c: 496: }
  7543                           ;Main_B1.c: 501: if (status == 0 && command != 3) {
  7544  0E9B  08DC               	movf	getMain_All_Error_Status@status,f
  7545  0E9C  1D03               	skipz
  7546  0E9D  2EB4               	goto	l2966
  7547  0E9E  085B               	movf	getMain_All_Error_Status@command,w
  7548  0E9F  3A03               	xorlw	3
  7549  0EA0  1903               	skipnz
  7550  0EA1  2EB4               	goto	l2966
  7551                           
  7552                           ;Main_B1.c: 502: status = Load.ERROR == 1 ? 3 : 0;
  7553  0EA2  1683               	bsf	3,5	;RP0=1, select bank1
  7554  0EA3  1303               	bcf	3,6	;RP1=0, select bank1
  7555  0EA4  1ACF               	btfsc	_Load^(0+128),5
  7556  0EA5  2EAB               	goto	l2964
  7557  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  7558  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  7559  0EA8  01D7               	clrf	_getMain_All_Error_Status$2484
  7560  0EA9  01D8               	clrf	_getMain_All_Error_Status$2484+1
  7561  0EAA  2EB0               	goto	l623
  7562  0EAB                     l2964:	
  7563  0EAB  3003               	movlw	3
  7564  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  7565  0EAD  00D7               	movwf	_getMain_All_Error_Status$2484
  7566  0EAE  3000               	movlw	0
  7567  0EAF  00D8               	movwf	_getMain_All_Error_Status$2484+1
  7568  0EB0                     l623:	
  7569  0EB0  0857               	movf	_getMain_All_Error_Status$2484,w
  7570  0EB1  00F5               	movwf	??_getMain_All_Error_Status
  7571  0EB2  0875               	movf	??_getMain_All_Error_Status,w
  7572  0EB3  00DC               	movwf	getMain_All_Error_Status@status
  7573  0EB4                     l2966:	
  7574                           
  7575                           ;Main_B1.c: 503: }
  7576                           ;Main_B1.c: 515: if (status == 0 && command != 5) {
  7577  0EB4  08DC               	movf	getMain_All_Error_Status@status,f
  7578  0EB5  1D03               	skipz
  7579  0EB6  2ED0               	goto	l624
  7580  0EB7  085B               	movf	getMain_All_Error_Status@command,w
  7581  0EB8  3A05               	xorlw	5
  7582  0EB9  1903               	skipnz
  7583  0EBA  2ED0               	goto	l624
  7584                           
  7585                           ;Main_B1.c: 516: status = getCDS_Status() == 0 ? 5 : 0;
  7586  0EBB  158A  231C  158A   	fcall	_getCDS_Status
  7587  0EBE  3A00               	xorlw	0
  7588  0EBF  1903               	skipnz
  7589  0EC0  2EC6               	goto	l2974
  7590  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  7592  0EC3  01D9               	clrf	_getMain_All_Error_Status$2486
  7593  0EC4  01DA               	clrf	_getMain_All_Error_Status$2486+1
  7594  0EC5  2ECC               	goto	l628
  7595  0EC6                     l2974:	
  7596  0EC6  3005               	movlw	5
  7597  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  7598  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  7599  0EC9  00D9               	movwf	_getMain_All_Error_Status$2486
  7600  0ECA  3000               	movlw	0
  7601  0ECB  00DA               	movwf	_getMain_All_Error_Status$2486+1
  7602  0ECC                     l628:	
  7603  0ECC  0859               	movf	_getMain_All_Error_Status$2486,w
  7604  0ECD  00F5               	movwf	??_getMain_All_Error_Status
  7605  0ECE  0875               	movf	??_getMain_All_Error_Status,w
  7606  0ECF  00DC               	movwf	getMain_All_Error_Status@status
  7607  0ED0                     l624:	
  7608                           
  7609                           ;Main_B1.c: 517: }
  7610                           ;Main_B1.c: 519: return status;
  7611  0ED0  085C               	movf	getMain_All_Error_Status@status,w
  7612  0ED1  0008               	return
  7613  0ED2                     __end_of_getMain_All_Error_Status:	
  7614                           
  7615                           	psect	text44
  7616  0B1C                     __ptext44:	
  7617 ;; *************** function _getCDS_Status *****************
  7618 ;; Defined at:
  7619 ;;		line 40 in file "../src/CDS_B1.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;		None
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  status          1    4[COMMON] unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  1    wreg      unsigned char 
  7626 ;; Registers used:
  7627 ;;		wreg, status,2
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7633 ;;      Params:         0       0       0       0
  7634 ;;      Locals:         1       0       0       0
  7635 ;;      Temps:          0       0       0       0
  7636 ;;      Totals:         1       0       0       0
  7637 ;;Total ram usage:        1 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    2
  7640 ;; This function calls:
  7641 ;;		Nothing
  7642 ;; This function is called by:
  7643 ;;		_getMain_All_Error_Status
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           
  7648                           ;psect for function _getCDS_Status
  7649  0B1C                     _getCDS_Status:	
  7650                           
  7651                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in _getCDS_Status: [wreg+status,2]
  7655  0B1C  3000               	movlw	0
  7656  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  7657  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
  7658  0B1F  1A2E               	btfsc	__CDS,4
  7659  0B20  3001               	movlw	1
  7660  0B21  00F4               	movwf	getCDS_Status@status
  7661                           
  7662                           ;CDS_B1.c: 42: return status;
  7663  0B22  0874               	movf	getCDS_Status@status,w
  7664  0B23  0008               	return
  7665  0B24                     __end_of_getCDS_Status:	
  7666                           
  7667                           	psect	text45
  7668  0B14                     __ptext45:	
  7669 ;; *************** function _getLoad_OK *****************
  7670 ;; Defined at:
  7671 ;;		line 204 in file "../src/OverLoad_B1.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;		None
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  ok              1    4[COMMON] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  1    wreg      unsigned char 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7685 ;;      Params:         0       0       0       0
  7686 ;;      Locals:         1       0       0       0
  7687 ;;      Temps:          0       0       0       0
  7688 ;;      Totals:         1       0       0       0
  7689 ;;Total ram usage:        1 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    2
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_setLights_Main
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function _getLoad_OK
  7701  0B14                     _getLoad_OK:	
  7702                           
  7703                           ;OverLoad_B1.c: 205: char ok = Load.OK == 1 ? 1 : 0;
  7704                           
  7705                           ;incstack = 0
  7706                           ; Regs used in _getLoad_OK: [wreg+status,2]
  7707  0B14  3000               	movlw	0
  7708  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  7709  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  7710  0B17  1BCF               	btfsc	_Load^(0+128),7
  7711  0B18  3001               	movlw	1
  7712  0B19  00F4               	movwf	getLoad_OK@ok
  7713                           
  7714                           ;OverLoad_B1.c: 207: return ok;
  7715  0B1A  0874               	movf	getLoad_OK@ok,w
  7716  0B1B  0008               	return
  7717  0B1C                     __end_of_getLoad_OK:	
  7718                           
  7719                           	psect	text46
  7720  0F93                     __ptext46:	
  7721 ;; *************** function _Lights_Control *****************
  7722 ;; Defined at:
  7723 ;;		line 148 in file "../src/TriacRelay_B1.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  lights          1    wreg     unsigned char 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  lights          1    4[BANK0 ] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;		None               void
  7730 ;; Registers used:
  7731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7737 ;;      Params:         0       0       0       0
  7738 ;;      Locals:         0       3       0       0
  7739 ;;      Temps:          0       2       0       0
  7740 ;;      Totals:         0       5       0       0
  7741 ;;Total ram usage:        5 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    3
  7744 ;; This function calls:
  7745 ;;		_LightsPointSelect
  7746 ;; This function is called by:
  7747 ;;		_Lights_Main
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _Lights_Control
  7753  0F93                     _Lights_Control:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7757                           ;Lights_Control@lights stored from wreg
  7758  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  7759  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  7760  0F95  00D9               	movwf	Lights_Control@lights
  7761                           
  7762                           ;TriacRelay_B1.c: 149: LightsPointSelect(lights);
  7763  0F96  0859               	movf	Lights_Control@lights,w
  7764  0F97  158A  2343  158A   	fcall	_LightsPointSelect
  7765                           
  7766                           ;TriacRelay_B1.c: 150: if (Lights->GO == 1) {
  7767  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  7768  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  7769  0F9C  083C               	movf	_Lights,w
  7770  0F9D  0084               	movwf	4
  7771  0F9E  1783               	bsf	3,7	;select IRP bank2
  7772  0F9F  1C80               	btfss	0,1
  7773  0FA0  0008               	return
  7774                           
  7775                           ;TriacRelay_B1.c: 151: Lights->Time++;
  7776  0FA1  3001               	movlw	1
  7777  0FA2  00D5               	movwf	??_Lights_Control
  7778  0FA3  083C               	movf	_Lights,w
  7779  0FA4  3E02               	addlw	2
  7780  0FA5  0084               	movwf	4
  7781  0FA6  0855               	movf	??_Lights_Control,w
  7782  0FA7  0780               	addwf	0,f
  7783                           
  7784                           ;TriacRelay_B1.c: 152: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  7785  0FA8  083C               	movf	_Lights,w
  7786  0FA9  3E06               	addlw	6
  7787  0FAA  0084               	movwf	4
  7788  0FAB  0800               	movf	0,w
  7789  0FAC  00D5               	movwf	??_Lights_Control
  7790  0FAD  083C               	movf	_Lights,w
  7791  0FAE  3E02               	addlw	2
  7792  0FAF  0084               	movwf	4
  7793  0FB0  0800               	movf	0,w
  7794  0FB1  00D6               	movwf	??_Lights_Control+1
  7795  0FB2  0855               	movf	??_Lights_Control,w
  7796  0FB3  0256               	subwf	??_Lights_Control+1,w
  7797  0FB4  1C03               	skipc
  7798  0FB5  2FCD               	goto	l4600
  7799  0FB6  083C               	movf	_Lights,w
  7800  0FB7  0084               	movwf	4
  7801  0FB8  1B80               	btfsc	0,7
  7802  0FB9  2FCD               	goto	l4600
  7803                           
  7804                           ;TriacRelay_B1.c: 153: Lights->RelaySet = 1;
  7805  0FBA  083C               	movf	_Lights,w
  7806  0FBB  0084               	movwf	4
  7807  0FBC  1780               	bsf	0,7
  7808                           
  7809                           ;TriacRelay_B1.c: 155: if (lights == 1) {
  7810  0FBD  0859               	movf	Lights_Control@lights,w
  7811  0FBE  3A01               	xorlw	1
  7812  0FBF  1D03               	skipz
  7813  0FC0  0008               	return
  7814                           
  7815                           ;TriacRelay_B1.c: 156: RA4 = Lights->Status == 1 ? 1 : 0;
  7816  0FC1  083C               	movf	_Lights,w
  7817  0FC2  0084               	movwf	4
  7818  0FC3  1D00               	btfss	0,2
  7819  0FC4  2FC9               	goto	u5260
  7820  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  7821  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  7822  0FC7  1605               	bsf	5,4	;volatile
  7823  0FC8  0008               	return
  7824  0FC9                     u5260:	
  7825  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  7826  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  7827  0FCB  1205               	bcf	5,4	;volatile
  7828                           
  7829                           ;TriacRelay_B1.c: 157: }
  7830                           ;TriacRelay_B1.c: 170: } else if (Lights->Time >= Lights->TriacValue) {
  7831  0FCC  0008               	return
  7832  0FCD                     l4600:	
  7833  0FCD  083C               	movf	_Lights,w
  7834  0FCE  3E04               	addlw	4
  7835  0FCF  0084               	movwf	4
  7836  0FD0  1783               	bsf	3,7	;select IRP bank2
  7837  0FD1  0800               	movf	0,w
  7838  0FD2  00D5               	movwf	??_Lights_Control
  7839  0FD3  083C               	movf	_Lights,w
  7840  0FD4  3E02               	addlw	2
  7841  0FD5  0084               	movwf	4
  7842  0FD6  0800               	movf	0,w
  7843  0FD7  00D6               	movwf	??_Lights_Control+1
  7844  0FD8  0855               	movf	??_Lights_Control,w
  7845  0FD9  0256               	subwf	??_Lights_Control+1,w
  7846  0FDA  1C03               	skipc
  7847  0FDB  0008               	return
  7848                           
  7849                           ;TriacRelay_B1.c: 171: Lights->Time = 0;
  7850  0FDC  083C               	movf	_Lights,w
  7851  0FDD  3E02               	addlw	2
  7852  0FDE  0084               	movwf	4
  7853  0FDF  0180               	clrf	0
  7854                           
  7855                           ;TriacRelay_B1.c: 172: Lights->GO = 0;
  7856  0FE0  083C               	movf	_Lights,w
  7857  0FE1  0084               	movwf	4
  7858  0FE2  1080               	bcf	0,1
  7859                           
  7860                           ;TriacRelay_B1.c: 173: Lights->RelaySet = 0;
  7861  0FE3  083C               	movf	_Lights,w
  7862  0FE4  0084               	movwf	4
  7863  0FE5  1380               	bcf	0,7
  7864                           
  7865                           ;TriacRelay_B1.c: 176: LightsControl.Detect = Lights->Status == 0 ? 1 : LightsControl.De
      +                          tect;
  7866  0FE6  083C               	movf	_Lights,w
  7867  0FE7  0084               	movwf	4
  7868  0FE8  1D00               	btfss	0,2
  7869  0FE9  2FF2               	goto	l4612
  7870  0FEA  0878               	movf	_LightsControl,w
  7871  0FEB  3901               	andlw	1
  7872  0FEC  00D5               	movwf	??_Lights_Control
  7873  0FED  01D6               	clrf	??_Lights_Control+1
  7874  0FEE  0855               	movf	??_Lights_Control,w
  7875  0FEF  00D7               	movwf	_Lights_Control$4869
  7876  0FF0  0856               	movf	??_Lights_Control+1,w
  7877  0FF1  2FF5               	goto	L20
  7878  0FF2                     l4612:	
  7879  0FF2  3001               	movlw	1
  7880  0FF3  00D7               	movwf	_Lights_Control$4869
  7881  0FF4  3000               	movlw	0
  7882  0FF5                     L20:	
  7883  0FF5  00D8               	movwf	_Lights_Control$4869+1
  7884  0FF6  0857               	movf	_Lights_Control$4869,w
  7885  0FF7  1078               	bcf	_LightsControl,0
  7886  0FF8  1D03               	skipz
  7887  0FF9  1478               	bsf	_LightsControl,0
  7888                           
  7889                           ;TriacRelay_B1.c: 180: if (lights == 1) {
  7890  0FFA  0859               	movf	Lights_Control@lights,w
  7891  0FFB  3A01               	xorlw	1
  7892  0FFC  1D03               	skipz
  7893  0FFD  0008               	return
  7894                           
  7895                           ;TriacRelay_B1.c: 181: RB2 = 0;
  7896  0FFE  1106               	bcf	6,2	;volatile
  7897  0FFF  0008               	return
  7898  1000                     __end_of_Lights_Control:	
  7899                           
  7900                           	psect	text47
  7901  0C0A                     __ptext47:	
  7902 ;; *************** function _Lights_Close *****************
  7903 ;; Defined at:
  7904 ;;		line 74 in file "../src/TriacRelay_B1.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;		None               void
  7911 ;; Registers used:
  7912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7918 ;;      Params:         0       0       0       0
  7919 ;;      Locals:         0       0       0       0
  7920 ;;      Temps:          0       1       0       0
  7921 ;;      Totals:         0       1       0       0
  7922 ;;Total ram usage:        1 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    5
  7925 ;; This function calls:
  7926 ;;		_getMain_LightsStatus
  7927 ;; This function is called by:
  7928 ;;		_Lights_Main
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _Lights_Close
  7934  0C0A                     _Lights_Close:	
  7935                           
  7936                           ;TriacRelay_B1.c: 75: if (LightsControl.Detect == 1) {
  7937                           
  7938                           ;incstack = 0
  7939                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7940  0C0A  1C78               	btfss	_LightsControl,0
  7941  0C0B  0008               	return
  7942                           
  7943                           ;TriacRelay_B1.c: 76: LightsControl.Detect = 0;
  7944  0C0C  1078               	bcf	_LightsControl,0
  7945                           
  7946                           ;TriacRelay_B1.c: 77: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  7947  0C0D  158A  241D         	fcall	_getMain_LightsStatus
  7948  0C0F  3800               	iorlw	0
  7949  0C10  3000               	movlw	0
  7950  0C11  1D03               	skipz
  7951  0C12  3001               	movlw	1
  7952  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  7953  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  7954  0C15  00D8               	movwf	??_Lights_Close
  7955  0C16  0DD8               	rlf	??_Lights_Close,f
  7956  0C17  0878               	movf	_LightsControl,w
  7957  0C18  0658               	xorwf	??_Lights_Close,w
  7958  0C19  39FD               	andlw	-3
  7959  0C1A  0658               	xorwf	??_Lights_Close,w
  7960  0C1B  00F8               	movwf	_LightsControl
  7961  0C1C  0008               	return
  7962  0C1D                     __end_of_Lights_Close:	
  7963                           
  7964                           	psect	text48
  7965  0C1D                     __ptext48:	
  7966 ;; *************** function _getMain_LightsStatus *****************
  7967 ;; Defined at:
  7968 ;;		line 442 in file "../src/Main_B1.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  status          1    2[BANK0 ] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      unsigned char 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7982 ;;      Params:         0       0       0       0
  7983 ;;      Locals:         0       1       0       0
  7984 ;;      Temps:          1       0       0       0
  7985 ;;      Totals:         1       1       0       0
  7986 ;;Total ram usage:        2 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    4
  7989 ;; This function calls:
  7990 ;;		_getLights_Status
  7991 ;; This function is called by:
  7992 ;;		_setTemp_Main
  7993 ;;		_Lights_Close
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _getMain_LightsStatus
  7999  0C1D                     _getMain_LightsStatus:	
  8000                           
  8001                           ;Main_B1.c: 443: char status = 0;
  8002                           
  8003                           ;incstack = 0
  8004                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8005  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  8006  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  8007  0C1F  01D7               	clrf	getMain_LightsStatus@status
  8008                           
  8009                           ;Main_B1.c: 446: if (status == 0) {
  8010  0C20  08D7               	movf	getMain_LightsStatus@status,f
  8011  0C21  1D03               	skipz
  8012  0C22  2C2F               	goto	l4276
  8013                           
  8014                           ;Main_B1.c: 448: status = getLights_Status(1) == 1 ? 1 : 0;
  8015  0C23  3001               	movlw	1
  8016  0C24  158A  23C4         	fcall	_getLights_Status
  8017  0C26  3A01               	xorlw	1
  8018  0C27  3000               	movlw	0
  8019  0C28  1903               	skipnz
  8020  0C29  3001               	movlw	1
  8021  0C2A  00F6               	movwf	??_getMain_LightsStatus
  8022  0C2B  0876               	movf	??_getMain_LightsStatus,w
  8023  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  8024  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  8025  0C2E  00D7               	movwf	getMain_LightsStatus@status
  8026  0C2F                     l4276:	
  8027                           
  8028                           ;Main_B1.c: 453: }
  8029                           ;Main_B1.c: 478: return status;
  8030  0C2F  0857               	movf	getMain_LightsStatus@status,w
  8031  0C30  0008               	return
  8032  0C31                     __end_of_getMain_LightsStatus:	
  8033                           
  8034                           	psect	text49
  8035  0BC4                     __ptext49:	
  8036 ;; *************** function _getLights_Status *****************
  8037 ;; Defined at:
  8038 ;;		line 200 in file "../src/TriacRelay_B1.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  lights          1    wreg     unsigned char 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  lights          1    0[BANK0 ] unsigned char 
  8043 ;;  status          1    1[BANK0 ] unsigned char 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      unsigned char 
  8046 ;; Registers used:
  8047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8053 ;;      Params:         0       0       0       0
  8054 ;;      Locals:         0       2       0       0
  8055 ;;      Temps:          0       0       0       0
  8056 ;;      Totals:         0       2       0       0
  8057 ;;Total ram usage:        2 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    3
  8060 ;; This function calls:
  8061 ;;		_LightsPointSelect
  8062 ;; This function is called by:
  8063 ;;		_getMain_LightsStatus
  8064 ;;		_PIR_Main
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           
  8069                           ;psect for function _getLights_Status
  8070  0BC4                     _getLights_Status:	
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8074                           ;getLights_Status@lights stored from wreg
  8075  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  8076  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  8077  0BC6  00D5               	movwf	getLights_Status@lights
  8078                           
  8079                           ;TriacRelay_B1.c: 201: LightsPointSelect(lights);
  8080  0BC7  0855               	movf	getLights_Status@lights,w
  8081  0BC8  158A  2343         	fcall	_LightsPointSelect
  8082                           
  8083                           ;TriacRelay_B1.c: 202: char status = Lights->Status == 1 ? 1 : 0;
  8084  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  8085  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  8086  0BCC  083C               	movf	_Lights,w
  8087  0BCD  0084               	movwf	4
  8088  0BCE  3000               	movlw	0
  8089  0BCF  1783               	bsf	3,7	;select IRP bank2
  8090  0BD0  1900               	btfsc	0,2
  8091  0BD1  3001               	movlw	1
  8092  0BD2  00D6               	movwf	getLights_Status@status
  8093                           
  8094                           ;TriacRelay_B1.c: 203: return status;
  8095  0BD3  0856               	movf	getLights_Status@status,w
  8096  0BD4  0008               	return
  8097  0BD5                     __end_of_getLights_Status:	
  8098                           
  8099                           	psect	text50
  8100  0AE3                     __ptext50:	
  8101 ;; *************** function _Lights_Initialization *****************
  8102 ;; Defined at:
  8103 ;;		line 34 in file "../src/TriacRelay_B1.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;		None               void
  8110 ;; Registers used:
  8111 ;;		wreg, status,2, status,0, pclath, cstack
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8117 ;;      Params:         0       0       0       0
  8118 ;;      Locals:         0       0       0       0
  8119 ;;      Temps:          0       0       0       0
  8120 ;;      Totals:         0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    4
  8124 ;; This function calls:
  8125 ;;		_setLights_Initialization
  8126 ;; This function is called by:
  8127 ;;		_main
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           
  8132                           ;psect for function _Lights_Initialization
  8133  0AE3                     _Lights_Initialization:	
  8134                           
  8135                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  8136                           
  8137                           ;incstack = 0
  8138                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  8139  0AE3  3001               	movlw	1
  8140  0AE4  158A  22EB         	fcall	_setLights_Initialization
  8141  0AE6  0008               	return
  8142  0AE7                     __end_of_Lights_Initialization:	
  8143                           
  8144                           	psect	text51
  8145  0AEB                     __ptext51:	
  8146 ;; *************** function _setLights_Initialization *****************
  8147 ;; Defined at:
  8148 ;;		line 49 in file "../src/TriacRelay_B1.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  lights          1    wreg     unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  lights          1    6[COMMON] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;		None               void
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, pclath, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8162 ;;      Params:         0       0       0       0
  8163 ;;      Locals:         1       0       0       0
  8164 ;;      Temps:          0       0       0       0
  8165 ;;      Totals:         1       0       0       0
  8166 ;;Total ram usage:        1 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:    3
  8169 ;; This function calls:
  8170 ;;		_LightsPointSelect
  8171 ;; This function is called by:
  8172 ;;		_Lights_Initialization
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           
  8177                           ;psect for function _setLights_Initialization
  8178  0AEB                     _setLights_Initialization:	
  8179                           
  8180                           ;incstack = 0
  8181                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  8182                           ;setLights_Initialization@lights stored from wreg
  8183  0AEB  00F6               	movwf	setLights_Initialization@lights
  8184                           
  8185                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  8186  0AEC  0876               	movf	setLights_Initialization@lights,w
  8187  0AED  158A  2343         	fcall	_LightsPointSelect
  8188  0AEF  0008               	return
  8189  0AF0                     __end_of_setLights_Initialization:	
  8190                           
  8191                           	psect	text52
  8192  0B43                     __ptext52:	
  8193 ;; *************** function _LightsPointSelect *****************
  8194 ;; Defined at:
  8195 ;;		line 10 in file "../src/TriacRelay_B1.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  lights          1    wreg     unsigned char 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  lights          1    5[COMMON] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;		None               void
  8202 ;; Registers used:
  8203 ;;		wreg
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8209 ;;      Params:         0       0       0       0
  8210 ;;      Locals:         1       0       0       0
  8211 ;;      Temps:          1       0       0       0
  8212 ;;      Totals:         2       0       0       0
  8213 ;;Total ram usage:        2 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    2
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_setLights_Initialization
  8220 ;;		_setLights_Main
  8221 ;;		_setLights
  8222 ;;		_Lights_Control
  8223 ;;		_getLights_Status
  8224 ;;		_setLights_Trigger
  8225 ;;		_setLights_Line
  8226 ;;		_getAll_Lights_Line
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           
  8231                           ;psect for function _LightsPointSelect
  8232  0B43                     _LightsPointSelect:	
  8233                           
  8234                           ;incstack = 0
  8235                           ; Regs used in _LightsPointSelect: [wreg]
  8236                           ;LightsPointSelect@lights stored from wreg
  8237  0B43  00F5               	movwf	LightsPointSelect@lights
  8238                           
  8239                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  8240  0B44  0875               	movf	LightsPointSelect@lights,w
  8241  0B45  3A01               	xorlw	1
  8242  0B46  1D03               	skipz
  8243  0B47  0008               	return
  8244                           
  8245                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  8246  0B48  3020               	movlw	_Lights1& (0+255)
  8247  0B49  00F4               	movwf	??_LightsPointSelect
  8248  0B4A  0874               	movf	??_LightsPointSelect,w
  8249  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  8250  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  8251  0B4D  00BC               	movwf	_Lights
  8252  0B4E  0008               	return
  8253  0B4F                     __end_of_LightsPointSelect:	
  8254                           
  8255                           	psect	text53
  8256  0B87                     __ptext53:	
  8257 ;; *************** function _LED_Main *****************
  8258 ;; Defined at:
  8259 ;;		line 47 in file "../src/LED_B1.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;		None               void
  8266 ;; Registers used:
  8267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8273 ;;      Params:         0       0       0       0
  8274 ;;      Locals:         0       0       0       0
  8275 ;;      Temps:          0       0       0       0
  8276 ;;      Totals:         0       0       0       0
  8277 ;;Total ram usage:        0 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    5
  8280 ;; This function calls:
  8281 ;;		_setLED_Main
  8282 ;;		_setPIRLED_Main
  8283 ;; This function is called by:
  8284 ;;		_main
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           
  8289                           ;psect for function _LED_Main
  8290  0B87                     _LED_Main:	
  8291                           
  8292                           ;LED_B1.c: 49: setLED_Main(1);
  8293                           
  8294                           ;incstack = 0
  8295                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8296  0B87  3001               	movlw	1
  8297  0B88  158A  255C  158A   	fcall	_setLED_Main
  8298                           
  8299                           ;LED_B1.c: 52: setLED_Main(2);
  8300  0B8B  3002               	movlw	2
  8301  0B8C  158A  255C  158A   	fcall	_setLED_Main
  8302                           
  8303                           ;LED_B1.c: 58: setLED_Main(99);
  8304  0B8F  3063               	movlw	99
  8305  0B90  158A  255C  158A   	fcall	_setLED_Main
  8306                           
  8307                           ;LED_B1.c: 61: setPIRLED_Main();
  8308  0B93  118A  275C         	fcall	_setPIRLED_Main
  8309  0B95  0008               	return
  8310  0B96                     __end_of_LED_Main:	
  8311                           
  8312                           	psect	text54
  8313  075C                     __ptext54:	
  8314 ;; *************** function _setPIRLED_Main *****************
  8315 ;; Defined at:
  8316 ;;		line 247 in file "../src/LED_B1.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  count           1    2[BANK0 ] unsigned char 
  8321 ;; Return value:  Size  Location     Type
  8322 ;;		None               void
  8323 ;; Registers used:
  8324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8330 ;;      Params:         0       0       0       0
  8331 ;;      Locals:         0       1       0       0
  8332 ;;      Temps:          0       1       0       0
  8333 ;;      Totals:         0       2       0       0
  8334 ;;Total ram usage:        2 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    4
  8337 ;; This function calls:
  8338 ;;		_setLED
  8339 ;; This function is called by:
  8340 ;;		_LED_Main
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _setPIRLED_Main
  8346  075C                     _setPIRLED_Main:	
  8347                           
  8348                           ;LED_B1.c: 248: char count;
  8349                           ;LED_B1.c: 249: if (PIRLED.GO == 1) {
  8350                           
  8351                           ;incstack = 0
  8352                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8353  075C  1283               	bcf	3,5	;RP0=0, select bank0
  8354  075D  1303               	bcf	3,6	;RP1=0, select bank0
  8355  075E  1C33               	btfss	_PIRLED,0
  8356  075F  0008               	return
  8357                           
  8358                           ;LED_B1.c: 250: PIRLED.Time++;
  8359  0760  3001               	movlw	1
  8360  0761  07B5               	addwf	_PIRLED+2,f
  8361  0762  1803               	skipnc
  8362  0763  0AB6               	incf	_PIRLED+3,f
  8363  0764  3000               	movlw	0
  8364  0765  07B6               	addwf	_PIRLED+3,f
  8365                           
  8366                           ;LED_B1.c: 251: if (PIRLED.Time >= 500 / 10) {
  8367  0766  3000               	movlw	0
  8368  0767  0236               	subwf	_PIRLED+3,w
  8369  0768  3032               	movlw	50
  8370  0769  1903               	skipnz
  8371  076A  0235               	subwf	_PIRLED+2,w
  8372  076B  1C03               	skipc
  8373  076C  0008               	return
  8374                           
  8375                           ;LED_B1.c: 252: PIRLED.Time = 0;
  8376  076D  01B5               	clrf	_PIRLED+2
  8377  076E  01B6               	clrf	_PIRLED+3
  8378                           
  8379                           ;LED_B1.c: 253: setLED(1, 0);
  8380  076F  01F6               	clrf	setLED@command
  8381  0770  3001               	movlw	1
  8382  0771  118A  2570  118A   	fcall	_setLED
  8383                           
  8384                           ;LED_B1.c: 254: setLED(2, 0);
  8385  0774  01F6               	clrf	setLED@command
  8386  0775  3002               	movlw	2
  8387  0776  118A  2570  118A   	fcall	_setLED
  8388                           
  8389                           ;LED_B1.c: 255: if (PIRLED.GO1 == 1) {
  8390  0779  1283               	bcf	3,5	;RP0=0, select bank0
  8391  077A  1303               	bcf	3,6	;RP1=0, select bank0
  8392  077B  1CB3               	btfss	_PIRLED,1
  8393  077C  2F81               	goto	l4392
  8394                           
  8395                           ;LED_B1.c: 256: count = 4;
  8396  077D  3004               	movlw	4
  8397  077E  00D6               	movwf	??_setPIRLED_Main
  8398  077F  0856               	movf	??_setPIRLED_Main,w
  8399  0780  00D7               	movwf	setPIRLED_Main@count
  8400  0781                     l4392:	
  8401                           
  8402                           ;LED_B1.c: 257: }
  8403                           ;LED_B1.c: 258: if (PIRLED.GO2 == 1) {
  8404  0781  1D33               	btfss	_PIRLED,2
  8405  0782  2F87               	goto	l4396
  8406                           
  8407                           ;LED_B1.c: 259: count = 6;
  8408  0783  3006               	movlw	6
  8409  0784  00D6               	movwf	??_setPIRLED_Main
  8410  0785  0856               	movf	??_setPIRLED_Main,w
  8411  0786  00D7               	movwf	setPIRLED_Main@count
  8412  0787                     l4396:	
  8413                           
  8414                           ;LED_B1.c: 260: }
  8415                           ;LED_B1.c: 261: if (PIRLED.GO3 == 1) {
  8416  0787  1DB3               	btfss	_PIRLED,3
  8417  0788  2F8D               	goto	l4400
  8418                           
  8419                           ;LED_B1.c: 262: count = 8;
  8420  0789  3008               	movlw	8
  8421  078A  00D6               	movwf	??_setPIRLED_Main
  8422  078B  0856               	movf	??_setPIRLED_Main,w
  8423  078C  00D7               	movwf	setPIRLED_Main@count
  8424  078D                     l4400:	
  8425                           
  8426                           ;LED_B1.c: 263: }
  8427                           ;LED_B1.c: 264: PIRLED.Count++;
  8428  078D  3001               	movlw	1
  8429  078E  00D6               	movwf	??_setPIRLED_Main
  8430  078F  0856               	movf	??_setPIRLED_Main,w
  8431  0790  07B4               	addwf	_PIRLED+1,f
  8432                           
  8433                           ;LED_B1.c: 265: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  8434  0791  0834               	movf	_PIRLED+1,w
  8435  0792  3A01               	xorlw	1
  8436  0793  1903               	skipnz
  8437  0794  2F99               	goto	l4406
  8438  0795  0834               	movf	_PIRLED+1,w
  8439  0796  3A02               	xorlw	2
  8440  0797  1D03               	skipz
  8441  0798  2FAD               	goto	l4410
  8442  0799                     l4406:	
  8443                           
  8444                           ;LED_B1.c: 266: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  8445  0799  1003               	clrc
  8446  079A  1E33               	btfss	_PIRLED,4
  8447  079B  1403               	setc
  8448  079C  1C03               	btfss	3,0
  8449  079D  2FA2               	goto	u4890
  8450  079E  1283               	bcf	3,5	;RP0=0, select bank0
  8451  079F  1303               	bcf	3,6	;RP1=0, select bank0
  8452  07A0  1633               	bsf	_PIRLED,4
  8453  07A1  2FA5               	goto	l4408
  8454  07A2                     u4890:	
  8455  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  8456  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  8457  07A4  1233               	bcf	_PIRLED,4
  8458  07A5                     l4408:	
  8459                           
  8460                           ;LED_B1.c: 267: setLED(2, PIRLED.status);
  8461  07A5  3000               	movlw	0
  8462  07A6  1A33               	btfsc	_PIRLED,4
  8463  07A7  3001               	movlw	1
  8464  07A8  00F6               	movwf	setLED@command
  8465  07A9  3002               	movlw	2
  8466  07AA  118A  2570         	fcall	_setLED
  8467                           
  8468                           ;LED_B1.c: 268: } else {
  8469  07AC  0008               	return
  8470  07AD                     l4410:	
  8471                           
  8472                           ;LED_B1.c: 269: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  8473  07AD  1003               	clrc
  8474  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  8475  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  8476  07B0  1E33               	btfss	_PIRLED,4
  8477  07B1  1403               	setc
  8478  07B2  1C03               	btfss	3,0
  8479  07B3  2FB8               	goto	u4910
  8480  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  8481  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  8482  07B6  1633               	bsf	_PIRLED,4
  8483  07B7  2FBB               	goto	l4412
  8484  07B8                     u4910:	
  8485  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  8486  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  8487  07BA  1233               	bcf	_PIRLED,4
  8488  07BB                     l4412:	
  8489                           
  8490                           ;LED_B1.c: 270: setLED(1, PIRLED.status);
  8491  07BB  3000               	movlw	0
  8492  07BC  1A33               	btfsc	_PIRLED,4
  8493  07BD  3001               	movlw	1
  8494  07BE  00F6               	movwf	setLED@command
  8495  07BF  3001               	movlw	1
  8496  07C0  118A  2570  118A   	fcall	_setLED
  8497                           
  8498                           ;LED_B1.c: 271: if (PIRLED.Count == count) {
  8499  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  8500  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  8501  07C5  0834               	movf	_PIRLED+1,w
  8502  07C6  0657               	xorwf	setPIRLED_Main@count,w
  8503  07C7  1D03               	skipz
  8504  07C8  0008               	return
  8505                           
  8506                           ;LED_B1.c: 272: PIRLED.Count = 0;
  8507  07C9  01B4               	clrf	_PIRLED+1
  8508  07CA  0008               	return
  8509  07CB                     __end_of_setPIRLED_Main:	
  8510                           
  8511                           	psect	text55
  8512  0D5C                     __ptext55:	
  8513 ;; *************** function _setLED_Main *****************
  8514 ;; Defined at:
  8515 ;;		line 215 in file "../src/LED_B1.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  led             1    wreg     unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  led             1    6[COMMON] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;		None               void
  8522 ;; Registers used:
  8523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8529 ;;      Params:         0       0       0       0
  8530 ;;      Locals:         1       0       0       0
  8531 ;;      Temps:          0       2       0       0
  8532 ;;      Totals:         1       2       0       0
  8533 ;;Total ram usage:        3 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    3
  8536 ;; This function calls:
  8537 ;;		_LedPointSelect
  8538 ;; This function is called by:
  8539 ;;		_LED_Main
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           
  8544                           ;psect for function _setLED_Main
  8545  0D5C                     _setLED_Main:	
  8546                           
  8547                           ;incstack = 0
  8548                           ; Regs used in _setLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8549                           ;setLED_Main@led stored from wreg
  8550  0D5C  00F6               	movwf	setLED_Main@led
  8551                           
  8552                           ;LED_B1.c: 216: LedPointSelect(led);
  8553  0D5D  0876               	movf	setLED_Main@led,w
  8554  0D5E  158A  24D0  158A   	fcall	_LedPointSelect
  8555                           
  8556                           ;LED_B1.c: 217: if (LED->GO == 1) {
  8557  0D61  0877               	movf	_LED,w
  8558  0D62  0084               	movwf	4
  8559  0D63  1383               	bcf	3,7	;select IRP bank0
  8560  0D64  1C80               	btfss	0,1
  8561  0D65  0008               	return
  8562                           
  8563                           ;LED_B1.c: 218: LED->Time++;
  8564  0D66  0A77               	incf	_LED,w
  8565  0D67  0084               	movwf	4
  8566  0D68  3001               	movlw	1
  8567  0D69  0780               	addwf	0,f
  8568  0D6A  0A84               	incf	4,f
  8569  0D6B  1803               	skipnc
  8570  0D6C  0A80               	incf	0,f
  8571                           
  8572                           ;LED_B1.c: 219: if (LED->Time >= 500 / 10) {
  8573  0D6D  0A77               	incf	_LED,w
  8574  0D6E  0084               	movwf	4
  8575  0D6F  0800               	movf	0,w
  8576  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  8577  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  8578  0D72  00D5               	movwf	??_setLED_Main
  8579  0D73  0A84               	incf	4,f
  8580  0D74  0800               	movf	0,w
  8581  0D75  00D6               	movwf	??_setLED_Main+1
  8582  0D76  3000               	movlw	0
  8583  0D77  0256               	subwf	??_setLED_Main+1,w
  8584  0D78  3032               	movlw	50
  8585  0D79  1903               	skipnz
  8586  0D7A  0255               	subwf	??_setLED_Main,w
  8587  0D7B  1C03               	skipc
  8588  0D7C  0008               	return
  8589                           
  8590                           ;LED_B1.c: 220: LED->Time = 0;
  8591  0D7D  0A77               	incf	_LED,w
  8592  0D7E  0084               	movwf	4
  8593  0D7F  0180               	clrf	0
  8594  0D80  0A84               	incf	4,f
  8595  0D81  0180               	clrf	0
  8596                           
  8597                           ;LED_B1.c: 222: if (led == 1) {
  8598  0D82  0876               	movf	setLED_Main@led,w
  8599  0D83  3A01               	xorlw	1
  8600  0D84  1D03               	skipz
  8601  0D85  2D89               	goto	l4370
  8602                           
  8603                           ;LED_B1.c: 223: RB4 = RB4 == 1 ? 0 : 1;
  8604  0D86  3010               	movlw	16
  8605  0D87  0686               	xorwf	6,f
  8606                           
  8607                           ;LED_B1.c: 224: }
  8608  0D88  0008               	return
  8609  0D89                     l4370:	
  8610                           
  8611                           ;LED_B1.c: 227: else if (led == 2) {
  8612  0D89  0876               	movf	setLED_Main@led,w
  8613  0D8A  3A02               	xorlw	2
  8614  0D8B  1D03               	skipz
  8615  0D8C  2D90               	goto	l4374
  8616                           
  8617                           ;LED_B1.c: 228: RB5 = RB5 == 1 ? 0 : 1;
  8618  0D8D  3020               	movlw	32
  8619  0D8E  0686               	xorwf	6,f
  8620                           
  8621                           ;LED_B1.c: 229: }
  8622  0D8F  0008               	return
  8623  0D90                     l4374:	
  8624                           
  8625                           ;LED_B1.c: 237: else if (led == 99) {
  8626  0D90  0876               	movf	setLED_Main@led,w
  8627  0D91  3A63               	xorlw	99
  8628  0D92  1D03               	skipz
  8629  0D93  0008               	return
  8630                           
  8631                           ;LED_B1.c: 238: RB3 = RB3 == 1 ? 0 : 1;
  8632  0D94  3008               	movlw	8
  8633  0D95  0686               	xorwf	6,f
  8634  0D96  0008               	return
  8635  0D97                     __end_of_setLED_Main:	
  8636                           
  8637                           	psect	text56
  8638  0B37                     __ptext56:	
  8639 ;; *************** function _LED_Initialization *****************
  8640 ;; Defined at:
  8641 ;;		line 31 in file "../src/LED_B1.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;		None
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;		None               void
  8648 ;; Registers used:
  8649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8655 ;;      Params:         0       0       0       0
  8656 ;;      Locals:         0       0       0       0
  8657 ;;      Temps:          0       0       0       0
  8658 ;;      Totals:         0       0       0       0
  8659 ;;Total ram usage:        0 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    5
  8662 ;; This function calls:
  8663 ;;		_setLED_Initialization
  8664 ;; This function is called by:
  8665 ;;		_main
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function _LED_Initialization
  8671  0B37                     _LED_Initialization:	
  8672                           
  8673                           ;LED_B1.c: 33: setLED_Initialization(1);
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8677  0B37  3001               	movlw	1
  8678  0B38  158A  23E6  158A   	fcall	_setLED_Initialization
  8679                           
  8680                           ;LED_B1.c: 36: setLED_Initialization(2);
  8681  0B3B  3002               	movlw	2
  8682  0B3C  158A  23E6  158A   	fcall	_setLED_Initialization
  8683                           
  8684                           ;LED_B1.c: 42: setLED_Initialization(99);
  8685  0B3F  3063               	movlw	99
  8686  0B40  158A  23E6         	fcall	_setLED_Initialization
  8687  0B42  0008               	return
  8688  0B43                     __end_of_LED_Initialization:	
  8689                           
  8690                           	psect	text57
  8691  0BE6                     __ptext57:	
  8692 ;; *************** function _setLED_Initialization *****************
  8693 ;; Defined at:
  8694 ;;		line 66 in file "../src/LED_B1.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  led             1    wreg     unsigned char 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  led             1    1[BANK0 ] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;		None               void
  8701 ;; Registers used:
  8702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8708 ;;      Params:         0       0       0       0
  8709 ;;      Locals:         0       1       0       0
  8710 ;;      Temps:          0       0       0       0
  8711 ;;      Totals:         0       1       0       0
  8712 ;;Total ram usage:        1 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    4
  8715 ;; This function calls:
  8716 ;;		_LedPointSelect
  8717 ;;		_setLED
  8718 ;; This function is called by:
  8719 ;;		_LED_Initialization
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           
  8724                           ;psect for function _setLED_Initialization
  8725  0BE6                     _setLED_Initialization:	
  8726                           
  8727                           ;incstack = 0
  8728                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8729                           ;setLED_Initialization@led stored from wreg
  8730  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  8731  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  8732  0BE8  00D6               	movwf	setLED_Initialization@led
  8733                           
  8734                           ;LED_B1.c: 67: LedPointSelect(led);
  8735  0BE9  0856               	movf	setLED_Initialization@led,w
  8736  0BEA  158A  24D0  158A   	fcall	_LedPointSelect
  8737                           
  8738                           ;LED_B1.c: 68: LED->Enable = 1;
  8739  0BED  0877               	movf	_LED,w
  8740  0BEE  0084               	movwf	4
  8741  0BEF  1383               	bcf	3,7	;select IRP bank0
  8742  0BF0  1400               	bsf	0,0
  8743                           
  8744                           ;LED_B1.c: 69: setLED(led, 0);
  8745  0BF1  01F6               	clrf	setLED@command
  8746  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  8747  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  8748  0BF4  0856               	movf	setLED_Initialization@led,w
  8749  0BF5  118A  2570         	fcall	_setLED
  8750  0BF7  0008               	return
  8751  0BF8                     __end_of_setLED_Initialization:	
  8752                           
  8753                           	psect	text58
  8754  0570                     __ptext58:	
  8755 ;; *************** function _setLED *****************
  8756 ;; Defined at:
  8757 ;;		line 73 in file "../src/LED_B1.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  led             1    wreg     unsigned char 
  8760 ;;  command         1    6[COMMON] unsigned char 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  led             1    0[BANK0 ] unsigned char 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;		None               void
  8765 ;; Registers used:
  8766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8772 ;;      Params:         1       0       0       0
  8773 ;;      Locals:         0       1       0       0
  8774 ;;      Temps:          0       0       0       0
  8775 ;;      Totals:         1       1       0       0
  8776 ;;Total ram usage:        2 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    3
  8779 ;; This function calls:
  8780 ;;		_LedPointSelect
  8781 ;; This function is called by:
  8782 ;;		_setLED_Initialization
  8783 ;;		_setPIRLED_Main
  8784 ;;		_setMain_Exception
  8785 ;;		_Load_Main
  8786 ;;		_PIR_Initialization
  8787 ;;		_PIR_Main
  8788 ;;		_setSYSC_Main
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           
  8793                           ;psect for function _setLED
  8794  0570                     _setLED:	
  8795                           
  8796                           ;incstack = 0
  8797                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8798                           ;setLED@led stored from wreg
  8799  0570  1283               	bcf	3,5	;RP0=0, select bank0
  8800  0571  1303               	bcf	3,6	;RP1=0, select bank0
  8801  0572  00D5               	movwf	setLED@led
  8802                           
  8803                           ;LED_B1.c: 74: LedPointSelect(led);
  8804  0573  0855               	movf	setLED@led,w
  8805  0574  158A  24D0  118A   	fcall	_LedPointSelect
  8806                           
  8807                           ;LED_B1.c: 75: if (command == 0) {
  8808  0577  08F6               	movf	setLED@command,f
  8809  0578  1D03               	skipz
  8810  0579  2D8E               	goto	l4188
  8811                           
  8812                           ;LED_B1.c: 77: if (led == 1) {
  8813  057A  1283               	bcf	3,5	;RP0=0, select bank0
  8814  057B  1303               	bcf	3,6	;RP1=0, select bank0
  8815  057C  0855               	movf	setLED@led,w
  8816  057D  3A01               	xorlw	1
  8817  057E  1D03               	skipz
  8818  057F  2D82               	goto	l4180
  8819                           
  8820                           ;LED_B1.c: 81: RB4 = 1;
  8821  0580  1606               	bsf	6,4	;volatile
  8822                           
  8823                           ;LED_B1.c: 83: }
  8824  0581  0008               	return
  8825  0582                     l4180:	
  8826                           
  8827                           ;LED_B1.c: 86: else if (led == 2) {
  8828  0582  0855               	movf	setLED@led,w
  8829  0583  3A02               	xorlw	2
  8830  0584  1D03               	skipz
  8831  0585  2D88               	goto	l4184
  8832                           
  8833                           ;LED_B1.c: 90: RB5 = 1;
  8834  0586  1686               	bsf	6,5	;volatile
  8835                           
  8836                           ;LED_B1.c: 92: }
  8837  0587  0008               	return
  8838  0588                     l4184:	
  8839                           
  8840                           ;LED_B1.c: 104: else if (led == 99) {
  8841  0588  0855               	movf	setLED@led,w
  8842  0589  3A63               	xorlw	99
  8843  058A  1D03               	skipz
  8844  058B  0008               	return
  8845                           
  8846                           ;LED_B1.c: 108: RB3 = 1;
  8847  058C  1586               	bsf	6,3	;volatile
  8848                           
  8849                           ;LED_B1.c: 110: }
  8850                           ;LED_B1.c: 112: } else if (command == 1) {
  8851  058D  0008               	return
  8852  058E                     l4188:	
  8853  058E  0876               	movf	setLED@command,w
  8854  058F  3A01               	xorlw	1
  8855  0590  1D03               	skipz
  8856  0591  2DA6               	goto	l4202
  8857                           
  8858                           ;LED_B1.c: 114: if (led == 1) {
  8859  0592  1283               	bcf	3,5	;RP0=0, select bank0
  8860  0593  1303               	bcf	3,6	;RP1=0, select bank0
  8861  0594  0855               	movf	setLED@led,w
  8862  0595  3A01               	xorlw	1
  8863  0596  1D03               	skipz
  8864  0597  2D9A               	goto	l4194
  8865                           
  8866                           ;LED_B1.c: 118: RB4 = 0;
  8867  0598  1206               	bcf	6,4	;volatile
  8868                           
  8869                           ;LED_B1.c: 120: }
  8870  0599  0008               	return
  8871  059A                     l4194:	
  8872                           
  8873                           ;LED_B1.c: 123: else if (led == 2) {
  8874  059A  0855               	movf	setLED@led,w
  8875  059B  3A02               	xorlw	2
  8876  059C  1D03               	skipz
  8877  059D  2DA0               	goto	l4198
  8878                           
  8879                           ;LED_B1.c: 127: RB5 = 0;
  8880  059E  1286               	bcf	6,5	;volatile
  8881                           
  8882                           ;LED_B1.c: 129: }
  8883  059F  0008               	return
  8884  05A0                     l4198:	
  8885                           
  8886                           ;LED_B1.c: 141: else if (led == 99) {
  8887  05A0  0855               	movf	setLED@led,w
  8888  05A1  3A63               	xorlw	99
  8889  05A2  1D03               	skipz
  8890  05A3  0008               	return
  8891                           
  8892                           ;LED_B1.c: 145: RB3 = 0;
  8893  05A4  1186               	bcf	6,3	;volatile
  8894                           
  8895                           ;LED_B1.c: 147: }
  8896                           ;LED_B1.c: 149: } else if (command == 10) {
  8897  05A5  0008               	return
  8898  05A6                     l4202:	
  8899  05A6  0876               	movf	setLED@command,w
  8900  05A7  3A0A               	xorlw	10
  8901  05A8  1D03               	skipz
  8902  05A9  2DC7               	goto	l4220
  8903                           
  8904                           ;LED_B1.c: 150: LED->GO = 0;
  8905  05AA  0877               	movf	_LED,w
  8906  05AB  0084               	movwf	4
  8907  05AC  1383               	bcf	3,7	;select IRP bank0
  8908  05AD  1080               	bcf	0,1
  8909                           
  8910                           ;LED_B1.c: 151: LED->Time = 0;
  8911  05AE  0A77               	incf	_LED,w
  8912  05AF  0084               	movwf	4
  8913  05B0  0180               	clrf	0
  8914  05B1  0A84               	incf	4,f
  8915  05B2  0180               	clrf	0
  8916                           
  8917                           ;LED_B1.c: 153: if (led == 1) {
  8918  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  8919  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  8920  05B5  0855               	movf	setLED@led,w
  8921  05B6  3A01               	xorlw	1
  8922  05B7  1D03               	skipz
  8923  05B8  2DBB               	goto	l4212
  8924                           
  8925                           ;LED_B1.c: 157: RB4 = 1;
  8926  05B9  1606               	bsf	6,4	;volatile
  8927                           
  8928                           ;LED_B1.c: 159: }
  8929  05BA  0008               	return
  8930  05BB                     l4212:	
  8931                           
  8932                           ;LED_B1.c: 162: else if (led == 2) {
  8933  05BB  0855               	movf	setLED@led,w
  8934  05BC  3A02               	xorlw	2
  8935  05BD  1D03               	skipz
  8936  05BE  2DC1               	goto	l4216
  8937                           
  8938                           ;LED_B1.c: 166: RB5 = 1;
  8939  05BF  1686               	bsf	6,5	;volatile
  8940                           
  8941                           ;LED_B1.c: 168: }
  8942  05C0  0008               	return
  8943  05C1                     l4216:	
  8944                           
  8945                           ;LED_B1.c: 180: else if (led == 99) {
  8946  05C1  0855               	movf	setLED@led,w
  8947  05C2  3A63               	xorlw	99
  8948  05C3  1D03               	skipz
  8949  05C4  0008               	return
  8950                           
  8951                           ;LED_B1.c: 184: RB3 = 1;
  8952  05C5  1586               	bsf	6,3	;volatile
  8953                           
  8954                           ;LED_B1.c: 186: }
  8955                           ;LED_B1.c: 188: } else if (command == 11) {
  8956  05C6  0008               	return
  8957  05C7                     l4220:	
  8958  05C7  0876               	movf	setLED@command,w
  8959  05C8  3A0B               	xorlw	11
  8960  05C9  1D03               	skipz
  8961  05CA  2DD0               	goto	l4224
  8962                           
  8963                           ;LED_B1.c: 189: LED->GO = 1;
  8964  05CB  0877               	movf	_LED,w
  8965  05CC  0084               	movwf	4
  8966  05CD  1383               	bcf	3,7	;select IRP bank0
  8967  05CE  1480               	bsf	0,1
  8968                           
  8969                           ;LED_B1.c: 190: }
  8970  05CF  0008               	return
  8971  05D0                     l4224:	
  8972                           
  8973                           ;LED_B1.c: 192: else if (command == 111) {
  8974  05D0  0876               	movf	setLED@command,w
  8975  05D1  3A6F               	xorlw	111
  8976  05D2  1D03               	skipz
  8977  05D3  2DF0               	goto	l4250
  8978                           
  8979                           ;LED_B1.c: 193: PIRLED.Count = 0;
  8980  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  8981  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  8982  05D6  01B4               	clrf	_PIRLED+1
  8983                           
  8984                           ;LED_B1.c: 194: PIRLED.Time = 0;
  8985  05D7  01B5               	clrf	_PIRLED+2
  8986  05D8  01B6               	clrf	_PIRLED+3
  8987                           
  8988                           ;LED_B1.c: 195: PIRLED.status = 0;
  8989  05D9  1233               	bcf	_PIRLED,4
  8990                           
  8991                           ;LED_B1.c: 196: PIRLED.GO = 1;
  8992  05DA  1433               	bsf	_PIRLED,0
  8993                           
  8994                           ;LED_B1.c: 197: PIRLED.GO1 = 0;
  8995  05DB  10B3               	bcf	_PIRLED,1
  8996                           
  8997                           ;LED_B1.c: 198: PIRLED.GO2 = 0;
  8998  05DC  1133               	bcf	_PIRLED,2
  8999                           
  9000                           ;LED_B1.c: 199: PIRLED.GO3 = 0;
  9001  05DD  11B3               	bcf	_PIRLED,3
  9002                           
  9003                           ;LED_B1.c: 200: if (led == 1) {
  9004  05DE  0855               	movf	setLED@led,w
  9005  05DF  3A01               	xorlw	1
  9006  05E0  1D03               	skipz
  9007  05E1  2DE4               	goto	l4242
  9008                           
  9009                           ;LED_B1.c: 201: PIRLED.GO1 = 1;
  9010  05E2  14B3               	bsf	_PIRLED,1
  9011                           
  9012                           ;LED_B1.c: 202: } else if (led == 2) {
  9013  05E3  0008               	return
  9014  05E4                     l4242:	
  9015  05E4  0855               	movf	setLED@led,w
  9016  05E5  3A02               	xorlw	2
  9017  05E6  1D03               	skipz
  9018  05E7  2DEA               	goto	l4246
  9019                           
  9020                           ;LED_B1.c: 203: PIRLED.GO2 = 1;
  9021  05E8  1533               	bsf	_PIRLED,2
  9022                           
  9023                           ;LED_B1.c: 204: } else if (led == 3) {
  9024  05E9  0008               	return
  9025  05EA                     l4246:	
  9026  05EA  0855               	movf	setLED@led,w
  9027  05EB  3A03               	xorlw	3
  9028  05EC  1D03               	skipz
  9029  05ED  0008               	return
  9030                           
  9031                           ;LED_B1.c: 205: PIRLED.GO3 = 1;
  9032  05EE  15B3               	bsf	_PIRLED,3
  9033                           
  9034                           ;LED_B1.c: 206: }
  9035                           ;LED_B1.c: 207: } else if (command == 110) {
  9036  05EF  0008               	return
  9037  05F0                     l4250:	
  9038  05F0  0876               	movf	setLED@command,w
  9039  05F1  3A6E               	xorlw	110
  9040  05F2  1D03               	skipz
  9041  05F3  0008               	return
  9042                           
  9043                           ;LED_B1.c: 208: PIRLED.GO = 0;
  9044  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  9045  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  9046  05F6  1033               	bcf	_PIRLED,0
  9047  05F7  0008               	return
  9048  05F8                     __end_of_setLED:	
  9049                           
  9050                           	psect	text59
  9051  0CD0                     __ptext59:	
  9052 ;; *************** function _LedPointSelect *****************
  9053 ;; Defined at:
  9054 ;;		line 7 in file "../src/LED_B1.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  led             1    wreg     unsigned char 
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;  led             1    5[COMMON] unsigned char 
  9059 ;; Return value:  Size  Location     Type
  9060 ;;		None               void
  9061 ;; Registers used:
  9062 ;;		wreg
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9068 ;;      Params:         0       0       0       0
  9069 ;;      Locals:         1       0       0       0
  9070 ;;      Temps:          1       0       0       0
  9071 ;;      Totals:         2       0       0       0
  9072 ;;Total ram usage:        2 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    2
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_setLED_Initialization
  9079 ;;		_setLED
  9080 ;;		_setLED_Main
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           
  9085                           ;psect for function _LedPointSelect
  9086  0CD0                     _LedPointSelect:	
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _LedPointSelect: [wreg]
  9090                           ;LedPointSelect@led stored from wreg
  9091  0CD0  00F5               	movwf	LedPointSelect@led
  9092                           
  9093                           ;LED_B1.c: 9: if (led == 1) {
  9094  0CD1  0875               	movf	LedPointSelect@led,w
  9095  0CD2  3A01               	xorlw	1
  9096  0CD3  1D03               	skipz
  9097  0CD4  2CDA               	goto	l4150
  9098                           
  9099                           ;LED_B1.c: 10: LED = &VarLED1;
  9100  0CD5  304D               	movlw	_VarLED1& (0+255)
  9101  0CD6  00F4               	movwf	??_LedPointSelect
  9102  0CD7  0874               	movf	??_LedPointSelect,w
  9103  0CD8  00F7               	movwf	_LED
  9104                           
  9105                           ;LED_B1.c: 11: }
  9106  0CD9  0008               	return
  9107  0CDA                     l4150:	
  9108                           
  9109                           ;LED_B1.c: 14: else if (led == 2) {
  9110  0CDA  0875               	movf	LedPointSelect@led,w
  9111  0CDB  3A02               	xorlw	2
  9112  0CDC  1D03               	skipz
  9113  0CDD  2CE3               	goto	l4154
  9114                           
  9115                           ;LED_B1.c: 15: LED = &VarLED2;
  9116  0CDE  3051               	movlw	_VarLED2& (0+255)
  9117  0CDF  00F4               	movwf	??_LedPointSelect
  9118  0CE0  0874               	movf	??_LedPointSelect,w
  9119  0CE1  00F7               	movwf	_LED
  9120                           
  9121                           ;LED_B1.c: 16: }
  9122  0CE2  0008               	return
  9123  0CE3                     l4154:	
  9124                           
  9125                           ;LED_B1.c: 24: else if (led == 99) {
  9126  0CE3  0875               	movf	LedPointSelect@led,w
  9127  0CE4  3A63               	xorlw	99
  9128  0CE5  1D03               	skipz
  9129  0CE6  0008               	return
  9130                           
  9131                           ;LED_B1.c: 25: LED = &VarErrLED;
  9132  0CE7  3049               	movlw	_VarErrLED& (0+255)
  9133  0CE8  00F4               	movwf	??_LedPointSelect
  9134  0CE9  0874               	movf	??_LedPointSelect,w
  9135  0CEA  00F7               	movwf	_LED
  9136  0CEB  0008               	return
  9137  0CEC                     __end_of_LedPointSelect:	
  9138                           
  9139                           	psect	text60
  9140  0B4F                     __ptext60:	
  9141 ;; *************** function _DetectSYSC_Signal *****************
  9142 ;; Defined at:
  9143 ;;		line 57 in file "../src/SYSC_B1.c"
  9144 ;; Parameters:    Size  Location     Type
  9145 ;;		None
  9146 ;; Auto vars:     Size  Location     Type
  9147 ;;		None
  9148 ;; Return value:  Size  Location     Type
  9149 ;;		None               void
  9150 ;; Registers used:
  9151 ;;		status,2
  9152 ;; Tracked objects:
  9153 ;;		On entry : 0/0
  9154 ;;		On exit  : 0/0
  9155 ;;		Unchanged: 0/0
  9156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9157 ;;      Params:         0       0       0       0
  9158 ;;      Locals:         0       0       0       0
  9159 ;;      Temps:          0       0       0       0
  9160 ;;      Totals:         0       0       0       0
  9161 ;;Total ram usage:        0 bytes
  9162 ;; Hardware stack levels used:    1
  9163 ;; Hardware stack levels required when called:    2
  9164 ;; This function calls:
  9165 ;;		Nothing
  9166 ;; This function is called by:
  9167 ;;		_main
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           
  9172                           ;psect for function _DetectSYSC_Signal
  9173  0B4F                     _DetectSYSC_Signal:	
  9174                           
  9175                           ;SYSC_B1.c: 58: if (SYSC.Signal == 0) {
  9176                           
  9177                           ;incstack = 0
  9178                           ; Regs used in _DetectSYSC_Signal: [status,2]
  9179  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  9180  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  9181  0B51  19A9               	btfsc	_SYSC,3
  9182  0B52  2B59               	goto	l1078
  9183                           
  9184                           ;SYSC_B1.c: 59: if (RA5 == 1) {
  9185  0B53  1E85               	btfss	5,5	;volatile
  9186  0B54  0008               	return
  9187                           
  9188                           ;SYSC_B1.c: 60: SYSC.Signal = 1;
  9189  0B55  15A9               	bsf	_SYSC,3
  9190                           
  9191                           ;SYSC_B1.c: 61: SYSC.Timer = 0;
  9192  0B56  01AA               	clrf	_SYSC+1
  9193  0B57  01AB               	clrf	_SYSC+2
  9194                           
  9195                           ;SYSC_B1.c: 62: }
  9196                           ;SYSC_B1.c: 63: } else {
  9197  0B58  0008               	return
  9198  0B59                     l1078:	
  9199                           
  9200                           ;SYSC_B1.c: 64: if (RA5 == 0) {
  9201  0B59  1A85               	btfsc	5,5	;volatile
  9202  0B5A  0008               	return
  9203                           
  9204                           ;SYSC_B1.c: 65: SYSC.Signal = 0;
  9205  0B5B  11A9               	bcf	_SYSC,3
  9206  0B5C  0008               	return
  9207  0B5D                     __end_of_DetectSYSC_Signal:	
  9208                           
  9209                           	psect	text61
  9210  07CB                     __ptext61:	
  9211 ;; *************** function _CDS_Main *****************
  9212 ;; Defined at:
  9213 ;;		line 11 in file "../src/CDS_B1.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;		None               void
  9220 ;; Registers used:
  9221 ;;		wreg, status,2, status,0
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9227 ;;      Params:         0       0       0       0
  9228 ;;      Locals:         0       0       0       0
  9229 ;;      Temps:          3       0       0       0
  9230 ;;      Totals:         3       0       0       0
  9231 ;;Total ram usage:        3 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    2
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		_main
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function _CDS_Main
  9243  07CB                     _CDS_Main:	
  9244                           
  9245                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  9246                           
  9247                           ;incstack = 0
  9248                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  9249  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  9250  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  9251  07CD  1C2E               	btfss	__CDS,0
  9252  07CE  0008               	return
  9253                           
  9254                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  9255  07CF  18AE               	btfsc	__CDS,1
  9256  07D0  2FDE               	goto	l111
  9257                           
  9258                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  9259  07D1  19AE               	btfsc	__CDS,3
  9260  07D2  0008               	return
  9261                           
  9262                           ;CDS_B1.c: 16: _CDS.Time++;
  9263  07D3  3001               	movlw	1
  9264  07D4  00F4               	movwf	??_CDS_Main
  9265  07D5  0874               	movf	??_CDS_Main,w
  9266  07D6  07AF               	addwf	__CDS+1,f
  9267                           
  9268                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  9269  07D7  300A               	movlw	10
  9270  07D8  022F               	subwf	__CDS+1,w
  9271  07D9  1C03               	skipc
  9272  07DA  0008               	return
  9273                           
  9274                           ;CDS_B1.c: 18: {
  9275                           ;CDS_B1.c: 19: _CDS.Time = 0;
  9276  07DB  01AF               	clrf	__CDS+1
  9277                           
  9278                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  9279  07DC  15AE               	bsf	__CDS,3
  9280                           
  9281                           ;CDS_B1.c: 21: }
  9282                           ;CDS_B1.c: 22: }
  9283                           ;CDS_B1.c: 23: } else {
  9284  07DD  0008               	return
  9285  07DE                     l111:	
  9286                           
  9287                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  9288  07DE  1CAE               	btfss	__CDS,1
  9289  07DF  0008               	return
  9290                           
  9291                           ;CDS_B1.c: 25: _CDS.GO = 0;
  9292  07E0  10AE               	bcf	__CDS,1
  9293                           
  9294                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  9295  07E1  1A2E               	btfsc	__CDS,4
  9296  07E2  2FE9               	goto	l3572
  9297                           
  9298                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  9299  07E3  0830               	movf	__CDS+2,w
  9300  07E4  0231               	subwf	__CDS+3,w
  9301  07E5  1C03               	skipc
  9302  07E6  0008               	return
  9303                           
  9304                           ;CDS_B1.c: 28: _CDS.Status = 1;
  9305  07E7  162E               	bsf	__CDS,4
  9306                           
  9307                           ;CDS_B1.c: 29: }
  9308                           ;CDS_B1.c: 30: } else {
  9309  07E8  0008               	return
  9310  07E9                     l3572:	
  9311                           
  9312                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  9313  07E9  0830               	movf	__CDS+2,w
  9314  07EA  3E9C               	addlw	156
  9315  07EB  00F4               	movwf	??_CDS_Main
  9316  07EC  30FF               	movlw	255
  9317  07ED  1803               	skipnc
  9318  07EE  3000               	movlw	0
  9319  07EF  00F5               	movwf	??_CDS_Main+1
  9320  07F0  0875               	movf	??_CDS_Main+1,w
  9321  07F1  3A80               	xorlw	128
  9322  07F2  00F6               	movwf	??_CDS_Main+2
  9323  07F3  3080               	movlw	128
  9324  07F4  0276               	subwf	??_CDS_Main+2,w
  9325  07F5  1D03               	skipz
  9326  07F6  2FF9               	goto	u3435
  9327  07F7  0831               	movf	__CDS+3,w
  9328  07F8  0274               	subwf	??_CDS_Main,w
  9329  07F9                     u3435:	
  9330  07F9  1C03               	skipc
  9331  07FA  0008               	return
  9332                           
  9333                           ;CDS_B1.c: 32: _CDS.Status = 0;
  9334  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  9335  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  9336  07FD  122E               	bcf	__CDS,4
  9337  07FE  0008               	return
  9338  07FF                     __end_of_CDS_Main:	
  9339                           
  9340                           	psect	text62
  9341  0ADF                     __ptext62:	
  9342 ;; *************** function _CDS_Initialization *****************
  9343 ;; Defined at:
  9344 ;;		line 7 in file "../src/CDS_B1.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;		None
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;		None               void
  9351 ;; Registers used:
  9352 ;;		None
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9358 ;;      Params:         0       0       0       0
  9359 ;;      Locals:         0       0       0       0
  9360 ;;      Temps:          0       0       0       0
  9361 ;;      Totals:         0       0       0       0
  9362 ;;Total ram usage:        0 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    2
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_main
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           
  9373                           ;psect for function _CDS_Initialization
  9374  0ADF                     _CDS_Initialization:	
  9375                           
  9376                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  9377                           
  9378                           ;incstack = 0
  9379                           ; Regs used in _CDS_Initialization: []
  9380  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  9381  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  9382  0AE1  142E               	bsf	__CDS,0
  9383  0AE2  0008               	return
  9384  0AE3                     __end_of_CDS_Initialization:	
  9385                           
  9386                           	psect	text63
  9387  0BB4                     __ptext63:	
  9388 ;; *************** function _ISR *****************
  9389 ;; Defined at:
  9390 ;;		line 107 in file "../src/MCU_B1.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;		None               void
  9397 ;; Registers used:
  9398 ;;		wreg, status,2, status,0, pclath, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9404 ;;      Params:         0       0       0       0
  9405 ;;      Locals:         0       0       0       0
  9406 ;;      Temps:          4       0       0       0
  9407 ;;      Totals:         4       0       0       0
  9408 ;;Total ram usage:        4 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    1
  9411 ;; This function calls:
  9412 ;;		_TMR1_ISR
  9413 ;; This function is called by:
  9414 ;;		Interrupt level 1
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           
  9419                           ;psect for function _ISR
  9420  0BB4                     _ISR:	
  9421                           
  9422                           ;MCU_B1.c: 109: ;;
  9423                           ;MCU_B1.c: 111: ;;
  9424                           ;MCU_B1.c: 113: TMR1_ISR();
  9425  0BB4  158A  24B4  158A   	fcall	_TMR1_ISR
  9426  0BB7  0873               	movf	??_ISR+3,w
  9427  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  9428  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  9429  0BBA  00FF               	movwf	127
  9430  0BBB  0872               	movf	??_ISR+2,w
  9431  0BBC  008A               	movwf	10
  9432  0BBD  0871               	movf	??_ISR+1,w
  9433  0BBE  0084               	movwf	4
  9434  0BBF  0E70               	swapf	??_ISR^(0+-128),w
  9435  0BC0  0083               	movwf	3
  9436  0BC1  0EFE               	swapf	126,f
  9437  0BC2  0E7E               	swapf	126,w
  9438  0BC3  0009               	retfie
  9439  0BC4                     __end_of_ISR:	
  9440                           
  9441                           	psect	intentry
  9442  0004                     __pintentry:	
  9443                           ;incstack = 0
  9444                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9445                           
  9446  0004                     interrupt_function:	
  9447  007E                     saved_w	set	btemp
  9448  0004  00FE               	movwf	btemp
  9449  0005  0E03               	swapf	3,w
  9450  0006  00F0               	movwf	??_ISR
  9451  0007  0804               	movf	4,w
  9452  0008  00F1               	movwf	??_ISR+1
  9453  0009  080A               	movf	10,w
  9454  000A  00F2               	movwf	??_ISR+2
  9455  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9456  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9457  000D  087F               	movf	btemp+1,w
  9458  000E  00F3               	movwf	??_ISR+3
  9459  000F  158A  2BB4         	ljmp	_ISR
  9460                           
  9461                           	psect	text64
  9462  0CB4                     __ptext64:	
  9463 ;; *************** function _TMR1_ISR *****************
  9464 ;; Defined at:
  9465 ;;		line 209 in file "../src/MCU_B1.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;		None               void
  9472 ;; Registers used:
  9473 ;;		wreg, status,2
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9479 ;;      Params:         0       0       0       0
  9480 ;;      Locals:         0       0       0       0
  9481 ;;      Temps:          0       0       0       0
  9482 ;;      Totals:         0       0       0       0
  9483 ;;Total ram usage:        0 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; This function calls:
  9486 ;;		Nothing
  9487 ;; This function is called by:
  9488 ;;		_ISR
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           
  9493                           ;psect for function _TMR1_ISR
  9494  0CB4                     _TMR1_ISR:	
  9495                           
  9496                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  9497                           
  9498                           ;incstack = 0
  9499                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  9500  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  9501  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  9502  0CB6  1C0C               	btfss	12,0	;volatile
  9503  0CB7  0008               	return
  9504  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  9505  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  9506  0CBA  1C0C               	btfss	12,0	;volatile
  9507  0CBB  0008               	return
  9508                           
  9509                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  9510  0CBC  30FA               	movlw	250
  9511  0CBD  008F               	movwf	15	;volatile
  9512                           
  9513                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  9514  0CBE  3038               	movlw	56
  9515  0CBF  008E               	movwf	14	;volatile
  9516                           
  9517                           ;MCU_B1.c: 214: TMR1IF = 0;
  9518  0CC0  100C               	bcf	12,0	;volatile
  9519                           
  9520                           ;MCU_B1.c: 234: Timer1.Count++;
  9521  0CC1  3001               	movlw	1
  9522  0CC2  07B8               	addwf	_Timer1+1,f
  9523  0CC3  1803               	skipnc
  9524  0CC4  0AB9               	incf	_Timer1+2,f
  9525  0CC5  3000               	movlw	0
  9526  0CC6  07B9               	addwf	_Timer1+2,f
  9527                           
  9528                           ;MCU_B1.c: 235: if (Timer1.Count == 100)
  9529  0CC7  3064               	movlw	100
  9530  0CC8  0638               	xorwf	_Timer1+1,w
  9531  0CC9  0439               	iorwf	_Timer1+2,w
  9532  0CCA  1D03               	skipz
  9533  0CCB  0008               	return
  9534                           
  9535                           ;MCU_B1.c: 236: {
  9536                           ;MCU_B1.c: 237: Timer1.Count = 0;
  9537  0CCC  01B8               	clrf	_Timer1+1
  9538  0CCD  01B9               	clrf	_Timer1+2
  9539                           
  9540                           ;MCU_B1.c: 238: Timer1.Timeout = 1;
  9541  0CCE  1437               	bsf	_Timer1,0
  9542  0CCF  0008               	return
  9543  0CD0                     __end_of_TMR1_ISR:	
  9544  007E                     btemp	set	126	;btemp
  9545  007E                     wtemp	set	126
  9546  007E                     wtemp0	set	126
  9547  0080                     wtemp1	set	128
  9548  0082                     wtemp2	set	130
  9549  0084                     wtemp3	set	132
  9550  0086                     wtemp4	set	134
  9551  0088                     wtemp5	set	136
  9552  007F                     wtemp6	set	127
  9553  007E                     ttemp	set	126
  9554  007E                     ttemp0	set	126
  9555  0081                     ttemp1	set	129
  9556  0084                     ttemp2	set	132
  9557  0087                     ttemp3	set	135
  9558  007F                     ttemp4	set	127
  9559  007E                     ltemp	set	126
  9560  007E                     ltemp0	set	126
  9561  0082                     ltemp1	set	130
  9562  0086                     ltemp2	set	134
  9563  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     25      78
    BANK1            80      0      79
    BANK2            16      0       7

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK2[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_CDS_Main
    _main->_getCDS_AD
    _main->_getPIR_AD
    _main->_getTemp_AD
    _getTemp_AD->_getAD
    _getPIR_AD->_getAD
    _getLoad_AD->_getAD
    _getCDS_AD->_getAD
    _setTemp_Main->_getMain_LightsStatus
    _setSYSC_Main->_setLED
    _PIR_Main->_setLED
    _PIR_Main->_setLights_Trigger
    _setMain_Exception->_getAll_Lights_Line
    _setMain_Exception->_setLED
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Load_Main->_setLED
    _Load_Initialization->_setLoad_AH_AL_Restore
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setLED_Main
    _setPIRLED_Main->_setLED
    _setLED_Main->_LedPointSelect
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _getPIR_AD->___awdiv
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _setTemp_Main->_getMain_All_Error_Status
    _SYSC_Main->_setSYSC_Main
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _setMain_Exception->_setLights_Trigger
    _PIR_Initialization->_setLED
    _Load_Main->_getMain_All_Error_Status
    _Lights_Main->_setLights_Main
    _setLights_Main->_setLights
    _setLights->_getMain_All_Error_Status
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   38133
                                             20 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                         _getLoad_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     609
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2466
                                              6 COMMON     1     0      1
                                              8 BANK0      6     6      0
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           6     6      0     977
                                              0 BANK0      6     6      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     750
                                              6 COMMON     1     0      1
                                              0 BANK0      5     5      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     578
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1323
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0    1323
                                              8 BANK0      1     1      0
                            ___awdiv
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0    4204
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         1     1      0    4204
                                              8 BANK0      1     1      0
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    9297
                                              8 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    3     3      0    4490
                                              2 BANK0      3     3      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     405
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      68
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    3906
                                              1 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                            6     6      0    4627
                                              8 BANK0      6     6      0
                _getLightsControl_GO
                _getLightsControl_OK
           _getMain_All_Error_Status
               _getMain_Lights_Count
                             _setLED
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 5     5      0     111
                                              4 COMMON     1     1      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _getLightsControl_OK                                  1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLightsControl_GO                                  1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    1598
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       6     6      0    1273
                                             14 BANK0      6     6      0
                  _LightsPointSelect
                         _getLoad_OK
           _getMain_All_Error_Status
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            6     5      1     791
                                              8 BANK0      6     5      1
                  _LightsPointSelect
           _getMain_All_Error_Status
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             9     9      0     298
                                              5 COMMON     1     1      0
                                              0 BANK0      8     8      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (4) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLoad_OK                                           1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       5     5      0     161
                                              0 BANK0      5     5      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     164
                                              3 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 2     2      0     164
                                              6 COMMON     1     1      0
                                              2 BANK0      1     1      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              6 COMMON     1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    4163
                        _setLED_Main
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    3946
                                              1 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    4061
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    4061
                                              1 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    3906
                                              6 COMMON     1     0      1
                                              0 BANK0      1     1      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _getLoad_OK
       _getMain_All_Error_Status
         _getCDS_Status
       _setLights
         _LightsPointSelect
         _getMain_All_Error_Status
           _getCDS_Status
         _setLights_Line
           _LightsPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     _getLightsControl_GO
     _getLightsControl_OK
     _getMain_All_Error_Status
       _getCDS_Status
     _getMain_Lights_Count
     _setLED
       _LedPointSelect
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
         _getCDS_Status
       _setLED
         _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
         _getCDS_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       7       9       43.8%
DATA                 0      0      AE      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Nov 06 17:13:31 2014

                     _WDT_Clearing 0002          getMain_Lights_Count@count 0055  
                     ___awdiv@sign 005A                                 fsr 0004  
                              l111 07DE                                l702 032D  
                              l623 0EB0                                l703 032B  
                              l624 0ED0                                l618 0E97  
                              l628 0ECC                                l708 02D4  
                              l822 0675                                l585 04A5  
                              l809 0678                                l880 01F3  
                              l697 035E                                l881 0054  
                              l886 007F                                l887 0095  
                              _GIE 005F                                _RB2 0032  
                              _RA4 002C                                _LED 0077  
                              _RB3 0033                                _RA5 002D  
                              _RB4 0034                                _RB5 0035  
                              _PS0 0408                                _PS1 0409  
                              _PS2 040A                                _ISR 0BB4  
                              _PSA 040B                                _WDT 003A  
           getAll_Lights_Line@line 0076                                fsr0 0004  
                              indf 0000                    __end_of_ADC_Set 0B14  
        __end_of_LightsPointSelect 0B4F                   _getLights_Status 0BC4  
          __size_of_Lights_Control 006D                               ?_ISR 0070  
                       Load_Main@i 0062                         Load_Main@j 005F  
                             l1234 0E5F                               l1228 0E5E  
                             l1078 0B59                               l4202 05A6  
                             l4212 05BB                               l4220 05C7  
                             l4150 0CDA                               l4302 0754  
                             l3182 0CF9                               l4224 05D0  
                             l4216 05C1                               l4400 078D  
                             l4320 0EE9                               l3184 0CFC  
                             l4154 0CE3                               l4242 05E4  
                             l4250 05F0                               l4410 07AD  
                             l5042 00DA                               l5026 00B7  
                             l4330 0EF1                               l4314 0EDE  
                   _Load_Main$2773 0061                               l4180 0582  
                             l4412 07BB                               l5044 00DB  
                             l4332 0EFF                               l3188 0D02  
                             l5140 0F6E                               l4246 05EA  
                             l4406 0799                               l5062 013B  
                             l5054 0127                               l5038 00CE  
                             l4342 0F20                               l4502 064A  
                             l4184 0588                               l4408 07A5  
                             l4600 0FCD                               l4424 04B4  
                             l5072 0170                               l5128 0F4B  
                             l4194 059A                               l4370 0D89  
                             l4450 052E                               l4442 0502  
                             l4434 04DE                               l4346 0F28  
                             l4338 0F15                               l3572 07E9  
                             l4188 058E                               l4276 0C2F  
                             l4612 0FF2                               l4444 050D  
                             l4428 04C7                               l4460 0550  
                             l5076 01A0                               l4198 05A0  
                             l4374 0D90                               l4286 0712  
                             l4446 0518                               l4454 0539  
                             l4438 04EF                               l4462 0561  
                             l5078 01AB                               l4550 0E0E  
                             l4518 0665                               l4392 0781  
                             l4448 0523                               l4456 054C  
                             l5088 01C5                               l4544 0DF5  
                             l4528 0674                               l4712 06E7  
                             l4640 0DC5                               l4632 0DA1  
                             l2954 0E93                               l2946 0E87  
                             l4298 073C                               l4466 056B  
                             l4634 0DAF                               l4802 0490  
                             l4730 0D53                               l4396 0787  
                             l2964 0EAB                               l2956 0E9B  
                             l4644 0DD0                               l2974 0EC6  
                             l2966 0EB4                               l4582 0E71  
                             l4574 0E55                               l4902 02FF  
                             l4486 060F                               l4750 03C5  
                             l4576 0E59                               l4920 0323  
                             l4808 049E                               l4752 03C9  
                             l4754 03CD                               l4746 03BF  
                             l4762 03DA                               l4940 0340  
                             l4828 0219                               l4692 06BA  
                             l4684 069E                               l4772 03FE  
                             l4756 03D1                               l4764 03EB  
                             l4862 0286                               l4838 022D  
                             l4758 03D5                               l4856 0255  
                             l4696 06C3                               l4890 02CD  
                             l4794 0464                               l4778 041A  
                             l4884 02C1                               l4788 0448  
                             l4994 0082              _myMain_Initialization 07FF  
                     __CFG_WDTE$ON 0000                               u2535 0C3F  
                             u3435 07F9                               u5145 0E1A  
                             u6115 0159                               _PEIE 005E  
                             u5260 0FC9                               u6135 0196  
                             u5335 0DA4                               u4705 0EF4  
                             u6155 01BB                               u5355 0DB0  
                             u6085 00FB                               u4725 0F00  
                             u5365 0DBC                               u4910 07B8  
                             u6095 011F                               u4735 0F0C  
                             u5375 0DC6                               u6185 01E2  
                             u4745 0F16                               u5805 02E7  
                             u5735 028C                               u5745 0293  
                             u4890 07A2                               u5755 029F  
                             __CDS 002E            ?_setSYSC_Initialization 0070  
                             _SYSC 0029                               __PIR 00A0  
                             _Load 00CF                               _Temp 003D  
                             _main 0F2F                               btemp 007E  
                  __end_of_WDT_Set 0B87                               ltemp 007E  
                             start 0011                               ttemp 007E  
                             wtemp 007E                   __end_of_CDS_Main 07FF  
     __size_of_Temp_Initialization 0003                              ??_ISR 0070  
                _setLights_Trigger 0C99                      ??_Lights_Main 0077  
                    __CFG_PLLEN$ON 0000                   __end_of_LED_Main 0B96  
               ?_setLights_Trigger 0076                   ??_setPIRLED_Main 0056  
                            ?_main 0069                    __end_of___awdiv 0F2F  
                            _ADRES 001E                    ___awdiv@divisor 0055  
                            _T1CON 0010                    __end_of___lwdiv 0DD7  
                    ?_Lights_Close 0070                    ___awdiv@counter 0059  
                            _TMR1H 000F                              _TMR1L 000E  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                       ?_setLED_Main 0070  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087            __end_of_Timeout_Counter 0C45  
              ??_setLights_Trigger 0055                   __end_of_PIR_Main 01FB  
                 __end_of_TMR1_ISR 0CD0                   __end_of_TMR1_Set 0B79  
                            _getAD 0CEC     __end_of_setSYSC_Initialization 0AEB  
                   _setLights$4866 0060                   __end_of_WDT_Main 0BE6  
                    _LightsControl 0078                     __CFG_BOREN$OFF 0000  
     __end_of_getMain_Lights_Count 0C6E                              pclath 000A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
   __size_of_setLED_Initialization 0012       __end_of_getMain_LightsStatus 0C31  
    __end_of_setLED_Initialization 0BF8                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                getPIR_AD@channel1 0061                  getPIR_AD@channel2 0076  
           ?_setLoad_AH_AL_Restore 0070                     _setLights_Main 0E27  
                   _setLights_Line 0B5D                    __initialization 0013  
               __size_of_SYSC_Main 0003          __end_of_setLights_Trigger 0CB4  
                     __end_of_main 0F93                   __end_of_Fosc_Set 0AF5  
                        ??_ADC_Set 0074                             ??_main 006D  
                   ??_Lights_Close 0058                __end_of_Lights_Main 0B37  
       __size_of_LightsPointSelect 000C                             ?_getAD 0074  
           ?_myMain_Initialization 0070                             _ADCON0 001F  
                           _ADCON1 009F                   ___awdiv@dividend 0057  
                        ??_WDT_Set 0074                             _ANSELA 0185  
                           _ANSELB 0186           _getMain_All_Error_Status 0E78  
                           _FVRCON 009D             getLights_Status@lights 0055  
                           _PIRLED 0033                             _OSCCON 0090  
               __size_of_Load_Main 016B                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 0C6E  
           getLights_Status@status 0056             __end_of_setLights_Main 0E78  
           __end_of_setLights_Line 0B6B                _getLightsControl_GO 0AFB  
              _getLightsControl_OK 0B01       __size_of_SYSC_Initialization 0003  
       __end_of_Mcu_Initialization 0BA5                             _Lights 003C  
                           _Timer1 0037        __size_of_CDS_Initialization 0004  
          ??_Lights_Initialization 0077                          ??___awdiv 0074  
                        ??___lwdiv 0074                             _setLED 0570  
                           _myMain 0020                _setLights_Main$4862 0066  
                 ___awdiv@quotient 005B                 __size_of_Temp_Main 0003  
      __end_of_Load_Initialization 0AFB               ?_getLightsControl_GO 0070  
             ?_getLightsControl_OK 0070                             saved_w 007E  
                 ?_Timeout_Counter 0070        getMain_Lights_Count@status1 0058  
      getMain_Lights_Count@status2 0056        getMain_Lights_Count@status3 0057  
                __end_of_SYSC_Main 0AD9                     _Lights_Control 0F93  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0070  
      __size_of_PIR_Initialization 0012         getMain_LightsStatus@status 0057  
          __end_of__initialization 0029                          ?_LED_Main 0070  
                    ?_my_MainTimer 0070                    ?_setLights_Main 0070  
                  ?_setLights_Line 0070                      ?_setSYSC_Main 0070  
       __size_of_setLights_Trigger 001B                     __pcstackCOMMON 0070  
               __size_of_getCDS_AD 002A           __end_of_getLights_Status 0BD5  
                    __end_of_getAD 0D08                          ?_PIR_Main 0070  
                        ?_TMR1_ISR 0070                          ?_TMR1_Set 0070  
           setLoad_AH_AL_Restore@i 0075                 _LED_Initialization 0B37  
               __size_of_getPIR_AD 013A                        _Lights_Main 0B2C  
         _setLights_Initialization 0AEB               _getMain_Lights_Count 0C59  
                        ?_WDT_Main 0070                  __end_of_Load_Main 0366  
            ??_getLightsControl_GO 0074              ??_getLightsControl_OK 0074  
             _getMain_LightsStatus 0C1D         __end_of_set_TimeoutCleared 0B0D  
              ?_LED_Initialization 0070             __end_of_Lights_Control 1000  
             __size_of_setLED_Main 003B                            ??_getAD 0075  
              _Temp_Initialization 0AD9                         ??_CDS_Main 0074  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                          ?_Fosc_Set 0070  
      __size_of_getAll_Lights_Line 000F                  __end_of_Temp_Main 0ADF  
                          ?_IO_Set 0070                    __CFG_VCAPEN$DIS 0000  
                   ??_my_MainTimer 0074                         ??_LED_Main 0077  
             __end_of_Lights_Close 0C1D                     ??_setSYSC_Main 005D  
             ??_LED_Initialization 0077                  LedPointSelect@led 0075  
                       __pmaintext 0F2F               ?_Temp_Initialization 0070  
                       ??_PIR_Main 005D                         ??_TMR1_ISR 0070  
                    ?_setTemp_Main 0070                 __size_of_setLights 006F  
                       _getLoad_AD 067C                         ??_TMR1_Set 0074  
                       __pintentry 0004                         _getLoad_OK 0B14  
                          ?_setLED 0076            setLights_Trigger@lights 0056  
            ?_getMain_Lights_Count 0070                            _ADC_Set 0B0D  
                       _getTemp_AD 0D32                         ??_WDT_Main 0074  
            ?_getMain_LightsStatus 0070             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 0D32  
                          _WDT_Set 0B79                         ??_Fosc_Set 0074  
                __end_of_getPIR_AD 04A0            ??_setLoad_AH_AL_Restore 0074  
        getLightsControl_GO@loadgo 0074                    __size_of_IO_Set 0015  
                       getCDS_AD@i 0057                         getCDS_AD@j 0058  
                          _Lights1 0120                            _VarLED1 004D  
                          _VarLED2 0051              ??_Temp_Initialization 0074  
                   ??_setTemp_Main 005D                            ___awdiv 0ED2  
        getLightsControl_OK@loadok 0074                            ___lwdiv 0D97  
                  __size_of_setLED 0088                            __ptext0 0000  
                          __ptext1 0C45                            __ptext2 07FF  
                          __ptext3 0D32                            __ptext4 0366  
                          __ptext5 0D97                            __ptext6 067C  
                          __ptext7 0D08                            __ptext8 0CEC  
                          __ptext9 0B07                         getPIR_AD@i 0062  
                       getPIR_AD@j 0060                       __size_of_ISR 0010  
       ??_getMain_All_Error_Status 0075                _SYSC_Initialization 0AD3  
          ??_myMain_Initialization 0074           ??_setTemp_Initialization 0074  
                   _LedPointSelect 0CD0                            clrloop0 0B25  
                __end_of_setLights 075C               end_of_initialization 0029  
                    _getCDS_Status 0B1C               ?_SYSC_Initialization 0070  
            _setLED_Initialization 0BE6                        ?_getLoad_AD 0070  
   __size_of_Lights_Initialization 0004                        ?_getLoad_OK 0070  
           ??_getMain_Lights_Count 0074      __end_of_Lights_Initialization 0AE7  
           ??_getMain_LightsStatus 0076                        ?_getTemp_AD 0070  
         setLED_Initialization@led 0056                 _Mcu_Initialization 0B96  
             __end_of_my_MainTimer 0C59               __end_of_setSYSC_Main 0E27  
           __end_of_LedPointSelect 0CEC                setPIRLED_Main@count 0057  
              ?_Mcu_Initialization 0070              __size_of_Lights_Close 0013  
          __size_of_setPIRLED_Main 006F                   ??_setLights_Main 0063  
                 ??_setLights_Line 0076               setLights_Main@lights 0068  
                        _SYSC_Main 0AD6    getMain_All_Error_Status@command 005B  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0070  
            ??_SYSC_Initialization 0074                     __end_of_IO_Set 0C83  
       __end_of_CDS_Initialization 0AE3         ??_setLights_Initialization 0076  
                __size_of_LED_Main 000F                  _setMain_Exception 04A0  
             ??_Mcu_Initialization 0075                      ?_WDT_Clearing 0070  
               ?_setMain_Exception 0070                  ?_getLights_Status 0070  
         setMain_Exception@command 0058                       ?_Lights_Main 0070  
                __size_of_PIR_Main 01CF                  __size_of_TMR1_ISR 001C  
               ??_getLights_Status 0076                  __size_of_TMR1_Set 000E  
                   __end_of_setLED 05F8                ??_setMain_Exception 0057  
         ??_setSYSC_Initialization 0074                       _Lights_Close 0C0A  
                __size_of_WDT_Main 0011                _Lights_Control$4869 0057  
              start_initialization 0013                    ?_LedPointSelect 0070  
             setLights_Line@lights 0076                          _Load_Main 01FB  
                      __end_of_ISR 0BC4         __end_of_PIR_Initialization 0C0A  
     __size_of_Load_Initialization 0006    __size_of_setTemp_Initialization 0001  
              getCDS_Status@status 0074               __end_of_setTemp_Main 067C  
              __size_of_getLoad_AD 0071                __size_of_getLoad_OK 0008  
                       ?_SYSC_Main 0070                 _set_TimeoutCleared 0B07  
                         ??_IO_Set 0074           __size_of_Timeout_Counter 0014  
                        _VarErrLED 0049                __size_of_getTemp_AD 002A  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
        __end_of_setMain_Exception 0570                          _Temp_Main 0ADC  
                  setLights@lights 0062                ?_set_TimeoutCleared 0070  
                   ??_WDT_Clearing 0074                    setLights@status 005D  
      __end_of_getLightsControl_GO 0B01        __end_of_getLightsControl_OK 0B07  
                         ??_setLED 0077                           ?_ADC_Set 0070  
                 ??_Lights_Control 0055   __end_of_getMain_All_Error_Status 0ED2  
                    ??_setLED_Main 0055                        __pbssCOMMON 0077  
                        ___latbits 0001                         ?_Load_Main 0070  
                    __pcstackBANK0 0055               ??_set_TimeoutCleared 0074  
       __end_of_getAll_Lights_Line 0BB4                           ?_WDT_Set 0070  
                  ??_getCDS_Status 0074                      PIR_Main@error 0064  
                        _getCDS_AD 0D08     __size_of_setLoad_AH_AL_Restore 0016  
    __end_of_setLoad_AH_AL_Restore 0C99                          _getPIR_AD 0366  
      __size_of_LED_Initialization 000C                         ?_Temp_Main 0070  
                 ___lwdiv@dividend 0057                     Load_Main@error 0060  
           _setTemp_Initialization 0AD2                      _PIR_Main$3308 0062  
                         ?___awdiv 0055              __size_of_my_MainTimer 0014  
                         ?___lwdiv 0055              __size_of_setSYSC_Main 0050  
         setLights_Trigger@command 0076    __size_of_setSYSC_Initialization 0004  
   __size_of_myMain_Initialization 0001      __end_of_myMain_Initialization 0800  
                   __size_of_getAD 001C                   ___lwdiv@quotient 005A  
                   _setPIRLED_Main 075C                           _CDS_Main 07CB  
              __end_of_setLED_Main 0D97                        ??_SYSC_Main 0077  
      __end_of_Temp_Initialization 0ADC                  interrupt_function 0004  
                       ?_getCDS_AD 0076                           _LED_Main 0B87  
                        _setLights 06ED                          clear_ram0 0B24  
 __end_of_setLights_Initialization 0AF0         __size_of_setMain_Exception 00D0  
                     _my_MainTimer 0C45                         ?_getPIR_AD 0076  
                     _setSYSC_Main 0DD7                           _GO_nDONE 00F9  
                ??_Timeout_Counter 0074                           _PIR_Main 002C  
                     ??_getLoad_AD 0055                           _TMR1_ISR 0CB4  
                     ??_getLoad_OK 0074                           _TMR1_Set 0B6B  
                     ??_getTemp_AD 0055                           _WDT_Main 0BD5  
                 __size_of_ADC_Set 0007               __size_of_Lights_Main 000B  
            __size_of_setTemp_Main 0084                        ??_Load_Main 005D  
           __end_of_setPIRLED_Main 07CB     getMain_All_Error_Status@status 005C  
                      getAD@adcon0 0075                        getAD@adcon1 0074  
                   setLED_Main@led 0076               __end_of_WDT_Clearing 0004  
                         _Fosc_Set 0AF0                   __size_of_WDT_Set 000E  
          setMain_Exception@status 0059                 __end_of_getLoad_AD 06ED  
               __end_of_getLoad_OK 0B1C  __size_of_getMain_All_Error_Status 005A  
        ?_getMain_All_Error_Status 0070                         ?_setLights 005D  
               __end_of_getTemp_AD 0D5C             _setSYSC_Initialization 0AE7  
                getLoad_AD@channel 0057                  _DetectSYSC_Signal 0B4F  
                         _SwDetect 0079                        ??_Temp_Main 0077  
    _getMain_All_Error_Status$2475 0055      _getMain_All_Error_Status$2484 0057  
    _getMain_All_Error_Status$2486 0059                _Load_Initialization 0AF5  
               ?_DetectSYSC_Signal 0070                          setLED@led 0055  
                     _setTemp_Main 05F8                   __size_of___awdiv 005D  
                 __size_of___lwdiv 0040                   ??_LedPointSelect 0074  
    __size_of_getMain_Lights_Count 0015                ??_DetectSYSC_Signal 0074  
               _CDS_Initialization 0ADF              _Lights_Initialization 0AE3  
    __size_of_getMain_LightsStatus 0014                  getTemp_AD@channel 0076  
                      _setLED_Main 0D5C                    ?_setPIRLED_Main 0070  
                  ___lwdiv@divisor 0055               ?_Load_Initialization 0070  
              ?_CDS_Initialization 0070                    ___lwdiv@counter 0059  
                         __ptext10 0C31                           __ptext11 0BD5  
                         __ptext20 0AD3                           __ptext12 0002  
                         __ptext21 0AE7                           __ptext13 0ADC  
                         __ptext30 0C6E                           __ptext22 002C  
                         __ptext14 05F8                           __ptext31 0AF0  
                         __ptext23 04A0                           __ptext15 0ED2  
                         __ptext40 0E27                           __ptext32 0B0D  
                         __ptext24 0C99                           __ptext16 0AD9  
                         __ptext41 06ED                           __ptext33 01FB  
                         __ptext25 0BA5                           __ptext17 0AD2  
                         __ptext50 0AE3                           __ptext42 0B5D  
                         __ptext34 0C59                           __ptext26 0BF8  
                         __ptext18 0AD6                           __ptext51 0AEB  
                         __ptext43 0E78                           __ptext35 0B01  
                         __ptext27 0B96                           __ptext19 0DD7  
                         __ptext60 0B4F                           __ptext52 0B43  
                         __ptext44 0B1C                           __ptext36 0AFB  
                         __ptext28 0B79                           __ptext61 07CB  
                         __ptext53 0B87                           __ptext45 0B14  
                         __ptext37 0AF5                           __ptext29 0B6B  
                         __ptext62 0ADF                           __ptext54 075C  
                         __ptext46 0F93                           __ptext38 0C83  
                         __ptext63 0BB4                           __ptext55 0D5C  
                         __ptext47 0C0A                           __ptext39 0B2C  
                         __ptext64 0CB4                           __ptext56 0B37  
                         __ptext48 0C1D                           __ptext57 0BE6  
                         __ptext49 0BC4                           __ptext58 0570  
                         __ptext59 0CD0          __size_of_getLights_Status 0011  
      __end_of_SYSC_Initialization 0AD6            ??_setLED_Initialization 0077  
                      ??_getCDS_AD 0055                      setLED@command 0076  
        __end_of_DetectSYSC_Signal 0B5D                      __size_of_main 0064  
                      ??_getPIR_AD 005D                 _PIR_Initialization 0BF8  
             ??_CDS_Initialization 0074        __size_of_Mcu_Initialization 000F  
                     getLoad_OK@ok 0074                ?_PIR_Initialization 0070  
                         main@argc 0069                           main@argv 006B  
__size_of_setLights_Initialization 0005          ?_setLights_Initialization 0070  
            ??_Load_Initialization 0076               Lights_Control@lights 0059  
             ??_PIR_Initialization 0056                           intlevel1 0000  
                      ??_setLights 005E            ?_setTemp_Initialization 0070  
          LightsPointSelect@lights 0075                 _getAll_Lights_Line 0BA5  
                      getLoad_AD@i 005A                        getLoad_AD@j 0059  
                      getLoad_AD@k 0058            __size_of_setLights_Main 0051  
          __size_of_setLights_Line 000E                ?_getAll_Lights_Line 0070  
           ?_Lights_Initialization 0070              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0076       __size_of_getLightsControl_GO 0006  
     __size_of_getLightsControl_OK 0006        __size_of_set_TimeoutCleared 0006  
                _LightsPointSelect 0B43               ??_getAll_Lights_Line 0076  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
                  _Timeout_Counter 0C31         __end_of_LED_Initialization 0B43  
            __end_of_getCDS_Status 0B24     __end_of_setTemp_Initialization 0AD3  
       __size_of_DetectSYSC_Signal 000E                  getCDS_AD@channel1 0059  
                getCDS_AD@channel2 0076                ??_LightsPointSelect 0074  
            _setLoad_AH_AL_Restore 0C83  
