

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Dec 06 13:20:02 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,delta=2
    75                           	psect	text62,local,class=CODE,merge=1,delta=2
    76                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    77                           	dabs	1,0x7E,2
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0096                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009F                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0186                     	;# 
   146  018C                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0096                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009F                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0186                     	;# 
   215  018C                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0096                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009F                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0186                     	;# 
   284  018C                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0089                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  008E                     	;# 
   327  008F                     	;# 
   328  0090                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0096                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009F                     	;# 
   343  0108                     	;# 
   344  0109                     	;# 
   345  010C                     	;# 
   346  010C                     	;# 
   347  010D                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  0185                     	;# 
   352  0186                     	;# 
   353  018C                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001D                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  0081                     	;# 
   389  0085                     	;# 
   390  0086                     	;# 
   391  0087                     	;# 
   392  0089                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0095                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0096                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009F                     	;# 
   412  0108                     	;# 
   413  0109                     	;# 
   414  010C                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010D                     	;# 
   418  010E                     	;# 
   419  010F                     	;# 
   420  0185                     	;# 
   421  0186                     	;# 
   422  018C                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  000E                     	;# 
   437  000E                     	;# 
   438  000F                     	;# 
   439  0010                     	;# 
   440  0011                     	;# 
   441  0012                     	;# 
   442  0013                     	;# 
   443  0014                     	;# 
   444  0015                     	;# 
   445  0015                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001B                     	;# 
   453  001C                     	;# 
   454  001D                     	;# 
   455  001E                     	;# 
   456  001F                     	;# 
   457  0081                     	;# 
   458  0085                     	;# 
   459  0086                     	;# 
   460  0087                     	;# 
   461  0089                     	;# 
   462  008C                     	;# 
   463  008D                     	;# 
   464  008E                     	;# 
   465  008F                     	;# 
   466  0090                     	;# 
   467  0091                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0093                     	;# 
   471  0094                     	;# 
   472  0095                     	;# 
   473  0095                     	;# 
   474  0096                     	;# 
   475  0096                     	;# 
   476  0098                     	;# 
   477  0099                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009F                     	;# 
   481  0108                     	;# 
   482  0109                     	;# 
   483  010C                     	;# 
   484  010C                     	;# 
   485  010D                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0186                     	;# 
   491  018C                     	;# 
   492  0000                     	;# 
   493  0001                     	;# 
   494  0002                     	;# 
   495  0003                     	;# 
   496  0004                     	;# 
   497  0005                     	;# 
   498  0006                     	;# 
   499  0007                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000E                     	;# 
   507  000F                     	;# 
   508  0010                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0014                     	;# 
   513  0015                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0017                     	;# 
   517  0018                     	;# 
   518  0019                     	;# 
   519  001A                     	;# 
   520  001B                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  001D                     	;# 
   524  001E                     	;# 
   525  001F                     	;# 
   526  0081                     	;# 
   527  0085                     	;# 
   528  0086                     	;# 
   529  0087                     	;# 
   530  0089                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  008E                     	;# 
   534  008F                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0096                     	;# 
   545  0098                     	;# 
   546  0099                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009F                     	;# 
   550  0108                     	;# 
   551  0109                     	;# 
   552  010C                     	;# 
   553  010C                     	;# 
   554  010D                     	;# 
   555  010D                     	;# 
   556  010E                     	;# 
   557  010F                     	;# 
   558  0185                     	;# 
   559  0186                     	;# 
   560  018C                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0009                     	;# 
   570  000A                     	;# 
   571  000B                     	;# 
   572  000C                     	;# 
   573  000D                     	;# 
   574  000E                     	;# 
   575  000E                     	;# 
   576  000F                     	;# 
   577  0010                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001B                     	;# 
   591  001C                     	;# 
   592  001D                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  0081                     	;# 
   596  0085                     	;# 
   597  0086                     	;# 
   598  0087                     	;# 
   599  0089                     	;# 
   600  008C                     	;# 
   601  008D                     	;# 
   602  008E                     	;# 
   603  008F                     	;# 
   604  0090                     	;# 
   605  0091                     	;# 
   606  0092                     	;# 
   607  0093                     	;# 
   608  0093                     	;# 
   609  0094                     	;# 
   610  0095                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0096                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009C                     	;# 
   617  009D                     	;# 
   618  009F                     	;# 
   619  0108                     	;# 
   620  0109                     	;# 
   621  010C                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  0185                     	;# 
   628  0186                     	;# 
   629  018C                     	;# 
   630  0000                     	;# 
   631  0001                     	;# 
   632  0002                     	;# 
   633  0003                     	;# 
   634  0004                     	;# 
   635  0005                     	;# 
   636  0006                     	;# 
   637  0007                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  000E                     	;# 
   645  000F                     	;# 
   646  0010                     	;# 
   647  0011                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0014                     	;# 
   651  0015                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0017                     	;# 
   655  0018                     	;# 
   656  0019                     	;# 
   657  001A                     	;# 
   658  001B                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  001D                     	;# 
   662  001E                     	;# 
   663  001F                     	;# 
   664  0081                     	;# 
   665  0085                     	;# 
   666  0086                     	;# 
   667  0087                     	;# 
   668  0089                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  008F                     	;# 
   673  0090                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0093                     	;# 
   677  0093                     	;# 
   678  0094                     	;# 
   679  0095                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0096                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009C                     	;# 
   686  009D                     	;# 
   687  009F                     	;# 
   688  0108                     	;# 
   689  0109                     	;# 
   690  010C                     	;# 
   691  010C                     	;# 
   692  010D                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  010F                     	;# 
   696  0185                     	;# 
   697  0186                     	;# 
   698  018C                     	;# 
   699  0000                     	;# 
   700  0001                     	;# 
   701  0002                     	;# 
   702  0003                     	;# 
   703  0004                     	;# 
   704  0005                     	;# 
   705  0006                     	;# 
   706  0007                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000D                     	;# 
   712  000E                     	;# 
   713  000E                     	;# 
   714  000F                     	;# 
   715  0010                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0014                     	;# 
   720  0015                     	;# 
   721  0015                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001B                     	;# 
   729  001C                     	;# 
   730  001D                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  0081                     	;# 
   734  0085                     	;# 
   735  0086                     	;# 
   736  0087                     	;# 
   737  0089                     	;# 
   738  008C                     	;# 
   739  008D                     	;# 
   740  008E                     	;# 
   741  008F                     	;# 
   742  0090                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0093                     	;# 
   747  0094                     	;# 
   748  0095                     	;# 
   749  0095                     	;# 
   750  0096                     	;# 
   751  0096                     	;# 
   752  0098                     	;# 
   753  0099                     	;# 
   754  009C                     	;# 
   755  009D                     	;# 
   756  009F                     	;# 
   757  0108                     	;# 
   758  0109                     	;# 
   759  010C                     	;# 
   760  010C                     	;# 
   761  010D                     	;# 
   762  010D                     	;# 
   763  010E                     	;# 
   764  010F                     	;# 
   765  0185                     	;# 
   766  0186                     	;# 
   767  018C                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0009                     	;# 
   777  000A                     	;# 
   778  000B                     	;# 
   779  000C                     	;# 
   780  000D                     	;# 
   781  000E                     	;# 
   782  000E                     	;# 
   783  000F                     	;# 
   784  0010                     	;# 
   785  0011                     	;# 
   786  0012                     	;# 
   787  0013                     	;# 
   788  0014                     	;# 
   789  0015                     	;# 
   790  0015                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  001A                     	;# 
   796  001B                     	;# 
   797  001B                     	;# 
   798  001C                     	;# 
   799  001D                     	;# 
   800  001E                     	;# 
   801  001F                     	;# 
   802  0081                     	;# 
   803  0085                     	;# 
   804  0086                     	;# 
   805  0087                     	;# 
   806  0089                     	;# 
   807  008C                     	;# 
   808  008D                     	;# 
   809  008E                     	;# 
   810  008F                     	;# 
   811  0090                     	;# 
   812  0091                     	;# 
   813  0092                     	;# 
   814  0093                     	;# 
   815  0093                     	;# 
   816  0094                     	;# 
   817  0095                     	;# 
   818  0095                     	;# 
   819  0096                     	;# 
   820  0096                     	;# 
   821  0098                     	;# 
   822  0099                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009F                     	;# 
   826  0108                     	;# 
   827  0109                     	;# 
   828  010C                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010D                     	;# 
   832  010E                     	;# 
   833  010F                     	;# 
   834  0185                     	;# 
   835  0186                     	;# 
   836  018C                     	;# 
   837  0000                     	;# 
   838  0001                     	;# 
   839  0002                     	;# 
   840  0003                     	;# 
   841  0004                     	;# 
   842  0005                     	;# 
   843  0006                     	;# 
   844  0007                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  000E                     	;# 
   852  000F                     	;# 
   853  0010                     	;# 
   854  0011                     	;# 
   855  0012                     	;# 
   856  0013                     	;# 
   857  0014                     	;# 
   858  0015                     	;# 
   859  0015                     	;# 
   860  0016                     	;# 
   861  0017                     	;# 
   862  0018                     	;# 
   863  0019                     	;# 
   864  001A                     	;# 
   865  001B                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001D                     	;# 
   869  001E                     	;# 
   870  001F                     	;# 
   871  0081                     	;# 
   872  0085                     	;# 
   873  0086                     	;# 
   874  0087                     	;# 
   875  0089                     	;# 
   876  008C                     	;# 
   877  008D                     	;# 
   878  008E                     	;# 
   879  008F                     	;# 
   880  0090                     	;# 
   881  0091                     	;# 
   882  0092                     	;# 
   883  0093                     	;# 
   884  0093                     	;# 
   885  0094                     	;# 
   886  0095                     	;# 
   887  0095                     	;# 
   888  0096                     	;# 
   889  0096                     	;# 
   890  0098                     	;# 
   891  0099                     	;# 
   892  009C                     	;# 
   893  009D                     	;# 
   894  009F                     	;# 
   895  0108                     	;# 
   896  0109                     	;# 
   897  010C                     	;# 
   898  010C                     	;# 
   899  010D                     	;# 
   900  010D                     	;# 
   901  010E                     	;# 
   902  010F                     	;# 
   903  0185                     	;# 
   904  0186                     	;# 
   905  018C                     	;# 
   906  0000                     	;# 
   907  0001                     	;# 
   908  0002                     	;# 
   909  0003                     	;# 
   910  0004                     	;# 
   911  0005                     	;# 
   912  0006                     	;# 
   913  0007                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  000D                     	;# 
   919  000E                     	;# 
   920  000E                     	;# 
   921  000F                     	;# 
   922  0010                     	;# 
   923  0011                     	;# 
   924  0012                     	;# 
   925  0013                     	;# 
   926  0014                     	;# 
   927  0015                     	;# 
   928  0015                     	;# 
   929  0016                     	;# 
   930  0017                     	;# 
   931  0018                     	;# 
   932  0019                     	;# 
   933  001A                     	;# 
   934  001B                     	;# 
   935  001B                     	;# 
   936  001C                     	;# 
   937  001D                     	;# 
   938  001E                     	;# 
   939  001F                     	;# 
   940  0081                     	;# 
   941  0085                     	;# 
   942  0086                     	;# 
   943  0087                     	;# 
   944  0089                     	;# 
   945  008C                     	;# 
   946  008D                     	;# 
   947  008E                     	;# 
   948  008F                     	;# 
   949  0090                     	;# 
   950  0091                     	;# 
   951  0092                     	;# 
   952  0093                     	;# 
   953  0093                     	;# 
   954  0094                     	;# 
   955  0095                     	;# 
   956  0095                     	;# 
   957  0096                     	;# 
   958  0096                     	;# 
   959  0098                     	;# 
   960  0099                     	;# 
   961  009C                     	;# 
   962  009D                     	;# 
   963  009F                     	;# 
   964  0108                     	;# 
   965  0109                     	;# 
   966  010C                     	;# 
   967  010C                     	;# 
   968  010D                     	;# 
   969  010D                     	;# 
   970  010E                     	;# 
   971  010F                     	;# 
   972  0185                     	;# 
   973  0186                     	;# 
   974  018C                     	;# 
   975  0000                     	;# 
   976  0001                     	;# 
   977  0002                     	;# 
   978  0003                     	;# 
   979  0004                     	;# 
   980  0005                     	;# 
   981  0006                     	;# 
   982  0007                     	;# 
   983  0009                     	;# 
   984  000A                     	;# 
   985  000B                     	;# 
   986  000C                     	;# 
   987  000D                     	;# 
   988  000E                     	;# 
   989  000E                     	;# 
   990  000F                     	;# 
   991  0010                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0013                     	;# 
   995  0014                     	;# 
   996  0015                     	;# 
   997  0015                     	;# 
   998  0016                     	;# 
   999  0017                     	;# 
  1000  0018                     	;# 
  1001  0019                     	;# 
  1002  001A                     	;# 
  1003  001B                     	;# 
  1004  001B                     	;# 
  1005  001C                     	;# 
  1006  001D                     	;# 
  1007  001E                     	;# 
  1008  001F                     	;# 
  1009  0081                     	;# 
  1010  0085                     	;# 
  1011  0086                     	;# 
  1012  0087                     	;# 
  1013  0089                     	;# 
  1014  008C                     	;# 
  1015  008D                     	;# 
  1016  008E                     	;# 
  1017  008F                     	;# 
  1018  0090                     	;# 
  1019  0091                     	;# 
  1020  0092                     	;# 
  1021  0093                     	;# 
  1022  0093                     	;# 
  1023  0094                     	;# 
  1024  0095                     	;# 
  1025  0095                     	;# 
  1026  0096                     	;# 
  1027  0096                     	;# 
  1028  0098                     	;# 
  1029  0099                     	;# 
  1030  009C                     	;# 
  1031  009D                     	;# 
  1032  009F                     	;# 
  1033  0108                     	;# 
  1034  0109                     	;# 
  1035  010C                     	;# 
  1036  010C                     	;# 
  1037  010D                     	;# 
  1038  010D                     	;# 
  1039  010E                     	;# 
  1040  010F                     	;# 
  1041  0185                     	;# 
  1042  0186                     	;# 
  1043  018C                     	;# 
  1044  0000                     	;# 
  1045  0001                     	;# 
  1046  0002                     	;# 
  1047  0003                     	;# 
  1048  0004                     	;# 
  1049  0005                     	;# 
  1050  0006                     	;# 
  1051  0007                     	;# 
  1052  0009                     	;# 
  1053  000A                     	;# 
  1054  000B                     	;# 
  1055  000C                     	;# 
  1056  000D                     	;# 
  1057  000E                     	;# 
  1058  000E                     	;# 
  1059  000F                     	;# 
  1060  0010                     	;# 
  1061  0011                     	;# 
  1062  0012                     	;# 
  1063  0013                     	;# 
  1064  0014                     	;# 
  1065  0015                     	;# 
  1066  0015                     	;# 
  1067  0016                     	;# 
  1068  0017                     	;# 
  1069  0018                     	;# 
  1070  0019                     	;# 
  1071  001A                     	;# 
  1072  001B                     	;# 
  1073  001B                     	;# 
  1074  001C                     	;# 
  1075  001D                     	;# 
  1076  001E                     	;# 
  1077  001F                     	;# 
  1078  0081                     	;# 
  1079  0085                     	;# 
  1080  0086                     	;# 
  1081  0087                     	;# 
  1082  0089                     	;# 
  1083  008C                     	;# 
  1084  008D                     	;# 
  1085  008E                     	;# 
  1086  008F                     	;# 
  1087  0090                     	;# 
  1088  0091                     	;# 
  1089  0092                     	;# 
  1090  0093                     	;# 
  1091  0093                     	;# 
  1092  0094                     	;# 
  1093  0095                     	;# 
  1094  0095                     	;# 
  1095  0096                     	;# 
  1096  0096                     	;# 
  1097  0098                     	;# 
  1098  0099                     	;# 
  1099  009C                     	;# 
  1100  009D                     	;# 
  1101  009F                     	;# 
  1102  0108                     	;# 
  1103  0109                     	;# 
  1104  010C                     	;# 
  1105  010C                     	;# 
  1106  010D                     	;# 
  1107  010D                     	;# 
  1108  010E                     	;# 
  1109  010F                     	;# 
  1110  0185                     	;# 
  1111  0186                     	;# 
  1112  018C                     	;# 
  1113  0000                     	;# 
  1114  0001                     	;# 
  1115  0002                     	;# 
  1116  0003                     	;# 
  1117  0004                     	;# 
  1118  0005                     	;# 
  1119  0006                     	;# 
  1120  0007                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  000E                     	;# 
  1128  000F                     	;# 
  1129  0010                     	;# 
  1130  0011                     	;# 
  1131  0012                     	;# 
  1132  0013                     	;# 
  1133  0014                     	;# 
  1134  0015                     	;# 
  1135  0015                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001B                     	;# 
  1143  001C                     	;# 
  1144  001D                     	;# 
  1145  001E                     	;# 
  1146  001F                     	;# 
  1147  0081                     	;# 
  1148  0085                     	;# 
  1149  0086                     	;# 
  1150  0087                     	;# 
  1151  0089                     	;# 
  1152  008C                     	;# 
  1153  008D                     	;# 
  1154  008E                     	;# 
  1155  008F                     	;# 
  1156  0090                     	;# 
  1157  0091                     	;# 
  1158  0092                     	;# 
  1159  0093                     	;# 
  1160  0093                     	;# 
  1161  0094                     	;# 
  1162  0095                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0096                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009C                     	;# 
  1169  009D                     	;# 
  1170  009F                     	;# 
  1171  0108                     	;# 
  1172  0109                     	;# 
  1173  010C                     	;# 
  1174  010C                     	;# 
  1175  010D                     	;# 
  1176  010D                     	;# 
  1177  010E                     	;# 
  1178  010F                     	;# 
  1179  0185                     	;# 
  1180  0186                     	;# 
  1181  018C                     	;# 
  1182  0000                     	;# 
  1183  0001                     	;# 
  1184  0002                     	;# 
  1185  0003                     	;# 
  1186  0004                     	;# 
  1187  0005                     	;# 
  1188  0006                     	;# 
  1189  0007                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  000E                     	;# 
  1196  000E                     	;# 
  1197  000F                     	;# 
  1198  0010                     	;# 
  1199  0011                     	;# 
  1200  0012                     	;# 
  1201  0013                     	;# 
  1202  0014                     	;# 
  1203  0015                     	;# 
  1204  0015                     	;# 
  1205  0016                     	;# 
  1206  0017                     	;# 
  1207  0018                     	;# 
  1208  0019                     	;# 
  1209  001A                     	;# 
  1210  001B                     	;# 
  1211  001B                     	;# 
  1212  001C                     	;# 
  1213  001D                     	;# 
  1214  001E                     	;# 
  1215  001F                     	;# 
  1216  0081                     	;# 
  1217  0085                     	;# 
  1218  0086                     	;# 
  1219  0087                     	;# 
  1220  0089                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  008F                     	;# 
  1225  0090                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0093                     	;# 
  1230  0094                     	;# 
  1231  0095                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0096                     	;# 
  1235  0098                     	;# 
  1236  0099                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009F                     	;# 
  1240  0108                     	;# 
  1241  0109                     	;# 
  1242  010C                     	;# 
  1243  010C                     	;# 
  1244  010D                     	;# 
  1245  010D                     	;# 
  1246  010E                     	;# 
  1247  010F                     	;# 
  1248  0185                     	;# 
  1249  0186                     	;# 
  1250  018C                     	;# 
  1251  0000                     	;# 
  1252  0001                     	;# 
  1253  0002                     	;# 
  1254  0003                     	;# 
  1255  0004                     	;# 
  1256  0005                     	;# 
  1257  0006                     	;# 
  1258  0007                     	;# 
  1259  0009                     	;# 
  1260  000A                     	;# 
  1261  000B                     	;# 
  1262  000C                     	;# 
  1263  000D                     	;# 
  1264  000E                     	;# 
  1265  000E                     	;# 
  1266  000F                     	;# 
  1267  0010                     	;# 
  1268  0011                     	;# 
  1269  0012                     	;# 
  1270  0013                     	;# 
  1271  0014                     	;# 
  1272  0015                     	;# 
  1273  0015                     	;# 
  1274  0016                     	;# 
  1275  0017                     	;# 
  1276  0018                     	;# 
  1277  0019                     	;# 
  1278  001A                     	;# 
  1279  001B                     	;# 
  1280  001B                     	;# 
  1281  001C                     	;# 
  1282  001D                     	;# 
  1283  001E                     	;# 
  1284  001F                     	;# 
  1285  0081                     	;# 
  1286  0085                     	;# 
  1287  0086                     	;# 
  1288  0087                     	;# 
  1289  0089                     	;# 
  1290  008C                     	;# 
  1291  008D                     	;# 
  1292  008E                     	;# 
  1293  008F                     	;# 
  1294  0090                     	;# 
  1295  0091                     	;# 
  1296  0092                     	;# 
  1297  0093                     	;# 
  1298  0093                     	;# 
  1299  0094                     	;# 
  1300  0095                     	;# 
  1301  0095                     	;# 
  1302  0096                     	;# 
  1303  0096                     	;# 
  1304  0098                     	;# 
  1305  0099                     	;# 
  1306  009C                     	;# 
  1307  009D                     	;# 
  1308  009F                     	;# 
  1309  0108                     	;# 
  1310  0109                     	;# 
  1311  010C                     	;# 
  1312  010C                     	;# 
  1313  010D                     	;# 
  1314  010D                     	;# 
  1315  010E                     	;# 
  1316  010F                     	;# 
  1317  0185                     	;# 
  1318  0186                     	;# 
  1319  018C                     	;# 
  1320  001F                     _ADCON0	set	31
  1321  001E                     _ADRES	set	30
  1322  0005                     _PORTA	set	5
  1323  0006                     _PORTB	set	6
  1324  0007                     _PORTC	set	7
  1325  001A                     _RCREG	set	26
  1326  0018                     _RCSTA	set	24
  1327  0010                     _T1CON	set	16
  1328  000F                     _TMR1H	set	15
  1329  000E                     _TMR1L	set	14
  1330  0019                     _TXREG	set	25
  1331  005F                     _GIE	set	95
  1332  00F9                     _GO_nDONE	set	249
  1333  005E                     _PEIE	set	94
  1334  002C                     _RA4	set	44
  1335  002D                     _RA5	set	45
  1336  0032                     _RB2	set	50
  1337  0033                     _RB3	set	51
  1338  0034                     _RB4	set	52
  1339  0035                     _RB5	set	53
  1340  0065                     _RCIF	set	101
  1341  00C6                     _RX9	set	198
  1342  0060                     _TMR1IF	set	96
  1343  0064                     _TXIF	set	100
  1344  009F                     _ADCON1	set	159
  1345  009D                     _FVRCON	set	157
  1346  0090                     _OSCCON	set	144
  1347  0099                     _SPBRG	set	153
  1348  0085                     _TRISA	set	133
  1349  0086                     _TRISB	set	134
  1350  0087                     _TRISC	set	135
  1351  0098                     _TXSTA	set	152
  1352  0408                     _PS0	set	1032
  1353  0409                     _PS1	set	1033
  1354  040A                     _PS2	set	1034
  1355  040B                     _PSA	set	1035
  1356  0465                     _RCIE	set	1125
  1357  0460                     _TMR1IE	set	1120
  1358  043E                     _TRISC6	set	1086
  1359  043F                     _TRISC7	set	1087
  1360  04C6                     _TX9	set	1222
  1361  0464                     _TXIE	set	1124
  1362  0185                     _ANSELA	set	389
  1363  0186                     _ANSELB	set	390
  1364                           
  1365                           	psect	text0
  1366  0000                     __ptext0:	
  1367                           ; #config settings
  1368                           
  1369                           
  1370                           ;psect for function _TMR1_ISR
  1371  0000                     
  1372                           	psect	cinit
  1373  0013                     start_initialization:	
  1374  0013                     __initialization:	
  1375                           
  1376                           ; Clear objects allocated to COMMON
  1377  0013  01F7               	clrf	__pbssCOMMON& (0+127)
  1378  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  1379  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  1380                           
  1381                           ; Clear objects allocated to BANK0
  1382  0016  1383               	bcf	3,7	;select IRP bank0
  1383  0017  3020               	movlw	low __pbssBANK0
  1384  0018  0084               	movwf	4
  1385  0019  3052               	movlw	low (__pbssBANK0+50)
  1386  001A  158A  25C2  118A   	fcall	clear_ram0
  1387                           
  1388                           ; Clear objects allocated to BANK1
  1389  001D  30A0               	movlw	low __pbssBANK1
  1390  001E  0084               	movwf	4
  1391  001F  30E2               	movlw	low (__pbssBANK1+66)
  1392  0020  158A  25C2         	fcall	clear_ram0
  1393  0022                     end_of_initialization:	
  1394                           ;End of C runtime variable initialization code
  1395                           
  1396  0022                     __end_of__initialization:	
  1397  0022  0183               	clrf	3
  1398  0023  118A  2CB9         	ljmp	_main	;jump to C main() function
  1399                           
  1400                           	psect	bssCOMMON
  1401  0077                     __pbssCOMMON:	
  1402  0077                     _WDT:	
  1403  0077                     	ds	2
  1404  0079                     _SwDetect:	
  1405  0079                     	ds	1
  1406                           
  1407                           	psect	bssBANK0
  1408  0020                     __pbssBANK0:	
  1409  0020                     _myMain:	
  1410  0020                     	ds	6
  1411  0026                     _SYSC:	
  1412  0026                     	ds	5
  1413  002B                     __CDS:	
  1414  002B                     	ds	5
  1415  0030                     _PIRLED:	
  1416  0030                     	ds	4
  1417  0034                     _Timer1:	
  1418  0034                     	ds	3
  1419  0037                     _LED:	
  1420  0037                     	ds	1
  1421  0038                     _Lights:	
  1422  0038                     	ds	1
  1423  0039                     _LightsControl:	
  1424  0039                     	ds	1
  1425  003A                     _Temp:	
  1426  003A                     	ds	12
  1427  0046                     _VarErrLED:	
  1428  0046                     	ds	4
  1429  004A                     _VarLED1:	
  1430  004A                     	ds	4
  1431  004E                     _VarLED2:	
  1432  004E                     	ds	4
  1433                           
  1434                           	psect	bssBANK1
  1435  00A0                     __pbssBANK1:	
  1436  00A0                     __PIR:	
  1437  00A0                     	ds	47
  1438  00CF                     _UART:	
  1439  00CF                     	ds	12
  1440  00DB                     _Lights1:	
  1441  00DB                     	ds	7
  1442                           
  1443                           	psect	clrtext
  1444  0DC2                     clear_ram0:	
  1445                           ;	Called with FSR containing the base address, and
  1446                           ;	W with the last address+1
  1447                           
  1448  0DC2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1449  0DC3                     clrloop0:	
  1450  0DC3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1451  0DC4  0A84               	incf	4,f	;increment pointer
  1452  0DC5  0604               	xorwf	4,w	;XOR with final address
  1453  0DC6  1903               	btfsc	3,2	;have we reached the end yet?
  1454  0DC7  3400               	retlw	0	;all done for this memory range, return
  1455  0DC8  0604               	xorwf	4,w	;XOR again to restore value
  1456  0DC9  2DC3               	goto	clrloop0	;do the next byte
  1457                           
  1458                           	psect	cstackCOMMON
  1459  0070                     __pcstackCOMMON:	
  1460  0070                     ?_setLED_Initialization:	
  1461  0070                     ?_setPIRLED_Main:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0070                     ?_Fosc_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0070                     ?_IO_Set:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0070                     ?_TMR1_Set:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0070                     ?_ADC_Set:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0070                     ?_UART_Set:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0070                     ?_WDT_Set:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0070                     ?_TMR1_ISR:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0070                     ??_TMR1_ISR:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0070                     ?_UART_ISR:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0070                     ??_UART_ISR:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0070                     ?_Timeout_Counter:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0070                     ?_set_TimeoutCleared:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0070                     ??_getch:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0070                     ?_UART_Receive:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0070                     ?_UART_Transmit:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0070                     ?_putch:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0070                     ?_WDT_Clearing:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0070                     ?_myMain_Initialization:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0070                     ?_SYSC_Initialization:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0070                     ?_Temp_Initialization:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0070                     ?_Lights_Initialization:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0070                     ?_PIR_Initialization:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0070                     ?_DetectSYSC_Signal:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0070                     ?_getTemp_AD:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0070                     ?_my_MainTimer:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0070                     ?_SYSC_Main:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0070                     ?_Temp_Main:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0070                     ?_Lights_Main:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0070                     ?_PIR_Main:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0070                     ?_setTemp_Initialization:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0070                     ?_setTemp_Main:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0070                     ?_setSYSC_Initialization:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0070                     ?_setSYSC_Main:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0070                     ?_setLights_Initialization:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0070                     ?_setLights_Main:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0070                     ?_Lights_Control:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0070                     ?_Lights_Close:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0070                     ?_setLights_Line:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0070                     ?_CDS_Initialization:	
  1579                           ; 0 bytes @ 0x0
  1580                           
  1581  0070                     ?_CDS_Main:	
  1582                           ; 0 bytes @ 0x0
  1583                           
  1584  0070                     ?_LedPointSelect:	
  1585                           ; 0 bytes @ 0x0
  1586                           
  1587  0070                     ?_LED_Initialization:	
  1588                           ; 0 bytes @ 0x0
  1589                           
  1590  0070                     ?_LED_Main:	
  1591                           ; 0 bytes @ 0x0
  1592                           
  1593  0070                     ?_Mcu_Initialization:	
  1594                           ; 0 bytes @ 0x0
  1595                           
  1596  0070                     ?_ISR:	
  1597                           ; 0 bytes @ 0x0
  1598                           
  1599  0070                     ?_UART_Main:	
  1600                           ; 0 bytes @ 0x0
  1601                           
  1602  0070                     ?_UART_SetData:	
  1603                           ; 0 bytes @ 0x0
  1604                           
  1605  0070                     ?_WDT_Main:	
  1606                           ; 0 bytes @ 0x0
  1607                           
  1608  0070                     ?_setMain_Exception:	
  1609                           ; 0 bytes @ 0x0
  1610                           
  1611  0070                     ?_LightsPointSelect:	
  1612                           ; 0 bytes @ 0x0
  1613                           
  1614  0070                     ?_getch:	
  1615                           ; 0 bytes @ 0x0
  1616                           
  1617  0070                     ?_getAll_Lights_Line:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?_getLights_Status:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     ?_getCDS_Status:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626  0070                     ?_getMain_LightsStatus:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629  0070                     ?_getMain_All_Error_Status:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632                           
  1633                           ; 1 bytes @ 0x0
  1634  0070                     	ds	1
  1635  0071                     UART_ISR@i:	
  1636                           
  1637                           ; 2 bytes @ 0x1
  1638  0071                     	ds	2
  1639  0073                     ??_ISR:	
  1640                           
  1641                           ; 0 bytes @ 0x3
  1642  0073                     	ds	4
  1643                           
  1644                           	psect	cstackBANK0
  1645  0052                     __pcstackBANK0:	
  1646  0052                     ??_Fosc_Set:	
  1647  0052                     ??_IO_Set:	
  1648                           ; 0 bytes @ 0x0
  1649                           
  1650  0052                     ??_TMR1_Set:	
  1651                           ; 0 bytes @ 0x0
  1652                           
  1653  0052                     ??_ADC_Set:	
  1654                           ; 0 bytes @ 0x0
  1655                           
  1656  0052                     ??_UART_Set:	
  1657                           ; 0 bytes @ 0x0
  1658                           
  1659  0052                     ??_WDT_Set:	
  1660                           ; 0 bytes @ 0x0
  1661                           
  1662  0052                     ??_Timeout_Counter:	
  1663                           ; 0 bytes @ 0x0
  1664                           
  1665  0052                     ??_set_TimeoutCleared:	
  1666                           ; 0 bytes @ 0x0
  1667                           
  1668  0052                     ??_UART_Receive:	
  1669                           ; 0 bytes @ 0x0
  1670                           
  1671  0052                     ??_putch:	
  1672                           ; 0 bytes @ 0x0
  1673                           
  1674  0052                     ??_WDT_Clearing:	
  1675                           ; 0 bytes @ 0x0
  1676                           
  1677  0052                     ??_myMain_Initialization:	
  1678                           ; 0 bytes @ 0x0
  1679                           
  1680  0052                     ??_SYSC_Initialization:	
  1681                           ; 0 bytes @ 0x0
  1682                           
  1683  0052                     ??_Temp_Initialization:	
  1684                           ; 0 bytes @ 0x0
  1685                           
  1686  0052                     ??_DetectSYSC_Signal:	
  1687                           ; 0 bytes @ 0x0
  1688                           
  1689  0052                     ??_my_MainTimer:	
  1690                           ; 0 bytes @ 0x0
  1691                           
  1692  0052                     ??_setTemp_Initialization:	
  1693                           ; 0 bytes @ 0x0
  1694                           
  1695  0052                     ??_setSYSC_Initialization:	
  1696                           ; 0 bytes @ 0x0
  1697                           
  1698  0052                     ??_CDS_Initialization:	
  1699                           ; 0 bytes @ 0x0
  1700                           
  1701  0052                     ??_CDS_Main:	
  1702                           ; 0 bytes @ 0x0
  1703                           
  1704  0052                     ??_getCDS_Status:	
  1705                           ; 0 bytes @ 0x0
  1706                           
  1707  0052                     ??_LedPointSelect:	
  1708                           ; 0 bytes @ 0x0
  1709                           
  1710  0052                     ??_UART_SetData:	
  1711                           ; 0 bytes @ 0x0
  1712                           
  1713  0052                     ??_WDT_Main:	
  1714                           ; 0 bytes @ 0x0
  1715                           
  1716  0052                     ??_LightsPointSelect:	
  1717                           ; 0 bytes @ 0x0
  1718                           
  1719  0052                     ?_getAD:	
  1720                           ; 0 bytes @ 0x0
  1721                           
  1722  0052                     ?___awdiv:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0052                     ?___lwdiv:	
  1726                           ; 2 bytes @ 0x0
  1727                           
  1728  0052                     getCDS_Status@status:	
  1729                           ; 2 bytes @ 0x0
  1730                           
  1731  0052                     getAD@adcon1:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0052                     putch@byte:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0052                     ___awdiv@divisor:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0052                     ___lwdiv@divisor:	
  1741                           ; 2 bytes @ 0x0
  1742                           
  1743                           
  1744                           ; 2 bytes @ 0x0
  1745  0052                     	ds	1
  1746  0053                     ??_getAD:	
  1747  0053                     ??_UART_Transmit:	
  1748                           ; 0 bytes @ 0x1
  1749                           
  1750  0053                     ??_Mcu_Initialization:	
  1751                           ; 0 bytes @ 0x1
  1752                           
  1753  0053                     ??_getMain_All_Error_Status:	
  1754                           ; 0 bytes @ 0x1
  1755                           
  1756  0053                     LedPointSelect@led:	
  1757                           ; 0 bytes @ 0x1
  1758                           
  1759  0053                     getAD@adcon0:	
  1760                           ; 1 bytes @ 0x1
  1761                           
  1762  0053                     LightsPointSelect@lights:	
  1763                           ; 1 bytes @ 0x1
  1764                           
  1765  0053                     UART_Transmit@i:	
  1766                           ; 1 bytes @ 0x1
  1767                           
  1768                           
  1769                           ; 2 bytes @ 0x1
  1770  0053                     	ds	1
  1771  0054                     ?_setLED:	
  1772  0054                     ??_getTemp_AD:	
  1773                           ; 0 bytes @ 0x2
  1774                           
  1775  0054                     ??_getAll_Lights_Line:	
  1776                           ; 0 bytes @ 0x2
  1777                           
  1778  0054                     ?_setLights_Trigger:	
  1779                           ; 0 bytes @ 0x2
  1780                           
  1781  0054                     ??_getLights_Status:	
  1782                           ; 0 bytes @ 0x2
  1783                           
  1784  0054                     ??_setLights_Initialization:	
  1785                           ; 0 bytes @ 0x2
  1786                           
  1787  0054                     ??_Lights_Control:	
  1788                           ; 0 bytes @ 0x2
  1789                           
  1790  0054                     ??_setLights_Line:	
  1791                           ; 0 bytes @ 0x2
  1792                           
  1793  0054                     ?_getCDS_AD:	
  1794                           ; 0 bytes @ 0x2
  1795                           
  1796  0054                     getCDS_AD@channel2:	
  1797                           ; 0 bytes @ 0x2
  1798                           
  1799  0054                     setLED@command:	
  1800                           ; 1 bytes @ 0x2
  1801                           
  1802  0054                     setLights_Initialization@lights:	
  1803                           ; 1 bytes @ 0x2
  1804                           
  1805  0054                     getLights_Status@lights:	
  1806                           ; 1 bytes @ 0x2
  1807                           
  1808  0054                     setLights_Trigger@command:	
  1809                           ; 1 bytes @ 0x2
  1810                           
  1811  0054                     setLights_Line@lights:	
  1812                           ; 1 bytes @ 0x2
  1813                           
  1814  0054                     getAll_Lights_Line@line:	
  1815                           ; 1 bytes @ 0x2
  1816                           
  1817  0054                     _getMain_All_Error_Status$2116:	
  1818                           ; 1 bytes @ 0x2
  1819                           
  1820  0054                     ___awdiv@dividend:	
  1821                           ; 2 bytes @ 0x2
  1822                           
  1823  0054                     ___lwdiv@dividend:	
  1824                           ; 2 bytes @ 0x2
  1825                           
  1826                           
  1827                           ; 2 bytes @ 0x2
  1828  0054                     	ds	1
  1829  0055                     ??_setLED:	
  1830  0055                     ??_Lights_Initialization:	
  1831                           ; 0 bytes @ 0x3
  1832                           
  1833  0055                     ??_setLights_Trigger:	
  1834                           ; 0 bytes @ 0x3
  1835                           
  1836  0055                     ?_setLights:	
  1837                           ; 0 bytes @ 0x3
  1838                           
  1839  0055                     ??_getCDS_AD:	
  1840                           ; 0 bytes @ 0x3
  1841                           
  1842  0055                     ??_UART_Main:	
  1843                           ; 0 bytes @ 0x3
  1844                           
  1845  0055                     setLED@led:	
  1846                           ; 0 bytes @ 0x3
  1847                           
  1848  0055                     setLights@status:	
  1849                           ; 1 bytes @ 0x3
  1850                           
  1851  0055                     getLights_Status@status:	
  1852                           ; 1 bytes @ 0x3
  1853                           
  1854                           
  1855                           ; 1 bytes @ 0x3
  1856  0055                     	ds	1
  1857  0056                     ??_setLED_Initialization:	
  1858  0056                     ??_setPIRLED_Main:	
  1859                           ; 0 bytes @ 0x4
  1860                           
  1861  0056                     ??_PIR_Initialization:	
  1862                           ; 0 bytes @ 0x4
  1863                           
  1864  0056                     ??_setLights:	
  1865                           ; 0 bytes @ 0x4
  1866                           
  1867  0056                     ??_getMain_LightsStatus:	
  1868                           ; 0 bytes @ 0x4
  1869                           
  1870  0056                     ??___awdiv:	
  1871                           ; 0 bytes @ 0x4
  1872                           
  1873  0056                     ??___lwdiv:	
  1874                           ; 0 bytes @ 0x4
  1875                           
  1876  0056                     setLED_Initialization@led:	
  1877                           ; 0 bytes @ 0x4
  1878                           
  1879  0056                     getTemp_AD@channel:	
  1880                           ; 1 bytes @ 0x4
  1881                           
  1882  0056                     Lights_Control@lights:	
  1883                           ; 1 bytes @ 0x4
  1884                           
  1885  0056                     setLights_Trigger@lights:	
  1886                           ; 1 bytes @ 0x4
  1887                           
  1888  0056                     _getMain_All_Error_Status$2118:	
  1889                           ; 1 bytes @ 0x4
  1890                           
  1891                           
  1892                           ; 2 bytes @ 0x4
  1893  0056                     	ds	1
  1894  0057                     ??_LED_Initialization:	
  1895  0057                     ??_setMain_Exception:	
  1896                           ; 0 bytes @ 0x5
  1897                           
  1898  0057                     getCDS_AD@i:	
  1899                           ; 0 bytes @ 0x5
  1900                           
  1901  0057                     setPIRLED_Main@count:	
  1902                           ; 1 bytes @ 0x5
  1903                           
  1904  0057                     getMain_LightsStatus@count:	
  1905                           ; 1 bytes @ 0x5
  1906                           
  1907  0057                     setLights@lights:	
  1908                           ; 1 bytes @ 0x5
  1909                           
  1910  0057                     ___awdiv@counter:	
  1911                           ; 1 bytes @ 0x5
  1912                           
  1913  0057                     ___lwdiv@quotient:	
  1914                           ; 1 bytes @ 0x5
  1915                           
  1916                           
  1917                           ; 2 bytes @ 0x5
  1918  0057                     	ds	1
  1919  0058                     ??_setLights_Main:	
  1920  0058                     ??_LED_Main:	
  1921                           ; 0 bytes @ 0x6
  1922                           
  1923  0058                     getCDS_AD@j:	
  1924                           ; 0 bytes @ 0x6
  1925                           
  1926  0058                     getMain_All_Error_Status@command:	
  1927                           ; 1 bytes @ 0x6
  1928                           
  1929  0058                     setLights_Main@lights:	
  1930                           ; 1 bytes @ 0x6
  1931                           
  1932  0058                     ___awdiv@sign:	
  1933                           ; 1 bytes @ 0x6
  1934                           
  1935  0058                     getMain_LightsStatus@i:	
  1936                           ; 1 bytes @ 0x6
  1937                           
  1938                           
  1939                           ; 2 bytes @ 0x6
  1940  0058                     	ds	1
  1941  0059                     getCDS_AD@channel1:	
  1942  0059                     setMain_Exception@buz:	
  1943                           ; 1 bytes @ 0x7
  1944                           
  1945  0059                     getMain_All_Error_Status@status:	
  1946                           ; 1 bytes @ 0x7
  1947                           
  1948  0059                     ___lwdiv@counter:	
  1949                           ; 1 bytes @ 0x7
  1950                           
  1951  0059                     ___awdiv@quotient:	
  1952                           ; 1 bytes @ 0x7
  1953                           
  1954                           
  1955                           ; 2 bytes @ 0x7
  1956  0059                     	ds	1
  1957  005A                     ??_SYSC_Main:	
  1958  005A                     ??_setSYSC_Main:	
  1959                           ; 0 bytes @ 0x8
  1960                           
  1961  005A                     setMain_Exception@status:	
  1962                           ; 0 bytes @ 0x8
  1963                           
  1964  005A                     getMain_LightsStatus@status:	
  1965                           ; 1 bytes @ 0x8
  1966                           
  1967                           
  1968                           ; 1 bytes @ 0x8
  1969  005A                     	ds	1
  1970  005B                     ?_getPIR_AD:	
  1971  005B                     ??_setTemp_Main:	
  1972                           ; 0 bytes @ 0x9
  1973                           
  1974  005B                     ??_Lights_Close:	
  1975                           ; 0 bytes @ 0x9
  1976                           
  1977  005B                     getPIR_AD@channel2:	
  1978                           ; 0 bytes @ 0x9
  1979                           
  1980  005B                     _setMain_Exception$2106:	
  1981                           ; 1 bytes @ 0x9
  1982                           
  1983                           
  1984                           ; 2 bytes @ 0x9
  1985  005B                     	ds	1
  1986  005C                     ??_getPIR_AD:	
  1987  005C                     ??_Temp_Main:	
  1988                           ; 0 bytes @ 0xA
  1989                           
  1990  005C                     ??_Lights_Main:	
  1991                           ; 0 bytes @ 0xA
  1992                           
  1993                           
  1994                           ; 0 bytes @ 0xA
  1995  005C                     	ds	1
  1996  005D                     setMain_Exception@command:	
  1997                           
  1998                           ; 1 bytes @ 0xB
  1999  005D                     	ds	1
  2000  005E                     ??_PIR_Main:	
  2001                           
  2002                           ; 0 bytes @ 0xC
  2003  005E                     	ds	1
  2004  005F                     getPIR_AD@j:	
  2005                           
  2006                           ; 1 bytes @ 0xD
  2007  005F                     	ds	1
  2008  0060                     getPIR_AD@channel1:	
  2009                           
  2010                           ; 1 bytes @ 0xE
  2011  0060                     	ds	1
  2012  0061                     getPIR_AD@i:	
  2013                           
  2014                           ; 1 bytes @ 0xF
  2015  0061                     	ds	2
  2016  0063                     _PIR_Main$2761:	
  2017                           
  2018                           ; 2 bytes @ 0x11
  2019  0063                     	ds	2
  2020  0065                     PIR_Main@error:	
  2021                           
  2022                           ; 1 bytes @ 0x13
  2023  0065                     	ds	1
  2024  0066                     ?_main:	
  2025  0066                     main@argc:	
  2026                           ; 2 bytes @ 0x14
  2027                           
  2028                           
  2029                           ; 2 bytes @ 0x14
  2030  0066                     	ds	2
  2031  0068                     main@argv:	
  2032                           
  2033                           ; 2 bytes @ 0x16
  2034  0068                     	ds	2
  2035  006A                     ??_main:	
  2036                           
  2037                           ; 0 bytes @ 0x18
  2038  006A                     	ds	1
  2039                           
  2040                           	psect	maintext
  2041  04B9                     __pmaintext:	
  2042 ;;
  2043 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2044 ;;
  2045 ;; *************** function _main *****************
  2046 ;; Defined at:
  2047 ;;		line 7 in file "../src/Main_B1.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  argc            2   20[BANK0 ] int 
  2050 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2   20[BANK0 ] int 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 17F/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2062 ;;      Params:         0       4       0       0
  2063 ;;      Locals:         0       0       0       0
  2064 ;;      Temps:          0       1       0       0
  2065 ;;      Totals:         0       5       0       0
  2066 ;;Total ram usage:        5 bytes
  2067 ;; Hardware stack levels required when called:    8
  2068 ;; This function calls:
  2069 ;;		_CDS_Initialization
  2070 ;;		_CDS_Main
  2071 ;;		_DetectSYSC_Signal
  2072 ;;		_LED_Initialization
  2073 ;;		_LED_Main
  2074 ;;		_Lights_Initialization
  2075 ;;		_Lights_Main
  2076 ;;		_Mcu_Initialization
  2077 ;;		_PIR_Initialization
  2078 ;;		_PIR_Main
  2079 ;;		_SYSC_Initialization
  2080 ;;		_SYSC_Main
  2081 ;;		_Temp_Initialization
  2082 ;;		_Temp_Main
  2083 ;;		_UART_Main
  2084 ;;		_WDT_Main
  2085 ;;		_getCDS_AD
  2086 ;;		_getPIR_AD
  2087 ;;		_getTemp_AD
  2088 ;;		_myMain_Initialization
  2089 ;;		_my_MainTimer
  2090 ;; This function is called by:
  2091 ;;		Startup code after reset
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _main
  2097  04B9                     _main:	
  2098                           
  2099                           ;Main_B1.c: 8: myMain_Initialization();
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2103  04B9  158A  2573  118A   	fcall	_myMain_Initialization
  2104                           
  2105                           ;Main_B1.c: 9: Mcu_Initialization();
  2106  04BC  158A  2688  118A   	fcall	_Mcu_Initialization
  2107                           
  2108                           ;Main_B1.c: 10: ;;
  2109                           ;Main_B1.c: 11: LED_Initialization();
  2110  04BF  158A  25D5  118A   	fcall	_LED_Initialization
  2111                           
  2112                           ;Main_B1.c: 12: ;;
  2113                           ;Main_B1.c: 14: SYSC_Initialization();
  2114  04C2  158A  2577  118A   	fcall	_SYSC_Initialization
  2115                           
  2116                           ;Main_B1.c: 15: Temp_Initialization();
  2117  04C5  158A  257D  118A   	fcall	_Temp_Initialization
  2118                           
  2119                           ;Main_B1.c: 16: ;;
  2120                           ;Main_B1.c: 17: ;;
  2121                           ;Main_B1.c: 18: ;;
  2122                           ;Main_B1.c: 20: ;;
  2123                           ;Main_B1.c: 21: Lights_Initialization();
  2124  04C8  158A  2587  118A   	fcall	_Lights_Initialization
  2125                           
  2126                           ;Main_B1.c: 22: CDS_Initialization();
  2127  04CB  158A  2583  118A   	fcall	_CDS_Initialization
  2128                           
  2129                           ;Main_B1.c: 23: PIR_Initialization();
  2130  04CE  158A  26AD  118A   	fcall	_PIR_Initialization
  2131                           
  2132                           ;Main_B1.c: 24: ;;
  2133                           ;Main_B1.c: 25: ;;
  2134                           ;Main_B1.c: 26: __nop();
  2135  04D1  0000               	nop
  2136  04D2                     l4608:	
  2137                           ;Main_B1.c: 27: ;;
  2138                           ;Main_B1.c: 28: ;;
  2139                           ;Main_B1.c: 30: while (1) {
  2140                           
  2141                           
  2142                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2143  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2144  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2145  04D4  1C20               	btfss	_myMain,0
  2146  04D5  2CF1               	goto	l4618
  2147                           
  2148                           ;Main_B1.c: 34: DetectSYSC_Signal();
  2149  04D6  158A  25F9  118A   	fcall	_DetectSYSC_Signal
  2150                           
  2151                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2152  04D9  3011               	movlw	17
  2153  04DA  118A  27BB  118A   	fcall	_getTemp_AD
  2154                           
  2155                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2156  04DD  3031               	movlw	49
  2157  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2158  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2159  04E0  00EA               	movwf	??_main
  2160  04E1  086A               	movf	??_main,w
  2161  04E2  00D4               	movwf	getCDS_AD@channel2
  2162  04E3  3009               	movlw	9
  2163  04E4  158A  27D6  118A   	fcall	_getCDS_AD
  2164                           
  2165                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2166  04E7  300D               	movlw	13
  2167  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2168  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2169  04EA  00EA               	movwf	??_main
  2170  04EB  086A               	movf	??_main,w
  2171  04EC  00DB               	movwf	getPIR_AD@channel2
  2172  04ED  3005               	movlw	5
  2173  04EE  118A  221A  118A   	fcall	_getPIR_AD
  2174  04F1                     l4618:	
  2175                           
  2176                           ;Main_B1.c: 57: }
  2177                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2178  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2179  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2180  04F3  1C34               	btfss	_Timer1,0
  2181  04F4  2CD2               	goto	l4608
  2182                           
  2183                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2184  04F5  1034               	bcf	_Timer1,0
  2185                           
  2186                           ;Main_B1.c: 96: my_MainTimer();
  2187  04F6  158A  276C  118A   	fcall	_my_MainTimer
  2188                           
  2189                           ;Main_B1.c: 97: WDT_Main();
  2190  04F9  158A  2653  118A   	fcall	_WDT_Main
  2191                           
  2192                           ;Main_B1.c: 98: ;;
  2193                           ;Main_B1.c: 99: UART_Main();
  2194  04FC  158A  2623  118A   	fcall	_UART_Main
  2195                           
  2196                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2197  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0501  1C20               	btfss	_myMain,0
  2200  0502  2CD2               	goto	l4608
  2201                           
  2202                           ;Main_B1.c: 102: ;;
  2203                           ;Main_B1.c: 104: LED_Main();
  2204  0503  158A  2574  118A   	fcall	_LED_Main
  2205                           
  2206                           ;Main_B1.c: 105: ;;
  2207                           ;Main_B1.c: 107: SYSC_Main();
  2208  0506  158A  257A  118A   	fcall	_SYSC_Main
  2209                           
  2210                           ;Main_B1.c: 108: Temp_Main();
  2211  0509  158A  2580  118A   	fcall	_Temp_Main
  2212                           
  2213                           ;Main_B1.c: 109: ;;
  2214                           ;Main_B1.c: 110: ;;
  2215                           ;Main_B1.c: 112: Lights_Main();
  2216  050C  158A  25CA  118A   	fcall	_Lights_Main
  2217                           
  2218                           ;Main_B1.c: 113: ;;
  2219                           ;Main_B1.c: 114: ;;
  2220                           ;Main_B1.c: 115: CDS_Main();
  2221  050F  118A  2756  118A   	fcall	_CDS_Main
  2222                           
  2223                           ;Main_B1.c: 116: PIR_Main();
  2224  0512  118A  2025  118A   	fcall	_PIR_Main
  2225                           
  2226                           ;Main_B1.c: 118: ;;
  2227                           ;Main_B1.c: 119: ;;
  2228                           ;Main_B1.c: 120: ;;
  2229                           ;Main_B1.c: 121: ;;
  2230  0515  2CD2               	goto	l4608
  2231  0516                     __end_of_main:	
  2232                           ;Main_B1.c: 128: }
  2233                           ;Main_B1.c: 129: }
  2234                           ;Main_B1.c: 163: }
  2235                           ;Main_B1.c: 164: return (0);
  2236                           ;	Return value of _main is never used
  2237                           
  2238                           
  2239                           	psect	text1
  2240  0F6C                     __ptext1:	
  2241 ;; *************** function _my_MainTimer *****************
  2242 ;; Defined at:
  2243 ;;		line 183 in file "../src/Main_B1.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;		None               void
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2257 ;;      Params:         0       0       0       0
  2258 ;;      Locals:         0       0       0       0
  2259 ;;      Temps:          0       1       0       0
  2260 ;;      Totals:         0       1       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    4
  2264 ;; This function calls:
  2265 ;;		_UART_SetData
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _my_MainTimer
  2273  0F6C                     _my_MainTimer:	
  2274                           
  2275                           ;Main_B1.c: 186: if (myMain.PowerON == 0) {
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0+pclath+cstack]
  2279  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  2280  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  2281  0F6E  1820               	btfsc	_myMain,0
  2282  0F6F  2F7C               	goto	l4412
  2283                           
  2284                           ;Main_B1.c: 187: myMain.PowerCount++;
  2285  0F70  3001               	movlw	1
  2286  0F71  00D2               	movwf	??_my_MainTimer
  2287  0F72  0852               	movf	??_my_MainTimer,w
  2288  0F73  07A1               	addwf	_myMain+1,f
  2289                           
  2290                           ;Main_B1.c: 188: if (myMain.PowerCount == 150) {
  2291  0F74  0821               	movf	_myMain+1,w
  2292  0F75  3A96               	xorlw	150
  2293  0F76  1D03               	skipz
  2294  0F77  0008               	return
  2295                           
  2296                           ;Main_B1.c: 189: myMain.PowerCount = 0;
  2297  0F78  01A1               	clrf	_myMain+1
  2298                           
  2299                           ;Main_B1.c: 190: myMain.PowerON = 1;
  2300  0F79  1420               	bsf	_myMain,0
  2301                           
  2302                           ;Main_B1.c: 195: ;;
  2303                           ;Main_B1.c: 196: myMain.SelfTest = 1;
  2304  0F7A  1620               	bsf	_myMain,4
  2305                           
  2306                           ;Main_B1.c: 205: }
  2307                           ;Main_B1.c: 206: } else {
  2308  0F7B  0008               	return
  2309  0F7C                     l4412:	
  2310                           
  2311                           ;Main_B1.c: 207: myMain.PowerCount++;
  2312  0F7C  3001               	movlw	1
  2313  0F7D  00D2               	movwf	??_my_MainTimer
  2314  0F7E  0852               	movf	??_my_MainTimer,w
  2315  0F7F  07A1               	addwf	_myMain+1,f
  2316                           
  2317                           ;Main_B1.c: 208: if (myMain.PowerCount == 100) {
  2318  0F80  0821               	movf	_myMain+1,w
  2319  0F81  3A64               	xorlw	100
  2320  0F82  1D03               	skipz
  2321  0F83  0008               	return
  2322                           
  2323                           ;Main_B1.c: 209: myMain.PowerCount = 0;
  2324  0F84  01A1               	clrf	_myMain+1
  2325                           
  2326                           ;Main_B1.c: 213: if (UART.TxGO == 0) {
  2327  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0F87  185A               	btfsc	(_UART^(0+128)+11),0
  2330  0F88  0008               	return
  2331                           
  2332                           ;Main_B1.c: 214: UART_SetData();
  2333  0F89  158A  25ED         	fcall	_UART_SetData
  2334  0F8B  0008               	return
  2335  0F8C                     __end_of_my_MainTimer:	
  2336                           
  2337                           	psect	text2
  2338  0DED                     __ptext2:	
  2339 ;; *************** function _UART_SetData *****************
  2340 ;; Defined at:
  2341 ;;		line 828 in file "../src/MCU_B1.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2355 ;;      Params:         0       0       0       0
  2356 ;;      Locals:         0       0       0       0
  2357 ;;      Temps:          0       0       0       0
  2358 ;;      Totals:         0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    3
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_my_MainTimer
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _UART_SetData
  2371  0DED                     _UART_SetData:	
  2372                           
  2373                           ;MCU_B1.c: 838: if (UART.TxGO == 0) {
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _UART_SetData: [wreg]
  2377  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0DEE  1303               	bcf	3,6	;RP1=0, select bank1
  2379  0DEF  185A               	btfsc	(_UART^(0+128)+11),0
  2380  0DF0  0008               	return
  2381                           
  2382                           ;MCU_B1.c: 847: RB3 = RB3 == 1 ? 0 : 1;
  2383  0DF1  3008               	movlw	8
  2384  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0DF4  0686               	xorwf	6,f
  2387                           
  2388                           ;MCU_B1.c: 848: UART.TxGO = 1;
  2389  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0DF6  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0DF7  145A               	bsf	(_UART^(0+128)+11),0
  2392  0DF8  0008               	return
  2393  0DF9                     __end_of_UART_SetData:	
  2394                           
  2395                           	psect	text3
  2396  0D73                     __ptext3:	
  2397 ;; *************** function _myMain_Initialization *****************
  2398 ;; Defined at:
  2399 ;;		line 170 in file "../src/Main_B1.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		None
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2413 ;;      Params:         0       0       0       0
  2414 ;;      Locals:         0       0       0       0
  2415 ;;      Temps:          0       0       0       0
  2416 ;;      Totals:         0       0       0       0
  2417 ;;Total ram usage:        0 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _myMain_Initialization
  2429  0D73                     _myMain_Initialization:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _myMain_Initialization: []
  2433  0D73  0008               	return
  2434  0D74                     __end_of_myMain_Initialization:	
  2435                           
  2436                           	psect	text4
  2437  07BB                     __ptext4:	
  2438 ;; *************** function _getTemp_AD *****************
  2439 ;; Defined at:
  2440 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  channel         1    wreg     unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  channel         1    4[BANK0 ] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, pclath, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2454 ;;      Params:         0       0       0       0
  2455 ;;      Locals:         0       1       0       0
  2456 ;;      Temps:          0       2       0       0
  2457 ;;      Totals:         0       3       0       0
  2458 ;;Total ram usage:        3 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    5
  2461 ;; This function calls:
  2462 ;;		_getAD
  2463 ;; This function is called by:
  2464 ;;		_main
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _getTemp_AD
  2470  07BB                     _getTemp_AD:	
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2474                           ;getTemp_AD@channel stored from wreg
  2475  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  2476  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  2477  07BD  00D6               	movwf	getTemp_AD@channel
  2478                           
  2479                           ;OverTemperature_B1.c: 17: if (RA5 == 1) {
  2480  07BE  1E85               	btfss	5,5	;volatile
  2481  07BF  0008               	return
  2482                           
  2483                           ;OverTemperature_B1.c: 18: if (Temp.ADtoGO == 1) {
  2484  07C0  1D3A               	btfss	_Temp,2
  2485  07C1  0008               	return
  2486                           
  2487                           ;OverTemperature_B1.c: 19: Temp.ADRES = getAD(channel, 0x70);
  2488  07C2  3070               	movlw	112
  2489  07C3  00D4               	movwf	??_getTemp_AD
  2490  07C4  0854               	movf	??_getTemp_AD,w
  2491  07C5  00D2               	movwf	getAD@adcon1
  2492  07C6  0856               	movf	getTemp_AD@channel,w
  2493  07C7  158A  2750  118A   	fcall	_getAD
  2494  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2495  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2496  07CC  00D5               	movwf	??_getTemp_AD+1
  2497  07CD  0855               	movf	??_getTemp_AD+1,w
  2498  07CE  00C3               	movwf	_Temp+9
  2499                           
  2500                           ;OverTemperature_B1.c: 20: if (Temp.ADRES > 0) {
  2501  07CF  0843               	movf	_Temp+9,w
  2502  07D0  1903               	btfsc	3,2
  2503  07D1  0008               	return
  2504                           
  2505                           ;OverTemperature_B1.c: 21: Temp.GO = 1;
  2506  07D2  163A               	bsf	_Temp,4
  2507                           
  2508                           ;OverTemperature_B1.c: 22: if (Temp.ADH[0] < Temp.ADRES) {
  2509  07D3  0843               	movf	_Temp+9,w
  2510  07D4  0241               	subwf	_Temp+7,w
  2511  07D5  1803               	skipnc
  2512  07D6  2FDC               	goto	l4320
  2513                           
  2514                           ;OverTemperature_B1.c: 23: Temp.ADH[0] = Temp.ADRES;
  2515  07D7  0843               	movf	_Temp+9,w
  2516  07D8  00D4               	movwf	??_getTemp_AD
  2517  07D9  0854               	movf	??_getTemp_AD,w
  2518  07DA  00C1               	movwf	_Temp+7
  2519                           
  2520                           ;OverTemperature_B1.c: 24: } else if (Temp.ADH[1] < Temp.ADRES) {
  2521  07DB  0008               	return
  2522  07DC                     l4320:	
  2523  07DC  0843               	movf	_Temp+9,w
  2524  07DD  0242               	subwf	_Temp+8,w
  2525  07DE  1803               	skipnc
  2526  07DF  0008               	return
  2527                           
  2528                           ;OverTemperature_B1.c: 25: Temp.ADH[1] = Temp.ADRES;
  2529  07E0  0843               	movf	_Temp+9,w
  2530  07E1  00D4               	movwf	??_getTemp_AD
  2531  07E2  0854               	movf	??_getTemp_AD,w
  2532  07E3  00C2               	movwf	_Temp+8
  2533  07E4  0008               	return
  2534  07E5                     __end_of_getTemp_AD:	
  2535                           
  2536                           	psect	text5
  2537  021A                     __ptext5:	
  2538 ;; *************** function _getPIR_AD *****************
  2539 ;; Defined at:
  2540 ;;		line 167 in file "../src/PIR_B1.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  channel1        1    wreg     unsigned char 
  2543 ;;  channel2        1    9[BANK0 ] unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  channel1        1   14[BANK0 ] unsigned char 
  2546 ;;  i               1   15[BANK0 ] unsigned char 
  2547 ;;  j               1   13[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;		None               void
  2550 ;; Registers used:
  2551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2557 ;;      Params:         0       1       0       0
  2558 ;;      Locals:         0       3       0       0
  2559 ;;      Temps:          0       3       0       0
  2560 ;;      Totals:         0       7       0       0
  2561 ;;Total ram usage:        7 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    5
  2564 ;; This function calls:
  2565 ;;		___awdiv
  2566 ;;		___lwdiv
  2567 ;;		_getAD
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _getPIR_AD
  2575  021A                     _getPIR_AD:	
  2576                           
  2577                           ;incstack = 0
  2578                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2579                           ;getPIR_AD@channel1 stored from wreg
  2580  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2581  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2582  021C  00E0               	movwf	getPIR_AD@channel1
  2583                           
  2584                           ;PIR_B1.c: 168: char i = 0, j = 0;
  2585  021D  01E1               	clrf	getPIR_AD@i
  2586  021E  01DF               	clrf	getPIR_AD@j
  2587                           
  2588                           ;PIR_B1.c: 170: if (_PIR.ADtoGO == 1) {
  2589  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0221  1CA0               	btfss	__PIR^(0+128),1
  2592  0222  0008               	return
  2593                           
  2594                           ;PIR_B1.c: 171: _PIR.GO = 1;
  2595  0223  1520               	bsf	__PIR^(0+128),2
  2596                           
  2597                           ;PIR_B1.c: 172: _PIR.ADRES = getAD(channel1, 0x70);
  2598  0224  3070               	movlw	112
  2599  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0227  00DC               	movwf	??_getPIR_AD
  2602  0228  085C               	movf	??_getPIR_AD,w
  2603  0229  00D2               	movwf	getAD@adcon1
  2604  022A  0860               	movf	getPIR_AD@channel1,w
  2605  022B  158A  2750  118A   	fcall	_getAD
  2606  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2607  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0230  00DD               	movwf	??_getPIR_AD+1
  2609  0231  085D               	movf	??_getPIR_AD+1,w
  2610  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2611  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2612  0234  00A2               	movwf	(__PIR^(0+128)+2)
  2613                           
  2614                           ;PIR_B1.c: 173: _PIR.VRAD = _PIR.ADRES / 51;
  2615  0235  3033               	movlw	51
  2616  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0238  00D2               	movwf	___awdiv@divisor
  2619  0239  3000               	movlw	0
  2620  023A  00D3               	movwf	___awdiv@divisor+1
  2621  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2622  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2623  023D  0822               	movf	(__PIR^(0+128)+2),w
  2624  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2625  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0240  00DC               	movwf	??_getPIR_AD
  2627  0241  01DD               	clrf	??_getPIR_AD+1
  2628  0242  085C               	movf	??_getPIR_AD,w
  2629  0243  00D4               	movwf	___awdiv@dividend
  2630  0244  085D               	movf	??_getPIR_AD+1,w
  2631  0245  00D5               	movwf	___awdiv@dividend+1
  2632  0246  118A  2516  118A   	fcall	___awdiv
  2633  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2634  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2635  024B  0852               	movf	?___awdiv,w
  2636  024C  00DE               	movwf	??_getPIR_AD+2
  2637  024D  085E               	movf	??_getPIR_AD+2,w
  2638  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2639  024F  1303               	bcf	3,6	;RP1=0, select bank1
  2640  0250  00A3               	movwf	(__PIR^(0+128)+3)
  2641                           
  2642                           ;PIR_B1.c: 174: _PIR.VRAD1 = _PIR.ADRES;
  2643  0251  0822               	movf	(__PIR^(0+128)+2),w
  2644  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0254  00DC               	movwf	??_getPIR_AD
  2647  0255  085C               	movf	??_getPIR_AD,w
  2648  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2649  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2650  0258  00A4               	movwf	(__PIR^(0+128)+4)
  2651                           
  2652                           ;PIR_B1.c: 175: _PIR.ADRES = getAD(channel2, 0x70);
  2653  0259  3070               	movlw	112
  2654  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2655  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2656  025C  00DC               	movwf	??_getPIR_AD
  2657  025D  085C               	movf	??_getPIR_AD,w
  2658  025E  00D2               	movwf	getAD@adcon1
  2659  025F  085B               	movf	getPIR_AD@channel2,w
  2660  0260  158A  2750  118A   	fcall	_getAD
  2661  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0264  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0265  00DD               	movwf	??_getPIR_AD+1
  2664  0266  085D               	movf	??_getPIR_AD+1,w
  2665  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0269  00A2               	movwf	(__PIR^(0+128)+2)
  2668                           
  2669                           ;PIR_B1.c: 176: _PIR.SignalAD = _PIR.ADRES;
  2670  026A  0822               	movf	(__PIR^(0+128)+2),w
  2671  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2672  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2673  026D  00DC               	movwf	??_getPIR_AD
  2674  026E  085C               	movf	??_getPIR_AD,w
  2675  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0271  00A1               	movwf	(__PIR^(0+128)+1)
  2678                           
  2679                           ;PIR_B1.c: 178: switch (_PIR.VRAD) {
  2680  0272  2A8E               	goto	l4352
  2681  0273                     l4336:	
  2682                           ;PIR_B1.c: 179: case 0:
  2683                           
  2684                           
  2685                           ;PIR_B1.c: 180: if (_PIR.VRAD1 < 10) {
  2686  0273  300A               	movlw	10
  2687  0274  0224               	subwf	(__PIR^(0+128)+4),w
  2688  0275  1803               	skipnc
  2689  0276  2A79               	goto	l4340
  2690                           
  2691                           ;PIR_B1.c: 181: _PIR.CloseTimeValue = 5;
  2692  0277  3005               	movlw	5
  2693  0278  2A7A               	goto	L1
  2694  0279                     l4340:	
  2695                           ;PIR_B1.c: 182: } else {
  2696                           
  2697                           
  2698                           ;PIR_B1.c: 183: _PIR.CloseTimeValue = 60;
  2699  0279  303C               	movlw	60
  2700  027A                     L1:	
  2701  027A  00C7               	movwf	(__PIR^(0+128)+39)
  2702  027B  3000               	movlw	0
  2703  027C  2A8C               	goto	L5
  2704  027D                     l4342:	
  2705                           ;PIR_B1.c: 186: case 1:
  2706                           
  2707                           ;PIR_B1.c: 184: }
  2708                           ;PIR_B1.c: 185: break;
  2709                           
  2710                           
  2711                           ;PIR_B1.c: 187: _PIR.CloseTimeValue = 300;
  2712  027D  302C               	movlw	44
  2713  027E  00C7               	movwf	(__PIR^(0+128)+39)
  2714  027F  3001               	movlw	1
  2715  0280  2A8C               	goto	L5
  2716  0281                     l4344:	
  2717                           ;PIR_B1.c: 189: case 2:
  2718                           
  2719                           ;PIR_B1.c: 188: break;
  2720                           
  2721                           
  2722                           ;PIR_B1.c: 190: _PIR.CloseTimeValue = 600;
  2723  0281  3058               	movlw	88
  2724  0282  00C7               	movwf	(__PIR^(0+128)+39)
  2725  0283  3002               	movlw	2
  2726  0284  2A8C               	goto	L5
  2727  0285                     l4346:	
  2728                           ;PIR_B1.c: 192: case 3:
  2729                           
  2730                           ;PIR_B1.c: 191: break;
  2731                           
  2732                           
  2733                           ;PIR_B1.c: 193: _PIR.CloseTimeValue = 900;
  2734  0285  3084               	movlw	132
  2735  0286  00C7               	movwf	(__PIR^(0+128)+39)
  2736  0287  3003               	movlw	3
  2737  0288  2A8C               	goto	L5
  2738  0289                     l4348:	
  2739                           ;PIR_B1.c: 195: case 4:
  2740                           
  2741                           ;PIR_B1.c: 194: break;
  2742                           
  2743                           
  2744                           ;PIR_B1.c: 196: _PIR.CloseTimeValue = 1200;
  2745  0289  30B0               	movlw	176
  2746  028A  00C7               	movwf	(__PIR^(0+128)+39)
  2747  028B  3004               	movlw	4
  2748  028C                     L5:	
  2749  028C  00C8               	movwf	(__PIR^(0+128)+40)
  2750                           
  2751                           ;PIR_B1.c: 198: }
  2752                           
  2753                           ;PIR_B1.c: 197: break;
  2754  028D  2A9F               	goto	l4354
  2755  028E                     l4352:	
  2756  028E  0823               	movf	(__PIR^(0+128)+3),w
  2757                           
  2758                           ; Switch size 1, requested type "space"
  2759                           ; Number of cases is 5, Range of values is 0 to 4
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte           16     9 (average)
  2763                           ; direct_byte           17     7 (fixed)
  2764                           ; jumptable            260     6 (fixed)
  2765                           ;	Chosen strategy is simple_byte
  2766  028F  3A00               	xorlw	0	; case 0
  2767  0290  1903               	skipnz
  2768  0291  2A73               	goto	l4336
  2769  0292  3A01               	xorlw	1	; case 1
  2770  0293  1903               	skipnz
  2771  0294  2A7D               	goto	l4342
  2772  0295  3A03               	xorlw	3	; case 2
  2773  0296  1903               	skipnz
  2774  0297  2A81               	goto	l4344
  2775  0298  3A01               	xorlw	1	; case 3
  2776  0299  1903               	skipnz
  2777  029A  2A85               	goto	l4346
  2778  029B  3A07               	xorlw	7	; case 4
  2779  029C  1903               	skipnz
  2780  029D  2A89               	goto	l4348
  2781  029E  2A9F               	goto	l4354
  2782  029F                     l4354:	
  2783                           
  2784                           ;PIR_B1.c: 201: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2785  029F  0821               	movf	(__PIR^(0+128)+1),w
  2786  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2787  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2788  02A2  00DC               	movwf	??_getPIR_AD
  2789  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2790  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2791  02A5  0827               	movf	(__PIR^(0+128)+7),w
  2792  02A6  3EA8               	addlw	(__PIR+8)& (0+255)
  2793  02A7  0084               	movwf	4
  2794  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2795  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2796  02AA  085C               	movf	??_getPIR_AD,w
  2797  02AB  1383               	bcf	3,7	;select IRP bank1
  2798  02AC  0080               	movwf	0
  2799                           
  2800                           ;PIR_B1.c: 202: for (i = 0; i < 10; i++) {
  2801  02AD  01E1               	clrf	getPIR_AD@i
  2802  02AE  300A               	movlw	10
  2803  02AF  0261               	subwf	getPIR_AD@i,w
  2804  02B0  1803               	btfsc	3,0
  2805  02B1  2ACE               	goto	l4368
  2806  02B2                     l4362:	
  2807                           
  2808                           ;PIR_B1.c: 203: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2809  02B2  0861               	movf	getPIR_AD@i,w
  2810  02B3  3EA8               	addlw	(__PIR+8)& (0+255)
  2811  02B4  0084               	movwf	4
  2812  02B5  0800               	movf	0,w
  2813  02B6  00DC               	movwf	??_getPIR_AD
  2814  02B7  01DD               	clrf	??_getPIR_AD+1
  2815  02B8  085C               	movf	??_getPIR_AD,w
  2816  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2817  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2818  02BB  07B2               	addwf	(__PIR^(0+128)+18),f
  2819  02BC  1803               	skipnc
  2820  02BD  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2821  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02C0  085D               	movf	??_getPIR_AD+1,w
  2824  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2825  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2826  02C3  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2827  02C4  3001               	movlw	1
  2828  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2829  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2830  02C7  00DC               	movwf	??_getPIR_AD
  2831  02C8  085C               	movf	??_getPIR_AD,w
  2832  02C9  07E1               	addwf	getPIR_AD@i,f
  2833  02CA  300A               	movlw	10
  2834  02CB  0261               	subwf	getPIR_AD@i,w
  2835  02CC  1C03               	skipc
  2836  02CD  2AB2               	goto	l4362
  2837  02CE                     l4368:	
  2838                           
  2839                           ;PIR_B1.c: 204: }
  2840                           ;PIR_B1.c: 205: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2841  02CE  300A               	movlw	10
  2842  02CF  00D2               	movwf	___lwdiv@divisor
  2843  02D0  3000               	movlw	0
  2844  02D1  00D3               	movwf	___lwdiv@divisor+1
  2845  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2846  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2847  02D4  0833               	movf	((__PIR+1)^(0+128)+18),w
  2848  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2849  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2850  02D7  01D5               	clrf	___lwdiv@dividend+1
  2851  02D8  07D5               	addwf	___lwdiv@dividend+1,f
  2852  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2853  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2854  02DB  0832               	movf	(__PIR^(0+128)+18),w
  2855  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2856  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2857  02DE  01D4               	clrf	___lwdiv@dividend
  2858  02DF  07D4               	addwf	___lwdiv@dividend,f
  2859  02E0  118A  26A0  118A   	fcall	___lwdiv
  2860  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2861  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2862  02E5  0852               	movf	?___lwdiv,w
  2863  02E6  00DC               	movwf	??_getPIR_AD
  2864  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2865  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2866  02E9  0834               	movf	(__PIR^(0+128)+20),w
  2867  02EA  3EB5               	addlw	(__PIR+21)& (0+255)
  2868  02EB  0084               	movwf	4
  2869  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2870  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2871  02EE  085C               	movf	??_getPIR_AD,w
  2872  02EF  1383               	bcf	3,7	;select IRP bank1
  2873  02F0  0080               	movwf	0
  2874                           
  2875                           ;PIR_B1.c: 206: _PIR.TenAverageValue = 0;
  2876  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2877  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2878  02F3  01B2               	clrf	(__PIR^(0+128)+18)
  2879  02F4  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2880                           
  2881                           ;PIR_B1.c: 208: for (i = 0; i <= 9; i++) {
  2882  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2883  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2884  02F7  01E1               	clrf	getPIR_AD@i
  2885  02F8  300A               	movlw	10
  2886  02F9  0261               	subwf	getPIR_AD@i,w
  2887  02FA  1803               	btfsc	3,0
  2888  02FB  2B18               	goto	l4384
  2889  02FC                     l4378:	
  2890                           
  2891                           ;PIR_B1.c: 209: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2892  02FC  0861               	movf	getPIR_AD@i,w
  2893  02FD  3EB5               	addlw	(__PIR+21)& (0+255)
  2894  02FE  0084               	movwf	4
  2895  02FF  0800               	movf	0,w
  2896  0300  00DC               	movwf	??_getPIR_AD
  2897  0301  01DD               	clrf	??_getPIR_AD+1
  2898  0302  085C               	movf	??_getPIR_AD,w
  2899  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2901  0305  07BF               	addwf	(__PIR^(0+128)+31),f
  2902  0306  1803               	skipnc
  2903  0307  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2904  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2906  030A  085D               	movf	??_getPIR_AD+1,w
  2907  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2908  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2909  030D  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2910  030E  3001               	movlw	1
  2911  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0311  00DC               	movwf	??_getPIR_AD
  2914  0312  085C               	movf	??_getPIR_AD,w
  2915  0313  07E1               	addwf	getPIR_AD@i,f
  2916  0314  300A               	movlw	10
  2917  0315  0261               	subwf	getPIR_AD@i,w
  2918  0316  1C03               	skipc
  2919  0317  2AFC               	goto	l4378
  2920  0318                     l4384:	
  2921                           
  2922                           ;PIR_B1.c: 210: }
  2923                           ;PIR_B1.c: 211: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2924  0318  300A               	movlw	10
  2925  0319  00D2               	movwf	___lwdiv@divisor
  2926  031A  3000               	movlw	0
  2927  031B  00D3               	movwf	___lwdiv@divisor+1
  2928  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2929  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2930  031E  0840               	movf	((__PIR+1)^(0+128)+31),w
  2931  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0321  01D5               	clrf	___lwdiv@dividend+1
  2934  0322  07D5               	addwf	___lwdiv@dividend+1,f
  2935  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0325  083F               	movf	(__PIR^(0+128)+31),w
  2938  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0328  01D4               	clrf	___lwdiv@dividend
  2941  0329  07D4               	addwf	___lwdiv@dividend,f
  2942  032A  118A  26A0  118A   	fcall	___lwdiv
  2943  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2944  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2945  032F  0852               	movf	?___lwdiv,w
  2946  0330  00DC               	movwf	??_getPIR_AD
  2947  0331  085C               	movf	??_getPIR_AD,w
  2948  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0334  00A6               	movwf	(__PIR^(0+128)+6)
  2951                           
  2952                           ;PIR_B1.c: 212: _PIR.HundredAverageValue = 0;
  2953  0335  01BF               	clrf	(__PIR^(0+128)+31)
  2954  0336  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2955                           
  2956                           ;PIR_B1.c: 214: if (_PIR.TenCount < 10) {
  2957  0337  300A               	movlw	10
  2958  0338  0227               	subwf	(__PIR^(0+128)+7),w
  2959  0339  1803               	skipnc
  2960  033A  2B44               	goto	l4392
  2961                           
  2962                           ;PIR_B1.c: 215: _PIR.TenCount++;
  2963  033B  3001               	movlw	1
  2964  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2965  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2966  033E  00DC               	movwf	??_getPIR_AD
  2967  033F  085C               	movf	??_getPIR_AD,w
  2968  0340  1683               	bsf	3,5	;RP0=1, select bank1
  2969  0341  1303               	bcf	3,6	;RP1=0, select bank1
  2970  0342  07A7               	addwf	(__PIR^(0+128)+7),f
  2971                           
  2972                           ;PIR_B1.c: 216: } else {
  2973  0343  0008               	return
  2974  0344                     l4392:	
  2975                           
  2976                           ;PIR_B1.c: 217: _PIR.TenCount = 0;
  2977  0344  01A7               	clrf	(__PIR^(0+128)+7)
  2978                           
  2979                           ;PIR_B1.c: 218: if (_PIR.HundreCount < 10)
  2980  0345  300A               	movlw	10
  2981  0346  0234               	subwf	(__PIR^(0+128)+20),w
  2982  0347  1803               	skipnc
  2983  0348  2B52               	goto	l4398
  2984                           
  2985                           ;PIR_B1.c: 219: _PIR.HundreCount++;
  2986  0349  3001               	movlw	1
  2987  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2988  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2989  034C  00DC               	movwf	??_getPIR_AD
  2990  034D  085C               	movf	??_getPIR_AD,w
  2991  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2992  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2993  0350  07B4               	addwf	(__PIR^(0+128)+20),f
  2994  0351  0008               	return
  2995  0352                     l4398:	
  2996                           
  2997                           ;PIR_B1.c: 220: else
  2998                           ;PIR_B1.c: 221: _PIR.HundreCount = 0;
  2999  0352  01B4               	clrf	(__PIR^(0+128)+20)
  3000  0353  0008               	return
  3001  0354                     __end_of_getPIR_AD:	
  3002                           
  3003                           	psect	text6
  3004  06A0                     __ptext6:	
  3005 ;; *************** function ___lwdiv *****************
  3006 ;; Defined at:
  3007 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  divisor         2    0[BANK0 ] unsigned int 
  3010 ;;  dividend        2    2[BANK0 ] unsigned int 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  quotient        2    5[BANK0 ] unsigned int 
  3013 ;;  counter         1    7[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2    0[BANK0 ] unsigned int 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3023 ;;      Params:         0       4       0       0
  3024 ;;      Locals:         0       3       0       0
  3025 ;;      Temps:          0       1       0       0
  3026 ;;      Totals:         0       8       0       0
  3027 ;;Total ram usage:        8 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    3
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_getPIR_AD
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function ___lwdiv
  3039  06A0                     ___lwdiv:	
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3043  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3044  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3045  06A2  01D7               	clrf	___lwdiv@quotient
  3046  06A3  01D8               	clrf	___lwdiv@quotient+1
  3047  06A4  0853               	movf	___lwdiv@divisor+1,w
  3048  06A5  0452               	iorwf	___lwdiv@divisor,w
  3049  06A6  1903               	skipnz
  3050  06A7  2ED9               	goto	l3302
  3051  06A8  01D9               	clrf	___lwdiv@counter
  3052  06A9  0AD9               	incf	___lwdiv@counter,f
  3053  06AA                     l3290:	
  3054  06AA  1BD3               	btfsc	___lwdiv@divisor+1,7
  3055  06AB  2EB8               	goto	l3292
  3056  06AC  3001               	movlw	1
  3057  06AD                     u2945:	
  3058  06AD  1003               	clrc
  3059  06AE  0DD2               	rlf	___lwdiv@divisor,f
  3060  06AF  0DD3               	rlf	___lwdiv@divisor+1,f
  3061  06B0  3EFF               	addlw	-1
  3062  06B1  1D03               	skipz
  3063  06B2  2EAD               	goto	u2945
  3064  06B3  3001               	movlw	1
  3065  06B4  00D6               	movwf	??___lwdiv
  3066  06B5  0856               	movf	??___lwdiv,w
  3067  06B6  07D9               	addwf	___lwdiv@counter,f
  3068  06B7  2EAA               	goto	l3290
  3069  06B8                     l3292:	
  3070  06B8  3001               	movlw	1
  3071  06B9                     u2965:	
  3072  06B9  1003               	clrc
  3073  06BA  0DD7               	rlf	___lwdiv@quotient,f
  3074  06BB  0DD8               	rlf	___lwdiv@quotient+1,f
  3075  06BC  3EFF               	addlw	-1
  3076  06BD  1D03               	skipz
  3077  06BE  2EB9               	goto	u2965
  3078  06BF  0853               	movf	___lwdiv@divisor+1,w
  3079  06C0  0255               	subwf	___lwdiv@dividend+1,w
  3080  06C1  1D03               	skipz
  3081  06C2  2EC5               	goto	u2975
  3082  06C3  0852               	movf	___lwdiv@divisor,w
  3083  06C4  0254               	subwf	___lwdiv@dividend,w
  3084  06C5                     u2975:	
  3085  06C5  1C03               	skipc
  3086  06C6  2ECE               	goto	l3298
  3087  06C7  0852               	movf	___lwdiv@divisor,w
  3088  06C8  02D4               	subwf	___lwdiv@dividend,f
  3089  06C9  0853               	movf	___lwdiv@divisor+1,w
  3090  06CA  1C03               	skipc
  3091  06CB  03D5               	decf	___lwdiv@dividend+1,f
  3092  06CC  02D5               	subwf	___lwdiv@dividend+1,f
  3093  06CD  1457               	bsf	___lwdiv@quotient,0
  3094  06CE                     l3298:	
  3095  06CE  3001               	movlw	1
  3096  06CF                     u2985:	
  3097  06CF  1003               	clrc
  3098  06D0  0CD3               	rrf	___lwdiv@divisor+1,f
  3099  06D1  0CD2               	rrf	___lwdiv@divisor,f
  3100  06D2  3EFF               	addlw	-1
  3101  06D3  1D03               	skipz
  3102  06D4  2ECF               	goto	u2985
  3103  06D5  3001               	movlw	1
  3104  06D6  02D9               	subwf	___lwdiv@counter,f
  3105  06D7  1D03               	btfss	3,2
  3106  06D8  2EB8               	goto	l3292
  3107  06D9                     l3302:	
  3108  06D9  0858               	movf	___lwdiv@quotient+1,w
  3109  06DA  01D3               	clrf	?___lwdiv+1
  3110  06DB  07D3               	addwf	?___lwdiv+1,f
  3111  06DC  0857               	movf	___lwdiv@quotient,w
  3112  06DD  01D2               	clrf	?___lwdiv
  3113  06DE  07D2               	addwf	?___lwdiv,f
  3114  06DF  0008               	return
  3115  06E0                     __end_of___lwdiv:	
  3116                           
  3117                           	psect	text7
  3118  0516                     __ptext7:	
  3119 ;; *************** function ___awdiv *****************
  3120 ;; Defined at:
  3121 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  divisor         2    0[BANK0 ] int 
  3124 ;;  dividend        2    2[BANK0 ] int 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  quotient        2    7[BANK0 ] int 
  3127 ;;  sign            1    6[BANK0 ] unsigned char 
  3128 ;;  counter         1    5[BANK0 ] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  2    0[BANK0 ] int 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3138 ;;      Params:         0       4       0       0
  3139 ;;      Locals:         0       4       0       0
  3140 ;;      Temps:          0       1       0       0
  3141 ;;      Totals:         0       9       0       0
  3142 ;;Total ram usage:        9 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    3
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_getPIR_AD
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function ___awdiv
  3154  0516                     ___awdiv:	
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3158  0516  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0517  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0518  01D8               	clrf	___awdiv@sign
  3161  0519  1FD3               	btfss	___awdiv@divisor+1,7
  3162  051A  2D22               	goto	l3244
  3163  051B  09D2               	comf	___awdiv@divisor,f
  3164  051C  09D3               	comf	___awdiv@divisor+1,f
  3165  051D  0AD2               	incf	___awdiv@divisor,f
  3166  051E  1903               	skipnz
  3167  051F  0AD3               	incf	___awdiv@divisor+1,f
  3168  0520  01D8               	clrf	___awdiv@sign
  3169  0521  0AD8               	incf	___awdiv@sign,f
  3170  0522                     l3244:	
  3171  0522  1FD5               	btfss	___awdiv@dividend+1,7
  3172  0523  2D2D               	goto	l3250
  3173  0524  09D4               	comf	___awdiv@dividend,f
  3174  0525  09D5               	comf	___awdiv@dividend+1,f
  3175  0526  0AD4               	incf	___awdiv@dividend,f
  3176  0527  1903               	skipnz
  3177  0528  0AD5               	incf	___awdiv@dividend+1,f
  3178  0529  3001               	movlw	1
  3179  052A  00D6               	movwf	??___awdiv
  3180  052B  0856               	movf	??___awdiv,w
  3181  052C  06D8               	xorwf	___awdiv@sign,f
  3182  052D                     l3250:	
  3183  052D  01D9               	clrf	___awdiv@quotient
  3184  052E  01DA               	clrf	___awdiv@quotient+1
  3185  052F  0853               	movf	___awdiv@divisor+1,w
  3186  0530  0452               	iorwf	___awdiv@divisor,w
  3187  0531  1903               	skipnz
  3188  0532  2D64               	goto	l3272
  3189  0533  01D7               	clrf	___awdiv@counter
  3190  0534  0AD7               	incf	___awdiv@counter,f
  3191  0535                     l3260:	
  3192  0535  1BD3               	btfsc	___awdiv@divisor+1,7
  3193  0536  2D43               	goto	l3262
  3194  0537  3001               	movlw	1
  3195  0538                     u2865:	
  3196  0538  1003               	clrc
  3197  0539  0DD2               	rlf	___awdiv@divisor,f
  3198  053A  0DD3               	rlf	___awdiv@divisor+1,f
  3199  053B  3EFF               	addlw	-1
  3200  053C  1D03               	skipz
  3201  053D  2D38               	goto	u2865
  3202  053E  3001               	movlw	1
  3203  053F  00D6               	movwf	??___awdiv
  3204  0540  0856               	movf	??___awdiv,w
  3205  0541  07D7               	addwf	___awdiv@counter,f
  3206  0542  2D35               	goto	l3260
  3207  0543                     l3262:	
  3208  0543  3001               	movlw	1
  3209  0544                     u2885:	
  3210  0544  1003               	clrc
  3211  0545  0DD9               	rlf	___awdiv@quotient,f
  3212  0546  0DDA               	rlf	___awdiv@quotient+1,f
  3213  0547  3EFF               	addlw	-1
  3214  0548  1D03               	skipz
  3215  0549  2D44               	goto	u2885
  3216  054A  0853               	movf	___awdiv@divisor+1,w
  3217  054B  0255               	subwf	___awdiv@dividend+1,w
  3218  054C  1D03               	skipz
  3219  054D  2D50               	goto	u2895
  3220  054E  0852               	movf	___awdiv@divisor,w
  3221  054F  0254               	subwf	___awdiv@dividend,w
  3222  0550                     u2895:	
  3223  0550  1C03               	skipc
  3224  0551  2D59               	goto	l3268
  3225  0552  0852               	movf	___awdiv@divisor,w
  3226  0553  02D4               	subwf	___awdiv@dividend,f
  3227  0554  0853               	movf	___awdiv@divisor+1,w
  3228  0555  1C03               	skipc
  3229  0556  03D5               	decf	___awdiv@dividend+1,f
  3230  0557  02D5               	subwf	___awdiv@dividend+1,f
  3231  0558  1459               	bsf	___awdiv@quotient,0
  3232  0559                     l3268:	
  3233  0559  3001               	movlw	1
  3234  055A                     u2905:	
  3235  055A  1003               	clrc
  3236  055B  0CD3               	rrf	___awdiv@divisor+1,f
  3237  055C  0CD2               	rrf	___awdiv@divisor,f
  3238  055D  3EFF               	addlw	-1
  3239  055E  1D03               	skipz
  3240  055F  2D5A               	goto	u2905
  3241  0560  3001               	movlw	1
  3242  0561  02D7               	subwf	___awdiv@counter,f
  3243  0562  1D03               	btfss	3,2
  3244  0563  2D43               	goto	l3262
  3245  0564                     l3272:	
  3246  0564  0858               	movf	___awdiv@sign,w
  3247  0565  1903               	btfsc	3,2
  3248  0566  2D6C               	goto	l3276
  3249  0567  09D9               	comf	___awdiv@quotient,f
  3250  0568  09DA               	comf	___awdiv@quotient+1,f
  3251  0569  0AD9               	incf	___awdiv@quotient,f
  3252  056A  1903               	skipnz
  3253  056B  0ADA               	incf	___awdiv@quotient+1,f
  3254  056C                     l3276:	
  3255  056C  085A               	movf	___awdiv@quotient+1,w
  3256  056D  01D3               	clrf	?___awdiv+1
  3257  056E  07D3               	addwf	?___awdiv+1,f
  3258  056F  0859               	movf	___awdiv@quotient,w
  3259  0570  01D2               	clrf	?___awdiv
  3260  0571  07D2               	addwf	?___awdiv,f
  3261  0572  0008               	return
  3262  0573                     __end_of___awdiv:	
  3263                           
  3264                           	psect	text8
  3265  0FD6                     __ptext8:	
  3266 ;; *************** function _getCDS_AD *****************
  3267 ;; Defined at:
  3268 ;;		line 45 in file "../src/CDS_B1.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  channel1        1    wreg     unsigned char 
  3271 ;;  channel2        1    2[BANK0 ] unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  channel1        1    7[BANK0 ] unsigned char 
  3274 ;;  j               1    6[BANK0 ] unsigned char 
  3275 ;;  i               1    5[BANK0 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3285 ;;      Params:         0       1       0       0
  3286 ;;      Locals:         0       3       0       0
  3287 ;;      Temps:          0       2       0       0
  3288 ;;      Totals:         0       6       0       0
  3289 ;;Total ram usage:        6 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    5
  3292 ;; This function calls:
  3293 ;;		_getAD
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _getCDS_AD
  3301  0FD6                     _getCDS_AD:	
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3305                           ;getCDS_AD@channel1 stored from wreg
  3306  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  3307  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  3308  0FD8  00D9               	movwf	getCDS_AD@channel1
  3309                           
  3310                           ;CDS_B1.c: 46: char i = 0, j = 0;
  3311  0FD9  01D7               	clrf	getCDS_AD@i
  3312  0FDA  01D8               	clrf	getCDS_AD@j
  3313                           
  3314                           ;CDS_B1.c: 47: if (_CDS.ADtoGO == 1) {
  3315  0FDB  1DAB               	btfss	__CDS,3
  3316  0FDC  0008               	return
  3317                           
  3318                           ;CDS_B1.c: 48: _CDS.GO = 1;
  3319  0FDD  14AB               	bsf	__CDS,1
  3320                           
  3321                           ;CDS_B1.c: 49: _CDS.ADRES = getAD(channel1, 0x70);
  3322  0FDE  3070               	movlw	112
  3323  0FDF  00D5               	movwf	??_getCDS_AD
  3324  0FE0  0855               	movf	??_getCDS_AD,w
  3325  0FE1  00D2               	movwf	getAD@adcon1
  3326  0FE2  0859               	movf	getCDS_AD@channel1,w
  3327  0FE3  158A  2750  158A   	fcall	_getAD
  3328  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0FE8  00D6               	movwf	??_getCDS_AD+1
  3331  0FE9  0856               	movf	??_getCDS_AD+1,w
  3332  0FEA  00AF               	movwf	__CDS+4
  3333                           
  3334                           ;CDS_B1.c: 50: _CDS.VRAD = _CDS.ADRES;
  3335  0FEB  082F               	movf	__CDS+4,w
  3336  0FEC  00D5               	movwf	??_getCDS_AD
  3337  0FED  0855               	movf	??_getCDS_AD,w
  3338  0FEE  00AD               	movwf	__CDS+2
  3339                           
  3340                           ;CDS_B1.c: 51: _CDS.ADRES = getAD(channel2, 0x70);
  3341  0FEF  3070               	movlw	112
  3342  0FF0  00D5               	movwf	??_getCDS_AD
  3343  0FF1  0855               	movf	??_getCDS_AD,w
  3344  0FF2  00D2               	movwf	getAD@adcon1
  3345  0FF3  0854               	movf	getCDS_AD@channel2,w
  3346  0FF4  158A  2750         	fcall	_getAD
  3347  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0FF8  00D6               	movwf	??_getCDS_AD+1
  3350  0FF9  0856               	movf	??_getCDS_AD+1,w
  3351  0FFA  00AF               	movwf	__CDS+4
  3352                           
  3353                           ;CDS_B1.c: 52: _CDS.SignalAD = _CDS.ADRES;
  3354  0FFB  082F               	movf	__CDS+4,w
  3355  0FFC  00D5               	movwf	??_getCDS_AD
  3356  0FFD  0855               	movf	??_getCDS_AD,w
  3357  0FFE  00AE               	movwf	__CDS+3
  3358  0FFF  0008               	return
  3359  1000                     __end_of_getCDS_AD:	
  3360                           
  3361                           	psect	text9
  3362  0F50                     __ptext9:	
  3363 ;; *************** function _getAD *****************
  3364 ;; Defined at:
  3365 ;;		line 427 in file "../src/MCU_B1.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  adcon0          1    wreg     unsigned char 
  3368 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      unsigned char 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3380 ;;      Params:         0       1       0       0
  3381 ;;      Locals:         0       1       0       0
  3382 ;;      Temps:          0       0       0       0
  3383 ;;      Totals:         0       2       0       0
  3384 ;;Total ram usage:        2 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    4
  3387 ;; This function calls:
  3388 ;;		_Timeout_Counter
  3389 ;;		_set_TimeoutCleared
  3390 ;; This function is called by:
  3391 ;;		_getCDS_AD
  3392 ;;		_getTemp_AD
  3393 ;;		_getPIR_AD
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           
  3398                           ;psect for function _getAD
  3399  0F50                     _getAD:	
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3403                           ;getAD@adcon0 stored from wreg
  3404  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0F52  00D3               	movwf	getAD@adcon0
  3407                           
  3408                           ;MCU_B1.c: 428: ADCON0 = adcon0;
  3409  0F53  0853               	movf	getAD@adcon0,w
  3410  0F54  009F               	movwf	31	;volatile
  3411                           
  3412                           ;MCU_B1.c: 429: ADCON1 = adcon1;
  3413  0F55  0852               	movf	getAD@adcon1,w
  3414  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  3415  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  3416  0F58  009F               	movwf	31	;volatile
  3417                           
  3418                           ;MCU_B1.c: 430: GO_nDONE = 1;
  3419  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0F5B  149F               	bsf	31,1	;volatile
  3422                           
  3423                           ;MCU_B1.c: 431: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3424  0F5C  2F60               	goto	l3994
  3425  0F5D                     l3992:	
  3426                           
  3427                           ;MCU_B1.c: 432: Timeout_Counter();
  3428  0F5D  158A  26C1  158A   	fcall	_Timeout_Counter
  3429  0F60                     l3994:	
  3430  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0F62  1C9F               	btfss	31,1	;volatile
  3433  0F63  2F66               	goto	l3998
  3434  0F64  1D23               	btfss	_myMain+3,2
  3435  0F65  2F5D               	goto	l3992
  3436  0F66                     l3998:	
  3437                           
  3438                           ;MCU_B1.c: 433: };
  3439                           ;MCU_B1.c: 434: set_TimeoutCleared();
  3440  0F66  158A  259E         	fcall	_set_TimeoutCleared
  3441                           
  3442                           ;MCU_B1.c: 435: return ADRES;
  3443  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0F6A  081E               	movf	30,w	;volatile
  3446  0F6B  0008               	return
  3447  0F6C                     __end_of_getAD:	
  3448                           
  3449                           	psect	text10
  3450  0D9E                     __ptext10:	
  3451 ;; *************** function _set_TimeoutCleared *****************
  3452 ;; Defined at:
  3453 ;;		line 278 in file "../src/Main_B1.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;		None               void
  3460 ;; Registers used:
  3461 ;;		status,2
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3467 ;;      Params:         0       0       0       0
  3468 ;;      Locals:         0       0       0       0
  3469 ;;      Temps:          0       0       0       0
  3470 ;;      Totals:         0       0       0       0
  3471 ;;Total ram usage:        0 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_getAD
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           
  3482                           ;psect for function _set_TimeoutCleared
  3483  0D9E                     _set_TimeoutCleared:	
  3484                           
  3485                           ;Main_B1.c: 279: myMain.Timeout = 0;
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in _set_TimeoutCleared: [status,2]
  3489  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0DA0  1123               	bcf	_myMain+3,2
  3492                           
  3493                           ;Main_B1.c: 280: myMain.Timeout_Counter = 0;
  3494  0DA1  01A4               	clrf	_myMain+4
  3495  0DA2  01A5               	clrf	_myMain+5
  3496  0DA3  0008               	return
  3497  0DA4                     __end_of_set_TimeoutCleared:	
  3498                           
  3499                           	psect	text11
  3500  0EC1                     __ptext11:	
  3501 ;; *************** function _Timeout_Counter *****************
  3502 ;; Defined at:
  3503 ;;		line 269 in file "../src/Main_B1.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;		None               void
  3510 ;; Registers used:
  3511 ;;		wreg, status,2
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3517 ;;      Params:         0       0       0       0
  3518 ;;      Locals:         0       0       0       0
  3519 ;;      Temps:          0       0       0       0
  3520 ;;      Totals:         0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    3
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_getAD
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           
  3532                           ;psect for function _Timeout_Counter
  3533  0EC1                     _Timeout_Counter:	
  3534                           
  3535                           ;Main_B1.c: 270: myMain.Timeout_Counter++;
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3539  0EC1  3001               	movlw	1
  3540  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0EC4  07A4               	addwf	_myMain+4,f
  3543  0EC5  1803               	skipnc
  3544  0EC6  0AA5               	incf	_myMain+5,f
  3545  0EC7  3000               	movlw	0
  3546  0EC8  07A5               	addwf	_myMain+5,f
  3547                           
  3548                           ;Main_B1.c: 271: if (myMain.Timeout_Counter == 10000) {
  3549  0EC9  3027               	movlw	39
  3550  0ECA  0625               	xorwf	_myMain+5,w
  3551  0ECB  1D03               	skipz
  3552  0ECC  2ECF               	goto	u3995
  3553  0ECD  3010               	movlw	16
  3554  0ECE  0624               	xorwf	_myMain+4,w
  3555  0ECF                     u3995:	
  3556  0ECF  1D03               	skipz
  3557  0ED0  0008               	return
  3558                           
  3559                           ;Main_B1.c: 272: myMain.Timeout_Counter = 0;
  3560  0ED1  01A4               	clrf	_myMain+4
  3561  0ED2  01A5               	clrf	_myMain+5
  3562                           
  3563                           ;Main_B1.c: 273: myMain.Timeout = 1;
  3564  0ED3  1523               	bsf	_myMain+3,2
  3565  0ED4  0008               	return
  3566  0ED5                     __end_of_Timeout_Counter:	
  3567                           
  3568                           	psect	text12
  3569  0E53                     __ptext12:	
  3570 ;; *************** function _WDT_Main *****************
  3571 ;; Defined at:
  3572 ;;		line 1056 in file "../src/MCU_B1.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, pclath, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3586 ;;      Params:         0       0       0       0
  3587 ;;      Locals:         0       0       0       0
  3588 ;;      Temps:          0       1       0       0
  3589 ;;      Totals:         0       1       0       0
  3590 ;;Total ram usage:        1 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    4
  3593 ;; This function calls:
  3594 ;;		_WDT_Clearing
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _WDT_Main
  3602  0E53                     _WDT_Main:	
  3603                           
  3604                           ;MCU_B1.c: 1057: if (WDT.Enable == 1) {
  3605                           
  3606                           ;incstack = 0
  3607                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3608  0E53  1C77               	btfss	_WDT,0
  3609  0E54  0008               	return
  3610                           
  3611                           ;MCU_B1.c: 1058: if (WDT.Timer-- > 0) {
  3612  0E55  3001               	movlw	1
  3613  0E56  02F8               	subwf	_WDT+1,f
  3614  0E57  0878               	movf	_WDT+1,w
  3615  0E58  3AFF               	xorlw	255
  3616  0E59  1903               	skipnz
  3617  0E5A  0008               	return
  3618                           
  3619                           ;MCU_B1.c: 1059: WDT.Timer = 100;
  3620  0E5B  3064               	movlw	100
  3621  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0E5E  00D2               	movwf	??_WDT_Main
  3624  0E5F  0852               	movf	??_WDT_Main,w
  3625  0E60  00F8               	movwf	_WDT+1
  3626                           
  3627                           ;MCU_B1.c: 1060: WDT_Clearing();
  3628  0E61  118A  2002         	fcall	_WDT_Clearing
  3629  0E63  0008               	return
  3630  0E64                     __end_of_WDT_Main:	
  3631                           
  3632                           	psect	text13
  3633  0002                     __ptext13:	
  3634 ;; *************** function _WDT_Clearing *****************
  3635 ;; Defined at:
  3636 ;;		line 1066 in file "../src/MCU_B1.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;		None               void
  3643 ;; Registers used:
  3644 ;;		None
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3650 ;;      Params:         0       0       0       0
  3651 ;;      Locals:         0       0       0       0
  3652 ;;      Temps:          0       0       0       0
  3653 ;;      Totals:         0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    3
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_WDT_Main
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           
  3665                           ;psect for function _WDT_Clearing
  3666  0002                     _WDT_Clearing:	
  3667                           
  3668                           ;incstack = 0
  3669                           ; Regs used in _WDT_Clearing: []
  3670  0002  0064               	clrwdt	;# 
  3671  0003  0008               	return
  3672  0004                     __end_of_WDT_Clearing:	
  3673                           
  3674                           	psect	text14
  3675  0E23                     __ptext14:	
  3676 ;; *************** function _UART_Main *****************
  3677 ;; Defined at:
  3678 ;;		line 756 in file "../src/MCU_B1.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;		None               void
  3685 ;; Registers used:
  3686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3692 ;;      Params:         0       0       0       0
  3693 ;;      Locals:         0       0       0       0
  3694 ;;      Temps:          0       0       0       0
  3695 ;;      Totals:         0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    5
  3699 ;; This function calls:
  3700 ;;		_UART_Receive
  3701 ;;		_UART_Transmit
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _UART_Main
  3709  0E23                     _UART_Main:	
  3710                           
  3711                           ;MCU_B1.c: 757: if (UART.RxGO == 1) {
  3712                           
  3713                           ;incstack = 0
  3714                           ; Regs used in _UART_Main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3715  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  3716  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  3717  0E25  1CDA               	btfss	(_UART^(0+128)+11),1
  3718  0E26  2E2B               	goto	l490
  3719                           
  3720                           ;MCU_B1.c: 758: UART.RxGO = 0;
  3721  0E27  10DA               	bcf	(_UART^(0+128)+11),1
  3722                           
  3723                           ;MCU_B1.c: 759: UART_Receive();
  3724  0E28  158A  258F         	fcall	_UART_Receive
  3725                           
  3726                           ;MCU_B1.c: 760: ;;
  3727                           ;MCU_B1.c: 763: } else {
  3728  0E2A  0008               	return
  3729  0E2B                     l490:	
  3730                           
  3731                           ;MCU_B1.c: 764: if (UART.TxGO == 1) {
  3732  0E2B  1C5A               	btfss	(_UART^(0+128)+11),0
  3733  0E2C  0008               	return
  3734                           
  3735                           ;MCU_B1.c: 765: UART.TxGO = 0;
  3736  0E2D  105A               	bcf	(_UART^(0+128)+11),0
  3737                           
  3738                           ;MCU_B1.c: 766: UART_Transmit();
  3739  0E2E  158A  278C         	fcall	_UART_Transmit
  3740  0E30  0008               	return
  3741  0E31                     __end_of_UART_Main:	
  3742                           
  3743                           	psect	text15
  3744  0F8C                     __ptext15:	
  3745 ;; *************** function _UART_Transmit *****************
  3746 ;; Defined at:
  3747 ;;		line 771 in file "../src/MCU_B1.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  i               2    1[BANK0 ] int 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3761 ;;      Params:         0       0       0       0
  3762 ;;      Locals:         0       2       0       0
  3763 ;;      Temps:          0       0       0       0
  3764 ;;      Totals:         0       2       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    4
  3768 ;; This function calls:
  3769 ;;		_putch
  3770 ;; This function is called by:
  3771 ;;		_UART_Main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _UART_Transmit
  3777  0F8C                     _UART_Transmit:	
  3778                           
  3779                           ;MCU_B1.c: 774: for (int i = 0; i < 8; i++) {
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _UART_Transmit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3783  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  3785  0F8E  01D3               	clrf	UART_Transmit@i
  3786  0F8F  01D4               	clrf	UART_Transmit@i+1
  3787  0F90                     L6:	
  3788  0F90  0854               	movf	UART_Transmit@i+1,w
  3789  0F91  3A80               	xorlw	128
  3790  0F92  00FF               	movwf	127
  3791  0F93  3080               	movlw	128
  3792  0F94  027F               	subwf	127,w
  3793  0F95  1D03               	skipz
  3794  0F96  2F99               	goto	u4295
  3795  0F97  3008               	movlw	8
  3796  0F98  0253               	subwf	UART_Transmit@i,w
  3797  0F99                     u4295:	
  3798  0F99  1803               	btfsc	3,0
  3799  0F9A  0008               	return
  3800                           
  3801                           ;MCU_B1.c: 776: putch(UART.Data[i]);
  3802  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0F9D  0853               	movf	UART_Transmit@i,w
  3805  0F9E  3ECF               	addlw	_UART& (0+255)
  3806  0F9F  0084               	movwf	4
  3807  0FA0  1383               	bcf	3,7	;select IRP bank1
  3808  0FA1  0800               	movf	0,w
  3809  0FA2  158A  25BA  158A   	fcall	_putch
  3810  0FA5  3001               	movlw	1
  3811  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3812  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0FA8  07D3               	addwf	UART_Transmit@i,f
  3814  0FA9  1803               	skipnc
  3815  0FAA  0AD4               	incf	UART_Transmit@i+1,f
  3816  0FAB  3000               	movlw	0
  3817  0FAC  07D4               	addwf	UART_Transmit@i+1,f
  3818  0FAD  2F90               	goto	L6
  3819  0FAE                     __end_of_UART_Transmit:	
  3820                           
  3821                           	psect	text16
  3822  0DBA                     __ptext16:	
  3823 ;; *************** function _putch *****************
  3824 ;; Defined at:
  3825 ;;		line 854 in file "../src/MCU_B1.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  byte            1    wreg     unsigned char 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  byte            1    0[BANK0 ] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;		None               void
  3832 ;; Registers used:
  3833 ;;		wreg
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3839 ;;      Params:         0       0       0       0
  3840 ;;      Locals:         0       1       0       0
  3841 ;;      Temps:          0       0       0       0
  3842 ;;      Totals:         0       1       0       0
  3843 ;;Total ram usage:        1 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    3
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_UART_Transmit
  3850 ;;		_getche
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _putch
  3856  0DBA                     _putch:	
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _putch: [wreg]
  3860                           ;putch@byte stored from wreg
  3861  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  3862  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  3863  0DBC  00D2               	movwf	putch@byte
  3864  0DBD                     l508:	
  3865                           ;MCU_B1.c: 857: continue;
  3866                           
  3867                           ;MCU_B1.c: 856: while (!TXIF)
  3868                           
  3869  0DBD  1E0C               	btfss	12,4	;volatile
  3870  0DBE  2DBD               	goto	l508
  3871                           
  3872                           ;MCU_B1.c: 858: TXREG = byte;
  3873  0DBF  0852               	movf	putch@byte,w
  3874  0DC0  0099               	movwf	25	;volatile
  3875  0DC1  0008               	return
  3876  0DC2                     __end_of_putch:	
  3877                           
  3878                           	psect	text17
  3879  0D8F                     __ptext17:	
  3880 ;; *************** function _UART_Receive *****************
  3881 ;; Defined at:
  3882 ;;		line 790 in file "../src/MCU_B1.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;		None               void
  3889 ;; Registers used:
  3890 ;;		None
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3896 ;;      Params:         0       0       0       0
  3897 ;;      Locals:         0       0       0       0
  3898 ;;      Temps:          0       0       0       0
  3899 ;;      Totals:         0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_UART_Main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           
  3911                           ;psect for function _UART_Receive
  3912  0D8F                     _UART_Receive:	
  3913                           
  3914                           ;MCU_B1.c: 812: myMain.Test = 1;
  3915                           
  3916                           ;incstack = 0
  3917                           ; Regs used in _UART_Receive: []
  3918  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0D91  1720               	bsf	_myMain,6
  3921  0D92  0008               	return
  3922  0D93                     __end_of_UART_Receive:	
  3923                           
  3924                           	psect	text18
  3925  0D80                     __ptext18:	
  3926 ;; *************** function _Temp_Main *****************
  3927 ;; Defined at:
  3928 ;;		line 50 in file "../src/OverTemperature_B1.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;		None               void
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3942 ;;      Params:         0       0       0       0
  3943 ;;      Locals:         0       0       0       0
  3944 ;;      Temps:          0       0       0       0
  3945 ;;      Totals:         0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    7
  3949 ;; This function calls:
  3950 ;;		_setTemp_Main
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _Temp_Main
  3958  0D80                     _Temp_Main:	
  3959                           
  3960                           ;OverTemperature_B1.c: 52: setTemp_Main();
  3961                           
  3962                           ;incstack = 0
  3963                           ; Regs used in _Temp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3964  0D80  118A  2354         	fcall	_setTemp_Main
  3965  0D82  0008               	return
  3966  0D83                     __end_of_Temp_Main:	
  3967                           
  3968                           	psect	text19
  3969  0354                     __ptext19:	
  3970 ;; *************** function _setTemp_Main *****************
  3971 ;; Defined at:
  3972 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;		None               void
  3979 ;; Registers used:
  3980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3986 ;;      Params:         0       0       0       0
  3987 ;;      Locals:         0       0       0       0
  3988 ;;      Temps:          0       1       0       0
  3989 ;;      Totals:         0       1       0       0
  3990 ;;Total ram usage:        1 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    6
  3993 ;; This function calls:
  3994 ;;		_getMain_All_Error_Status
  3995 ;;		_getMain_LightsStatus
  3996 ;; This function is called by:
  3997 ;;		_Temp_Main
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function _setTemp_Main
  4003  0354                     _setTemp_Main:	
  4004                           
  4005                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  4006                           
  4007                           ;incstack = 0
  4008                           ; Regs used in _setTemp_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4009  0354  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0355  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0356  1C3A               	btfss	_Temp,0
  4012  0357  2BD3               	goto	l793
  4013                           
  4014                           ;OverTemperature_B1.c: 59: if (Temp.ADtoGO == 0) {
  4015  0358  193A               	btfsc	_Temp,2
  4016  0359  2B6B               	goto	l4148
  4017                           
  4018                           ;OverTemperature_B1.c: 60: Temp.Time++;
  4019  035A  3001               	movlw	1
  4020  035B  07BB               	addwf	_Temp+1,f
  4021  035C  1803               	skipnc
  4022  035D  0ABC               	incf	_Temp+2,f
  4023  035E  3000               	movlw	0
  4024  035F  07BC               	addwf	_Temp+2,f
  4025                           
  4026                           ;OverTemperature_B1.c: 61: if (Temp.Time >= 500) {
  4027  0360  3001               	movlw	1
  4028  0361  023C               	subwf	_Temp+2,w
  4029  0362  30F4               	movlw	244
  4030  0363  1903               	skipnz
  4031  0364  023B               	subwf	_Temp+1,w
  4032  0365  1C03               	skipc
  4033  0366  0008               	return
  4034                           
  4035                           ;OverTemperature_B1.c: 62: Temp.Time = 0;
  4036  0367  01BB               	clrf	_Temp+1
  4037  0368  01BC               	clrf	_Temp+2
  4038                           
  4039                           ;OverTemperature_B1.c: 63: Temp.ADtoGO = 1;
  4040  0369  153A               	bsf	_Temp,2
  4041                           
  4042                           ;OverTemperature_B1.c: 64: }
  4043                           ;OverTemperature_B1.c: 65: } else {
  4044  036A  0008               	return
  4045  036B                     l4148:	
  4046                           
  4047                           ;OverTemperature_B1.c: 66: if (getMain_All_Error_Status(2) == 0) {
  4048  036B  3002               	movlw	2
  4049  036C  118A  265F  118A   	fcall	_getMain_All_Error_Status
  4050  036F  3800               	iorlw	0
  4051  0370  1D03               	skipz
  4052  0371  0008               	return
  4053                           
  4054                           ;OverTemperature_B1.c: 67: Temp.Time++;
  4055  0372  3001               	movlw	1
  4056  0373  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0374  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0375  07BB               	addwf	_Temp+1,f
  4059  0376  1803               	skipnc
  4060  0377  0ABC               	incf	_Temp+2,f
  4061  0378  3000               	movlw	0
  4062  0379  07BC               	addwf	_Temp+2,f
  4063                           
  4064                           ;OverTemperature_B1.c: 68: if (Temp.Time >= 5) {
  4065  037A  3000               	movlw	0
  4066  037B  023C               	subwf	_Temp+2,w
  4067  037C  3005               	movlw	5
  4068  037D  1903               	skipnz
  4069  037E  023B               	subwf	_Temp+1,w
  4070  037F  1C03               	skipc
  4071  0380  0008               	return
  4072                           
  4073                           ;OverTemperature_B1.c: 69: Temp.Time = 0;
  4074  0381  01BB               	clrf	_Temp+1
  4075  0382  01BC               	clrf	_Temp+2
  4076                           
  4077                           ;OverTemperature_B1.c: 70: if (Temp.GO == 1) {
  4078  0383  1E3A               	btfss	_Temp,4
  4079  0384  0008               	return
  4080                           
  4081                           ;OverTemperature_B1.c: 71: Temp.ADtoGO = 0;
  4082  0385  113A               	bcf	_Temp,2
  4083                           
  4084                           ;OverTemperature_B1.c: 73: Temp.AD = Temp.ADH[0];
  4085  0386  0841               	movf	_Temp+7,w
  4086  0387  00DB               	movwf	??_setTemp_Main
  4087  0388  085B               	movf	??_setTemp_Main,w
  4088  0389  00C0               	movwf	_Temp+6
  4089                           
  4090                           ;OverTemperature_B1.c: 75: if (getMain_LightsStatus() == 1) {
  4091  038A  118A  278A  118A   	fcall	_getMain_LightsStatus
  4092  038D  3A01               	xorlw	1
  4093  038E  1D03               	skipz
  4094  038F  2B98               	goto	l4164
  4095                           
  4096                           ;OverTemperature_B1.c: 76: Temp.SafeValue = 140;
  4097  0390  308C               	movlw	140
  4098  0391  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0392  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0393  00DB               	movwf	??_setTemp_Main
  4101  0394  085B               	movf	??_setTemp_Main,w
  4102  0395  00C4               	movwf	_Temp+10
  4103                           
  4104                           ;OverTemperature_B1.c: 77: Temp.DangerValue = 100;
  4105  0396  3064               	movlw	100
  4106  0397  2B9F               	goto	L7
  4107  0398                     l4164:	
  4108                           ;OverTemperature_B1.c: 78: } else {
  4109                           
  4110                           
  4111                           ;OverTemperature_B1.c: 79: Temp.SafeValue = 100;
  4112  0398  3064               	movlw	100
  4113  0399  1283               	bcf	3,5	;RP0=0, select bank0
  4114  039A  1303               	bcf	3,6	;RP1=0, select bank0
  4115  039B  00DB               	movwf	??_setTemp_Main
  4116  039C  085B               	movf	??_setTemp_Main,w
  4117  039D  00C4               	movwf	_Temp+10
  4118                           
  4119                           ;OverTemperature_B1.c: 80: Temp.DangerValue = 70;
  4120  039E  3046               	movlw	70
  4121  039F                     L7:	
  4122  039F  00DB               	movwf	??_setTemp_Main
  4123  03A0  085B               	movf	??_setTemp_Main,w
  4124  03A1  00C5               	movwf	_Temp+11
  4125                           
  4126                           ;OverTemperature_B1.c: 81: }
  4127                           ;OverTemperature_B1.c: 90: if (Temp.ERROR == 1) {
  4128  03A2  1CBA               	btfss	_Temp,1
  4129  03A3  2BB3               	goto	l4180
  4130                           
  4131                           ;OverTemperature_B1.c: 91: if (Temp.AD >= Temp.SafeValue) {
  4132  03A4  0844               	movf	_Temp+10,w
  4133  03A5  0240               	subwf	_Temp+6,w
  4134  03A6  1C03               	skipc
  4135  03A7  2BC2               	goto	l4190
  4136                           
  4137                           ;OverTemperature_B1.c: 92: Temp.Count++;
  4138  03A8  3001               	movlw	1
  4139  03A9  00DB               	movwf	??_setTemp_Main
  4140  03AA  085B               	movf	??_setTemp_Main,w
  4141  03AB  07BD               	addwf	_Temp+3,f
  4142                           
  4143                           ;OverTemperature_B1.c: 93: if (Temp.Count >= 3) {
  4144  03AC  3003               	movlw	3
  4145  03AD  023D               	subwf	_Temp+3,w
  4146  03AE  1C03               	skipc
  4147  03AF  2BC3               	goto	l806
  4148                           
  4149                           ;OverTemperature_B1.c: 94: Temp.Count = 0;
  4150  03B0  01BD               	clrf	_Temp+3
  4151                           
  4152                           ;OverTemperature_B1.c: 95: Temp.ERROR = 0;
  4153  03B1  10BA               	bcf	_Temp,1
  4154                           
  4155                           ;OverTemperature_B1.c: 97: }
  4156                           ;OverTemperature_B1.c: 98: } else {
  4157                           
  4158                           ;OverTemperature_B1.c: 96: ;;
  4159  03B2  2BC3               	goto	l806
  4160  03B3                     l4180:	
  4161                           ;OverTemperature_B1.c: 100: }
  4162                           ;OverTemperature_B1.c: 101: } else {
  4163                           
  4164                           ;OverTemperature_B1.c: 99: Temp.Count = 0;
  4165                           
  4166                           
  4167                           ;OverTemperature_B1.c: 102: if (Temp.AD <= Temp.DangerValue) {
  4168  03B3  0840               	movf	_Temp+6,w
  4169  03B4  0245               	subwf	_Temp+11,w
  4170  03B5  1C03               	skipc
  4171  03B6  2BC2               	goto	l4190
  4172                           
  4173                           ;OverTemperature_B1.c: 103: Temp.Count++;
  4174  03B7  3001               	movlw	1
  4175  03B8  00DB               	movwf	??_setTemp_Main
  4176  03B9  085B               	movf	??_setTemp_Main,w
  4177  03BA  07BD               	addwf	_Temp+3,f
  4178                           
  4179                           ;OverTemperature_B1.c: 104: if (Temp.Count >= 3) {
  4180  03BB  3003               	movlw	3
  4181  03BC  023D               	subwf	_Temp+3,w
  4182  03BD  1C03               	skipc
  4183  03BE  2BC3               	goto	l806
  4184                           
  4185                           ;OverTemperature_B1.c: 105: Temp.Count = 0;
  4186  03BF  01BD               	clrf	_Temp+3
  4187                           
  4188                           ;OverTemperature_B1.c: 106: Temp.ERROR = 1;
  4189  03C0  14BA               	bsf	_Temp,1
  4190                           
  4191                           ;OverTemperature_B1.c: 107: }
  4192                           ;OverTemperature_B1.c: 108: } else {
  4193  03C1  2BC3               	goto	l806
  4194  03C2                     l4190:	
  4195                           
  4196                           ;OverTemperature_B1.c: 109: Temp.Count = 0;
  4197  03C2  01BD               	clrf	_Temp+3
  4198  03C3                     l806:	
  4199                           
  4200                           ;OverTemperature_B1.c: 110: }
  4201                           ;OverTemperature_B1.c: 111: }
  4202                           ;OverTemperature_B1.c: 112: ;;
  4203                           ;OverTemperature_B1.c: 113: ;;
  4204                           ;OverTemperature_B1.c: 116: UART.Data[0] = (Temp.AD >> 8);
  4205  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  4206  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  4207  03C5  01CF               	clrf	_UART^(0+128)
  4208                           
  4209                           ;OverTemperature_B1.c: 117: UART.Data[1] = Temp.AD;
  4210  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  4211  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  4212  03C8  0840               	movf	_Temp+6,w
  4213  03C9  00DB               	movwf	??_setTemp_Main
  4214  03CA  085B               	movf	??_setTemp_Main,w
  4215  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  4216  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  4217  03CD  00D0               	movwf	(_UART^(0+128)+1)
  4218                           
  4219                           ;OverTemperature_B1.c: 125: Temp.ADH[0] = 0;
  4220  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4221  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  4222  03D0  01C1               	clrf	_Temp+7
  4223                           
  4224                           ;OverTemperature_B1.c: 126: Temp.ADH[1] = 0;
  4225  03D1  01C2               	clrf	_Temp+8
  4226                           
  4227                           ;OverTemperature_B1.c: 127: }
  4228                           ;OverTemperature_B1.c: 128: }
  4229                           ;OverTemperature_B1.c: 129: }
  4230                           ;OverTemperature_B1.c: 130: }
  4231                           ;OverTemperature_B1.c: 131: } else {
  4232  03D2  0008               	return
  4233  03D3                     l793:	
  4234                           
  4235                           ;OverTemperature_B1.c: 132: if (myMain.PowerON == 1) {
  4236  03D3  1C20               	btfss	_myMain,0
  4237  03D4  0008               	return
  4238                           
  4239                           ;OverTemperature_B1.c: 133: Temp.Enable = 1;
  4240  03D5  143A               	bsf	_Temp,0
  4241  03D6  0008               	return
  4242  03D7                     __end_of_setTemp_Main:	
  4243                           
  4244                           	psect	text20
  4245  0D7D                     __ptext20:	
  4246 ;; *************** function _Temp_Initialization *****************
  4247 ;; Defined at:
  4248 ;;		line 8 in file "../src/OverTemperature_B1.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4262 ;;      Params:         0       0       0       0
  4263 ;;      Locals:         0       0       0       0
  4264 ;;      Temps:          0       0       0       0
  4265 ;;      Totals:         0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    4
  4269 ;; This function calls:
  4270 ;;		_setTemp_Initialization
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _Temp_Initialization
  4278  0D7D                     _Temp_Initialization:	
  4279                           
  4280                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  4284  0D7D  158A  2572         	fcall	_setTemp_Initialization
  4285  0D7F  0008               	return
  4286  0D80                     __end_of_Temp_Initialization:	
  4287                           
  4288                           	psect	text21
  4289  0D72                     __ptext21:	
  4290 ;; *************** function _setTemp_Initialization *****************
  4291 ;; Defined at:
  4292 ;;		line 45 in file "../src/OverTemperature_B1.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;		None               void
  4299 ;; Registers used:
  4300 ;;		None
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4306 ;;      Params:         0       0       0       0
  4307 ;;      Locals:         0       0       0       0
  4308 ;;      Temps:          0       0       0       0
  4309 ;;      Totals:         0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    3
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_Temp_Initialization
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function _setTemp_Initialization
  4322  0D72                     _setTemp_Initialization:	
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _setTemp_Initialization: []
  4326  0D72  0008               	return
  4327  0D73                     __end_of_setTemp_Initialization:	
  4328                           
  4329                           	psect	text22
  4330  0D7A                     __ptext22:	
  4331 ;; *************** function _SYSC_Main *****************
  4332 ;; Defined at:
  4333 ;;		line 17 in file "../src/SYSC_B1.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;		None
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0, pclath, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4347 ;;      Params:         0       0       0       0
  4348 ;;      Locals:         0       0       0       0
  4349 ;;      Temps:          0       0       0       0
  4350 ;;      Totals:         0       0       0       0
  4351 ;;Total ram usage:        0 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    6
  4354 ;; This function calls:
  4355 ;;		_setSYSC_Main
  4356 ;; This function is called by:
  4357 ;;		_main
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           
  4362                           ;psect for function _SYSC_Main
  4363  0D7A                     _SYSC_Main:	
  4364                           
  4365                           ;SYSC_B1.c: 19: setSYSC_Main();
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _SYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4369  0D7A  118A  261D         	fcall	_setSYSC_Main
  4370  0D7C  0008               	return
  4371  0D7D                     __end_of_SYSC_Main:	
  4372                           
  4373                           	psect	text23
  4374  061D                     __ptext23:	
  4375 ;; *************** function _setSYSC_Main *****************
  4376 ;; Defined at:
  4377 ;;		line 23 in file "../src/SYSC_B1.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;		None               void
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4391 ;;      Params:         0       0       0       0
  4392 ;;      Locals:         0       0       0       0
  4393 ;;      Temps:          0       0       0       0
  4394 ;;      Totals:         0       0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    5
  4398 ;; This function calls:
  4399 ;;		_getMain_All_Error_Status
  4400 ;; This function is called by:
  4401 ;;		_SYSC_Main
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           
  4406                           ;psect for function _setSYSC_Main
  4407  061D                     _setSYSC_Main:	
  4408                           
  4409                           ;SYSC_B1.c: 25: if (SYSC.Enable == 1) {
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _setSYSC_Main: [wreg+status,2+status,0+pclath+cstack]
  4413  061D  1283               	bcf	3,5	;RP0=0, select bank0
  4414  061E  1303               	bcf	3,6	;RP1=0, select bank0
  4415  061F  1C26               	btfss	_SYSC,0
  4416  0620  0008               	return
  4417                           
  4418                           ;SYSC_B1.c: 26: if (SYSC.ERROR == 0) {
  4419  0621  18A6               	btfsc	_SYSC,1
  4420  0622  2E34               	goto	l4212
  4421                           
  4422                           ;SYSC_B1.c: 27: SYSC.Timer++;
  4423  0623  3001               	movlw	1
  4424  0624  07A7               	addwf	_SYSC+1,f
  4425  0625  1803               	skipnc
  4426  0626  0AA8               	incf	_SYSC+2,f
  4427  0627  3000               	movlw	0
  4428  0628  07A8               	addwf	_SYSC+2,f
  4429                           
  4430                           ;SYSC_B1.c: 28: if (SYSC.Timer >= 16)
  4431  0629  3000               	movlw	0
  4432  062A  0228               	subwf	_SYSC+2,w
  4433  062B  3010               	movlw	16
  4434  062C  1903               	skipnz
  4435  062D  0227               	subwf	_SYSC+1,w
  4436  062E  1C03               	skipc
  4437  062F  0008               	return
  4438                           
  4439                           ;SYSC_B1.c: 29: {
  4440                           ;SYSC_B1.c: 30: SYSC.Timer = 0;
  4441  0630  01A7               	clrf	_SYSC+1
  4442  0631  01A8               	clrf	_SYSC+2
  4443                           
  4444                           ;SYSC_B1.c: 31: SYSC.ERROR = 1;
  4445  0632  14A6               	bsf	_SYSC,1
  4446                           
  4447                           ;SYSC_B1.c: 32: }
  4448                           ;SYSC_B1.c: 33: } else {
  4449  0633  0008               	return
  4450  0634                     l4212:	
  4451                           
  4452                           ;SYSC_B1.c: 34: if (getMain_All_Error_Status(1) == 0) {
  4453  0634  3001               	movlw	1
  4454  0635  118A  265F  118A   	fcall	_getMain_All_Error_Status
  4455  0638  3800               	iorlw	0
  4456  0639  1D03               	skipz
  4457  063A  0008               	return
  4458                           
  4459                           ;SYSC_B1.c: 35: SYSC.Timer++;
  4460  063B  3001               	movlw	1
  4461  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4462  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4463  063E  07A7               	addwf	_SYSC+1,f
  4464  063F  1803               	skipnc
  4465  0640  0AA8               	incf	_SYSC+2,f
  4466  0641  3000               	movlw	0
  4467  0642  07A8               	addwf	_SYSC+2,f
  4468                           
  4469                           ;SYSC_B1.c: 36: if (SYSC.Timer == 50) {
  4470  0643  3032               	movlw	50
  4471  0644  0627               	xorwf	_SYSC+1,w
  4472  0645  0428               	iorwf	_SYSC+2,w
  4473  0646  1D03               	skipz
  4474  0647  2E4D               	goto	l4218
  4475                           
  4476                           ;SYSC_B1.c: 37: SYSC.Timer = 0;
  4477  0648  01A7               	clrf	_SYSC+1
  4478  0649  01A8               	clrf	_SYSC+2
  4479                           
  4480                           ;SYSC_B1.c: 38: SYSC.Counter = 0;
  4481  064A  01A9               	clrf	_SYSC+3
  4482  064B  01AA               	clrf	_SYSC+4
  4483                           
  4484                           ;SYSC_B1.c: 39: } else {
  4485  064C  0008               	return
  4486  064D                     l4218:	
  4487                           
  4488                           ;SYSC_B1.c: 40: SYSC.Counter++;
  4489  064D  3001               	movlw	1
  4490  064E  07A9               	addwf	_SYSC+3,f
  4491  064F  1803               	skipnc
  4492  0650  0AAA               	incf	_SYSC+4,f
  4493  0651  3000               	movlw	0
  4494  0652  07AA               	addwf	_SYSC+4,f
  4495                           
  4496                           ;SYSC_B1.c: 41: if (SYSC.Counter == 1000) {
  4497  0653  3003               	movlw	3
  4498  0654  062A               	xorwf	_SYSC+4,w
  4499  0655  1D03               	skipz
  4500  0656  2E59               	goto	u4545
  4501  0657  30E8               	movlw	232
  4502  0658  0629               	xorwf	_SYSC+3,w
  4503  0659                     u4545:	
  4504  0659  1D03               	skipz
  4505  065A  0008               	return
  4506                           
  4507                           ;SYSC_B1.c: 42: SYSC.Counter = 0;
  4508  065B  01A9               	clrf	_SYSC+3
  4509  065C  01AA               	clrf	_SYSC+4
  4510                           
  4511                           ;SYSC_B1.c: 43: SYSC.ERROR = 0;
  4512  065D  10A6               	bcf	_SYSC,1
  4513  065E  0008               	return
  4514  065F                     __end_of_setSYSC_Main:	
  4515                           
  4516                           	psect	text24
  4517  0D77                     __ptext24:	
  4518 ;; *************** function _SYSC_Initialization *****************
  4519 ;; Defined at:
  4520 ;;		line 7 in file "../src/SYSC_B1.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;		None               void
  4527 ;; Registers used:
  4528 ;;		status,2, status,0, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4534 ;;      Params:         0       0       0       0
  4535 ;;      Locals:         0       0       0       0
  4536 ;;      Temps:          0       0       0       0
  4537 ;;      Totals:         0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    4
  4541 ;; This function calls:
  4542 ;;		_setSYSC_Initialization
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _SYSC_Initialization
  4550  0D77                     _SYSC_Initialization:	
  4551                           
  4552                           ;SYSC_B1.c: 9: setSYSC_Initialization();
  4553                           
  4554                           ;incstack = 0
  4555                           ; Regs used in _SYSC_Initialization: [status,2+status,0+pclath+cstack]
  4556  0D77  158A  258B         	fcall	_setSYSC_Initialization
  4557  0D79  0008               	return
  4558  0D7A                     __end_of_SYSC_Initialization:	
  4559                           
  4560                           	psect	text25
  4561  0D8B                     __ptext25:	
  4562 ;; *************** function _setSYSC_Initialization *****************
  4563 ;; Defined at:
  4564 ;;		line 13 in file "../src/SYSC_B1.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;		None
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;		None               void
  4571 ;; Registers used:
  4572 ;;		None
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4578 ;;      Params:         0       0       0       0
  4579 ;;      Locals:         0       0       0       0
  4580 ;;      Temps:          0       0       0       0
  4581 ;;      Totals:         0       0       0       0
  4582 ;;Total ram usage:        0 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    3
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_SYSC_Initialization
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _setSYSC_Initialization
  4594  0D8B                     _setSYSC_Initialization:	
  4595                           
  4596                           ;SYSC_B1.c: 14: SYSC.Enable = 1;
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _setSYSC_Initialization: []
  4600  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0D8D  1426               	bsf	_SYSC,0
  4603  0D8E  0008               	return
  4604  0D8F                     __end_of_setSYSC_Initialization:	
  4605                           
  4606                           	psect	text26
  4607  0025                     __ptext26:	
  4608 ;; *************** function _PIR_Main *****************
  4609 ;; Defined at:
  4610 ;;		line 14 in file "../src/PIR_B1.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  error           1   19[BANK0 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;		None               void
  4617 ;; Registers used:
  4618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4624 ;;      Params:         0       0       0       0
  4625 ;;      Locals:         0       3       0       0
  4626 ;;      Temps:          0       5       0       0
  4627 ;;      Totals:         0       8       0       0
  4628 ;;Total ram usage:        8 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    6
  4631 ;; This function calls:
  4632 ;;		_getLights_Status
  4633 ;;		_getMain_All_Error_Status
  4634 ;;		_setLED
  4635 ;;		_setLights_Trigger
  4636 ;;		_setMain_Exception
  4637 ;; This function is called by:
  4638 ;;		_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function _PIR_Main
  4644  0025                     _PIR_Main:	
  4645                           
  4646                           ;PIR_B1.c: 15: char error = getMain_All_Error_Status(0);
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4650  0025  3000               	movlw	0
  4651  0026  118A  265F  118A   	fcall	_getMain_All_Error_Status
  4652  0029  1283               	bcf	3,5	;RP0=0, select bank0
  4653  002A  1303               	bcf	3,6	;RP1=0, select bank0
  4654  002B  00DE               	movwf	??_PIR_Main
  4655  002C  085E               	movf	??_PIR_Main,w
  4656  002D  00E5               	movwf	PIR_Main@error
  4657                           
  4658                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  4659  002E  1683               	bsf	3,5	;RP0=1, select bank1
  4660  002F  1303               	bcf	3,6	;RP1=0, select bank1
  4661  0030  1C20               	btfss	__PIR^(0+128),0
  4662  0031  2A04               	goto	l864
  4663                           
  4664                           ;PIR_B1.c: 17: if (error == 0) {
  4665  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0033  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0034  08E5               	movf	PIR_Main@error,f
  4668  0035  1D03               	skipz
  4669  0036  2851               	goto	l865
  4670                           
  4671                           ;PIR_B1.c: 18: if (_PIR.Detect == 0) {
  4672  0037  1683               	bsf	3,5	;RP0=1, select bank1
  4673  0038  1303               	bcf	3,6	;RP1=0, select bank1
  4674  0039  1A20               	btfsc	__PIR^(0+128),4
  4675  003A  2883               	goto	l4468
  4676                           
  4677                           ;PIR_B1.c: 19: _PIR.Detect = 1;
  4678  003B  1620               	bsf	__PIR^(0+128),4
  4679                           
  4680                           ;PIR_B1.c: 20: _PIR.Available = 1;
  4681  003C  17A0               	bsf	__PIR^(0+128),7
  4682                           
  4683                           ;PIR_B1.c: 21: setLED(1, 0);
  4684  003D  1283               	bcf	3,5	;RP0=0, select bank0
  4685  003E  1303               	bcf	3,6	;RP1=0, select bank0
  4686  003F  01D4               	clrf	setLED@command
  4687  0040  3001               	movlw	1
  4688  0041  118A  2448  118A   	fcall	_setLED
  4689                           
  4690                           ;PIR_B1.c: 22: if (_PIR.OK == 0) {
  4691  0044  1683               	bsf	3,5	;RP0=1, select bank1
  4692  0045  1303               	bcf	3,6	;RP1=0, select bank1
  4693  0046  19A0               	btfsc	__PIR^(0+128),3
  4694  0047  2883               	goto	l4468
  4695                           
  4696                           ;PIR_B1.c: 23: setLED(2, 1);
  4697  0048  1283               	bcf	3,5	;RP0=0, select bank0
  4698  0049  1303               	bcf	3,6	;RP1=0, select bank0
  4699  004A  01D4               	clrf	setLED@command
  4700  004B  0AD4               	incf	setLED@command,f
  4701  004C  3002               	movlw	2
  4702  004D  118A  2448  118A   	fcall	_setLED
  4703                           
  4704                           ;PIR_B1.c: 24: }
  4705                           ;PIR_B1.c: 25: }
  4706                           ;PIR_B1.c: 26: } else {
  4707  0050  2883               	goto	l4468
  4708  0051                     l865:	
  4709                           
  4710                           ;PIR_B1.c: 27: if (_PIR.Detect == 1) {
  4711  0051  1683               	bsf	3,5	;RP0=1, select bank1
  4712  0052  1303               	bcf	3,6	;RP1=0, select bank1
  4713  0053  1E20               	btfss	__PIR^(0+128),4
  4714  0054  2883               	goto	l4468
  4715                           
  4716                           ;PIR_B1.c: 28: setMain_Exception(error);
  4717  0055  1283               	bcf	3,5	;RP0=0, select bank0
  4718  0056  1303               	bcf	3,6	;RP1=0, select bank0
  4719  0057  0865               	movf	PIR_Main@error,w
  4720  0058  118A  26E0  118A   	fcall	_setMain_Exception
  4721                           
  4722                           ;PIR_B1.c: 30: _PIR.Detect = 0;
  4723  005B  1683               	bsf	3,5	;RP0=1, select bank1
  4724  005C  1303               	bcf	3,6	;RP1=0, select bank1
  4725  005D  1220               	bcf	__PIR^(0+128),4
  4726                           
  4727                           ;PIR_B1.c: 31: _PIR.Available = 0;
  4728  005E  13A0               	bcf	__PIR^(0+128),7
  4729                           
  4730                           ;PIR_B1.c: 32: _PIR.Status = 0;
  4731  005F  1320               	bcf	__PIR^(0+128),6
  4732                           
  4733                           ;PIR_B1.c: 35: _PIR.Time = 0;
  4734  0060  01A5               	clrf	(__PIR^(0+128)+5)
  4735                           
  4736                           ;PIR_B1.c: 36: _PIR.RangeTime1 = 0;
  4737  0061  01CA               	clrf	(__PIR^(0+128)+42)
  4738                           
  4739                           ;PIR_B1.c: 37: _PIR.RangeValue = 15;
  4740  0062  300F               	movlw	15
  4741  0063  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0064  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0065  00DE               	movwf	??_PIR_Main
  4744  0066  085E               	movf	??_PIR_Main,w
  4745  0067  1683               	bsf	3,5	;RP0=1, select bank1
  4746  0068  1303               	bcf	3,6	;RP1=0, select bank1
  4747  0069  00CC               	movwf	(__PIR^(0+128)+44)
  4748                           
  4749                           ;PIR_B1.c: 38: _PIR.RangeCount = 0;
  4750  006A  01CB               	clrf	(__PIR^(0+128)+43)
  4751                           
  4752                           ;PIR_B1.c: 40: setLED(1, 1);
  4753  006B  1283               	bcf	3,5	;RP0=0, select bank0
  4754  006C  1303               	bcf	3,6	;RP1=0, select bank0
  4755  006D  01D4               	clrf	setLED@command
  4756  006E  0AD4               	incf	setLED@command,f
  4757  006F  3001               	movlw	1
  4758  0070  118A  2448  118A   	fcall	_setLED
  4759                           
  4760                           ;PIR_B1.c: 41: setLED(2, 0);
  4761  0073  1283               	bcf	3,5	;RP0=0, select bank0
  4762  0074  1303               	bcf	3,6	;RP1=0, select bank0
  4763  0075  01D4               	clrf	setLED@command
  4764  0076  3002               	movlw	2
  4765  0077  118A  2448  118A   	fcall	_setLED
  4766                           
  4767                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4768  007A  1683               	bsf	3,5	;RP0=1, select bank1
  4769  007B  1303               	bcf	3,6	;RP1=0, select bank1
  4770  007C  1DA0               	btfss	__PIR^(0+128),3
  4771  007D  2880               	goto	l870
  4772                           
  4773                           ;PIR_B1.c: 44: _PIR.Count = 0;
  4774  007E  01C1               	clrf	(__PIR^(0+128)+33)
  4775  007F  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4776  0080                     l870:	
  4777                           
  4778                           ;PIR_B1.c: 45: }
  4779                           ;PIR_B1.c: 46: _PIR.CloseTimeSeconds = 0;
  4780  0080  01C6               	clrf	(__PIR^(0+128)+38)
  4781                           
  4782                           ;PIR_B1.c: 47: _PIR.CloseTimeMinutes = 0;
  4783  0081  01C4               	clrf	(__PIR^(0+128)+36)
  4784  0082  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4785  0083                     l4468:	
  4786                           
  4787                           ;PIR_B1.c: 48: }
  4788                           ;PIR_B1.c: 49: }
  4789                           ;PIR_B1.c: 51: if (_PIR.ADtoGO == 0) {
  4790  0083  1683               	bsf	3,5	;RP0=1, select bank1
  4791  0084  1303               	bcf	3,6	;RP1=0, select bank1
  4792  0085  18A0               	btfsc	__PIR^(0+128),1
  4793  0086  2896               	goto	l871
  4794                           
  4795                           ;PIR_B1.c: 52: _PIR.Time++;
  4796  0087  3001               	movlw	1
  4797  0088  1283               	bcf	3,5	;RP0=0, select bank0
  4798  0089  1303               	bcf	3,6	;RP1=0, select bank0
  4799  008A  00DE               	movwf	??_PIR_Main
  4800  008B  085E               	movf	??_PIR_Main,w
  4801  008C  1683               	bsf	3,5	;RP0=1, select bank1
  4802  008D  1303               	bcf	3,6	;RP1=0, select bank1
  4803  008E  07A5               	addwf	(__PIR^(0+128)+5),f
  4804                           
  4805                           ;PIR_B1.c: 53: if (_PIR.Time == 10) {
  4806  008F  0825               	movf	(__PIR^(0+128)+5),w
  4807  0090  3A0A               	xorlw	10
  4808  0091  1D03               	skipz
  4809  0092  29B8               	goto	l4552
  4810                           
  4811                           ;PIR_B1.c: 54: _PIR.Time = 0;
  4812  0093  01A5               	clrf	(__PIR^(0+128)+5)
  4813                           
  4814                           ;PIR_B1.c: 55: _PIR.ADtoGO = 1;
  4815  0094  14A0               	bsf	__PIR^(0+128),1
  4816                           
  4817                           ;PIR_B1.c: 56: }
  4818                           ;PIR_B1.c: 57: } else {
  4819  0095  29B8               	goto	l4552
  4820  0096                     l871:	
  4821                           
  4822                           ;PIR_B1.c: 58: if (_PIR.GO == 1) {
  4823  0096  1D20               	btfss	__PIR^(0+128),2
  4824  0097  29B8               	goto	l4552
  4825                           
  4826                           ;PIR_B1.c: 59: _PIR.GO = 0;
  4827  0098  1120               	bcf	__PIR^(0+128),2
  4828                           
  4829                           ;PIR_B1.c: 60: if (_PIR.Available == 1) {
  4830  0099  1BA0               	btfsc	__PIR^(0+128),7
  4831                           
  4832                           ;PIR_B1.c: 61: if (_PIR.OK == 1) {
  4833  009A  1DA0               	btfss	__PIR^(0+128),3
  4834  009B  29B8               	goto	l4552
  4835                           
  4836                           ;PIR_B1.c: 63: _PIR.Time++;
  4837  009C  3001               	movlw	1
  4838  009D  1283               	bcf	3,5	;RP0=0, select bank0
  4839  009E  1303               	bcf	3,6	;RP1=0, select bank0
  4840  009F  00DE               	movwf	??_PIR_Main
  4841  00A0  085E               	movf	??_PIR_Main,w
  4842  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  4843  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  4844  00A3  07A5               	addwf	(__PIR^(0+128)+5),f
  4845                           
  4846                           ;PIR_B1.c: 64: if (_PIR.Time == 60) {
  4847  00A4  0825               	movf	(__PIR^(0+128)+5),w
  4848  00A5  3A3C               	xorlw	60
  4849  00A6  1D03               	skipz
  4850  00A7  28DC               	goto	l4518
  4851                           
  4852                           ;PIR_B1.c: 65: _PIR.Time = 0;
  4853  00A8  01A5               	clrf	(__PIR^(0+128)+5)
  4854                           
  4855                           ;PIR_B1.c: 66: if (_PIR.RangeCount >= 90) {
  4856  00A9  305A               	movlw	90
  4857  00AA  024B               	subwf	(__PIR^(0+128)+43),w
  4858  00AB  1C03               	skipc
  4859  00AC  28B8               	goto	l4500
  4860                           
  4861                           ;PIR_B1.c: 67: _PIR.RangeTime1 = 0;
  4862  00AD  01CA               	clrf	(__PIR^(0+128)+42)
  4863                           
  4864                           ;PIR_B1.c: 69: if (_PIR.RangeValue == 15) {
  4865  00AE  084C               	movf	(__PIR^(0+128)+44),w
  4866  00AF  3A0F               	xorlw	15
  4867  00B0  1903               	btfsc	3,2
  4868  00B1  28CD               	goto	L14
  4869                           
  4870                           ;PIR_B1.c: 71: } else if (_PIR.RangeValue == (15+10)) {
  4871                           
  4872                           ;PIR_B1.c: 70: _PIR.RangeValue = (15+10);
  4873  00B2  084C               	movf	(__PIR^(0+128)+44),w
  4874  00B3  3A19               	xorlw	25
  4875  00B4  1D03               	skipz
  4876  00B5  28DB               	goto	l4516
  4877                           
  4878                           ;PIR_B1.c: 72: _PIR.RangeValue = (15+20);
  4879  00B6  3023               	movlw	35
  4880  00B7  28D4               	goto	L10
  4881  00B8                     l4500:	
  4882                           ;PIR_B1.c: 73: }
  4883                           ;PIR_B1.c: 74: } else if (_PIR.RangeCount <= 10) {
  4884                           
  4885  00B8  300B               	movlw	11
  4886  00B9  024B               	subwf	(__PIR^(0+128)+43),w
  4887  00BA  1803               	skipnc
  4888  00BB  28DB               	goto	l4516
  4889                           
  4890                           ;PIR_B1.c: 75: _PIR.RangeTime1++;
  4891  00BC  3001               	movlw	1
  4892  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  4893  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  4894  00BF  00DE               	movwf	??_PIR_Main
  4895  00C0  085E               	movf	??_PIR_Main,w
  4896  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  4897  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  4898  00C3  07CA               	addwf	(__PIR^(0+128)+42),f
  4899                           
  4900                           ;PIR_B1.c: 76: if (_PIR.RangeTime1 == 2) {
  4901  00C4  084A               	movf	(__PIR^(0+128)+42),w
  4902  00C5  3A02               	xorlw	2
  4903  00C6  1D03               	skipz
  4904  00C7  28DB               	goto	l4516
  4905                           
  4906                           ;PIR_B1.c: 77: _PIR.RangeTime1 = 0;
  4907  00C8  01CA               	clrf	(__PIR^(0+128)+42)
  4908                           
  4909                           ;PIR_B1.c: 79: if (_PIR.RangeValue == (15+20)) {
  4910  00C9  084C               	movf	(__PIR^(0+128)+44),w
  4911  00CA  3A23               	xorlw	35
  4912  00CB  1D03               	skipz
  4913  00CC  28CF               	goto	l4512
  4914  00CD                     L14:	
  4915                           
  4916                           ;PIR_B1.c: 80: _PIR.RangeValue = (15+10);
  4917  00CD  3019               	movlw	25
  4918  00CE  28D4               	goto	L10
  4919  00CF                     l4512:	
  4920                           ;PIR_B1.c: 81: } else if (_PIR.RangeValue == (15+10)) {
  4921                           
  4922  00CF  084C               	movf	(__PIR^(0+128)+44),w
  4923  00D0  3A19               	xorlw	25
  4924  00D1  1D03               	skipz
  4925  00D2  28DB               	goto	l4516
  4926                           
  4927                           ;PIR_B1.c: 82: _PIR.RangeValue = 15;
  4928  00D3  300F               	movlw	15
  4929  00D4                     L10:	
  4930  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  4931  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  4932  00D6  00DE               	movwf	??_PIR_Main
  4933  00D7  085E               	movf	??_PIR_Main,w
  4934  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  4935  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  4936  00DA  00CC               	movwf	(__PIR^(0+128)+44)
  4937  00DB                     l4516:	
  4938                           
  4939                           ;PIR_B1.c: 83: }
  4940                           ;PIR_B1.c: 84: }
  4941                           ;PIR_B1.c: 85: }
  4942                           ;PIR_B1.c: 86: _PIR.RangeCount = 0;
  4943  00DB  01CB               	clrf	(__PIR^(0+128)+43)
  4944  00DC                     l4518:	
  4945                           
  4946                           ;PIR_B1.c: 87: }
  4947                           ;PIR_B1.c: 90: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.Of
      +                          fset)))
  4948                           ;PIR_B1.c: 91: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + (_PIR.RangeValue + _PIR.Off
      +                          set)))) {
  4949  00DC  084C               	movf	(__PIR^(0+128)+44),w
  4950  00DD  074E               	addwf	(__PIR^(0+128)+46),w
  4951  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  4952  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  4953  00E0  00DE               	movwf	??_PIR_Main
  4954  00E1  01DF               	clrf	??_PIR_Main+1
  4955  00E2  0DDF               	rlf	??_PIR_Main+1,f
  4956  00E3  09DE               	comf	??_PIR_Main,f
  4957  00E4  09DF               	comf	??_PIR_Main+1,f
  4958  00E5  0ADE               	incf	??_PIR_Main,f
  4959  00E6  1903               	skipnz
  4960  00E7  0ADF               	incf	??_PIR_Main+1,f
  4961  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  4962  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  4963  00EA  0826               	movf	(__PIR^(0+128)+6),w
  4964  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  4965  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  4966  00ED  075E               	addwf	??_PIR_Main,w
  4967  00EE  00E0               	movwf	??_PIR_Main+2
  4968  00EF  085F               	movf	??_PIR_Main+1,w
  4969  00F0  1803               	skipnc
  4970  00F1  0A5F               	incf	??_PIR_Main+1,w
  4971  00F2  00E1               	movwf	??_PIR_Main+3
  4972  00F3  0861               	movf	??_PIR_Main+3,w
  4973  00F4  3A80               	xorlw	128
  4974  00F5  3C80               	sublw	128
  4975  00F6  1D03               	skipz
  4976  00F7  28FC               	goto	u5045
  4977  00F8  0860               	movf	??_PIR_Main+2,w
  4978  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  4979  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  4980  00FB  0221               	subwf	(__PIR^(0+128)+1),w
  4981  00FC                     u5045:	
  4982  00FC  1C03               	skipc
  4983  00FD  292A               	goto	l4528
  4984  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  4985  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  4986  0100  084C               	movf	(__PIR^(0+128)+44),w
  4987  0101  074E               	addwf	(__PIR^(0+128)+46),w
  4988  0102  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0103  1303               	bcf	3,6	;RP1=0, select bank0
  4990  0104  00DE               	movwf	??_PIR_Main
  4991  0105  01DF               	clrf	??_PIR_Main+1
  4992  0106  0DDF               	rlf	??_PIR_Main+1,f
  4993  0107  1683               	bsf	3,5	;RP0=1, select bank1
  4994  0108  1303               	bcf	3,6	;RP1=0, select bank1
  4995  0109  0826               	movf	(__PIR^(0+128)+6),w
  4996  010A  1283               	bcf	3,5	;RP0=0, select bank0
  4997  010B  1303               	bcf	3,6	;RP1=0, select bank0
  4998  010C  075E               	addwf	??_PIR_Main,w
  4999  010D  00E0               	movwf	??_PIR_Main+2
  5000  010E  3000               	movlw	0
  5001  010F  1803               	skipnc
  5002  0110  3001               	movlw	1
  5003  0111  075F               	addwf	??_PIR_Main+1,w
  5004  0112  00E1               	movwf	??_PIR_Main+3
  5005  0113  0861               	movf	??_PIR_Main+3,w
  5006  0114  3A80               	xorlw	128
  5007  0115  00E2               	movwf	??_PIR_Main+4
  5008  0116  3080               	movlw	128
  5009  0117  0262               	subwf	??_PIR_Main+4,w
  5010  0118  1D03               	skipz
  5011  0119  2920               	goto	u5055
  5012  011A  1683               	bsf	3,5	;RP0=1, select bank1
  5013  011B  1303               	bcf	3,6	;RP1=0, select bank1
  5014  011C  0821               	movf	(__PIR^(0+128)+1),w
  5015  011D  1283               	bcf	3,5	;RP0=0, select bank0
  5016  011E  1303               	bcf	3,6	;RP1=0, select bank0
  5017  011F  0260               	subwf	??_PIR_Main+2,w
  5018  0120                     u5055:	
  5019  0120  1C03               	skipc
  5020  0121  292A               	goto	l4528
  5021                           
  5022                           ;PIR_B1.c: 92: _PIR.Count = 0;
  5023  0122  1683               	bsf	3,5	;RP0=1, select bank1
  5024  0123  1303               	bcf	3,6	;RP1=0, select bank1
  5025  0124  01C1               	clrf	(__PIR^(0+128)+33)
  5026  0125  01C2               	clrf	((__PIR+1)^(0+128)+33)
  5027                           
  5028                           ;PIR_B1.c: 93: setLED(1, 0);
  5029  0126  1283               	bcf	3,5	;RP0=0, select bank0
  5030  0127  1303               	bcf	3,6	;RP1=0, select bank0
  5031  0128  01D4               	clrf	setLED@command
  5032  0129  29A1               	goto	L15
  5033  012A                     l4528:	
  5034                           ;PIR_B1.c: 95: } else {
  5035                           
  5036                           ;PIR_B1.c: 94: setLED(2, 0);
  5037                           
  5038                           
  5039                           ;PIR_B1.c: 96: _PIR.RangeCount++;
  5040  012A  3001               	movlw	1
  5041  012B  1283               	bcf	3,5	;RP0=0, select bank0
  5042  012C  1303               	bcf	3,6	;RP1=0, select bank0
  5043  012D  00DE               	movwf	??_PIR_Main
  5044  012E  085E               	movf	??_PIR_Main,w
  5045  012F  1683               	bsf	3,5	;RP0=1, select bank1
  5046  0130  1303               	bcf	3,6	;RP1=0, select bank1
  5047  0131  07CB               	addwf	(__PIR^(0+128)+43),f
  5048                           
  5049                           ;PIR_B1.c: 97: _PIR.Count++;
  5050  0132  3001               	movlw	1
  5051  0133  07C1               	addwf	(__PIR^(0+128)+33),f
  5052  0134  1803               	skipnc
  5053  0135  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  5054  0136  3000               	movlw	0
  5055  0137  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  5056                           
  5057                           ;PIR_B1.c: 99: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 2;
  5058  0138  1B20               	btfsc	__PIR^(0+128),6
  5059  0139  293E               	goto	l4536
  5060  013A  3002               	movlw	2
  5061  013B  1283               	bcf	3,5	;RP0=0, select bank0
  5062  013C  1303               	bcf	3,6	;RP1=0, select bank0
  5063  013D  2940               	goto	L11
  5064  013E                     l4536:	
  5065  013E  3003               	movlw	3
  5066  013F  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0140                     L11:	
  5068  0140  00E3               	movwf	_PIR_Main$2761
  5069  0141  3000               	movlw	0
  5070  0142  00E4               	movwf	_PIR_Main$2761+1
  5071  0143  0863               	movf	_PIR_Main$2761,w
  5072  0144  00DE               	movwf	??_PIR_Main
  5073  0145  085E               	movf	??_PIR_Main,w
  5074  0146  1683               	bsf	3,5	;RP0=1, select bank1
  5075  0147  1303               	bcf	3,6	;RP1=0, select bank1
  5076  0148  00C3               	movwf	(__PIR^(0+128)+35)
  5077                           
  5078                           ;PIR_B1.c: 101: if (_PIR.Count == _PIR.TriggerValue) {
  5079  0149  0843               	movf	(__PIR^(0+128)+35),w
  5080  014A  1283               	bcf	3,5	;RP0=0, select bank0
  5081  014B  1303               	bcf	3,6	;RP1=0, select bank0
  5082  014C  00DE               	movwf	??_PIR_Main
  5083  014D  01DF               	clrf	??_PIR_Main+1
  5084  014E  1683               	bsf	3,5	;RP0=1, select bank1
  5085  014F  1303               	bcf	3,6	;RP1=0, select bank1
  5086  0150  0842               	movf	((__PIR+1)^(0+128)+33),w
  5087  0151  1283               	bcf	3,5	;RP0=0, select bank0
  5088  0152  1303               	bcf	3,6	;RP1=0, select bank0
  5089  0153  065F               	xorwf	??_PIR_Main+1,w
  5090  0154  1D03               	skipz
  5091  0155  295C               	goto	u5075
  5092  0156  1683               	bsf	3,5	;RP0=1, select bank1
  5093  0157  1303               	bcf	3,6	;RP1=0, select bank1
  5094  0158  0841               	movf	(__PIR^(0+128)+33),w
  5095  0159  1283               	bcf	3,5	;RP0=0, select bank0
  5096  015A  1303               	bcf	3,6	;RP1=0, select bank0
  5097  015B  065E               	xorwf	??_PIR_Main,w
  5098  015C                     u5075:	
  5099  015C  1D03               	skipz
  5100  015D  29B8               	goto	l4552
  5101                           
  5102                           ;PIR_B1.c: 102: _PIR.Count = 0;
  5103  015E  1683               	bsf	3,5	;RP0=1, select bank1
  5104  015F  1303               	bcf	3,6	;RP1=0, select bank1
  5105  0160  01C1               	clrf	(__PIR^(0+128)+33)
  5106  0161  01C2               	clrf	((__PIR+1)^(0+128)+33)
  5107                           
  5108                           ;PIR_B1.c: 103: _PIR.CloseTimeSeconds = 0;
  5109  0162  01C6               	clrf	(__PIR^(0+128)+38)
  5110                           
  5111                           ;PIR_B1.c: 104: _PIR.CloseTimeMinutes = 0;
  5112  0163  01C4               	clrf	(__PIR^(0+128)+36)
  5113  0164  01C5               	clrf	((__PIR+1)^(0+128)+36)
  5114                           
  5115                           ;PIR_B1.c: 105: _PIR.Status = 1;
  5116  0165  1720               	bsf	__PIR^(0+128),6
  5117                           
  5118                           ;PIR_B1.c: 108: if (getLights_Status(1) == 0) {
  5119  0166  3001               	movlw	1
  5120  0167  158A  2631  118A   	fcall	_getLights_Status
  5121  016A  3800               	iorlw	0
  5122  016B  1D03               	skipz
  5123  016C  2975               	goto	l4546
  5124                           
  5125                           ;PIR_B1.c: 109: setLights_Trigger(1, 1);
  5126  016D  1283               	bcf	3,5	;RP0=0, select bank0
  5127  016E  1303               	bcf	3,6	;RP1=0, select bank0
  5128  016F  01D4               	clrf	setLights_Trigger@command
  5129  0170  0AD4               	incf	setLights_Trigger@command,f
  5130  0171  3001               	movlw	1
  5131  0172  118A  27E5  118A   	fcall	_setLights_Trigger
  5132  0175                     l4546:	
  5133                           
  5134                           ;PIR_B1.c: 110: }
  5135                           ;PIR_B1.c: 113: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - (_PIR.RangeValue + _PIR.O
      +                          ffset)))) {
  5136  0175  1683               	bsf	3,5	;RP0=1, select bank1
  5137  0176  1303               	bcf	3,6	;RP1=0, select bank1
  5138  0177  084C               	movf	(__PIR^(0+128)+44),w
  5139  0178  074E               	addwf	(__PIR^(0+128)+46),w
  5140  0179  1283               	bcf	3,5	;RP0=0, select bank0
  5141  017A  1303               	bcf	3,6	;RP1=0, select bank0
  5142  017B  00DE               	movwf	??_PIR_Main
  5143  017C  01DF               	clrf	??_PIR_Main+1
  5144  017D  0DDF               	rlf	??_PIR_Main+1,f
  5145  017E  09DE               	comf	??_PIR_Main,f
  5146  017F  09DF               	comf	??_PIR_Main+1,f
  5147  0180  0ADE               	incf	??_PIR_Main,f
  5148  0181  1903               	skipnz
  5149  0182  0ADF               	incf	??_PIR_Main+1,f
  5150  0183  1683               	bsf	3,5	;RP0=1, select bank1
  5151  0184  1303               	bcf	3,6	;RP1=0, select bank1
  5152  0185  0826               	movf	(__PIR^(0+128)+6),w
  5153  0186  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0187  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0188  075E               	addwf	??_PIR_Main,w
  5156  0189  00E0               	movwf	??_PIR_Main+2
  5157  018A  085F               	movf	??_PIR_Main+1,w
  5158  018B  1803               	skipnc
  5159  018C  0A5F               	incf	??_PIR_Main+1,w
  5160  018D  00E1               	movwf	??_PIR_Main+3
  5161  018E  0861               	movf	??_PIR_Main+3,w
  5162  018F  3A80               	xorlw	128
  5163  0190  00E2               	movwf	??_PIR_Main+4
  5164  0191  3080               	movlw	128
  5165  0192  0262               	subwf	??_PIR_Main+4,w
  5166  0193  1D03               	skipz
  5167  0194  299B               	goto	u5095
  5168  0195  1683               	bsf	3,5	;RP0=1, select bank1
  5169  0196  1303               	bcf	3,6	;RP1=0, select bank1
  5170  0197  0821               	movf	(__PIR^(0+128)+1),w
  5171  0198  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0199  1303               	bcf	3,6	;RP1=0, select bank0
  5173  019A  0260               	subwf	??_PIR_Main+2,w
  5174  019B                     u5095:	
  5175  019B  1C03               	skipc
  5176  019C  29A9               	goto	l4550
  5177                           
  5178                           ;PIR_B1.c: 114: setLED(1, 1);
  5179  019D  1283               	bcf	3,5	;RP0=0, select bank0
  5180  019E  1303               	bcf	3,6	;RP1=0, select bank0
  5181  019F  01D4               	clrf	setLED@command
  5182  01A0  0AD4               	incf	setLED@command,f
  5183  01A1                     L15:	
  5184  01A1  3001               	movlw	1
  5185  01A2  118A  2448  118A   	fcall	_setLED
  5186                           
  5187                           ;PIR_B1.c: 115: setLED(2, 0);
  5188  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  5189  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  5190  01A7  01D4               	clrf	setLED@command
  5191  01A8  29B4               	goto	L12
  5192  01A9                     l4550:	
  5193                           ;PIR_B1.c: 116: } else {
  5194                           
  5195                           
  5196                           ;PIR_B1.c: 117: setLED(1, 0);
  5197  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  5198  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  5199  01AB  01D4               	clrf	setLED@command
  5200  01AC  3001               	movlw	1
  5201  01AD  118A  2448  118A   	fcall	_setLED
  5202                           
  5203                           ;PIR_B1.c: 118: setLED(2, 1);
  5204  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  5205  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  5206  01B2  01D4               	clrf	setLED@command
  5207  01B3  0AD4               	incf	setLED@command,f
  5208  01B4                     L12:	
  5209  01B4  3002               	movlw	2
  5210  01B5  118A  2448  118A   	fcall	_setLED
  5211  01B8                     l4552:	
  5212                           
  5213                           ;PIR_B1.c: 119: }
  5214                           ;PIR_B1.c: 120: }
  5215                           ;PIR_B1.c: 121: }
  5216                           ;PIR_B1.c: 122: }
  5217                           ;PIR_B1.c: 123: }
  5218                           ;PIR_B1.c: 124: }
  5219                           ;PIR_B1.c: 125: }
  5220                           ;PIR_B1.c: 126: if (_PIR.OK == 0) {
  5221  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  5222  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  5223  01BA  19A0               	btfsc	__PIR^(0+128),3
  5224  01BB  29D4               	goto	l4562
  5225                           
  5226                           ;PIR_B1.c: 127: _PIR.Count++;
  5227  01BC  3001               	movlw	1
  5228  01BD  07C1               	addwf	(__PIR^(0+128)+33),f
  5229  01BE  1803               	skipnc
  5230  01BF  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  5231  01C0  3000               	movlw	0
  5232  01C1  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  5233                           
  5234                           ;PIR_B1.c: 128: if (_PIR.Count == 3000) {
  5235  01C2  300B               	movlw	11
  5236  01C3  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  5237  01C4  1D03               	skipz
  5238  01C5  29C8               	goto	u5115
  5239  01C6  30B8               	movlw	184
  5240  01C7  0641               	xorwf	(__PIR^(0+128)+33),w
  5241  01C8                     u5115:	
  5242  01C8  1D03               	skipz
  5243  01C9  29D4               	goto	l4562
  5244                           
  5245                           ;PIR_B1.c: 129: _PIR.Count = 0;
  5246  01CA  01C1               	clrf	(__PIR^(0+128)+33)
  5247  01CB  01C2               	clrf	((__PIR+1)^(0+128)+33)
  5248                           
  5249                           ;PIR_B1.c: 130: _PIR.OK = 1;
  5250  01CC  15A0               	bsf	__PIR^(0+128),3
  5251                           
  5252                           ;PIR_B1.c: 131: setLED(2, 0);
  5253  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  5254  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  5255  01CF  01D4               	clrf	setLED@command
  5256  01D0  3002               	movlw	2
  5257  01D1  118A  2448  118A   	fcall	_setLED
  5258  01D4                     l4562:	
  5259                           
  5260                           ;PIR_B1.c: 132: }
  5261                           ;PIR_B1.c: 133: }
  5262                           ;PIR_B1.c: 134: if (_PIR.Status == 1) {
  5263  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  5264  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  5265  01D6  1F20               	btfss	__PIR^(0+128),6
  5266  01D7  0008               	return
  5267                           
  5268                           ;PIR_B1.c: 135: _PIR.CloseTimeSeconds++;
  5269  01D8  3001               	movlw	1
  5270  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  5271  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  5272  01DB  00DE               	movwf	??_PIR_Main
  5273  01DC  085E               	movf	??_PIR_Main,w
  5274  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  5275  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  5276  01DF  07C6               	addwf	(__PIR^(0+128)+38),f
  5277                           
  5278                           ;PIR_B1.c: 136: if (_PIR.CloseTimeSeconds == 100) {
  5279  01E0  0846               	movf	(__PIR^(0+128)+38),w
  5280  01E1  3A64               	xorlw	100
  5281  01E2  1D03               	skipz
  5282  01E3  0008               	return
  5283                           
  5284                           ;PIR_B1.c: 137: _PIR.CloseTimeSeconds = 0;
  5285  01E4  01C6               	clrf	(__PIR^(0+128)+38)
  5286                           
  5287                           ;PIR_B1.c: 138: _PIR.CloseTimeMinutes++;
  5288  01E5  3001               	movlw	1
  5289  01E6  07C4               	addwf	(__PIR^(0+128)+36),f
  5290  01E7  1803               	skipnc
  5291  01E8  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  5292  01E9  3000               	movlw	0
  5293  01EA  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  5294                           
  5295                           ;PIR_B1.c: 139: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  5296  01EB  0848               	movf	((__PIR+1)^(0+128)+39),w
  5297  01EC  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  5298  01ED  1D03               	skipz
  5299  01EE  29F1               	goto	u5145
  5300  01EF  0847               	movf	(__PIR^(0+128)+39),w
  5301  01F0  0644               	xorwf	(__PIR^(0+128)+36),w
  5302  01F1                     u5145:	
  5303  01F1  1D03               	skipz
  5304  01F2  0008               	return
  5305                           
  5306                           ;PIR_B1.c: 140: _PIR.CloseTimeMinutes = 0;
  5307  01F3  01C4               	clrf	(__PIR^(0+128)+36)
  5308  01F4  01C5               	clrf	((__PIR+1)^(0+128)+36)
  5309                           
  5310                           ;PIR_B1.c: 141: _PIR.Status = 0;
  5311  01F5  1320               	bcf	__PIR^(0+128),6
  5312                           
  5313                           ;PIR_B1.c: 144: if (getLights_Status(1) == 1) {
  5314  01F6  3001               	movlw	1
  5315  01F7  158A  2631  118A   	fcall	_getLights_Status
  5316  01FA  3A01               	xorlw	1
  5317  01FB  1D03               	skipz
  5318  01FC  0008               	return
  5319                           
  5320                           ;PIR_B1.c: 145: setLights_Trigger(1, 0);
  5321  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  5322  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  5323  01FF  01D4               	clrf	setLights_Trigger@command
  5324  0200  3001               	movlw	1
  5325  0201  118A  27E5         	fcall	_setLights_Trigger
  5326                           
  5327                           ;PIR_B1.c: 146: }
  5328                           ;PIR_B1.c: 149: }
  5329                           ;PIR_B1.c: 150: }
  5330                           ;PIR_B1.c: 151: }
  5331                           ;PIR_B1.c: 152: } else {
  5332  0203  0008               	return
  5333  0204                     l864:	
  5334                           
  5335                           ;PIR_B1.c: 153: if (myMain.PowerON == 1) {
  5336  0204  1283               	bcf	3,5	;RP0=0, select bank0
  5337  0205  1303               	bcf	3,6	;RP1=0, select bank0
  5338  0206  1C20               	btfss	_myMain,0
  5339  0207  0008               	return
  5340                           
  5341                           ;PIR_B1.c: 154: _PIR.Enable = 1;
  5342  0208  1683               	bsf	3,5	;RP0=1, select bank1
  5343  0209  1303               	bcf	3,6	;RP1=0, select bank1
  5344  020A  1420               	bsf	__PIR^(0+128),0
  5345                           
  5346                           ;PIR_B1.c: 157: if (getLights_Status(1) == 0) {
  5347  020B  3001               	movlw	1
  5348  020C  158A  2631  118A   	fcall	_getLights_Status
  5349  020F  3800               	iorlw	0
  5350  0210  1D03               	skipz
  5351  0211  0008               	return
  5352                           
  5353                           ;PIR_B1.c: 158: setLights_Trigger(1, 1);
  5354  0212  1283               	bcf	3,5	;RP0=0, select bank0
  5355  0213  1303               	bcf	3,6	;RP1=0, select bank0
  5356  0214  01D4               	clrf	setLights_Trigger@command
  5357  0215  0AD4               	incf	setLights_Trigger@command,f
  5358  0216  3001               	movlw	1
  5359  0217  118A  27E5         	fcall	_setLights_Trigger
  5360  0219  0008               	return
  5361  021A                     __end_of_PIR_Main:	
  5362                           
  5363                           	psect	text27
  5364  06E0                     __ptext27:	
  5365 ;; *************** function _setMain_Exception *****************
  5366 ;; Defined at:
  5367 ;;		line 284 in file "../src/Main_B1.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  command         1    wreg     unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  command         1   11[BANK0 ] unsigned char 
  5372 ;;  status          1    8[BANK0 ] unsigned char 
  5373 ;;  buz             1    7[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;		None               void
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5383 ;;      Params:         0       0       0       0
  5384 ;;      Locals:         0       5       0       0
  5385 ;;      Temps:          0       2       0       0
  5386 ;;      Totals:         0       7       0       0
  5387 ;;Total ram usage:        7 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    5
  5390 ;; This function calls:
  5391 ;;		_getAll_Lights_Line
  5392 ;;		_setLED
  5393 ;;		_setLights_Trigger
  5394 ;; This function is called by:
  5395 ;;		_PIR_Main
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           
  5400                           ;psect for function _setMain_Exception
  5401  06E0                     _setMain_Exception:	
  5402                           
  5403                           ;incstack = 0
  5404                           ; Regs used in _setMain_Exception: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5405                           ;setMain_Exception@command stored from wreg
  5406  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  5407  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  5408  06E2  00DD               	movwf	setMain_Exception@command
  5409                           
  5410                           ;Main_B1.c: 285: char status = 0, buz = 0;
  5411  06E3  01DA               	clrf	setMain_Exception@status
  5412  06E4  01D9               	clrf	setMain_Exception@buz
  5413                           
  5414                           ;Main_B1.c: 287: status = command == 3 ? getAll_Lights_Line() : 255;
  5415  06E5  085D               	movf	setMain_Exception@command,w
  5416  06E6  3A03               	xorlw	3
  5417  06E7  1903               	skipnz
  5418  06E8  2EED               	goto	l4120
  5419  06E9  30FF               	movlw	255
  5420  06EA  00DB               	movwf	_setMain_Exception$2106
  5421  06EB  3000               	movlw	0
  5422  06EC  2EF7               	goto	L16
  5423  06ED                     l4120:	
  5424  06ED  158A  2642  118A   	fcall	_getAll_Lights_Line
  5425  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  5426  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  5427  06F2  00D7               	movwf	??_setMain_Exception
  5428  06F3  01D8               	clrf	??_setMain_Exception+1
  5429  06F4  0857               	movf	??_setMain_Exception,w
  5430  06F5  00DB               	movwf	_setMain_Exception$2106
  5431  06F6  0858               	movf	??_setMain_Exception+1,w
  5432  06F7                     L16:	
  5433  06F7  00DC               	movwf	_setMain_Exception$2106+1
  5434  06F8  085B               	movf	_setMain_Exception$2106,w
  5435  06F9  00D7               	movwf	??_setMain_Exception
  5436  06FA  0857               	movf	??_setMain_Exception,w
  5437  06FB  00DA               	movwf	setMain_Exception@status
  5438                           
  5439                           ;Main_B1.c: 289: if (command == 0) {
  5440  06FC  08DD               	movf	setMain_Exception@command,f
  5441  06FD  1D03               	skipz
  5442  06FE  2F01               	goto	l4128
  5443                           
  5444                           ;Main_B1.c: 290: setLED(command, 110);
  5445  06FF  306E               	movlw	110
  5446  0700  2F0C               	goto	L17
  5447  0701                     l4128:	
  5448                           ;Main_B1.c: 291: } else if (command == 5) {
  5449                           
  5450  0701  1283               	bcf	3,5	;RP0=0, select bank0
  5451  0702  1303               	bcf	3,6	;RP1=0, select bank0
  5452  0703  085D               	movf	setMain_Exception@command,w
  5453  0704  3A05               	xorlw	5
  5454  0705  1D03               	skipz
  5455  0706  2F09               	goto	l4132
  5456                           
  5457                           ;Main_B1.c: 292: __nop();
  5458  0707  0000               	nop
  5459                           
  5460                           ;Main_B1.c: 293: } else {
  5461  0708  2F13               	goto	l4134
  5462  0709                     l4132:	
  5463                           
  5464                           ;Main_B1.c: 294: setLED(command, 111);
  5465  0709  306F               	movlw	111
  5466  070A  1283               	bcf	3,5	;RP0=0, select bank0
  5467  070B  1303               	bcf	3,6	;RP1=0, select bank0
  5468  070C                     L17:	
  5469  070C  00D7               	movwf	??_setMain_Exception
  5470  070D  0857               	movf	??_setMain_Exception,w
  5471  070E  00D4               	movwf	setLED@command
  5472  070F  085D               	movf	setMain_Exception@command,w
  5473  0710  118A  2448  118A   	fcall	_setLED
  5474  0713                     l4134:	
  5475                           
  5476                           ;Main_B1.c: 295: }
  5477                           ;Main_B1.c: 297: if (command != 0) {
  5478  0713  1283               	bcf	3,5	;RP0=0, select bank0
  5479  0714  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0715  085D               	movf	setMain_Exception@command,w
  5481  0716  1903               	btfsc	3,2
  5482  0717  0008               	return
  5483                           
  5484                           ;Main_B1.c: 298: setLights_Trigger(1, 0);
  5485  0718  01D4               	clrf	setLights_Trigger@command
  5486  0719  3001               	movlw	1
  5487  071A  118A  27E5         	fcall	_setLights_Trigger
  5488  071C  1283               	bcf	3,5	;RP0=0, select bank0
  5489  071D  1303               	bcf	3,6	;RP1=0, select bank0
  5490  071E  0008               	return
  5491  071F                     __end_of_setMain_Exception:	
  5492                           
  5493                           	psect	text28
  5494  07E5                     __ptext28:	
  5495 ;; *************** function _setLights_Trigger *****************
  5496 ;; Defined at:
  5497 ;;		line 214 in file "../src/TriacRelay_B1.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  lights          1    wreg     unsigned char 
  5500 ;;  command         1    2[BANK0 ] unsigned char 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  lights          1    4[BANK0 ] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;		None               void
  5505 ;; Registers used:
  5506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5512 ;;      Params:         0       1       0       0
  5513 ;;      Locals:         0       1       0       0
  5514 ;;      Temps:          0       1       0       0
  5515 ;;      Totals:         0       3       0       0
  5516 ;;Total ram usage:        3 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    4
  5519 ;; This function calls:
  5520 ;;		_LightsPointSelect
  5521 ;; This function is called by:
  5522 ;;		_setMain_Exception
  5523 ;;		_PIR_Main
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           
  5528                           ;psect for function _setLights_Trigger
  5529  07E5                     _setLights_Trigger:	
  5530                           
  5531                           ;incstack = 0
  5532                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5533                           ;setLights_Trigger@lights stored from wreg
  5534  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5535  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5536  07E7  00D6               	movwf	setLights_Trigger@lights
  5537                           
  5538                           ;TriacRelay_B1.c: 215: LightsPointSelect(lights);
  5539  07E8  0856               	movf	setLights_Trigger@lights,w
  5540  07E9  158A  25E1         	fcall	_LightsPointSelect
  5541                           
  5542                           ;TriacRelay_B1.c: 216: Lights->Trigger = 1;
  5543  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  5544  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  5545  07ED  0838               	movf	_Lights,w
  5546  07EE  0084               	movwf	4
  5547  07EF  1383               	bcf	3,7	;select IRP bank0
  5548  07F0  1580               	bsf	0,3
  5549                           
  5550                           ;TriacRelay_B1.c: 217: Lights->Switch = command == 1 ? 1 : 0;
  5551  07F1  0854               	movf	setLights_Trigger@command,w
  5552  07F2  3A01               	xorlw	1
  5553  07F3  3000               	movlw	0
  5554  07F4  1903               	skipnz
  5555  07F5  3001               	movlw	1
  5556  07F6  00D5               	movwf	??_setLights_Trigger
  5557  07F7  0838               	movf	_Lights,w
  5558  07F8  0084               	movwf	4
  5559  07F9  0ED5               	swapf	??_setLights_Trigger,f
  5560  07FA  0800               	movf	0,w
  5561  07FB  0655               	xorwf	??_setLights_Trigger,w
  5562  07FC  39EF               	andlw	-17
  5563  07FD  0655               	xorwf	??_setLights_Trigger,w
  5564  07FE  0080               	movwf	0
  5565  07FF  0008               	return
  5566  0800                     __end_of_setLights_Trigger:	
  5567                           
  5568                           	psect	text29
  5569  0E42                     __ptext29:	
  5570 ;; *************** function _getAll_Lights_Line *****************
  5571 ;; Defined at:
  5572 ;;		line 236 in file "../src/TriacRelay_B1.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;		None
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  line            1    2[BANK0 ] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      unsigned char 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5586 ;;      Params:         0       0       0       0
  5587 ;;      Locals:         0       1       0       0
  5588 ;;      Temps:          0       0       0       0
  5589 ;;      Totals:         0       1       0       0
  5590 ;;Total ram usage:        1 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    4
  5593 ;; This function calls:
  5594 ;;		_LightsPointSelect
  5595 ;; This function is called by:
  5596 ;;		_setMain_Exception
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function _getAll_Lights_Line
  5602  0E42                     _getAll_Lights_Line:	
  5603                           
  5604                           ;TriacRelay_B1.c: 237: char line = 0;
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5608  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  5609  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  5610  0E44  01D4               	clrf	getAll_Lights_Line@line
  5611                           
  5612                           ;TriacRelay_B1.c: 239: LightsPointSelect(1);
  5613  0E45  3001               	movlw	1
  5614  0E46  158A  25E1         	fcall	_LightsPointSelect
  5615                           
  5616                           ;TriacRelay_B1.c: 240: line = Lights->Line == 1 ? 1 : 0;
  5617  0E48  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0E49  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0E4A  0A38               	incf	_Lights,w
  5620  0E4B  0084               	movwf	4
  5621  0E4C  3000               	movlw	0
  5622  0E4D  1383               	bcf	3,7	;select IRP bank0
  5623  0E4E  1800               	btfsc	0,0
  5624  0E4F  3001               	movlw	1
  5625  0E50  00D4               	movwf	getAll_Lights_Line@line
  5626                           
  5627                           ;TriacRelay_B1.c: 250: return line;
  5628  0E51  0854               	movf	getAll_Lights_Line@line,w
  5629  0E52  0008               	return
  5630  0E53                     __end_of_getAll_Lights_Line:	
  5631                           
  5632                           	psect	text30
  5633  065F                     __ptext30:	
  5634 ;; *************** function _getMain_All_Error_Status *****************
  5635 ;; Defined at:
  5636 ;;		line 371 in file "../src/Main_B1.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  command         1    wreg     unsigned char 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  command         1    6[BANK0 ] unsigned char 
  5641 ;;  status          1    7[BANK0 ] unsigned char 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      unsigned char 
  5644 ;; Registers used:
  5645 ;;		wreg, status,2, status,0, pclath, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5651 ;;      Params:         0       0       0       0
  5652 ;;      Locals:         0       6       0       0
  5653 ;;      Temps:          0       1       0       0
  5654 ;;      Totals:         0       7       0       0
  5655 ;;Total ram usage:        7 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    4
  5658 ;; This function calls:
  5659 ;;		_getCDS_Status
  5660 ;; This function is called by:
  5661 ;;		_setTemp_Main
  5662 ;;		_PIR_Main
  5663 ;;		_setSYSC_Main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function _getMain_All_Error_Status
  5669  065F                     _getMain_All_Error_Status:	
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0+pclath+cstack]
  5673                           ;getMain_All_Error_Status@command stored from wreg
  5674  065F  1283               	bcf	3,5	;RP0=0, select bank0
  5675  0660  1303               	bcf	3,6	;RP1=0, select bank0
  5676  0661  00D8               	movwf	getMain_All_Error_Status@command
  5677                           
  5678                           ;Main_B1.c: 372: char status = 0;
  5679  0662  01D9               	clrf	getMain_All_Error_Status@status
  5680                           
  5681                           ;Main_B1.c: 375: if (status == 0 && command != 1) {
  5682  0663  08D9               	movf	getMain_All_Error_Status@status,f
  5683  0664  1D03               	skipz
  5684  0665  2E6E               	goto	l3946
  5685  0666  0858               	movf	getMain_All_Error_Status@command,w
  5686  0667  3A01               	xorlw	1
  5687  0668  1903               	skipnz
  5688  0669  2E6E               	goto	l3946
  5689                           
  5690                           ;Main_B1.c: 376: status = SYSC.ERROR == 1 ? 1 : 0;
  5691  066A  3000               	movlw	0
  5692  066B  18A6               	btfsc	_SYSC,1
  5693  066C  3001               	movlw	1
  5694  066D  00D9               	movwf	getMain_All_Error_Status@status
  5695  066E                     l3946:	
  5696                           
  5697                           ;Main_B1.c: 377: }
  5698                           ;Main_B1.c: 383: if (status == 0 && command != 2) {
  5699  066E  08D9               	movf	getMain_All_Error_Status@status,f
  5700  066F  1D03               	skipz
  5701  0670  2E82               	goto	l3956
  5702  0671  0858               	movf	getMain_All_Error_Status@command,w
  5703  0672  3A02               	xorlw	2
  5704  0673  1903               	skipnz
  5705  0674  2E82               	goto	l3956
  5706                           
  5707                           ;Main_B1.c: 384: status = Temp.ERROR == 1 ? 2 : 0;
  5708  0675  18BA               	btfsc	_Temp,1
  5709  0676  2E7A               	goto	l3954
  5710  0677  01D4               	clrf	_getMain_All_Error_Status$2116
  5711  0678  01D5               	clrf	_getMain_All_Error_Status$2116+1
  5712  0679  2E7E               	goto	l680
  5713  067A                     l3954:	
  5714  067A  3002               	movlw	2
  5715  067B  00D4               	movwf	_getMain_All_Error_Status$2116
  5716  067C  3000               	movlw	0
  5717  067D  00D5               	movwf	_getMain_All_Error_Status$2116+1
  5718  067E                     l680:	
  5719  067E  0854               	movf	_getMain_All_Error_Status$2116,w
  5720  067F  00D3               	movwf	??_getMain_All_Error_Status
  5721  0680  0853               	movf	??_getMain_All_Error_Status,w
  5722  0681  00D9               	movwf	getMain_All_Error_Status@status
  5723  0682                     l3956:	
  5724                           
  5725                           ;Main_B1.c: 385: }
  5726                           ;Main_B1.c: 404: if (status == 0 && command != 5) {
  5727  0682  08D9               	movf	getMain_All_Error_Status@status,f
  5728  0683  1D03               	skipz
  5729  0684  2E9E               	goto	l681
  5730  0685  0858               	movf	getMain_All_Error_Status@command,w
  5731  0686  3A05               	xorlw	5
  5732  0687  1903               	skipnz
  5733  0688  2E9E               	goto	l681
  5734                           
  5735                           ;Main_B1.c: 405: status = getCDS_Status() == 0 ? 5 : 0;
  5736  0689  158A  25B2  118A   	fcall	_getCDS_Status
  5737  068C  3A00               	xorlw	0
  5738  068D  1903               	skipnz
  5739  068E  2E94               	goto	l3964
  5740  068F  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0690  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0691  01D6               	clrf	_getMain_All_Error_Status$2118
  5743  0692  01D7               	clrf	_getMain_All_Error_Status$2118+1
  5744  0693  2E9A               	goto	l685
  5745  0694                     l3964:	
  5746  0694  3005               	movlw	5
  5747  0695  1283               	bcf	3,5	;RP0=0, select bank0
  5748  0696  1303               	bcf	3,6	;RP1=0, select bank0
  5749  0697  00D6               	movwf	_getMain_All_Error_Status$2118
  5750  0698  3000               	movlw	0
  5751  0699  00D7               	movwf	_getMain_All_Error_Status$2118+1
  5752  069A                     l685:	
  5753  069A  0856               	movf	_getMain_All_Error_Status$2118,w
  5754  069B  00D3               	movwf	??_getMain_All_Error_Status
  5755  069C  0853               	movf	??_getMain_All_Error_Status,w
  5756  069D  00D9               	movwf	getMain_All_Error_Status@status
  5757  069E                     l681:	
  5758                           
  5759                           ;Main_B1.c: 406: }
  5760                           ;Main_B1.c: 408: return status;
  5761  069E  0859               	movf	getMain_All_Error_Status@status,w
  5762  069F  0008               	return
  5763  06A0                     __end_of_getMain_All_Error_Status:	
  5764                           
  5765                           	psect	text31
  5766  0DB2                     __ptext31:	
  5767 ;; *************** function _getCDS_Status *****************
  5768 ;; Defined at:
  5769 ;;		line 40 in file "../src/CDS_B1.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  status          1    0[BANK0 ] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      unsigned char 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5783 ;;      Params:         0       0       0       0
  5784 ;;      Locals:         0       1       0       0
  5785 ;;      Temps:          0       0       0       0
  5786 ;;      Totals:         0       1       0       0
  5787 ;;Total ram usage:        1 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    3
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_getMain_All_Error_Status
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           
  5798                           ;psect for function _getCDS_Status
  5799  0DB2                     _getCDS_Status:	
  5800                           
  5801                           ;CDS_B1.c: 41: char status = _CDS.Status == 1 ? 1 : 0;
  5802                           
  5803                           ;incstack = 0
  5804                           ; Regs used in _getCDS_Status: [wreg+status,2]
  5805  0DB2  3000               	movlw	0
  5806  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0DB5  1A2B               	btfsc	__CDS,4
  5809  0DB6  3001               	movlw	1
  5810  0DB7  00D2               	movwf	getCDS_Status@status
  5811                           
  5812                           ;CDS_B1.c: 42: return status;
  5813  0DB8  0852               	movf	getCDS_Status@status,w
  5814  0DB9  0008               	return
  5815  0DBA                     __end_of_getCDS_Status:	
  5816                           
  5817                           	psect	text32
  5818  0EAD                     __ptext32:	
  5819 ;; *************** function _PIR_Initialization *****************
  5820 ;; Defined at:
  5821 ;;		line 7 in file "../src/PIR_B1.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;		None
  5826 ;; Return value:  Size  Location     Type
  5827 ;;		None               void
  5828 ;; Registers used:
  5829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5835 ;;      Params:         0       0       0       0
  5836 ;;      Locals:         0       0       0       0
  5837 ;;      Temps:          0       1       0       0
  5838 ;;      Totals:         0       1       0       0
  5839 ;;Total ram usage:        1 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    5
  5842 ;; This function calls:
  5843 ;;		_setLED
  5844 ;; This function is called by:
  5845 ;;		_main
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _PIR_Initialization
  5851  0EAD                     _PIR_Initialization:	
  5852                           
  5853                           ;PIR_B1.c: 8: setLED(1, 1);
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in _PIR_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5857  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0EAF  01D4               	clrf	setLED@command
  5860  0EB0  0AD4               	incf	setLED@command,f
  5861  0EB1  3001               	movlw	1
  5862  0EB2  118A  2448         	fcall	_setLED
  5863                           
  5864                           ;PIR_B1.c: 9: _PIR.RangeValue = 15;
  5865  0EB4  300F               	movlw	15
  5866  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  5867  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  5868  0EB7  00D6               	movwf	??_PIR_Initialization
  5869  0EB8  0856               	movf	??_PIR_Initialization,w
  5870  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  5871  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  5872  0EBB  00CC               	movwf	(__PIR^(0+128)+44)
  5873                           
  5874                           ;PIR_B1.c: 10: _PIR.CloseTimeValue = 5;
  5875  0EBC  3005               	movlw	5
  5876  0EBD  00C7               	movwf	(__PIR^(0+128)+39)
  5877  0EBE  3000               	movlw	0
  5878  0EBF  00C8               	movwf	(__PIR^(0+128)+40)
  5879  0EC0  0008               	return
  5880  0EC1                     __end_of_PIR_Initialization:	
  5881                           
  5882                           	psect	text33
  5883  0E88                     __ptext33:	
  5884 ;; *************** function _Mcu_Initialization *****************
  5885 ;; Defined at:
  5886 ;;		line 30 in file "../src/MCU_B1.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;		None               void
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0, pclath, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5900 ;;      Params:         0       0       0       0
  5901 ;;      Locals:         0       0       0       0
  5902 ;;      Temps:          0       0       0       0
  5903 ;;      Totals:         0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    4
  5907 ;; This function calls:
  5908 ;;		_ADC_Set
  5909 ;;		_Fosc_Set
  5910 ;;		_IO_Set
  5911 ;;		_TMR1_Set
  5912 ;;		_UART_Set
  5913 ;;		_WDT_Set
  5914 ;; This function is called by:
  5915 ;;		_main
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function _Mcu_Initialization
  5921  0E88                     _Mcu_Initialization:	
  5922                           
  5923                           ;MCU_B1.c: 32: Fosc_Set();
  5924                           
  5925                           ;incstack = 0
  5926                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5927  0E88  158A  2593  158A   	fcall	_Fosc_Set
  5928                           
  5929                           ;MCU_B1.c: 34: IO_Set();
  5930  0E8B  158A  26EA  158A   	fcall	_IO_Set
  5931                           
  5932                           ;MCU_B1.c: 36: ;;
  5933                           ;MCU_B1.c: 38: TMR1_Set();
  5934  0E8E  158A  2607  158A   	fcall	_TMR1_Set
  5935                           
  5936                           ;MCU_B1.c: 40: ADC_Set();
  5937  0E91  158A  25AB  158A   	fcall	_ADC_Set
  5938                           
  5939                           ;MCU_B1.c: 42: ;;
  5940                           ;MCU_B1.c: 44: ;;
  5941                           ;MCU_B1.c: 46: ;;
  5942                           ;MCU_B1.c: 48: ;;
  5943                           ;MCU_B1.c: 50: UART_Set();
  5944  0E94  158A  26FF  158A   	fcall	_UART_Set
  5945                           
  5946                           ;MCU_B1.c: 52: WDT_Set();
  5947  0E97  158A  2615         	fcall	_WDT_Set
  5948  0E99  0008               	return
  5949  0E9A                     __end_of_Mcu_Initialization:	
  5950                           
  5951                           	psect	text34
  5952  0E15                     __ptext34:	
  5953 ;; *************** function _WDT_Set *****************
  5954 ;; Defined at:
  5955 ;;		line 1042 in file "../src/MCU_B1.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;		None               void
  5962 ;; Registers used:
  5963 ;;		wreg
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5969 ;;      Params:         0       0       0       0
  5970 ;;      Locals:         0       0       0       0
  5971 ;;      Temps:          0       1       0       0
  5972 ;;      Totals:         0       1       0       0
  5973 ;;Total ram usage:        1 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    3
  5976 ;; This function calls:
  5977 ;;		Nothing
  5978 ;; This function is called by:
  5979 ;;		_Mcu_Initialization
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function _WDT_Set
  5985  0E15                     _WDT_Set:	
  5986                           
  5987                           ;MCU_B1.c: 1044: PSA = 1;
  5988                           
  5989                           ;incstack = 0
  5990                           ; Regs used in _WDT_Set: [wreg]
  5991  0E15  1683               	bsf	3,5	;RP0=1, select bank1
  5992  0E16  1303               	bcf	3,6	;RP1=0, select bank1
  5993  0E17  1581               	bsf	1,3	;volatile
  5994                           
  5995                           ;MCU_B1.c: 1045: PS0 = 1;
  5996  0E18  1401               	bsf	1,0	;volatile
  5997                           
  5998                           ;MCU_B1.c: 1046: PS1 = 1;
  5999  0E19  1481               	bsf	1,1	;volatile
  6000                           
  6001                           ;MCU_B1.c: 1047: PS2 = 1;
  6002  0E1A  1501               	bsf	1,2	;volatile
  6003                           
  6004                           ;MCU_B1.c: 1051: WDT.Enable = 1;
  6005  0E1B  1477               	bsf	_WDT,0
  6006                           
  6007                           ;MCU_B1.c: 1052: WDT.Timer = 10;
  6008  0E1C  300A               	movlw	10
  6009  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0E1F  00D2               	movwf	??_WDT_Set
  6012  0E20  0852               	movf	??_WDT_Set,w
  6013  0E21  00F8               	movwf	_WDT+1
  6014  0E22  0008               	return
  6015  0E23                     __end_of_WDT_Set:	
  6016                           
  6017                           	psect	text35
  6018  0EFF                     __ptext35:	
  6019 ;; *************** function _UART_Set *****************
  6020 ;; Defined at:
  6021 ;;		line 719 in file "../src/MCU_B1.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;		None
  6026 ;; Return value:  Size  Location     Type
  6027 ;;		None               void
  6028 ;; Registers used:
  6029 ;;		wreg
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6035 ;;      Params:         0       0       0       0
  6036 ;;      Locals:         0       0       0       0
  6037 ;;      Temps:          0       0       0       0
  6038 ;;      Totals:         0       0       0       0
  6039 ;;Total ram usage:        0 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    3
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_Mcu_Initialization
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _UART_Set
  6051  0EFF                     _UART_Set:	
  6052                           
  6053                           ;MCU_B1.c: 721: TRISC7 = 1;
  6054                           
  6055                           ;incstack = 0
  6056                           ; Regs used in _UART_Set: [wreg]
  6057  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  6058  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  6059  0F01  1787               	bsf	7,7	;volatile
  6060                           
  6061                           ;MCU_B1.c: 722: TRISC6 = 1;
  6062  0F02  1707               	bsf	7,6	;volatile
  6063                           
  6064                           ;MCU_B1.c: 723: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  6065  0F03  3033               	movlw	51
  6066  0F04  0099               	movwf	25	;volatile
  6067                           
  6068                           ;MCU_B1.c: 728: RCSTA = (0 | 0x90);
  6069  0F05  3090               	movlw	144
  6070  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  6072  0F08  0098               	movwf	24	;volatile
  6073                           
  6074                           ;MCU_B1.c: 729: TXSTA = (0x4 | 0 | 0x20);
  6075  0F09  3024               	movlw	36
  6076  0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  6077  0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  6078  0F0C  0098               	movwf	24	;volatile
  6079                           
  6080                           ;MCU_B1.c: 730: TX9 = 0;
  6081  0F0D  1318               	bcf	24,6	;volatile
  6082                           
  6083                           ;MCU_B1.c: 731: RX9 = 0;
  6084  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  6085  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  6086  0F10  1318               	bcf	24,6	;volatile
  6087                           
  6088                           ;MCU_B1.c: 732: TXIE = 0;
  6089  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  6090  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  6091  0F13  120C               	bcf	12,4	;volatile
  6092                           
  6093                           ;MCU_B1.c: 733: RCIE = 1;
  6094  0F14  168C               	bsf	12,5	;volatile
  6095                           
  6096                           ;MCU_B1.c: 734: PEIE = 1;
  6097  0F15  170B               	bsf	11,6	;volatile
  6098                           
  6099                           ;MCU_B1.c: 735: GIE = 1;
  6100  0F16  178B               	bsf	11,7	;volatile
  6101  0F17  0008               	return
  6102  0F18                     __end_of_UART_Set:	
  6103                           
  6104                           	psect	text36
  6105  0E07                     __ptext36:	
  6106 ;; *************** function _TMR1_Set *****************
  6107 ;; Defined at:
  6108 ;;		line 199 in file "../src/MCU_B1.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;		None               void
  6115 ;; Registers used:
  6116 ;;		wreg
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6122 ;;      Params:         0       0       0       0
  6123 ;;      Locals:         0       0       0       0
  6124 ;;      Temps:          0       0       0       0
  6125 ;;      Totals:         0       0       0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    3
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_Mcu_Initialization
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           
  6137                           ;psect for function _TMR1_Set
  6138  0E07                     _TMR1_Set:	
  6139                           
  6140                           ;MCU_B1.c: 200: T1CON = (0x40 | 0x00 | 0x01);
  6141                           
  6142                           ;incstack = 0
  6143                           ; Regs used in _TMR1_Set: [wreg]
  6144  0E07  3041               	movlw	65
  6145  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  6146  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  6147  0E0A  0090               	movwf	16	;volatile
  6148                           
  6149                           ;MCU_B1.c: 201: TMR1H = ((65536-1480)/256);
  6150  0E0B  30FA               	movlw	250
  6151  0E0C  008F               	movwf	15	;volatile
  6152                           
  6153                           ;MCU_B1.c: 202: TMR1L = ((65536-1480)%256);
  6154  0E0D  3038               	movlw	56
  6155  0E0E  008E               	movwf	14	;volatile
  6156                           
  6157                           ;MCU_B1.c: 203: TMR1IE = 1;
  6158  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  6159  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  6160  0E11  140C               	bsf	12,0	;volatile
  6161                           
  6162                           ;MCU_B1.c: 204: PEIE = 1;
  6163  0E12  170B               	bsf	11,6	;volatile
  6164                           
  6165                           ;MCU_B1.c: 205: GIE = 1;
  6166  0E13  178B               	bsf	11,7	;volatile
  6167  0E14  0008               	return
  6168  0E15                     __end_of_TMR1_Set:	
  6169                           
  6170                           	psect	text37
  6171  0EEA                     __ptext37:	
  6172 ;; *************** function _IO_Set *****************
  6173 ;; Defined at:
  6174 ;;		line 60 in file "../src/MCU_B1.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;		None               void
  6181 ;; Registers used:
  6182 ;;		wreg, status,2
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6188 ;;      Params:         0       0       0       0
  6189 ;;      Locals:         0       0       0       0
  6190 ;;      Temps:          0       0       0       0
  6191 ;;      Totals:         0       0       0       0
  6192 ;;Total ram usage:        0 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    3
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_Mcu_Initialization
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function _IO_Set
  6204  0EEA                     _IO_Set:	
  6205                           
  6206                           ;MCU_B1.c: 62: TRISA = 0b00101111;;
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in _IO_Set: [wreg+status,2]
  6210  0EEA  302F               	movlw	47
  6211  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  6212  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  6213  0EED  0085               	movwf	5	;volatile
  6214                           
  6215                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  6216  0EEE  3001               	movlw	1
  6217  0EEF  0086               	movwf	6	;volatile
  6218                           
  6219                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  6220  0EF0  0187               	clrf	7	;volatile
  6221                           
  6222                           ;MCU_B1.c: 65: ANSELA = 0b00000111;;
  6223  0EF1  3007               	movlw	7
  6224  0EF2  1683               	bsf	3,5	;RP0=1, select bank3
  6225  0EF3  1703               	bsf	3,6	;RP1=1, select bank3
  6226  0EF4  0085               	movwf	5	;volatile
  6227                           
  6228                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  6229  0EF5  3001               	movlw	1
  6230  0EF6  0086               	movwf	6	;volatile
  6231                           
  6232                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  6233  0EF7  30AF               	movlw	175
  6234  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  6235  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  6236  0EFA  0085               	movwf	5	;volatile
  6237                           
  6238                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  6239  0EFB  3001               	movlw	1
  6240  0EFC  0086               	movwf	6	;volatile
  6241                           
  6242                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  6243  0EFD  0187               	clrf	7	;volatile
  6244  0EFE  0008               	return
  6245  0EFF                     __end_of_IO_Set:	
  6246                           
  6247                           	psect	text38
  6248  0D93                     __ptext38:	
  6249 ;; *************** function _Fosc_Set *****************
  6250 ;; Defined at:
  6251 ;;		line 56 in file "../src/MCU_B1.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;		None               void
  6258 ;; Registers used:
  6259 ;;		wreg
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6265 ;;      Params:         0       0       0       0
  6266 ;;      Locals:         0       0       0       0
  6267 ;;      Temps:          0       0       0       0
  6268 ;;      Totals:         0       0       0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    3
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_Mcu_Initialization
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _Fosc_Set
  6281  0D93                     _Fosc_Set:	
  6282                           
  6283                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in _Fosc_Set: [wreg]
  6287  0D93  303C               	movlw	60
  6288  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  6289  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  6290  0D96  0090               	movwf	16	;volatile
  6291  0D97  0008               	return
  6292  0D98                     __end_of_Fosc_Set:	
  6293                           
  6294                           	psect	text39
  6295  0DAB                     __ptext39:	
  6296 ;; *************** function _ADC_Set *****************
  6297 ;; Defined at:
  6298 ;;		line 420 in file "../src/MCU_B1.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;		None               void
  6305 ;; Registers used:
  6306 ;;		wreg
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6312 ;;      Params:         0       0       0       0
  6313 ;;      Locals:         0       0       0       0
  6314 ;;      Temps:          0       0       0       0
  6315 ;;      Totals:         0       0       0       0
  6316 ;;Total ram usage:        0 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    3
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_Mcu_Initialization
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function _ADC_Set
  6328  0DAB                     _ADC_Set:	
  6329                           
  6330                           ;MCU_B1.c: 421: ADCON1 = 0x73;
  6331                           
  6332                           ;incstack = 0
  6333                           ; Regs used in _ADC_Set: [wreg]
  6334  0DAB  3073               	movlw	115
  6335  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  6336  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  6337  0DAE  009F               	movwf	31	;volatile
  6338                           
  6339                           ;MCU_B1.c: 422: FVRCON = 0xc1;
  6340  0DAF  30C1               	movlw	193
  6341  0DB0  009D               	movwf	29	;volatile
  6342  0DB1  0008               	return
  6343  0DB2                     __end_of_ADC_Set:	
  6344                           
  6345                           	psect	text40
  6346  0DCA                     __ptext40:	
  6347 ;; *************** function _Lights_Main *****************
  6348 ;; Defined at:
  6349 ;;		line 54 in file "../src/TriacRelay_B1.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6363 ;;      Params:         0       0       0       0
  6364 ;;      Locals:         0       0       0       0
  6365 ;;      Temps:          0       0       0       0
  6366 ;;      Totals:         0       0       0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    7
  6370 ;; This function calls:
  6371 ;;		_Lights_Close
  6372 ;;		_Lights_Control
  6373 ;;		_setLights_Main
  6374 ;; This function is called by:
  6375 ;;		_main
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function _Lights_Main
  6381  0DCA                     _Lights_Main:	
  6382                           
  6383                           ;TriacRelay_B1.c: 67: setLights_Main(1);
  6384                           
  6385                           ;incstack = 0
  6386                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6387  0DCA  3001               	movlw	1
  6388  0DCB  158A  27AE  158A   	fcall	_setLights_Main
  6389                           
  6390                           ;TriacRelay_B1.c: 68: Lights_Control(1);
  6391  0DCE  3001               	movlw	1
  6392  0DCF  118A  2573  158A   	fcall	_Lights_Control
  6393                           
  6394                           ;TriacRelay_B1.c: 81: Lights_Close();
  6395  0DD2  158A  26D5         	fcall	_Lights_Close
  6396  0DD4  0008               	return
  6397  0DD5                     __end_of_Lights_Main:	
  6398                           
  6399                           	psect	text41
  6400  0FAE                     __ptext41:	
  6401 ;; *************** function _setLights_Main *****************
  6402 ;; Defined at:
  6403 ;;		line 93 in file "../src/TriacRelay_B1.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  lights          1    wreg     unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  lights          1    6[BANK0 ] unsigned char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;		None               void
  6410 ;; Registers used:
  6411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6417 ;;      Params:         0       0       0       0
  6418 ;;      Locals:         0       1       0       0
  6419 ;;      Temps:          0       0       0       0
  6420 ;;      Totals:         0       1       0       0
  6421 ;;Total ram usage:        1 bytes
  6422 ;; Hardware stack levels used:    1
  6423 ;; Hardware stack levels required when called:    6
  6424 ;; This function calls:
  6425 ;;		_LightsPointSelect
  6426 ;;		_setLights
  6427 ;; This function is called by:
  6428 ;;		_Lights_Main
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _setLights_Main
  6434  0FAE                     _setLights_Main:	
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6438                           ;setLights_Main@lights stored from wreg
  6439  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  6441  0FB0  00D8               	movwf	setLights_Main@lights
  6442                           
  6443                           ;TriacRelay_B1.c: 94: LightsPointSelect(lights);
  6444  0FB1  0858               	movf	setLights_Main@lights,w
  6445  0FB2  158A  25E1  158A   	fcall	_LightsPointSelect
  6446                           
  6447                           ;TriacRelay_B1.c: 95: if (Lights->GO == 0) {
  6448  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  6449  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  6450  0FB7  0838               	movf	_Lights,w
  6451  0FB8  0084               	movwf	4
  6452  0FB9  1383               	bcf	3,7	;select IRP bank0
  6453  0FBA  1880               	btfsc	0,1
  6454  0FBB  0008               	return
  6455                           
  6456                           ;TriacRelay_B1.c: 96: if (Lights->Trigger == 1) {
  6457  0FBC  0838               	movf	_Lights,w
  6458  0FBD  0084               	movwf	4
  6459  0FBE  1D80               	btfss	0,3
  6460  0FBF  0008               	return
  6461                           
  6462                           ;TriacRelay_B1.c: 97: if (LightsControl.LoadOK == 0) {
  6463  0FC0  1939               	btfsc	_LightsControl,2
  6464  0FC1  0008               	return
  6465                           
  6466                           ;TriacRelay_B1.c: 98: Lights->Trigger = 0;
  6467  0FC2  0838               	movf	_Lights,w
  6468  0FC3  0084               	movwf	4
  6469  0FC4  1180               	bcf	0,3
  6470                           
  6471                           ;TriacRelay_B1.c: 100: if (Lights->Switch == 1) {
  6472  0FC5  0838               	movf	_Lights,w
  6473  0FC6  0084               	movwf	4
  6474  0FC7  1E00               	btfss	0,4
  6475  0FC8  2FCF               	goto	l4238
  6476                           
  6477                           ;TriacRelay_B1.c: 101: setLights(lights, 1);
  6478  0FC9  01D5               	clrf	setLights@status
  6479  0FCA  0AD5               	incf	setLights@status,f
  6480  0FCB  0858               	movf	setLights_Main@lights,w
  6481  0FCC  118A  25CC         	fcall	_setLights
  6482                           
  6483                           ;TriacRelay_B1.c: 102: } else {
  6484  0FCE  0008               	return
  6485  0FCF                     l4238:	
  6486                           
  6487                           ;TriacRelay_B1.c: 103: setLights(lights, 0);
  6488  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  6489  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  6490  0FD1  01D5               	clrf	setLights@status
  6491  0FD2  0858               	movf	setLights_Main@lights,w
  6492  0FD3  118A  25CC         	fcall	_setLights
  6493  0FD5  0008               	return
  6494  0FD6                     __end_of_setLights_Main:	
  6495                           
  6496                           	psect	text42
  6497  05CC                     __ptext42:	
  6498 ;; *************** function _setLights *****************
  6499 ;; Defined at:
  6500 ;;		line 111 in file "../src/TriacRelay_B1.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  lights          1    wreg     unsigned char 
  6503 ;;  status          1    3[BANK0 ] unsigned char 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  lights          1    5[BANK0 ] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;		None               void
  6508 ;; Registers used:
  6509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6515 ;;      Params:         0       1       0       0
  6516 ;;      Locals:         0       1       0       0
  6517 ;;      Temps:          0       1       0       0
  6518 ;;      Totals:         0       3       0       0
  6519 ;;Total ram usage:        3 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    5
  6522 ;; This function calls:
  6523 ;;		_LightsPointSelect
  6524 ;;		_setLights_Line
  6525 ;; This function is called by:
  6526 ;;		_setLights_Main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function _setLights
  6532  05CC                     _setLights:	
  6533                           
  6534                           ;incstack = 0
  6535                           ; Regs used in _setLights: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6536                           ;setLights@lights stored from wreg
  6537  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  6538  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  6539  05CE  00D7               	movwf	setLights@lights
  6540                           
  6541                           ;TriacRelay_B1.c: 113: LightsPointSelect(lights);
  6542  05CF  0857               	movf	setLights@lights,w
  6543  05D0  158A  25E1  118A   	fcall	_LightsPointSelect
  6544                           
  6545                           ;TriacRelay_B1.c: 120: Lights->GO = 1;
  6546  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  6547  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  6548  05D5  0838               	movf	_Lights,w
  6549  05D6  0084               	movwf	4
  6550  05D7  1383               	bcf	3,7	;select IRP bank0
  6551  05D8  1480               	bsf	0,1
  6552                           
  6553                           ;TriacRelay_B1.c: 121: if (status == 1) {
  6554  05D9  0855               	movf	setLights@status,w
  6555  05DA  3A01               	xorlw	1
  6556  05DB  1D03               	skipz
  6557  05DC  2DFA               	goto	l3980
  6558                           
  6559                           ;TriacRelay_B1.c: 122: if (Lights->Status == 0) {
  6560  05DD  0838               	movf	_Lights,w
  6561  05DE  0084               	movwf	4
  6562  05DF  1900               	btfsc	0,2
  6563  05E0  2E15               	goto	l3984
  6564                           
  6565                           ;TriacRelay_B1.c: 123: Lights->Status = 1;
  6566  05E1  0838               	movf	_Lights,w
  6567  05E2  0084               	movwf	4
  6568  05E3  1500               	bsf	0,2
  6569                           
  6570                           ;TriacRelay_B1.c: 124: Lights->Loop = 1;
  6571  05E4  0A38               	incf	_Lights,w
  6572  05E5  0084               	movwf	4
  6573  05E6  1480               	bsf	0,1
  6574                           
  6575                           ;TriacRelay_B1.c: 125: Lights->RelayValue = 10;
  6576  05E7  300A               	movlw	10
  6577  05E8  00D6               	movwf	??_setLights
  6578  05E9  0838               	movf	_Lights,w
  6579  05EA  3E06               	addlw	6
  6580  05EB  0084               	movwf	4
  6581  05EC  0856               	movf	??_setLights,w
  6582  05ED  0080               	movwf	0
  6583                           
  6584                           ;TriacRelay_B1.c: 126: Lights->TriacValue = 13;
  6585  05EE  300D               	movlw	13
  6586  05EF  00D6               	movwf	??_setLights
  6587  05F0  0838               	movf	_Lights,w
  6588  05F1  3E04               	addlw	4
  6589  05F2  0084               	movwf	4
  6590  05F3  0856               	movf	??_setLights,w
  6591  05F4  0080               	movwf	0
  6592                           
  6593                           ;TriacRelay_B1.c: 127: setLights_Line(lights);
  6594  05F5  0857               	movf	setLights@lights,w
  6595  05F6  158A  2676  118A   	fcall	_setLights_Line
  6596                           
  6597                           ;TriacRelay_B1.c: 128: }
  6598                           ;TriacRelay_B1.c: 129: } else {
  6599  05F9  2E15               	goto	l3984
  6600  05FA                     l3980:	
  6601                           
  6602                           ;TriacRelay_B1.c: 130: if (Lights->Status == 1) {
  6603  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  6604  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  6605  05FC  0838               	movf	_Lights,w
  6606  05FD  0084               	movwf	4
  6607  05FE  1383               	bcf	3,7	;select IRP bank0
  6608  05FF  1D00               	btfss	0,2
  6609  0600  2E15               	goto	l3984
  6610                           
  6611                           ;TriacRelay_B1.c: 131: Lights->Status = 0;
  6612  0601  0838               	movf	_Lights,w
  6613  0602  0084               	movwf	4
  6614  0603  1100               	bcf	0,2
  6615                           
  6616                           ;TriacRelay_B1.c: 132: Lights->Loop = 0;
  6617  0604  0A38               	incf	_Lights,w
  6618  0605  0084               	movwf	4
  6619  0606  1080               	bcf	0,1
  6620                           
  6621                           ;TriacRelay_B1.c: 133: Lights->RelayValue = 4;
  6622  0607  3004               	movlw	4
  6623  0608  00D6               	movwf	??_setLights
  6624  0609  0838               	movf	_Lights,w
  6625  060A  3E06               	addlw	6
  6626  060B  0084               	movwf	4
  6627  060C  0856               	movf	??_setLights,w
  6628  060D  0080               	movwf	0
  6629                           
  6630                           ;TriacRelay_B1.c: 134: Lights->TriacValue = 7;
  6631  060E  3007               	movlw	7
  6632  060F  00D6               	movwf	??_setLights
  6633  0610  0838               	movf	_Lights,w
  6634  0611  3E04               	addlw	4
  6635  0612  0084               	movwf	4
  6636  0613  0856               	movf	??_setLights,w
  6637  0614  0080               	movwf	0
  6638  0615                     l3984:	
  6639                           
  6640                           ;TriacRelay_B1.c: 135: }
  6641                           ;TriacRelay_B1.c: 136: }
  6642                           ;TriacRelay_B1.c: 138: if (lights == 1) {
  6643  0615  1283               	bcf	3,5	;RP0=0, select bank0
  6644  0616  1303               	bcf	3,6	;RP1=0, select bank0
  6645  0617  0857               	movf	setLights@lights,w
  6646  0618  3A01               	xorlw	1
  6647  0619  1D03               	skipz
  6648  061A  0008               	return
  6649                           
  6650                           ;TriacRelay_B1.c: 139: RB2 = 1;
  6651  061B  1506               	bsf	6,2	;volatile
  6652  061C  0008               	return
  6653  061D                     __end_of_setLights:	
  6654                           
  6655                           	psect	text43
  6656  0E76                     __ptext43:	
  6657 ;; *************** function _setLights_Line *****************
  6658 ;; Defined at:
  6659 ;;		line 221 in file "../src/TriacRelay_B1.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  lights          1    wreg     unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  lights          1    2[BANK0 ] unsigned char 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;		None               void
  6666 ;; Registers used:
  6667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6673 ;;      Params:         0       0       0       0
  6674 ;;      Locals:         0       1       0       0
  6675 ;;      Temps:          0       0       0       0
  6676 ;;      Totals:         0       1       0       0
  6677 ;;Total ram usage:        1 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    4
  6680 ;; This function calls:
  6681 ;;		_LightsPointSelect
  6682 ;; This function is called by:
  6683 ;;		_setLights
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           
  6688                           ;psect for function _setLights_Line
  6689  0E76                     _setLights_Line:	
  6690                           
  6691                           ;incstack = 0
  6692                           ; Regs used in _setLights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6693                           ;setLights_Line@lights stored from wreg
  6694  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  6695  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  6696  0E78  00D4               	movwf	setLights_Line@lights
  6697                           
  6698                           ;TriacRelay_B1.c: 223: Lights1.Line = 0;
  6699  0E79  1683               	bsf	3,5	;RP0=1, select bank1
  6700  0E7A  1303               	bcf	3,6	;RP1=0, select bank1
  6701  0E7B  105C               	bcf	(_Lights1^(0+128)+1),0
  6702                           
  6703                           ;TriacRelay_B1.c: 231: LightsPointSelect(lights);
  6704  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  6705  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  6706  0E7E  0854               	movf	setLights_Line@lights,w
  6707  0E7F  158A  25E1         	fcall	_LightsPointSelect
  6708                           
  6709                           ;TriacRelay_B1.c: 232: Lights->Line = 1;
  6710  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  6711  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  6712  0E83  0A38               	incf	_Lights,w
  6713  0E84  0084               	movwf	4
  6714  0E85  1383               	bcf	3,7	;select IRP bank0
  6715  0E86  1400               	bsf	0,0
  6716  0E87  0008               	return
  6717  0E88                     __end_of_setLights_Line:	
  6718                           
  6719                           	psect	text44
  6720  0573                     __ptext44:	
  6721 ;; *************** function _Lights_Control *****************
  6722 ;; Defined at:
  6723 ;;		line 155 in file "../src/TriacRelay_B1.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  lights          1    wreg     unsigned char 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  lights          1    4[BANK0 ] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;		None               void
  6730 ;; Registers used:
  6731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6737 ;;      Params:         0       0       0       0
  6738 ;;      Locals:         0       1       0       0
  6739 ;;      Temps:          0       2       0       0
  6740 ;;      Totals:         0       3       0       0
  6741 ;;Total ram usage:        3 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    4
  6744 ;; This function calls:
  6745 ;;		_LightsPointSelect
  6746 ;; This function is called by:
  6747 ;;		_Lights_Main
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           
  6752                           ;psect for function _Lights_Control
  6753  0573                     _Lights_Control:	
  6754                           
  6755                           ;incstack = 0
  6756                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6757                           ;Lights_Control@lights stored from wreg
  6758  0573  1283               	bcf	3,5	;RP0=0, select bank0
  6759  0574  1303               	bcf	3,6	;RP1=0, select bank0
  6760  0575  00D6               	movwf	Lights_Control@lights
  6761                           
  6762                           ;TriacRelay_B1.c: 156: LightsPointSelect(lights);
  6763  0576  0856               	movf	Lights_Control@lights,w
  6764  0577  158A  25E1  118A   	fcall	_LightsPointSelect
  6765                           
  6766                           ;TriacRelay_B1.c: 157: if (Lights->GO == 1) {
  6767  057A  1283               	bcf	3,5	;RP0=0, select bank0
  6768  057B  1303               	bcf	3,6	;RP1=0, select bank0
  6769  057C  0838               	movf	_Lights,w
  6770  057D  0084               	movwf	4
  6771  057E  1383               	bcf	3,7	;select IRP bank0
  6772  057F  1C80               	btfss	0,1
  6773  0580  0008               	return
  6774                           
  6775                           ;TriacRelay_B1.c: 158: Lights->Time++;
  6776  0581  3001               	movlw	1
  6777  0582  00D4               	movwf	??_Lights_Control
  6778  0583  0838               	movf	_Lights,w
  6779  0584  3E02               	addlw	2
  6780  0585  0084               	movwf	4
  6781  0586  0854               	movf	??_Lights_Control,w
  6782  0587  0780               	addwf	0,f
  6783                           
  6784                           ;TriacRelay_B1.c: 159: if (Lights->Time >= Lights->RelayValue && Lights->RelaySet == 0) 
      +                          {
  6785  0588  0838               	movf	_Lights,w
  6786  0589  3E06               	addlw	6
  6787  058A  0084               	movwf	4
  6788  058B  0800               	movf	0,w
  6789  058C  00D4               	movwf	??_Lights_Control
  6790  058D  0838               	movf	_Lights,w
  6791  058E  3E02               	addlw	2
  6792  058F  0084               	movwf	4
  6793  0590  0800               	movf	0,w
  6794  0591  00D5               	movwf	??_Lights_Control+1
  6795  0592  0854               	movf	??_Lights_Control,w
  6796  0593  0255               	subwf	??_Lights_Control+1,w
  6797  0594  1C03               	skipc
  6798  0595  2DAD               	goto	l3218
  6799  0596  0838               	movf	_Lights,w
  6800  0597  0084               	movwf	4
  6801  0598  1B80               	btfsc	0,7
  6802  0599  2DAD               	goto	l3218
  6803                           
  6804                           ;TriacRelay_B1.c: 160: Lights->RelaySet = 1;
  6805  059A  0838               	movf	_Lights,w
  6806  059B  0084               	movwf	4
  6807  059C  1780               	bsf	0,7
  6808                           
  6809                           ;TriacRelay_B1.c: 162: if (lights == 1) {
  6810  059D  0856               	movf	Lights_Control@lights,w
  6811  059E  3A01               	xorlw	1
  6812  059F  1D03               	skipz
  6813  05A0  0008               	return
  6814                           
  6815                           ;TriacRelay_B1.c: 163: RA4 = Lights->Status == 1 ? 1 : 0;
  6816  05A1  0838               	movf	_Lights,w
  6817  05A2  0084               	movwf	4
  6818  05A3  1D00               	btfss	0,2
  6819  05A4  2DA9               	goto	u2780
  6820  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6821  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6822  05A7  1605               	bsf	5,4	;volatile
  6823  05A8  0008               	return
  6824  05A9                     u2780:	
  6825  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  6826  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  6827  05AB  1205               	bcf	5,4	;volatile
  6828                           
  6829                           ;TriacRelay_B1.c: 164: }
  6830                           ;TriacRelay_B1.c: 177: } else if (Lights->Time >= Lights->TriacValue) {
  6831  05AC  0008               	return
  6832  05AD                     l3218:	
  6833  05AD  0838               	movf	_Lights,w
  6834  05AE  3E04               	addlw	4
  6835  05AF  0084               	movwf	4
  6836  05B0  1383               	bcf	3,7	;select IRP bank0
  6837  05B1  0800               	movf	0,w
  6838  05B2  00D4               	movwf	??_Lights_Control
  6839  05B3  0838               	movf	_Lights,w
  6840  05B4  3E02               	addlw	2
  6841  05B5  0084               	movwf	4
  6842  05B6  0800               	movf	0,w
  6843  05B7  00D5               	movwf	??_Lights_Control+1
  6844  05B8  0854               	movf	??_Lights_Control,w
  6845  05B9  0255               	subwf	??_Lights_Control+1,w
  6846  05BA  1C03               	skipc
  6847  05BB  0008               	return
  6848                           
  6849                           ;TriacRelay_B1.c: 178: Lights->Time = 0;
  6850  05BC  0838               	movf	_Lights,w
  6851  05BD  3E02               	addlw	2
  6852  05BE  0084               	movwf	4
  6853  05BF  0180               	clrf	0
  6854                           
  6855                           ;TriacRelay_B1.c: 179: Lights->GO = 0;
  6856  05C0  0838               	movf	_Lights,w
  6857  05C1  0084               	movwf	4
  6858  05C2  1080               	bcf	0,1
  6859                           
  6860                           ;TriacRelay_B1.c: 180: Lights->RelaySet = 0;
  6861  05C3  0838               	movf	_Lights,w
  6862  05C4  0084               	movwf	4
  6863  05C5  1380               	bcf	0,7
  6864                           
  6865                           ;TriacRelay_B1.c: 187: if (lights == 1) {
  6866  05C6  0856               	movf	Lights_Control@lights,w
  6867  05C7  3A01               	xorlw	1
  6868  05C8  1D03               	skipz
  6869  05C9  0008               	return
  6870                           
  6871                           ;TriacRelay_B1.c: 188: RB2 = 0;
  6872  05CA  1106               	bcf	6,2	;volatile
  6873  05CB  0008               	return
  6874  05CC                     __end_of_Lights_Control:	
  6875                           
  6876                           	psect	text45
  6877  0ED5                     __ptext45:	
  6878 ;; *************** function _Lights_Close *****************
  6879 ;; Defined at:
  6880 ;;		line 85 in file "../src/TriacRelay_B1.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;		None               void
  6887 ;; Registers used:
  6888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6894 ;;      Params:         0       0       0       0
  6895 ;;      Locals:         0       0       0       0
  6896 ;;      Temps:          0       1       0       0
  6897 ;;      Totals:         0       1       0       0
  6898 ;;Total ram usage:        1 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    6
  6901 ;; This function calls:
  6902 ;;		_getMain_LightsStatus
  6903 ;; This function is called by:
  6904 ;;		_Lights_Main
  6905 ;; This function uses a non-reentrant model
  6906 ;;
  6907                           
  6908                           
  6909                           ;psect for function _Lights_Close
  6910  0ED5                     _Lights_Close:	
  6911                           
  6912                           ;TriacRelay_B1.c: 86: if (LightsControl.Detect == 1) {
  6913                           
  6914                           ;incstack = 0
  6915                           ; Regs used in _Lights_Close: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6916  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  6917  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  6918  0ED7  1C39               	btfss	_LightsControl,0
  6919  0ED8  0008               	return
  6920                           
  6921                           ;TriacRelay_B1.c: 87: LightsControl.Detect = 0;
  6922  0ED9  1039               	bcf	_LightsControl,0
  6923                           
  6924                           ;TriacRelay_B1.c: 88: LightsControl.LoadGO = getMain_LightsStatus() == 0 ? 0 : 1;
  6925  0EDA  118A  278A         	fcall	_getMain_LightsStatus
  6926  0EDC  3800               	iorlw	0
  6927  0EDD  3000               	movlw	0
  6928  0EDE  1D03               	skipz
  6929  0EDF  3001               	movlw	1
  6930  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  6932  0EE2  00DB               	movwf	??_Lights_Close
  6933  0EE3  0DDB               	rlf	??_Lights_Close,f
  6934  0EE4  0839               	movf	_LightsControl,w
  6935  0EE5  065B               	xorwf	??_Lights_Close,w
  6936  0EE6  39FD               	andlw	-3
  6937  0EE7  065B               	xorwf	??_Lights_Close,w
  6938  0EE8  00B9               	movwf	_LightsControl
  6939  0EE9  0008               	return
  6940  0EEA                     __end_of_Lights_Close:	
  6941                           
  6942                           	psect	text46
  6943  078A                     __ptext46:	
  6944 ;; *************** function _getMain_LightsStatus *****************
  6945 ;; Defined at:
  6946 ;;		line 344 in file "../src/Main_B1.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  i               2    6[BANK0 ] int 
  6951 ;;  status          1    8[BANK0 ] unsigned char 
  6952 ;;  count           1    5[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      unsigned char 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6962 ;;      Params:         0       0       0       0
  6963 ;;      Locals:         0       4       0       0
  6964 ;;      Temps:          0       1       0       0
  6965 ;;      Totals:         0       5       0       0
  6966 ;;Total ram usage:        5 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    5
  6969 ;; This function calls:
  6970 ;;		_getLights_Status
  6971 ;; This function is called by:
  6972 ;;		_setTemp_Main
  6973 ;;		_Lights_Close
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           
  6978                           ;psect for function _getMain_LightsStatus
  6979  078A                     _getMain_LightsStatus:	
  6980                           
  6981                           ;Main_B1.c: 345: char status = 0, count = 0;
  6982                           
  6983                           ;incstack = 0
  6984                           ; Regs used in _getMain_LightsStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6985  078A  1283               	bcf	3,5	;RP0=0, select bank0
  6986  078B  1303               	bcf	3,6	;RP1=0, select bank0
  6987  078C  01DA               	clrf	getMain_LightsStatus@status
  6988  078D  01D7               	clrf	getMain_LightsStatus@count
  6989                           
  6990                           ;Main_B1.c: 348: count = 1;
  6991  078E  01D7               	clrf	getMain_LightsStatus@count
  6992  078F  0AD7               	incf	getMain_LightsStatus@count,f
  6993                           
  6994                           ;Main_B1.c: 357: for (int i = 0; i < count; i++) {
  6995  0790  01D8               	clrf	getMain_LightsStatus@i
  6996  0791  01D9               	clrf	getMain_LightsStatus@i+1
  6997  0792                     l3932:	
  6998  0792  0859               	movf	getMain_LightsStatus@i+1,w
  6999  0793  3A80               	xorlw	128
  7000  0794  00D6               	movwf	??_getMain_LightsStatus
  7001  0795  3080               	movlw	128
  7002  0796  0256               	subwf	??_getMain_LightsStatus,w
  7003  0797  1D03               	skipz
  7004  0798  2F9B               	goto	u4025
  7005  0799  0857               	movf	getMain_LightsStatus@count,w
  7006  079A  0258               	subwf	getMain_LightsStatus@i,w
  7007  079B                     u4025:	
  7008  079B  1803               	btfsc	3,0
  7009  079C  2FB7               	goto	l3934
  7010                           
  7011                           ;Main_B1.c: 358: if (status == 0) {
  7012  079D  1283               	bcf	3,5	;RP0=0, select bank0
  7013  079E  1303               	bcf	3,6	;RP1=0, select bank0
  7014  079F  08DA               	movf	getMain_LightsStatus@status,f
  7015  07A0  1D03               	skipz
  7016  07A1  2FB0               	goto	l3930
  7017                           
  7018                           ;Main_B1.c: 360: status = getLights_Status(i + 1) == 1 ? 1 : 0;
  7019  07A2  0858               	movf	getMain_LightsStatus@i,w
  7020  07A3  3E01               	addlw	1
  7021  07A4  158A  2631  118A   	fcall	_getLights_Status
  7022  07A7  3A01               	xorlw	1
  7023  07A8  3000               	movlw	0
  7024  07A9  1903               	skipnz
  7025  07AA  3001               	movlw	1
  7026  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  7027  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  7028  07AD  00D6               	movwf	??_getMain_LightsStatus
  7029  07AE  0856               	movf	??_getMain_LightsStatus,w
  7030  07AF  00DA               	movwf	getMain_LightsStatus@status
  7031  07B0                     l3930:	
  7032  07B0  3001               	movlw	1
  7033  07B1  07D8               	addwf	getMain_LightsStatus@i,f
  7034  07B2  1803               	skipnc
  7035  07B3  0AD9               	incf	getMain_LightsStatus@i+1,f
  7036  07B4  3000               	movlw	0
  7037  07B5  07D9               	addwf	getMain_LightsStatus@i+1,f
  7038  07B6  2F92               	goto	l3932
  7039  07B7                     l3934:	
  7040                           
  7041                           ;Main_B1.c: 365: }
  7042                           ;Main_B1.c: 366: }
  7043                           ;Main_B1.c: 367: return status;
  7044  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  7045  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  7046  07B9  085A               	movf	getMain_LightsStatus@status,w
  7047  07BA  0008               	return
  7048  07BB                     __end_of_getMain_LightsStatus:	
  7049                           
  7050                           	psect	text47
  7051  0E31                     __ptext47:	
  7052 ;; *************** function _getLights_Status *****************
  7053 ;; Defined at:
  7054 ;;		line 207 in file "../src/TriacRelay_B1.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  lights          1    wreg     unsigned char 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  lights          1    2[BANK0 ] unsigned char 
  7059 ;;  status          1    3[BANK0 ] unsigned char 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      unsigned char 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7069 ;;      Params:         0       0       0       0
  7070 ;;      Locals:         0       2       0       0
  7071 ;;      Temps:          0       0       0       0
  7072 ;;      Totals:         0       2       0       0
  7073 ;;Total ram usage:        2 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; Hardware stack levels required when called:    4
  7076 ;; This function calls:
  7077 ;;		_LightsPointSelect
  7078 ;; This function is called by:
  7079 ;;		_getMain_LightsStatus
  7080 ;;		_PIR_Main
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           
  7085                           ;psect for function _getLights_Status
  7086  0E31                     _getLights_Status:	
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7090                           ;getLights_Status@lights stored from wreg
  7091  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  7092  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  7093  0E33  00D4               	movwf	getLights_Status@lights
  7094                           
  7095                           ;TriacRelay_B1.c: 208: LightsPointSelect(lights);
  7096  0E34  0854               	movf	getLights_Status@lights,w
  7097  0E35  158A  25E1         	fcall	_LightsPointSelect
  7098                           
  7099                           ;TriacRelay_B1.c: 209: char status = Lights->Status == 1 ? 1 : 0;
  7100  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  7101  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  7102  0E39  0838               	movf	_Lights,w
  7103  0E3A  0084               	movwf	4
  7104  0E3B  3000               	movlw	0
  7105  0E3C  1383               	bcf	3,7	;select IRP bank0
  7106  0E3D  1900               	btfsc	0,2
  7107  0E3E  3001               	movlw	1
  7108  0E3F  00D5               	movwf	getLights_Status@status
  7109                           
  7110                           ;TriacRelay_B1.c: 210: return status;
  7111  0E40  0855               	movf	getLights_Status@status,w
  7112  0E41  0008               	return
  7113  0E42                     __end_of_getLights_Status:	
  7114                           
  7115                           	psect	text48
  7116  0D87                     __ptext48:	
  7117 ;; *************** function _Lights_Initialization *****************
  7118 ;; Defined at:
  7119 ;;		line 34 in file "../src/TriacRelay_B1.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;		None               void
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0, pclath, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7133 ;;      Params:         0       0       0       0
  7134 ;;      Locals:         0       0       0       0
  7135 ;;      Temps:          0       0       0       0
  7136 ;;      Totals:         0       0       0       0
  7137 ;;Total ram usage:        0 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    5
  7140 ;; This function calls:
  7141 ;;		_setLights_Initialization
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _Lights_Initialization
  7149  0D87                     _Lights_Initialization:	
  7150                           
  7151                           ;TriacRelay_B1.c: 36: setLights_Initialization(1);
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7155  0D87  3001               	movlw	1
  7156  0D88  158A  25A4         	fcall	_setLights_Initialization
  7157  0D8A  0008               	return
  7158  0D8B                     __end_of_Lights_Initialization:	
  7159                           
  7160                           	psect	text49
  7161  0DA4                     __ptext49:	
  7162 ;; *************** function _setLights_Initialization *****************
  7163 ;; Defined at:
  7164 ;;		line 49 in file "../src/TriacRelay_B1.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  lights          1    wreg     unsigned char 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  lights          1    2[BANK0 ] unsigned char 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;		None               void
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0, pclath, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7178 ;;      Params:         0       0       0       0
  7179 ;;      Locals:         0       1       0       0
  7180 ;;      Temps:          0       0       0       0
  7181 ;;      Totals:         0       1       0       0
  7182 ;;Total ram usage:        1 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    4
  7185 ;; This function calls:
  7186 ;;		_LightsPointSelect
  7187 ;; This function is called by:
  7188 ;;		_Lights_Initialization
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           
  7193                           ;psect for function _setLights_Initialization
  7194  0DA4                     _setLights_Initialization:	
  7195                           
  7196                           ;incstack = 0
  7197                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7198                           ;setLights_Initialization@lights stored from wreg
  7199  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  7201  0DA6  00D4               	movwf	setLights_Initialization@lights
  7202                           
  7203                           ;TriacRelay_B1.c: 50: LightsPointSelect(lights);
  7204  0DA7  0854               	movf	setLights_Initialization@lights,w
  7205  0DA8  158A  25E1         	fcall	_LightsPointSelect
  7206  0DAA  0008               	return
  7207  0DAB                     __end_of_setLights_Initialization:	
  7208                           
  7209                           	psect	text50
  7210  0DE1                     __ptext50:	
  7211 ;; *************** function _LightsPointSelect *****************
  7212 ;; Defined at:
  7213 ;;		line 10 in file "../src/TriacRelay_B1.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  lights          1    wreg     unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  lights          1    1[BANK0 ] unsigned char 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;		None               void
  7220 ;; Registers used:
  7221 ;;		wreg
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7227 ;;      Params:         0       0       0       0
  7228 ;;      Locals:         0       1       0       0
  7229 ;;      Temps:          0       1       0       0
  7230 ;;      Totals:         0       2       0       0
  7231 ;;Total ram usage:        2 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    3
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_setLights_Initialization
  7238 ;;		_setLights_Main
  7239 ;;		_setLights
  7240 ;;		_Lights_Control
  7241 ;;		_getLights_Status
  7242 ;;		_setLights_Trigger
  7243 ;;		_setLights_Line
  7244 ;;		_getAll_Lights_Line
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           
  7249                           ;psect for function _LightsPointSelect
  7250  0DE1                     _LightsPointSelect:	
  7251                           
  7252                           ;incstack = 0
  7253                           ; Regs used in _LightsPointSelect: [wreg]
  7254                           ;LightsPointSelect@lights stored from wreg
  7255  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  7256  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  7257  0DE3  00D3               	movwf	LightsPointSelect@lights
  7258                           
  7259                           ;TriacRelay_B1.c: 14: if (lights == 1) {
  7260  0DE4  0853               	movf	LightsPointSelect@lights,w
  7261  0DE5  3A01               	xorlw	1
  7262  0DE6  1D03               	skipz
  7263  0DE7  0008               	return
  7264                           
  7265                           ;TriacRelay_B1.c: 15: Lights = &Lights1;
  7266  0DE8  30DB               	movlw	_Lights1& (0+255)
  7267  0DE9  00D2               	movwf	??_LightsPointSelect
  7268  0DEA  0852               	movf	??_LightsPointSelect,w
  7269  0DEB  00B8               	movwf	_Lights
  7270  0DEC  0008               	return
  7271  0DED                     __end_of_LightsPointSelect:	
  7272                           
  7273                           	psect	text51
  7274  0D74                     __ptext51:	
  7275 ;; *************** function _LED_Main *****************
  7276 ;; Defined at:
  7277 ;;		line 47 in file "../src/LED_B1.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;		None               void
  7284 ;; Registers used:
  7285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7291 ;;      Params:         0       0       0       0
  7292 ;;      Locals:         0       0       0       0
  7293 ;;      Temps:          0       0       0       0
  7294 ;;      Totals:         0       0       0       0
  7295 ;;Total ram usage:        0 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    6
  7298 ;; This function calls:
  7299 ;;		_setPIRLED_Main
  7300 ;; This function is called by:
  7301 ;;		_main
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           
  7306                           ;psect for function _LED_Main
  7307  0D74                     _LED_Main:	
  7308                           
  7309                           ;LED_B1.c: 50: setPIRLED_Main();
  7310                           
  7311                           ;incstack = 0
  7312                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7313  0D74  118A  23D7         	fcall	_setPIRLED_Main
  7314  0D76  0008               	return
  7315  0D77                     __end_of_LED_Main:	
  7316                           
  7317                           	psect	text52
  7318  03D7                     __ptext52:	
  7319 ;; *************** function _setPIRLED_Main *****************
  7320 ;; Defined at:
  7321 ;;		line 253 in file "../src/LED_B1.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;		None
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  count           1    5[BANK0 ] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;		None               void
  7328 ;; Registers used:
  7329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7335 ;;      Params:         0       0       0       0
  7336 ;;      Locals:         0       1       0       0
  7337 ;;      Temps:          0       1       0       0
  7338 ;;      Totals:         0       2       0       0
  7339 ;;Total ram usage:        2 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    5
  7342 ;; This function calls:
  7343 ;;		_setLED
  7344 ;; This function is called by:
  7345 ;;		_LED_Main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           
  7350                           ;psect for function _setPIRLED_Main
  7351  03D7                     _setPIRLED_Main:	
  7352                           
  7353                           ;LED_B1.c: 254: char count;
  7354                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  7355                           
  7356                           ;incstack = 0
  7357                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7358  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  7359  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  7360  03D9  1C30               	btfss	_PIRLED,0
  7361  03DA  0008               	return
  7362                           
  7363                           ;LED_B1.c: 256: PIRLED.Time++;
  7364  03DB  3001               	movlw	1
  7365  03DC  07B2               	addwf	_PIRLED+2,f
  7366  03DD  1803               	skipnc
  7367  03DE  0AB3               	incf	_PIRLED+3,f
  7368  03DF  3000               	movlw	0
  7369  03E0  07B3               	addwf	_PIRLED+3,f
  7370                           
  7371                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 10) {
  7372  03E1  3000               	movlw	0
  7373  03E2  0233               	subwf	_PIRLED+3,w
  7374  03E3  3032               	movlw	50
  7375  03E4  1903               	skipnz
  7376  03E5  0232               	subwf	_PIRLED+2,w
  7377  03E6  1C03               	skipc
  7378  03E7  0008               	return
  7379                           
  7380                           ;LED_B1.c: 258: PIRLED.Time = 0;
  7381  03E8  01B2               	clrf	_PIRLED+2
  7382  03E9  01B3               	clrf	_PIRLED+3
  7383                           
  7384                           ;LED_B1.c: 259: setLED(1, 0);
  7385  03EA  01D4               	clrf	setLED@command
  7386  03EB  3001               	movlw	1
  7387  03EC  118A  2448  118A   	fcall	_setLED
  7388                           
  7389                           ;LED_B1.c: 260: setLED(2, 0);
  7390  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  7391  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  7392  03F1  01D4               	clrf	setLED@command
  7393  03F2  3002               	movlw	2
  7394  03F3  118A  2448  118A   	fcall	_setLED
  7395                           
  7396                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  7397  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  7398  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  7399  03F8  1CB0               	btfss	_PIRLED,1
  7400  03F9  2BFE               	goto	l4024
  7401                           
  7402                           ;LED_B1.c: 262: count = 4;
  7403  03FA  3004               	movlw	4
  7404  03FB  00D6               	movwf	??_setPIRLED_Main
  7405  03FC  0856               	movf	??_setPIRLED_Main,w
  7406  03FD  00D7               	movwf	setPIRLED_Main@count
  7407  03FE                     l4024:	
  7408                           
  7409                           ;LED_B1.c: 263: }
  7410                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  7411  03FE  1D30               	btfss	_PIRLED,2
  7412  03FF  2C04               	goto	l4028
  7413                           
  7414                           ;LED_B1.c: 265: count = 6;
  7415  0400  3006               	movlw	6
  7416  0401  00D6               	movwf	??_setPIRLED_Main
  7417  0402  0856               	movf	??_setPIRLED_Main,w
  7418  0403  00D7               	movwf	setPIRLED_Main@count
  7419  0404                     l4028:	
  7420                           
  7421                           ;LED_B1.c: 266: }
  7422                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  7423  0404  1DB0               	btfss	_PIRLED,3
  7424  0405  2C0A               	goto	l4032
  7425                           
  7426                           ;LED_B1.c: 268: count = 8;
  7427  0406  3008               	movlw	8
  7428  0407  00D6               	movwf	??_setPIRLED_Main
  7429  0408  0856               	movf	??_setPIRLED_Main,w
  7430  0409  00D7               	movwf	setPIRLED_Main@count
  7431  040A                     l4032:	
  7432                           
  7433                           ;LED_B1.c: 269: }
  7434                           ;LED_B1.c: 270: PIRLED.Count++;
  7435  040A  3001               	movlw	1
  7436  040B  00D6               	movwf	??_setPIRLED_Main
  7437  040C  0856               	movf	??_setPIRLED_Main,w
  7438  040D  07B1               	addwf	_PIRLED+1,f
  7439                           
  7440                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  7441  040E  0831               	movf	_PIRLED+1,w
  7442  040F  3A01               	xorlw	1
  7443  0410  1903               	skipnz
  7444  0411  2C16               	goto	l4038
  7445  0412  0831               	movf	_PIRLED+1,w
  7446  0413  3A02               	xorlw	2
  7447  0414  1D03               	skipz
  7448  0415  2C2A               	goto	l4042
  7449  0416                     l4038:	
  7450                           
  7451                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7452  0416  1003               	clrc
  7453  0417  1E30               	btfss	_PIRLED,4
  7454  0418  1403               	setc
  7455  0419  1C03               	btfss	3,0
  7456  041A  2C1F               	goto	u4240
  7457  041B  1283               	bcf	3,5	;RP0=0, select bank0
  7458  041C  1303               	bcf	3,6	;RP1=0, select bank0
  7459  041D  1630               	bsf	_PIRLED,4
  7460  041E  2C22               	goto	l4040
  7461  041F                     u4240:	
  7462  041F  1283               	bcf	3,5	;RP0=0, select bank0
  7463  0420  1303               	bcf	3,6	;RP1=0, select bank0
  7464  0421  1230               	bcf	_PIRLED,4
  7465  0422                     l4040:	
  7466                           
  7467                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  7468  0422  3000               	movlw	0
  7469  0423  1A30               	btfsc	_PIRLED,4
  7470  0424  3001               	movlw	1
  7471  0425  00D4               	movwf	setLED@command
  7472  0426  3002               	movlw	2
  7473  0427  118A  2448         	fcall	_setLED
  7474                           
  7475                           ;LED_B1.c: 274: } else {
  7476  0429  0008               	return
  7477  042A                     l4042:	
  7478                           
  7479                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  7480  042A  1003               	clrc
  7481  042B  1283               	bcf	3,5	;RP0=0, select bank0
  7482  042C  1303               	bcf	3,6	;RP1=0, select bank0
  7483  042D  1E30               	btfss	_PIRLED,4
  7484  042E  1403               	setc
  7485  042F  1C03               	btfss	3,0
  7486  0430  2C35               	goto	u4260
  7487  0431  1283               	bcf	3,5	;RP0=0, select bank0
  7488  0432  1303               	bcf	3,6	;RP1=0, select bank0
  7489  0433  1630               	bsf	_PIRLED,4
  7490  0434  2C38               	goto	l4044
  7491  0435                     u4260:	
  7492  0435  1283               	bcf	3,5	;RP0=0, select bank0
  7493  0436  1303               	bcf	3,6	;RP1=0, select bank0
  7494  0437  1230               	bcf	_PIRLED,4
  7495  0438                     l4044:	
  7496                           
  7497                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  7498  0438  3000               	movlw	0
  7499  0439  1A30               	btfsc	_PIRLED,4
  7500  043A  3001               	movlw	1
  7501  043B  00D4               	movwf	setLED@command
  7502  043C  3001               	movlw	1
  7503  043D  118A  2448  118A   	fcall	_setLED
  7504                           
  7505                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  7506  0440  1283               	bcf	3,5	;RP0=0, select bank0
  7507  0441  1303               	bcf	3,6	;RP1=0, select bank0
  7508  0442  0831               	movf	_PIRLED+1,w
  7509  0443  0657               	xorwf	setPIRLED_Main@count,w
  7510  0444  1D03               	skipz
  7511  0445  0008               	return
  7512                           
  7513                           ;LED_B1.c: 278: PIRLED.Count = 0;
  7514  0446  01B1               	clrf	_PIRLED+1
  7515  0447  0008               	return
  7516  0448                     __end_of_setPIRLED_Main:	
  7517                           
  7518                           	psect	text53
  7519  0DD5                     __ptext53:	
  7520 ;; *************** function _LED_Initialization *****************
  7521 ;; Defined at:
  7522 ;;		line 31 in file "../src/LED_B1.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;		None               void
  7529 ;; Registers used:
  7530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7536 ;;      Params:         0       0       0       0
  7537 ;;      Locals:         0       0       0       0
  7538 ;;      Temps:          0       0       0       0
  7539 ;;      Totals:         0       0       0       0
  7540 ;;Total ram usage:        0 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    6
  7543 ;; This function calls:
  7544 ;;		_setLED_Initialization
  7545 ;; This function is called by:
  7546 ;;		_main
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function _LED_Initialization
  7552  0DD5                     _LED_Initialization:	
  7553                           
  7554                           ;LED_B1.c: 33: setLED_Initialization(1);
  7555                           
  7556                           ;incstack = 0
  7557                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7558  0DD5  3001               	movlw	1
  7559  0DD6  158A  2664  158A   	fcall	_setLED_Initialization
  7560                           
  7561                           ;LED_B1.c: 36: setLED_Initialization(2);
  7562  0DD9  3002               	movlw	2
  7563  0DDA  158A  2664  158A   	fcall	_setLED_Initialization
  7564                           
  7565                           ;LED_B1.c: 42: setLED_Initialization(99);
  7566  0DDD  3063               	movlw	99
  7567  0DDE  158A  2664         	fcall	_setLED_Initialization
  7568  0DE0  0008               	return
  7569  0DE1                     __end_of_LED_Initialization:	
  7570                           
  7571                           	psect	text54
  7572  0E64                     __ptext54:	
  7573 ;; *************** function _setLED_Initialization *****************
  7574 ;; Defined at:
  7575 ;;		line 69 in file "../src/LED_B1.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  led             1    wreg     unsigned char 
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;  led             1    4[BANK0 ] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;		None               void
  7582 ;; Registers used:
  7583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7589 ;;      Params:         0       0       0       0
  7590 ;;      Locals:         0       1       0       0
  7591 ;;      Temps:          0       0       0       0
  7592 ;;      Totals:         0       1       0       0
  7593 ;;Total ram usage:        1 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    5
  7596 ;; This function calls:
  7597 ;;		_LedPointSelect
  7598 ;;		_setLED
  7599 ;; This function is called by:
  7600 ;;		_LED_Initialization
  7601 ;; This function uses a non-reentrant model
  7602 ;;
  7603                           
  7604                           
  7605                           ;psect for function _setLED_Initialization
  7606  0E64                     _setLED_Initialization:	
  7607                           
  7608                           ;incstack = 0
  7609                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7610                           ;setLED_Initialization@led stored from wreg
  7611  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  7612  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  7613  0E66  00D6               	movwf	setLED_Initialization@led
  7614                           
  7615                           ;LED_B1.c: 70: LedPointSelect(led);
  7616  0E67  0856               	movf	setLED_Initialization@led,w
  7617  0E68  158A  2734  158A   	fcall	_LedPointSelect
  7618                           
  7619                           ;LED_B1.c: 71: LED->Enable = 1;
  7620  0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  7621  0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  7622  0E6D  0837               	movf	_LED,w
  7623  0E6E  0084               	movwf	4
  7624  0E6F  1383               	bcf	3,7	;select IRP bank0
  7625  0E70  1400               	bsf	0,0
  7626                           
  7627                           ;LED_B1.c: 72: setLED(led, 0);
  7628  0E71  01D4               	clrf	setLED@command
  7629  0E72  0856               	movf	setLED_Initialization@led,w
  7630  0E73  118A  2448         	fcall	_setLED
  7631  0E75  0008               	return
  7632  0E76                     __end_of_setLED_Initialization:	
  7633                           
  7634                           	psect	text55
  7635  0448                     __ptext55:	
  7636 ;; *************** function _setLED *****************
  7637 ;; Defined at:
  7638 ;;		line 76 in file "../src/LED_B1.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  led             1    wreg     unsigned char 
  7641 ;;  command         1    2[BANK0 ] unsigned char 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  led             1    3[BANK0 ] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;		None               void
  7646 ;; Registers used:
  7647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7653 ;;      Params:         0       1       0       0
  7654 ;;      Locals:         0       1       0       0
  7655 ;;      Temps:          0       0       0       0
  7656 ;;      Totals:         0       2       0       0
  7657 ;;Total ram usage:        2 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    4
  7660 ;; This function calls:
  7661 ;;		_LedPointSelect
  7662 ;; This function is called by:
  7663 ;;		_setLED_Initialization
  7664 ;;		_setPIRLED_Main
  7665 ;;		_setMain_Exception
  7666 ;;		_PIR_Initialization
  7667 ;;		_PIR_Main
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           
  7672                           ;psect for function _setLED
  7673  0448                     _setLED:	
  7674                           
  7675                           ;incstack = 0
  7676                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7677                           ;setLED@led stored from wreg
  7678  0448  1283               	bcf	3,5	;RP0=0, select bank0
  7679  0449  1303               	bcf	3,6	;RP1=0, select bank0
  7680  044A  00D5               	movwf	setLED@led
  7681                           
  7682                           ;LED_B1.c: 77: LedPointSelect(led);
  7683  044B  0855               	movf	setLED@led,w
  7684  044C  158A  2734  118A   	fcall	_LedPointSelect
  7685                           
  7686                           ;LED_B1.c: 78: if (command == 0) {
  7687  044F  1283               	bcf	3,5	;RP0=0, select bank0
  7688  0450  1303               	bcf	3,6	;RP1=0, select bank0
  7689  0451  08D4               	movf	setLED@command,f
  7690  0452  1D03               	skipz
  7691  0453  2C61               	goto	l3832
  7692                           
  7693                           ;LED_B1.c: 80: if (led == 1) {
  7694  0454  0855               	movf	setLED@led,w
  7695  0455  3A01               	xorlw	1
  7696  0456  1D03               	skipz
  7697  0457  2C59               	goto	l3824
  7698                           
  7699                           ;LED_B1.c: 84: RB4 = 1;
  7700  0458  1606               	bsf	6,4	;volatile
  7701  0459                     l3824:	
  7702                           
  7703                           ;LED_B1.c: 86: }
  7704                           ;LED_B1.c: 89: if (led == 2) {
  7705  0459  0855               	movf	setLED@led,w
  7706  045A  3A02               	xorlw	2
  7707  045B  1903               	btfsc	3,2
  7708                           
  7709                           ;LED_B1.c: 93: RB5 = 1;
  7710  045C  1686               	bsf	6,5	;volatile
  7711                           
  7712                           ;LED_B1.c: 95: }
  7713                           ;LED_B1.c: 107: if (led == 99) {
  7714  045D  0855               	movf	setLED@led,w
  7715  045E  3A63               	xorlw	99
  7716  045F  1903               	btfsc	3,2
  7717                           
  7718                           ;LED_B1.c: 111: RB3 = 1;
  7719  0460  1586               	bsf	6,3	;volatile
  7720  0461                     l3832:	
  7721                           
  7722                           ;LED_B1.c: 113: }
  7723                           ;LED_B1.c: 115: }
  7724                           ;LED_B1.c: 116: if (command == 1) {
  7725  0461  0854               	movf	setLED@command,w
  7726  0462  3A01               	xorlw	1
  7727  0463  1D03               	skipz
  7728  0464  2C72               	goto	l3846
  7729                           
  7730                           ;LED_B1.c: 118: if (led == 1) {
  7731  0465  0855               	movf	setLED@led,w
  7732  0466  3A01               	xorlw	1
  7733  0467  1D03               	skipz
  7734  0468  2C6A               	goto	l3838
  7735                           
  7736                           ;LED_B1.c: 122: RB4 = 0;
  7737  0469  1206               	bcf	6,4	;volatile
  7738  046A                     l3838:	
  7739                           
  7740                           ;LED_B1.c: 124: }
  7741                           ;LED_B1.c: 127: if (led == 2) {
  7742  046A  0855               	movf	setLED@led,w
  7743  046B  3A02               	xorlw	2
  7744  046C  1903               	btfsc	3,2
  7745                           
  7746                           ;LED_B1.c: 131: RB5 = 0;
  7747  046D  1286               	bcf	6,5	;volatile
  7748                           
  7749                           ;LED_B1.c: 133: }
  7750                           ;LED_B1.c: 145: if (led == 99) {
  7751  046E  0855               	movf	setLED@led,w
  7752  046F  3A63               	xorlw	99
  7753  0470  1903               	btfsc	3,2
  7754                           
  7755                           ;LED_B1.c: 149: RB3 = 0;
  7756  0471  1186               	bcf	6,3	;volatile
  7757  0472                     l3846:	
  7758                           
  7759                           ;LED_B1.c: 151: }
  7760                           ;LED_B1.c: 153: }
  7761                           ;LED_B1.c: 154: if (command == 10) {
  7762  0472  0854               	movf	setLED@command,w
  7763  0473  3A0A               	xorlw	10
  7764  0474  1D03               	skipz
  7765  0475  2C8D               	goto	l3864
  7766                           
  7767                           ;LED_B1.c: 155: LED->GO = 0;
  7768  0476  0837               	movf	_LED,w
  7769  0477  0084               	movwf	4
  7770  0478  1383               	bcf	3,7	;select IRP bank0
  7771  0479  1080               	bcf	0,1
  7772                           
  7773                           ;LED_B1.c: 156: LED->Time = 0;
  7774  047A  0A37               	incf	_LED,w
  7775  047B  0084               	movwf	4
  7776  047C  0180               	clrf	0
  7777  047D  0A84               	incf	4,f
  7778  047E  0180               	clrf	0
  7779                           
  7780                           ;LED_B1.c: 158: if (led == 1) {
  7781  047F  0855               	movf	setLED@led,w
  7782  0480  3A01               	xorlw	1
  7783  0481  1D03               	skipz
  7784  0482  2C85               	goto	l3856
  7785                           
  7786                           ;LED_B1.c: 162: RB4 = 1;
  7787  0483  1606               	bsf	6,4	;volatile
  7788                           
  7789                           ;LED_B1.c: 164: }
  7790  0484  2C89               	goto	l3860
  7791  0485                     l3856:	
  7792                           
  7793                           ;LED_B1.c: 167: else if (led == 2) {
  7794  0485  0855               	movf	setLED@led,w
  7795  0486  3A02               	xorlw	2
  7796  0487  1903               	btfsc	3,2
  7797                           
  7798                           ;LED_B1.c: 171: RB5 = 1;
  7799  0488  1686               	bsf	6,5	;volatile
  7800  0489                     l3860:	
  7801                           
  7802                           ;LED_B1.c: 173: }
  7803                           ;LED_B1.c: 185: if (led == 99) {
  7804  0489  0855               	movf	setLED@led,w
  7805  048A  3A63               	xorlw	99
  7806  048B  1903               	btfsc	3,2
  7807                           
  7808                           ;LED_B1.c: 189: RB3 = 1;
  7809  048C  1586               	bsf	6,3	;volatile
  7810  048D                     l3864:	
  7811                           
  7812                           ;LED_B1.c: 191: }
  7813                           ;LED_B1.c: 193: }
  7814                           ;LED_B1.c: 194: if (command == 11) {
  7815  048D  0854               	movf	setLED@command,w
  7816  048E  3A0B               	xorlw	11
  7817  048F  1D03               	skipz
  7818  0490  2C95               	goto	l3868
  7819                           
  7820                           ;LED_B1.c: 195: LED->GO = 1;
  7821  0491  0837               	movf	_LED,w
  7822  0492  0084               	movwf	4
  7823  0493  1383               	bcf	3,7	;select IRP bank0
  7824  0494  1480               	bsf	0,1
  7825  0495                     l3868:	
  7826                           
  7827                           ;LED_B1.c: 196: }
  7828                           ;LED_B1.c: 198: if (command == 111) {
  7829  0495  0854               	movf	setLED@command,w
  7830  0496  3A6F               	xorlw	111
  7831  0497  1D03               	skipz
  7832  0498  2CB3               	goto	l3894
  7833                           
  7834                           ;LED_B1.c: 199: PIRLED.Count = 0;
  7835  0499  01B1               	clrf	_PIRLED+1
  7836                           
  7837                           ;LED_B1.c: 200: PIRLED.Time = 0;
  7838  049A  01B2               	clrf	_PIRLED+2
  7839  049B  01B3               	clrf	_PIRLED+3
  7840                           
  7841                           ;LED_B1.c: 201: PIRLED.status = 0;
  7842  049C  1230               	bcf	_PIRLED,4
  7843                           
  7844                           ;LED_B1.c: 202: PIRLED.GO = 1;
  7845  049D  1430               	bsf	_PIRLED,0
  7846                           
  7847                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  7848  049E  10B0               	bcf	_PIRLED,1
  7849                           
  7850                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  7851  049F  1130               	bcf	_PIRLED,2
  7852                           
  7853                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  7854  04A0  11B0               	bcf	_PIRLED,3
  7855                           
  7856                           ;LED_B1.c: 206: if (led == 1) {
  7857  04A1  0855               	movf	setLED@led,w
  7858  04A2  3A01               	xorlw	1
  7859  04A3  1D03               	skipz
  7860  04A4  2CA7               	goto	l3886
  7861                           
  7862                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  7863  04A5  14B0               	bsf	_PIRLED,1
  7864                           
  7865                           ;LED_B1.c: 208: } else if (led == 2) {
  7866  04A6  0008               	return
  7867  04A7                     l3886:	
  7868  04A7  0855               	movf	setLED@led,w
  7869  04A8  3A02               	xorlw	2
  7870  04A9  1D03               	skipz
  7871  04AA  2CAD               	goto	l3890
  7872                           
  7873                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  7874  04AB  1530               	bsf	_PIRLED,2
  7875                           
  7876                           ;LED_B1.c: 210: } else if (led == 3) {
  7877  04AC  0008               	return
  7878  04AD                     l3890:	
  7879  04AD  0855               	movf	setLED@led,w
  7880  04AE  3A03               	xorlw	3
  7881  04AF  1D03               	skipz
  7882  04B0  0008               	return
  7883                           
  7884                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  7885  04B1  15B0               	bsf	_PIRLED,3
  7886                           
  7887                           ;LED_B1.c: 212: }
  7888                           ;LED_B1.c: 213: } else if (command == 110) {
  7889  04B2  0008               	return
  7890  04B3                     l3894:	
  7891  04B3  0854               	movf	setLED@command,w
  7892  04B4  3A6E               	xorlw	110
  7893  04B5  1D03               	skipz
  7894  04B6  0008               	return
  7895                           
  7896                           ;LED_B1.c: 214: PIRLED.GO = 0;
  7897  04B7  1030               	bcf	_PIRLED,0
  7898  04B8  0008               	return
  7899  04B9                     __end_of_setLED:	
  7900                           
  7901                           	psect	text56
  7902  0F34                     __ptext56:	
  7903 ;; *************** function _LedPointSelect *****************
  7904 ;; Defined at:
  7905 ;;		line 7 in file "../src/LED_B1.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  led             1    wreg     unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  led             1    1[BANK0 ] unsigned char 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;		None               void
  7912 ;; Registers used:
  7913 ;;		wreg
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7919 ;;      Params:         0       0       0       0
  7920 ;;      Locals:         0       1       0       0
  7921 ;;      Temps:          0       1       0       0
  7922 ;;      Totals:         0       2       0       0
  7923 ;;Total ram usage:        2 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:    3
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_setLED_Initialization
  7930 ;;		_setLED
  7931 ;;		_setLED_Main
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function _LedPointSelect
  7937  0F34                     _LedPointSelect:	
  7938                           
  7939                           ;incstack = 0
  7940                           ; Regs used in _LedPointSelect: [wreg]
  7941                           ;LedPointSelect@led stored from wreg
  7942  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  7943  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  7944  0F36  00D3               	movwf	LedPointSelect@led
  7945                           
  7946                           ;LED_B1.c: 9: if (led == 1) {
  7947  0F37  0853               	movf	LedPointSelect@led,w
  7948  0F38  3A01               	xorlw	1
  7949  0F39  1D03               	skipz
  7950  0F3A  2F3F               	goto	l244
  7951                           
  7952                           ;LED_B1.c: 10: LED = &VarLED1;
  7953  0F3B  304A               	movlw	_VarLED1& (0+255)
  7954  0F3C  00D2               	movwf	??_LedPointSelect
  7955  0F3D  0852               	movf	??_LedPointSelect,w
  7956  0F3E  00B7               	movwf	_LED
  7957  0F3F                     l244:	
  7958                           
  7959                           ;LED_B1.c: 11: }
  7960                           ;LED_B1.c: 14: if (led == 2) {
  7961  0F3F  0853               	movf	LedPointSelect@led,w
  7962  0F40  3A02               	xorlw	2
  7963  0F41  1D03               	skipz
  7964  0F42  2F47               	goto	l245
  7965                           
  7966                           ;LED_B1.c: 15: LED = &VarLED2;
  7967  0F43  304E               	movlw	_VarLED2& (0+255)
  7968  0F44  00D2               	movwf	??_LedPointSelect
  7969  0F45  0852               	movf	??_LedPointSelect,w
  7970  0F46  00B7               	movwf	_LED
  7971  0F47                     l245:	
  7972                           
  7973                           ;LED_B1.c: 16: }
  7974                           ;LED_B1.c: 24: if (led == 99) {
  7975  0F47  0853               	movf	LedPointSelect@led,w
  7976  0F48  3A63               	xorlw	99
  7977  0F49  1D03               	skipz
  7978  0F4A  0008               	return
  7979                           
  7980                           ;LED_B1.c: 25: LED = &VarErrLED;
  7981  0F4B  3046               	movlw	_VarErrLED& (0+255)
  7982  0F4C  00D2               	movwf	??_LedPointSelect
  7983  0F4D  0852               	movf	??_LedPointSelect,w
  7984  0F4E  00B7               	movwf	_LED
  7985  0F4F  0008               	return
  7986  0F50                     __end_of_LedPointSelect:	
  7987                           
  7988                           	psect	text57
  7989  0DF9                     __ptext57:	
  7990 ;; *************** function _DetectSYSC_Signal *****************
  7991 ;; Defined at:
  7992 ;;		line 51 in file "../src/SYSC_B1.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;		None
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;		None
  7997 ;; Return value:  Size  Location     Type
  7998 ;;		None               void
  7999 ;; Registers used:
  8000 ;;		status,2
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8006 ;;      Params:         0       0       0       0
  8007 ;;      Locals:         0       0       0       0
  8008 ;;      Temps:          0       0       0       0
  8009 ;;      Totals:         0       0       0       0
  8010 ;;Total ram usage:        0 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:    3
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		_main
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function _DetectSYSC_Signal
  8022  0DF9                     _DetectSYSC_Signal:	
  8023                           
  8024                           ;SYSC_B1.c: 52: if (SYSC.Signal == 0) {
  8025                           
  8026                           ;incstack = 0
  8027                           ; Regs used in _DetectSYSC_Signal: [status,2]
  8028  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  8029  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  8030  0DFB  19A6               	btfsc	_SYSC,3
  8031  0DFC  2E03               	goto	l1061
  8032                           
  8033                           ;SYSC_B1.c: 53: if (RA5 == 1) {
  8034  0DFD  1E85               	btfss	5,5	;volatile
  8035  0DFE  0008               	return
  8036                           
  8037                           ;SYSC_B1.c: 54: SYSC.Signal = 1;
  8038  0DFF  15A6               	bsf	_SYSC,3
  8039                           
  8040                           ;SYSC_B1.c: 55: SYSC.Timer = 0;
  8041  0E00  01A7               	clrf	_SYSC+1
  8042  0E01  01A8               	clrf	_SYSC+2
  8043                           
  8044                           ;SYSC_B1.c: 56: }
  8045                           ;SYSC_B1.c: 57: } else {
  8046  0E02  0008               	return
  8047  0E03                     l1061:	
  8048                           
  8049                           ;SYSC_B1.c: 58: if (RA5 == 0) {
  8050  0E03  1A85               	btfsc	5,5	;volatile
  8051  0E04  0008               	return
  8052                           
  8053                           ;SYSC_B1.c: 59: SYSC.Signal = 0;
  8054  0E05  11A6               	bcf	_SYSC,3
  8055  0E06  0008               	return
  8056  0E07                     __end_of_DetectSYSC_Signal:	
  8057                           
  8058                           	psect	text58
  8059  0756                     __ptext58:	
  8060 ;; *************** function _CDS_Main *****************
  8061 ;; Defined at:
  8062 ;;		line 11 in file "../src/CDS_B1.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;		None               void
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8076 ;;      Params:         0       0       0       0
  8077 ;;      Locals:         0       0       0       0
  8078 ;;      Temps:          0       3       0       0
  8079 ;;      Totals:         0       3       0       0
  8080 ;;Total ram usage:        3 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    3
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_main
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090                           
  8091                           ;psect for function _CDS_Main
  8092  0756                     _CDS_Main:	
  8093                           
  8094                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8095                           
  8096                           ;incstack = 0
  8097                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8098  0756  1283               	bcf	3,5	;RP0=0, select bank0
  8099  0757  1303               	bcf	3,6	;RP1=0, select bank0
  8100  0758  1C2B               	btfss	__CDS,0
  8101  0759  0008               	return
  8102                           
  8103                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8104  075A  18AB               	btfsc	__CDS,1
  8105  075B  2F69               	goto	l111
  8106                           
  8107                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8108  075C  19AB               	btfsc	__CDS,3
  8109  075D  0008               	return
  8110                           
  8111                           ;CDS_B1.c: 16: _CDS.Time++;
  8112  075E  3001               	movlw	1
  8113  075F  00D2               	movwf	??_CDS_Main
  8114  0760  0852               	movf	??_CDS_Main,w
  8115  0761  07AC               	addwf	__CDS+1,f
  8116                           
  8117                           ;CDS_B1.c: 17: if (_CDS.Time >= 10)
  8118  0762  300A               	movlw	10
  8119  0763  022C               	subwf	__CDS+1,w
  8120  0764  1C03               	skipc
  8121  0765  0008               	return
  8122                           
  8123                           ;CDS_B1.c: 18: {
  8124                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8125  0766  01AC               	clrf	__CDS+1
  8126                           
  8127                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8128  0767  15AB               	bsf	__CDS,3
  8129                           
  8130                           ;CDS_B1.c: 21: }
  8131                           ;CDS_B1.c: 22: }
  8132                           ;CDS_B1.c: 23: } else {
  8133  0768  0008               	return
  8134  0769                     l111:	
  8135                           
  8136                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8137  0769  1CAB               	btfss	__CDS,1
  8138  076A  0008               	return
  8139                           
  8140                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8141  076B  10AB               	bcf	__CDS,1
  8142                           
  8143                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8144  076C  1A2B               	btfsc	__CDS,4
  8145  076D  2F74               	goto	l3328
  8146                           
  8147                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8148  076E  082D               	movf	__CDS+2,w
  8149  076F  022E               	subwf	__CDS+3,w
  8150  0770  1C03               	skipc
  8151  0771  0008               	return
  8152                           
  8153                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8154  0772  162B               	bsf	__CDS,4
  8155                           
  8156                           ;CDS_B1.c: 29: }
  8157                           ;CDS_B1.c: 30: } else {
  8158  0773  0008               	return
  8159  0774                     l3328:	
  8160                           
  8161                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8162  0774  082D               	movf	__CDS+2,w
  8163  0775  3E9C               	addlw	156
  8164  0776  00D2               	movwf	??_CDS_Main
  8165  0777  30FF               	movlw	255
  8166  0778  1803               	skipnc
  8167  0779  3000               	movlw	0
  8168  077A  00D3               	movwf	??_CDS_Main+1
  8169  077B  0853               	movf	??_CDS_Main+1,w
  8170  077C  3A80               	xorlw	128
  8171  077D  00D4               	movwf	??_CDS_Main+2
  8172  077E  3080               	movlw	128
  8173  077F  0254               	subwf	??_CDS_Main+2,w
  8174  0780  1D03               	skipz
  8175  0781  2F84               	goto	u3075
  8176  0782  082E               	movf	__CDS+3,w
  8177  0783  0252               	subwf	??_CDS_Main,w
  8178  0784                     u3075:	
  8179  0784  1C03               	skipc
  8180  0785  0008               	return
  8181                           
  8182                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8183  0786  1283               	bcf	3,5	;RP0=0, select bank0
  8184  0787  1303               	bcf	3,6	;RP1=0, select bank0
  8185  0788  122B               	bcf	__CDS,4
  8186  0789  0008               	return
  8187  078A                     __end_of_CDS_Main:	
  8188                           
  8189                           	psect	text59
  8190  0D83                     __ptext59:	
  8191 ;; *************** function _CDS_Initialization *****************
  8192 ;; Defined at:
  8193 ;;		line 7 in file "../src/CDS_B1.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;		None               void
  8200 ;; Registers used:
  8201 ;;		None
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8207 ;;      Params:         0       0       0       0
  8208 ;;      Locals:         0       0       0       0
  8209 ;;      Temps:          0       0       0       0
  8210 ;;      Totals:         0       0       0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    3
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_main
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function _CDS_Initialization
  8223  0D83                     _CDS_Initialization:	
  8224                           
  8225                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in _CDS_Initialization: []
  8229  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  8230  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  8231  0D85  142B               	bsf	__CDS,0
  8232  0D86  0008               	return
  8233  0D87                     __end_of_CDS_Initialization:	
  8234                           
  8235                           	psect	text60
  8236  0E9A                     __ptext60:	
  8237 ;; *************** function _ISR *****************
  8238 ;; Defined at:
  8239 ;;		line 107 in file "../src/MCU_B1.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;		None               void
  8246 ;; Registers used:
  8247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8253 ;;      Params:         0       0       0       0
  8254 ;;      Locals:         0       0       0       0
  8255 ;;      Temps:          4       0       0       0
  8256 ;;      Totals:         4       0       0       0
  8257 ;;Total ram usage:        4 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    2
  8260 ;; This function calls:
  8261 ;;		_TMR1_ISR
  8262 ;;		_UART_ISR
  8263 ;; This function is called by:
  8264 ;;		Interrupt level 1
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function _ISR
  8270  0E9A                     _ISR:	
  8271                           
  8272                           ;MCU_B1.c: 109: ;;
  8273                           ;MCU_B1.c: 111: ;;
  8274                           ;MCU_B1.c: 113: TMR1_ISR();
  8275  0E9A  158A  2718  158A   	fcall	_TMR1_ISR
  8276                           
  8277                           ;MCU_B1.c: 115: ;;
  8278                           ;MCU_B1.c: 117: ;;
  8279                           ;MCU_B1.c: 119: UART_ISR();
  8280  0E9D  118A  271F  158A   	fcall	_UART_ISR
  8281  0EA0  0876               	movf	??_ISR+3,w
  8282  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  8283  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  8284  0EA3  00FF               	movwf	127
  8285  0EA4  0875               	movf	??_ISR+2,w
  8286  0EA5  008A               	movwf	10
  8287  0EA6  0874               	movf	??_ISR+1,w
  8288  0EA7  0084               	movwf	4
  8289  0EA8  0E73               	swapf	??_ISR^(0+-128),w
  8290  0EA9  0083               	movwf	3
  8291  0EAA  0EFE               	swapf	126,f
  8292  0EAB  0E7E               	swapf	126,w
  8293  0EAC  0009               	retfie
  8294  0EAD                     __end_of_ISR:	
  8295                           
  8296                           	psect	intentry
  8297  0004                     __pintentry:	
  8298                           ;incstack = 0
  8299                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8300                           
  8301  0004                     interrupt_function:	
  8302  007E                     saved_w	set	btemp
  8303  0004  00FE               	movwf	btemp
  8304  0005  0E03               	swapf	3,w
  8305  0006  00F3               	movwf	??_ISR
  8306  0007  0804               	movf	4,w
  8307  0008  00F4               	movwf	??_ISR+1
  8308  0009  080A               	movf	10,w
  8309  000A  00F5               	movwf	??_ISR+2
  8310  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8311  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8312  000D  087F               	movf	btemp+1,w
  8313  000E  00F6               	movwf	??_ISR+3
  8314  000F  158A  2E9A         	ljmp	_ISR
  8315                           
  8316                           	psect	text61
  8317  071F                     __ptext61:	
  8318 ;; *************** function _UART_ISR *****************
  8319 ;; Defined at:
  8320 ;;		line 739 in file "../src/MCU_B1.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  i               2    1[COMMON] int 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;		None               void
  8327 ;; Registers used:
  8328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8334 ;;      Params:         0       0       0       0
  8335 ;;      Locals:         2       0       0       0
  8336 ;;      Temps:          1       0       0       0
  8337 ;;      Totals:         3       0       0       0
  8338 ;;Total ram usage:        3 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    1
  8341 ;; This function calls:
  8342 ;;		_getch
  8343 ;; This function is called by:
  8344 ;;		_ISR
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           
  8349                           ;psect for function _UART_ISR
  8350  071F                     _UART_ISR:	
  8351                           
  8352                           ;MCU_B1.c: 740: if (RCIE == 1 && RCIF == 1) {
  8353                           
  8354                           ;incstack = 0
  8355                           ; Regs used in _UART_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8356  071F  1683               	bsf	3,5	;RP0=1, select bank1
  8357  0720  1303               	bcf	3,6	;RP1=0, select bank1
  8358  0721  1E8C               	btfss	12,5	;volatile
  8359  0722  0008               	return
  8360  0723  1283               	bcf	3,5	;RP0=0, select bank0
  8361  0724  1303               	bcf	3,6	;RP1=0, select bank0
  8362  0725  1E8C               	btfss	12,5	;volatile
  8363  0726  0008               	return
  8364                           
  8365                           ;MCU_B1.c: 742: for (int i = 0; i < 8; i++) {
  8366  0727  01F1               	clrf	UART_ISR@i
  8367  0728  01F2               	clrf	UART_ISR@i+1
  8368  0729  0872               	movf	UART_ISR@i+1,w
  8369  072A  3A80               	xorlw	128
  8370  072B  00FF               	movwf	127
  8371  072C  3080               	movlw	128
  8372  072D  027F               	subwf	127,w
  8373  072E  1D03               	skipz
  8374  072F  2F32               	goto	u314_25
  8375  0730  3008               	movlw	8
  8376  0731  0271               	subwf	UART_ISR@i,w
  8377  0732                     u314_25:	
  8378  0732  1803               	btfsc	3,0
  8379  0733  2F4F               	goto	i1l486
  8380  0734                     i1l3372:	
  8381                           
  8382                           ;MCU_B1.c: 743: UART.Data[i] = getch();
  8383  0734  158A  2598  118A   	fcall	_getch
  8384  0737  00F0               	movwf	??_UART_ISR
  8385  0738  0871               	movf	UART_ISR@i,w
  8386  0739  3ECF               	addlw	_UART& (0+255)
  8387  073A  0084               	movwf	4
  8388  073B  0870               	movf	??_UART_ISR,w
  8389  073C  1383               	bcf	3,7	;select IRP bank1
  8390  073D  0080               	movwf	0
  8391  073E  3001               	movlw	1
  8392  073F  07F1               	addwf	UART_ISR@i,f
  8393  0740  1803               	skipnc
  8394  0741  0AF2               	incf	UART_ISR@i+1,f
  8395  0742  3000               	movlw	0
  8396  0743  07F2               	addwf	UART_ISR@i+1,f
  8397  0744  0872               	movf	UART_ISR@i+1,w
  8398  0745  3A80               	xorlw	128
  8399  0746  00FF               	movwf	127
  8400  0747  3080               	movlw	128
  8401  0748  027F               	subwf	127,w
  8402  0749  1D03               	skipz
  8403  074A  2F4D               	goto	u315_25
  8404  074B  3008               	movlw	8
  8405  074C  0271               	subwf	UART_ISR@i,w
  8406  074D                     u315_25:	
  8407  074D  1C03               	skipc
  8408  074E  2F34               	goto	i1l3372
  8409  074F                     i1l486:	
  8410                           
  8411                           ;MCU_B1.c: 744: }
  8412                           ;MCU_B1.c: 745: UART.RxGO = 1;
  8413  074F  1683               	bsf	3,5	;RP0=1, select bank1
  8414  0750  1303               	bcf	3,6	;RP1=0, select bank1
  8415  0751  14DA               	bsf	(_UART^(0+128)+11),1
  8416                           
  8417                           ;MCU_B1.c: 752: RCIF = 0;
  8418  0752  1283               	bcf	3,5	;RP0=0, select bank0
  8419  0753  1303               	bcf	3,6	;RP1=0, select bank0
  8420  0754  128C               	bcf	12,5	;volatile
  8421  0755  0008               	return
  8422  0756                     __end_of_UART_ISR:	
  8423                           
  8424                           	psect	text62
  8425  0D98                     __ptext62:	
  8426 ;; *************** function _getch *****************
  8427 ;; Defined at:
  8428 ;;		line 862 in file "../src/MCU_B1.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      unsigned char 
  8435 ;; Registers used:
  8436 ;;		wreg
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8442 ;;      Params:         0       0       0       0
  8443 ;;      Locals:         0       0       0       0
  8444 ;;      Temps:          0       0       0       0
  8445 ;;      Totals:         0       0       0       0
  8446 ;;Total ram usage:        0 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; This function calls:
  8449 ;;		Nothing
  8450 ;; This function is called by:
  8451 ;;		_UART_ISR
  8452 ;;		_getche
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           
  8457                           ;psect for function _getch
  8458  0D98                     _getch:	
  8459  0D98                     i1l514:	
  8460                           ;MCU_B1.c: 865: continue;
  8461                           
  8462                           ;MCU_B1.c: 864: while (!RCIF)
  8463                           
  8464                           ;incstack = 0
  8465                           ; Regs used in _getch: [wreg]
  8466                           
  8467  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  8468  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  8469  0D9A  1E8C               	btfss	12,5	;volatile
  8470  0D9B  2D98               	goto	i1l514
  8471                           
  8472                           ;MCU_B1.c: 866: return RCREG;
  8473  0D9C  081A               	movf	26,w	;volatile
  8474  0D9D  0008               	return
  8475  0D9E                     __end_of_getch:	
  8476                           
  8477                           	psect	text63
  8478  0F18                     __ptext63:	
  8479 ;; *************** function _TMR1_ISR *****************
  8480 ;; Defined at:
  8481 ;;		line 209 in file "../src/MCU_B1.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;		None               void
  8488 ;; Registers used:
  8489 ;;		wreg, status,2
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8495 ;;      Params:         0       0       0       0
  8496 ;;      Locals:         0       0       0       0
  8497 ;;      Temps:          0       0       0       0
  8498 ;;      Totals:         0       0       0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; This function calls:
  8502 ;;		Nothing
  8503 ;; This function is called by:
  8504 ;;		_ISR
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           
  8509                           ;psect for function _TMR1_ISR
  8510  0F18                     _TMR1_ISR:	
  8511                           
  8512                           ;MCU_B1.c: 210: if (TMR1IE == 1 && TMR1IF == 1) {
  8513                           
  8514                           ;incstack = 0
  8515                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  8516  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  8517  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  8518  0F1A  1C0C               	btfss	12,0	;volatile
  8519  0F1B  0008               	return
  8520  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  8521  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  8522  0F1E  1C0C               	btfss	12,0	;volatile
  8523  0F1F  0008               	return
  8524                           
  8525                           ;MCU_B1.c: 212: TMR1H = ((65536-1480)/256);
  8526  0F20  30FA               	movlw	250
  8527  0F21  008F               	movwf	15	;volatile
  8528                           
  8529                           ;MCU_B1.c: 213: TMR1L = ((65536-1480)%256);
  8530  0F22  3038               	movlw	56
  8531  0F23  008E               	movwf	14	;volatile
  8532                           
  8533                           ;MCU_B1.c: 214: TMR1IF = 0;
  8534  0F24  100C               	bcf	12,0	;volatile
  8535                           
  8536                           ;MCU_B1.c: 234: Timer1.Count++;
  8537  0F25  3001               	movlw	1
  8538  0F26  07B5               	addwf	_Timer1+1,f
  8539  0F27  1803               	skipnc
  8540  0F28  0AB6               	incf	_Timer1+2,f
  8541  0F29  3000               	movlw	0
  8542  0F2A  07B6               	addwf	_Timer1+2,f
  8543                           
  8544                           ;MCU_B1.c: 235: if (Timer1.Count == 100) {
  8545  0F2B  3064               	movlw	100
  8546  0F2C  0635               	xorwf	_Timer1+1,w
  8547  0F2D  0436               	iorwf	_Timer1+2,w
  8548  0F2E  1D03               	skipz
  8549  0F2F  0008               	return
  8550                           
  8551                           ;MCU_B1.c: 236: Timer1.Count = 0;
  8552  0F30  01B5               	clrf	_Timer1+1
  8553  0F31  01B6               	clrf	_Timer1+2
  8554                           
  8555                           ;MCU_B1.c: 237: Timer1.Timeout = 1;
  8556  0F32  1434               	bsf	_Timer1,0
  8557  0F33  0008               	return
  8558  0F34                     __end_of_TMR1_ISR:	
  8559  007E                     btemp	set	126	;btemp
  8560  007E                     wtemp	set	126
  8561  007E                     wtemp0	set	126
  8562  0080                     wtemp1	set	128
  8563  0082                     wtemp2	set	130
  8564  0084                     wtemp3	set	132
  8565  0086                     wtemp4	set	134
  8566  0088                     wtemp5	set	136
  8567  007F                     wtemp6	set	127
  8568  007E                     ttemp	set	126
  8569  007E                     ttemp0	set	126
  8570  0081                     ttemp1	set	129
  8571  0084                     ttemp2	set	132
  8572  0087                     ttemp3	set	135
  8573  007F                     ttemp4	set	127
  8574  007E                     ltemp	set	126
  8575  007E                     ltemp0	set	126
  8576  0082                     ltemp1	set	130
  8577  0086                     ltemp2	set	134
  8578  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     25      75
    BANK1            80      0      66
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK1[7]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR

Critical Paths under _main in BANK0

    _main->_PIR_Main
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _UART_Main->_UART_Transmit
    _UART_Transmit->_putch
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_LightsStatus
    _setSYSC_Main->_getMain_All_Error_Status
    _PIR_Main->_setMain_Exception
    _setMain_Exception->_setLights_Trigger
    _setLights_Trigger->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect
    _getMain_All_Error_Status->_getCDS_Status
    _PIR_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Lights_Main->_Lights_Close
    _setLights_Main->_setLights
    _setLights->_setLights_Line
    _setLights_Line->_LightsPointSelect
    _Lights_Control->_LightsPointSelect
    _Lights_Close->_getMain_LightsStatus
    _getMain_LightsStatus->_getLights_Status
    _getLights_Status->_LightsPointSelect
    _Lights_Initialization->_setLights_Initialization
    _setLights_Initialization->_LightsPointSelect
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _setLED->_LedPointSelect

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   16858
                                             20 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                  _DetectSYSC_Signal
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _SYSC_Initialization
                          _SYSC_Main
                _Temp_Initialization
                          _Temp_Main
                          _UART_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
                       _UART_SetData
 ---------------------------------------------------------------------------------
 (2) _UART_SetData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     478
                                              2 BANK0      3     3      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    1636
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     418
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     592
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     447
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            0     0      0     130
                       _UART_Receive
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        2     2      0     130
                                              1 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     597
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         1     1      0     597
                                              9 BANK0      1     1      0
           _getMain_All_Error_Status
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSC_Main                                            0     0      0     337
                       _setSYSC_Main
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Main                                         0     0      0     337
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (1) _SYSC_Initialization                                  0     0      0       0
             _setSYSC_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSYSC_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             8     8      0    5697
                                             12 BANK0      8     8      0
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
                  _setMain_Exception
 ---------------------------------------------------------------------------------
 (2) _setMain_Exception                                    7     7      0    2731
                                              5 BANK0      7     7      0
                 _getAll_Lights_Line
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (3) _setLights_Trigger                                    3     2      1     322
                                              2 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getAll_Lights_Line                                   1     1      0      59
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     337
                                              1 BANK0      7     7      0
                      _getCDS_Status
 ---------------------------------------------------------------------------------
 (4) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0    2118
                                              4 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0     816
                       _Lights_Close
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     468
                                              6 BANK0      1     1      0
                  _LightsPointSelect
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     353
                                              3 BANK0      3     2      1
                  _LightsPointSelect
                     _setLights_Line
 ---------------------------------------------------------------------------------
 (4) _setLights_Line                                       1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0      88
                                              2 BANK0      3     3      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _Lights_Close                                         1     1      0     260
                                              9 BANK0      1     1      0
               _getMain_LightsStatus
 ---------------------------------------------------------------------------------
 (3) _getMain_LightsStatus                                 5     5      0     260
                                              4 BANK0      5     5      0
                   _getLights_Status
 ---------------------------------------------------------------------------------
 (4) _getLights_Status                                     2     2      0      87
                                              2 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      53
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      53
                                              2 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (5) _LightsPointSelect                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2158
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2158
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2246
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2246
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2118
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DetectSYSC_Signal                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      68
                                              3 COMMON     4     4      0
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (7) _UART_ISR                                             3     3      0      68
                                              0 COMMON     3     3      0
                              _getch
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DetectSYSC_Signal
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Close
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
     _Lights_Control
       _LightsPointSelect
     _setLights_Main
       _LightsPointSelect
       _setLights
         _LightsPointSelect
         _setLights_Line
           _LightsPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
     _WDT_Set
   _PIR_Initialization
     _setLED
       _LedPointSelect
   _PIR_Main
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
       _getCDS_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
     _setMain_Exception
       _getAll_Lights_Line
         _LightsPointSelect
       _setLED
         _LedPointSelect
       _setLights_Trigger
         _LightsPointSelect
   _SYSC_Initialization
     _setSYSC_Initialization
   _SYSC_Main
     _setSYSC_Main
       _getMain_All_Error_Status
         _getCDS_Status
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
         _getCDS_Status
       _getMain_LightsStatus
         _getLights_Status
           _LightsPointSelect
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _putch
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _UART_SetData

 _ISR (ROOT)
   _TMR1_ISR
   _UART_ISR
     _getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      97       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      97      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Dec 06 13:20:02 2014

                     _WDT_Clearing 0002                       ___awdiv@sign 0058  
                               fsr 0004                                l111 0769  
                              l244 0F3F                                l245 0F47  
                              l508 0DBD                                l490 0E2B  
                              l806 03C3                                l680 067E  
                              l681 069E                                l685 069A  
                              l870 0080                                l871 0096  
                              l864 0204                                l865 0051  
                              l793 03D3                                _GIE 005F  
                              _RB2 0032                                _RA4 002C  
                              _LED 0037                                _RB3 0033  
                              _RA5 002D                                _RB4 0034  
                              _RB5 0035                                _PS0 0408  
                              _PS1 0409                                _PS2 040A  
                              _ISR 0E9A                                _PSA 040B  
                              _RX9 00C6                                _WDT 0077  
                              _TX9 04C6             getAll_Lights_Line@line 0054  
                              fsr0 0004                                indf 0000  
                  __end_of_ADC_Set 0DB2          __end_of_LightsPointSelect 0DED  
           _setMain_Exception$2106 005B                   _getLights_Status 0E31  
          __size_of_Lights_Control 0059                               ?_ISR 0070  
                             l1061 0E03                               l3302 06D9  
                             l4040 0422                               l4032 040A  
                             l4024 03FE                               l4120 06ED  
                             l4042 042A                               l3218 05AD  
                             l3250 052D                               l4044 0438  
                             l4028 0404                               l4132 0709  
                             l4212 0634                               l3260 0535  
                             l3244 0522                               l4038 0416  
                             l4134 0713                               l3262 0543  
                             l3328 0774                               l4128 0701  
                             l3272 0564                               l4320 07DC  
                             l4218 064D                               l3290 06AA  
                             l4500 00B8                               l4180 03B3  
                             l4164 0398                               l4148 036B  
                             l3276 056C                               l3268 0559  
                             l3292 06B8                               l4340 0279  
                             l4412 0F7C                               l4238 0FCF  
                             l4190 03C2                               l4342 027D  
                             l4512 00CF                               l4344 0281  
                             l4336 0273                               l4352 028E  
                             l3298 06CE                               l4362 02B2  
                             l4346 0285                               l4354 029F  
                             l4516 00DB                               l4348 0289  
                             l4550 01A9                               l4518 00DC  
                             l3824 0459                               l3832 0461  
                             l4536 013E                               l4528 012A  
                             l4552 01B8                               l4392 0344  
                             l4384 0318                               l4368 02CE  
                             l4608 04D2                               l3930 07B0  
                             l4562 01D4                               l4546 0175  
                             l4378 02FC                               l4618 04F1  
                             l3860 0489                               l3932 0792  
                             l4468 0083                               l3838 046A  
                             l3846 0472                               l3934 07B7  
                             l4398 0352                               l3856 0485  
                             l3864 048D                               l3890 04AD  
                             l3954 067A                               l3946 066E  
                             l3868 0495                               l3980 05FA  
                             l3964 0694                               l3956 0682  
                             l3886 04A7                               l3894 04B3  
                             l3984 0615                               l3992 0F5D  
                             l3994 0F60                               l3998 0F66  
            _myMain_Initialization 0D73                       __CFG_WDTE$ON 0000  
                             u4025 079B                               u3075 0784  
                             u4240 041F                               u5115 01C8  
                             u4260 0435                               u5045 00FC  
                             u5055 0120                               u5145 01F1  
                             u2905 055A                               u5075 015C  
                             _PEIE 005E                               u2780 05A9  
                             u5095 019B                               u4295 0F99  
                             u4545 0659                               u2865 0538  
                             u2945 06AD                               _RCIE 0465  
                             _RCIF 0065                               u2885 0544  
                             u2965 06B9                               u2895 0550  
                             u2975 06C5                               u2985 06CF  
                             u3995 0ECF                               _UART 00CF  
                             _TXIE 0464                               _TXIF 0064  
                             __CDS 002B            ?_setSYSC_Initialization 0070  
                             _SYSC 0026                               __PIR 00A0  
                             _Temp 003A                               _main 04B9  
                             btemp 007E                    __end_of_WDT_Set 0E23  
                             ltemp 007E                               start 0011  
                             ttemp 007E                               wtemp 007E  
                 __end_of_CDS_Main 078A       __size_of_Temp_Initialization 0003  
                            ??_ISR 0073                  _setLights_Trigger 07E5  
                    ??_Lights_Main 005C                      __CFG_PLLEN$ON 0000  
                 __end_of_LED_Main 0D77                 ?_setLights_Trigger 0054  
                 ??_setPIRLED_Main 0056                              ?_main 0066  
                  __end_of___awdiv 0573                              _ADRES 001E  
                  ___awdiv@divisor 0052                              _T1CON 0010  
                  __end_of___lwdiv 06E0                      ?_Lights_Close 0070  
                            i1l514 0D98                              i1l486 074F  
                  ___awdiv@counter 0057                              _RCREG 001A  
                            _RCSTA 0018                              _TMR1H 000F  
                            _TMR1L 000E                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TXREG 0019                              _TXSTA 0098  
             setMain_Exception@buz 0059            __end_of_Timeout_Counter 0ED5  
                 __end_of_UART_ISR 0756                 __size_of_UART_Main 000E  
              ??_setLights_Trigger 0055                   __end_of_PIR_Main 021A  
                 __end_of_TMR1_ISR 0F34                   __end_of_UART_Set 0F18  
                 __end_of_TMR1_Set 0E15                              _getAD 0F50  
                            _getch 0D98     __end_of_setSYSC_Initialization 0D8F  
                            _putch 0DBA                   __end_of_WDT_Main 0E64  
                    _LightsControl 0039                     __CFG_BOREN$OFF 0000  
                            pclath 000A                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080     __size_of_setLED_Initialization 0012  
     __end_of_getMain_LightsStatus 07BB      __end_of_setLED_Initialization 0E76  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                  getPIR_AD@channel1 0060  
                getPIR_AD@channel2 005B                     _setLights_Main 0FAE  
                   _setLights_Line 0E76                    __initialization 0013  
               __size_of_SYSC_Main 0003          __end_of_setLights_Trigger 0800  
                     __end_of_main 0516                   __end_of_Fosc_Set 0D98  
                        ??_ADC_Set 0052                             ??_main 006A  
                   ??_Lights_Close 005B                __end_of_Lights_Main 0DD5  
       __size_of_LightsPointSelect 000C                             ?_getAD 0052  
           ?_myMain_Initialization 0070                             ?_getch 0070  
                           _ADCON0 001F                             _ADCON1 009F  
                 ___awdiv@dividend 0054                          ??_WDT_Set 0052  
                           _ANSELA 0185                             ?_putch 0070  
                           _ANSELB 0186           _getMain_All_Error_Status 065F  
                           i1l3372 0734                             u314_25 0732  
                           _FVRCON 009D                             u315_25 074D  
           getLights_Status@lights 0054                             _PIRLED 0030  
                           _OSCCON 0090                             _TMR1IE 0460  
                           _TMR1IF 0060                             _IO_Set 0EEA  
                           _TRISC6 043E                             _TRISC7 043F  
           getLights_Status@status 0055             __end_of_setLights_Main 0FD6  
           __end_of_setLights_Line 0E88       __size_of_SYSC_Initialization 0003  
       __end_of_Mcu_Initialization 0E9A                             _Lights 0038  
                           _Timer1 0034                  __end_of_UART_Main 0E31  
      __size_of_CDS_Initialization 0004            ??_Lights_Initialization 0055  
                        ??___awdiv 0056                          ??___lwdiv 0056  
                           _setLED 0448                             _myMain 0020  
                 ___awdiv@quotient 0059                 __size_of_Temp_Main 0003  
                           saved_w 007E                   ?_Timeout_Counter 0070  
                __end_of_SYSC_Main 0D7D                     _Lights_Control 0573  
          __size_of_LedPointSelect 001C                          ?_CDS_Main 0070  
      __size_of_PIR_Initialization 0014         getMain_LightsStatus@status 005A  
          __end_of__initialization 0022                          ?_LED_Main 0070  
                    ?_my_MainTimer 0070                    ?_setLights_Main 0070  
                  ?_setLights_Line 0070              __end_of_UART_Transmit 0FAE  
                    ?_setSYSC_Main 0070         __size_of_setLights_Trigger 001B  
                   __pcstackCOMMON 0070                 __size_of_getCDS_AD 002A  
                        ?_UART_ISR 0070           __end_of_getLights_Status 0E42  
                    __end_of_getAD 0F6C                          ?_PIR_Main 0070  
                        ?_TMR1_ISR 0070                          ?_UART_Set 0070  
                    __end_of_getch 0D9E                          ?_TMR1_Set 0070  
               _LED_Initialization 0DD5                 __size_of_getPIR_AD 013A  
                      _Lights_Main 0DCA                      __end_of_putch 0DC2  
         _setLights_Initialization 0DA4                          ?_WDT_Main 0070  
             _getMain_LightsStatus 078A         __end_of_set_TimeoutCleared 0DA4  
              ?_LED_Initialization 0070             __end_of_Lights_Control 05CC  
            getMain_LightsStatus@i 0058                            ??_getAD 0053  
              _Temp_Initialization 0D7D                            ??_getch 0070  
                       ??_CDS_Main 0052                            ??_putch 0052  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
                        ?_Fosc_Set 0070        __size_of_getAll_Lights_Line 0011  
                __end_of_Temp_Main 0D83                            ?_IO_Set 0070  
                  __CFG_VCAPEN$DIS 0000                     ??_my_MainTimer 0052  
                       ??_LED_Main 0058               __end_of_Lights_Close 0EEA  
                   ??_setSYSC_Main 005A          getMain_LightsStatus@count 0057  
             ??_LED_Initialization 0057                  LedPointSelect@led 0053  
                       __pmaintext 04B9               ?_Temp_Initialization 0070  
                       ??_UART_ISR 0070                         ??_PIR_Main 005E  
                       ??_TMR1_ISR 0070                         ??_UART_Set 0052  
                    ?_setTemp_Main 0070                 __size_of_setLights 0051  
                       ??_TMR1_Set 0052                         __pintentry 0004  
                          ?_setLED 0054            setLights_Trigger@lights 0056  
                        UART_ISR@i 0071                            _ADC_Set 0DAB  
                       _getTemp_AD 07BB                         ??_WDT_Main 0052  
            ?_getMain_LightsStatus 0070             __size_of_getCDS_Status 0008  
                  ?_Lights_Control 0070                  __end_of_getCDS_AD 1000  
                          _WDT_Set 0E15                         ??_Fosc_Set 0052  
                __end_of_getPIR_AD 0354                      ?_UART_Receive 0070  
                    ?_UART_SetData 0070                    __size_of_IO_Set 0015  
                       getCDS_AD@i 0057                         getCDS_AD@j 0058  
                          _Lights1 00DB                            _VarLED1 004A  
                          _VarLED2 004E              ??_Temp_Initialization 0052  
                   ??_setTemp_Main 005B                            ___awdiv 0516  
                          ___lwdiv 06A0                    __size_of_setLED 0071  
                          __ptext0 0000                            __ptext1 0F6C  
                          __ptext2 0DED                            __ptext3 0D73  
                          __ptext4 07BB                            __ptext5 021A  
                          __ptext6 06A0                            __ptext7 0516  
                          __ptext8 0FD6                            __ptext9 0F50  
                       getPIR_AD@i 0061                         getPIR_AD@j 005F  
                     __size_of_ISR 0013         ??_getMain_All_Error_Status 0053  
              _SYSC_Initialization 0D77            ??_myMain_Initialization 0052  
         ??_setTemp_Initialization 0052                     _LedPointSelect 0F34  
                          clrloop0 0DC3                  __end_of_setLights 061D  
             end_of_initialization 0022                     ??_UART_Receive 0052  
                   ??_UART_SetData 0052                      _getCDS_Status 0DB2  
             ?_SYSC_Initialization 0070                     UART_Transmit@i 0053  
            _setLED_Initialization 0E64     __size_of_Lights_Initialization 0004  
    __end_of_Lights_Initialization 0D8B             ??_getMain_LightsStatus 0056  
                        _UART_Main 0E23                        ?_getTemp_AD 0070  
         setLED_Initialization@led 0056                 _Mcu_Initialization 0E88  
             __end_of_my_MainTimer 0F8C               __end_of_setSYSC_Main 065F  
           __end_of_LedPointSelect 0F50                setPIRLED_Main@count 0057  
              ?_Mcu_Initialization 0070              __size_of_Lights_Close 0015  
          __size_of_setPIRLED_Main 0071                   ??_setLights_Main 0058  
                 ??_setLights_Line 0054               setLights_Main@lights 0058  
                        _SYSC_Main 0D7A    getMain_All_Error_Status@command 0058  
                __size_of_CDS_Main 0034                     ?_getCDS_Status 0070  
            ??_SYSC_Initialization 0052                     __end_of_IO_Set 0EFF  
       __end_of_CDS_Initialization 0D87         ??_setLights_Initialization 0054  
                __size_of_LED_Main 0003                  _setMain_Exception 06E0  
             ??_Mcu_Initialization 0053                      ?_WDT_Clearing 0070  
               ?_setMain_Exception 0070                  ?_getLights_Status 0070  
         setMain_Exception@command 005D                       ?_Lights_Main 0070  
                       ?_UART_Main 0070                  __size_of_UART_ISR 0037  
                __size_of_PIR_Main 01F5                  __size_of_TMR1_ISR 001C  
               ??_getLights_Status 0054                  __size_of_UART_Set 0019  
                __size_of_TMR1_Set 000E                     __end_of_setLED 04B9  
              ??_setMain_Exception 0057           ??_setSYSC_Initialization 0052  
                     _Lights_Close 0ED5                  __size_of_WDT_Main 0011  
              start_initialization 0013                    ?_LedPointSelect 0070  
             setLights_Line@lights 0054                        __end_of_ISR 0EAD  
       __end_of_PIR_Initialization 0EC1    __size_of_setTemp_Initialization 0001  
              getCDS_Status@status 0052               __end_of_setTemp_Main 03D7  
                       ?_SYSC_Main 0070                 _set_TimeoutCleared 0D9E  
                         ??_IO_Set 0052           __size_of_Timeout_Counter 0014  
                        _VarErrLED 0046                __size_of_getTemp_AD 002A  
           ?_setLED_Initialization 0070                  __size_of_Fosc_Set 0005  
        __end_of_setMain_Exception 071F                          _Temp_Main 0D80  
                  setLights@lights 0057                ?_set_TimeoutCleared 0070  
                   ??_WDT_Clearing 0052                    setLights@status 0055  
                         ??_setLED 0055                           ?_ADC_Set 0070  
                 ??_Lights_Control 0054               __end_of_UART_Receive 0D93  
 __end_of_getMain_All_Error_Status 06A0               __end_of_UART_SetData 0DF9  
                      __pbssCOMMON 0077                          ___latbits 0001  
           __size_of_UART_Transmit 0022                      __pcstackBANK0 0052  
             ??_set_TimeoutCleared 0052         __end_of_getAll_Lights_Line 0E53  
                         ?_WDT_Set 0070                    ??_getCDS_Status 0052  
                    PIR_Main@error 0065                          _getCDS_AD 0FD6  
                        _getPIR_AD 021A        __size_of_LED_Initialization 000C  
                       ?_Temp_Main 0070                   ___lwdiv@dividend 0054  
           _setTemp_Initialization 0D72                      _PIR_Main$2761 0063  
                         ?___awdiv 0052              __size_of_my_MainTimer 0020  
                         ?___lwdiv 0052              __size_of_setSYSC_Main 0042  
                      ??_UART_Main 0055           setLights_Trigger@command 0054  
  __size_of_setSYSC_Initialization 0004     __size_of_myMain_Initialization 0001  
    __end_of_myMain_Initialization 0D74                     __size_of_getAD 001C  
                 ___lwdiv@quotient 0057                     __size_of_getch 0006  
                   _setPIRLED_Main 03D7                           _CDS_Main 0756  
                   __size_of_putch 0008                        ??_SYSC_Main 005A  
      __end_of_Temp_Initialization 0D80                  interrupt_function 0004  
                       ?_getCDS_AD 0054                           _LED_Main 0D74  
                        _setLights 05CC                          clear_ram0 0DC2  
 __end_of_setLights_Initialization 0DAB         __size_of_setMain_Exception 003F  
                     _my_MainTimer 0F6C                         ?_getPIR_AD 005B  
                     _setSYSC_Main 061D                      _UART_Transmit 0F8C  
                         _GO_nDONE 00F9                  ??_Timeout_Counter 0052  
                         _UART_ISR 071F                           _PIR_Main 0025  
                         _TMR1_ISR 0F18                           _UART_Set 0EFF  
                         _TMR1_Set 0E07                       ??_getTemp_AD 0054  
                         _WDT_Main 0E53                   __size_of_ADC_Set 0007  
             __size_of_Lights_Main 000B              __size_of_setTemp_Main 0083  
           __end_of_setPIRLED_Main 0448     getMain_All_Error_Status@status 0059  
                      getAD@adcon0 0053                        getAD@adcon1 0052  
             __end_of_WDT_Clearing 0004                           _Fosc_Set 0D93  
                 __size_of_WDT_Set 000E            setMain_Exception@status 005A  
__size_of_getMain_All_Error_Status 0041          ?_getMain_All_Error_Status 0070  
                       ?_setLights 0055                 __end_of_getTemp_AD 07E5  
           _setSYSC_Initialization 0D8B                     ?_UART_Transmit 0070  
                _DetectSYSC_Signal 0DF9                           _SwDetect 0079  
                      ??_Temp_Main 005C      _getMain_All_Error_Status$2116 0054  
    _getMain_All_Error_Status$2118 0056                 ?_DetectSYSC_Signal 0070  
                        setLED@led 0055              __size_of_UART_Receive 0004  
            __size_of_UART_SetData 000C                       _setTemp_Main 0354  
                 __size_of___awdiv 005D                   __size_of___lwdiv 0040  
                 ??_LedPointSelect 0052                ??_DetectSYSC_Signal 0052  
               _CDS_Initialization 0D83              _Lights_Initialization 0D87  
    __size_of_getMain_LightsStatus 0031                  getTemp_AD@channel 0056  
                  ?_setPIRLED_Main 0070                    ___lwdiv@divisor 0052  
              ?_CDS_Initialization 0070                    ___lwdiv@counter 0059  
                         __ptext10 0D9E                           __ptext11 0EC1  
                         __ptext20 0D7D                           __ptext12 0E53  
                         __ptext21 0D72                           __ptext13 0002  
                         __ptext30 065F                           __ptext22 0D7A  
                         __ptext14 0E23                           __ptext31 0DB2  
                         __ptext23 061D                           __ptext15 0F8C  
                         __ptext40 0DCA                           __ptext32 0EAD  
                         __ptext24 0D77                           __ptext16 0DBA  
                         __ptext41 0FAE                           __ptext33 0E88  
                         __ptext25 0D8B                           __ptext17 0D8F  
                         __ptext50 0DE1                           __ptext42 05CC  
                         __ptext34 0E15                           __ptext26 0025  
                         __ptext18 0D80                           __ptext51 0D74  
                         __ptext43 0E76                           __ptext35 0EFF  
                         __ptext27 06E0                           __ptext19 0354  
                         __ptext60 0E9A                           __ptext52 03D7  
                         __ptext44 0573                           __ptext36 0E07  
                         __ptext28 07E5                           __ptext61 071F  
                         __ptext53 0DD5                           __ptext45 0ED5  
                         __ptext37 0EEA                           __ptext29 0E42  
                         __ptext62 0D98                           __ptext54 0E64  
                         __ptext46 078A                           __ptext38 0D93  
                         __ptext63 0F18                           __ptext55 0448  
                         __ptext47 0E31                           __ptext39 0DAB  
                         __ptext56 0F34                           __ptext48 0D87  
                         __ptext57 0DF9                           __ptext49 0DA4  
                         __ptext58 0756                           __ptext59 0D83  
        __size_of_getLights_Status 0011        __end_of_SYSC_Initialization 0D7A  
          ??_setLED_Initialization 0056                        ??_getCDS_AD 0055  
                    setLED@command 0054          __end_of_DetectSYSC_Signal 0E07  
                    __size_of_main 005D                       _UART_Receive 0D8F  
                     _UART_SetData 0DED                        ??_getPIR_AD 005C  
               _PIR_Initialization 0EAD               ??_CDS_Initialization 0052  
      __size_of_Mcu_Initialization 0012                ?_PIR_Initialization 0070  
                         main@argc 0066                           main@argv 0068  
__size_of_setLights_Initialization 0007                          putch@byte 0052  
        ?_setLights_Initialization 0070               Lights_Control@lights 0056  
             ??_PIR_Initialization 0056                           intlevel1 0000  
                  ??_UART_Transmit 0053                        ??_setLights 0056  
          ?_setTemp_Initialization 0070            LightsPointSelect@lights 0053  
               _getAll_Lights_Line 0E42            __size_of_setLights_Main 0028  
          __size_of_setLights_Line 0012                ?_getAll_Lights_Line 0070  
           ?_Lights_Initialization 0070              __size_of_WDT_Clearing 0002  
   setLights_Initialization@lights 0054        __size_of_set_TimeoutCleared 0006  
                _LightsPointSelect 0DE1               ??_getAll_Lights_Line 0054  
               __CFG_FOSC$INTOSCIO 0000                 ?_LightsPointSelect 0070  
                  _Timeout_Counter 0EC1         __end_of_LED_Initialization 0DE1  
            __end_of_getCDS_Status 0DBA     __end_of_setTemp_Initialization 0D73  
       __size_of_DetectSYSC_Signal 000E                  getCDS_AD@channel1 0059  
                getCDS_AD@channel2 0054                ??_LightsPointSelect 0052  
