

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Oct 04 10:17:53 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1516
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  010E                     	;# 
    96  0116                     	;# 
    97  0117                     	;# 
    98  011D                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  018E                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  0199                     	;# 
   112  019A                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  020D                     	;# 
   123  0210                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0298                     	;# 
   144  0298                     	;# 
   145  0299                     	;# 
   146  029A                     	;# 
   147  0394                     	;# 
   148  0395                     	;# 
   149  0396                     	;# 
   150  0FE4                     	;# 
   151  0FE5                     	;# 
   152  0FE6                     	;# 
   153  0FE7                     	;# 
   154  0FE8                     	;# 
   155  0FE9                     	;# 
   156  0FEA                     	;# 
   157  0FEB                     	;# 
   158  0FED                     	;# 
   159  0FEE                     	;# 
   160  0FEF                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  0116                     	;# 
   208  0117                     	;# 
   209  011D                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  018E                     	;# 
   213  0191                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0194                     	;# 
   219  0195                     	;# 
   220  0196                     	;# 
   221  0197                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019B                     	;# 
   228  019C                     	;# 
   229  019C                     	;# 
   230  019D                     	;# 
   231  019E                     	;# 
   232  019F                     	;# 
   233  020D                     	;# 
   234  0210                     	;# 
   235  0211                     	;# 
   236  0211                     	;# 
   237  0212                     	;# 
   238  0212                     	;# 
   239  0213                     	;# 
   240  0213                     	;# 
   241  0214                     	;# 
   242  0214                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0216                     	;# 
   247  0216                     	;# 
   248  0217                     	;# 
   249  0217                     	;# 
   250  0291                     	;# 
   251  0291                     	;# 
   252  0292                     	;# 
   253  0293                     	;# 
   254  0298                     	;# 
   255  0298                     	;# 
   256  0299                     	;# 
   257  029A                     	;# 
   258  0394                     	;# 
   259  0395                     	;# 
   260  0396                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  000E                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0090                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  0116                     	;# 
   319  0117                     	;# 
   320  011D                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  018E                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0197                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019B                     	;# 
   339  019C                     	;# 
   340  019C                     	;# 
   341  019D                     	;# 
   342  019E                     	;# 
   343  019F                     	;# 
   344  020D                     	;# 
   345  0210                     	;# 
   346  0211                     	;# 
   347  0211                     	;# 
   348  0212                     	;# 
   349  0212                     	;# 
   350  0213                     	;# 
   351  0213                     	;# 
   352  0214                     	;# 
   353  0214                     	;# 
   354  0215                     	;# 
   355  0215                     	;# 
   356  0215                     	;# 
   357  0216                     	;# 
   358  0216                     	;# 
   359  0217                     	;# 
   360  0217                     	;# 
   361  0291                     	;# 
   362  0291                     	;# 
   363  0292                     	;# 
   364  0293                     	;# 
   365  0298                     	;# 
   366  0298                     	;# 
   367  0299                     	;# 
   368  029A                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  0FE4                     	;# 
   373  0FE5                     	;# 
   374  0FE6                     	;# 
   375  0FE7                     	;# 
   376  0FE8                     	;# 
   377  0FE9                     	;# 
   378  0FEA                     	;# 
   379  0FEB                     	;# 
   380  0FED                     	;# 
   381  0FEE                     	;# 
   382  0FEF                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  010C                     	;# 
   427  010D                     	;# 
   428  010E                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  011D                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434  018E                     	;# 
   435  0191                     	;# 
   436  0191                     	;# 
   437  0192                     	;# 
   438  0193                     	;# 
   439  0193                     	;# 
   440  0194                     	;# 
   441  0195                     	;# 
   442  0196                     	;# 
   443  0197                     	;# 
   444  0199                     	;# 
   445  019A                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019B                     	;# 
   449  019B                     	;# 
   450  019C                     	;# 
   451  019C                     	;# 
   452  019D                     	;# 
   453  019E                     	;# 
   454  019F                     	;# 
   455  020D                     	;# 
   456  0210                     	;# 
   457  0211                     	;# 
   458  0211                     	;# 
   459  0212                     	;# 
   460  0212                     	;# 
   461  0213                     	;# 
   462  0213                     	;# 
   463  0214                     	;# 
   464  0214                     	;# 
   465  0215                     	;# 
   466  0215                     	;# 
   467  0215                     	;# 
   468  0216                     	;# 
   469  0216                     	;# 
   470  0217                     	;# 
   471  0217                     	;# 
   472  0291                     	;# 
   473  0291                     	;# 
   474  0292                     	;# 
   475  0293                     	;# 
   476  0298                     	;# 
   477  0298                     	;# 
   478  0299                     	;# 
   479  029A                     	;# 
   480  0394                     	;# 
   481  0395                     	;# 
   482  0396                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  0010                     	;# 
   510  0011                     	;# 
   511  0012                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0099                     	;# 
   531  009A                     	;# 
   532  009B                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  010C                     	;# 
   538  010D                     	;# 
   539  010E                     	;# 
   540  0116                     	;# 
   541  0117                     	;# 
   542  011D                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545  018E                     	;# 
   546  0191                     	;# 
   547  0191                     	;# 
   548  0192                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0197                     	;# 
   555  0199                     	;# 
   556  019A                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019B                     	;# 
   561  019C                     	;# 
   562  019C                     	;# 
   563  019D                     	;# 
   564  019E                     	;# 
   565  019F                     	;# 
   566  020D                     	;# 
   567  0210                     	;# 
   568  0211                     	;# 
   569  0211                     	;# 
   570  0212                     	;# 
   571  0212                     	;# 
   572  0213                     	;# 
   573  0213                     	;# 
   574  0214                     	;# 
   575  0214                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0298                     	;# 
   588  0298                     	;# 
   589  0299                     	;# 
   590  029A                     	;# 
   591  0394                     	;# 
   592  0395                     	;# 
   593  0396                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0015                     	;# 
   624  0016                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  001B                     	;# 
   631  001C                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  0090                     	;# 
   636  0091                     	;# 
   637  0092                     	;# 
   638  0095                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0099                     	;# 
   642  009A                     	;# 
   643  009B                     	;# 
   644  009B                     	;# 
   645  009C                     	;# 
   646  009D                     	;# 
   647  009E                     	;# 
   648  010C                     	;# 
   649  010D                     	;# 
   650  010E                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  011D                     	;# 
   654  018C                     	;# 
   655  018D                     	;# 
   656  018E                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0194                     	;# 
   663  0195                     	;# 
   664  0196                     	;# 
   665  0197                     	;# 
   666  0199                     	;# 
   667  019A                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019C                     	;# 
   673  019C                     	;# 
   674  019D                     	;# 
   675  019E                     	;# 
   676  019F                     	;# 
   677  020D                     	;# 
   678  0210                     	;# 
   679  0211                     	;# 
   680  0211                     	;# 
   681  0212                     	;# 
   682  0212                     	;# 
   683  0213                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0214                     	;# 
   687  0215                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0216                     	;# 
   691  0216                     	;# 
   692  0217                     	;# 
   693  0217                     	;# 
   694  0291                     	;# 
   695  0291                     	;# 
   696  0292                     	;# 
   697  0293                     	;# 
   698  0298                     	;# 
   699  0298                     	;# 
   700  0299                     	;# 
   701  029A                     	;# 
   702  0394                     	;# 
   703  0395                     	;# 
   704  0396                     	;# 
   705  0FE4                     	;# 
   706  0FE5                     	;# 
   707  0FE6                     	;# 
   708  0FE7                     	;# 
   709  0FE8                     	;# 
   710  0FE9                     	;# 
   711  0FEA                     	;# 
   712  0FEB                     	;# 
   713  0FED                     	;# 
   714  0FEE                     	;# 
   715  0FEF                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  0010                     	;# 
   732  0011                     	;# 
   733  0012                     	;# 
   734  0015                     	;# 
   735  0016                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  001A                     	;# 
   741  001B                     	;# 
   742  001C                     	;# 
   743  008C                     	;# 
   744  008D                     	;# 
   745  008E                     	;# 
   746  0090                     	;# 
   747  0091                     	;# 
   748  0092                     	;# 
   749  0095                     	;# 
   750  0096                     	;# 
   751  0097                     	;# 
   752  0099                     	;# 
   753  009A                     	;# 
   754  009B                     	;# 
   755  009B                     	;# 
   756  009C                     	;# 
   757  009D                     	;# 
   758  009E                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  011D                     	;# 
   765  018C                     	;# 
   766  018D                     	;# 
   767  018E                     	;# 
   768  0191                     	;# 
   769  0191                     	;# 
   770  0192                     	;# 
   771  0193                     	;# 
   772  0193                     	;# 
   773  0194                     	;# 
   774  0195                     	;# 
   775  0196                     	;# 
   776  0197                     	;# 
   777  0199                     	;# 
   778  019A                     	;# 
   779  019B                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019C                     	;# 
   784  019C                     	;# 
   785  019D                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  020D                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  0291                     	;# 
   806  0291                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0298                     	;# 
   810  0298                     	;# 
   811  0299                     	;# 
   812  029A                     	;# 
   813  0394                     	;# 
   814  0395                     	;# 
   815  0396                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0010                     	;# 
   843  0011                     	;# 
   844  0012                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  008C                     	;# 
   855  008D                     	;# 
   856  008E                     	;# 
   857  0090                     	;# 
   858  0091                     	;# 
   859  0092                     	;# 
   860  0095                     	;# 
   861  0096                     	;# 
   862  0097                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  010C                     	;# 
   871  010D                     	;# 
   872  010E                     	;# 
   873  0116                     	;# 
   874  0117                     	;# 
   875  011D                     	;# 
   876  018C                     	;# 
   877  018D                     	;# 
   878  018E                     	;# 
   879  0191                     	;# 
   880  0191                     	;# 
   881  0192                     	;# 
   882  0193                     	;# 
   883  0193                     	;# 
   884  0194                     	;# 
   885  0195                     	;# 
   886  0196                     	;# 
   887  0197                     	;# 
   888  0199                     	;# 
   889  019A                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019C                     	;# 
   895  019C                     	;# 
   896  019D                     	;# 
   897  019E                     	;# 
   898  019F                     	;# 
   899  020D                     	;# 
   900  0210                     	;# 
   901  0211                     	;# 
   902  0211                     	;# 
   903  0212                     	;# 
   904  0212                     	;# 
   905  0213                     	;# 
   906  0213                     	;# 
   907  0214                     	;# 
   908  0214                     	;# 
   909  0215                     	;# 
   910  0215                     	;# 
   911  0215                     	;# 
   912  0216                     	;# 
   913  0216                     	;# 
   914  0217                     	;# 
   915  0217                     	;# 
   916  0291                     	;# 
   917  0291                     	;# 
   918  0292                     	;# 
   919  0293                     	;# 
   920  0298                     	;# 
   921  0298                     	;# 
   922  0299                     	;# 
   923  029A                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0FE4                     	;# 
   928  0FE5                     	;# 
   929  0FE6                     	;# 
   930  0FE7                     	;# 
   931  0FE8                     	;# 
   932  0FE9                     	;# 
   933  0FEA                     	;# 
   934  0FEB                     	;# 
   935  0FED                     	;# 
   936  0FEE                     	;# 
   937  0FEF                     	;# 
   938  0000                     	;# 
   939  0001                     	;# 
   940  0002                     	;# 
   941  0003                     	;# 
   942  0004                     	;# 
   943  0005                     	;# 
   944  0006                     	;# 
   945  0007                     	;# 
   946  0008                     	;# 
   947  0009                     	;# 
   948  000A                     	;# 
   949  000B                     	;# 
   950  000C                     	;# 
   951  000D                     	;# 
   952  000E                     	;# 
   953  0010                     	;# 
   954  0011                     	;# 
   955  0012                     	;# 
   956  0015                     	;# 
   957  0016                     	;# 
   958  0016                     	;# 
   959  0017                     	;# 
   960  0018                     	;# 
   961  0019                     	;# 
   962  001A                     	;# 
   963  001B                     	;# 
   964  001C                     	;# 
   965  008C                     	;# 
   966  008D                     	;# 
   967  008E                     	;# 
   968  0090                     	;# 
   969  0091                     	;# 
   970  0092                     	;# 
   971  0095                     	;# 
   972  0096                     	;# 
   973  0097                     	;# 
   974  0099                     	;# 
   975  009A                     	;# 
   976  009B                     	;# 
   977  009B                     	;# 
   978  009C                     	;# 
   979  009D                     	;# 
   980  009E                     	;# 
   981  010C                     	;# 
   982  010D                     	;# 
   983  010E                     	;# 
   984  0116                     	;# 
   985  0117                     	;# 
   986  011D                     	;# 
   987  018C                     	;# 
   988  018D                     	;# 
   989  018E                     	;# 
   990  0191                     	;# 
   991  0191                     	;# 
   992  0192                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0194                     	;# 
   996  0195                     	;# 
   997  0196                     	;# 
   998  0197                     	;# 
   999  0199                     	;# 
  1000  019A                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019B                     	;# 
  1004  019B                     	;# 
  1005  019C                     	;# 
  1006  019C                     	;# 
  1007  019D                     	;# 
  1008  019E                     	;# 
  1009  019F                     	;# 
  1010  020D                     	;# 
  1011  0210                     	;# 
  1012  0211                     	;# 
  1013  0211                     	;# 
  1014  0212                     	;# 
  1015  0212                     	;# 
  1016  0213                     	;# 
  1017  0213                     	;# 
  1018  0214                     	;# 
  1019  0214                     	;# 
  1020  0215                     	;# 
  1021  0215                     	;# 
  1022  0215                     	;# 
  1023  0216                     	;# 
  1024  0216                     	;# 
  1025  0217                     	;# 
  1026  0217                     	;# 
  1027  0291                     	;# 
  1028  0291                     	;# 
  1029  0292                     	;# 
  1030  0293                     	;# 
  1031  0298                     	;# 
  1032  0298                     	;# 
  1033  0299                     	;# 
  1034  029A                     	;# 
  1035  0394                     	;# 
  1036  0395                     	;# 
  1037  0396                     	;# 
  1038  0FE4                     	;# 
  1039  0FE5                     	;# 
  1040  0FE6                     	;# 
  1041  0FE7                     	;# 
  1042  0FE8                     	;# 
  1043  0FE9                     	;# 
  1044  0FEA                     	;# 
  1045  0FEB                     	;# 
  1046  0FED                     	;# 
  1047  0FEE                     	;# 
  1048  0FEF                     	;# 
  1049  0000                     	;# 
  1050  0001                     	;# 
  1051  0002                     	;# 
  1052  0003                     	;# 
  1053  0004                     	;# 
  1054  0005                     	;# 
  1055  0006                     	;# 
  1056  0007                     	;# 
  1057  0008                     	;# 
  1058  0009                     	;# 
  1059  000A                     	;# 
  1060  000B                     	;# 
  1061  000C                     	;# 
  1062  000D                     	;# 
  1063  000E                     	;# 
  1064  0010                     	;# 
  1065  0011                     	;# 
  1066  0012                     	;# 
  1067  0015                     	;# 
  1068  0016                     	;# 
  1069  0016                     	;# 
  1070  0017                     	;# 
  1071  0018                     	;# 
  1072  0019                     	;# 
  1073  001A                     	;# 
  1074  001B                     	;# 
  1075  001C                     	;# 
  1076  008C                     	;# 
  1077  008D                     	;# 
  1078  008E                     	;# 
  1079  0090                     	;# 
  1080  0091                     	;# 
  1081  0092                     	;# 
  1082  0095                     	;# 
  1083  0096                     	;# 
  1084  0097                     	;# 
  1085  0099                     	;# 
  1086  009A                     	;# 
  1087  009B                     	;# 
  1088  009B                     	;# 
  1089  009C                     	;# 
  1090  009D                     	;# 
  1091  009E                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  010E                     	;# 
  1095  0116                     	;# 
  1096  0117                     	;# 
  1097  011D                     	;# 
  1098  018C                     	;# 
  1099  018D                     	;# 
  1100  018E                     	;# 
  1101  0191                     	;# 
  1102  0191                     	;# 
  1103  0192                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0194                     	;# 
  1107  0195                     	;# 
  1108  0196                     	;# 
  1109  0197                     	;# 
  1110  0199                     	;# 
  1111  019A                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019C                     	;# 
  1117  019C                     	;# 
  1118  019D                     	;# 
  1119  019E                     	;# 
  1120  019F                     	;# 
  1121  020D                     	;# 
  1122  0210                     	;# 
  1123  0211                     	;# 
  1124  0211                     	;# 
  1125  0212                     	;# 
  1126  0212                     	;# 
  1127  0213                     	;# 
  1128  0213                     	;# 
  1129  0214                     	;# 
  1130  0214                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0215                     	;# 
  1134  0216                     	;# 
  1135  0216                     	;# 
  1136  0217                     	;# 
  1137  0217                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0298                     	;# 
  1143  0298                     	;# 
  1144  0299                     	;# 
  1145  029A                     	;# 
  1146  0394                     	;# 
  1147  0395                     	;# 
  1148  0396                     	;# 
  1149  0FE4                     	;# 
  1150  0FE5                     	;# 
  1151  0FE6                     	;# 
  1152  0FE7                     	;# 
  1153  0FE8                     	;# 
  1154  0FE9                     	;# 
  1155  0FEA                     	;# 
  1156  0FEB                     	;# 
  1157  0FED                     	;# 
  1158  0FEE                     	;# 
  1159  0FEF                     	;# 
  1160  0000                     	;# 
  1161  0001                     	;# 
  1162  0002                     	;# 
  1163  0003                     	;# 
  1164  0004                     	;# 
  1165  0005                     	;# 
  1166  0006                     	;# 
  1167  0007                     	;# 
  1168  0008                     	;# 
  1169  0009                     	;# 
  1170  000A                     	;# 
  1171  000B                     	;# 
  1172  000C                     	;# 
  1173  000D                     	;# 
  1174  000E                     	;# 
  1175  0010                     	;# 
  1176  0011                     	;# 
  1177  0012                     	;# 
  1178  0015                     	;# 
  1179  0016                     	;# 
  1180  0016                     	;# 
  1181  0017                     	;# 
  1182  0018                     	;# 
  1183  0019                     	;# 
  1184  001A                     	;# 
  1185  001B                     	;# 
  1186  001C                     	;# 
  1187  008C                     	;# 
  1188  008D                     	;# 
  1189  008E                     	;# 
  1190  0090                     	;# 
  1191  0091                     	;# 
  1192  0092                     	;# 
  1193  0095                     	;# 
  1194  0096                     	;# 
  1195  0097                     	;# 
  1196  0099                     	;# 
  1197  009A                     	;# 
  1198  009B                     	;# 
  1199  009B                     	;# 
  1200  009C                     	;# 
  1201  009D                     	;# 
  1202  009E                     	;# 
  1203  010C                     	;# 
  1204  010D                     	;# 
  1205  010E                     	;# 
  1206  0116                     	;# 
  1207  0117                     	;# 
  1208  011D                     	;# 
  1209  018C                     	;# 
  1210  018D                     	;# 
  1211  018E                     	;# 
  1212  0191                     	;# 
  1213  0191                     	;# 
  1214  0192                     	;# 
  1215  0193                     	;# 
  1216  0193                     	;# 
  1217  0194                     	;# 
  1218  0195                     	;# 
  1219  0196                     	;# 
  1220  0197                     	;# 
  1221  0199                     	;# 
  1222  019A                     	;# 
  1223  019B                     	;# 
  1224  019B                     	;# 
  1225  019B                     	;# 
  1226  019B                     	;# 
  1227  019C                     	;# 
  1228  019C                     	;# 
  1229  019D                     	;# 
  1230  019E                     	;# 
  1231  019F                     	;# 
  1232  020D                     	;# 
  1233  0210                     	;# 
  1234  0211                     	;# 
  1235  0211                     	;# 
  1236  0212                     	;# 
  1237  0212                     	;# 
  1238  0213                     	;# 
  1239  0213                     	;# 
  1240  0214                     	;# 
  1241  0214                     	;# 
  1242  0215                     	;# 
  1243  0215                     	;# 
  1244  0215                     	;# 
  1245  0216                     	;# 
  1246  0216                     	;# 
  1247  0217                     	;# 
  1248  0217                     	;# 
  1249  0291                     	;# 
  1250  0291                     	;# 
  1251  0292                     	;# 
  1252  0293                     	;# 
  1253  0298                     	;# 
  1254  0298                     	;# 
  1255  0299                     	;# 
  1256  029A                     	;# 
  1257  0394                     	;# 
  1258  0395                     	;# 
  1259  0396                     	;# 
  1260  0FE4                     	;# 
  1261  0FE5                     	;# 
  1262  0FE6                     	;# 
  1263  0FE7                     	;# 
  1264  0FE8                     	;# 
  1265  0FE9                     	;# 
  1266  0FEA                     	;# 
  1267  0FEB                     	;# 
  1268  0FED                     	;# 
  1269  0FEE                     	;# 
  1270  0FEF                     	;# 
  1271  0000                     	;# 
  1272  0001                     	;# 
  1273  0002                     	;# 
  1274  0003                     	;# 
  1275  0004                     	;# 
  1276  0005                     	;# 
  1277  0006                     	;# 
  1278  0007                     	;# 
  1279  0008                     	;# 
  1280  0009                     	;# 
  1281  000A                     	;# 
  1282  000B                     	;# 
  1283  000C                     	;# 
  1284  000D                     	;# 
  1285  000E                     	;# 
  1286  0010                     	;# 
  1287  0011                     	;# 
  1288  0012                     	;# 
  1289  0015                     	;# 
  1290  0016                     	;# 
  1291  0016                     	;# 
  1292  0017                     	;# 
  1293  0018                     	;# 
  1294  0019                     	;# 
  1295  001A                     	;# 
  1296  001B                     	;# 
  1297  001C                     	;# 
  1298  008C                     	;# 
  1299  008D                     	;# 
  1300  008E                     	;# 
  1301  0090                     	;# 
  1302  0091                     	;# 
  1303  0092                     	;# 
  1304  0095                     	;# 
  1305  0096                     	;# 
  1306  0097                     	;# 
  1307  0099                     	;# 
  1308  009A                     	;# 
  1309  009B                     	;# 
  1310  009B                     	;# 
  1311  009C                     	;# 
  1312  009D                     	;# 
  1313  009E                     	;# 
  1314  010C                     	;# 
  1315  010D                     	;# 
  1316  010E                     	;# 
  1317  0116                     	;# 
  1318  0117                     	;# 
  1319  011D                     	;# 
  1320  018C                     	;# 
  1321  018D                     	;# 
  1322  018E                     	;# 
  1323  0191                     	;# 
  1324  0191                     	;# 
  1325  0192                     	;# 
  1326  0193                     	;# 
  1327  0193                     	;# 
  1328  0194                     	;# 
  1329  0195                     	;# 
  1330  0196                     	;# 
  1331  0197                     	;# 
  1332  0199                     	;# 
  1333  019A                     	;# 
  1334  019B                     	;# 
  1335  019B                     	;# 
  1336  019B                     	;# 
  1337  019B                     	;# 
  1338  019C                     	;# 
  1339  019C                     	;# 
  1340  019D                     	;# 
  1341  019E                     	;# 
  1342  019F                     	;# 
  1343  020D                     	;# 
  1344  0210                     	;# 
  1345  0211                     	;# 
  1346  0211                     	;# 
  1347  0212                     	;# 
  1348  0212                     	;# 
  1349  0213                     	;# 
  1350  0213                     	;# 
  1351  0214                     	;# 
  1352  0214                     	;# 
  1353  0215                     	;# 
  1354  0215                     	;# 
  1355  0215                     	;# 
  1356  0216                     	;# 
  1357  0216                     	;# 
  1358  0217                     	;# 
  1359  0217                     	;# 
  1360  0291                     	;# 
  1361  0291                     	;# 
  1362  0292                     	;# 
  1363  0293                     	;# 
  1364  0298                     	;# 
  1365  0298                     	;# 
  1366  0299                     	;# 
  1367  029A                     	;# 
  1368  0394                     	;# 
  1369  0395                     	;# 
  1370  0396                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  000E                     	;# 
  1397  0010                     	;# 
  1398  0011                     	;# 
  1399  0012                     	;# 
  1400  0015                     	;# 
  1401  0016                     	;# 
  1402  0016                     	;# 
  1403  0017                     	;# 
  1404  0018                     	;# 
  1405  0019                     	;# 
  1406  001A                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  008C                     	;# 
  1410  008D                     	;# 
  1411  008E                     	;# 
  1412  0090                     	;# 
  1413  0091                     	;# 
  1414  0092                     	;# 
  1415  0095                     	;# 
  1416  0096                     	;# 
  1417  0097                     	;# 
  1418  0099                     	;# 
  1419  009A                     	;# 
  1420  009B                     	;# 
  1421  009B                     	;# 
  1422  009C                     	;# 
  1423  009D                     	;# 
  1424  009E                     	;# 
  1425  010C                     	;# 
  1426  010D                     	;# 
  1427  010E                     	;# 
  1428  0116                     	;# 
  1429  0117                     	;# 
  1430  011D                     	;# 
  1431  018C                     	;# 
  1432  018D                     	;# 
  1433  018E                     	;# 
  1434  0191                     	;# 
  1435  0191                     	;# 
  1436  0192                     	;# 
  1437  0193                     	;# 
  1438  0193                     	;# 
  1439  0194                     	;# 
  1440  0195                     	;# 
  1441  0196                     	;# 
  1442  0197                     	;# 
  1443  0199                     	;# 
  1444  019A                     	;# 
  1445  019B                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019C                     	;# 
  1450  019C                     	;# 
  1451  019D                     	;# 
  1452  019E                     	;# 
  1453  019F                     	;# 
  1454  020D                     	;# 
  1455  0210                     	;# 
  1456  0211                     	;# 
  1457  0211                     	;# 
  1458  0212                     	;# 
  1459  0212                     	;# 
  1460  0213                     	;# 
  1461  0213                     	;# 
  1462  0214                     	;# 
  1463  0214                     	;# 
  1464  0215                     	;# 
  1465  0215                     	;# 
  1466  0215                     	;# 
  1467  0216                     	;# 
  1468  0216                     	;# 
  1469  0217                     	;# 
  1470  0217                     	;# 
  1471  0291                     	;# 
  1472  0291                     	;# 
  1473  0292                     	;# 
  1474  0293                     	;# 
  1475  0298                     	;# 
  1476  0298                     	;# 
  1477  0299                     	;# 
  1478  029A                     	;# 
  1479  0394                     	;# 
  1480  0395                     	;# 
  1481  0396                     	;# 
  1482  0FE4                     	;# 
  1483  0FE5                     	;# 
  1484  0FE6                     	;# 
  1485  0FE7                     	;# 
  1486  0FE8                     	;# 
  1487  0FE9                     	;# 
  1488  0FEA                     	;# 
  1489  0FEB                     	;# 
  1490  0FED                     	;# 
  1491  0FEE                     	;# 
  1492  0FEF                     	;# 
  1493  0000                     	;# 
  1494  0001                     	;# 
  1495  0002                     	;# 
  1496  0003                     	;# 
  1497  0004                     	;# 
  1498  0005                     	;# 
  1499  0006                     	;# 
  1500  0007                     	;# 
  1501  0008                     	;# 
  1502  0009                     	;# 
  1503  000A                     	;# 
  1504  000B                     	;# 
  1505  000C                     	;# 
  1506  000D                     	;# 
  1507  000E                     	;# 
  1508  0010                     	;# 
  1509  0011                     	;# 
  1510  0012                     	;# 
  1511  0015                     	;# 
  1512  0016                     	;# 
  1513  0016                     	;# 
  1514  0017                     	;# 
  1515  0018                     	;# 
  1516  0019                     	;# 
  1517  001A                     	;# 
  1518  001B                     	;# 
  1519  001C                     	;# 
  1520  008C                     	;# 
  1521  008D                     	;# 
  1522  008E                     	;# 
  1523  0090                     	;# 
  1524  0091                     	;# 
  1525  0092                     	;# 
  1526  0095                     	;# 
  1527  0096                     	;# 
  1528  0097                     	;# 
  1529  0099                     	;# 
  1530  009A                     	;# 
  1531  009B                     	;# 
  1532  009B                     	;# 
  1533  009C                     	;# 
  1534  009D                     	;# 
  1535  009E                     	;# 
  1536  010C                     	;# 
  1537  010D                     	;# 
  1538  010E                     	;# 
  1539  0116                     	;# 
  1540  0117                     	;# 
  1541  011D                     	;# 
  1542  018C                     	;# 
  1543  018D                     	;# 
  1544  018E                     	;# 
  1545  0191                     	;# 
  1546  0191                     	;# 
  1547  0192                     	;# 
  1548  0193                     	;# 
  1549  0193                     	;# 
  1550  0194                     	;# 
  1551  0195                     	;# 
  1552  0196                     	;# 
  1553  0197                     	;# 
  1554  0199                     	;# 
  1555  019A                     	;# 
  1556  019B                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019C                     	;# 
  1561  019C                     	;# 
  1562  019D                     	;# 
  1563  019E                     	;# 
  1564  019F                     	;# 
  1565  020D                     	;# 
  1566  0210                     	;# 
  1567  0211                     	;# 
  1568  0211                     	;# 
  1569  0212                     	;# 
  1570  0212                     	;# 
  1571  0213                     	;# 
  1572  0213                     	;# 
  1573  0214                     	;# 
  1574  0214                     	;# 
  1575  0215                     	;# 
  1576  0215                     	;# 
  1577  0215                     	;# 
  1578  0216                     	;# 
  1579  0216                     	;# 
  1580  0217                     	;# 
  1581  0217                     	;# 
  1582  0291                     	;# 
  1583  0291                     	;# 
  1584  0292                     	;# 
  1585  0293                     	;# 
  1586  0298                     	;# 
  1587  0298                     	;# 
  1588  0299                     	;# 
  1589  029A                     	;# 
  1590  0394                     	;# 
  1591  0395                     	;# 
  1592  0396                     	;# 
  1593  0FE4                     	;# 
  1594  0FE5                     	;# 
  1595  0FE6                     	;# 
  1596  0FE7                     	;# 
  1597  0FE8                     	;# 
  1598  0FE9                     	;# 
  1599  0FEA                     	;# 
  1600  0FEB                     	;# 
  1601  0FED                     	;# 
  1602  0FEE                     	;# 
  1603  0FEF                     	;# 
  1604  0000                     	;# 
  1605  0001                     	;# 
  1606  0002                     	;# 
  1607  0003                     	;# 
  1608  0004                     	;# 
  1609  0005                     	;# 
  1610  0006                     	;# 
  1611  0007                     	;# 
  1612  0008                     	;# 
  1613  0009                     	;# 
  1614  000A                     	;# 
  1615  000B                     	;# 
  1616  000C                     	;# 
  1617  000D                     	;# 
  1618  000E                     	;# 
  1619  0010                     	;# 
  1620  0011                     	;# 
  1621  0012                     	;# 
  1622  0015                     	;# 
  1623  0016                     	;# 
  1624  0016                     	;# 
  1625  0017                     	;# 
  1626  0018                     	;# 
  1627  0019                     	;# 
  1628  001A                     	;# 
  1629  001B                     	;# 
  1630  001C                     	;# 
  1631  008C                     	;# 
  1632  008D                     	;# 
  1633  008E                     	;# 
  1634  0090                     	;# 
  1635  0091                     	;# 
  1636  0092                     	;# 
  1637  0095                     	;# 
  1638  0096                     	;# 
  1639  0097                     	;# 
  1640  0099                     	;# 
  1641  009A                     	;# 
  1642  009B                     	;# 
  1643  009B                     	;# 
  1644  009C                     	;# 
  1645  009D                     	;# 
  1646  009E                     	;# 
  1647  010C                     	;# 
  1648  010D                     	;# 
  1649  010E                     	;# 
  1650  0116                     	;# 
  1651  0117                     	;# 
  1652  011D                     	;# 
  1653  018C                     	;# 
  1654  018D                     	;# 
  1655  018E                     	;# 
  1656  0191                     	;# 
  1657  0191                     	;# 
  1658  0192                     	;# 
  1659  0193                     	;# 
  1660  0193                     	;# 
  1661  0194                     	;# 
  1662  0195                     	;# 
  1663  0196                     	;# 
  1664  0197                     	;# 
  1665  0199                     	;# 
  1666  019A                     	;# 
  1667  019B                     	;# 
  1668  019B                     	;# 
  1669  019B                     	;# 
  1670  019B                     	;# 
  1671  019C                     	;# 
  1672  019C                     	;# 
  1673  019D                     	;# 
  1674  019E                     	;# 
  1675  019F                     	;# 
  1676  020D                     	;# 
  1677  0210                     	;# 
  1678  0211                     	;# 
  1679  0211                     	;# 
  1680  0212                     	;# 
  1681  0212                     	;# 
  1682  0213                     	;# 
  1683  0213                     	;# 
  1684  0214                     	;# 
  1685  0214                     	;# 
  1686  0215                     	;# 
  1687  0215                     	;# 
  1688  0215                     	;# 
  1689  0216                     	;# 
  1690  0216                     	;# 
  1691  0217                     	;# 
  1692  0217                     	;# 
  1693  0291                     	;# 
  1694  0291                     	;# 
  1695  0292                     	;# 
  1696  0293                     	;# 
  1697  0298                     	;# 
  1698  0298                     	;# 
  1699  0299                     	;# 
  1700  029A                     	;# 
  1701  0394                     	;# 
  1702  0395                     	;# 
  1703  0396                     	;# 
  1704  0FE4                     	;# 
  1705  0FE5                     	;# 
  1706  0FE6                     	;# 
  1707  0FE7                     	;# 
  1708  0FE8                     	;# 
  1709  0FE9                     	;# 
  1710  0FEA                     	;# 
  1711  0FEB                     	;# 
  1712  0FED                     	;# 
  1713  0FEE                     	;# 
  1714  0FEF                     	;# 
  1715  0000                     	;# 
  1716  0001                     	;# 
  1717  0002                     	;# 
  1718  0003                     	;# 
  1719  0004                     	;# 
  1720  0005                     	;# 
  1721  0006                     	;# 
  1722  0007                     	;# 
  1723  0008                     	;# 
  1724  0009                     	;# 
  1725  000A                     	;# 
  1726  000B                     	;# 
  1727  000C                     	;# 
  1728  000D                     	;# 
  1729  000E                     	;# 
  1730  0010                     	;# 
  1731  0011                     	;# 
  1732  0012                     	;# 
  1733  0015                     	;# 
  1734  0016                     	;# 
  1735  0016                     	;# 
  1736  0017                     	;# 
  1737  0018                     	;# 
  1738  0019                     	;# 
  1739  001A                     	;# 
  1740  001B                     	;# 
  1741  001C                     	;# 
  1742  008C                     	;# 
  1743  008D                     	;# 
  1744  008E                     	;# 
  1745  0090                     	;# 
  1746  0091                     	;# 
  1747  0092                     	;# 
  1748  0095                     	;# 
  1749  0096                     	;# 
  1750  0097                     	;# 
  1751  0099                     	;# 
  1752  009A                     	;# 
  1753  009B                     	;# 
  1754  009B                     	;# 
  1755  009C                     	;# 
  1756  009D                     	;# 
  1757  009E                     	;# 
  1758  010C                     	;# 
  1759  010D                     	;# 
  1760  010E                     	;# 
  1761  0116                     	;# 
  1762  0117                     	;# 
  1763  011D                     	;# 
  1764  018C                     	;# 
  1765  018D                     	;# 
  1766  018E                     	;# 
  1767  0191                     	;# 
  1768  0191                     	;# 
  1769  0192                     	;# 
  1770  0193                     	;# 
  1771  0193                     	;# 
  1772  0194                     	;# 
  1773  0195                     	;# 
  1774  0196                     	;# 
  1775  0197                     	;# 
  1776  0199                     	;# 
  1777  019A                     	;# 
  1778  019B                     	;# 
  1779  019B                     	;# 
  1780  019B                     	;# 
  1781  019B                     	;# 
  1782  019C                     	;# 
  1783  019C                     	;# 
  1784  019D                     	;# 
  1785  019E                     	;# 
  1786  019F                     	;# 
  1787  020D                     	;# 
  1788  0210                     	;# 
  1789  0211                     	;# 
  1790  0211                     	;# 
  1791  0212                     	;# 
  1792  0212                     	;# 
  1793  0213                     	;# 
  1794  0213                     	;# 
  1795  0214                     	;# 
  1796  0214                     	;# 
  1797  0215                     	;# 
  1798  0215                     	;# 
  1799  0215                     	;# 
  1800  0216                     	;# 
  1801  0216                     	;# 
  1802  0217                     	;# 
  1803  0217                     	;# 
  1804  0291                     	;# 
  1805  0291                     	;# 
  1806  0292                     	;# 
  1807  0293                     	;# 
  1808  0298                     	;# 
  1809  0298                     	;# 
  1810  0299                     	;# 
  1811  029A                     	;# 
  1812  0394                     	;# 
  1813  0395                     	;# 
  1814  0396                     	;# 
  1815  0FE4                     	;# 
  1816  0FE5                     	;# 
  1817  0FE6                     	;# 
  1818  0FE7                     	;# 
  1819  0FE8                     	;# 
  1820  0FE9                     	;# 
  1821  0FEA                     	;# 
  1822  0FEB                     	;# 
  1823  0FED                     	;# 
  1824  0FEE                     	;# 
  1825  0FEF                     	;# 
  1826  0000                     	;# 
  1827  0001                     	;# 
  1828  0002                     	;# 
  1829  0003                     	;# 
  1830  0004                     	;# 
  1831  0005                     	;# 
  1832  0006                     	;# 
  1833  0007                     	;# 
  1834  0008                     	;# 
  1835  0009                     	;# 
  1836  000A                     	;# 
  1837  000B                     	;# 
  1838  000C                     	;# 
  1839  000D                     	;# 
  1840  000E                     	;# 
  1841  0010                     	;# 
  1842  0011                     	;# 
  1843  0012                     	;# 
  1844  0015                     	;# 
  1845  0016                     	;# 
  1846  0016                     	;# 
  1847  0017                     	;# 
  1848  0018                     	;# 
  1849  0019                     	;# 
  1850  001A                     	;# 
  1851  001B                     	;# 
  1852  001C                     	;# 
  1853  008C                     	;# 
  1854  008D                     	;# 
  1855  008E                     	;# 
  1856  0090                     	;# 
  1857  0091                     	;# 
  1858  0092                     	;# 
  1859  0095                     	;# 
  1860  0096                     	;# 
  1861  0097                     	;# 
  1862  0099                     	;# 
  1863  009A                     	;# 
  1864  009B                     	;# 
  1865  009B                     	;# 
  1866  009C                     	;# 
  1867  009D                     	;# 
  1868  009E                     	;# 
  1869  010C                     	;# 
  1870  010D                     	;# 
  1871  010E                     	;# 
  1872  0116                     	;# 
  1873  0117                     	;# 
  1874  011D                     	;# 
  1875  018C                     	;# 
  1876  018D                     	;# 
  1877  018E                     	;# 
  1878  0191                     	;# 
  1879  0191                     	;# 
  1880  0192                     	;# 
  1881  0193                     	;# 
  1882  0193                     	;# 
  1883  0194                     	;# 
  1884  0195                     	;# 
  1885  0196                     	;# 
  1886  0197                     	;# 
  1887  0199                     	;# 
  1888  019A                     	;# 
  1889  019B                     	;# 
  1890  019B                     	;# 
  1891  019B                     	;# 
  1892  019B                     	;# 
  1893  019C                     	;# 
  1894  019C                     	;# 
  1895  019D                     	;# 
  1896  019E                     	;# 
  1897  019F                     	;# 
  1898  020D                     	;# 
  1899  0210                     	;# 
  1900  0211                     	;# 
  1901  0211                     	;# 
  1902  0212                     	;# 
  1903  0212                     	;# 
  1904  0213                     	;# 
  1905  0213                     	;# 
  1906  0214                     	;# 
  1907  0214                     	;# 
  1908  0215                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0216                     	;# 
  1912  0216                     	;# 
  1913  0217                     	;# 
  1914  0217                     	;# 
  1915  0291                     	;# 
  1916  0291                     	;# 
  1917  0292                     	;# 
  1918  0293                     	;# 
  1919  0298                     	;# 
  1920  0298                     	;# 
  1921  0299                     	;# 
  1922  029A                     	;# 
  1923  0394                     	;# 
  1924  0395                     	;# 
  1925  0396                     	;# 
  1926  0FE4                     	;# 
  1927  0FE5                     	;# 
  1928  0FE6                     	;# 
  1929  0FE7                     	;# 
  1930  0FE8                     	;# 
  1931  0FE9                     	;# 
  1932  0FEA                     	;# 
  1933  0FEB                     	;# 
  1934  0FED                     	;# 
  1935  0FEE                     	;# 
  1936  0FEF                     	;# 
  1937                           
  1938                           	psect	idataBANK1
  1939  040D                     __pidataBANK1:	
  1940                           
  1941                           ;initializer for _VarProduct
  1942  040D  3463               	retlw	99
  1943  040E  3402               	retlw	2
  1944  040F  3400               	retlw	0
  1945  0410  3400               	retlw	0
  1946  0411  3400               	retlw	0
  1947  0412  3400               	retlw	0
  1948  0413  3400               	retlw	0
  1949  0414  3400               	retlw	0
  1950  0415  3400               	retlw	0
  1951  0416  3400               	retlw	0
  1952  0417  3400               	retlw	0
  1953  0418  3400               	retlw	0
  1954  0419  34FF               	retlw	255
  1955  041A  34FF               	retlw	255
  1956  041B  34FF               	retlw	255
  1957  041C  3400               	retlw	0
  1958  041D  3400               	retlw	0
  1959  041E  3400               	retlw	0
  1960  041F  3400               	retlw	0
  1961  0420  3400               	retlw	0
  1962  0421  3400               	retlw	0
  1963  0422  3400               	retlw	0
  1964  0423  3400               	retlw	0
  1965  0424  3400               	retlw	0
  1966  0425  3400               	retlw	0
  1967  0426  3400               	retlw	0
  1968  0427  3400               	retlw	0
  1969  0428  3400               	retlw	0
  1970  0429  3400               	retlw	0
  1971  042A  3400               	retlw	0
  1972  042B  3400               	retlw	0
  1973  042C  3400               	retlw	0
  1974                           
  1975                           ;initializer for _VarSegment
  1976  042D  34C0               	retlw	192
  1977  042E  34F9               	retlw	249
  1978  042F  34A4               	retlw	164
  1979  0430  34B0               	retlw	176
  1980  0431  3499               	retlw	153
  1981  0432  3492               	retlw	146
  1982  0433  3482               	retlw	130
  1983  0434  34D8               	retlw	216
  1984  0435  3480               	retlw	128
  1985  0436  3490               	retlw	144
  1986  0437  3488               	retlw	136
  1987  0438  3483               	retlw	131
  1988  0439  34A7               	retlw	167
  1989  043A  34A1               	retlw	161
  1990  043B  3486               	retlw	134
  1991  043C  348E               	retlw	142
  1992  043D  34BF               	retlw	191
  1993  043E  3400               	retlw	0
  1994  043F  3400               	retlw	0
  1995  0440  3400               	retlw	0
  1996  0441  3400               	retlw	0
  1997  0442  3400               	retlw	0
  1998  0443  3400               	retlw	0
  1999  0444  3400               	retlw	0
  2000  0445  3400               	retlw	0
  2001  0446  3400               	retlw	0
  2002                           
  2003                           	psect	stringtext
  2004  0700                     __pstringtext:	
  2005  0700                     _dpowers:	
  2006  0700  3401               	retlw	1
  2007  0701  3400               	retlw	0
  2008  0702  340A               	retlw	10
  2009  0703  3400               	retlw	0
  2010  0704  3464               	retlw	100
  2011  0705  3400               	retlw	0
  2012  0706  34E8               	retlw	232
  2013  0707  3403               	retlw	3
  2014  0708  3410               	retlw	16
  2015  0709  3427               	retlw	39
  2016  070A                     __end_of_dpowers:	
  2017  070A                     __stringdata:	
  2018  070A                     STR_1:	
  2019  070A  3425               	retlw	37	;'%'
  2020  070B  3464               	retlw	100	;'d'
  2021  070C  342C               	retlw	44	;','
  2022  070D  3400               	retlw	0
  2023  070E                     __end_of__stringdata:	
  2024                           
  2025                           ; #config settings
  2026  0000                     
  2027                           	psect	nvCOMMON
  2028  0079                     __pnvCOMMON:	
  2029  0079                     _Timer1:	
  2030  0079                     	ds	1
  2031  007A                     _Product:	
  2032  007A                     	ds	1
  2033                           
  2034                           	psect	nvBANK0
  2035  005A                     __pnvBANK0:	
  2036  005A                     _UART:	
  2037  005A                     	ds	1
  2038  005B                     _myMain:	
  2039  005B                     	ds	1
  2040  005C                     _I2C:	
  2041  005C                     	ds	1
  2042  000C                     _PORTA	set	12
  2043  000D                     _PORTB	set	13
  2044  000E                     _PORTC	set	14
  2045  0018                     _T1CON	set	24
  2046  0017                     _TMR1H	set	23
  2047  0016                     _TMR1L	set	22
  2048  005F                     _GIE	set	95
  2049  005E                     _PEIE	set	94
  2050  0061                     _RA1	set	97
  2051  0064                     _RA4	set	100
  2052  0065                     _RA5	set	101
  2053  0066                     _RA6	set	102
  2054  0067                     _RA7	set	103
  2055  0070                     _RC0	set	112
  2056  008D                     _RCIF	set	141
  2057  008B                     _SSPIF	set	139
  2058  0088                     _TMR1IF	set	136
  2059  008C                     _TXIF	set	140
  2060  0099                     _OSCCON	set	153
  2061  008C                     _TRISA	set	140
  2062  008D                     _TRISB	set	141
  2063  008E                     _TRISC	set	142
  2064  048D                     _RCIE	set	1165
  2065  048B                     _SSPIE	set	1163
  2066  0488                     _TMR1IE	set	1160
  2067  0476                     _TRISC6	set	1142
  2068  0477                     _TRISC7	set	1143
  2069  048C                     _TXIE	set	1164
  2070  010C                     _LATA	set	268
  2071  010D                     _LATB	set	269
  2072  010E                     _LATC	set	270
  2073  018C                     _ANSELA	set	396
  2074  018D                     _ANSELB	set	397
  2075  018E                     _ANSELC	set	398
  2076  0199                     _RCREG	set	409
  2077  019D                     _RCSTA	set	413
  2078  019B                     _SPBRG	set	411
  2079  019C                     _SPBRGH	set	412
  2080  019A                     _TXREG	set	410
  2081  019E                     _TXSTA	set	414
  2082  0CFB                     _BRG16	set	3323
  2083  0CEE                     _RX9	set	3310
  2084  0CF6                     _TX9	set	3318
  2085  0212                     _SSPADD	set	530
  2086  0211                     _SSPBUF	set	529
  2087  0215                     _SSPCON1	set	533
  2088  0216                     _SSPCON2	set	534
  2089  0214                     _SSPSTAT	set	532
  2090  10B4                     _ACKEN	set	4276
  2091  10B6                     _ACKSTAT	set	4278
  2092  10A0                     _BF	set	4256
  2093  10AC                     _CKP	set	4268
  2094  10B2                     _PEN	set	4274
  2095  10B3                     _RCEN	set	4275
  2096  10A2                     _R_nW	set	4258
  2097  10B0                     _SEN	set	4272
  2098  10AE                     _SSPOV	set	4270
  2099                           
  2100                           	psect	cinit
  2101  0018                     start_initialization:	
  2102  0018                     __initialization:	
  2103                           
  2104                           ; Clear objects allocated to COMMON
  2105  0018  01F6               	clrf	__pbssCOMMON& (0+127)
  2106  0019  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2107  001A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2108                           
  2109                           ; Clear objects allocated to BANK0
  2110  001B  3048               	movlw	low __pbssBANK0
  2111  001C  0084               	movwf	4
  2112  001D  3000               	movlw	high __pbssBANK0
  2113  001E  0085               	movwf	5
  2114  001F  3012               	movlw	18
  2115  0020  3187  2734  3180   	fcall	clear_ram0
  2116                           
  2117                           ; Clear objects allocated to BANK2
  2118  0023  3020               	movlw	low __pbssBANK2
  2119  0024  0084               	movwf	4
  2120  0025  3001               	movlw	high __pbssBANK2
  2121  0026  0085               	movwf	5
  2122  0027  3043               	movlw	67
  2123  0028  3187  2734  3180   	fcall	clear_ram0
  2124                           
  2125                           ; Clear objects allocated to BANK3
  2126  002B  30A0               	movlw	low __pbssBANK3
  2127  002C  0084               	movwf	4
  2128  002D  3001               	movlw	high __pbssBANK3
  2129  002E  0085               	movwf	5
  2130  002F  3044               	movlw	68
  2131  0030  3187  2734  3180   	fcall	clear_ram0
  2132                           
  2133                           ; Initialize objects allocated to BANK1
  2134  0033  300D               	movlw	low __pidataBANK1
  2135  0034  0084               	movwf	4
  2136  0035  3084               	movlw	(high __pidataBANK1)| (0+128)
  2137  0036  0085               	movwf	5
  2138  0037  30A0               	movlw	low __pdataBANK1
  2139  0038  0086               	movwf	6
  2140  0039  3000               	movlw	high __pdataBANK1
  2141  003A  0087               	movwf	7
  2142  003B  303A               	movlw	58
  2143  003C  3187  273A         	fcall	init_ram
  2144  003E                     end_of_initialization:	
  2145                           ;End of C runtime variable initialization code
  2146                           
  2147  003E                     __end_of__initialization:	
  2148  003E  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2149  003F  0020               	movlb	0
  2150  0040  3185  2DC8         	ljmp	_main	;jump to C main() function
  2151                           
  2152                           	psect	bssCOMMON
  2153  0076                     __pbssCOMMON:	
  2154  0076                     _VarTimer1:	
  2155  0076                     	ds	3
  2156                           
  2157                           	psect	bssBANK0
  2158  0048                     __pbssBANK0:	
  2159  0048                     __myMain:	
  2160  0048                     	ds	17
  2161  0059                     _Segment:	
  2162  0059                     	ds	1
  2163                           
  2164                           	psect	dataBANK1
  2165  00A0                     __pdataBANK1:	
  2166  00A0                     _VarProduct:	
  2167  00A0                     	ds	32
  2168  00C0                     _VarSegment:	
  2169  00C0                     	ds	26
  2170                           
  2171                           	psect	bssBANK2
  2172  0120                     __pbssBANK2:	
  2173  0120                     _VarI2C:	
  2174  0120                     	ds	67
  2175                           
  2176                           	psect	bssBANK3
  2177  01A0                     __pbssBANK3:	
  2178  01A0                     _VarUart:	
  2179  01A0                     	ds	68
  2180                           
  2181                           	psect	clrtext
  2182  0734                     clear_ram0:	
  2183                           ;	Called with FSR0 containing the base address, and
  2184                           ;	WREG with the size to clear
  2185                           
  2186  0734  0064               	clrwdt	;clear the watchdog before getting into this loop
  2187  0735                     clrloop0:	
  2188  0735  0180               	clrf	0	;clear RAM location pointed to by FSR
  2189  0736  3101               	addfsr 0,1
  2190  0737  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2191  0738  2F35               	goto	clrloop0	;have we reached the end yet?
  2192  0739  3400               	retlw	0	;all done for this memory range, return
  2193                           
  2194                           	psect	inittext
  2195  073A                     init_ram:	
  2196  073A  00FE               	movwf	126
  2197  073B                     initloop:	
  2198  073B  0012               	moviw fsr0++
  2199  073C  001E               	movwi fsr1++
  2200  073D  0BFE               	decfsz	126,f
  2201  073E  2F3B               	goto	initloop
  2202  073F  3400               	retlw	0
  2203                           
  2204                           	psect	cstackCOMMON
  2205  0070                     __pcstackCOMMON:	
  2206  0070                     ?_Fosc_Set:	
  2207  0070                     ?_IO_Set:	
  2208                           ; 0 bytes @ 0x0
  2209                           
  2210  0070                     ?_TMR1_Set:	
  2211                           ; 0 bytes @ 0x0
  2212                           
  2213  0070                     ?_I2C_Set:	
  2214                           ; 0 bytes @ 0x0
  2215                           
  2216  0070                     ?_UART_Set:	
  2217                           ; 0 bytes @ 0x0
  2218                           
  2219  0070                     ?_TMR1_ISR:	
  2220                           ; 0 bytes @ 0x0
  2221                           
  2222  0070                     ??_TMR1_ISR:	
  2223                           ; 0 bytes @ 0x0
  2224                           
  2225  0070                     ?_UART_ISR:	
  2226                           ; 0 bytes @ 0x0
  2227                           
  2228  0070                     ?_I2C_ISR:	
  2229                           ; 0 bytes @ 0x0
  2230                           
  2231  0070                     ??_I2C_ISR:	
  2232                           ; 0 bytes @ 0x0
  2233                           
  2234  0070                     ?_I2C_Master_Reception:	
  2235                           ; 0 bytes @ 0x0
  2236                           
  2237  0070                     ?_I2C_Master_Transmission:	
  2238                           ; 0 bytes @ 0x0
  2239                           
  2240  0070                     ?_UART_Receive:	
  2241                           ; 0 bytes @ 0x0
  2242                           
  2243  0070                     ?_UART_Transmit:	
  2244                           ; 0 bytes @ 0x0
  2245                           
  2246  0070                     ?_myMain_Initialization:	
  2247                           ; 0 bytes @ 0x0
  2248                           
  2249  0070                     ?_my_Main:	
  2250                           ; 0 bytes @ 0x0
  2251                           
  2252  0070                     ?_Mcu_Initialization:	
  2253                           ; 0 bytes @ 0x0
  2254                           
  2255  0070                     ?_ISR:	
  2256                           ; 0 bytes @ 0x0
  2257                           
  2258  0070                     ?_I2C_Main:	
  2259                           ; 0 bytes @ 0x0
  2260                           
  2261  0070                     ?_UART_Main:	
  2262                           ; 0 bytes @ 0x0
  2263                           
  2264  0070                     ?_putch:	
  2265                           ; 0 bytes @ 0x0
  2266                           
  2267  0070                     ??_getch:	
  2268                           ; 0 bytes @ 0x0
  2269                           
  2270  0070                     ?_SegmentDisplay_Initial:	
  2271                           ; 0 bytes @ 0x0
  2272                           
  2273  0070                     ?_SegmentDisplay_Main:	
  2274                           ; 0 bytes @ 0x0
  2275                           
  2276  0070                     ?i1_putch:	
  2277                           ; 0 bytes @ 0x0
  2278                           
  2279  0070                     ??i1_putch:	
  2280                           ; 0 bytes @ 0x0
  2281                           
  2282  0070                     ?_getche:	
  2283                           ; 0 bytes @ 0x0
  2284                           
  2285  0070                     ?_getch:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     i1putch@byte:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291                           
  2292                           ; 1 bytes @ 0x0
  2293  0070                     	ds	1
  2294  0071                     ??_getche:	
  2295  0071                     getche@c:	
  2296                           ; 0 bytes @ 0x1
  2297                           
  2298                           
  2299                           ; 1 bytes @ 0x1
  2300  0071                     	ds	1
  2301  0072                     ??_UART_ISR:	
  2302                           
  2303                           ; 0 bytes @ 0x2
  2304  0072                     	ds	2
  2305  0074                     UART_ISR@i:	
  2306                           
  2307                           ; 1 bytes @ 0x4
  2308  0074                     	ds	1
  2309  0075                     ??_ISR:	
  2310                           
  2311                           ; 0 bytes @ 0x5
  2312  0075                     	ds	1
  2313                           
  2314                           	psect	cstackBANK0
  2315  0020                     __pcstackBANK0:	
  2316  0020                     ??_Fosc_Set:	
  2317  0020                     ??_IO_Set:	
  2318                           ; 0 bytes @ 0x0
  2319                           
  2320  0020                     ??_TMR1_Set:	
  2321                           ; 0 bytes @ 0x0
  2322                           
  2323  0020                     ??_I2C_Set:	
  2324                           ; 0 bytes @ 0x0
  2325                           
  2326  0020                     ??_UART_Set:	
  2327                           ; 0 bytes @ 0x0
  2328                           
  2329  0020                     ??_I2C_Master_Reception:	
  2330                           ; 0 bytes @ 0x0
  2331                           
  2332  0020                     ??_I2C_Master_Transmission:	
  2333                           ; 0 bytes @ 0x0
  2334                           
  2335  0020                     ??_UART_Receive:	
  2336                           ; 0 bytes @ 0x0
  2337                           
  2338  0020                     ??_myMain_Initialization:	
  2339                           ; 0 bytes @ 0x0
  2340                           
  2341  0020                     ??_my_Main:	
  2342                           ; 0 bytes @ 0x0
  2343                           
  2344  0020                     ??_putch:	
  2345                           ; 0 bytes @ 0x0
  2346                           
  2347  0020                     ??_SegmentDisplay_Initial:	
  2348                           ; 0 bytes @ 0x0
  2349                           
  2350  0020                     ??_SegmentDisplay_Main:	
  2351                           ; 0 bytes @ 0x0
  2352                           
  2353  0020                     ?___awdiv:	
  2354                           ; 0 bytes @ 0x0
  2355                           
  2356  0020                     ?___awmod:	
  2357                           ; 2 bytes @ 0x0
  2358                           
  2359  0020                     ?___lwdiv:	
  2360                           ; 2 bytes @ 0x0
  2361                           
  2362  0020                     putch@byte:	
  2363                           ; 2 bytes @ 0x0
  2364                           
  2365  0020                     ___awdiv@divisor:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0020                     ___awmod@divisor:	
  2369                           ; 2 bytes @ 0x0
  2370                           
  2371  0020                     ___lwdiv@divisor:	
  2372                           ; 2 bytes @ 0x0
  2373                           
  2374                           
  2375                           ; 2 bytes @ 0x0
  2376  0020                     	ds	1
  2377  0021                     ??_Mcu_Initialization:	
  2378  0021                     I2C_Master_Transmission@i:	
  2379                           ; 0 bytes @ 0x1
  2380                           
  2381                           
  2382                           ; 1 bytes @ 0x1
  2383  0021                     	ds	1
  2384  0022                     I2C_Master_Reception@i:	
  2385  0022                     ___awdiv@dividend:	
  2386                           ; 1 bytes @ 0x2
  2387                           
  2388  0022                     ___awmod@dividend:	
  2389                           ; 2 bytes @ 0x2
  2390                           
  2391  0022                     ___lwdiv@dividend:	
  2392                           ; 2 bytes @ 0x2
  2393                           
  2394                           
  2395                           ; 2 bytes @ 0x2
  2396  0022                     	ds	1
  2397  0023                     ??_I2C_Main:	
  2398  0023                     UART_Receive@i:	
  2399                           ; 0 bytes @ 0x3
  2400                           
  2401                           
  2402                           ; 1 bytes @ 0x3
  2403  0023                     	ds	1
  2404  0024                     ??___awdiv:	
  2405  0024                     ??___awmod:	
  2406                           ; 0 bytes @ 0x4
  2407                           
  2408  0024                     ??___lwdiv:	
  2409                           ; 0 bytes @ 0x4
  2410                           
  2411                           
  2412                           ; 0 bytes @ 0x4
  2413  0024                     	ds	1
  2414  0025                     ___awdiv@counter:	
  2415  0025                     ___awmod@counter:	
  2416                           ; 1 bytes @ 0x5
  2417                           
  2418  0025                     ___lwdiv@counter:	
  2419                           ; 1 bytes @ 0x5
  2420                           
  2421                           
  2422                           ; 1 bytes @ 0x5
  2423  0025                     	ds	1
  2424  0026                     I2C_Main@i:	
  2425  0026                     ___awdiv@sign:	
  2426                           ; 1 bytes @ 0x6
  2427                           
  2428  0026                     ___awmod@sign:	
  2429                           ; 1 bytes @ 0x6
  2430                           
  2431  0026                     ___lwdiv@quotient:	
  2432                           ; 1 bytes @ 0x6
  2433                           
  2434                           
  2435                           ; 2 bytes @ 0x6
  2436  0026                     	ds	1
  2437  0027                     ___awdiv@quotient:	
  2438                           
  2439                           ; 2 bytes @ 0x7
  2440  0027                     	ds	1
  2441  0028                     ?___lwmod:	
  2442  0028                     ___lwmod@divisor:	
  2443                           ; 2 bytes @ 0x8
  2444                           
  2445                           
  2446                           ; 2 bytes @ 0x8
  2447  0028                     	ds	1
  2448  0029                     ?_setSegmentDisplayNumber:	
  2449  0029                     setSegmentDisplayNumber@number:	
  2450                           ; 0 bytes @ 0x9
  2451                           
  2452                           
  2453                           ; 2 bytes @ 0x9
  2454  0029                     	ds	1
  2455  002A                     ___lwmod@dividend:	
  2456                           
  2457                           ; 2 bytes @ 0xA
  2458  002A                     	ds	1
  2459  002B                     ??_setSegmentDisplayNumber:	
  2460                           
  2461                           ; 0 bytes @ 0xB
  2462  002B                     	ds	1
  2463  002C                     ??___lwmod:	
  2464                           
  2465                           ; 0 bytes @ 0xC
  2466  002C                     	ds	1
  2467  002D                     ___lwmod@counter:	
  2468                           
  2469                           ; 1 bytes @ 0xD
  2470  002D                     	ds	1
  2471  002E                     ?_printf:	
  2472  002E                     printf@f:	
  2473                           ; 2 bytes @ 0xE
  2474                           
  2475                           
  2476                           ; 2 bytes @ 0xE
  2477  002E                     	ds	1
  2478  002F                     setSegmentDisplayNumber@i:	
  2479                           
  2480                           ; 1 bytes @ 0xF
  2481  002F                     	ds	3
  2482  0032                     ??_printf:	
  2483                           
  2484                           ; 0 bytes @ 0x12
  2485  0032                     	ds	4
  2486  0036                     printf@ap:	
  2487                           
  2488                           ; 1 bytes @ 0x16
  2489  0036                     	ds	1
  2490  0037                     printf@flag:	
  2491                           
  2492                           ; 1 bytes @ 0x17
  2493  0037                     	ds	1
  2494  0038                     printf@prec:	
  2495                           
  2496                           ; 1 bytes @ 0x18
  2497  0038                     	ds	1
  2498  0039                     printf@_val:	
  2499                           
  2500                           ; 4 bytes @ 0x19
  2501  0039                     	ds	4
  2502  003D                     printf@c:	
  2503                           
  2504                           ; 1 bytes @ 0x1D
  2505  003D                     	ds	1
  2506  003E                     ??_UART_Transmit:	
  2507                           
  2508                           ; 0 bytes @ 0x1E
  2509  003E                     	ds	3
  2510  0041                     UART_Transmit@i:	
  2511                           
  2512                           ; 1 bytes @ 0x21
  2513  0041                     	ds	1
  2514  0042                     ??_UART_Main:	
  2515                           
  2516                           ; 0 bytes @ 0x22
  2517  0042                     	ds	2
  2518  0044                     ?_main:	
  2519  0044                     main@argc:	
  2520                           ; 2 bytes @ 0x24
  2521                           
  2522                           
  2523                           ; 2 bytes @ 0x24
  2524  0044                     	ds	2
  2525  0046                     main@argv:	
  2526                           
  2527                           ; 2 bytes @ 0x26
  2528  0046                     	ds	2
  2529  0048                     ??_main:	
  2530                           
  2531                           	psect	maintext
  2532  05C8                     __pmaintext:	
  2533                           ; 0 bytes @ 0x28
  2534 ;;
  2535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2536 ;;
  2537 ;; *************** function _main *****************
  2538 ;; Defined at:
  2539 ;;		line 7 in file "C:/Users/taianluo/Documents/GitHub/myCcode/PIC/src/Main_B1.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  argc            2   36[BANK0 ] int 
  2542 ;;  argv            2   38[BANK0 ] PTR PTR unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  2   36[BANK0 ] int 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 17F/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2554 ;;      Params:         0       4       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0
  2557 ;;      Totals:         0       4       0       0       0       0       0       0
  2558 ;;Total ram usage:        4 bytes
  2559 ;; Hardware stack levels required when called:    8
  2560 ;; This function calls:
  2561 ;;		_I2C_Main
  2562 ;;		_Mcu_Initialization
  2563 ;;		_SegmentDisplay_Initial
  2564 ;;		_SegmentDisplay_Main
  2565 ;;		_UART_Main
  2566 ;;		_myMain_Initialization
  2567 ;;		_my_Main
  2568 ;; This function is called by:
  2569 ;;		Startup code after reset
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _main
  2575  05C8                     _main:	
  2576                           
  2577                           ;Main_B1.c: 8: myMain_Initialization();
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2581  05C8  3186  266F  3185   	fcall	_myMain_Initialization
  2582                           
  2583                           ;Main_B1.c: 9: Mcu_Initialization();
  2584  05CB  3186  267E  3185   	fcall	_Mcu_Initialization
  2585                           
  2586                           ;Main_B1.c: 10: ;;
  2587                           ;Main_B1.c: 11: ;;
  2588                           ;Main_B1.c: 12: ;;
  2589                           ;Main_B1.c: 14: ;;
  2590                           ;Main_B1.c: 15: ;;
  2591                           ;Main_B1.c: 16: ;;
  2592                           ;Main_B1.c: 17: ;;
  2593                           ;Main_B1.c: 18: ;;
  2594                           ;Main_B1.c: 20: ;;
  2595                           ;Main_B1.c: 21: ;;
  2596                           ;Main_B1.c: 22: ;;
  2597                           ;Main_B1.c: 23: ;;
  2598                           ;Main_B1.c: 25: ;;
  2599                           ;Main_B1.c: 26: ;;
  2600                           ;Main_B1.c: 27: __nop();
  2601  05CE  0000               	nop
  2602                           
  2603                           ;Main_B1.c: 28: SegmentDisplay_Initial();
  2604  05CF  3186  263F  3185   	fcall	_SegmentDisplay_Initial
  2605  05D2                     l2878:	
  2606                           ;Main_B1.c: 31: while (1) {
  2607                           
  2608                           
  2609                           ;Main_B1.c: 60: }
  2610                           ;Main_B1.c: 94: if (myMain->T1_Timerout)
  2611  05D2  0020               	movlb	0	; select bank0
  2612  05D3  085B               	movf	_myMain,w
  2613  05D4  0086               	movwf	6
  2614  05D5  0187               	clrf	7
  2615  05D6  1D01               	btfss	1,2
  2616  05D7  2DD2               	goto	l2878
  2617                           
  2618                           ;Main_B1.c: 95: {
  2619                           ;Main_B1.c: 96: myMain->T1_Timerout = 0;
  2620  05D8  085B               	movf	_myMain,w
  2621  05D9  0086               	movwf	6
  2622  05DA  0187               	clrf	7
  2623  05DB  1101               	bcf	1,2
  2624                           
  2625                           ;Main_B1.c: 97: my_Main();
  2626  05DC  3185  2576  3185   	fcall	_my_Main
  2627                           
  2628                           ;Main_B1.c: 98: if (myMain->PowerON) {
  2629  05DF  0020               	movlb	0	; select bank0
  2630  05E0  085B               	movf	_myMain,w
  2631  05E1  0086               	movwf	6
  2632  05E2  0187               	clrf	7
  2633  05E3  1C01               	btfss	1,0
  2634  05E4  2DD2               	goto	l2878
  2635                           
  2636                           ;Main_B1.c: 99: ;;
  2637                           ;Main_B1.c: 100: I2C_Main();
  2638  05E5  3182  22A3  3185   	fcall	_I2C_Main
  2639                           
  2640                           ;Main_B1.c: 101: UART_Main();
  2641  05E8  3184  24B6  3185   	fcall	_UART_Main
  2642                           
  2643                           ;Main_B1.c: 102: SegmentDisplay_Main();
  2644  05EB  3182  2230  3185   	fcall	_SegmentDisplay_Main
  2645  05EE  2DD2               	goto	l2878
  2646  05EF                     __end_of_main:	
  2647                           
  2648                           	psect	text1
  2649  0576                     __ptext1:	
  2650 ;; *************** function _my_Main *****************
  2651 ;; Defined at:
  2652 ;;		line 123 in file "C:/Users/taianluo/Documents/GitHub/myCcode/PIC/src/Main_B1.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2666 ;;      Params:         0       0       0       0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    4
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _my_Main
  2682  0576                     _my_Main:	
  2683                           
  2684                           ;Main_B1.c: 125: if (myMain->PowerON == 0) {
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _my_Main: [wreg+fsr1l+fsr1h+status,2+status,0]
  2688  0576  0020               	movlb	0	; select bank0
  2689  0577  085B               	movf	_myMain,w
  2690  0578  0086               	movwf	6
  2691  0579  0187               	clrf	7
  2692  057A  1801               	btfsc	1,0
  2693  057B  0008               	return
  2694                           
  2695                           ;Main_B1.c: 126: myMain->PowerCount++;
  2696  057C  0A5B               	incf	_myMain,w
  2697  057D  0086               	movwf	6
  2698  057E  0187               	clrf	7
  2699  057F  3001               	movlw	1
  2700  0580  0781               	addwf	1,f
  2701  0581  3141               	addfsr 1,1
  2702  0582  1803               	skipnc
  2703  0583  0A81               	incf	1,f
  2704                           
  2705                           ;Main_B1.c: 127: if (myMain->PowerCount == 150)
  2706  0584  0A5B               	incf	_myMain,w
  2707  0585  0086               	movwf	6
  2708  0586  0187               	clrf	7
  2709  0587  3F40               	moviw [0]fsr1
  2710  0588  3A96               	xorlw	150
  2711  0589  1D03               	skipz
  2712  058A  2D8D               	goto	u3605
  2713  058B  3F41               	moviw [1]fsr1
  2714  058C  3A00               	xorlw	0
  2715  058D                     u3605:	
  2716  058D  1D03               	skipz
  2717  058E  0008               	return
  2718                           
  2719                           ;Main_B1.c: 128: {
  2720                           ;Main_B1.c: 129: myMain->PowerCount = 0;
  2721  058F  0A5B               	incf	_myMain,w
  2722  0590  0086               	movwf	6
  2723  0591  0187               	clrf	7
  2724  0592  3000               	movlw	0
  2725  0593  3FC0               	movwi [0]fsr1
  2726  0594  3FC1               	movwi [1]fsr1
  2727                           
  2728                           ;Main_B1.c: 130: myMain->PowerON = 1;
  2729  0595  085B               	movf	_myMain,w
  2730  0596  0086               	movwf	6
  2731  0597  0187               	clrf	7
  2732  0598  1401               	bsf	1,0
  2733                           
  2734                           ;Main_B1.c: 143: ;;
  2735                           ;Main_B1.c: 144: myMain->SelfTest = 1;
  2736  0599  085B               	movf	_myMain,w
  2737  059A  3E03               	addlw	3
  2738  059B  0086               	movwf	6
  2739  059C  0187               	clrf	7
  2740  059D  1401               	bsf	1,0
  2741                           
  2742                           ;Main_B1.c: 153: }
  2743                           ;Main_B1.c: 154: } else {
  2744                           
  2745                           ;Main_B1.c: 146: ;;
  2746  059E  0008               	return
  2747  059F                     __end_of_my_Main:	
  2748                           
  2749                           	psect	text2
  2750  066F                     __ptext2:	
  2751 ;; *************** function _myMain_Initialization *****************
  2752 ;; Defined at:
  2753 ;;		line 111 in file "C:/Users/taianluo/Documents/GitHub/myCcode/PIC/src/Main_B1.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;		None               void
  2760 ;; Registers used:
  2761 ;;		wreg, fsr1l, fsr1h, status,2
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2767 ;;      Params:         0       0       0       0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0       0
  2769 ;;      Temps:          0       1       0       0       0       0       0       0
  2770 ;;      Totals:         0       1       0       0       0       0       0       0
  2771 ;;Total ram usage:        1 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    4
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _myMain_Initialization
  2783  066F                     _myMain_Initialization:	
  2784                           
  2785                           ;Main_B1.c: 113: Product = &VarProduct;
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _myMain_Initialization: [wreg+fsr1l+fsr1h+status,2]
  2789  066F  30A0               	movlw	_VarProduct& (0+255)
  2790  0670  0020               	movlb	0	; select bank0
  2791  0671  00A0               	movwf	??_myMain_Initialization
  2792  0672  0820               	movf	??_myMain_Initialization,w
  2793  0673  00FA               	movwf	_Product
  2794                           
  2795                           ;Main_B1.c: 114: Product->Data[20] = 0;
  2796  0674  087A               	movf	_Product,w
  2797  0675  3E14               	addlw	20
  2798  0676  0086               	movwf	6
  2799  0677  0187               	clrf	7
  2800  0678  0181               	clrf	1
  2801                           
  2802                           ;Main_B1.c: 117: myMain = &_myMain;
  2803  0679  3048               	movlw	__myMain& (0+255)
  2804  067A  00A0               	movwf	??_myMain_Initialization
  2805  067B  0820               	movf	??_myMain_Initialization,w
  2806  067C  00DB               	movwf	_myMain
  2807  067D  0008               	return
  2808  067E                     __end_of_myMain_Initialization:	
  2809                           
  2810                           	psect	text3
  2811  04B6                     __ptext3:	
  2812 ;; *************** function _UART_Main *****************
  2813 ;; Defined at:
  2814 ;;		line 706 in file "../../src/MCU_B1.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;		None               void
  2821 ;; Registers used:
  2822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2828 ;;      Params:         0       0       0       0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0       0
  2830 ;;      Temps:          0       2       0       0       0       0       0       0
  2831 ;;      Totals:         0       2       0       0       0       0       0       0
  2832 ;;Total ram usage:        2 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    7
  2835 ;; This function calls:
  2836 ;;		_UART_Receive
  2837 ;;		_UART_Transmit
  2838 ;;		_setSegmentDisplayNumber
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _UART_Main
  2846  04B6                     _UART_Main:	
  2847                           
  2848                           ;MCU_B1.c: 707: if (UART->RxGO) {
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _UART_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2852  04B6  0020               	movlb	0	; select bank0
  2853  04B7  085A               	movf	_UART,w
  2854  04B8  3E43               	addlw	67
  2855  04B9  0086               	movwf	6
  2856  04BA  3001               	movlw	1	; select bank2/3
  2857  04BB  0087               	movwf	7
  2858  04BC  1C81               	btfss	1,1
  2859  04BD  2CD9               	goto	l2808
  2860                           
  2861                           ;MCU_B1.c: 708: UART->RxGO = 0;
  2862  04BE  085A               	movf	_UART,w
  2863  04BF  3E43               	addlw	67
  2864  04C0  0086               	movwf	6
  2865  04C1  3001               	movlw	1	; select bank2/3
  2866  04C2  0087               	movwf	7
  2867  04C3  1081               	bcf	1,1
  2868                           
  2869                           ;MCU_B1.c: 709: UART_Receive();
  2870  04C4  3184  24EA  3184   	fcall	_UART_Receive
  2871                           
  2872                           ;MCU_B1.c: 710: setSegmentDisplayNumber(UART->RxData[5]);
  2873  04C7  0020               	movlb	0	; select bank0
  2874  04C8  085A               	movf	_UART,w
  2875  04C9  3E25               	addlw	37
  2876  04CA  0086               	movwf	6
  2877  04CB  3001               	movlw	1	; select bank2/3
  2878  04CC  0087               	movwf	7
  2879  04CD  0801               	movf	1,w
  2880  04CE  00C2               	movwf	??_UART_Main
  2881  04CF  01C3               	clrf	??_UART_Main+1
  2882  04D0  0842               	movf	??_UART_Main,w
  2883  04D1  00A9               	movwf	setSegmentDisplayNumber@number
  2884  04D2  0843               	movf	??_UART_Main+1,w
  2885  04D3  00AA               	movwf	setSegmentDisplayNumber@number+1
  2886  04D4  3180  2042         	fcall	_setSegmentDisplayNumber
  2887                           
  2888                           ;MCU_B1.c: 711: RCIE = 1;
  2889  04D6  0021               	movlb	1	; select bank1
  2890  04D7  1691               	bsf	17,5	;volatile
  2891                           
  2892                           ;MCU_B1.c: 712: } else {
  2893  04D8  0008               	return
  2894  04D9                     l2808:	
  2895                           
  2896                           ;MCU_B1.c: 713: if (UART->TxGO) {
  2897  04D9  0020               	movlb	0	; select bank0
  2898  04DA  085A               	movf	_UART,w
  2899  04DB  3E43               	addlw	67
  2900  04DC  0086               	movwf	6
  2901  04DD  3001               	movlw	1	; select bank2/3
  2902  04DE  0087               	movwf	7
  2903  04DF  1C01               	btfss	1,0
  2904  04E0  0008               	return
  2905                           
  2906                           ;MCU_B1.c: 714: UART->TxGO = 0;
  2907  04E1  085A               	movf	_UART,w
  2908  04E2  3E43               	addlw	67
  2909  04E3  0086               	movwf	6
  2910  04E4  3001               	movlw	1	; select bank2/3
  2911  04E5  0087               	movwf	7
  2912  04E6  1001               	bcf	1,0
  2913                           
  2914                           ;MCU_B1.c: 715: UART_Transmit();
  2915  04E7  3185  25EF         	fcall	_UART_Transmit
  2916  04E9  0008               	return
  2917  04EA                     __end_of_UART_Main:	
  2918                           
  2919                           	psect	text4
  2920  0042                     __ptext4:	
  2921 ;; *************** function _setSegmentDisplayNumber *****************
  2922 ;; Defined at:
  2923 ;;		line 20 in file "../../src/SegmentDisplay_A2.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  number          2    9[BANK0 ] int 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  i               1   15[BANK0 ] unsigned char 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;		None               void
  2930 ;; Registers used:
  2931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2937 ;;      Params:         0       2       0       0       0       0       0       0
  2938 ;;      Locals:         0       1       0       0       0       0       0       0
  2939 ;;      Temps:          0       4       0       0       0       0       0       0
  2940 ;;      Totals:         0       7       0       0       0       0       0       0
  2941 ;;Total ram usage:        7 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    5
  2944 ;; This function calls:
  2945 ;;		___awdiv
  2946 ;;		___awmod
  2947 ;; This function is called by:
  2948 ;;		_UART_Main
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           
  2953                           ;psect for function _setSegmentDisplayNumber
  2954  0042                     _setSegmentDisplayNumber:	
  2955                           
  2956                           ;SegmentDisplay_A2.c: 21: char i;
  2957                           ;SegmentDisplay_A2.c: 22: if (Segment->Enable) {
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _setSegmentDisplayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  2961  0042  0020               	movlb	0	; select bank0
  2962  0043  0859               	movf	_Segment,w
  2963  0044  3E15               	addlw	21
  2964  0045  0086               	movwf	6
  2965  0046  0187               	clrf	7
  2966  0047  1C01               	btfss	1,0
  2967  0048  0008               	return
  2968                           
  2969                           ;SegmentDisplay_A2.c: 23: Segment->GO = 1;
  2970  0049  0859               	movf	_Segment,w
  2971  004A  3E15               	addlw	21
  2972  004B  0086               	movwf	6
  2973  004C  0187               	clrf	7
  2974  004D  1481               	bsf	1,1
  2975                           
  2976                           ;SegmentDisplay_A2.c: 24: if (Segment->Hex) {
  2977  004E  0859               	movf	_Segment,w
  2978  004F  3E15               	addlw	21
  2979  0050  0086               	movwf	6
  2980  0051  0187               	clrf	7
  2981  0052  1D01               	btfss	1,2
  2982  0053  288E               	goto	l2706
  2983                           
  2984                           ;SegmentDisplay_A2.c: 25: Segment->Num[0] = (number & 0x000f);
  2985  0054  0829               	movf	setSegmentDisplayNumber@number,w
  2986  0055  390F               	andlw	15
  2987  0056  00AB               	movwf	??_setSegmentDisplayNumber
  2988  0057  0859               	movf	_Segment,w
  2989  0058  3E11               	addlw	17
  2990  0059  0086               	movwf	6
  2991  005A  0187               	clrf	7
  2992  005B  082B               	movf	??_setSegmentDisplayNumber,w
  2993  005C  0081               	movwf	1
  2994                           
  2995                           ;SegmentDisplay_A2.c: 26: Segment->Num[1] = ((number >> 4)&0x000f);
  2996  005D  082A               	movf	setSegmentDisplayNumber@number+1,w
  2997  005E  00AC               	movwf	??_setSegmentDisplayNumber+1
  2998  005F  0829               	movf	setSegmentDisplayNumber@number,w
  2999  0060  00AB               	movwf	??_setSegmentDisplayNumber
  3000  0061  3004               	movlw	4
  3001  0062  00AD               	movwf	??_setSegmentDisplayNumber+2
  3002  0063                     u3325:	
  3003  0063  0D2C               	rlf	??_setSegmentDisplayNumber+1,w
  3004  0064  0CAC               	rrf	??_setSegmentDisplayNumber+1,f
  3005  0065  0CAB               	rrf	??_setSegmentDisplayNumber,f
  3006  0066  0BAD               	decfsz	??_setSegmentDisplayNumber+2,f
  3007  0067  2863               	goto	u3325
  3008  0068  082B               	movf	??_setSegmentDisplayNumber,w
  3009  0069  390F               	andlw	15
  3010  006A  00AE               	movwf	??_setSegmentDisplayNumber+3
  3011  006B  0859               	movf	_Segment,w
  3012  006C  3E12               	addlw	18
  3013  006D  0086               	movwf	6
  3014  006E  0187               	clrf	7
  3015  006F  082E               	movf	??_setSegmentDisplayNumber+3,w
  3016  0070  0081               	movwf	1
  3017                           
  3018                           ;SegmentDisplay_A2.c: 27: Segment->Num[2] = ((number >> 8)&0x000f);
  3019  0071  082A               	movf	setSegmentDisplayNumber@number+1,w
  3020  0072  390F               	andlw	15
  3021  0073  00AB               	movwf	??_setSegmentDisplayNumber
  3022  0074  0859               	movf	_Segment,w
  3023  0075  3E13               	addlw	19
  3024  0076  0086               	movwf	6
  3025  0077  0187               	clrf	7
  3026  0078  082B               	movf	??_setSegmentDisplayNumber,w
  3027  0079  0081               	movwf	1
  3028                           
  3029                           ;SegmentDisplay_A2.c: 28: Segment->Num[3] = ((number >> 12)&0x000f);
  3030  007A  082A               	movf	setSegmentDisplayNumber@number+1,w
  3031  007B  00AC               	movwf	??_setSegmentDisplayNumber+1
  3032  007C  0829               	movf	setSegmentDisplayNumber@number,w
  3033  007D  00AB               	movwf	??_setSegmentDisplayNumber
  3034  007E  300C               	movlw	12
  3035  007F  00AD               	movwf	??_setSegmentDisplayNumber+2
  3036  0080                     u3335:	
  3037  0080  0D2C               	rlf	??_setSegmentDisplayNumber+1,w
  3038  0081  0CAC               	rrf	??_setSegmentDisplayNumber+1,f
  3039  0082  0CAB               	rrf	??_setSegmentDisplayNumber,f
  3040  0083  0BAD               	decfsz	??_setSegmentDisplayNumber+2,f
  3041  0084  2880               	goto	u3335
  3042  0085  082B               	movf	??_setSegmentDisplayNumber,w
  3043  0086  390F               	andlw	15
  3044  0087  00AE               	movwf	??_setSegmentDisplayNumber+3
  3045  0088  0859               	movf	_Segment,w
  3046  0089  3E14               	addlw	20
  3047  008A  0086               	movwf	6
  3048  008B  0187               	clrf	7
  3049  008C  082E               	movf	??_setSegmentDisplayNumber+3,w
  3050  008D  293B               	goto	L1
  3051  008E                     l2706:	
  3052                           ;SegmentDisplay_A2.c: 29: } else if (Segment->Dec) {
  3053                           
  3054  008E  0859               	movf	_Segment,w
  3055  008F  3E15               	addlw	21
  3056  0090  0086               	movwf	6
  3057  0091  0187               	clrf	7
  3058  0092  1D81               	btfss	1,3
  3059  0093  293C               	goto	l2734
  3060                           
  3061                           ;SegmentDisplay_A2.c: 30: if (number > 0x270f)
  3062  0094  082A               	movf	setSegmentDisplayNumber@number+1,w
  3063  0095  3A80               	xorlw	128
  3064  0096  00AB               	movwf	??_setSegmentDisplayNumber
  3065  0097  30A7               	movlw	167
  3066  0098  022B               	subwf	??_setSegmentDisplayNumber,w
  3067  0099  1D03               	skipz
  3068  009A  289D               	goto	u3355
  3069  009B  3010               	movlw	16
  3070  009C  0229               	subwf	setSegmentDisplayNumber@number,w
  3071  009D                     u3355:	
  3072  009D  1C03               	skipc
  3073  009E  28B5               	goto	l2722
  3074                           
  3075                           ;SegmentDisplay_A2.c: 31: {
  3076                           ;SegmentDisplay_A2.c: 32: for (i = 0; i < 4; i++) {
  3077  009F  0020               	movlb	0	; select bank0
  3078  00A0  01AF               	clrf	setSegmentDisplayNumber@i
  3079  00A1                     L2:	
  3080  00A1  3004               	movlw	4
  3081  00A2  022F               	subwf	setSegmentDisplayNumber@i,w
  3082  00A3  1803               	btfsc	3,0
  3083  00A4  293C               	goto	l2734
  3084                           
  3085                           ;SegmentDisplay_A2.c: 33: Segment->Num[i] = 16;
  3086  00A5  3010               	movlw	16
  3087  00A6  00AB               	movwf	??_setSegmentDisplayNumber
  3088  00A7  082F               	movf	setSegmentDisplayNumber@i,w
  3089  00A8  3E11               	addlw	17
  3090  00A9  0759               	addwf	_Segment,w
  3091  00AA  00AC               	movwf	??_setSegmentDisplayNumber+1
  3092  00AB  082C               	movf	??_setSegmentDisplayNumber+1,w
  3093  00AC  0086               	movwf	6
  3094  00AD  0187               	clrf	7
  3095  00AE  082B               	movf	??_setSegmentDisplayNumber,w
  3096  00AF  0081               	movwf	1
  3097  00B0  3001               	movlw	1
  3098  00B1  00AB               	movwf	??_setSegmentDisplayNumber
  3099  00B2  082B               	movf	??_setSegmentDisplayNumber,w
  3100  00B3  07AF               	addwf	setSegmentDisplayNumber@i,f
  3101  00B4  28A1               	goto	L2
  3102  00B5                     l2722:	
  3103                           ;SegmentDisplay_A2.c: 34: }
  3104                           ;SegmentDisplay_A2.c: 35: } else {
  3105                           
  3106                           
  3107                           ;SegmentDisplay_A2.c: 36: Segment->Num[3] = (number / 1000);
  3108  00B5  30E8               	movlw	232
  3109  00B6  0020               	movlb	0	; select bank0
  3110  00B7  00A0               	movwf	___awdiv@divisor
  3111  00B8  3003               	movlw	3
  3112  00B9  00A1               	movwf	___awdiv@divisor+1
  3113  00BA  082A               	movf	setSegmentDisplayNumber@number+1,w
  3114  00BB  01A3               	clrf	___awdiv@dividend+1
  3115  00BC  07A3               	addwf	___awdiv@dividend+1,f
  3116  00BD  0829               	movf	setSegmentDisplayNumber@number,w
  3117  00BE  01A2               	clrf	___awdiv@dividend
  3118  00BF  07A2               	addwf	___awdiv@dividend,f
  3119  00C0  3183  2371  3180   	fcall	___awdiv
  3120  00C3  0020               	movlb	0	; select bank0
  3121  00C4  0820               	movf	?___awdiv,w
  3122  00C5  00AB               	movwf	??_setSegmentDisplayNumber
  3123  00C6  0859               	movf	_Segment,w
  3124  00C7  3E14               	addlw	20
  3125  00C8  0086               	movwf	6
  3126  00C9  0187               	clrf	7
  3127  00CA  082B               	movf	??_setSegmentDisplayNumber,w
  3128  00CB  0081               	movwf	1
  3129                           
  3130                           ;SegmentDisplay_A2.c: 37: number %= 1000;
  3131  00CC  30E8               	movlw	232
  3132  00CD  00A0               	movwf	___awmod@divisor
  3133  00CE  3003               	movlw	3
  3134  00CF  00A1               	movwf	___awmod@divisor+1
  3135  00D0  082A               	movf	setSegmentDisplayNumber@number+1,w
  3136  00D1  01A3               	clrf	___awmod@dividend+1
  3137  00D2  07A3               	addwf	___awmod@dividend+1,f
  3138  00D3  0829               	movf	setSegmentDisplayNumber@number,w
  3139  00D4  01A2               	clrf	___awmod@dividend
  3140  00D5  07A2               	addwf	___awmod@dividend,f
  3141  00D6  3183  23C5  3180   	fcall	___awmod
  3142  00D9  0020               	movlb	0	; select bank0
  3143  00DA  0821               	movf	?___awmod+1,w
  3144  00DB  01AA               	clrf	setSegmentDisplayNumber@number+1
  3145  00DC  07AA               	addwf	setSegmentDisplayNumber@number+1,f
  3146  00DD  0820               	movf	?___awmod,w
  3147  00DE  01A9               	clrf	setSegmentDisplayNumber@number
  3148  00DF  07A9               	addwf	setSegmentDisplayNumber@number,f
  3149                           
  3150                           ;SegmentDisplay_A2.c: 38: Segment->Num[2] = (number / 100);
  3151  00E0  3064               	movlw	100
  3152  00E1  00A0               	movwf	___awdiv@divisor
  3153  00E2  3000               	movlw	0
  3154  00E3  00A1               	movwf	___awdiv@divisor+1
  3155  00E4  082A               	movf	setSegmentDisplayNumber@number+1,w
  3156  00E5  01A3               	clrf	___awdiv@dividend+1
  3157  00E6  07A3               	addwf	___awdiv@dividend+1,f
  3158  00E7  0829               	movf	setSegmentDisplayNumber@number,w
  3159  00E8  01A2               	clrf	___awdiv@dividend
  3160  00E9  07A2               	addwf	___awdiv@dividend,f
  3161  00EA  3183  2371  3180   	fcall	___awdiv
  3162  00ED  0020               	movlb	0	; select bank0
  3163  00EE  0820               	movf	?___awdiv,w
  3164  00EF  00AB               	movwf	??_setSegmentDisplayNumber
  3165  00F0  0859               	movf	_Segment,w
  3166  00F1  3E13               	addlw	19
  3167  00F2  0086               	movwf	6
  3168  00F3  0187               	clrf	7
  3169  00F4  082B               	movf	??_setSegmentDisplayNumber,w
  3170  00F5  0081               	movwf	1
  3171                           
  3172                           ;SegmentDisplay_A2.c: 39: number %= 100;
  3173  00F6  3064               	movlw	100
  3174  00F7  00A0               	movwf	___awmod@divisor
  3175  00F8  3000               	movlw	0
  3176  00F9  00A1               	movwf	___awmod@divisor+1
  3177  00FA  082A               	movf	setSegmentDisplayNumber@number+1,w
  3178  00FB  01A3               	clrf	___awmod@dividend+1
  3179  00FC  07A3               	addwf	___awmod@dividend+1,f
  3180  00FD  0829               	movf	setSegmentDisplayNumber@number,w
  3181  00FE  01A2               	clrf	___awmod@dividend
  3182  00FF  07A2               	addwf	___awmod@dividend,f
  3183  0100  3183  23C5  3180   	fcall	___awmod
  3184  0103  0020               	movlb	0	; select bank0
  3185  0104  0821               	movf	?___awmod+1,w
  3186  0105  01AA               	clrf	setSegmentDisplayNumber@number+1
  3187  0106  07AA               	addwf	setSegmentDisplayNumber@number+1,f
  3188  0107  0820               	movf	?___awmod,w
  3189  0108  01A9               	clrf	setSegmentDisplayNumber@number
  3190  0109  07A9               	addwf	setSegmentDisplayNumber@number,f
  3191                           
  3192                           ;SegmentDisplay_A2.c: 40: Segment->Num[1] = (number / 10);
  3193  010A  300A               	movlw	10
  3194  010B  00A0               	movwf	___awdiv@divisor
  3195  010C  3000               	movlw	0
  3196  010D  00A1               	movwf	___awdiv@divisor+1
  3197  010E  082A               	movf	setSegmentDisplayNumber@number+1,w
  3198  010F  01A3               	clrf	___awdiv@dividend+1
  3199  0110  07A3               	addwf	___awdiv@dividend+1,f
  3200  0111  0829               	movf	setSegmentDisplayNumber@number,w
  3201  0112  01A2               	clrf	___awdiv@dividend
  3202  0113  07A2               	addwf	___awdiv@dividend,f
  3203  0114  3183  2371  3180   	fcall	___awdiv
  3204  0117  0020               	movlb	0	; select bank0
  3205  0118  0820               	movf	?___awdiv,w
  3206  0119  00AB               	movwf	??_setSegmentDisplayNumber
  3207  011A  0859               	movf	_Segment,w
  3208  011B  3E12               	addlw	18
  3209  011C  0086               	movwf	6
  3210  011D  0187               	clrf	7
  3211  011E  082B               	movf	??_setSegmentDisplayNumber,w
  3212  011F  0081               	movwf	1
  3213                           
  3214                           ;SegmentDisplay_A2.c: 41: number %= 10;
  3215  0120  300A               	movlw	10
  3216  0121  00A0               	movwf	___awmod@divisor
  3217  0122  3000               	movlw	0
  3218  0123  00A1               	movwf	___awmod@divisor+1
  3219  0124  082A               	movf	setSegmentDisplayNumber@number+1,w
  3220  0125  01A3               	clrf	___awmod@dividend+1
  3221  0126  07A3               	addwf	___awmod@dividend+1,f
  3222  0127  0829               	movf	setSegmentDisplayNumber@number,w
  3223  0128  01A2               	clrf	___awmod@dividend
  3224  0129  07A2               	addwf	___awmod@dividend,f
  3225  012A  3183  23C5  3180   	fcall	___awmod
  3226  012D  0020               	movlb	0	; select bank0
  3227  012E  0821               	movf	?___awmod+1,w
  3228  012F  01AA               	clrf	setSegmentDisplayNumber@number+1
  3229  0130  07AA               	addwf	setSegmentDisplayNumber@number+1,f
  3230  0131  0820               	movf	?___awmod,w
  3231  0132  01A9               	clrf	setSegmentDisplayNumber@number
  3232  0133  07A9               	addwf	setSegmentDisplayNumber@number,f
  3233                           
  3234                           ;SegmentDisplay_A2.c: 42: Segment->Num[0] = number;
  3235  0134  0829               	movf	setSegmentDisplayNumber@number,w
  3236  0135  00AB               	movwf	??_setSegmentDisplayNumber
  3237  0136  0859               	movf	_Segment,w
  3238  0137  3E11               	addlw	17
  3239  0138  0086               	movwf	6
  3240  0139  0187               	clrf	7
  3241  013A  082B               	movf	??_setSegmentDisplayNumber,w
  3242  013B                     L1:	
  3243  013B  0081               	movwf	1
  3244  013C                     l2734:	
  3245                           
  3246                           ;SegmentDisplay_A2.c: 43: }
  3247                           ;SegmentDisplay_A2.c: 44: }
  3248                           ;SegmentDisplay_A2.c: 45: if (Segment->Num[3] > 0)
  3249  013C  0859               	movf	_Segment,w
  3250  013D  3E14               	addlw	20
  3251  013E  0086               	movwf	6
  3252  013F  0187               	clrf	7
  3253  0140  0801               	movf	1,w
  3254  0141  3A00               	xorlw	0
  3255  0142  1903               	skipnz
  3256  0143  294D               	goto	l2738
  3257                           
  3258                           ;SegmentDisplay_A2.c: 46: {
  3259                           ;SegmentDisplay_A2.c: 47: Segment->DisplayCount = 3;
  3260  0144  3003               	movlw	3
  3261  0145  00AB               	movwf	??_setSegmentDisplayNumber
  3262  0146  0859               	movf	_Segment,w
  3263  0147  3E17               	addlw	23
  3264  0148  0086               	movwf	6
  3265  0149  0187               	clrf	7
  3266  014A  082B               	movf	??_setSegmentDisplayNumber,w
  3267  014B  0081               	movwf	1
  3268                           
  3269                           ;SegmentDisplay_A2.c: 48: } else if (Segment->Num[2] > 0) {
  3270  014C  0008               	return
  3271  014D                     l2738:	
  3272  014D  0859               	movf	_Segment,w
  3273  014E  3E13               	addlw	19
  3274  014F  0086               	movwf	6
  3275  0150  0187               	clrf	7
  3276  0151  0801               	movf	1,w
  3277  0152  3A00               	xorlw	0
  3278  0153  1903               	skipnz
  3279  0154  295E               	goto	l2742
  3280                           
  3281                           ;SegmentDisplay_A2.c: 49: Segment->DisplayCount = 2;
  3282  0155  3002               	movlw	2
  3283  0156  00AB               	movwf	??_setSegmentDisplayNumber
  3284  0157  0859               	movf	_Segment,w
  3285  0158  3E17               	addlw	23
  3286  0159  0086               	movwf	6
  3287  015A  0187               	clrf	7
  3288  015B  082B               	movf	??_setSegmentDisplayNumber,w
  3289  015C  0081               	movwf	1
  3290                           
  3291                           ;SegmentDisplay_A2.c: 50: } else if (Segment->Num[1] > 0) {
  3292  015D  0008               	return
  3293  015E                     l2742:	
  3294  015E  0859               	movf	_Segment,w
  3295  015F  3E12               	addlw	18
  3296  0160  0086               	movwf	6
  3297  0161  0187               	clrf	7
  3298  0162  0801               	movf	1,w
  3299  0163  3A00               	xorlw	0
  3300  0164  1903               	skipnz
  3301  0165  296D               	goto	l2746
  3302                           
  3303                           ;SegmentDisplay_A2.c: 51: Segment->DisplayCount = 1;
  3304  0166  0859               	movf	_Segment,w
  3305  0167  3E17               	addlw	23
  3306  0168  0086               	movwf	6
  3307  0169  0187               	clrf	7
  3308  016A  0181               	clrf	1
  3309  016B  0A81               	incf	1,f
  3310                           
  3311                           ;SegmentDisplay_A2.c: 52: } else {
  3312  016C  0008               	return
  3313  016D                     l2746:	
  3314                           
  3315                           ;SegmentDisplay_A2.c: 53: Segment->DisplayCount = 0;
  3316  016D  0859               	movf	_Segment,w
  3317  016E  3E17               	addlw	23
  3318  016F  0086               	movwf	6
  3319  0170  0187               	clrf	7
  3320  0171  0181               	clrf	1
  3321  0172  0008               	return
  3322  0173                     __end_of_setSegmentDisplayNumber:	
  3323                           
  3324                           	psect	text5
  3325  03C5                     __ptext5:	
  3326 ;; *************** function ___awmod *****************
  3327 ;; Defined at:
  3328 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  divisor         2    0[BANK0 ] int 
  3331 ;;  dividend        2    2[BANK0 ] int 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  sign            1    6[BANK0 ] unsigned char 
  3334 ;;  counter         1    5[BANK0 ] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  2    0[BANK0 ] int 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3344 ;;      Params:         0       4       0       0       0       0       0       0
  3345 ;;      Locals:         0       2       0       0       0       0       0       0
  3346 ;;      Temps:          0       1       0       0       0       0       0       0
  3347 ;;      Totals:         0       7       0       0       0       0       0       0
  3348 ;;Total ram usage:        7 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    4
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_setSegmentDisplayNumber
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function ___awmod
  3360  03C5                     ___awmod:	
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3364  03C5  0020               	movlb	0	; select bank0
  3365  03C6  01A6               	clrf	___awmod@sign
  3366  03C7  1FA3               	btfss	___awmod@dividend+1,7
  3367  03C8  2BD0               	goto	l2556
  3368  03C9  09A2               	comf	___awmod@dividend,f
  3369  03CA  09A3               	comf	___awmod@dividend+1,f
  3370  03CB  0AA2               	incf	___awmod@dividend,f
  3371  03CC  1903               	skipnz
  3372  03CD  0AA3               	incf	___awmod@dividend+1,f
  3373  03CE  01A6               	clrf	___awmod@sign
  3374  03CF  0AA6               	incf	___awmod@sign,f
  3375  03D0                     l2556:	
  3376  03D0  1FA1               	btfss	___awmod@divisor+1,7
  3377  03D1  2BD7               	goto	l2560
  3378  03D2  09A0               	comf	___awmod@divisor,f
  3379  03D3  09A1               	comf	___awmod@divisor+1,f
  3380  03D4  0AA0               	incf	___awmod@divisor,f
  3381  03D5  1903               	skipnz
  3382  03D6  0AA1               	incf	___awmod@divisor+1,f
  3383  03D7                     l2560:	
  3384  03D7  0821               	movf	___awmod@divisor+1,w
  3385  03D8  0420               	iorwf	___awmod@divisor,w
  3386  03D9  1903               	skipnz
  3387  03DA  2BFE               	goto	l2578
  3388  03DB  01A5               	clrf	___awmod@counter
  3389  03DC  0AA5               	incf	___awmod@counter,f
  3390  03DD                     l2568:	
  3391  03DD  1BA1               	btfsc	___awmod@divisor+1,7
  3392  03DE  2BE9               	goto	l2570
  3393  03DF  3001               	movlw	1
  3394  03E0                     u2905:	
  3395  03E0  35A0               	lslf	___awmod@divisor,f
  3396  03E1  0DA1               	rlf	___awmod@divisor+1,f
  3397  03E2  0B89               	decfsz	9,f
  3398  03E3  2BE0               	goto	u2905
  3399  03E4  3001               	movlw	1
  3400  03E5  00A4               	movwf	??___awmod
  3401  03E6  0824               	movf	??___awmod,w
  3402  03E7  07A5               	addwf	___awmod@counter,f
  3403  03E8  2BDD               	goto	l2568
  3404  03E9                     l2570:	
  3405  03E9  0821               	movf	___awmod@divisor+1,w
  3406  03EA  0223               	subwf	___awmod@dividend+1,w
  3407  03EB  1D03               	skipz
  3408  03EC  2BEF               	goto	u2925
  3409  03ED  0820               	movf	___awmod@divisor,w
  3410  03EE  0222               	subwf	___awmod@dividend,w
  3411  03EF                     u2925:	
  3412  03EF  1C03               	skipc
  3413  03F0  2BF5               	goto	l2574
  3414  03F1  0820               	movf	___awmod@divisor,w
  3415  03F2  02A2               	subwf	___awmod@dividend,f
  3416  03F3  0821               	movf	___awmod@divisor+1,w
  3417  03F4  3BA3               	subwfb	___awmod@dividend+1,f
  3418  03F5                     l2574:	
  3419  03F5  3001               	movlw	1
  3420  03F6                     u2935:	
  3421  03F6  36A1               	lsrf	___awmod@divisor+1,f
  3422  03F7  0CA0               	rrf	___awmod@divisor,f
  3423  03F8  0B89               	decfsz	9,f
  3424  03F9  2BF6               	goto	u2935
  3425  03FA  3001               	movlw	1
  3426  03FB  02A5               	subwf	___awmod@counter,f
  3427  03FC  1D03               	btfss	3,2
  3428  03FD  2BE9               	goto	l2570
  3429  03FE                     l2578:	
  3430  03FE  0826               	movf	___awmod@sign,w
  3431  03FF  1903               	btfsc	3,2
  3432  0400  2C06               	goto	l2582
  3433  0401  09A2               	comf	___awmod@dividend,f
  3434  0402  09A3               	comf	___awmod@dividend+1,f
  3435  0403  0AA2               	incf	___awmod@dividend,f
  3436  0404  1903               	skipnz
  3437  0405  0AA3               	incf	___awmod@dividend+1,f
  3438  0406                     l2582:	
  3439  0406  0823               	movf	___awmod@dividend+1,w
  3440  0407  01A1               	clrf	?___awmod+1
  3441  0408  07A1               	addwf	?___awmod+1,f
  3442  0409  0822               	movf	___awmod@dividend,w
  3443  040A  01A0               	clrf	?___awmod
  3444  040B  07A0               	addwf	?___awmod,f
  3445  040C  0008               	return
  3446  040D                     __end_of___awmod:	
  3447                           
  3448                           	psect	text6
  3449  0371                     __ptext6:	
  3450 ;; *************** function ___awdiv *****************
  3451 ;; Defined at:
  3452 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  divisor         2    0[BANK0 ] int 
  3455 ;;  dividend        2    2[BANK0 ] int 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  quotient        2    7[BANK0 ] int 
  3458 ;;  sign            1    6[BANK0 ] unsigned char 
  3459 ;;  counter         1    5[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2    0[BANK0 ] int 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3469 ;;      Params:         0       4       0       0       0       0       0       0
  3470 ;;      Locals:         0       4       0       0       0       0       0       0
  3471 ;;      Temps:          0       1       0       0       0       0       0       0
  3472 ;;      Totals:         0       9       0       0       0       0       0       0
  3473 ;;Total ram usage:        9 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    4
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_setSegmentDisplayNumber
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function ___awdiv
  3485  0371                     ___awdiv:	
  3486                           
  3487                           ;incstack = 0
  3488                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3489  0371  0020               	movlb	0	; select bank0
  3490  0372  01A6               	clrf	___awdiv@sign
  3491  0373  1FA1               	btfss	___awdiv@divisor+1,7
  3492  0374  2B7C               	goto	l2512
  3493  0375  09A0               	comf	___awdiv@divisor,f
  3494  0376  09A1               	comf	___awdiv@divisor+1,f
  3495  0377  0AA0               	incf	___awdiv@divisor,f
  3496  0378  1903               	skipnz
  3497  0379  0AA1               	incf	___awdiv@divisor+1,f
  3498  037A  01A6               	clrf	___awdiv@sign
  3499  037B  0AA6               	incf	___awdiv@sign,f
  3500  037C                     l2512:	
  3501  037C  1FA3               	btfss	___awdiv@dividend+1,7
  3502  037D  2B87               	goto	l2518
  3503  037E  09A2               	comf	___awdiv@dividend,f
  3504  037F  09A3               	comf	___awdiv@dividend+1,f
  3505  0380  0AA2               	incf	___awdiv@dividend,f
  3506  0381  1903               	skipnz
  3507  0382  0AA3               	incf	___awdiv@dividend+1,f
  3508  0383  3001               	movlw	1
  3509  0384  00A4               	movwf	??___awdiv
  3510  0385  0824               	movf	??___awdiv,w
  3511  0386  06A6               	xorwf	___awdiv@sign,f
  3512  0387                     l2518:	
  3513  0387  01A7               	clrf	___awdiv@quotient
  3514  0388  01A8               	clrf	___awdiv@quotient+1
  3515  0389  0821               	movf	___awdiv@divisor+1,w
  3516  038A  0420               	iorwf	___awdiv@divisor,w
  3517  038B  1903               	skipnz
  3518  038C  2BB6               	goto	l2540
  3519  038D  01A5               	clrf	___awdiv@counter
  3520  038E  0AA5               	incf	___awdiv@counter,f
  3521  038F                     l2528:	
  3522  038F  1BA1               	btfsc	___awdiv@divisor+1,7
  3523  0390  2B9B               	goto	l2530
  3524  0391  3001               	movlw	1
  3525  0392                     u2805:	
  3526  0392  35A0               	lslf	___awdiv@divisor,f
  3527  0393  0DA1               	rlf	___awdiv@divisor+1,f
  3528  0394  0B89               	decfsz	9,f
  3529  0395  2B92               	goto	u2805
  3530  0396  3001               	movlw	1
  3531  0397  00A4               	movwf	??___awdiv
  3532  0398  0824               	movf	??___awdiv,w
  3533  0399  07A5               	addwf	___awdiv@counter,f
  3534  039A  2B8F               	goto	l2528
  3535  039B                     l2530:	
  3536  039B  3001               	movlw	1
  3537  039C                     u2825:	
  3538  039C  35A7               	lslf	___awdiv@quotient,f
  3539  039D  0DA8               	rlf	___awdiv@quotient+1,f
  3540  039E  0B89               	decfsz	9,f
  3541  039F  2B9C               	goto	u2825
  3542  03A0  0821               	movf	___awdiv@divisor+1,w
  3543  03A1  0223               	subwf	___awdiv@dividend+1,w
  3544  03A2  1D03               	skipz
  3545  03A3  2BA6               	goto	u2835
  3546  03A4  0820               	movf	___awdiv@divisor,w
  3547  03A5  0222               	subwf	___awdiv@dividend,w
  3548  03A6                     u2835:	
  3549  03A6  1C03               	skipc
  3550  03A7  2BAD               	goto	l2536
  3551  03A8  0820               	movf	___awdiv@divisor,w
  3552  03A9  02A2               	subwf	___awdiv@dividend,f
  3553  03AA  0821               	movf	___awdiv@divisor+1,w
  3554  03AB  3BA3               	subwfb	___awdiv@dividend+1,f
  3555  03AC  1427               	bsf	___awdiv@quotient,0
  3556  03AD                     l2536:	
  3557  03AD  3001               	movlw	1
  3558  03AE                     u2845:	
  3559  03AE  36A1               	lsrf	___awdiv@divisor+1,f
  3560  03AF  0CA0               	rrf	___awdiv@divisor,f
  3561  03B0  0B89               	decfsz	9,f
  3562  03B1  2BAE               	goto	u2845
  3563  03B2  3001               	movlw	1
  3564  03B3  02A5               	subwf	___awdiv@counter,f
  3565  03B4  1D03               	btfss	3,2
  3566  03B5  2B9B               	goto	l2530
  3567  03B6                     l2540:	
  3568  03B6  0826               	movf	___awdiv@sign,w
  3569  03B7  1903               	btfsc	3,2
  3570  03B8  2BBE               	goto	l2544
  3571  03B9  09A7               	comf	___awdiv@quotient,f
  3572  03BA  09A8               	comf	___awdiv@quotient+1,f
  3573  03BB  0AA7               	incf	___awdiv@quotient,f
  3574  03BC  1903               	skipnz
  3575  03BD  0AA8               	incf	___awdiv@quotient+1,f
  3576  03BE                     l2544:	
  3577  03BE  0828               	movf	___awdiv@quotient+1,w
  3578  03BF  01A1               	clrf	?___awdiv+1
  3579  03C0  07A1               	addwf	?___awdiv+1,f
  3580  03C1  0827               	movf	___awdiv@quotient,w
  3581  03C2  01A0               	clrf	?___awdiv
  3582  03C3  07A0               	addwf	?___awdiv,f
  3583  03C4  0008               	return
  3584  03C5                     __end_of___awdiv:	
  3585                           
  3586                           	psect	text7
  3587  05EF                     __ptext7:	
  3588 ;; *************** function _UART_Transmit *****************
  3589 ;; Defined at:
  3590 ;;		line 720 in file "../../src/MCU_B1.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  j               2    0        int 
  3595 ;;  i               1   33[BANK0 ] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3605 ;;      Params:         0       0       0       0       0       0       0       0
  3606 ;;      Locals:         0       1       0       0       0       0       0       0
  3607 ;;      Temps:          0       3       0       0       0       0       0       0
  3608 ;;      Totals:         0       4       0       0       0       0       0       0
  3609 ;;Total ram usage:        4 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    6
  3612 ;; This function calls:
  3613 ;;		_printf
  3614 ;; This function is called by:
  3615 ;;		_UART_Main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _UART_Transmit
  3621  05EF                     _UART_Transmit:	
  3622                           
  3623                           ;MCU_B1.c: 721: char i;
  3624                           ;MCU_B1.c: 722: int j;
  3625                           ;MCU_B1.c: 724: for (i = 0; i < 32; i++) {
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _UART_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3629  05EF  0020               	movlb	0	; select bank0
  3630  05F0  01C1               	clrf	UART_Transmit@i
  3631  05F1                     L3:	
  3632  05F1  3020               	movlw	32
  3633  05F2  0241               	subwf	UART_Transmit@i,w
  3634  05F3  1803               	btfsc	3,0
  3635  05F4  0008               	return
  3636                           
  3637                           ;MCU_B1.c: 726: printf("%d,", UART->TxData[i]);
  3638  05F5  300A               	movlw	low (STR_1| (0+32768))
  3639  05F6  00AE               	movwf	printf@f
  3640  05F7  3087               	movlw	high (STR_1| (0+32768))
  3641  05F8  00AF               	movwf	printf@f+1
  3642  05F9  0841               	movf	UART_Transmit@i,w
  3643  05FA  075A               	addwf	_UART,w
  3644  05FB  00BE               	movwf	??_UART_Transmit
  3645  05FC  083E               	movf	??_UART_Transmit,w
  3646  05FD  0086               	movwf	6
  3647  05FE  3001               	movlw	1	; select bank2/3
  3648  05FF  0087               	movwf	7
  3649  0600  0801               	movf	1,w
  3650  0601  00BF               	movwf	??_UART_Transmit+1
  3651  0602  01C0               	clrf	??_UART_Transmit+2
  3652  0603  083F               	movf	??_UART_Transmit+1,w
  3653  0604  00B0               	movwf	?_printf+2
  3654  0605  0840               	movf	??_UART_Transmit+2,w
  3655  0606  00B1               	movwf	?_printf+3
  3656  0607  3181  2173  3185   	fcall	_printf
  3657  060A  3001               	movlw	1
  3658  060B  0020               	movlb	0	; select bank0
  3659  060C  00BE               	movwf	??_UART_Transmit
  3660  060D  083E               	movf	??_UART_Transmit,w
  3661  060E  07C1               	addwf	UART_Transmit@i,f
  3662  060F  2DF1               	goto	L3
  3663  0610                     __end_of_UART_Transmit:	
  3664                           
  3665                           	psect	text8
  3666  0173                     __ptext8:	
  3667 ;; *************** function _printf *****************
  3668 ;; Defined at:
  3669 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  3672 ;;		 -> STR_1(4), 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  _val            4   25[BANK0 ] struct .
  3675 ;;  c               1   29[BANK0 ] char 
  3676 ;;  prec            1   24[BANK0 ] char 
  3677 ;;  flag            1   23[BANK0 ] unsigned char 
  3678 ;;  ap              1   22[BANK0 ] PTR void [1]
  3679 ;;		 -> ?_printf(2), 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  2   14[BANK0 ] int 
  3682 ;; Registers used:
  3683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3689 ;;      Params:         0       4       0       0       0       0       0       0
  3690 ;;      Locals:         0       8       0       0       0       0       0       0
  3691 ;;      Temps:          0       4       0       0       0       0       0       0
  3692 ;;      Totals:         0      16       0       0       0       0       0       0
  3693 ;;Total ram usage:       16 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    5
  3696 ;; This function calls:
  3697 ;;		___lwdiv
  3698 ;;		___lwmod
  3699 ;;		_putch
  3700 ;; This function is called by:
  3701 ;;		_UART_Transmit
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _printf
  3707  0173                     _printf:	
  3708                           
  3709                           ;doprnt.c: 466: va_list ap;
  3710                           ;doprnt.c: 499: signed char c;
  3711                           ;doprnt.c: 506: signed char prec;
  3712                           ;doprnt.c: 508: unsigned char flag;
  3713                           ;doprnt.c: 527: union {
  3714                           ;doprnt.c: 528: unsigned int _val;
  3715                           ;doprnt.c: 529: struct {
  3716                           ;doprnt.c: 530: const char * _cp;
  3717                           ;doprnt.c: 531: unsigned _len;
  3718                           ;doprnt.c: 532: } _str;
  3719                           ;doprnt.c: 533: } _val;
  3720                           ;doprnt.c: 542: *ap = __va_start();
  3721                           
  3722                           ;incstack = 0
  3723                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3724  0173  3030               	movlw	(?_printf+2)& (0+255)
  3725  0174  0020               	movlb	0	; select bank0
  3726  0175  00B2               	movwf	??_printf
  3727  0176  0832               	movf	??_printf,w
  3728  0177  00B6               	movwf	printf@ap
  3729  0178                     l2502:	
  3730                           ;doprnt.c: 545: while(c = *f++) {
  3731                           
  3732  0178  0020               	movlb	0	; select bank0
  3733  0179  082F               	movf	printf@f+1,w
  3734  017A  00B3               	movwf	??_printf+1
  3735  017B  082E               	movf	printf@f,w
  3736  017C  00B2               	movwf	??_printf
  3737  017D  0AAE               	incf	printf@f,f
  3738  017E  1903               	skipnz
  3739  017F  0AAF               	incf	printf@f+1,f
  3740  0180  0832               	movf	??_printf,w
  3741  0181  0084               	movwf	4
  3742  0182  0833               	movf	??_printf+1,w
  3743  0183  0085               	movwf	5
  3744  0184  0800               	movf	0,w	;code access
  3745  0185  00B4               	movwf	??_printf+2
  3746  0186  0834               	movf	??_printf+2,w
  3747  0187  00BD               	movwf	printf@c
  3748  0188  08BD               	movf	printf@c,f
  3749  0189  1903               	btfsc	3,2
  3750  018A  0008               	return
  3751                           
  3752                           ;doprnt.c: 547: if(c != '%')
  3753  018B  083D               	movf	printf@c,w
  3754  018C  3A25               	xorlw	37
  3755  018D  1903               	skipnz
  3756  018E  2994               	goto	l2462
  3757                           
  3758                           ;doprnt.c: 549: {
  3759                           ;doprnt.c: 550: (putch(c) );
  3760  018F  083D               	movf	printf@c,w
  3761  0190  3187  271C  3181   	fcall	_putch
  3762                           
  3763                           ;doprnt.c: 551: continue;
  3764  0193  2978               	goto	l2502
  3765  0194                     l2462:	
  3766                           
  3767                           ;doprnt.c: 552: }
  3768                           ;doprnt.c: 557: flag = 0;
  3769  0194  0020               	movlb	0	; select bank0
  3770  0195  01B7               	clrf	printf@flag
  3771                           
  3772                           ;doprnt.c: 831: }
  3773                           
  3774                           ;doprnt.c: 822: continue;
  3775                           
  3776                           ;doprnt.c: 811: default:
  3777                           
  3778                           ;doprnt.c: 707: case 'i':
  3779                           ;doprnt.c: 708: break;
  3780                           
  3781                           ;doprnt.c: 706: case 'd':
  3782                           
  3783                           ;doprnt.c: 647: goto alldone;
  3784                           
  3785                           ;doprnt.c: 646: case 0:
  3786                           
  3787                           ;doprnt.c: 644: switch(c = *f++) {
  3788  0196  082F               	movf	printf@f+1,w
  3789  0197  00B3               	movwf	??_printf+1
  3790  0198  082E               	movf	printf@f,w
  3791  0199  00B2               	movwf	??_printf
  3792  019A  0AAE               	incf	printf@f,f
  3793  019B  1903               	skipnz
  3794  019C  0AAF               	incf	printf@f+1,f
  3795  019D  0832               	movf	??_printf,w
  3796  019E  0084               	movwf	4
  3797  019F  0833               	movf	??_printf+1,w
  3798  01A0  0085               	movwf	5
  3799  01A1  0800               	movf	0,w	;code access
  3800  01A2  00BD               	movwf	printf@c
  3801                           
  3802                           ; Switch size 1, requested type "space"
  3803                           ; Number of cases is 3, Range of values is 0 to 105
  3804                           ; switch strategies available:
  3805                           ; Name         Instructions Cycles
  3806                           ; simple_byte           10     6 (average)
  3807                           ; direct_byte          218     6 (fixed)
  3808                           ; jumptable            260     6 (fixed)
  3809                           ;	Chosen strategy is simple_byte
  3810  01A3  3A00               	xorlw	0	; case 0
  3811  01A4  1903               	skipnz
  3812  01A5  2A2F               	goto	l851
  3813  01A6  3A64               	xorlw	100	; case 100
  3814  01A7  1903               	skipnz
  3815  01A8  29AD               	goto	l2468
  3816  01A9  3A0D               	xorlw	13	; case 105
  3817  01AA  1903               	skipnz
  3818  01AB  29AD               	goto	l2468
  3819  01AC  2978               	goto	l2502
  3820  01AD                     l2468:	
  3821                           
  3822                           ;doprnt.c: 1262: {
  3823                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3824  01AD  0836               	movf	printf@ap,w
  3825  01AE  0086               	movwf	6
  3826  01AF  0187               	clrf	7
  3827  01B0  3F40               	moviw [0]fsr1
  3828  01B1  00B9               	movwf	printf@_val
  3829  01B2  3F41               	moviw [1]fsr1
  3830  01B3  00BA               	movwf	printf@_val+1
  3831  01B4  3002               	movlw	2
  3832  01B5  00B2               	movwf	??_printf
  3833  01B6  0832               	movf	??_printf,w
  3834  01B7  07B6               	addwf	printf@ap,f
  3835                           
  3836                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3837  01B8  1FBA               	btfss	printf@_val+1,7
  3838  01B9  29C3               	goto	l2478
  3839                           
  3840                           ;doprnt.c: 1271: flag |= 0x03;
  3841  01BA  3003               	movlw	3
  3842  01BB  00B2               	movwf	??_printf
  3843  01BC  0832               	movf	??_printf,w
  3844  01BD  04B7               	iorwf	printf@flag,f
  3845                           
  3846                           ;doprnt.c: 1272: _val._val = -_val._val;
  3847  01BE  09B9               	comf	printf@_val,f
  3848  01BF  09BA               	comf	printf@_val+1,f
  3849  01C0  0AB9               	incf	printf@_val,f
  3850  01C1  1903               	skipnz
  3851  01C2  0ABA               	incf	printf@_val+1,f
  3852  01C3                     l2478:	
  3853                           
  3854                           ;doprnt.c: 1273: }
  3855                           ;doprnt.c: 1275: }
  3856                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3857  01C3  01BD               	clrf	printf@c
  3858  01C4  0ABD               	incf	printf@c,f
  3859  01C5  083D               	movf	printf@c,w
  3860  01C6  3A05               	xorlw	5
  3861  01C7  1903               	btfsc	3,2
  3862  01C8  29E8               	goto	l2490
  3863  01C9                     l2482:	
  3864                           
  3865                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3866  01C9  083D               	movf	printf@c,w
  3867  01CA  00B2               	movwf	??_printf
  3868  01CB  01B3               	clrf	??_printf+1
  3869  01CC  35B2               	lslf	??_printf,f
  3870  01CD  0DB3               	rlf	??_printf+1,f
  3871  01CE  3000               	movlw	low (_dpowers| (0+32768))
  3872  01CF  0732               	addwf	??_printf,w
  3873  01D0  0084               	movwf	4
  3874  01D1  3087               	movlw	high (_dpowers| (0+32768))
  3875  01D2  3D33               	addwfc	??_printf+1,w
  3876  01D3  0085               	movwf	5
  3877  01D4  3F00               	moviw [0]fsr0
  3878  01D5  00B4               	movwf	??_printf+2
  3879  01D6  3F01               	moviw [1]fsr0
  3880  01D7  00B5               	movwf	??_printf+3
  3881  01D8  0835               	movf	??_printf+3,w
  3882  01D9  023A               	subwf	printf@_val+1,w
  3883  01DA  1D03               	skipz
  3884  01DB  29DE               	goto	u2725
  3885  01DC  0834               	movf	??_printf+2,w
  3886  01DD  0239               	subwf	printf@_val,w
  3887  01DE                     u2725:	
  3888  01DE  1C03               	btfss	3,0
  3889  01DF  29E8               	goto	l2490
  3890                           
  3891                           ;doprnt.c: 1316: break;
  3892  01E0  3001               	movlw	1
  3893  01E1  00B2               	movwf	??_printf
  3894  01E2  0832               	movf	??_printf,w
  3895  01E3  07BD               	addwf	printf@c,f
  3896  01E4  083D               	movf	printf@c,w
  3897  01E5  3A05               	xorlw	5
  3898  01E6  1D03               	skipz
  3899  01E7  29C9               	goto	l2482
  3900  01E8                     l2490:	
  3901                           
  3902                           ;doprnt.c: 1431: {
  3903                           ;doprnt.c: 1447: if(flag & 0x03)
  3904  01E8  0837               	movf	printf@flag,w
  3905  01E9  3903               	andlw	3
  3906  01EA  1903               	btfsc	3,2
  3907  01EB  29F0               	goto	l2494
  3908                           
  3909                           ;doprnt.c: 1448: (putch('-') );
  3910  01EC  302D               	movlw	45
  3911  01ED  3187  271C  3181   	fcall	_putch
  3912  01F0                     l2494:	
  3913                           
  3914                           ;doprnt.c: 1478: }
  3915                           ;doprnt.c: 1481: prec = c;
  3916  01F0  0020               	movlb	0	; select bank0
  3917  01F1  083D               	movf	printf@c,w
  3918  01F2  00B2               	movwf	??_printf
  3919  01F3  0832               	movf	??_printf,w
  3920  01F4  00B8               	movwf	printf@prec
  3921  01F5                     l2500:	
  3922                           ;doprnt.c: 1483: while(prec--) {
  3923                           
  3924  01F5  30FF               	movlw	-1
  3925  01F6  0020               	movlb	0	; select bank0
  3926  01F7  00B2               	movwf	??_printf
  3927  01F8  0832               	movf	??_printf,w
  3928  01F9  07B8               	addwf	printf@prec,f
  3929  01FA  0838               	movf	printf@prec,w
  3930  01FB  3AFF               	xorlw	255
  3931  01FC  1903               	btfsc	3,2
  3932  01FD  2978               	goto	l2502
  3933                           
  3934                           ;doprnt.c: 1487: {
  3935                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3936  01FE  300A               	movlw	10
  3937  01FF  00A8               	movwf	___lwmod@divisor
  3938  0200  3000               	movlw	0
  3939  0201  00A9               	movwf	___lwmod@divisor+1
  3940  0202  0838               	movf	printf@prec,w
  3941  0203  00B2               	movwf	??_printf
  3942  0204  01B3               	clrf	??_printf+1
  3943  0205  35B2               	lslf	??_printf,f
  3944  0206  0DB3               	rlf	??_printf+1,f
  3945  0207  3000               	movlw	low (_dpowers| (0+32768))
  3946  0208  0732               	addwf	??_printf,w
  3947  0209  0084               	movwf	4
  3948  020A  3087               	movlw	high (_dpowers| (0+32768))
  3949  020B  3D33               	addwfc	??_printf+1,w
  3950  020C  0085               	movwf	5
  3951  020D  3F00               	moviw [0]fsr0
  3952  020E  00A0               	movwf	___lwdiv@divisor
  3953  020F  3F01               	moviw [1]fsr0
  3954  0210  00A1               	movwf	___lwdiv@divisor+1
  3955  0211  083A               	movf	printf@_val+1,w
  3956  0212  01A3               	clrf	___lwdiv@dividend+1
  3957  0213  07A3               	addwf	___lwdiv@dividend+1,f
  3958  0214  0839               	movf	printf@_val,w
  3959  0215  01A2               	clrf	___lwdiv@dividend
  3960  0216  07A2               	addwf	___lwdiv@dividend,f
  3961  0217  3184  247F  3181   	fcall	___lwdiv
  3962  021A  0020               	movlb	0	; select bank0
  3963  021B  0821               	movf	?___lwdiv+1,w
  3964  021C  01AB               	clrf	___lwmod@dividend+1
  3965  021D  07AB               	addwf	___lwmod@dividend+1,f
  3966  021E  0820               	movf	?___lwdiv,w
  3967  021F  01AA               	clrf	___lwmod@dividend
  3968  0220  07AA               	addwf	___lwmod@dividend,f
  3969  0221  3185  251B  3181   	fcall	___lwmod
  3970  0224  0020               	movlb	0	; select bank0
  3971  0225  0828               	movf	?___lwmod,w
  3972  0226  3E30               	addlw	48
  3973  0227  00B4               	movwf	??_printf+2
  3974  0228  0834               	movf	??_printf+2,w
  3975  0229  00BD               	movwf	printf@c
  3976                           
  3977                           ;doprnt.c: 1532: }
  3978                           ;doprnt.c: 1533: (putch(c) );
  3979  022A  083D               	movf	printf@c,w
  3980  022B  3187  271C  3181   	fcall	_putch
  3981  022E  29F5               	goto	l2500
  3982  022F                     l851:	
  3983                           ;doprnt.c: 1549: return 0;
  3984                           ;	Return value of _printf is never used
  3985                           
  3986                           ;doprnt.c: 1534: }
  3987                           ;doprnt.c: 1542: }
  3988                           ;doprnt.c: 1544: alldone:
  3989                           
  3990  022F  0008               	return
  3991  0230                     __end_of_printf:	
  3992                           
  3993                           	psect	text9
  3994  071C                     __ptext9:	
  3995 ;; *************** function _putch *****************
  3996 ;; Defined at:
  3997 ;;		line 773 in file "../../src/MCU_B1.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  byte            1    wreg     unsigned char 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  byte            1    0[BANK0 ] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;		None               void
  4004 ;; Registers used:
  4005 ;;		wreg
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4011 ;;      Params:         0       0       0       0       0       0       0       0
  4012 ;;      Locals:         0       1       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0
  4014 ;;      Totals:         0       1       0       0       0       0       0       0
  4015 ;;Total ram usage:        1 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    4
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_printf
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function _putch
  4027  071C                     _putch:	
  4028                           
  4029                           ;incstack = 0
  4030                           ; Regs used in _putch: [wreg]
  4031                           ;putch@byte stored from wreg
  4032  071C  0020               	movlb	0	; select bank0
  4033  071D  00A0               	movwf	putch@byte
  4034  071E                     l489:	
  4035                           ;MCU_B1.c: 776: continue;
  4036                           
  4037                           ;MCU_B1.c: 775: while (!TXIF)
  4038                           
  4039  071E  1E11               	btfss	17,4	;volatile
  4040  071F  2F1E               	goto	l489
  4041                           
  4042                           ;MCU_B1.c: 777: TXREG = byte;
  4043  0720  0820               	movf	putch@byte,w
  4044  0721  0023               	movlb	3	; select bank3
  4045  0722  009A               	movwf	26	;volatile
  4046  0723  0008               	return
  4047  0724                     __end_of_putch:	
  4048                           
  4049                           	psect	text10
  4050  051B                     __ptext10:	
  4051 ;; *************** function ___lwmod *****************
  4052 ;; Defined at:
  4053 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  divisor         2    8[BANK0 ] unsigned int 
  4056 ;;  dividend        2   10[BANK0 ] unsigned int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  counter         1   13[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2    8[BANK0 ] unsigned int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4068 ;;      Params:         0       4       0       0       0       0       0       0
  4069 ;;      Locals:         0       1       0       0       0       0       0       0
  4070 ;;      Temps:          0       1       0       0       0       0       0       0
  4071 ;;      Totals:         0       6       0       0       0       0       0       0
  4072 ;;Total ram usage:        6 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    4
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_printf
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function ___lwmod
  4084  051B                     ___lwmod:	
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4088  051B  0020               	movlb	0	; select bank0
  4089  051C  0829               	movf	___lwmod@divisor+1,w
  4090  051D  0428               	iorwf	___lwmod@divisor,w
  4091  051E  1903               	skipnz
  4092  051F  2D43               	goto	l2452
  4093  0520  01AD               	clrf	___lwmod@counter
  4094  0521  0AAD               	incf	___lwmod@counter,f
  4095  0522                     l2442:	
  4096  0522  1BA9               	btfsc	___lwmod@divisor+1,7
  4097  0523  2D2E               	goto	l2444
  4098  0524  3001               	movlw	1
  4099  0525                     u2645:	
  4100  0525  35A8               	lslf	___lwmod@divisor,f
  4101  0526  0DA9               	rlf	___lwmod@divisor+1,f
  4102  0527  0B89               	decfsz	9,f
  4103  0528  2D25               	goto	u2645
  4104  0529  3001               	movlw	1
  4105  052A  00AC               	movwf	??___lwmod
  4106  052B  082C               	movf	??___lwmod,w
  4107  052C  07AD               	addwf	___lwmod@counter,f
  4108  052D  2D22               	goto	l2442
  4109  052E                     l2444:	
  4110  052E  0829               	movf	___lwmod@divisor+1,w
  4111  052F  022B               	subwf	___lwmod@dividend+1,w
  4112  0530  1D03               	skipz
  4113  0531  2D34               	goto	u2665
  4114  0532  0828               	movf	___lwmod@divisor,w
  4115  0533  022A               	subwf	___lwmod@dividend,w
  4116  0534                     u2665:	
  4117  0534  1C03               	skipc
  4118  0535  2D3A               	goto	l2448
  4119  0536  0828               	movf	___lwmod@divisor,w
  4120  0537  02AA               	subwf	___lwmod@dividend,f
  4121  0538  0829               	movf	___lwmod@divisor+1,w
  4122  0539  3BAB               	subwfb	___lwmod@dividend+1,f
  4123  053A                     l2448:	
  4124  053A  3001               	movlw	1
  4125  053B                     u2675:	
  4126  053B  36A9               	lsrf	___lwmod@divisor+1,f
  4127  053C  0CA8               	rrf	___lwmod@divisor,f
  4128  053D  0B89               	decfsz	9,f
  4129  053E  2D3B               	goto	u2675
  4130  053F  3001               	movlw	1
  4131  0540  02AD               	subwf	___lwmod@counter,f
  4132  0541  1D03               	btfss	3,2
  4133  0542  2D2E               	goto	l2444
  4134  0543                     l2452:	
  4135  0543  082B               	movf	___lwmod@dividend+1,w
  4136  0544  01A9               	clrf	?___lwmod+1
  4137  0545  07A9               	addwf	?___lwmod+1,f
  4138  0546  082A               	movf	___lwmod@dividend,w
  4139  0547  01A8               	clrf	?___lwmod
  4140  0548  07A8               	addwf	?___lwmod,f
  4141  0549  0008               	return
  4142  054A                     __end_of___lwmod:	
  4143                           
  4144                           	psect	text11
  4145  047F                     __ptext11:	
  4146 ;; *************** function ___lwdiv *****************
  4147 ;; Defined at:
  4148 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  divisor         2    0[BANK0 ] unsigned int 
  4151 ;;  dividend        2    2[BANK0 ] unsigned int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  quotient        2    6[BANK0 ] unsigned int 
  4154 ;;  counter         1    5[BANK0 ] unsigned char 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  2    0[BANK0 ] unsigned int 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4164 ;;      Params:         0       4       0       0       0       0       0       0
  4165 ;;      Locals:         0       3       0       0       0       0       0       0
  4166 ;;      Temps:          0       1       0       0       0       0       0       0
  4167 ;;      Totals:         0       8       0       0       0       0       0       0
  4168 ;;Total ram usage:        8 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    4
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_printf
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           
  4179                           ;psect for function ___lwdiv
  4180  047F                     ___lwdiv:	
  4181                           
  4182                           ;incstack = 0
  4183                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4184  047F  0020               	movlb	0	; select bank0
  4185  0480  01A6               	clrf	___lwdiv@quotient
  4186  0481  01A7               	clrf	___lwdiv@quotient+1
  4187  0482  0821               	movf	___lwdiv@divisor+1,w
  4188  0483  0420               	iorwf	___lwdiv@divisor,w
  4189  0484  1903               	skipnz
  4190  0485  2CAF               	goto	l2430
  4191  0486  01A5               	clrf	___lwdiv@counter
  4192  0487  0AA5               	incf	___lwdiv@counter,f
  4193  0488                     l2418:	
  4194  0488  1BA1               	btfsc	___lwdiv@divisor+1,7
  4195  0489  2C94               	goto	l2420
  4196  048A  3001               	movlw	1
  4197  048B                     u2575:	
  4198  048B  35A0               	lslf	___lwdiv@divisor,f
  4199  048C  0DA1               	rlf	___lwdiv@divisor+1,f
  4200  048D  0B89               	decfsz	9,f
  4201  048E  2C8B               	goto	u2575
  4202  048F  3001               	movlw	1
  4203  0490  00A4               	movwf	??___lwdiv
  4204  0491  0824               	movf	??___lwdiv,w
  4205  0492  07A5               	addwf	___lwdiv@counter,f
  4206  0493  2C88               	goto	l2418
  4207  0494                     l2420:	
  4208  0494  3001               	movlw	1
  4209  0495                     u2595:	
  4210  0495  35A6               	lslf	___lwdiv@quotient,f
  4211  0496  0DA7               	rlf	___lwdiv@quotient+1,f
  4212  0497  0B89               	decfsz	9,f
  4213  0498  2C95               	goto	u2595
  4214  0499  0821               	movf	___lwdiv@divisor+1,w
  4215  049A  0223               	subwf	___lwdiv@dividend+1,w
  4216  049B  1D03               	skipz
  4217  049C  2C9F               	goto	u2605
  4218  049D  0820               	movf	___lwdiv@divisor,w
  4219  049E  0222               	subwf	___lwdiv@dividend,w
  4220  049F                     u2605:	
  4221  049F  1C03               	skipc
  4222  04A0  2CA6               	goto	l2426
  4223  04A1  0820               	movf	___lwdiv@divisor,w
  4224  04A2  02A2               	subwf	___lwdiv@dividend,f
  4225  04A3  0821               	movf	___lwdiv@divisor+1,w
  4226  04A4  3BA3               	subwfb	___lwdiv@dividend+1,f
  4227  04A5  1426               	bsf	___lwdiv@quotient,0
  4228  04A6                     l2426:	
  4229  04A6  3001               	movlw	1
  4230  04A7                     u2615:	
  4231  04A7  36A1               	lsrf	___lwdiv@divisor+1,f
  4232  04A8  0CA0               	rrf	___lwdiv@divisor,f
  4233  04A9  0B89               	decfsz	9,f
  4234  04AA  2CA7               	goto	u2615
  4235  04AB  3001               	movlw	1
  4236  04AC  02A5               	subwf	___lwdiv@counter,f
  4237  04AD  1D03               	btfss	3,2
  4238  04AE  2C94               	goto	l2420
  4239  04AF                     l2430:	
  4240  04AF  0827               	movf	___lwdiv@quotient+1,w
  4241  04B0  01A1               	clrf	?___lwdiv+1
  4242  04B1  07A1               	addwf	?___lwdiv+1,f
  4243  04B2  0826               	movf	___lwdiv@quotient,w
  4244  04B3  01A0               	clrf	?___lwdiv
  4245  04B4  07A0               	addwf	?___lwdiv,f
  4246  04B5  0008               	return
  4247  04B6                     __end_of___lwdiv:	
  4248                           
  4249                           	psect	text12
  4250  04EA                     __ptext12:	
  4251 ;; *************** function _UART_Receive *****************
  4252 ;; Defined at:
  4253 ;;		line 737 in file "../../src/MCU_B1.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;		None
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  i               1    3[BANK0 ] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;		None               void
  4260 ;; Registers used:
  4261 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4267 ;;      Params:         0       0       0       0       0       0       0       0
  4268 ;;      Locals:         0       1       0       0       0       0       0       0
  4269 ;;      Temps:          0       3       0       0       0       0       0       0
  4270 ;;      Totals:         0       4       0       0       0       0       0       0
  4271 ;;Total ram usage:        4 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    4
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_UART_Main
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _UART_Receive
  4283  04EA                     _UART_Receive:	
  4284                           
  4285                           ;MCU_B1.c: 738: char i;
  4286                           ;MCU_B1.c: 739: RA1 = ~RA1;
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _UART_Receive: [wreg+fsr1l+fsr1h+status,2+status,0]
  4290  04EA  3002               	movlw	2
  4291  04EB  0020               	movlb	0	; select bank0
  4292  04EC  068C               	xorwf	12,f
  4293                           
  4294                           ;MCU_B1.c: 741: myMain->Test = 1;
  4295  04ED  085B               	movf	_myMain,w
  4296  04EE  3E0D               	addlw	13
  4297  04EF  0086               	movwf	6
  4298  04F0  0187               	clrf	7
  4299  04F1  0181               	clrf	1
  4300  04F2  0A81               	incf	1,f
  4301                           
  4302                           ;MCU_B1.c: 743: for (i = 0; i < 32; i++) {
  4303  04F3  01A3               	clrf	UART_Receive@i
  4304  04F4  3020               	movlw	32
  4305  04F5  0223               	subwf	UART_Receive@i,w
  4306  04F6  1803               	btfsc	3,0
  4307  04F7  2D14               	goto	l2694
  4308  04F8                     l2688:	
  4309                           
  4310                           ;MCU_B1.c: 744: I2C->BufferWriter[i] = UART->RxData[i];
  4311  04F8  0823               	movf	UART_Receive@i,w
  4312  04F9  3E20               	addlw	32
  4313  04FA  075A               	addwf	_UART,w
  4314  04FB  00A0               	movwf	??_UART_Receive
  4315  04FC  0820               	movf	??_UART_Receive,w
  4316  04FD  0086               	movwf	6
  4317  04FE  3001               	movlw	1	; select bank2/3
  4318  04FF  0087               	movwf	7
  4319  0500  0801               	movf	1,w
  4320  0501  00A1               	movwf	??_UART_Receive+1
  4321  0502  0823               	movf	UART_Receive@i,w
  4322  0503  3E20               	addlw	32
  4323  0504  075C               	addwf	_I2C,w
  4324  0505  00A2               	movwf	??_UART_Receive+2
  4325  0506  0822               	movf	??_UART_Receive+2,w
  4326  0507  0086               	movwf	6
  4327  0508  3001               	movlw	1	; select bank2/3
  4328  0509  0087               	movwf	7
  4329  050A  0821               	movf	??_UART_Receive+1,w
  4330  050B  0081               	movwf	1
  4331  050C  3001               	movlw	1
  4332  050D  00A0               	movwf	??_UART_Receive
  4333  050E  0820               	movf	??_UART_Receive,w
  4334  050F  07A3               	addwf	UART_Receive@i,f
  4335  0510  3020               	movlw	32
  4336  0511  0223               	subwf	UART_Receive@i,w
  4337  0512  1C03               	skipc
  4338  0513  2CF8               	goto	l2688
  4339  0514                     l2694:	
  4340                           
  4341                           ;MCU_B1.c: 745: }
  4342                           ;MCU_B1.c: 746: I2C->MasterTxGO = 1;
  4343  0514  085C               	movf	_I2C,w
  4344  0515  3E42               	addlw	66
  4345  0516  0086               	movwf	6
  4346  0517  3001               	movlw	1	; select bank2/3
  4347  0518  0087               	movwf	7
  4348  0519  1581               	bsf	1,3
  4349  051A  0008               	return
  4350  051B                     __end_of_UART_Receive:	
  4351                           
  4352                           	psect	text13
  4353  0230                     __ptext13:	
  4354 ;; *************** function _SegmentDisplay_Main *****************
  4355 ;; Defined at:
  4356 ;;		line 59 in file "../../src/SegmentDisplay_A2.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;		None               void
  4363 ;; Registers used:
  4364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4370 ;;      Params:         0       0       0       0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0
  4372 ;;      Temps:          0       2       0       0       0       0       0       0
  4373 ;;      Totals:         0       2       0       0       0       0       0       0
  4374 ;;Total ram usage:        2 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    4
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _SegmentDisplay_Main
  4386  0230                     _SegmentDisplay_Main:	
  4387                           
  4388                           ;SegmentDisplay_A2.c: 60: if (Segment->GO) {
  4389                           
  4390                           ;incstack = 0
  4391                           ; Regs used in _SegmentDisplay_Main: [wreg-fsr1h+status,2+status,0]
  4392  0230  0020               	movlb	0	; select bank0
  4393  0231  0859               	movf	_Segment,w
  4394  0232  3E15               	addlw	21
  4395  0233  0086               	movwf	6
  4396  0234  0187               	clrf	7
  4397  0235  1C81               	btfss	1,1
  4398  0236  0008               	return
  4399                           
  4400                           ;SegmentDisplay_A2.c: 61: Segment->Time++;
  4401  0237  3001               	movlw	1
  4402  0238  00A0               	movwf	??_SegmentDisplay_Main
  4403  0239  0859               	movf	_Segment,w
  4404  023A  3E19               	addlw	25
  4405  023B  0086               	movwf	6
  4406  023C  0187               	clrf	7
  4407  023D  0820               	movf	??_SegmentDisplay_Main,w
  4408  023E  0781               	addwf	1,f
  4409                           
  4410                           ;SegmentDisplay_A2.c: 62: if (Segment->Time == 5)
  4411  023F  0859               	movf	_Segment,w
  4412  0240  3E19               	addlw	25
  4413  0241  0086               	movwf	6
  4414  0242  0187               	clrf	7
  4415  0243  0801               	movf	1,w
  4416  0244  3A05               	xorlw	5
  4417  0245  1D03               	skipz
  4418  0246  0008               	return
  4419                           
  4420                           ;SegmentDisplay_A2.c: 63: {
  4421                           ;SegmentDisplay_A2.c: 64: Segment->Time = 0;
  4422  0247  0859               	movf	_Segment,w
  4423  0248  3E19               	addlw	25
  4424  0249  0086               	movwf	6
  4425  024A  0187               	clrf	7
  4426  024B  0181               	clrf	1
  4427                           
  4428                           ;SegmentDisplay_A2.c: 65: PORTA &= 0x0f;
  4429  024C  300F               	movlw	15
  4430  024D  00A0               	movwf	??_SegmentDisplay_Main
  4431  024E  0820               	movf	??_SegmentDisplay_Main,w
  4432  024F  058C               	andwf	12,f	;volatile
  4433                           
  4434                           ;SegmentDisplay_A2.c: 66: if (Segment->ComCount == 0) {
  4435  0250  0859               	movf	_Segment,w
  4436  0251  3E16               	addlw	22
  4437  0252  0086               	movwf	6
  4438  0253  0187               	clrf	7
  4439  0254  0881               	movf	1,f
  4440  0255  1D03               	skipz
  4441  0256  2A59               	goto	l2834
  4442                           
  4443                           ;SegmentDisplay_A2.c: 67: RA4 = 1;
  4444  0257  160C               	bsf	12,4	;volatile
  4445                           
  4446                           ;SegmentDisplay_A2.c: 68: } else if (Segment->ComCount == 1) {
  4447  0258  2A75               	goto	l2846
  4448  0259                     l2834:	
  4449  0259  0859               	movf	_Segment,w
  4450  025A  3E16               	addlw	22
  4451  025B  0086               	movwf	6
  4452  025C  0187               	clrf	7
  4453  025D  0801               	movf	1,w
  4454  025E  3A01               	xorlw	1
  4455  025F  1D03               	skipz
  4456  0260  2A63               	goto	l2838
  4457                           
  4458                           ;SegmentDisplay_A2.c: 69: RA5 = 1;
  4459  0261  168C               	bsf	12,5	;volatile
  4460                           
  4461                           ;SegmentDisplay_A2.c: 70: } else if (Segment->ComCount == 2) {
  4462  0262  2A75               	goto	l2846
  4463  0263                     l2838:	
  4464  0263  0859               	movf	_Segment,w
  4465  0264  3E16               	addlw	22
  4466  0265  0086               	movwf	6
  4467  0266  0187               	clrf	7
  4468  0267  0801               	movf	1,w
  4469  0268  3A02               	xorlw	2
  4470  0269  1D03               	skipz
  4471  026A  2A6D               	goto	l2842
  4472                           
  4473                           ;SegmentDisplay_A2.c: 71: RA6 = 1;
  4474  026B  170C               	bsf	12,6	;volatile
  4475                           
  4476                           ;SegmentDisplay_A2.c: 72: } else if (Segment->ComCount == 3) {
  4477  026C  2A75               	goto	l2846
  4478  026D                     l2842:	
  4479  026D  0859               	movf	_Segment,w
  4480  026E  3E16               	addlw	22
  4481  026F  0086               	movwf	6
  4482  0270  0187               	clrf	7
  4483  0271  0801               	movf	1,w
  4484  0272  3A03               	xorlw	3
  4485  0273  1903               	btfsc	3,2
  4486                           
  4487                           ;SegmentDisplay_A2.c: 73: RA7 = 1;
  4488  0274  178C               	bsf	12,7	;volatile
  4489  0275                     l2846:	
  4490                           
  4491                           ;SegmentDisplay_A2.c: 74: }
  4492                           ;SegmentDisplay_A2.c: 75: PORTB = Segment->Display[Segment->Num[Segment->ComCount]];
  4493  0275  0859               	movf	_Segment,w
  4494  0276  3E16               	addlw	22
  4495  0277  0086               	movwf	6
  4496  0278  0187               	clrf	7
  4497  0279  0801               	movf	1,w
  4498  027A  3E11               	addlw	17
  4499  027B  0759               	addwf	_Segment,w
  4500  027C  00A0               	movwf	??_SegmentDisplay_Main
  4501  027D  0820               	movf	??_SegmentDisplay_Main,w
  4502  027E  0086               	movwf	6
  4503  027F  0187               	clrf	7
  4504  0280  0801               	movf	1,w
  4505  0281  0759               	addwf	_Segment,w
  4506  0282  00A1               	movwf	??_SegmentDisplay_Main+1
  4507  0283  0821               	movf	??_SegmentDisplay_Main+1,w
  4508  0284  0086               	movwf	6
  4509  0285  0187               	clrf	7
  4510  0286  0801               	movf	1,w
  4511  0287  008D               	movwf	13	;volatile
  4512                           
  4513                           ;SegmentDisplay_A2.c: 76: if (Segment->ComCount < Segment->DisplayCount)
  4514  0288  0859               	movf	_Segment,w
  4515  0289  3E16               	addlw	22
  4516  028A  0086               	movwf	6
  4517  028B  0187               	clrf	7
  4518  028C  0859               	movf	_Segment,w
  4519  028D  3E17               	addlw	23
  4520  028E  0084               	movwf	4
  4521  028F  0185               	clrf	5
  4522  0290  0800               	movf	0,w
  4523  0291  0201               	subwf	1,w
  4524  0292  1803               	skipnc
  4525  0293  2A9D               	goto	l2852
  4526                           
  4527                           ;SegmentDisplay_A2.c: 77: {
  4528                           ;SegmentDisplay_A2.c: 78: Segment->ComCount++;
  4529  0294  3001               	movlw	1
  4530  0295  00A0               	movwf	??_SegmentDisplay_Main
  4531  0296  0859               	movf	_Segment,w
  4532  0297  3E16               	addlw	22
  4533  0298  0086               	movwf	6
  4534  0299  0187               	clrf	7
  4535  029A  0820               	movf	??_SegmentDisplay_Main,w
  4536  029B  0781               	addwf	1,f
  4537                           
  4538                           ;SegmentDisplay_A2.c: 79: } else {
  4539  029C  0008               	return
  4540  029D                     l2852:	
  4541                           
  4542                           ;SegmentDisplay_A2.c: 80: Segment->ComCount = 0;
  4543  029D  0859               	movf	_Segment,w
  4544  029E  3E16               	addlw	22
  4545  029F  0086               	movwf	6
  4546  02A0  0187               	clrf	7
  4547  02A1  0181               	clrf	1
  4548  02A2  0008               	return
  4549  02A3                     __end_of_SegmentDisplay_Main:	
  4550                           
  4551                           	psect	text14
  4552  063F                     __ptext14:	
  4553 ;; *************** function _SegmentDisplay_Initial *****************
  4554 ;; Defined at:
  4555 ;;		line 8 in file "../../src/SegmentDisplay_A2.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, fsr1l, fsr1h
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4569 ;;      Params:         0       0       0       0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0
  4571 ;;      Temps:          0       1       0       0       0       0       0       0
  4572 ;;      Totals:         0       1       0       0       0       0       0       0
  4573 ;;Total ram usage:        1 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    4
  4576 ;; This function calls:
  4577 ;;		Nothing
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _SegmentDisplay_Initial
  4585  063F                     _SegmentDisplay_Initial:	
  4586                           
  4587                           ;SegmentDisplay_A2.c: 9: Segment = &VarSegment;
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _SegmentDisplay_Initial: [wregfsr1]
  4591  063F  30C0               	movlw	_VarSegment& (0+255)
  4592  0640  0020               	movlb	0	; select bank0
  4593  0641  00A0               	movwf	??_SegmentDisplay_Initial
  4594  0642  0820               	movf	??_SegmentDisplay_Initial,w
  4595  0643  00D9               	movwf	_Segment
  4596                           
  4597                           ;SegmentDisplay_A2.c: 10: Segment->Enable = 1;
  4598  0644  0859               	movf	_Segment,w
  4599  0645  3E15               	addlw	21
  4600  0646  0086               	movwf	6
  4601  0647  0187               	clrf	7
  4602  0648  1401               	bsf	1,0
  4603                           
  4604                           ;SegmentDisplay_A2.c: 12: Segment->Dec = 1;
  4605  0649  0859               	movf	_Segment,w
  4606  064A  3E15               	addlw	21
  4607  064B  0086               	movwf	6
  4608  064C  0187               	clrf	7
  4609  064D  1581               	bsf	1,3
  4610  064E  0008               	return
  4611  064F                     __end_of_SegmentDisplay_Initial:	
  4612                           
  4613                           	psect	text15
  4614  067E                     __ptext15:	
  4615 ;; *************** function _Mcu_Initialization *****************
  4616 ;; Defined at:
  4617 ;;		line 25 in file "../../src/MCU_B1.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4631 ;;      Params:         0       0       0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    5
  4638 ;; This function calls:
  4639 ;;		_Fosc_Set
  4640 ;;		_I2C_Set
  4641 ;;		_IO_Set
  4642 ;;		_TMR1_Set
  4643 ;;		_UART_Set
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _Mcu_Initialization
  4651  067E                     _Mcu_Initialization:	
  4652                           
  4653                           ;MCU_B1.c: 27: Fosc_Set();
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4657  067E  3187  2746  3186   	fcall	_Fosc_Set
  4658                           
  4659                           ;MCU_B1.c: 29: IO_Set();
  4660  0681  3186  2629  3186   	fcall	_IO_Set
  4661                           
  4662                           ;MCU_B1.c: 31: ;;
  4663                           ;MCU_B1.c: 33: TMR1_Set();
  4664  0684  3186  264F  3186   	fcall	_TMR1_Set
  4665                           
  4666                           ;MCU_B1.c: 35: ;;
  4667                           ;MCU_B1.c: 39: ;;
  4668                           ;MCU_B1.c: 41: ;;
  4669                           ;MCU_B1.c: 43: I2C_Set();
  4670  0687  3187  270E  3186   	fcall	_I2C_Set
  4671                           
  4672                           ;MCU_B1.c: 45: UART_Set();
  4673  068A  3186  2610         	fcall	_UART_Set
  4674  068C  0008               	return
  4675  068D                     __end_of_Mcu_Initialization:	
  4676                           
  4677                           	psect	text16
  4678  0610                     __ptext16:	
  4679 ;; *************** function _UART_Set *****************
  4680 ;; Defined at:
  4681 ;;		line 661 in file "../../src/MCU_B1.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;		None               void
  4688 ;; Registers used:
  4689 ;;		wreg, status,2
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4695 ;;      Params:         0       0       0       0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0
  4697 ;;      Temps:          0       1       0       0       0       0       0       0
  4698 ;;      Totals:         0       1       0       0       0       0       0       0
  4699 ;;Total ram usage:        1 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    4
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_Mcu_Initialization
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _UART_Set
  4711  0610                     _UART_Set:	
  4712                           
  4713                           ;MCU_B1.c: 662: UART = &VarUart;
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _UART_Set: [wreg+status,2]
  4717  0610  30A0               	movlw	_VarUart& (0+255)
  4718  0611  0020               	movlb	0	; select bank0
  4719  0612  00A0               	movwf	??_UART_Set
  4720  0613  0820               	movf	??_UART_Set,w
  4721  0614  00DA               	movwf	_UART
  4722                           
  4723                           ;MCU_B1.c: 663: TRISC7 = 1;
  4724  0615  0021               	movlb	1	; select bank1
  4725  0616  178E               	bsf	14,7	;volatile
  4726                           
  4727                           ;MCU_B1.c: 664: TRISC6 = 1;
  4728  0617  170E               	bsf	14,6	;volatile
  4729                           
  4730                           ;MCU_B1.c: 665: SPBRG = ((int)(16000000L/(16UL * 19200) -1));
  4731  0618  3033               	movlw	51
  4732  0619  0023               	movlb	3	; select bank3
  4733  061A  009B               	movwf	27	;volatile
  4734                           
  4735                           ;MCU_B1.c: 666: SPBRGH = 0;
  4736  061B  019C               	clrf	28	;volatile
  4737                           
  4738                           ;MCU_B1.c: 667: BRG16 = 0;
  4739  061C  119F               	bcf	31,3	;volatile
  4740                           
  4741                           ;MCU_B1.c: 668: RCSTA = (0 | 0x90);
  4742  061D  3090               	movlw	144
  4743  061E  009D               	movwf	29	;volatile
  4744                           
  4745                           ;MCU_B1.c: 669: TXSTA = (0x4 | 0 | 0x20);
  4746  061F  3024               	movlw	36
  4747  0620  009E               	movwf	30	;volatile
  4748                           
  4749                           ;MCU_B1.c: 670: TX9 = 0;
  4750  0621  131E               	bcf	30,6	;volatile
  4751                           
  4752                           ;MCU_B1.c: 671: RX9 = 0;
  4753  0622  131D               	bcf	29,6	;volatile
  4754                           
  4755                           ;MCU_B1.c: 672: TXIE = 0;
  4756  0623  0021               	movlb	1	; select bank1
  4757  0624  1211               	bcf	17,4	;volatile
  4758                           
  4759                           ;MCU_B1.c: 673: RCIE = 1;
  4760  0625  1691               	bsf	17,5	;volatile
  4761                           
  4762                           ;MCU_B1.c: 674: PEIE = 1;
  4763  0626  170B               	bsf	11,6	;volatile
  4764                           
  4765                           ;MCU_B1.c: 675: GIE = 1;
  4766  0627  178B               	bsf	11,7	;volatile
  4767  0628  0008               	return
  4768  0629                     __end_of_UART_Set:	
  4769                           
  4770                           	psect	text17
  4771  064F                     __ptext17:	
  4772 ;; *************** function _TMR1_Set *****************
  4773 ;; Defined at:
  4774 ;;		line 240 in file "../../src/MCU_B1.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;		None               void
  4781 ;; Registers used:
  4782 ;;		wreg
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4788 ;;      Params:         0       0       0       0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0
  4790 ;;      Temps:          0       1       0       0       0       0       0       0
  4791 ;;      Totals:         0       1       0       0       0       0       0       0
  4792 ;;Total ram usage:        1 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    4
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_Mcu_Initialization
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _TMR1_Set
  4804  064F                     _TMR1_Set:	
  4805                           
  4806                           ;MCU_B1.c: 241: Timer1 = &VarTimer1;
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _TMR1_Set: [wreg]
  4810  064F  3076               	movlw	_VarTimer1& (0+255)
  4811  0650  0020               	movlb	0	; select bank0
  4812  0651  00A0               	movwf	??_TMR1_Set
  4813  0652  0820               	movf	??_TMR1_Set,w
  4814  0653  00F9               	movwf	_Timer1
  4815                           
  4816                           ;MCU_B1.c: 242: T1CON = (0x40 | 0x00 | 0x01);
  4817  0654  3041               	movlw	65
  4818  0655  0098               	movwf	24	;volatile
  4819                           
  4820                           ;MCU_B1.c: 243: TMR1H = ((65536-700)/256);
  4821  0656  30FD               	movlw	253
  4822  0657  0097               	movwf	23	;volatile
  4823                           
  4824                           ;MCU_B1.c: 244: TMR1L = ((65536-700)%256);
  4825  0658  3044               	movlw	68
  4826  0659  0096               	movwf	22	;volatile
  4827                           
  4828                           ;MCU_B1.c: 245: TMR1IE = 1;
  4829  065A  0021               	movlb	1	; select bank1
  4830  065B  1411               	bsf	17,0	;volatile
  4831                           
  4832                           ;MCU_B1.c: 246: PEIE = 1;
  4833  065C  170B               	bsf	11,6	;volatile
  4834                           
  4835                           ;MCU_B1.c: 247: GIE = 1;
  4836  065D  178B               	bsf	11,7	;volatile
  4837  065E  0008               	return
  4838  065F                     __end_of_TMR1_Set:	
  4839                           
  4840                           	psect	text18
  4841  0629                     __ptext18:	
  4842 ;; *************** function _IO_Set *****************
  4843 ;; Defined at:
  4844 ;;		line 57 in file "../../src/MCU_B1.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;		None               void
  4851 ;; Registers used:
  4852 ;;		wreg, status,2
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4858 ;;      Params:         0       0       0       0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    4
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_Mcu_Initialization
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _IO_Set
  4874  0629                     _IO_Set:	
  4875                           
  4876                           ;MCU_B1.c: 70: TRISA = 0b00001001;;
  4877                           
  4878                           ;incstack = 0
  4879                           ; Regs used in _IO_Set: [wreg+status,2]
  4880  0629  3009               	movlw	9
  4881  062A  0021               	movlb	1	; select bank1
  4882  062B  008C               	movwf	12	;volatile
  4883                           
  4884                           ;MCU_B1.c: 71: TRISB = 0b00000000;;
  4885  062C  018D               	clrf	13	;volatile
  4886                           
  4887                           ;MCU_B1.c: 72: TRISC = 0b00011001;;
  4888  062D  3019               	movlw	25
  4889  062E  008E               	movwf	14	;volatile
  4890                           
  4891                           ;MCU_B1.c: 73: LATA = 0b00000000;;
  4892  062F  0022               	movlb	2	; select bank2
  4893  0630  018C               	clrf	12	;volatile
  4894                           
  4895                           ;MCU_B1.c: 74: LATB = 0b00000000;;
  4896  0631  018D               	clrf	13	;volatile
  4897                           
  4898                           ;MCU_B1.c: 75: LATC = 0b00000000;;
  4899  0632  018E               	clrf	14	;volatile
  4900                           
  4901                           ;MCU_B1.c: 76: ANSELA = 0b00000001;;
  4902  0633  3001               	movlw	1
  4903  0634  0023               	movlb	3	; select bank3
  4904  0635  008C               	movwf	12	;volatile
  4905                           
  4906                           ;MCU_B1.c: 77: ANSELB = 0b00000000;;
  4907  0636  018D               	clrf	13	;volatile
  4908                           
  4909                           ;MCU_B1.c: 78: ANSELC = 0b00000000;;
  4910  0637  018E               	clrf	14	;volatile
  4911                           
  4912                           ;MCU_B1.c: 79: PORTA = 0b00001001;;
  4913  0638  3009               	movlw	9
  4914  0639  0020               	movlb	0	; select bank0
  4915  063A  008C               	movwf	12	;volatile
  4916                           
  4917                           ;MCU_B1.c: 80: PORTB = 0b00000000;;
  4918  063B  018D               	clrf	13	;volatile
  4919                           
  4920                           ;MCU_B1.c: 81: PORTC = 0b00011001;;
  4921  063C  3019               	movlw	25
  4922  063D  008E               	movwf	14	;volatile
  4923  063E  0008               	return
  4924  063F                     __end_of_IO_Set:	
  4925                           
  4926                           	psect	text19
  4927  070E                     __ptext19:	
  4928 ;; *************** function _I2C_Set *****************
  4929 ;; Defined at:
  4930 ;;		line 411 in file "../../src/MCU_B1.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;		None               void
  4937 ;; Registers used:
  4938 ;;		wreg, status,2
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4944 ;;      Params:         0       0       0       0       0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0
  4946 ;;      Temps:          0       1       0       0       0       0       0       0
  4947 ;;      Totals:         0       1       0       0       0       0       0       0
  4948 ;;Total ram usage:        1 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    4
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_Mcu_Initialization
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           
  4959                           ;psect for function _I2C_Set
  4960  070E                     _I2C_Set:	
  4961                           
  4962                           ;MCU_B1.c: 412: I2C = &VarI2C;
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _I2C_Set: [wreg+status,2]
  4966  070E  3020               	movlw	_VarI2C& (0+255)
  4967  070F  0020               	movlb	0	; select bank0
  4968  0710  00A0               	movwf	??_I2C_Set
  4969  0711  0820               	movf	??_I2C_Set,w
  4970  0712  00DC               	movwf	_I2C
  4971                           
  4972                           ;MCU_B1.c: 414: SSPADD = 0x09;
  4973  0713  3009               	movlw	9
  4974  0714  0024               	movlb	4	; select bank4
  4975  0715  0092               	movwf	18	;volatile
  4976                           
  4977                           ;MCU_B1.c: 415: SSPSTAT = 0x80;
  4978  0716  3080               	movlw	128
  4979  0717  0094               	movwf	20	;volatile
  4980                           
  4981                           ;MCU_B1.c: 416: SSPCON2 = 0;
  4982  0718  0196               	clrf	22	;volatile
  4983                           
  4984                           ;MCU_B1.c: 418: SSPCON1 = 0b101000;
  4985  0719  3028               	movlw	40
  4986  071A  0095               	movwf	21	;volatile
  4987  071B  0008               	return
  4988  071C                     __end_of_I2C_Set:	
  4989                           
  4990                           	psect	text20
  4991  0746                     __ptext20:	
  4992 ;; *************** function _Fosc_Set *****************
  4993 ;; Defined at:
  4994 ;;		line 53 in file "../../src/MCU_B1.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;		None               void
  5001 ;; Registers used:
  5002 ;;		wreg
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5008 ;;      Params:         0       0       0       0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0
  5011 ;;      Totals:         0       0       0       0       0       0       0       0
  5012 ;;Total ram usage:        0 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:    4
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_Mcu_Initialization
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           
  5023                           ;psect for function _Fosc_Set
  5024  0746                     _Fosc_Set:	
  5025                           
  5026                           ;MCU_B1.c: 54: OSCCON = 0x78;
  5027                           
  5028                           ;incstack = 0
  5029                           ; Regs used in _Fosc_Set: [wreg]
  5030  0746  3078               	movlw	120
  5031  0747  0021               	movlb	1	; select bank1
  5032  0748  0099               	movwf	25	;volatile
  5033  0749  0008               	return
  5034  074A                     __end_of_Fosc_Set:	
  5035                           
  5036                           	psect	text21
  5037  02A3                     __ptext21:	
  5038 ;; *************** function _I2C_Main *****************
  5039 ;; Defined at:
  5040 ;;		line 451 in file "../../src/MCU_B1.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  i               1    6[BANK0 ] unsigned char 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5054 ;;      Params:         0       0       0       0       0       0       0       0
  5055 ;;      Locals:         0       1       0       0       0       0       0       0
  5056 ;;      Temps:          0       3       0       0       0       0       0       0
  5057 ;;      Totals:         0       4       0       0       0       0       0       0
  5058 ;;Total ram usage:        4 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    5
  5061 ;; This function calls:
  5062 ;;		_I2C_Master_Reception
  5063 ;;		_I2C_Master_Transmission
  5064 ;; This function is called by:
  5065 ;;		_main
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _I2C_Main
  5071  02A3                     _I2C_Main:	
  5072                           
  5073                           ;MCU_B1.c: 452: char i;
  5074                           ;MCU_B1.c: 474: if (I2C->MasterRxGO) {
  5075                           
  5076                           ;incstack = 0
  5077                           ; Regs used in _I2C_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5078  02A3  0020               	movlb	0	; select bank0
  5079  02A4  085C               	movf	_I2C,w
  5080  02A5  3E42               	addlw	66
  5081  02A6  0086               	movwf	6
  5082  02A7  3001               	movlw	1	; select bank2/3
  5083  02A8  0087               	movwf	7
  5084  02A9  1E01               	btfss	1,4
  5085  02AA  2AE3               	goto	l334
  5086                           
  5087                           ;MCU_B1.c: 475: I2C->MasterRxGO = 0;
  5088  02AB  085C               	movf	_I2C,w
  5089  02AC  3E42               	addlw	66
  5090  02AD  0086               	movwf	6
  5091  02AE  3001               	movlw	1	; select bank2/3
  5092  02AF  0087               	movwf	7
  5093  02B0  1201               	bcf	1,4
  5094                           
  5095                           ;MCU_B1.c: 476: I2C_Master_Reception();
  5096  02B1  3183  2316  3182   	fcall	_I2C_Master_Reception
  5097                           
  5098                           ;MCU_B1.c: 477: myMain->Test = 1;
  5099  02B4  0020               	movlb	0	; select bank0
  5100  02B5  085B               	movf	_myMain,w
  5101  02B6  3E0D               	addlw	13
  5102  02B7  0086               	movwf	6
  5103  02B8  0187               	clrf	7
  5104  02B9  0181               	clrf	1
  5105  02BA  0A81               	incf	1,f
  5106                           
  5107                           ;MCU_B1.c: 478: RA1 = ~RA1;
  5108  02BB  3002               	movlw	2
  5109  02BC  068C               	xorwf	12,f
  5110                           
  5111                           ;MCU_B1.c: 480: for (i = 0; i < 32; i++) {
  5112  02BD  01A6               	clrf	I2C_Main@i
  5113  02BE  3020               	movlw	32
  5114  02BF  0226               	subwf	I2C_Main@i,w
  5115  02C0  1803               	btfsc	3,0
  5116  02C1  2ADC               	goto	l2784
  5117  02C2                     l2778:	
  5118                           
  5119                           ;MCU_B1.c: 481: UART->TxData[i] = I2C->BufferReader[i];
  5120  02C2  0826               	movf	I2C_Main@i,w
  5121  02C3  075C               	addwf	_I2C,w
  5122  02C4  00A3               	movwf	??_I2C_Main
  5123  02C5  0823               	movf	??_I2C_Main,w
  5124  02C6  0086               	movwf	6
  5125  02C7  3001               	movlw	1	; select bank2/3
  5126  02C8  0087               	movwf	7
  5127  02C9  0801               	movf	1,w
  5128  02CA  00A4               	movwf	??_I2C_Main+1
  5129  02CB  0826               	movf	I2C_Main@i,w
  5130  02CC  075A               	addwf	_UART,w
  5131  02CD  00A5               	movwf	??_I2C_Main+2
  5132  02CE  0825               	movf	??_I2C_Main+2,w
  5133  02CF  0086               	movwf	6
  5134  02D0  3001               	movlw	1	; select bank2/3
  5135  02D1  0087               	movwf	7
  5136  02D2  0824               	movf	??_I2C_Main+1,w
  5137  02D3  0081               	movwf	1
  5138  02D4  3001               	movlw	1
  5139  02D5  00A3               	movwf	??_I2C_Main
  5140  02D6  0823               	movf	??_I2C_Main,w
  5141  02D7  07A6               	addwf	I2C_Main@i,f
  5142  02D8  3020               	movlw	32
  5143  02D9  0226               	subwf	I2C_Main@i,w
  5144  02DA  1C03               	skipc
  5145  02DB  2AC2               	goto	l2778
  5146  02DC                     l2784:	
  5147                           
  5148                           ;MCU_B1.c: 482: }
  5149                           ;MCU_B1.c: 483: UART->TxGO = 1;
  5150  02DC  085A               	movf	_UART,w
  5151  02DD  3E43               	addlw	67
  5152  02DE  0086               	movwf	6
  5153  02DF  3001               	movlw	1	; select bank2/3
  5154  02E0  0087               	movwf	7
  5155  02E1  1401               	bsf	1,0
  5156                           
  5157                           ;MCU_B1.c: 485: } else {
  5158  02E2  0008               	return
  5159  02E3                     l334:	
  5160                           
  5161                           ;MCU_B1.c: 486: if (RC0) {
  5162  02E3  1C0E               	btfss	14,0	;volatile
  5163  02E4  2AF9               	goto	l2790
  5164                           
  5165                           ;MCU_B1.c: 487: if (!I2C->SS) {
  5166  02E5  085C               	movf	_I2C,w
  5167  02E6  3E42               	addlw	66
  5168  02E7  0086               	movwf	6
  5169  02E8  3001               	movlw	1	; select bank2/3
  5170  02E9  0087               	movwf	7
  5171  02EA  1A81               	btfsc	1,5
  5172  02EB  0008               	return
  5173                           
  5174                           ;MCU_B1.c: 488: I2C->SS = 1;
  5175  02EC  085C               	movf	_I2C,w
  5176  02ED  3E42               	addlw	66
  5177  02EE  0086               	movwf	6
  5178  02EF  3001               	movlw	1	; select bank2/3
  5179  02F0  0087               	movwf	7
  5180  02F1  1681               	bsf	1,5
  5181                           
  5182                           ;MCU_B1.c: 489: I2C->MasterRxGO = 1;
  5183  02F2  085C               	movf	_I2C,w
  5184  02F3  3E42               	addlw	66
  5185  02F4  0086               	movwf	6
  5186  02F5  3001               	movlw	1	; select bank2/3
  5187  02F6  0087               	movwf	7
  5188  02F7  1601               	bsf	1,4
  5189                           
  5190                           ;MCU_B1.c: 490: }
  5191                           ;MCU_B1.c: 491: } else {
  5192  02F8  0008               	return
  5193  02F9                     l2790:	
  5194                           
  5195                           ;MCU_B1.c: 492: if (I2C->SS) {
  5196  02F9  085C               	movf	_I2C,w
  5197  02FA  3E42               	addlw	66
  5198  02FB  0086               	movwf	6
  5199  02FC  3001               	movlw	1	; select bank2/3
  5200  02FD  0087               	movwf	7
  5201  02FE  1E81               	btfss	1,5
  5202  02FF  2B06               	goto	l341
  5203                           
  5204                           ;MCU_B1.c: 493: I2C->SS = 0;
  5205  0300  085C               	movf	_I2C,w
  5206  0301  3E42               	addlw	66
  5207  0302  0086               	movwf	6
  5208  0303  3001               	movlw	1	; select bank2/3
  5209  0304  0087               	movwf	7
  5210  0305  1281               	bcf	1,5
  5211  0306                     l341:	
  5212                           
  5213                           ;MCU_B1.c: 494: }
  5214                           ;MCU_B1.c: 495: if (I2C->MasterTxGO) {
  5215  0306  085C               	movf	_I2C,w
  5216  0307  3E42               	addlw	66
  5217  0308  0086               	movwf	6
  5218  0309  3001               	movlw	1	; select bank2/3
  5219  030A  0087               	movwf	7
  5220  030B  1D81               	btfss	1,3
  5221  030C  0008               	return
  5222                           
  5223                           ;MCU_B1.c: 496: I2C->MasterTxGO = 0;
  5224  030D  085C               	movf	_I2C,w
  5225  030E  3E42               	addlw	66
  5226  030F  0086               	movwf	6
  5227  0310  3001               	movlw	1	; select bank2/3
  5228  0311  0087               	movwf	7
  5229  0312  1181               	bcf	1,3
  5230                           
  5231                           ;MCU_B1.c: 497: I2C_Master_Transmission();
  5232  0313  3184  2447         	fcall	_I2C_Master_Transmission
  5233  0315  0008               	return
  5234  0316                     __end_of_I2C_Main:	
  5235                           
  5236                           	psect	text22
  5237  0447                     __ptext22:	
  5238 ;; *************** function _I2C_Master_Transmission *****************
  5239 ;; Defined at:
  5240 ;;		line 533 in file "../../src/MCU_B1.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  i               1    1[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;		None               void
  5247 ;; Registers used:
  5248 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5254 ;;      Params:         0       0       0       0       0       0       0       0
  5255 ;;      Locals:         0       1       0       0       0       0       0       0
  5256 ;;      Temps:          0       1       0       0       0       0       0       0
  5257 ;;      Totals:         0       2       0       0       0       0       0       0
  5258 ;;Total ram usage:        2 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    4
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_I2C_Main
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function _I2C_Master_Transmission
  5270  0447                     _I2C_Master_Transmission:	
  5271  0447                     l349:	
  5272                           ;MCU_B1.c: 534: char i;
  5273                           ;MCU_B1.c: 535: while (SEN);
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in _I2C_Master_Transmission: [wreg+fsr1l+fsr1h+status,2+status,0]
  5277                           
  5278  0447  0024               	movlb	4	; select bank4
  5279  0448  1816               	btfsc	22,0	;volatile
  5280  0449  2C47               	goto	l349
  5281                           
  5282                           ;MCU_B1.c: 536: SEN = 1;
  5283  044A  1416               	bsf	22,0	;volatile
  5284  044B                     l352:	
  5285                           ;MCU_B1.c: 538: while (SEN);
  5286                           
  5287  044B  1816               	btfsc	22,0	;volatile
  5288  044C  2C4B               	goto	l352
  5289                           
  5290                           ;MCU_B1.c: 541: SSPBUF = 0x10;
  5291  044D  3010               	movlw	16
  5292  044E  0091               	movwf	17	;volatile
  5293  044F                     l355:	
  5294                           ;MCU_B1.c: 542: while (BF);
  5295                           
  5296  044F  1814               	btfsc	20,0	;volatile
  5297  0450  2C4F               	goto	l355
  5298  0451                     l358:	
  5299                           ;MCU_B1.c: 545: while (ACKSTAT);
  5300                           
  5301  0451  1B16               	btfsc	22,6	;volatile
  5302  0452  2C51               	goto	l358
  5303                           
  5304                           ;MCU_B1.c: 547: for (i = 0; i < 32; i++) {
  5305  0453  0020               	movlb	0	; select bank0
  5306  0454  01A1               	clrf	I2C_Master_Transmission@i
  5307  0455  3020               	movlw	32
  5308  0456  0221               	subwf	I2C_Master_Transmission@i,w
  5309  0457  1803               	btfsc	3,0
  5310  0458  2C75               	goto	l372
  5311  0459                     l363:	
  5312                           ;MCU_B1.c: 548: while (SEN);
  5313                           
  5314  0459  0024               	movlb	4	; select bank4
  5315  045A  1816               	btfsc	22,0	;volatile
  5316  045B  2C59               	goto	l363
  5317                           
  5318                           ;MCU_B1.c: 549: SSPBUF = I2C->BufferWriter[i];
  5319  045C  0020               	movlb	0	; select bank0
  5320  045D  0821               	movf	I2C_Master_Transmission@i,w
  5321  045E  3E20               	addlw	32
  5322  045F  075C               	addwf	_I2C,w
  5323  0460  00A0               	movwf	??_I2C_Master_Transmission
  5324  0461  0820               	movf	??_I2C_Master_Transmission,w
  5325  0462  0086               	movwf	6
  5326  0463  3001               	movlw	1	; select bank2/3
  5327  0464  0087               	movwf	7
  5328  0465  0801               	movf	1,w
  5329  0466  0024               	movlb	4	; select bank4
  5330  0467  0091               	movwf	17	;volatile
  5331  0468                     l366:	
  5332                           ;MCU_B1.c: 550: while (BF);
  5333                           
  5334  0468  1814               	btfsc	20,0	;volatile
  5335  0469  2C68               	goto	l366
  5336  046A                     l369:	
  5337                           ;MCU_B1.c: 553: while (ACKSTAT);
  5338                           
  5339  046A  1B16               	btfsc	22,6	;volatile
  5340  046B  2C6A               	goto	l369
  5341  046C  3001               	movlw	1
  5342  046D  0020               	movlb	0	; select bank0
  5343  046E  00A0               	movwf	??_I2C_Master_Transmission
  5344  046F  0820               	movf	??_I2C_Master_Transmission,w
  5345  0470  07A1               	addwf	I2C_Master_Transmission@i,f
  5346  0471  3020               	movlw	32
  5347  0472  0221               	subwf	I2C_Master_Transmission@i,w
  5348  0473  1C03               	skipc
  5349  0474  2C59               	goto	l363
  5350  0475                     l372:	
  5351                           ;MCU_B1.c: 554: }
  5352                           ;MCU_B1.c: 556: while (SEN);
  5353                           
  5354  0475  0024               	movlb	4	; select bank4
  5355  0476  1C16               	btfss	22,0	;volatile
  5356  0477  2C7A               	goto	l375
  5357  0478  2C75               	goto	l372
  5358  0479                     l376:	
  5359                           ;MCU_B1.c: 557: while (!PEN)
  5360                           
  5361                           
  5362                           ;MCU_B1.c: 558: PEN = 1;
  5363  0479  1516               	bsf	22,2	;volatile
  5364  047A                     l375:	
  5365  047A  1D16               	btfss	22,2	;volatile
  5366  047B  2C79               	goto	l376
  5367  047C                     l378:	
  5368                           ;MCU_B1.c: 559: while (PEN);
  5369                           
  5370  047C  1D16               	btfss	22,2	;volatile
  5371  047D  0008               	return
  5372  047E  2C7C               	goto	l378
  5373  047F                     __end_of_I2C_Master_Transmission:	
  5374                           
  5375                           	psect	text23
  5376  0316                     __ptext23:	
  5377 ;; *************** function _I2C_Master_Reception *****************
  5378 ;; Defined at:
  5379 ;;		line 565 in file "../../src/MCU_B1.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  i               1    2[BANK0 ] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;		None               void
  5386 ;; Registers used:
  5387 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5393 ;;      Params:         0       0       0       0       0       0       0       0
  5394 ;;      Locals:         0       1       0       0       0       0       0       0
  5395 ;;      Temps:          0       2       0       0       0       0       0       0
  5396 ;;      Totals:         0       3       0       0       0       0       0       0
  5397 ;;Total ram usage:        3 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    4
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_I2C_Main
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _I2C_Master_Reception
  5409  0316                     _I2C_Master_Reception:	
  5410  0316                     l384:	
  5411                           ;MCU_B1.c: 566: char i;
  5412                           ;MCU_B1.c: 567: while (SEN);
  5413                           
  5414                           ;incstack = 0
  5415                           ; Regs used in _I2C_Master_Reception: [wreg+fsr1l+fsr1h+status,2+status,0]
  5416                           
  5417  0316  0024               	movlb	4	; select bank4
  5418  0317  1816               	btfsc	22,0	;volatile
  5419  0318  2B16               	goto	l384
  5420                           
  5421                           ;MCU_B1.c: 568: SEN = 1;
  5422  0319  1416               	bsf	22,0	;volatile
  5423  031A                     l387:	
  5424                           ;MCU_B1.c: 569: while (SEN);
  5425                           
  5426  031A  1816               	btfsc	22,0	;volatile
  5427  031B  2B1A               	goto	l387
  5428                           
  5429                           ;MCU_B1.c: 572: SSPBUF = 0x11;
  5430  031C  3011               	movlw	17
  5431  031D  0091               	movwf	17	;volatile
  5432  031E                     l390:	
  5433                           ;MCU_B1.c: 575: while (BF);
  5434                           
  5435  031E  1814               	btfsc	20,0	;volatile
  5436  031F  2B1E               	goto	l390
  5437  0320                     l393:	
  5438                           ;MCU_B1.c: 576: while (ACKSTAT);
  5439                           
  5440  0320  1B16               	btfsc	22,6	;volatile
  5441  0321  2B20               	goto	l393
  5442  0322                     l396:	
  5443                           ;MCU_B1.c: 578: while (RCEN);
  5444                           
  5445  0322  1996               	btfsc	22,3	;volatile
  5446  0323  2B22               	goto	l396
  5447                           
  5448                           ;MCU_B1.c: 579: RCEN = 1;
  5449  0324  1596               	bsf	22,3	;volatile
  5450  0325                     l399:	
  5451                           ;MCU_B1.c: 580: while (RCEN);
  5452                           
  5453  0325  1996               	btfsc	22,3	;volatile
  5454  0326  2B25               	goto	l399
  5455                           
  5456                           ;MCU_B1.c: 581: I2C->Address = SSPBUF;
  5457  0327  0811               	movf	17,w	;volatile
  5458  0328  0020               	movlb	0	; select bank0
  5459  0329  00A0               	movwf	??_I2C_Master_Reception
  5460  032A  085C               	movf	_I2C,w
  5461  032B  3E41               	addlw	65
  5462  032C  0086               	movwf	6
  5463  032D  3001               	movlw	1	; select bank2/3
  5464  032E  0087               	movwf	7
  5465  032F  0820               	movf	??_I2C_Master_Reception,w
  5466  0330  0081               	movwf	1
  5467  0331                     l402:	
  5468                           ;MCU_B1.c: 582: while (!ACKEN)
  5469                           
  5470  0331  0024               	movlb	4	; select bank4
  5471  0332  1A16               	btfsc	22,4	;volatile
  5472  0333  2B36               	goto	l405
  5473                           
  5474                           ;MCU_B1.c: 583: ACKEN = 1;
  5475  0334  1616               	bsf	22,4	;volatile
  5476  0335  2B31               	goto	l402
  5477  0336                     l405:	
  5478                           ;MCU_B1.c: 584: while (ACKEN);
  5479                           
  5480  0336  1A16               	btfsc	22,4	;volatile
  5481  0337  2B36               	goto	l405
  5482  0338                     l408:	
  5483                           ;MCU_B1.c: 585: while (RCEN);
  5484                           
  5485  0338  1996               	btfsc	22,3	;volatile
  5486  0339  2B38               	goto	l408
  5487                           
  5488                           ;MCU_B1.c: 586: for (i = 0; i < 32; i++) {
  5489  033A  0020               	movlb	0	; select bank0
  5490  033B  01A2               	clrf	I2C_Master_Reception@i
  5491  033C  3020               	movlw	32
  5492  033D  0222               	subwf	I2C_Master_Reception@i,w
  5493  033E  1803               	btfsc	3,0
  5494  033F  2B64               	goto	l412
  5495  0340                     l413:	
  5496                           ;MCU_B1.c: 587: while (SEN);
  5497                           
  5498  0340  0024               	movlb	4	; select bank4
  5499  0341  1816               	btfsc	22,0	;volatile
  5500  0342  2B40               	goto	l413
  5501  0343                     l416:	
  5502                           ;MCU_B1.c: 588: while (RCEN);
  5503                           
  5504  0343  1996               	btfsc	22,3	;volatile
  5505  0344  2B43               	goto	l416
  5506                           
  5507                           ;MCU_B1.c: 589: RCEN = 1;
  5508  0345  1596               	bsf	22,3	;volatile
  5509  0346                     l419:	
  5510                           ;MCU_B1.c: 590: while (RCEN);
  5511                           
  5512  0346  1996               	btfsc	22,3	;volatile
  5513  0347  2B46               	goto	l419
  5514                           
  5515                           ;MCU_B1.c: 591: I2C->BufferReader[i] = SSPBUF;
  5516  0348  0811               	movf	17,w	;volatile
  5517  0349  0020               	movlb	0	; select bank0
  5518  034A  00A0               	movwf	??_I2C_Master_Reception
  5519  034B  0822               	movf	I2C_Master_Reception@i,w
  5520  034C  075C               	addwf	_I2C,w
  5521  034D  00A1               	movwf	??_I2C_Master_Reception+1
  5522  034E  0821               	movf	??_I2C_Master_Reception+1,w
  5523  034F  0086               	movwf	6
  5524  0350  3001               	movlw	1	; select bank2/3
  5525  0351  0087               	movwf	7
  5526  0352  0820               	movf	??_I2C_Master_Reception,w
  5527  0353  0081               	movwf	1
  5528  0354                     l422:	
  5529                           ;MCU_B1.c: 592: while (!ACKEN)
  5530                           
  5531  0354  0024               	movlb	4	; select bank4
  5532  0355  1A16               	btfsc	22,4	;volatile
  5533  0356  2B59               	goto	l425
  5534                           
  5535                           ;MCU_B1.c: 593: ACKEN = 1;
  5536  0357  1616               	bsf	22,4	;volatile
  5537  0358  2B54               	goto	l422
  5538  0359                     l425:	
  5539                           ;MCU_B1.c: 594: while (ACKEN);
  5540                           
  5541  0359  1A16               	btfsc	22,4	;volatile
  5542  035A  2B59               	goto	l425
  5543  035B  3001               	movlw	1
  5544  035C  0020               	movlb	0	; select bank0
  5545  035D  00A0               	movwf	??_I2C_Master_Reception
  5546  035E  0820               	movf	??_I2C_Master_Reception,w
  5547  035F  07A2               	addwf	I2C_Master_Reception@i,f
  5548  0360  3020               	movlw	32
  5549  0361  0222               	subwf	I2C_Master_Reception@i,w
  5550  0362  1C03               	skipc
  5551  0363  2B40               	goto	l413
  5552  0364                     l412:	
  5553                           
  5554                           ;MCU_B1.c: 596: }
  5555                           ;MCU_B1.c: 604: RCEN = 1;
  5556  0364  0024               	movlb	4	; select bank4
  5557  0365  1596               	bsf	22,3	;volatile
  5558  0366                     l428:	
  5559                           ;MCU_B1.c: 605: while (RCEN);
  5560                           
  5561  0366  1996               	btfsc	22,3	;volatile
  5562  0367  2B66               	goto	l428
  5563  0368                     l431:	
  5564                           ;MCU_B1.c: 607: while (SEN);
  5565                           
  5566  0368  1C16               	btfss	22,0	;volatile
  5567  0369  2B6C               	goto	l434
  5568  036A  2B68               	goto	l431
  5569  036B                     l435:	
  5570                           ;MCU_B1.c: 608: while (!PEN)
  5571                           
  5572                           
  5573                           ;MCU_B1.c: 609: PEN = 1;
  5574  036B  1516               	bsf	22,2	;volatile
  5575  036C                     l434:	
  5576  036C  1D16               	btfss	22,2	;volatile
  5577  036D  2B6B               	goto	l435
  5578  036E                     l437:	
  5579                           ;MCU_B1.c: 610: while (PEN);
  5580                           
  5581  036E  1D16               	btfss	22,2	;volatile
  5582  036F  0008               	return
  5583  0370  2B6E               	goto	l437
  5584  0371                     __end_of_I2C_Master_Reception:	
  5585                           
  5586                           	psect	intentry
  5587  0004                     __pintentry:	
  5588 ;; *************** function _ISR *****************
  5589 ;; Defined at:
  5590 ;;		line 104 in file "../../src/MCU_B1.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;		None               void
  5597 ;; Registers used:
  5598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5604 ;;      Params:         0       0       0       0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0
  5606 ;;      Temps:          1       0       0       0       0       0       0       0
  5607 ;;      Totals:         1       0       0       0       0       0       0       0
  5608 ;;Total ram usage:        1 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    3
  5611 ;; This function calls:
  5612 ;;		_I2C_ISR
  5613 ;;		_TMR1_ISR
  5614 ;;		_UART_ISR
  5615 ;; This function is called by:
  5616 ;;		Interrupt level 1
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620  0004                     _ISR:	
  5621                           
  5622                           ;incstack = 0
  5623                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5624  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5625  0005  3180               	pagesel	$
  5626  0006  0020               	movlb	0	; select bank0
  5627  0007  087F               	movf	127,w
  5628  0008  00F5               	movwf	??_ISR
  5629                           
  5630                           ;MCU_B1.c: 106: ;;
  5631                           ;MCU_B1.c: 108: ;;
  5632                           ;MCU_B1.c: 110: TMR1_ISR();
  5633  0009  3185  259F  3180   	fcall	_TMR1_ISR
  5634                           
  5635                           ;MCU_B1.c: 114: ;;
  5636                           ;MCU_B1.c: 116: UART_ISR();
  5637  000C  3185  254A  3180   	fcall	_UART_ISR
  5638                           
  5639                           ;MCU_B1.c: 118: I2C_ISR();
  5640  000F  3186  265F         	fcall	_I2C_ISR
  5641  0011  0875               	movf	??_ISR,w
  5642  0012  0020               	movlb	0	; select bank0
  5643  0013  00FF               	movwf	127
  5644  0014  107E               	bcf	126,0	;clear compiler interrupt flag
  5645  0015  0009               	retfie
  5646  0016                     __end_of_ISR:	
  5647                           
  5648                           	psect	text25
  5649  054A                     __ptext25:	
  5650 ;; *************** function _UART_ISR *****************
  5651 ;; Defined at:
  5652 ;;		line 679 in file "../../src/MCU_B1.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  i               1    4[COMMON] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;		None               void
  5659 ;; Registers used:
  5660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5666 ;;      Params:         0       0       0       0       0       0       0       0
  5667 ;;      Locals:         1       0       0       0       0       0       0       0
  5668 ;;      Temps:          2       0       0       0       0       0       0       0
  5669 ;;      Totals:         3       0       0       0       0       0       0       0
  5670 ;;Total ram usage:        3 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    2
  5673 ;; This function calls:
  5674 ;;		_getche
  5675 ;; This function is called by:
  5676 ;;		_ISR
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           
  5681                           ;psect for function _UART_ISR
  5682  054A                     _UART_ISR:	
  5683                           
  5684                           ;MCU_B1.c: 680: char i;
  5685                           ;MCU_B1.c: 681: if (RCIE && RCIF) {
  5686                           
  5687                           ;incstack = 0
  5688                           ; Regs used in _UART_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5689  054A  0021               	movlb	1	; select bank1
  5690  054B  1E91               	btfss	17,5	;volatile
  5691  054C  0008               	return
  5692  054D  0020               	movlb	0	; select bank0
  5693  054E  1E91               	btfss	17,5	;volatile
  5694  054F  0008               	return
  5695                           
  5696                           ;MCU_B1.c: 682: RCIE = 0;
  5697  0550  0021               	movlb	1	; select bank1
  5698  0551  1291               	bcf	17,5	;volatile
  5699                           
  5700                           ;MCU_B1.c: 683: for (i = 0; i < 32; i++) {
  5701  0552  01F4               	clrf	UART_ISR@i
  5702  0553  3020               	movlw	32
  5703  0554  0274               	subwf	UART_ISR@i,w
  5704  0555  1803               	btfsc	3,0
  5705  0556  2D6E               	goto	i1l2222
  5706  0557                     i1l2216:	
  5707                           
  5708                           ;MCU_B1.c: 684: UART->RxData[i] = getche();
  5709  0557  3187  2724  3185   	fcall	_getche
  5710  055A  00F2               	movwf	??_UART_ISR
  5711  055B  0874               	movf	UART_ISR@i,w
  5712  055C  3E20               	addlw	32
  5713  055D  0020               	movlb	0	; select bank0
  5714  055E  075A               	addwf	_UART,w
  5715  055F  00F3               	movwf	??_UART_ISR+1
  5716  0560  0873               	movf	??_UART_ISR+1,w
  5717  0561  0086               	movwf	6
  5718  0562  3001               	movlw	1	; select bank2/3
  5719  0563  0087               	movwf	7
  5720  0564  0872               	movf	??_UART_ISR,w
  5721  0565  0081               	movwf	1
  5722  0566  3001               	movlw	1
  5723  0567  00F2               	movwf	??_UART_ISR
  5724  0568  0872               	movf	??_UART_ISR,w
  5725  0569  07F4               	addwf	UART_ISR@i,f
  5726  056A  3020               	movlw	32
  5727  056B  0274               	subwf	UART_ISR@i,w
  5728  056C  1C03               	skipc
  5729  056D  2D57               	goto	i1l2216
  5730  056E                     i1l2222:	
  5731                           
  5732                           ;MCU_B1.c: 686: }
  5733                           ;MCU_B1.c: 687: UART->RxGO = 1;
  5734  056E  0020               	movlb	0	; select bank0
  5735  056F  085A               	movf	_UART,w
  5736  0570  3E43               	addlw	67
  5737  0571  0086               	movwf	6
  5738  0572  3001               	movlw	1	; select bank2/3
  5739  0573  0087               	movwf	7
  5740  0574  1481               	bsf	1,1
  5741  0575  0008               	return
  5742  0576                     __end_of_UART_ISR:	
  5743                           
  5744                           	psect	text26
  5745  0724                     __ptext26:	
  5746 ;; *************** function _getche *****************
  5747 ;; Defined at:
  5748 ;;		line 789 in file "../../src/MCU_B1.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  c               1    1[COMMON] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      unsigned char 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, pclath, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5762 ;;      Params:         0       0       0       0       0       0       0       0
  5763 ;;      Locals:         1       0       0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0
  5765 ;;      Totals:         1       0       0       0       0       0       0       0
  5766 ;;Total ram usage:        1 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    1
  5769 ;; This function calls:
  5770 ;;		_getch
  5771 ;;		i1_putch
  5772 ;; This function is called by:
  5773 ;;		_UART_ISR
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function _getche
  5779  0724                     _getche:	
  5780                           
  5781                           ;MCU_B1.c: 790: unsigned char c;
  5782                           ;MCU_B1.c: 791: putch(c = getch());
  5783                           
  5784                           ;incstack = 0
  5785                           ; Regs used in _getche: [wreg+status,2+status,0+pclath+cstack]
  5786  0724  3187  2740  3187   	fcall	_getch
  5787  0727  00F1               	movwf	getche@c
  5788  0728  3187  272C         	fcall	i1_putch
  5789                           
  5790                           ;MCU_B1.c: 792: return c;
  5791  072A  0871               	movf	getche@c,w
  5792  072B  0008               	return
  5793  072C                     __end_of_getche:	
  5794                           
  5795                           	psect	text27
  5796  072C                     __ptext27:	
  5797 ;; *************** function i1_putch *****************
  5798 ;; Defined at:
  5799 ;;		line 773 in file "../../src/MCU_B1.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  byte            1    wreg     unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  byte            1    0[COMMON] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;		None               void
  5806 ;; Registers used:
  5807 ;;		wreg
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5813 ;;      Params:         0       0       0       0       0       0       0       0
  5814 ;;      Locals:         1       0       0       0       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0
  5816 ;;      Totals:         1       0       0       0       0       0       0       0
  5817 ;;Total ram usage:        1 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_getche
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           
  5827                           ;psect for function i1_putch
  5828  072C                     i1_putch:	
  5829                           
  5830                           ;incstack = 0
  5831                           ; Regs used in i1_putch: [wreg]
  5832                           ;i1putch@byte stored from wreg
  5833  072C  00F0               	movwf	i1putch@byte
  5834  072D                     i1l489:	
  5835                           ;MCU_B1.c: 776: continue;
  5836                           
  5837                           ;MCU_B1.c: 775: while (!TXIF)
  5838                           
  5839  072D  0020               	movlb	0	; select bank0
  5840  072E  1E11               	btfss	17,4	;volatile
  5841  072F  2F2D               	goto	i1l489
  5842                           
  5843                           ;MCU_B1.c: 777: TXREG = byte;
  5844  0730  0870               	movf	i1putch@byte,w
  5845  0731  0023               	movlb	3	; select bank3
  5846  0732  009A               	movwf	26	;volatile
  5847  0733  0008               	return
  5848  0734                     __end_ofi1_putch:	
  5849                           
  5850                           	psect	text28
  5851  0740                     __ptext28:	
  5852 ;; *************** function _getch *****************
  5853 ;; Defined at:
  5854 ;;		line 781 in file "../../src/MCU_B1.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      unsigned char 
  5861 ;; Registers used:
  5862 ;;		wreg
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5868 ;;      Params:         0       0       0       0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_getche
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           
  5882                           ;psect for function _getch
  5883  0740                     _getch:	
  5884  0740                     i1l495:	
  5885                           ;MCU_B1.c: 784: continue;
  5886                           
  5887                           ;MCU_B1.c: 783: while (!RCIF)
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in _getch: [wreg]
  5891                           
  5892  0740  0020               	movlb	0	; select bank0
  5893  0741  1E91               	btfss	17,5	;volatile
  5894  0742  2F40               	goto	i1l495
  5895                           
  5896                           ;MCU_B1.c: 785: return RCREG;
  5897  0743  0023               	movlb	3	; select bank3
  5898  0744  0819               	movf	25,w	;volatile
  5899  0745  0008               	return
  5900  0746                     __end_of_getch:	
  5901                           
  5902                           	psect	text29
  5903  059F                     __ptext29:	
  5904 ;; *************** function _TMR1_ISR *****************
  5905 ;; Defined at:
  5906 ;;		line 251 in file "../../src/MCU_B1.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5920 ;;      Params:         0       0       0       0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0
  5923 ;;      Totals:         0       0       0       0       0       0       0       0
  5924 ;;Total ram usage:        0 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_ISR
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           
  5934                           ;psect for function _TMR1_ISR
  5935  059F                     _TMR1_ISR:	
  5936                           
  5937                           ;MCU_B1.c: 252: if (TMR1IE && TMR1IF) {
  5938                           
  5939                           ;incstack = 0
  5940                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5941  059F  0021               	movlb	1	; select bank1
  5942  05A0  1C11               	btfss	17,0	;volatile
  5943  05A1  0008               	return
  5944  05A2  0020               	movlb	0	; select bank0
  5945  05A3  1C11               	btfss	17,0	;volatile
  5946  05A4  0008               	return
  5947                           
  5948                           ;MCU_B1.c: 253: TMR1H = ((65536-700)/256);
  5949  05A5  30FD               	movlw	253
  5950  05A6  0097               	movwf	23	;volatile
  5951                           
  5952                           ;MCU_B1.c: 254: TMR1L = ((65536-700)%256);
  5953  05A7  3044               	movlw	68
  5954  05A8  0096               	movwf	22	;volatile
  5955                           
  5956                           ;MCU_B1.c: 255: TMR1IF = 0;
  5957  05A9  1011               	bcf	17,0	;volatile
  5958                           
  5959                           ;MCU_B1.c: 256: Timer1->Count++;
  5960  05AA  0A79               	incf	_Timer1,w
  5961  05AB  0086               	movwf	6
  5962  05AC  0187               	clrf	7
  5963  05AD  3001               	movlw	1
  5964  05AE  0781               	addwf	1,f
  5965  05AF  3141               	addfsr 1,1
  5966  05B0  1803               	skipnc
  5967  05B1  0A81               	incf	1,f
  5968                           
  5969                           ;MCU_B1.c: 257: if (Timer1->Count == 20)
  5970  05B2  0A79               	incf	_Timer1,w
  5971  05B3  0086               	movwf	6
  5972  05B4  0187               	clrf	7
  5973  05B5  3F40               	moviw [0]fsr1
  5974  05B6  3A14               	xorlw	20
  5975  05B7  1D03               	skipz
  5976  05B8  2DBB               	goto	u220_25
  5977  05B9  3F41               	moviw [1]fsr1
  5978  05BA  3A00               	xorlw	0
  5979  05BB                     u220_25:	
  5980  05BB  1D03               	skipz
  5981  05BC  0008               	return
  5982                           
  5983                           ;MCU_B1.c: 258: {
  5984                           ;MCU_B1.c: 259: Timer1->Count = 0;
  5985  05BD  0A79               	incf	_Timer1,w
  5986  05BE  0086               	movwf	6
  5987  05BF  0187               	clrf	7
  5988  05C0  3000               	movlw	0
  5989  05C1  3FC0               	movwi [0]fsr1
  5990  05C2  3FC1               	movwi [1]fsr1
  5991                           
  5992                           ;MCU_B1.c: 260: myMain->T1_Timerout = 1;
  5993  05C3  085B               	movf	_myMain,w
  5994  05C4  0086               	movwf	6
  5995  05C5  0187               	clrf	7
  5996  05C6  1501               	bsf	1,2
  5997  05C7  0008               	return
  5998  05C8                     __end_of_TMR1_ISR:	
  5999                           
  6000                           	psect	text30
  6001  065F                     __ptext30:	
  6002 ;; *************** function _I2C_ISR *****************
  6003 ;; Defined at:
  6004 ;;		line 438 in file "../../src/MCU_B1.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;		None               void
  6011 ;; Registers used:
  6012 ;;		wreg, fsr1l, fsr1h
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6018 ;;      Params:         0       0       0       0       0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_ISR
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           
  6032                           ;psect for function _I2C_ISR
  6033  065F                     _I2C_ISR:	
  6034                           
  6035                           ;MCU_B1.c: 439: if (SSPIE && SSPIF) {
  6036                           
  6037                           ;incstack = 0
  6038                           ; Regs used in _I2C_ISR: [wregfsr1]
  6039  065F  0021               	movlb	1	; select bank1
  6040  0660  1D91               	btfss	17,3	;volatile
  6041  0661  0008               	return
  6042  0662  0020               	movlb	0	; select bank0
  6043  0663  1D91               	btfss	17,3	;volatile
  6044  0664  0008               	return
  6045                           
  6046                           ;MCU_B1.c: 440: SSPIE = 0;
  6047  0665  0021               	movlb	1	; select bank1
  6048  0666  1191               	bcf	17,3	;volatile
  6049                           
  6050                           ;MCU_B1.c: 441: I2C->SlaveGO = 1;
  6051  0667  0020               	movlb	0	; select bank0
  6052  0668  085C               	movf	_I2C,w
  6053  0669  3E42               	addlw	66
  6054  066A  0086               	movwf	6
  6055  066B  3001               	movlw	1	; select bank2/3
  6056  066C  0087               	movwf	7
  6057  066D  1401               	bsf	1,0
  6058  066E  0008               	return
  6059  066F                     __end_of_I2C_ISR:	
  6060  007E                     btemp	set	126	;btemp
  6061  007E                     pic14e$flags	set	126
  6062  007E                     wtemp	set	126
  6063  007E                     wtemp0	set	126
  6064  0080                     wtemp1	set	128
  6065  0082                     wtemp2	set	130
  6066  0084                     wtemp3	set	132
  6067  0086                     wtemp4	set	134
  6068  0088                     wtemp5	set	136
  6069  007F                     wtemp6	set	127
  6070  007E                     ttemp	set	126
  6071  007E                     ttemp0	set	126
  6072  0081                     ttemp1	set	129
  6073  0084                     ttemp2	set	132
  6074  0087                     ttemp3	set	135
  6075  007F                     ttemp4	set	127
  6076  007E                     ltemp	set	126
  6077  007E                     ltemp0	set	126
  6078  0082                     ltemp1	set	130
  6079  0086                     ltemp2	set	134
  6080  0080                     ltemp3	set	128


Data Sizes:
    Strings     4
    Constant    10
    Data        58
    BSS         156
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     40      61
    BANK1            80      0      58
    BANK2            80      0      67
    BANK3            80      0      68
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S1597$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    Product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), VarProduct(BANK1[32]), 

    Segment	PTR struct Segment size(1) Largest target is 26
		 -> NULL(NULL[0]), VarSegment(BANK1[26]), 

    UART	PTR struct UART size(1) Largest target is 68
		 -> NULL(NULL[0]), VarUart(BANK3[68]), 

    I2C	PTR struct I2C size(1) Largest target is 67
		 -> NULL(NULL[0]), VarI2C(BANK2[67]), 

    myMain	PTR struct myMain size(1) Largest target is 17
		 -> NULL(NULL[0]), _myMain(BANK0[17]), 

    Timer1	PTR struct Timer1 size(1) Largest target is 3
		 -> NULL(NULL[0]), VarTimer1(COMMON[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_ISR
    _UART_ISR->_getche
    _getche->i1_putch

Critical Paths under _main in BANK0

    _main->_UART_Main
    _UART_Main->_UART_Transmit
    _setSegmentDisplayNumber->___awdiv
    _UART_Transmit->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _Mcu_Initialization->_I2C_Set
    _Mcu_Initialization->_TMR1_Set
    _Mcu_Initialization->_UART_Set
    _I2C_Main->_I2C_Master_Reception

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    4152
                                             36 BANK0      4     0      4
                           _I2C_Main
                 _Mcu_Initialization
             _SegmentDisplay_Initial
                _SegmentDisplay_Main
                          _UART_Main
              _myMain_Initialization
                            _my_Main
 ---------------------------------------------------------------------------------
 (1) _my_Main                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Main                                            2     2      0    3824
                                             34 BANK0      2     2      0
                       _UART_Receive
                      _UART_Transmit
            _setSegmentDisplayNumber
 ---------------------------------------------------------------------------------
 (2) _setSegmentDisplayNumber                              7     5      2    2203
                                              9 BANK0      7     5      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     823
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     835
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit                                        6     6      0    1491
                                             30 BANK0      4     4      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              16    12      4    1392
                                             14 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_Receive                                         4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Main                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SegmentDisplay_Initial                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                           _Fosc_Set
                            _I2C_Set
                             _IO_Set
                           _TMR1_Set
                           _UART_Set
 ---------------------------------------------------------------------------------
 (2) _UART_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Main                                             4     4      0     328
                                              3 BANK0      4     4      0
               _I2C_Master_Reception
            _I2C_Master_Transmission
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Transmission                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Reception                                 3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0     113
                                              5 COMMON     1     1      0
                            _I2C_ISR
                           _TMR1_ISR
                           _UART_ISR
 ---------------------------------------------------------------------------------
 (6) _UART_ISR                                             3     3      0     113
                                              2 COMMON     3     3      0
                             _getche
 ---------------------------------------------------------------------------------
 (7) _getche                                               1     1      0      45
                                              1 COMMON     1     1      0
                              _getch
                            i1_putch
 ---------------------------------------------------------------------------------
 (8) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Main
     _I2C_Master_Reception
     _I2C_Master_Transmission
   _Mcu_Initialization
     _Fosc_Set
     _I2C_Set
     _IO_Set
     _TMR1_Set
     _UART_Set
   _SegmentDisplay_Initial
   _SegmentDisplay_Main
   _UART_Main
     _UART_Receive
     _UART_Transmit
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _setSegmentDisplayNumber
       ___awdiv
       ___awmod
   _myMain_Initialization
   _my_Main

 _ISR (ROOT)
   _I2C_ISR
   _TMR1_ISR
   _UART_ISR
     _getche
       _getch
       i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     109       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      3D       6       76.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      3A       8       72.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      43      10       83.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      44      12       85.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     109      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Oct 04 10:17:53 2014

                              _BF 10A0                      ___awdiv@sign 0026         ??_setSegmentDisplayNumber 002B  
                             l402 0331                               _I2C 005C                               l412 0364  
                             l413 0340                               l405 0336                               l341 0306  
                             l422 0354                               l334 02E3                               l431 0368  
                             l416 0343                               l408 0338                               l352 044B  
                             l425 0359                               l434 036C                               l435 036B  
                             l419 0346                               l363 0459                               l355 044F  
                             l428 0366                               l372 0475                               l437 036E  
                             l349 0447                               l390 031E                               l366 0468  
                             l358 0451                               l375 047A                               l384 0316  
                             l376 0479                               l393 0320                               l369 046A  
                             l378 047C                               l387 031A                               l396 0322  
                             l399 0325                               l489 071E                               l851 022F  
                             _CKP 10AC                               _GIE 005F                               _RA1 0061  
                             _RC0 0070                               _RA4 0064                               _RA5 0065  
                             _RA6 0066                               _RA7 0067                               _PEN 10B2  
                             _ISR 0004                               _SEN 10B0                               _RX9 0CEE  
                             _TX9 0CF6                   __end_of_I2C_ISR 066F                   __end_of_I2C_Set 071C  
                    ___awmod@sign 0026                               wreg 0009     __size_of_I2C_Master_Reception 005B  
                            ?_ISR 0070                              l2420 0494                              l2500 01F5  
                            l2430 04AF                              l2502 0178                              l2512 037C  
                            l2426 04A6                              l2418 0488                              l2442 0522  
                            l2530 039B                              l2444 052E                              l2452 0543  
                            l2540 03B6                              l2462 0194                              l2518 0387  
                            l2448 053A                              l2544 03BE                              l2536 03AD  
                            l2528 038F                              l2560 03D7                              l2490 01E8  
                            l2482 01C9                              l2570 03E9                              l2722 00B5  
                            l2706 008E                              l2468 01AD                              l2556 03D0  
                            l2494 01F0                              l2478 01C3                              l2582 0406  
                            l2574 03F5                              l2742 015E                              l2734 013C  
                            l2568 03DD                              l2808 04D9                              l2842 026D  
                            l2834 0259                              l2578 03FE                              l2746 016D  
                            l2738 014D                              l2852 029D                              l2790 02F9  
                            l2838 0263                              l2846 0275                              l2694 0514  
                            l2784 02DC                              l2688 04F8                              l2778 02C2  
                            l2878 05D2             _myMain_Initialization 066F                              STR_1 070A  
                            _LATA 010C                              _LATB 010D                              _LATC 010E  
                            u2605 049F                              u3325 0063                              u2615 04A7  
                            u3335 0080                              u3355 009D                              u2645 0525  
                            u2725 01DE                              u2805 0392                              u3605 058D  
                            u2575 048B                              u2665 0534                              u2825 039C  
                            u2905 03E0                              u2595 0495                              u2675 053B  
                            u2835 03A6                              _PEIE 005E                              u2845 03AE  
                            u2925 03EF                              u2935 03F6                              _RCIE 048D  
                            _RCEN 10B3                              _RCIF 008D                              _UART 005A  
                            _TXIE 048C                              _TXIF 008C                              _R_nW 10A2  
                            _main 05C8                  __end_of_I2C_Main 0316                              fsr0h 0005  
                            fsr1h 0007                              fsr0l 0004                              indf0 0000  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                            ltemp 007E                              start 0016                              ttemp 007E  
                            wtemp 007E                   __end_ofi1_putch 0734                             ??_ISR 0075  
                           ?_main 0044                             _ACKEN 10B4                   __end_of___awdiv 03C5  
                           _BRG16 0CFB                     __CFG_WDTE$OFF 0000                   __end_of___awmod 040D  
                 ___awdiv@divisor 0020                             _T1CON 0018                   __end_of___lwdiv 04B6  
                 __end_of___lwmod 054A                             i1l495 0740                             i1l489 072D  
                 ___awdiv@counter 0025                             _RCREG 0199                             _RCSTA 019D  
                           _TMR1H 0017                             _TMR1L 0016                             _SPBRG 019B  
                           _PORTA 000C                             _PORTB 000D                             _PORTC 000E  
                           _TRISA 008C                             _TRISB 008D                             _TRISC 008E  
                           _SSPIE 048B                             _SSPIF 008B                             _SSPOV 10AE  
                           _TXREG 019A                             _TXSTA 019E                     __CFG_WRT$BOOT 0000  
                __end_of_UART_ISR 0576                __size_of_UART_Main 0034                  __end_of_TMR1_ISR 05C8  
                __end_of_UART_Set 0629                  __end_of_TMR1_Set 065F                             _getch 0740  
                 __end_of_dpowers 070A                   __end_of_my_Main 059F                             _putch 071C  
                           ltemp0 007E                             ltemp1 0082                             ltemp2 0086  
                           ltemp3 0080   __end_of_setSegmentDisplayNumber 0173                             ttemp0 007E  
                           ttemp1 0081                             ttemp2 0084                             ttemp3 0087  
                           ttemp4 007F                             status 0003                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                 __initialization 0018                      __end_of_main 05EF                  __end_of_Fosc_Set 074A  
__size_of_I2C_Master_Transmission 0038                         ??_I2C_ISR 0070                         ??_I2C_Set 0020  
                          ??_main 0048             I2C_Master_Reception@i 0022                         I2C_Main@i 0026  
          ?_myMain_Initialization 0070                            ?_getch 0070                  ___awdiv@dividend 0022  
                          _ANSELA 018C                            ?_putch 0070                            _ANSELB 018D  
                          _ANSELC 018E                            i1l2222 056E                            i1l2216 0557  
                          u220_25 05BB                            _OSCCON 0099                         ??i1_putch 0070  
                      _VarSegment 00C0                            _TMR1IE 0488                            _TMR1IF 0088  
                          _SPBRGH 019C                            _IO_Set 0629                            _SSPADD 0212  
                          _TRISC6 0476                            _TRISC7 0477                            _SSPBUF 0211  
                      _VarProduct 00A0        __end_of_Mcu_Initialization 068D                            _VarI2C 0120  
                          _Timer1 0079                 __end_of_UART_Main 04EA                         ??___awdiv 0024  
                       ??___awmod 0024                         ??___lwdiv 0024                         ??___lwmod 002C  
                          _getche 0724                            _myMain 005B                  ___awdiv@quotient 0027  
                 ___awmod@divisor 0020                   ___awmod@counter 0025                            _printf 0173  
                       ?_I2C_Main 0070                         ??_my_Main 0020           __end_of__initialization 003E  
           __end_of_UART_Transmit 0610                    __pcstackCOMMON 0070                      __pidataBANK1 040D  
                       ?_UART_ISR 0070                         ?_TMR1_ISR 0070                         ?_UART_Set 0070  
                   __end_of_getch 0746                         ?_TMR1_Set 0070                       i1putch@byte 0070  
                   __end_of_putch 0724                        ??_I2C_Main 0023                           ??_getch 0070  
                         ??_putch 0020                        __pbssBANK0 0048                        __pbssBANK2 0120  
                      __pbssBANK3 01A0                         ?_Fosc_Set 0070                           ?_IO_Set 0070  
                      __pnvCOMMON 0079      __end_of_I2C_Master_Reception 0371                        __pmaintext 05C8  
                      ??_UART_ISR 0072           _I2C_Master_Transmission 0447                        ??_TMR1_ISR 0070  
                      ??_UART_Set 0020                        ??_TMR1_Set 0020                        __pintentry 0004  
                         ?_getche 0070                           _I2C_ISR 065F                           _ACKSTAT 10B6  
    __size_of_SegmentDisplay_Main 0073                           _I2C_Set 070E                         UART_ISR@i 0074  
                         ?_printf 002E                           _SSPCON1 0215                           _SSPCON2 0216  
                         _SSPSTAT 0214                        ??_Fosc_Set 0020                           i1_putch 072C  
                   ?_UART_Receive 0070                   __size_of_IO_Set 0016                           _Segment 0059  
                         _VarUart 01A0                           _Product 007A          ?_setSegmentDisplayNumber 0029  
                         ___awdiv 0371                           ___awmod 03C5                           ___lwdiv 047F  
                         ___lwmod 051B                   __size_of_getche 0008                           __myMain 0048  
        ??_SegmentDisplay_Initial 0020                           __ptext1 0576                           __ptext2 066F  
                         __ptext3 04B6                           __ptext4 0042                           __ptext5 03C5  
                         __ptext6 0371                           __ptext7 05EF                           __ptext8 0173  
                         __ptext9 071C                   __size_of_printf 00BD                      __size_of_ISR 0012  
                         _dpowers 0700           ??_myMain_Initialization 0020                  ___awmod@dividend 0022  
                         _my_Main 0576                           getche@c 0071                           clrloop0 0735  
            end_of_initialization 003E                    ??_UART_Receive 0020                           init_ram 073A  
                         initloop 073B                    UART_Transmit@i 0041         ??_I2C_Master_Transmission 0020  
                         printf@c 003D                           printf@f 002E                      __pstringtext 0700  
                       _UART_Main 04B6          I2C_Master_Transmission@i 0021                _Mcu_Initialization 067E  
                __CFG_FOSC$INTOSC 0000                 __size_of_I2C_Main 0073               ?_Mcu_Initialization 0070  
            _I2C_Master_Reception 0316                    __end_of_IO_Set 063F              ??_Mcu_Initialization 0021  
   setSegmentDisplayNumber@number 0029                        ?_UART_Main 0070                 __size_of_UART_ISR 002C  
               __size_of_TMR1_ISR 0029                    __end_of_getche 072C                 __size_of_UART_Set 0019  
 __size_of_SegmentDisplay_Initial 0010                 __size_of_TMR1_Set 0010                    __end_of_printf 0230  
             start_initialization 0018                       __end_of_ISR 0016             ?_I2C_Master_Reception 0070  
             _SegmentDisplay_Main 0230                          ??_IO_Set 0020                 __size_of_Fosc_Set 0004  
                       _VarTimer1 0076                          ??_getche 0071                       __pdataBANK1 00A0  
                        ?_I2C_ISR 0070              ?_SegmentDisplay_Main 0070                          ?_I2C_Set 0070  
                        ??_printf 0032              __end_of_UART_Receive 051B                       __pbssCOMMON 0076  
                       ___latbits 0002            __size_of_UART_Transmit 0021                     __pcstackBANK0 0020  
             __end_of__stringdata 070E            _SegmentDisplay_Initial 063F                          ?i1_putch 0070  
                       __pnvBANK0 005A                  ___lwdiv@dividend 0022                          ?___awdiv 0020  
                        ?___awmod 0020                          ?___lwdiv 0020             ??_SegmentDisplay_Main 0020  
                        ?___lwmod 0028                       ??_UART_Main 0042                     UART_Receive@i 0023  
                        _I2C_Main 02A3            ??_I2C_Master_Reception 0020                          ?_my_Main 0070  
  __size_of_myMain_Initialization 000F  __size_of_setSegmentDisplayNumber 0131     __end_of_myMain_Initialization 067E  
                ___lwdiv@quotient 0026          setSegmentDisplayNumber@i 002F                    __size_of_getch 0006  
                  __size_of_putch 0008                         clear_ram0 0734                     _UART_Transmit 05EF  
                        _UART_ISR 054A                          _TMR1_ISR 059F                          _UART_Set 0610  
                        _TMR1_Set 064F                  __size_of_I2C_ISR 0010                  __size_of_I2C_Set 000E  
                     __stringdata 070A                        printf@_val 0039                        printf@flag 0037  
                      printf@prec 0038                          _Fosc_Set 0746                  __size_ofi1_putch 0008  
                  ?_UART_Transmit 0070             __size_of_UART_Receive 0031                  __size_of___awdiv 0054  
                __size_of___awmod 0048                  __size_of___lwdiv 0037                  __size_of___lwmod 002F  
                 ___lwdiv@divisor 0020                  __size_of_my_Main 0029                   ___lwdiv@counter 0025  
                        __ptext10 051B                          __ptext11 047F                          __ptext20 0746  
                        __ptext12 04EA                          __ptext21 02A3                          __ptext13 0230  
                        __ptext30 065F                          __ptext22 0447                          __ptext14 063F  
                        __ptext23 0316                          __ptext15 067E                          __ptext16 0610  
                        __ptext25 054A                          __ptext17 064F                          __ptext26 0724  
                        __ptext18 0629                          __ptext27 072C                          __ptext19 070E  
                        __ptext28 0740                          __ptext29 059F          ?_I2C_Master_Transmission 0070  
                   __size_of_main 0027                      _UART_Receive 04EA       __size_of_Mcu_Initialization 000F  
                        main@argc 0044                          main@argv 0046                         putch@byte 0020  
         _setSegmentDisplayNumber 0042           ?_SegmentDisplay_Initial 0070                       pic14e$flags 007E  
                        intlevel1 0000                  ___lwmod@dividend 002A                   ??_UART_Transmit 003E  
                        printf@ap 0036                   ___lwmod@divisor 0028                   ___lwmod@counter 002D  
  __end_of_SegmentDisplay_Initial 064F   __end_of_I2C_Master_Transmission 047F       __end_of_SegmentDisplay_Main 02A3  
