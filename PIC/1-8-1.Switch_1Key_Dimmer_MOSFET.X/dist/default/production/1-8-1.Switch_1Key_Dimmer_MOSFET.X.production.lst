

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Apr 11 16:39:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	psect	text82,local,class=CODE,merge=1,delta=2
   100                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text85,local,class=CODE,merge=1,delta=2
   103                           	psect	text86,local,class=CODE,merge=1,delta=2
   104                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	intentry,global,class=CODE,delta=2
   107                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   111                           	dabs	1,0x7E,2
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  0116                     	;# 
   159  0117                     	;# 
   160  011D                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  0191                     	;# 
   165  0191                     	;# 
   166  0192                     	;# 
   167  0193                     	;# 
   168  0193                     	;# 
   169  0194                     	;# 
   170  0195                     	;# 
   171  0196                     	;# 
   172  0197                     	;# 
   173  0199                     	;# 
   174  019A                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  020D                     	;# 
   185  0210                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  0291                     	;# 
   202  0291                     	;# 
   203  0292                     	;# 
   204  0293                     	;# 
   205  0298                     	;# 
   206  0298                     	;# 
   207  0299                     	;# 
   208  029A                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  0FE4                     	;# 
   213  0FE5                     	;# 
   214  0FE6                     	;# 
   215  0FE7                     	;# 
   216  0FE8                     	;# 
   217  0FE9                     	;# 
   218  0FEA                     	;# 
   219  0FEB                     	;# 
   220  0FED                     	;# 
   221  0FEE                     	;# 
   222  0FEF                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  018D                     	;# 
   274  018E                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0197                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0291                     	;# 
   313  0291                     	;# 
   314  0292                     	;# 
   315  0293                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  0394                     	;# 
   321  0395                     	;# 
   322  0396                     	;# 
   323  0FE4                     	;# 
   324  0FE5                     	;# 
   325  0FE6                     	;# 
   326  0FE7                     	;# 
   327  0FE8                     	;# 
   328  0FE9                     	;# 
   329  0FEA                     	;# 
   330  0FEB                     	;# 
   331  0FED                     	;# 
   332  0FEE                     	;# 
   333  0FEF                     	;# 
   334  0000                     	;# 
   335  0001                     	;# 
   336  0002                     	;# 
   337  0003                     	;# 
   338  0004                     	;# 
   339  0005                     	;# 
   340  0006                     	;# 
   341  0007                     	;# 
   342  0008                     	;# 
   343  0009                     	;# 
   344  000A                     	;# 
   345  000B                     	;# 
   346  000C                     	;# 
   347  000D                     	;# 
   348  000E                     	;# 
   349  0010                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0015                     	;# 
   353  0016                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001C                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  0116                     	;# 
   381  0117                     	;# 
   382  011D                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  018E                     	;# 
   386  0191                     	;# 
   387  0191                     	;# 
   388  0192                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0194                     	;# 
   392  0195                     	;# 
   393  0196                     	;# 
   394  0197                     	;# 
   395  0199                     	;# 
   396  019A                     	;# 
   397  019B                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019C                     	;# 
   402  019C                     	;# 
   403  019D                     	;# 
   404  019E                     	;# 
   405  019F                     	;# 
   406  020D                     	;# 
   407  0210                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0291                     	;# 
   424  0291                     	;# 
   425  0292                     	;# 
   426  0293                     	;# 
   427  0298                     	;# 
   428  0298                     	;# 
   429  0299                     	;# 
   430  029A                     	;# 
   431  0394                     	;# 
   432  0395                     	;# 
   433  0396                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  001A                     	;# 
   470  001B                     	;# 
   471  001C                     	;# 
   472  008C                     	;# 
   473  008D                     	;# 
   474  008E                     	;# 
   475  0090                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0095                     	;# 
   479  0096                     	;# 
   480  0097                     	;# 
   481  0099                     	;# 
   482  009A                     	;# 
   483  009B                     	;# 
   484  009B                     	;# 
   485  009C                     	;# 
   486  009D                     	;# 
   487  009E                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  0116                     	;# 
   492  0117                     	;# 
   493  011D                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496  018E                     	;# 
   497  0191                     	;# 
   498  0191                     	;# 
   499  0192                     	;# 
   500  0193                     	;# 
   501  0193                     	;# 
   502  0194                     	;# 
   503  0195                     	;# 
   504  0196                     	;# 
   505  0197                     	;# 
   506  0199                     	;# 
   507  019A                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019C                     	;# 
   513  019C                     	;# 
   514  019D                     	;# 
   515  019E                     	;# 
   516  019F                     	;# 
   517  020D                     	;# 
   518  0210                     	;# 
   519  0211                     	;# 
   520  0211                     	;# 
   521  0212                     	;# 
   522  0212                     	;# 
   523  0213                     	;# 
   524  0213                     	;# 
   525  0214                     	;# 
   526  0214                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0216                     	;# 
   531  0216                     	;# 
   532  0217                     	;# 
   533  0217                     	;# 
   534  0291                     	;# 
   535  0291                     	;# 
   536  0292                     	;# 
   537  0293                     	;# 
   538  0298                     	;# 
   539  0298                     	;# 
   540  0299                     	;# 
   541  029A                     	;# 
   542  0394                     	;# 
   543  0395                     	;# 
   544  0396                     	;# 
   545  0FE4                     	;# 
   546  0FE5                     	;# 
   547  0FE6                     	;# 
   548  0FE7                     	;# 
   549  0FE8                     	;# 
   550  0FE9                     	;# 
   551  0FEA                     	;# 
   552  0FEB                     	;# 
   553  0FED                     	;# 
   554  0FEE                     	;# 
   555  0FEF                     	;# 
   556  0000                     	;# 
   557  0001                     	;# 
   558  0002                     	;# 
   559  0003                     	;# 
   560  0004                     	;# 
   561  0005                     	;# 
   562  0006                     	;# 
   563  0007                     	;# 
   564  0008                     	;# 
   565  0009                     	;# 
   566  000A                     	;# 
   567  000B                     	;# 
   568  000C                     	;# 
   569  000D                     	;# 
   570  000E                     	;# 
   571  0010                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0099                     	;# 
   593  009A                     	;# 
   594  009B                     	;# 
   595  009B                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  011D                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  018E                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0194                     	;# 
   614  0195                     	;# 
   615  0196                     	;# 
   616  0197                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019C                     	;# 
   624  019C                     	;# 
   625  019D                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  020D                     	;# 
   629  0210                     	;# 
   630  0211                     	;# 
   631  0211                     	;# 
   632  0212                     	;# 
   633  0212                     	;# 
   634  0213                     	;# 
   635  0213                     	;# 
   636  0214                     	;# 
   637  0214                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0216                     	;# 
   642  0216                     	;# 
   643  0217                     	;# 
   644  0217                     	;# 
   645  0291                     	;# 
   646  0291                     	;# 
   647  0292                     	;# 
   648  0293                     	;# 
   649  0298                     	;# 
   650  0298                     	;# 
   651  0299                     	;# 
   652  029A                     	;# 
   653  0394                     	;# 
   654  0395                     	;# 
   655  0396                     	;# 
   656  0FE4                     	;# 
   657  0FE5                     	;# 
   658  0FE6                     	;# 
   659  0FE7                     	;# 
   660  0FE8                     	;# 
   661  0FE9                     	;# 
   662  0FEA                     	;# 
   663  0FEB                     	;# 
   664  0FED                     	;# 
   665  0FEE                     	;# 
   666  0FEF                     	;# 
   667  0000                     	;# 
   668  0001                     	;# 
   669  0002                     	;# 
   670  0003                     	;# 
   671  0004                     	;# 
   672  0005                     	;# 
   673  0006                     	;# 
   674  0007                     	;# 
   675  0008                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  000D                     	;# 
   681  000E                     	;# 
   682  0010                     	;# 
   683  0011                     	;# 
   684  0012                     	;# 
   685  0015                     	;# 
   686  0016                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001B                     	;# 
   693  001C                     	;# 
   694  008C                     	;# 
   695  008D                     	;# 
   696  008E                     	;# 
   697  0090                     	;# 
   698  0091                     	;# 
   699  0092                     	;# 
   700  0095                     	;# 
   701  0096                     	;# 
   702  0097                     	;# 
   703  0099                     	;# 
   704  009A                     	;# 
   705  009B                     	;# 
   706  009B                     	;# 
   707  009C                     	;# 
   708  009D                     	;# 
   709  009E                     	;# 
   710  010C                     	;# 
   711  010D                     	;# 
   712  010E                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  011D                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  018E                     	;# 
   719  0191                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0194                     	;# 
   725  0195                     	;# 
   726  0196                     	;# 
   727  0197                     	;# 
   728  0199                     	;# 
   729  019A                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019B                     	;# 
   734  019C                     	;# 
   735  019C                     	;# 
   736  019D                     	;# 
   737  019E                     	;# 
   738  019F                     	;# 
   739  020D                     	;# 
   740  0210                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0213                     	;# 
   747  0214                     	;# 
   748  0214                     	;# 
   749  0215                     	;# 
   750  0215                     	;# 
   751  0215                     	;# 
   752  0216                     	;# 
   753  0216                     	;# 
   754  0217                     	;# 
   755  0217                     	;# 
   756  0291                     	;# 
   757  0291                     	;# 
   758  0292                     	;# 
   759  0293                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  029A                     	;# 
   764  0394                     	;# 
   765  0395                     	;# 
   766  0396                     	;# 
   767  0FE4                     	;# 
   768  0FE5                     	;# 
   769  0FE6                     	;# 
   770  0FE7                     	;# 
   771  0FE8                     	;# 
   772  0FE9                     	;# 
   773  0FEA                     	;# 
   774  0FEB                     	;# 
   775  0FED                     	;# 
   776  0FEE                     	;# 
   777  0FEF                     	;# 
   778  0000                     	;# 
   779  0001                     	;# 
   780  0002                     	;# 
   781  0003                     	;# 
   782  0004                     	;# 
   783  0005                     	;# 
   784  0006                     	;# 
   785  0007                     	;# 
   786  0008                     	;# 
   787  0009                     	;# 
   788  000A                     	;# 
   789  000B                     	;# 
   790  000C                     	;# 
   791  000D                     	;# 
   792  000E                     	;# 
   793  0010                     	;# 
   794  0011                     	;# 
   795  0012                     	;# 
   796  0015                     	;# 
   797  0016                     	;# 
   798  0016                     	;# 
   799  0017                     	;# 
   800  0018                     	;# 
   801  0019                     	;# 
   802  001A                     	;# 
   803  001B                     	;# 
   804  001C                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  0090                     	;# 
   809  0091                     	;# 
   810  0092                     	;# 
   811  0095                     	;# 
   812  0096                     	;# 
   813  0097                     	;# 
   814  0099                     	;# 
   815  009A                     	;# 
   816  009B                     	;# 
   817  009B                     	;# 
   818  009C                     	;# 
   819  009D                     	;# 
   820  009E                     	;# 
   821  010C                     	;# 
   822  010D                     	;# 
   823  010E                     	;# 
   824  0116                     	;# 
   825  0117                     	;# 
   826  011D                     	;# 
   827  018C                     	;# 
   828  018D                     	;# 
   829  018E                     	;# 
   830  0191                     	;# 
   831  0191                     	;# 
   832  0192                     	;# 
   833  0193                     	;# 
   834  0193                     	;# 
   835  0194                     	;# 
   836  0195                     	;# 
   837  0196                     	;# 
   838  0197                     	;# 
   839  0199                     	;# 
   840  019A                     	;# 
   841  019B                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019C                     	;# 
   846  019C                     	;# 
   847  019D                     	;# 
   848  019E                     	;# 
   849  019F                     	;# 
   850  020D                     	;# 
   851  0210                     	;# 
   852  0211                     	;# 
   853  0211                     	;# 
   854  0212                     	;# 
   855  0212                     	;# 
   856  0213                     	;# 
   857  0213                     	;# 
   858  0214                     	;# 
   859  0214                     	;# 
   860  0215                     	;# 
   861  0215                     	;# 
   862  0215                     	;# 
   863  0216                     	;# 
   864  0216                     	;# 
   865  0217                     	;# 
   866  0217                     	;# 
   867  0291                     	;# 
   868  0291                     	;# 
   869  0292                     	;# 
   870  0293                     	;# 
   871  0298                     	;# 
   872  0298                     	;# 
   873  0299                     	;# 
   874  029A                     	;# 
   875  0394                     	;# 
   876  0395                     	;# 
   877  0396                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889  0000                     	;# 
   890  0001                     	;# 
   891  0002                     	;# 
   892  0003                     	;# 
   893  0004                     	;# 
   894  0005                     	;# 
   895  0006                     	;# 
   896  0007                     	;# 
   897  0008                     	;# 
   898  0009                     	;# 
   899  000A                     	;# 
   900  000B                     	;# 
   901  000C                     	;# 
   902  000D                     	;# 
   903  000E                     	;# 
   904  0010                     	;# 
   905  0011                     	;# 
   906  0012                     	;# 
   907  0015                     	;# 
   908  0016                     	;# 
   909  0016                     	;# 
   910  0017                     	;# 
   911  0018                     	;# 
   912  0019                     	;# 
   913  001A                     	;# 
   914  001B                     	;# 
   915  001C                     	;# 
   916  008C                     	;# 
   917  008D                     	;# 
   918  008E                     	;# 
   919  0090                     	;# 
   920  0091                     	;# 
   921  0092                     	;# 
   922  0095                     	;# 
   923  0096                     	;# 
   924  0097                     	;# 
   925  0099                     	;# 
   926  009A                     	;# 
   927  009B                     	;# 
   928  009B                     	;# 
   929  009C                     	;# 
   930  009D                     	;# 
   931  009E                     	;# 
   932  010C                     	;# 
   933  010D                     	;# 
   934  010E                     	;# 
   935  0116                     	;# 
   936  0117                     	;# 
   937  011D                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  018E                     	;# 
   941  0191                     	;# 
   942  0191                     	;# 
   943  0192                     	;# 
   944  0193                     	;# 
   945  0193                     	;# 
   946  0194                     	;# 
   947  0195                     	;# 
   948  0196                     	;# 
   949  0197                     	;# 
   950  0199                     	;# 
   951  019A                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019B                     	;# 
   956  019C                     	;# 
   957  019C                     	;# 
   958  019D                     	;# 
   959  019E                     	;# 
   960  019F                     	;# 
   961  020D                     	;# 
   962  0210                     	;# 
   963  0211                     	;# 
   964  0211                     	;# 
   965  0212                     	;# 
   966  0212                     	;# 
   967  0213                     	;# 
   968  0213                     	;# 
   969  0214                     	;# 
   970  0214                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0215                     	;# 
   974  0216                     	;# 
   975  0216                     	;# 
   976  0217                     	;# 
   977  0217                     	;# 
   978  0291                     	;# 
   979  0291                     	;# 
   980  0292                     	;# 
   981  0293                     	;# 
   982  0298                     	;# 
   983  0298                     	;# 
   984  0299                     	;# 
   985  029A                     	;# 
   986  0394                     	;# 
   987  0395                     	;# 
   988  0396                     	;# 
   989  0FE4                     	;# 
   990  0FE5                     	;# 
   991  0FE6                     	;# 
   992  0FE7                     	;# 
   993  0FE8                     	;# 
   994  0FE9                     	;# 
   995  0FEA                     	;# 
   996  0FEB                     	;# 
   997  0FED                     	;# 
   998  0FEE                     	;# 
   999  0FEF                     	;# 
  1000  0000                     	;# 
  1001  0001                     	;# 
  1002  0002                     	;# 
  1003  0003                     	;# 
  1004  0004                     	;# 
  1005  0005                     	;# 
  1006  0006                     	;# 
  1007  0007                     	;# 
  1008  0008                     	;# 
  1009  0009                     	;# 
  1010  000A                     	;# 
  1011  000B                     	;# 
  1012  000C                     	;# 
  1013  000D                     	;# 
  1014  000E                     	;# 
  1015  0010                     	;# 
  1016  0011                     	;# 
  1017  0012                     	;# 
  1018  0015                     	;# 
  1019  0016                     	;# 
  1020  0016                     	;# 
  1021  0017                     	;# 
  1022  0018                     	;# 
  1023  0019                     	;# 
  1024  001A                     	;# 
  1025  001B                     	;# 
  1026  001C                     	;# 
  1027  008C                     	;# 
  1028  008D                     	;# 
  1029  008E                     	;# 
  1030  0090                     	;# 
  1031  0091                     	;# 
  1032  0092                     	;# 
  1033  0095                     	;# 
  1034  0096                     	;# 
  1035  0097                     	;# 
  1036  0099                     	;# 
  1037  009A                     	;# 
  1038  009B                     	;# 
  1039  009B                     	;# 
  1040  009C                     	;# 
  1041  009D                     	;# 
  1042  009E                     	;# 
  1043  010C                     	;# 
  1044  010D                     	;# 
  1045  010E                     	;# 
  1046  0116                     	;# 
  1047  0117                     	;# 
  1048  011D                     	;# 
  1049  018C                     	;# 
  1050  018D                     	;# 
  1051  018E                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0194                     	;# 
  1058  0195                     	;# 
  1059  0196                     	;# 
  1060  0197                     	;# 
  1061  0199                     	;# 
  1062  019A                     	;# 
  1063  019B                     	;# 
  1064  019B                     	;# 
  1065  019B                     	;# 
  1066  019B                     	;# 
  1067  019C                     	;# 
  1068  019C                     	;# 
  1069  019D                     	;# 
  1070  019E                     	;# 
  1071  019F                     	;# 
  1072  020D                     	;# 
  1073  0210                     	;# 
  1074  0211                     	;# 
  1075  0211                     	;# 
  1076  0212                     	;# 
  1077  0212                     	;# 
  1078  0213                     	;# 
  1079  0213                     	;# 
  1080  0214                     	;# 
  1081  0214                     	;# 
  1082  0215                     	;# 
  1083  0215                     	;# 
  1084  0215                     	;# 
  1085  0216                     	;# 
  1086  0216                     	;# 
  1087  0217                     	;# 
  1088  0217                     	;# 
  1089  0291                     	;# 
  1090  0291                     	;# 
  1091  0292                     	;# 
  1092  0293                     	;# 
  1093  0298                     	;# 
  1094  0298                     	;# 
  1095  0299                     	;# 
  1096  029A                     	;# 
  1097  0394                     	;# 
  1098  0395                     	;# 
  1099  0396                     	;# 
  1100  0FE4                     	;# 
  1101  0FE5                     	;# 
  1102  0FE6                     	;# 
  1103  0FE7                     	;# 
  1104  0FE8                     	;# 
  1105  0FE9                     	;# 
  1106  0FEA                     	;# 
  1107  0FEB                     	;# 
  1108  0FED                     	;# 
  1109  0FEE                     	;# 
  1110  0FEF                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0008                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  000D                     	;# 
  1125  000E                     	;# 
  1126  0010                     	;# 
  1127  0011                     	;# 
  1128  0012                     	;# 
  1129  0015                     	;# 
  1130  0016                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  0019                     	;# 
  1135  001A                     	;# 
  1136  001B                     	;# 
  1137  001C                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  0090                     	;# 
  1142  0091                     	;# 
  1143  0092                     	;# 
  1144  0095                     	;# 
  1145  0096                     	;# 
  1146  0097                     	;# 
  1147  0099                     	;# 
  1148  009A                     	;# 
  1149  009B                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  010C                     	;# 
  1155  010D                     	;# 
  1156  010E                     	;# 
  1157  0116                     	;# 
  1158  0117                     	;# 
  1159  011D                     	;# 
  1160  018C                     	;# 
  1161  018D                     	;# 
  1162  018E                     	;# 
  1163  0191                     	;# 
  1164  0191                     	;# 
  1165  0192                     	;# 
  1166  0193                     	;# 
  1167  0193                     	;# 
  1168  0194                     	;# 
  1169  0195                     	;# 
  1170  0196                     	;# 
  1171  0197                     	;# 
  1172  0199                     	;# 
  1173  019A                     	;# 
  1174  019B                     	;# 
  1175  019B                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019C                     	;# 
  1179  019C                     	;# 
  1180  019D                     	;# 
  1181  019E                     	;# 
  1182  019F                     	;# 
  1183  020D                     	;# 
  1184  0210                     	;# 
  1185  0211                     	;# 
  1186  0211                     	;# 
  1187  0212                     	;# 
  1188  0212                     	;# 
  1189  0213                     	;# 
  1190  0213                     	;# 
  1191  0214                     	;# 
  1192  0214                     	;# 
  1193  0215                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0216                     	;# 
  1197  0216                     	;# 
  1198  0217                     	;# 
  1199  0217                     	;# 
  1200  0291                     	;# 
  1201  0291                     	;# 
  1202  0292                     	;# 
  1203  0293                     	;# 
  1204  0298                     	;# 
  1205  0298                     	;# 
  1206  0299                     	;# 
  1207  029A                     	;# 
  1208  0394                     	;# 
  1209  0395                     	;# 
  1210  0396                     	;# 
  1211  0FE4                     	;# 
  1212  0FE5                     	;# 
  1213  0FE6                     	;# 
  1214  0FE7                     	;# 
  1215  0FE8                     	;# 
  1216  0FE9                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  0010                     	;# 
  1238  0011                     	;# 
  1239  0012                     	;# 
  1240  0015                     	;# 
  1241  0016                     	;# 
  1242  0016                     	;# 
  1243  0017                     	;# 
  1244  0018                     	;# 
  1245  0019                     	;# 
  1246  001A                     	;# 
  1247  001B                     	;# 
  1248  001C                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  008E                     	;# 
  1252  0090                     	;# 
  1253  0091                     	;# 
  1254  0092                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  010C                     	;# 
  1266  010D                     	;# 
  1267  010E                     	;# 
  1268  0116                     	;# 
  1269  0117                     	;# 
  1270  011D                     	;# 
  1271  018C                     	;# 
  1272  018D                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0194                     	;# 
  1280  0195                     	;# 
  1281  0196                     	;# 
  1282  0197                     	;# 
  1283  0199                     	;# 
  1284  019A                     	;# 
  1285  019B                     	;# 
  1286  019B                     	;# 
  1287  019B                     	;# 
  1288  019B                     	;# 
  1289  019C                     	;# 
  1290  019C                     	;# 
  1291  019D                     	;# 
  1292  019E                     	;# 
  1293  019F                     	;# 
  1294  020D                     	;# 
  1295  0210                     	;# 
  1296  0211                     	;# 
  1297  0211                     	;# 
  1298  0212                     	;# 
  1299  0212                     	;# 
  1300  0213                     	;# 
  1301  0213                     	;# 
  1302  0214                     	;# 
  1303  0214                     	;# 
  1304  0215                     	;# 
  1305  0215                     	;# 
  1306  0215                     	;# 
  1307  0216                     	;# 
  1308  0216                     	;# 
  1309  0217                     	;# 
  1310  0217                     	;# 
  1311  0291                     	;# 
  1312  0291                     	;# 
  1313  0292                     	;# 
  1314  0293                     	;# 
  1315  0298                     	;# 
  1316  0298                     	;# 
  1317  0299                     	;# 
  1318  029A                     	;# 
  1319  0394                     	;# 
  1320  0395                     	;# 
  1321  0396                     	;# 
  1322  0FE4                     	;# 
  1323  0FE5                     	;# 
  1324  0FE6                     	;# 
  1325  0FE7                     	;# 
  1326  0FE8                     	;# 
  1327  0FE9                     	;# 
  1328  0FEA                     	;# 
  1329  0FEB                     	;# 
  1330  0FED                     	;# 
  1331  0FEE                     	;# 
  1332  0FEF                     	;# 
  1333  0000                     	;# 
  1334  0001                     	;# 
  1335  0002                     	;# 
  1336  0003                     	;# 
  1337  0004                     	;# 
  1338  0005                     	;# 
  1339  0006                     	;# 
  1340  0007                     	;# 
  1341  0008                     	;# 
  1342  0009                     	;# 
  1343  000A                     	;# 
  1344  000B                     	;# 
  1345  000C                     	;# 
  1346  000D                     	;# 
  1347  000E                     	;# 
  1348  0010                     	;# 
  1349  0011                     	;# 
  1350  0012                     	;# 
  1351  0015                     	;# 
  1352  0016                     	;# 
  1353  0016                     	;# 
  1354  0017                     	;# 
  1355  0018                     	;# 
  1356  0019                     	;# 
  1357  001A                     	;# 
  1358  001B                     	;# 
  1359  001C                     	;# 
  1360  008C                     	;# 
  1361  008D                     	;# 
  1362  008E                     	;# 
  1363  0090                     	;# 
  1364  0091                     	;# 
  1365  0092                     	;# 
  1366  0095                     	;# 
  1367  0096                     	;# 
  1368  0097                     	;# 
  1369  0099                     	;# 
  1370  009A                     	;# 
  1371  009B                     	;# 
  1372  009B                     	;# 
  1373  009C                     	;# 
  1374  009D                     	;# 
  1375  009E                     	;# 
  1376  010C                     	;# 
  1377  010D                     	;# 
  1378  010E                     	;# 
  1379  0116                     	;# 
  1380  0117                     	;# 
  1381  011D                     	;# 
  1382  018C                     	;# 
  1383  018D                     	;# 
  1384  018E                     	;# 
  1385  0191                     	;# 
  1386  0191                     	;# 
  1387  0192                     	;# 
  1388  0193                     	;# 
  1389  0193                     	;# 
  1390  0194                     	;# 
  1391  0195                     	;# 
  1392  0196                     	;# 
  1393  0197                     	;# 
  1394  0199                     	;# 
  1395  019A                     	;# 
  1396  019B                     	;# 
  1397  019B                     	;# 
  1398  019B                     	;# 
  1399  019B                     	;# 
  1400  019C                     	;# 
  1401  019C                     	;# 
  1402  019D                     	;# 
  1403  019E                     	;# 
  1404  019F                     	;# 
  1405  020D                     	;# 
  1406  0210                     	;# 
  1407  0211                     	;# 
  1408  0211                     	;# 
  1409  0212                     	;# 
  1410  0212                     	;# 
  1411  0213                     	;# 
  1412  0213                     	;# 
  1413  0214                     	;# 
  1414  0214                     	;# 
  1415  0215                     	;# 
  1416  0215                     	;# 
  1417  0215                     	;# 
  1418  0216                     	;# 
  1419  0216                     	;# 
  1420  0217                     	;# 
  1421  0217                     	;# 
  1422  0291                     	;# 
  1423  0291                     	;# 
  1424  0292                     	;# 
  1425  0293                     	;# 
  1426  0298                     	;# 
  1427  0298                     	;# 
  1428  0299                     	;# 
  1429  029A                     	;# 
  1430  0394                     	;# 
  1431  0395                     	;# 
  1432  0396                     	;# 
  1433  0FE4                     	;# 
  1434  0FE5                     	;# 
  1435  0FE6                     	;# 
  1436  0FE7                     	;# 
  1437  0FE8                     	;# 
  1438  0FE9                     	;# 
  1439  0FEA                     	;# 
  1440  0FEB                     	;# 
  1441  0FED                     	;# 
  1442  0FEE                     	;# 
  1443  0FEF                     	;# 
  1444  0000                     	;# 
  1445  0001                     	;# 
  1446  0002                     	;# 
  1447  0003                     	;# 
  1448  0004                     	;# 
  1449  0005                     	;# 
  1450  0006                     	;# 
  1451  0007                     	;# 
  1452  0008                     	;# 
  1453  0009                     	;# 
  1454  000A                     	;# 
  1455  000B                     	;# 
  1456  000C                     	;# 
  1457  000D                     	;# 
  1458  000E                     	;# 
  1459  0010                     	;# 
  1460  0011                     	;# 
  1461  0012                     	;# 
  1462  0015                     	;# 
  1463  0016                     	;# 
  1464  0016                     	;# 
  1465  0017                     	;# 
  1466  0018                     	;# 
  1467  0019                     	;# 
  1468  001A                     	;# 
  1469  001B                     	;# 
  1470  001C                     	;# 
  1471  008C                     	;# 
  1472  008D                     	;# 
  1473  008E                     	;# 
  1474  0090                     	;# 
  1475  0091                     	;# 
  1476  0092                     	;# 
  1477  0095                     	;# 
  1478  0096                     	;# 
  1479  0097                     	;# 
  1480  0099                     	;# 
  1481  009A                     	;# 
  1482  009B                     	;# 
  1483  009B                     	;# 
  1484  009C                     	;# 
  1485  009D                     	;# 
  1486  009E                     	;# 
  1487  010C                     	;# 
  1488  010D                     	;# 
  1489  010E                     	;# 
  1490  0116                     	;# 
  1491  0117                     	;# 
  1492  011D                     	;# 
  1493  018C                     	;# 
  1494  018D                     	;# 
  1495  018E                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0194                     	;# 
  1502  0195                     	;# 
  1503  0196                     	;# 
  1504  0197                     	;# 
  1505  0199                     	;# 
  1506  019A                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019C                     	;# 
  1512  019C                     	;# 
  1513  019D                     	;# 
  1514  019E                     	;# 
  1515  019F                     	;# 
  1516  020D                     	;# 
  1517  0210                     	;# 
  1518  0211                     	;# 
  1519  0211                     	;# 
  1520  0212                     	;# 
  1521  0212                     	;# 
  1522  0213                     	;# 
  1523  0213                     	;# 
  1524  0214                     	;# 
  1525  0214                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0216                     	;# 
  1530  0216                     	;# 
  1531  0217                     	;# 
  1532  0217                     	;# 
  1533  0291                     	;# 
  1534  0291                     	;# 
  1535  0292                     	;# 
  1536  0293                     	;# 
  1537  0298                     	;# 
  1538  0298                     	;# 
  1539  0299                     	;# 
  1540  029A                     	;# 
  1541  0394                     	;# 
  1542  0395                     	;# 
  1543  0396                     	;# 
  1544  0FE4                     	;# 
  1545  0FE5                     	;# 
  1546  0FE6                     	;# 
  1547  0FE7                     	;# 
  1548  0FE8                     	;# 
  1549  0FE9                     	;# 
  1550  0FEA                     	;# 
  1551  0FEB                     	;# 
  1552  0FED                     	;# 
  1553  0FEE                     	;# 
  1554  0FEF                     	;# 
  1555  0000                     	;# 
  1556  0001                     	;# 
  1557  0002                     	;# 
  1558  0003                     	;# 
  1559  0004                     	;# 
  1560  0005                     	;# 
  1561  0006                     	;# 
  1562  0007                     	;# 
  1563  0008                     	;# 
  1564  0009                     	;# 
  1565  000A                     	;# 
  1566  000B                     	;# 
  1567  000C                     	;# 
  1568  000D                     	;# 
  1569  000E                     	;# 
  1570  0010                     	;# 
  1571  0011                     	;# 
  1572  0012                     	;# 
  1573  0015                     	;# 
  1574  0016                     	;# 
  1575  0016                     	;# 
  1576  0017                     	;# 
  1577  0018                     	;# 
  1578  0019                     	;# 
  1579  001A                     	;# 
  1580  001B                     	;# 
  1581  001C                     	;# 
  1582  008C                     	;# 
  1583  008D                     	;# 
  1584  008E                     	;# 
  1585  0090                     	;# 
  1586  0091                     	;# 
  1587  0092                     	;# 
  1588  0095                     	;# 
  1589  0096                     	;# 
  1590  0097                     	;# 
  1591  0099                     	;# 
  1592  009A                     	;# 
  1593  009B                     	;# 
  1594  009B                     	;# 
  1595  009C                     	;# 
  1596  009D                     	;# 
  1597  009E                     	;# 
  1598  010C                     	;# 
  1599  010D                     	;# 
  1600  010E                     	;# 
  1601  0116                     	;# 
  1602  0117                     	;# 
  1603  011D                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  0191                     	;# 
  1608  0191                     	;# 
  1609  0192                     	;# 
  1610  0193                     	;# 
  1611  0193                     	;# 
  1612  0194                     	;# 
  1613  0195                     	;# 
  1614  0196                     	;# 
  1615  0197                     	;# 
  1616  0199                     	;# 
  1617  019A                     	;# 
  1618  019B                     	;# 
  1619  019B                     	;# 
  1620  019B                     	;# 
  1621  019B                     	;# 
  1622  019C                     	;# 
  1623  019C                     	;# 
  1624  019D                     	;# 
  1625  019E                     	;# 
  1626  019F                     	;# 
  1627  020D                     	;# 
  1628  0210                     	;# 
  1629  0211                     	;# 
  1630  0211                     	;# 
  1631  0212                     	;# 
  1632  0212                     	;# 
  1633  0213                     	;# 
  1634  0213                     	;# 
  1635  0214                     	;# 
  1636  0214                     	;# 
  1637  0215                     	;# 
  1638  0215                     	;# 
  1639  0215                     	;# 
  1640  0216                     	;# 
  1641  0216                     	;# 
  1642  0217                     	;# 
  1643  0217                     	;# 
  1644  0291                     	;# 
  1645  0291                     	;# 
  1646  0292                     	;# 
  1647  0293                     	;# 
  1648  0298                     	;# 
  1649  0298                     	;# 
  1650  0299                     	;# 
  1651  029A                     	;# 
  1652  0394                     	;# 
  1653  0395                     	;# 
  1654  0396                     	;# 
  1655  0FE4                     	;# 
  1656  0FE5                     	;# 
  1657  0FE6                     	;# 
  1658  0FE7                     	;# 
  1659  0FE8                     	;# 
  1660  0FE9                     	;# 
  1661  0FEA                     	;# 
  1662  0FEB                     	;# 
  1663  0FED                     	;# 
  1664  0FEE                     	;# 
  1665  0FEF                     	;# 
  1666  0000                     	;# 
  1667  0001                     	;# 
  1668  0002                     	;# 
  1669  0003                     	;# 
  1670  0004                     	;# 
  1671  0005                     	;# 
  1672  0006                     	;# 
  1673  0007                     	;# 
  1674  0008                     	;# 
  1675  0009                     	;# 
  1676  000A                     	;# 
  1677  000B                     	;# 
  1678  000C                     	;# 
  1679  000D                     	;# 
  1680  000E                     	;# 
  1681  0010                     	;# 
  1682  0011                     	;# 
  1683  0012                     	;# 
  1684  0015                     	;# 
  1685  0016                     	;# 
  1686  0016                     	;# 
  1687  0017                     	;# 
  1688  0018                     	;# 
  1689  0019                     	;# 
  1690  001A                     	;# 
  1691  001B                     	;# 
  1692  001C                     	;# 
  1693  008C                     	;# 
  1694  008D                     	;# 
  1695  008E                     	;# 
  1696  0090                     	;# 
  1697  0091                     	;# 
  1698  0092                     	;# 
  1699  0095                     	;# 
  1700  0096                     	;# 
  1701  0097                     	;# 
  1702  0099                     	;# 
  1703  009A                     	;# 
  1704  009B                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  010E                     	;# 
  1712  0116                     	;# 
  1713  0117                     	;# 
  1714  011D                     	;# 
  1715  018C                     	;# 
  1716  018D                     	;# 
  1717  018E                     	;# 
  1718  0191                     	;# 
  1719  0191                     	;# 
  1720  0192                     	;# 
  1721  0193                     	;# 
  1722  0193                     	;# 
  1723  0194                     	;# 
  1724  0195                     	;# 
  1725  0196                     	;# 
  1726  0197                     	;# 
  1727  0199                     	;# 
  1728  019A                     	;# 
  1729  019B                     	;# 
  1730  019B                     	;# 
  1731  019B                     	;# 
  1732  019B                     	;# 
  1733  019C                     	;# 
  1734  019C                     	;# 
  1735  019D                     	;# 
  1736  019E                     	;# 
  1737  019F                     	;# 
  1738  020D                     	;# 
  1739  0210                     	;# 
  1740  0211                     	;# 
  1741  0211                     	;# 
  1742  0212                     	;# 
  1743  0212                     	;# 
  1744  0213                     	;# 
  1745  0213                     	;# 
  1746  0214                     	;# 
  1747  0214                     	;# 
  1748  0215                     	;# 
  1749  0215                     	;# 
  1750  0215                     	;# 
  1751  0216                     	;# 
  1752  0216                     	;# 
  1753  0217                     	;# 
  1754  0217                     	;# 
  1755  0291                     	;# 
  1756  0291                     	;# 
  1757  0292                     	;# 
  1758  0293                     	;# 
  1759  0298                     	;# 
  1760  0298                     	;# 
  1761  0299                     	;# 
  1762  029A                     	;# 
  1763  0394                     	;# 
  1764  0395                     	;# 
  1765  0396                     	;# 
  1766  0FE4                     	;# 
  1767  0FE5                     	;# 
  1768  0FE6                     	;# 
  1769  0FE7                     	;# 
  1770  0FE8                     	;# 
  1771  0FE9                     	;# 
  1772  0FEA                     	;# 
  1773  0FEB                     	;# 
  1774  0FED                     	;# 
  1775  0FEE                     	;# 
  1776  0FEF                     	;# 
  1777  0000                     	;# 
  1778  0001                     	;# 
  1779  0002                     	;# 
  1780  0003                     	;# 
  1781  0004                     	;# 
  1782  0005                     	;# 
  1783  0006                     	;# 
  1784  0007                     	;# 
  1785  0008                     	;# 
  1786  0009                     	;# 
  1787  000A                     	;# 
  1788  000B                     	;# 
  1789  000C                     	;# 
  1790  000D                     	;# 
  1791  000E                     	;# 
  1792  0010                     	;# 
  1793  0011                     	;# 
  1794  0012                     	;# 
  1795  0015                     	;# 
  1796  0016                     	;# 
  1797  0016                     	;# 
  1798  0017                     	;# 
  1799  0018                     	;# 
  1800  0019                     	;# 
  1801  001A                     	;# 
  1802  001B                     	;# 
  1803  001C                     	;# 
  1804  008C                     	;# 
  1805  008D                     	;# 
  1806  008E                     	;# 
  1807  0090                     	;# 
  1808  0091                     	;# 
  1809  0092                     	;# 
  1810  0095                     	;# 
  1811  0096                     	;# 
  1812  0097                     	;# 
  1813  0099                     	;# 
  1814  009A                     	;# 
  1815  009B                     	;# 
  1816  009B                     	;# 
  1817  009C                     	;# 
  1818  009D                     	;# 
  1819  009E                     	;# 
  1820  010C                     	;# 
  1821  010D                     	;# 
  1822  010E                     	;# 
  1823  0116                     	;# 
  1824  0117                     	;# 
  1825  011D                     	;# 
  1826  018C                     	;# 
  1827  018D                     	;# 
  1828  018E                     	;# 
  1829  0191                     	;# 
  1830  0191                     	;# 
  1831  0192                     	;# 
  1832  0193                     	;# 
  1833  0193                     	;# 
  1834  0194                     	;# 
  1835  0195                     	;# 
  1836  0196                     	;# 
  1837  0197                     	;# 
  1838  0199                     	;# 
  1839  019A                     	;# 
  1840  019B                     	;# 
  1841  019B                     	;# 
  1842  019B                     	;# 
  1843  019B                     	;# 
  1844  019C                     	;# 
  1845  019C                     	;# 
  1846  019D                     	;# 
  1847  019E                     	;# 
  1848  019F                     	;# 
  1849  020D                     	;# 
  1850  0210                     	;# 
  1851  0211                     	;# 
  1852  0211                     	;# 
  1853  0212                     	;# 
  1854  0212                     	;# 
  1855  0213                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0214                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  0291                     	;# 
  1867  0291                     	;# 
  1868  0292                     	;# 
  1869  0293                     	;# 
  1870  0298                     	;# 
  1871  0298                     	;# 
  1872  0299                     	;# 
  1873  029A                     	;# 
  1874  0394                     	;# 
  1875  0395                     	;# 
  1876  0396                     	;# 
  1877  0FE4                     	;# 
  1878  0FE5                     	;# 
  1879  0FE6                     	;# 
  1880  0FE7                     	;# 
  1881  0FE8                     	;# 
  1882  0FE9                     	;# 
  1883  0FEA                     	;# 
  1884  0FEB                     	;# 
  1885  0FED                     	;# 
  1886  0FEE                     	;# 
  1887  0FEF                     	;# 
  1888  0000                     	;# 
  1889  0001                     	;# 
  1890  0002                     	;# 
  1891  0003                     	;# 
  1892  0004                     	;# 
  1893  0005                     	;# 
  1894  0006                     	;# 
  1895  0007                     	;# 
  1896  0008                     	;# 
  1897  0009                     	;# 
  1898  000A                     	;# 
  1899  000B                     	;# 
  1900  000C                     	;# 
  1901  000D                     	;# 
  1902  000E                     	;# 
  1903  0010                     	;# 
  1904  0011                     	;# 
  1905  0012                     	;# 
  1906  0015                     	;# 
  1907  0016                     	;# 
  1908  0016                     	;# 
  1909  0017                     	;# 
  1910  0018                     	;# 
  1911  0019                     	;# 
  1912  001A                     	;# 
  1913  001B                     	;# 
  1914  001C                     	;# 
  1915  008C                     	;# 
  1916  008D                     	;# 
  1917  008E                     	;# 
  1918  0090                     	;# 
  1919  0091                     	;# 
  1920  0092                     	;# 
  1921  0095                     	;# 
  1922  0096                     	;# 
  1923  0097                     	;# 
  1924  0099                     	;# 
  1925  009A                     	;# 
  1926  009B                     	;# 
  1927  009B                     	;# 
  1928  009C                     	;# 
  1929  009D                     	;# 
  1930  009E                     	;# 
  1931  010C                     	;# 
  1932  010D                     	;# 
  1933  010E                     	;# 
  1934  0116                     	;# 
  1935  0117                     	;# 
  1936  011D                     	;# 
  1937  018C                     	;# 
  1938  018D                     	;# 
  1939  018E                     	;# 
  1940  0191                     	;# 
  1941  0191                     	;# 
  1942  0192                     	;# 
  1943  0193                     	;# 
  1944  0193                     	;# 
  1945  0194                     	;# 
  1946  0195                     	;# 
  1947  0196                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  019A                     	;# 
  1951  019B                     	;# 
  1952  019B                     	;# 
  1953  019B                     	;# 
  1954  019B                     	;# 
  1955  019C                     	;# 
  1956  019C                     	;# 
  1957  019D                     	;# 
  1958  019E                     	;# 
  1959  019F                     	;# 
  1960  020D                     	;# 
  1961  0210                     	;# 
  1962  0211                     	;# 
  1963  0211                     	;# 
  1964  0212                     	;# 
  1965  0212                     	;# 
  1966  0213                     	;# 
  1967  0213                     	;# 
  1968  0214                     	;# 
  1969  0214                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0215                     	;# 
  1973  0216                     	;# 
  1974  0216                     	;# 
  1975  0217                     	;# 
  1976  0217                     	;# 
  1977  0291                     	;# 
  1978  0291                     	;# 
  1979  0292                     	;# 
  1980  0293                     	;# 
  1981  0298                     	;# 
  1982  0298                     	;# 
  1983  0299                     	;# 
  1984  029A                     	;# 
  1985  0394                     	;# 
  1986  0395                     	;# 
  1987  0396                     	;# 
  1988  0FE4                     	;# 
  1989  0FE5                     	;# 
  1990  0FE6                     	;# 
  1991  0FE7                     	;# 
  1992  0FE8                     	;# 
  1993  0FE9                     	;# 
  1994  0FEA                     	;# 
  1995  0FEB                     	;# 
  1996  0FED                     	;# 
  1997  0FEE                     	;# 
  1998  0FEF                     	;# 
  1999  0000                     	;# 
  2000  0001                     	;# 
  2001  0002                     	;# 
  2002  0003                     	;# 
  2003  0004                     	;# 
  2004  0005                     	;# 
  2005  0006                     	;# 
  2006  0007                     	;# 
  2007  0008                     	;# 
  2008  0009                     	;# 
  2009  000A                     	;# 
  2010  000B                     	;# 
  2011  000C                     	;# 
  2012  000D                     	;# 
  2013  000E                     	;# 
  2014  0010                     	;# 
  2015  0011                     	;# 
  2016  0012                     	;# 
  2017  0015                     	;# 
  2018  0016                     	;# 
  2019  0016                     	;# 
  2020  0017                     	;# 
  2021  0018                     	;# 
  2022  0019                     	;# 
  2023  001A                     	;# 
  2024  001B                     	;# 
  2025  001C                     	;# 
  2026  008C                     	;# 
  2027  008D                     	;# 
  2028  008E                     	;# 
  2029  0090                     	;# 
  2030  0091                     	;# 
  2031  0092                     	;# 
  2032  0095                     	;# 
  2033  0096                     	;# 
  2034  0097                     	;# 
  2035  0099                     	;# 
  2036  009A                     	;# 
  2037  009B                     	;# 
  2038  009B                     	;# 
  2039  009C                     	;# 
  2040  009D                     	;# 
  2041  009E                     	;# 
  2042  010C                     	;# 
  2043  010D                     	;# 
  2044  010E                     	;# 
  2045  0116                     	;# 
  2046  0117                     	;# 
  2047  011D                     	;# 
  2048  018C                     	;# 
  2049  018D                     	;# 
  2050  018E                     	;# 
  2051  0191                     	;# 
  2052  0191                     	;# 
  2053  0192                     	;# 
  2054  0193                     	;# 
  2055  0193                     	;# 
  2056  0194                     	;# 
  2057  0195                     	;# 
  2058  0196                     	;# 
  2059  0197                     	;# 
  2060  0199                     	;# 
  2061  019A                     	;# 
  2062  019B                     	;# 
  2063  019B                     	;# 
  2064  019B                     	;# 
  2065  019B                     	;# 
  2066  019C                     	;# 
  2067  019C                     	;# 
  2068  019D                     	;# 
  2069  019E                     	;# 
  2070  019F                     	;# 
  2071  020D                     	;# 
  2072  0210                     	;# 
  2073  0211                     	;# 
  2074  0211                     	;# 
  2075  0212                     	;# 
  2076  0212                     	;# 
  2077  0213                     	;# 
  2078  0213                     	;# 
  2079  0214                     	;# 
  2080  0214                     	;# 
  2081  0215                     	;# 
  2082  0215                     	;# 
  2083  0215                     	;# 
  2084  0216                     	;# 
  2085  0216                     	;# 
  2086  0217                     	;# 
  2087  0217                     	;# 
  2088  0291                     	;# 
  2089  0291                     	;# 
  2090  0292                     	;# 
  2091  0293                     	;# 
  2092  0298                     	;# 
  2093  0298                     	;# 
  2094  0299                     	;# 
  2095  029A                     	;# 
  2096  0394                     	;# 
  2097  0395                     	;# 
  2098  0396                     	;# 
  2099  0FE4                     	;# 
  2100  0FE5                     	;# 
  2101  0FE6                     	;# 
  2102  0FE7                     	;# 
  2103  0FE8                     	;# 
  2104  0FE9                     	;# 
  2105  0FEA                     	;# 
  2106  0FEB                     	;# 
  2107  0FED                     	;# 
  2108  0FEE                     	;# 
  2109  0FEF                     	;# 
  2110                           
  2111                           	psect	idataBANK3
  2112  0A53                     __pidataBANK3:	
  2113                           
  2114                           ;initializer for __product
  2115  0A53  3463               	retlw	99
  2116  0A54  3402               	retlw	2
  2117  0A55  3400               	retlw	0
  2118  0A56  3400               	retlw	0
  2119  0A57  3400               	retlw	0
  2120  0A58  3400               	retlw	0
  2121  0A59  3400               	retlw	0
  2122  0A5A  3400               	retlw	0
  2123  0A5B  3400               	retlw	0
  2124  0A5C  3400               	retlw	0
  2125  0A5D  3400               	retlw	0
  2126  0A5E  3400               	retlw	0
  2127  0A5F  34FF               	retlw	255
  2128  0A60  34FF               	retlw	255
  2129  0A61  34FF               	retlw	255
  2130  0A62  3400               	retlw	0
  2131  0A63  3400               	retlw	0
  2132  0A64  3400               	retlw	0
  2133  0A65  3400               	retlw	0
  2134  0A66  3400               	retlw	0
  2135  0A67  3400               	retlw	0
  2136  0A68  3400               	retlw	0
  2137  0A69  3400               	retlw	0
  2138  0A6A  3400               	retlw	0
  2139  0A6B  3400               	retlw	0
  2140  0A6C  3400               	retlw	0
  2141  0A6D  3400               	retlw	0
  2142  0A6E  3400               	retlw	0
  2143  0A6F  3400               	retlw	0
  2144  0A70  3400               	retlw	0
  2145  0A71  3400               	retlw	0
  2146  0A72  3400               	retlw	0
  2147                           
  2148                           	psect	nvBANK0
  2149  006D                     __pnvBANK0:	
  2150  006D                     _product:	
  2151  006D                     	ds	1
  2152  000C                     _PORTA	set	12
  2153  000D                     _PORTB	set	13
  2154  000E                     _PORTC	set	14
  2155  0018                     _T1CON	set	24
  2156  0017                     _TMR1H	set	23
  2157  0016                     _TMR1L	set	22
  2158  005F                     _GIE	set	95
  2159  005B                     _IOCIE	set	91
  2160  0058                     _IOCIF	set	88
  2161  005E                     _PEIE	set	94
  2162  0060                     _RA0	set	96
  2163  0064                     _RA4	set	100
  2164  0066                     _RA6	set	102
  2165  0067                     _RA7	set	103
  2166  0068                     _RB0	set	104
  2167  0069                     _RB1	set	105
  2168  006A                     _RB2	set	106
  2169  006B                     _RB3	set	107
  2170  006D                     _RB5	set	109
  2171  0088                     _TMR1IF	set	136
  2172  009D                     _ADCON0	set	157
  2173  009E                     _ADCON1	set	158
  2174  009C                     _ADRESH	set	156
  2175  009B                     _ADRESL	set	155
  2176  0099                     _OSCCON	set	153
  2177  008C                     _TRISA	set	140
  2178  008D                     _TRISB	set	141
  2179  008E                     _TRISC	set	142
  2180  0097                     _WDTCON	set	151
  2181  04E9                     _GO_nDONE	set	1257
  2182  0488                     _TMR1IE	set	1160
  2183  0117                     _FVRCON	set	279
  2184  010C                     _LATA	set	268
  2185  010D                     _LATB	set	269
  2186  010E                     _LATC	set	270
  2187  018C                     _ANSELA	set	396
  2188  018D                     _ANSELB	set	397
  2189  018E                     _ANSELC	set	398
  2190  0192                     _PMADRH	set	402
  2191  0191                     _PMADRL	set	401
  2192  0196                     _PMCON2	set	406
  2193  0194                     _PMDATH	set	404
  2194  0193                     _PMDATL	set	403
  2195  0CAE                     _CFGS	set	3246
  2196  0CAC                     _FREE	set	3244
  2197  0CAD                     _LWLO	set	3245
  2198  0CA8                     _RD	set	3240
  2199  0CA9                     _WR	set	3241
  2200  0CAA                     _WREN	set	3242
  2201  020D                     _WPUB	set	525
  2202  0396                     _IOCBF	set	918
  2203  0395                     _IOCBN	set	917
  2204  0394                     _IOCBP	set	916
  2205  1CB2                     _IOCBF2	set	7346
  2206                           
  2207                           ; #config settings
  2208  0000                     
  2209                           	psect	cinit
  2210  0021                     start_initialization:	
  2211  0021                     __initialization:	
  2212                           
  2213                           ; Clear objects allocated to COMMON
  2214  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  2215  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2216                           
  2217                           ; Clear objects allocated to BANK0
  2218  0023  01EA               	clrf	__pbssBANK0& (0+127)
  2219  0024  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  2220  0025  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  2221                           
  2222                           ; Clear objects allocated to BANK1
  2223  0026  30A0               	movlw	low __pbssBANK1
  2224  0027  0084               	movwf	4
  2225  0028  3000               	movlw	high __pbssBANK1
  2226  0029  0085               	movwf	5
  2227  002A  3048               	movlw	72
  2228  002B  3197  27E5  3180   	fcall	clear_ram0
  2229                           
  2230                           ; Clear objects allocated to BANK2
  2231  002E  3020               	movlw	low __pbssBANK2
  2232  002F  0084               	movwf	4
  2233  0030  3001               	movlw	high __pbssBANK2
  2234  0031  0085               	movwf	5
  2235  0032  303E               	movlw	62
  2236  0033  3197  27E5  3180   	fcall	clear_ram0
  2237                           
  2238                           ; Initialize objects allocated to BANK3
  2239  0036  3053               	movlw	low __pidataBANK3
  2240  0037  0084               	movwf	4
  2241  0038  308A               	movlw	(high __pidataBANK3)| (0+128)
  2242  0039  0085               	movwf	5
  2243  003A  30A0               	movlw	low __pdataBANK3
  2244  003B  0086               	movwf	6
  2245  003C  3001               	movlw	high __pdataBANK3
  2246  003D  0087               	movwf	7
  2247  003E  3020               	movlw	32
  2248  003F  3197  27DF         	fcall	init_ram
  2249  0041                     end_of_initialization:	
  2250                           ;End of C runtime variable initialization code
  2251                           
  2252  0041                     __end_of__initialization:	
  2253  0041  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2254  0042  0020               	movlb	0
  2255  0043  318C  2C95         	ljmp	_main	;jump to C main() function
  2256                           
  2257                           	psect	bssCOMMON
  2258  007A                     __pbssCOMMON:	
  2259  007A                     _Cmd:	
  2260  007A                     	ds	1
  2261  007B                     _LED:	
  2262  007B                     	ds	1
  2263                           
  2264                           	psect	bssBANK0
  2265  006A                     __pbssBANK0:	
  2266  006A                     _DelayOff:	
  2267  006A                     	ds	1
  2268  006B                     _DimmerLights:	
  2269  006B                     	ds	1
  2270  006C                     _Sw:	
  2271  006C                     	ds	1
  2272                           
  2273                           	psect	bssBANK1
  2274  00A0                     __pbssBANK1:	
  2275  00A0                     _DimmerIntr1:	
  2276  00A0                     	ds	16
  2277  00B0                     _myMain:	
  2278  00B0                     	ds	13
  2279  00BD                     _Buz1:	
  2280  00BD                     	ds	12
  2281  00C9                     _Dimmer:	
  2282  00C9                     	ds	5
  2283  00CE                     _Timer1:	
  2284  00CE                     	ds	3
  2285  00D1                     _WDT:	
  2286  00D1                     	ds	2
  2287  00D3                     _DimmerIntr:	
  2288  00D3                     	ds	1
  2289  00D4                     _Light:	
  2290  00D4                     	ds	1
  2291  00D5                     _SwDetect:	
  2292  00D5                     	ds	1
  2293  00D6                     _DimmerLights1:	
  2294  00D6                     	ds	9
  2295  00DF                     _DlySw1:	
  2296  00DF                     	ds	5
  2297  00E4                     _VarErrLED:	
  2298  00E4                     	ds	4
  2299                           
  2300                           	psect	bssBANK2
  2301  0120                     __pbssBANK2:	
  2302  0120                     _u1:	
  2303  0120                     	ds	16
  2304  0130                     _Memory:	
  2305  0130                     	ds	37
  2306  0155                     _Sw1:	
  2307  0155                     	ds	9
  2308                           
  2309                           	psect	dataBANK3
  2310  01A0                     __pdataBANK3:	
  2311  01A0                     __product:	
  2312  01A0                     	ds	32
  2313                           
  2314                           	psect	clrtext
  2315  17E5                     clear_ram0:	
  2316                           ;	Called with FSR0 containing the base address, and
  2317                           ;	WREG with the size to clear
  2318                           
  2319  17E5  0064               	clrwdt	;clear the watchdog before getting into this loop
  2320  17E6                     clrloop0:	
  2321  17E6  0180               	clrf	0	;clear RAM location pointed to by FSR
  2322  17E7  3101               	addfsr 0,1
  2323  17E8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2324  17E9  2FE6               	goto	clrloop0	;have we reached the end yet?
  2325  17EA  3400               	retlw	0	;all done for this memory range, return
  2326                           
  2327                           	psect	inittext
  2328  17DF                     init_ram:	
  2329  17DF  00FE               	movwf	126
  2330  17E0                     initloop:	
  2331  17E0  0012               	moviw fsr0++
  2332  17E1  001E               	movwi fsr1++
  2333  17E2  0BFE               	decfsz	126,f
  2334  17E3  2FE0               	goto	initloop
  2335  17E4  3400               	retlw	0
  2336                           
  2337                           	psect	cstackBANK1
  2338  00E8                     __pcstackBANK1:	
  2339  00E8                     ?_main:	
  2340  00E8                     main@argc:	
  2341                           ; 2 bytes @ 0x0
  2342                           
  2343                           
  2344                           ; 2 bytes @ 0x0
  2345  00E8                     	ds	2
  2346  00EA                     main@argv:	
  2347                           
  2348                           ; 2 bytes @ 0x2
  2349  00EA                     	ds	2
  2350                           
  2351                           	psect	cstackCOMMON
  2352  0070                     __pcstackCOMMON:	
  2353  0070                     ?_DlyOff_Initialization:	
  2354  0070                     ?_DlyOff_Main:	
  2355                           ; 0 bytes @ 0x0
  2356                           
  2357  0070                     ?_setDimmerLights_SwOn:	
  2358                           ; 0 bytes @ 0x0
  2359                           
  2360  0070                     ?_setDimmerLights_SwOff:	
  2361                           ; 0 bytes @ 0x0
  2362                           
  2363  0070                     ?_setMemory_Modify:	
  2364                           ; 0 bytes @ 0x0
  2365                           
  2366  0070                     ?_setDimmerLights_Initialization:	
  2367                           ; 0 bytes @ 0x0
  2368                           
  2369  0070                     ?_setDimmerLights_Main:	
  2370                           ; 0 bytes @ 0x0
  2371                           
  2372  0070                     ?_DimmerLights_DimmingFunction:	
  2373                           ; 0 bytes @ 0x0
  2374                           
  2375  0070                     ?_DimmerIntr_ValueCalculate:	
  2376                           ; 0 bytes @ 0x0
  2377                           
  2378  0070                     ?_setDimmerLights_DimmingClose:	
  2379                           ; 0 bytes @ 0x0
  2380                           
  2381  0070                     ?_setLED_Initialization:	
  2382                           ; 0 bytes @ 0x0
  2383                           
  2384  0070                     ?_setLED_Main:	
  2385                           ; 0 bytes @ 0x0
  2386                           
  2387  0070                     ?_Fosc_Set:	
  2388                           ; 0 bytes @ 0x0
  2389                           
  2390  0070                     ?_IO_Set:	
  2391                           ; 0 bytes @ 0x0
  2392                           
  2393  0070                     ?_TMR1_Set:	
  2394                           ; 0 bytes @ 0x0
  2395                           
  2396  0070                     ?_ADC_Set:	
  2397                           ; 0 bytes @ 0x0
  2398                           
  2399  0070                     ?_IOC_Set:	
  2400                           ; 0 bytes @ 0x0
  2401                           
  2402  0070                     ?_WDT_Set:	
  2403                           ; 0 bytes @ 0x0
  2404                           
  2405  0070                     ?_TMR1_ISR:	
  2406                           ; 0 bytes @ 0x0
  2407                           
  2408  0070                     ?_IOC_ISR:	
  2409                           ; 0 bytes @ 0x0
  2410                           
  2411  0070                     ?_Timeout_Counter:	
  2412                           ; 0 bytes @ 0x0
  2413                           
  2414  0070                     ?_set_TimeoutCleared:	
  2415                           ; 0 bytes @ 0x0
  2416                           
  2417  0070                     ?_Flash_Memory_Write:	
  2418                           ; 0 bytes @ 0x0
  2419                           
  2420  0070                     ?_Flash_Memory_Modify:	
  2421                           ; 0 bytes @ 0x0
  2422                           
  2423  0070                     ?_WDT_Clearing:	
  2424                           ; 0 bytes @ 0x0
  2425                           
  2426  0070                     ?_myMain_Initialization:	
  2427                           ; 0 bytes @ 0x0
  2428                           
  2429  0070                     ?_Switch_Initialization:	
  2430                           ; 0 bytes @ 0x0
  2431                           
  2432  0070                     ?_my_MainTimer:	
  2433                           ; 0 bytes @ 0x0
  2434                           
  2435  0070                     ?_Switch_Main:	
  2436                           ; 0 bytes @ 0x0
  2437                           
  2438  0070                     ?_Exception_Main:	
  2439                           ; 0 bytes @ 0x0
  2440                           
  2441  0070                     ?_setSw_Initialization:	
  2442                           ; 0 bytes @ 0x0
  2443                           
  2444  0070                     ?_setSw_Main:	
  2445                           ; 0 bytes @ 0x0
  2446                           
  2447  0070                     ?_Buzzer_Initialization:	
  2448                           ; 0 bytes @ 0x0
  2449                           
  2450  0070                     ?_Buzzer_Main:	
  2451                           ; 0 bytes @ 0x0
  2452                           
  2453  0070                     ?_DelayOffPointSelect:	
  2454                           ; 0 bytes @ 0x0
  2455                           
  2456  0070                     ?_DelayOff_Initialization:	
  2457                           ; 0 bytes @ 0x0
  2458                           
  2459  0070                     ?_DelayOff_Main:	
  2460                           ; 0 bytes @ 0x0
  2461                           
  2462  0070                     ?_DimmerIntr_Initialization:	
  2463                           ; 0 bytes @ 0x0
  2464                           
  2465  0070                     ?_DimmerLights_SelectPointer:	
  2466                           ; 0 bytes @ 0x0
  2467                           
  2468  0070                     ?_DimmerLights_Initialization:	
  2469                           ; 0 bytes @ 0x0
  2470                           
  2471  0070                     ?_setDimmerLights_DimmingOn:	
  2472                           ; 0 bytes @ 0x0
  2473                           
  2474  0070                     ?_DimmerLights_Main:	
  2475                           ; 0 bytes @ 0x0
  2476                           
  2477  0070                     ?_DimmerLights_TMR_1:	
  2478                           ; 0 bytes @ 0x0
  2479                           
  2480  0070                     ??_DimmerLights_TMR_1:	
  2481                           ; 0 bytes @ 0x0
  2482                           
  2483  0070                     ?_DimmerLights_IOC_1:	
  2484                           ; 0 bytes @ 0x0
  2485                           
  2486  0070                     ??_DimmerLights_IOC_1:	
  2487                           ; 0 bytes @ 0x0
  2488                           
  2489  0070                     ?_LedPointSelect:	
  2490                           ; 0 bytes @ 0x0
  2491                           
  2492  0070                     ?_LED_Initialization:	
  2493                           ; 0 bytes @ 0x0
  2494                           
  2495  0070                     ?_LED_Main:	
  2496                           ; 0 bytes @ 0x0
  2497                           
  2498  0070                     ?_Mcu_Initialization:	
  2499                           ; 0 bytes @ 0x0
  2500                           
  2501  0070                     ?_ISR:	
  2502                           ; 0 bytes @ 0x0
  2503                           
  2504  0070                     ?_Flash_Memory_Initialization:	
  2505                           ; 0 bytes @ 0x0
  2506                           
  2507  0070                     ?_Flash_Memory_Main:	
  2508                           ; 0 bytes @ 0x0
  2509                           
  2510  0070                     ?_Flash_Memory_Unlock:	
  2511                           ; 0 bytes @ 0x0
  2512                           
  2513  0070                     ?_Flash_Memory_Erasing:	
  2514                           ; 0 bytes @ 0x0
  2515                           
  2516  0070                     ?_WDT_Main:	
  2517                           ; 0 bytes @ 0x0
  2518                           
  2519  0070                     ?_TouchPower:	
  2520                           ; 0 bytes @ 0x0
  2521                           
  2522  0070                     ?_SwPointSelect:	
  2523                           ; 0 bytes @ 0x0
  2524                           
  2525  0070                     ?_getDimmerLights_Status:	
  2526                           ; 0 bytes @ 0x0
  2527                           
  2528  0070                     ?_getDimmerLights_ValueToPercent:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0070                     ?_getDimmerLights_PercentToValue:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0070                     ?_getDimmerLights_Allow_Condition:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0070                     ?_getMain_All_LightsStatus:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0070                     ?_getCmd_Status:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0070                     ?_Flash_Memory_Read:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0070                     ?_getAll_Sw_KeyStatus:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0070                     ?_getSw_KeyStatus:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0070                     ?_getDelayOff_GO:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0070                     ?_getDimmerIntr_DimmingValue:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561  0070                     ?_getMain_All_Error_Status:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564  0070                     setDimmerLights_Initialization@lights:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567  0070                     getDimmerLights_Allow_Condition@lights:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570  0070                     getMain_All_Error_Status@command:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573  0070                     getSw_KeyStatus@sw:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576                           
  2577                           ; 1 bytes @ 0x0
  2578  0070                     	ds	1
  2579  0071                     ??_TMR1_ISR:	
  2580  0071                     ??_IOC_ISR:	
  2581                           ; 0 bytes @ 0x1
  2582                           
  2583  0071                     ??_ISR:	
  2584                           ; 0 bytes @ 0x1
  2585                           
  2586                           
  2587                           ; 0 bytes @ 0x1
  2588  0071                     	ds	1
  2589  0072                     ??_setMemory_Modify:	
  2590  0072                     ??_setDimmerLights_Initialization:	
  2591                           ; 0 bytes @ 0x2
  2592                           
  2593  0072                     ??_getDimmerLights_Allow_Condition:	
  2594                           ; 0 bytes @ 0x2
  2595                           
  2596  0072                     ??_getMain_All_LightsStatus:	
  2597                           ; 0 bytes @ 0x2
  2598                           
  2599  0072                     ??_getCmd_Status:	
  2600                           ; 0 bytes @ 0x2
  2601                           
  2602  0072                     ?_setCmd_Status:	
  2603                           ; 0 bytes @ 0x2
  2604                           
  2605  0072                     ??_Fosc_Set:	
  2606                           ; 0 bytes @ 0x2
  2607                           
  2608  0072                     ??_IO_Set:	
  2609                           ; 0 bytes @ 0x2
  2610                           
  2611  0072                     ??_TMR1_Set:	
  2612                           ; 0 bytes @ 0x2
  2613                           
  2614  0072                     ??_ADC_Set:	
  2615                           ; 0 bytes @ 0x2
  2616                           
  2617  0072                     ??_IOC_Set:	
  2618                           ; 0 bytes @ 0x2
  2619                           
  2620  0072                     ??_WDT_Set:	
  2621                           ; 0 bytes @ 0x2
  2622                           
  2623  0072                     ??_Timeout_Counter:	
  2624                           ; 0 bytes @ 0x2
  2625                           
  2626  0072                     ??_set_TimeoutCleared:	
  2627                           ; 0 bytes @ 0x2
  2628                           
  2629  0072                     ??_Flash_Memory_Read:	
  2630                           ; 0 bytes @ 0x2
  2631                           
  2632  0072                     ?_setMemory_Data:	
  2633                           ; 0 bytes @ 0x2
  2634                           
  2635  0072                     ??_Flash_Memory_Write:	
  2636                           ; 0 bytes @ 0x2
  2637                           
  2638  0072                     ??_getAll_Sw_KeyStatus:	
  2639                           ; 0 bytes @ 0x2
  2640                           
  2641  0072                     ??_WDT_Clearing:	
  2642                           ; 0 bytes @ 0x2
  2643                           
  2644  0072                     ??_myMain_Initialization:	
  2645                           ; 0 bytes @ 0x2
  2646                           
  2647  0072                     ??_getSw_KeyStatus:	
  2648                           ; 0 bytes @ 0x2
  2649                           
  2650  0072                     ??_Buzzer_Initialization:	
  2651                           ; 0 bytes @ 0x2
  2652                           
  2653  0072                     ??_Buzzer_Main:	
  2654                           ; 0 bytes @ 0x2
  2655                           
  2656  0072                     ??_DelayOffPointSelect:	
  2657                           ; 0 bytes @ 0x2
  2658                           
  2659  0072                     ?_setDimmerIntr_ControlStatus:	
  2660                           ; 0 bytes @ 0x2
  2661                           
  2662  0072                     ??_getDimmerIntr_DimmingValue:	
  2663                           ; 0 bytes @ 0x2
  2664                           
  2665  0072                     ?_setDimmerIntr_Dimming_Sw:	
  2666                           ; 0 bytes @ 0x2
  2667                           
  2668  0072                     ??_getDimmerIntr_Dimming_Sw:	
  2669                           ; 0 bytes @ 0x2
  2670                           
  2671  0072                     ?_setDimmerIntr_Dimming_RF:	
  2672                           ; 0 bytes @ 0x2
  2673                           
  2674  0072                     ??_DimmerLights_SelectPointer:	
  2675                           ; 0 bytes @ 0x2
  2676                           
  2677  0072                     ??_LedPointSelect:	
  2678                           ; 0 bytes @ 0x2
  2679                           
  2680  0072                     ??_Flash_Memory_Unlock:	
  2681                           ; 0 bytes @ 0x2
  2682                           
  2683  0072                     ??_Flash_Memory_Erasing:	
  2684                           ; 0 bytes @ 0x2
  2685                           
  2686  0072                     ??_WDT_Main:	
  2687                           ; 0 bytes @ 0x2
  2688                           
  2689  0072                     ??_getMain_All_Error_Status:	
  2690                           ; 0 bytes @ 0x2
  2691                           
  2692  0072                     ??_TouchPower:	
  2693                           ; 0 bytes @ 0x2
  2694                           
  2695  0072                     ??_SwPointSelect:	
  2696                           ; 0 bytes @ 0x2
  2697                           
  2698  0072                     ?___bmul:	
  2699                           ; 0 bytes @ 0x2
  2700                           
  2701  0072                     ?___lbdiv:	
  2702                           ; 1 bytes @ 0x2
  2703                           
  2704  0072                     ?___awdiv:	
  2705                           ; 1 bytes @ 0x2
  2706                           
  2707  0072                     ?___ftpack:	
  2708                           ; 2 bytes @ 0x2
  2709                           
  2710  0072                     setDimmerIntr_ControlStatus@command:	
  2711                           ; 3 bytes @ 0x2
  2712                           
  2713  0072                     setDimmerIntr_Dimming_Sw@command:	
  2714                           ; 1 bytes @ 0x2
  2715                           
  2716  0072                     getDimmerIntr_Dimming_Sw@lights:	
  2717                           ; 1 bytes @ 0x2
  2718                           
  2719  0072                     setDimmerIntr_Dimming_RF@command:	
  2720                           ; 1 bytes @ 0x2
  2721                           
  2722  0072                     getDimmerLights_Allow_Condition@allow:	
  2723                           ; 1 bytes @ 0x2
  2724                           
  2725  0072                     setMemory_Data@data:	
  2726                           ; 1 bytes @ 0x2
  2727                           
  2728  0072                     getMain_All_LightsStatus@status:	
  2729                           ; 1 bytes @ 0x2
  2730                           
  2731  0072                     getMain_All_Error_Status@status:	
  2732                           ; 1 bytes @ 0x2
  2733                           
  2734  0072                     setCmd_Status@cmd:	
  2735                           ; 1 bytes @ 0x2
  2736                           
  2737  0072                     getCmd_Status@number:	
  2738                           ; 1 bytes @ 0x2
  2739                           
  2740  0072                     ___bmul@multiplicand:	
  2741                           ; 1 bytes @ 0x2
  2742                           
  2743  0072                     ___lbdiv@divisor:	
  2744                           ; 1 bytes @ 0x2
  2745                           
  2746  0072                     ___awdiv@divisor:	
  2747                           ; 1 bytes @ 0x2
  2748                           
  2749  0072                     ___ftpack@arg:	
  2750                           ; 2 bytes @ 0x2
  2751                           
  2752                           
  2753                           ; 3 bytes @ 0x2
  2754  0072                     	ds	1
  2755  0073                     ??_setCmd_Status:	
  2756  0073                     ??_setMemory_Data:	
  2757                           ; 0 bytes @ 0x3
  2758                           
  2759  0073                     ??_setDimmerIntr_ControlStatus:	
  2760                           ; 0 bytes @ 0x3
  2761                           
  2762  0073                     ??_setDimmerIntr_Dimming_Sw:	
  2763                           ; 0 bytes @ 0x3
  2764                           
  2765  0073                     ??_setDimmerIntr_Dimming_RF:	
  2766                           ; 0 bytes @ 0x3
  2767                           
  2768  0073                     ??_Mcu_Initialization:	
  2769                           ; 0 bytes @ 0x3
  2770                           
  2771  0073                     ??___bmul:	
  2772                           ; 0 bytes @ 0x3
  2773                           
  2774  0073                     ??___lbdiv:	
  2775                           ; 0 bytes @ 0x3
  2776                           
  2777  0073                     DelayOffPointSelect@sw:	
  2778                           ; 0 bytes @ 0x3
  2779                           
  2780  0073                     getDimmerIntr_DimmingValue@lights:	
  2781                           ; 1 bytes @ 0x3
  2782                           
  2783  0073                     getDimmerIntr_Dimming_Sw@status:	
  2784                           ; 1 bytes @ 0x3
  2785                           
  2786  0073                     DimmerLights_SelectPointer@lights:	
  2787                           ; 1 bytes @ 0x3
  2788                           
  2789  0073                     LedPointSelect@led:	
  2790                           ; 1 bytes @ 0x3
  2791                           
  2792  0073                     Flash_Memory_Read@i:	
  2793                           ; 1 bytes @ 0x3
  2794                           
  2795  0073                     Flash_Memory_Write@i:	
  2796                           ; 1 bytes @ 0x3
  2797                           
  2798  0073                     setMemory_Modify@command:	
  2799                           ; 1 bytes @ 0x3
  2800                           
  2801  0073                     getCmd_Status@cmd:	
  2802                           ; 1 bytes @ 0x3
  2803                           
  2804  0073                     SwPointSelect@sw:	
  2805                           ; 1 bytes @ 0x3
  2806                           
  2807  0073                     getSw_KeyStatus@status:	
  2808                           ; 1 bytes @ 0x3
  2809                           
  2810  0073                     getAll_Sw_KeyStatus@status:	
  2811                           ; 1 bytes @ 0x3
  2812                           
  2813                           
  2814                           ; 1 bytes @ 0x3
  2815  0073                     	ds	1
  2816  0074                     ??_DlyOff_Initialization:	
  2817  0074                     ??_getDimmerLights_Status:	
  2818                           ; 0 bytes @ 0x4
  2819                           
  2820  0074                     ??_setDimmerLights_SwOff:	
  2821                           ; 0 bytes @ 0x4
  2822                           
  2823  0074                     ?_setLED:	
  2824                           ; 0 bytes @ 0x4
  2825                           
  2826  0074                     ??_setLED_Main:	
  2827                           ; 0 bytes @ 0x4
  2828                           
  2829  0074                     ??_getDelayOff_GO:	
  2830                           ; 0 bytes @ 0x4
  2831                           
  2832  0074                     ??_setDimmerLights_DimmingOn:	
  2833                           ; 0 bytes @ 0x4
  2834                           
  2835  0074                     DlyOff_Initialization@sw:	
  2836                           ; 0 bytes @ 0x4
  2837                           
  2838  0074                     getDelayOff_GO@sw:	
  2839                           ; 1 bytes @ 0x4
  2840                           
  2841  0074                     setDimmerIntr_ControlStatus@lights:	
  2842                           ; 1 bytes @ 0x4
  2843                           
  2844  0074                     getDimmerIntr_DimmingValue@value:	
  2845                           ; 1 bytes @ 0x4
  2846                           
  2847  0074                     setDimmerIntr_Dimming_Sw@lights:	
  2848                           ; 1 bytes @ 0x4
  2849                           
  2850  0074                     setDimmerIntr_Dimming_RF@lights:	
  2851                           ; 1 bytes @ 0x4
  2852                           
  2853  0074                     setDimmerLights_SwOff@sw:	
  2854                           ; 1 bytes @ 0x4
  2855                           
  2856  0074                     setDimmerLights_DimmingOn@sw:	
  2857                           ; 1 bytes @ 0x4
  2858                           
  2859  0074                     getDimmerLights_Status@lights:	
  2860                           ; 1 bytes @ 0x4
  2861                           
  2862  0074                     setLED@command:	
  2863                           ; 1 bytes @ 0x4
  2864                           
  2865  0074                     Flash_Memory_Read@address:	
  2866                           ; 1 bytes @ 0x4
  2867                           
  2868  0074                     setMemory_Data@address:	
  2869                           ; 1 bytes @ 0x4
  2870                           
  2871  0074                     setCmd_Status@number:	
  2872                           ; 1 bytes @ 0x4
  2873                           
  2874  0074                     _getSw_KeyStatus$5375:	
  2875                           ; 1 bytes @ 0x4
  2876                           
  2877  0074                     _getAll_Sw_KeyStatus$5378:	
  2878                           ; 1 bytes @ 0x4
  2879                           
  2880  0074                     ___bmul@product:	
  2881                           ; 1 bytes @ 0x4
  2882                           
  2883  0074                     ___lbdiv@dividend:	
  2884                           ; 1 bytes @ 0x4
  2885                           
  2886  0074                     ___awdiv@dividend:	
  2887                           ; 1 bytes @ 0x4
  2888                           
  2889                           
  2890                           ; 2 bytes @ 0x4
  2891  0074                     	ds	1
  2892  0075                     ??_setLED:	
  2893  0075                     ??_setDimmerLights_DimmingClose:	
  2894                           ; 0 bytes @ 0x5
  2895                           
  2896  0075                     ??_DelayOff_Initialization:	
  2897                           ; 0 bytes @ 0x5
  2898                           
  2899  0075                     getDelayOff_GO@go:	
  2900                           ; 0 bytes @ 0x5
  2901                           
  2902  0075                     getDimmerLights_Status@status:	
  2903                           ; 1 bytes @ 0x5
  2904                           
  2905  0075                     setLED@led:	
  2906                           ; 1 bytes @ 0x5
  2907                           
  2908  0075                     Flash_Memory_Read@ret:	
  2909                           ; 1 bytes @ 0x5
  2910                           
  2911  0075                     ___bmul@multiplier:	
  2912                           ; 1 bytes @ 0x5
  2913                           
  2914  0075                     ___ftpack@exp:	
  2915                           ; 1 bytes @ 0x5
  2916                           
  2917  0075                     ___lbdiv@counter:	
  2918                           ; 1 bytes @ 0x5
  2919                           
  2920                           
  2921                           ; 1 bytes @ 0x5
  2922  0075                     	ds	1
  2923  0076                     ??_setLED_Initialization:	
  2924  0076                     ??_Flash_Memory_Modify:	
  2925                           ; 0 bytes @ 0x6
  2926                           
  2927  0076                     ??_Exception_Main:	
  2928                           ; 0 bytes @ 0x6
  2929                           
  2930  0076                     ??_setSw_Initialization:	
  2931                           ; 0 bytes @ 0x6
  2932                           
  2933  0076                     ??_Flash_Memory_Initialization:	
  2934                           ; 0 bytes @ 0x6
  2935                           
  2936  0076                     ??___awdiv:	
  2937                           ; 0 bytes @ 0x6
  2938                           
  2939  0076                     setLED_Initialization@led:	
  2940                           ; 0 bytes @ 0x6
  2941                           
  2942  0076                     setLED_Main@led:	
  2943                           ; 1 bytes @ 0x6
  2944                           
  2945  0076                     setSw_Initialization@sw:	
  2946                           ; 1 bytes @ 0x6
  2947                           
  2948  0076                     ___ftpack@sign:	
  2949                           ; 1 bytes @ 0x6
  2950                           
  2951  0076                     ___lbdiv@quotient:	
  2952                           ; 1 bytes @ 0x6
  2953                           
  2954                           
  2955                           ; 1 bytes @ 0x6
  2956  0076                     	ds	1
  2957  0077                     ??_Switch_Initialization:	
  2958  0077                     ??___ftpack:	
  2959                           ; 0 bytes @ 0x7
  2960                           
  2961  0077                     ??_setBuz:	
  2962                           ; 0 bytes @ 0x7
  2963                           
  2964  0077                     ??_LED_Initialization:	
  2965                           ; 0 bytes @ 0x7
  2966                           
  2967  0077                     ??_LED_Main:	
  2968                           ; 0 bytes @ 0x7
  2969                           
  2970  0077                     ?_Division:	
  2971                           ; 0 bytes @ 0x7
  2972                           
  2973  0077                     Division@num:	
  2974                           ; 1 bytes @ 0x7
  2975                           
  2976  0077                     Flash_Memory_Initialization@value:	
  2977                           ; 1 bytes @ 0x7
  2978                           
  2979  0077                     Flash_Memory_Modify@i:	
  2980                           ; 1 bytes @ 0x7
  2981                           
  2982                           
  2983                           ; 1 bytes @ 0x7
  2984  0077                     	ds	1
  2985  0078                     ??_Division:	
  2986  0078                     ??_Flash_Memory_Main:	
  2987                           ; 0 bytes @ 0x8
  2988                           
  2989  0078                     setBuz@count:	
  2990                           ; 0 bytes @ 0x8
  2991                           
  2992                           
  2993                           ; 1 bytes @ 0x8
  2994  0078                     	ds	1
  2995  0079                     ??_setDimmerLights_SwOn:	
  2996  0079                     ??_my_MainTimer:	
  2997                           ; 0 bytes @ 0x9
  2998                           
  2999                           
  3000                           ; 0 bytes @ 0x9
  3001  0079                     	ds	1
  3002  007A                     ??_setDimmerLights_Main:	
  3003  007A                     ??_Switch_Main:	
  3004                           ; 0 bytes @ 0xA
  3005                           
  3006  007A                     ??_DelayOff_Main:	
  3007                           ; 0 bytes @ 0xA
  3008                           
  3009  007A                     ??_DimmerLights_Initialization:	
  3010                           ; 0 bytes @ 0xA
  3011                           
  3012  007A                     ??_DimmerLights_Main:	
  3013                           ; 0 bytes @ 0xA
  3014                           
  3015  007A                     ??_main:	
  3016                           ; 0 bytes @ 0xA
  3017                           
  3018  007A                     ??___ftneg:	
  3019                           ; 0 bytes @ 0xA
  3020                           
  3021                           
  3022                           	psect	cstackBANK0
  3023  0020                     __pcstackBANK0:	
  3024                           ; 0 bytes @ 0xA
  3025                           
  3026  0020                     ?___awtoft:	
  3027  0020                     Division@value:	
  3028                           ; 3 bytes @ 0x0
  3029                           
  3030  0020                     Flash_Memory_Main@key_Status:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033  0020                     Exception_Main@lights:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036  0020                     ___awdiv@counter:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039  0020                     ___awtoft@c:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042                           
  3043                           ; 2 bytes @ 0x0
  3044  0020                     	ds	1
  3045  0021                     Division@result:	
  3046  0021                     _Flash_Memory_Main$2716:	
  3047                           ; 1 bytes @ 0x1
  3048                           
  3049  0021                     Exception_Main@count:	
  3050                           ; 1 bytes @ 0x1
  3051                           
  3052  0021                     ___awdiv@sign:	
  3053                           ; 1 bytes @ 0x1
  3054                           
  3055                           
  3056                           ; 1 bytes @ 0x1
  3057  0021                     	ds	1
  3058  0022                     ??_DimmerIntr_ValueCalculate:	
  3059  0022                     Exception_Main@status:	
  3060                           ; 0 bytes @ 0x2
  3061                           
  3062  0022                     ___awdiv@quotient:	
  3063                           ; 1 bytes @ 0x2
  3064                           
  3065                           
  3066                           ; 2 bytes @ 0x2
  3067  0022                     	ds	1
  3068  0023                     ??___awtoft:	
  3069  0023                     Exception_Main@error:	
  3070                           ; 0 bytes @ 0x3
  3071                           
  3072                           
  3073                           ; 1 bytes @ 0x3
  3074  0023                     	ds	1
  3075  0024                     ?_setBuz:	
  3076  0024                     DimmerIntr_ValueCalculate@lights:	
  3077                           ; 0 bytes @ 0x4
  3078                           
  3079  0024                     setBuz@time:	
  3080                           ; 1 bytes @ 0x4
  3081                           
  3082                           
  3083                           ; 2 bytes @ 0x4
  3084  0024                     	ds	1
  3085  0025                     ??_DimmerLights_DimmingFunction:	
  3086  0025                     ___awtoft@sign:	
  3087                           ; 0 bytes @ 0x5
  3088                           
  3089                           
  3090                           ; 1 bytes @ 0x5
  3091  0025                     	ds	1
  3092  0026                     ?___ftdiv:	
  3093  0026                     ?___ftmul:	
  3094                           ; 3 bytes @ 0x6
  3095                           
  3096  0026                     setDimmerLights_SwOn@idle:	
  3097                           ; 3 bytes @ 0x6
  3098                           
  3099  0026                     DimmerLights_DimmingFunction@lights:	
  3100                           ; 1 bytes @ 0x6
  3101                           
  3102  0026                     ___ftdiv@f2:	
  3103                           ; 1 bytes @ 0x6
  3104                           
  3105  0026                     ___ftmul@f1:	
  3106                           ; 3 bytes @ 0x6
  3107                           
  3108                           
  3109                           ; 3 bytes @ 0x6
  3110  0026                     	ds	1
  3111  0027                     setDimmerLights_SwOn@dimmingStatus:	
  3112                           
  3113                           ; 1 bytes @ 0x7
  3114  0027                     	ds	1
  3115  0028                     setDimmerLights_SwOn@sw:	
  3116                           
  3117                           ; 1 bytes @ 0x8
  3118  0028                     	ds	1
  3119  0029                     ??_setSw_Main:	
  3120  0029                     ___ftdiv@f1:	
  3121                           ; 0 bytes @ 0x9
  3122                           
  3123  0029                     ___ftmul@f2:	
  3124                           ; 3 bytes @ 0x9
  3125                           
  3126                           
  3127                           ; 3 bytes @ 0x9
  3128  0029                     	ds	2
  3129  002B                     setSw_Main@sw:	
  3130                           
  3131                           ; 1 bytes @ 0xB
  3132  002B                     	ds	1
  3133  002C                     ??___ftdiv:	
  3134  002C                     ??___ftmul:	
  3135                           ; 0 bytes @ 0xC
  3136                           
  3137                           
  3138                           ; 0 bytes @ 0xC
  3139  002C                     	ds	4
  3140  0030                     ___ftdiv@cntr:	
  3141  0030                     ___ftmul@exp:	
  3142                           ; 1 bytes @ 0x10
  3143                           
  3144                           
  3145                           ; 1 bytes @ 0x10
  3146  0030                     	ds	1
  3147  0031                     ___ftdiv@f3:	
  3148  0031                     ___ftmul@f3_as_product:	
  3149                           ; 3 bytes @ 0x11
  3150                           
  3151                           
  3152                           ; 3 bytes @ 0x11
  3153  0031                     	ds	3
  3154  0034                     ___ftdiv@exp:	
  3155  0034                     ___ftmul@cntr:	
  3156                           ; 1 bytes @ 0x14
  3157                           
  3158                           
  3159                           ; 1 bytes @ 0x14
  3160  0034                     	ds	1
  3161  0035                     ___ftdiv@sign:	
  3162  0035                     ___ftmul@sign:	
  3163                           ; 1 bytes @ 0x15
  3164                           
  3165                           
  3166                           ; 1 bytes @ 0x15
  3167  0035                     	ds	1
  3168  0036                     ?___ftneg:	
  3169  0036                     ___ftneg@f1:	
  3170                           ; 3 bytes @ 0x16
  3171                           
  3172                           
  3173                           ; 3 bytes @ 0x16
  3174  0036                     	ds	3
  3175  0039                     ?___ftadd:	
  3176  0039                     ___ftadd@f1:	
  3177                           ; 3 bytes @ 0x19
  3178                           
  3179                           
  3180                           ; 3 bytes @ 0x19
  3181  0039                     	ds	3
  3182  003C                     ___ftadd@f2:	
  3183                           
  3184                           ; 3 bytes @ 0x1C
  3185  003C                     	ds	3
  3186  003F                     ??___ftadd:	
  3187                           
  3188                           ; 0 bytes @ 0x1F
  3189  003F                     	ds	4
  3190  0043                     ___ftadd@sign:	
  3191                           
  3192                           ; 1 bytes @ 0x23
  3193  0043                     	ds	1
  3194  0044                     ___ftadd@exp2:	
  3195                           
  3196                           ; 1 bytes @ 0x24
  3197  0044                     	ds	1
  3198  0045                     ___ftadd@exp1:	
  3199                           
  3200                           ; 1 bytes @ 0x25
  3201  0045                     	ds	1
  3202  0046                     ?___fttol:	
  3203  0046                     ___fttol@f1:	
  3204                           ; 4 bytes @ 0x26
  3205                           
  3206                           
  3207                           ; 3 bytes @ 0x26
  3208  0046                     	ds	4
  3209  004A                     ??___fttol:	
  3210                           
  3211                           ; 0 bytes @ 0x2A
  3212  004A                     	ds	4
  3213  004E                     ___fttol@sign1:	
  3214                           
  3215                           ; 1 bytes @ 0x2E
  3216  004E                     	ds	1
  3217  004F                     ___fttol@lval:	
  3218                           
  3219                           ; 4 bytes @ 0x2F
  3220  004F                     	ds	4
  3221  0053                     ___fttol@exp1:	
  3222                           
  3223                           ; 1 bytes @ 0x33
  3224  0053                     	ds	1
  3225  0054                     ??_getDimmerLights_ValueToPercent:	
  3226  0054                     ??_getDimmerLights_PercentToValue:	
  3227                           ; 0 bytes @ 0x34
  3228                           
  3229                           
  3230                           ; 0 bytes @ 0x34
  3231  0054                     	ds	2
  3232  0056                     getDimmerLights_PercentToValue@value:	
  3233  0056                     getDimmerLights_ValueToPercent@value:	
  3234                           ; 1 bytes @ 0x36
  3235                           
  3236                           
  3237                           ; 1 bytes @ 0x36
  3238  0056                     	ds	1
  3239  0057                     getDimmerLights_PercentToValue@i:	
  3240  0057                     getDimmerLights_ValueToPercent@i:	
  3241                           ; 3 bytes @ 0x37
  3242                           
  3243                           
  3244                           ; 3 bytes @ 0x37
  3245  0057                     	ds	3
  3246  005A                     ?_setProductData:	
  3247  005A                     ??_DimmerIntr_Initialization:	
  3248                           ; 0 bytes @ 0x3A
  3249                           
  3250  005A                     ?_setDimmerIntr_DimmingValue:	
  3251                           ; 0 bytes @ 0x3A
  3252                           
  3253  005A                     ?_setDimmerIntr_MaxmumValue:	
  3254                           ; 0 bytes @ 0x3A
  3255                           
  3256  005A                     setDimmerIntr_DimmingValue@value:	
  3257                           ; 0 bytes @ 0x3A
  3258                           
  3259  005A                     setDimmerIntr_MaxmumValue@value:	
  3260                           ; 1 bytes @ 0x3A
  3261                           
  3262  005A                     setProductData@value:	
  3263                           ; 1 bytes @ 0x3A
  3264                           
  3265                           
  3266                           ; 1 bytes @ 0x3A
  3267  005A                     	ds	1
  3268  005B                     ??_setProductData:	
  3269  005B                     ??_setDimmerIntr_DimmingValue:	
  3270                           ; 0 bytes @ 0x3B
  3271                           
  3272  005B                     ??_setDimmerIntr_MaxmumValue:	
  3273                           ; 0 bytes @ 0x3B
  3274                           
  3275                           
  3276                           ; 0 bytes @ 0x3B
  3277  005B                     	ds	1
  3278  005C                     setDimmerIntr_DimmingValue@lights:	
  3279  005C                     setDimmerIntr_MaxmumValue@lights:	
  3280                           ; 1 bytes @ 0x3C
  3281                           
  3282  005C                     setProductData@address:	
  3283                           ; 1 bytes @ 0x3C
  3284                           
  3285                           
  3286                           ; 1 bytes @ 0x3C
  3287  005C                     	ds	1
  3288  005D                     ??_DlyOff_Main:	
  3289  005D                     ?_setDimmerLights_Dimming:	
  3290                           ; 0 bytes @ 0x3D
  3291                           
  3292  005D                     ?_setDelayOff_GO:	
  3293                           ; 0 bytes @ 0x3D
  3294                           
  3295  005D                     setDelayOff_GO@command:	
  3296                           ; 0 bytes @ 0x3D
  3297                           
  3298  005D                     setDimmerLights_Dimming@status:	
  3299                           ; 1 bytes @ 0x3D
  3300                           
  3301                           
  3302                           ; 1 bytes @ 0x3D
  3303  005D                     	ds	1
  3304  005E                     ??_setDimmerLights_Dimming:	
  3305  005E                     setDelayOff_GO@value:	
  3306                           ; 0 bytes @ 0x3E
  3307                           
  3308                           
  3309                           ; 1 bytes @ 0x3E
  3310  005E                     	ds	1
  3311  005F                     ??_setDelayOff_GO:	
  3312  005F                     DlyOff_Main@sw:	
  3313                           ; 0 bytes @ 0x3F
  3314                           
  3315  005F                     setDimmerLights_Dimming@value:	
  3316                           ; 1 bytes @ 0x3F
  3317                           
  3318                           
  3319                           ; 1 bytes @ 0x3F
  3320  005F                     	ds	1
  3321  0060                     setDimmerLights_Dimming@lights:	
  3322                           
  3323                           ; 1 bytes @ 0x40
  3324  0060                     	ds	1
  3325  0061                     setDelayOff_GO@i:	
  3326                           
  3327                           ; 1 bytes @ 0x41
  3328  0061                     	ds	1
  3329  0062                     setDelayOff_GO@j:	
  3330                           
  3331                           ; 1 bytes @ 0x42
  3332  0062                     	ds	1
  3333  0063                     setDelayOff_GO@k:	
  3334                           
  3335                           ; 1 bytes @ 0x43
  3336  0063                     	ds	1
  3337  0064                     setDelayOff_GO@sw:	
  3338                           
  3339                           ; 1 bytes @ 0x44
  3340  0064                     	ds	1
  3341  0065                     ?_setDimmerLights_OnOff:	
  3342  0065                     setDimmerLights_OnOff@command:	
  3343                           ; 0 bytes @ 0x45
  3344                           
  3345                           
  3346                           ; 1 bytes @ 0x45
  3347  0065                     	ds	1
  3348  0066                     ??_setDimmerLights_OnOff:	
  3349                           
  3350                           ; 0 bytes @ 0x46
  3351  0066                     	ds	2
  3352  0068                     setDimmerLights_OnOff@lights:	
  3353                           
  3354                           ; 1 bytes @ 0x48
  3355  0068                     	ds	1
  3356  0069                     setDimmerLights_Main@lights:	
  3357                           
  3358                           ; 1 bytes @ 0x49
  3359  0069                     	ds	1
  3360                           
  3361                           	psect	maintext
  3362  0C95                     __pmaintext:	
  3363 ;;
  3364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3365 ;;
  3366 ;; *************** function _main *****************
  3367 ;; Defined at:
  3368 ;;		line 6 in file "../src/Main_B1.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  argc            2    0[BANK1 ] int 
  3371 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  2    0[BANK1 ] int 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 17F/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3383 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;Total ram usage:        4 bytes
  3388 ;; Hardware stack levels required when called:    9
  3389 ;; This function calls:
  3390 ;;		_Buzzer_Initialization
  3391 ;;		_Buzzer_Main
  3392 ;;		_DelayOff_Initialization
  3393 ;;		_DelayOff_Main
  3394 ;;		_DimmerLights_Initialization
  3395 ;;		_DimmerLights_Main
  3396 ;;		_Exception_Main
  3397 ;;		_Flash_Memory_Initialization
  3398 ;;		_Flash_Memory_Main
  3399 ;;		_LED_Initialization
  3400 ;;		_LED_Main
  3401 ;;		_Mcu_Initialization
  3402 ;;		_Switch_Initialization
  3403 ;;		_Switch_Main
  3404 ;;		_WDT_Main
  3405 ;;		_myMain_Initialization
  3406 ;;		_my_MainTimer
  3407 ;; This function is called by:
  3408 ;;		Startup code after reset
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _main
  3414  0C95                     _main:	
  3415                           
  3416                           ;Main_B1.c: 7: myMain_Initialization();
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3420  0C95  3189  2118  318C   	fcall	_myMain_Initialization
  3421                           
  3422                           ;Main_B1.c: 8: Mcu_Initialization();
  3423  0C98  3189  217A  318C   	fcall	_Mcu_Initialization
  3424                           
  3425                           ;Main_B1.c: 9: Flash_Memory_Initialization();
  3426  0C9B  3182  2294  318C   	fcall	_Flash_Memory_Initialization
  3427                           
  3428                           ;Main_B1.c: 10: LED_Initialization();
  3429  0C9E  3197  27C0  318C   	fcall	_LED_Initialization
  3430                           
  3431                           ;Main_B1.c: 11: Buzzer_Initialization();
  3432  0CA1  3197  27AF  318C   	fcall	_Buzzer_Initialization
  3433                           
  3434                           ;Main_B1.c: 13: ;;
  3435                           ;Main_B1.c: 14: ;;
  3436                           ;Main_B1.c: 15: ;;
  3437                           ;Main_B1.c: 16: ;;
  3438                           ;Main_B1.c: 17: DelayOff_Initialization();
  3439  0CA4  3197  27B8  318C   	fcall	_DelayOff_Initialization
  3440                           
  3441                           ;Main_B1.c: 19: DimmerLights_Initialization();
  3442  0CA7  3197  27EB  318C   	fcall	_DimmerLights_Initialization
  3443                           
  3444                           ;Main_B1.c: 20: ;;
  3445                           ;Main_B1.c: 21: ;;
  3446                           ;Main_B1.c: 22: ;;
  3447                           ;Main_B1.c: 23: Switch_Initialization();
  3448  0CAA  3197  27CC  318C   	fcall	_Switch_Initialization
  3449  0CAD                     l1014:	
  3450                           ;Main_B1.c: 25: ;;
  3451                           ;Main_B1.c: 26: ;;
  3452                           ;Main_B1.c: 28: while (1) {
  3453                           
  3454                           
  3455                           ;Main_B1.c: 55: }
  3456                           ;Main_B1.c: 91: if (Timer1.Timeout == 1) {
  3457  0CAD  0021               	movlb	1	; select bank1
  3458  0CAE  1C4E               	btfss	_Timer1^(0+128),0
  3459  0CAF  2CAD               	goto	l1014
  3460                           
  3461                           ;Main_B1.c: 92: Timer1.Timeout = 0;
  3462  0CB0  104E               	bcf	_Timer1^(0+128),0
  3463                           
  3464                           ;Main_B1.c: 94: my_MainTimer();
  3465  0CB1  318C  245D  318C   	fcall	_my_MainTimer
  3466                           
  3467                           ;Main_B1.c: 95: WDT_Main();
  3468  0CB4  3189  2137  318C   	fcall	_WDT_Main
  3469                           
  3470                           ;Main_B1.c: 96: ;;
  3471                           ;Main_B1.c: 97: ;;
  3472                           ;Main_B1.c: 98: if (myMain.PowerON == 1) {
  3473  0CB7  0021               	movlb	1	; select bank1
  3474  0CB8  1C30               	btfss	_myMain^(0+128),0
  3475  0CB9  2CAD               	goto	l1014
  3476                           
  3477                           ;Main_B1.c: 99: Flash_Memory_Main();
  3478  0CBA  318D  250D  318C   	fcall	_Flash_Memory_Main
  3479                           
  3480                           ;Main_B1.c: 101: LED_Main();
  3481  0CBD  3197  27C4  318C   	fcall	_LED_Main
  3482                           
  3483                           ;Main_B1.c: 102: Buzzer_Main();
  3484  0CC0  3187  27B1  318C   	fcall	_Buzzer_Main
  3485                           
  3486                           ;Main_B1.c: 104: ;;
  3487                           ;Main_B1.c: 105: ;;
  3488                           ;Main_B1.c: 106: ;;
  3489                           ;Main_B1.c: 107: ;;
  3490                           ;Main_B1.c: 109: ;;
  3491                           ;Main_B1.c: 110: DimmerLights_Main();
  3492  0CC3  3188  2008  318C   	fcall	_DimmerLights_Main
  3493                           
  3494                           ;Main_B1.c: 111: Switch_Main();
  3495  0CC6  3197  27F9  318C   	fcall	_Switch_Main
  3496                           
  3497                           ;Main_B1.c: 112: ;;
  3498                           ;Main_B1.c: 113: ;;
  3499                           ;Main_B1.c: 115: ;;
  3500                           ;Main_B1.c: 116: DelayOff_Main();
  3501  0CC9  3197  27BC  318C   	fcall	_DelayOff_Main
  3502                           
  3503                           ;Main_B1.c: 117: ;;
  3504                           ;Main_B1.c: 118: ;;
  3505                           ;Main_B1.c: 119: Exception_Main();
  3506  0CCC  318B  23EF  318C   	fcall	_Exception_Main
  3507  0CCF  2CAD               	goto	l1014
  3508  0CD0                     __end_of_main:	
  3509                           ;Main_B1.c: 126: }
  3510                           ;Main_B1.c: 127: }
  3511                           ;Main_B1.c: 161: }
  3512                           ;Main_B1.c: 162: return (0);
  3513                           ;	Return value of _main is never used
  3514                           
  3515                           
  3516                           	psect	text1
  3517  0C5D                     __ptext1:	
  3518 ;; *************** function _my_MainTimer *****************
  3519 ;; Defined at:
  3520 ;;		line 183 in file "../src/Main_B1.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;		None               void
  3527 ;; Registers used:
  3528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;Total ram usage:        1 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    5
  3541 ;; This function calls:
  3542 ;;		_setBuz
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _my_MainTimer
  3550  0C5D                     _my_MainTimer:	
  3551                           
  3552                           ;Main_B1.c: 185: if (myMain.PowerON == 0) {
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3556  0C5D  0021               	movlb	1	; select bank1
  3557  0C5E  1830               	btfsc	_myMain^(0+128),0
  3558  0C5F  2C75               	goto	l5949
  3559                           
  3560                           ;Main_B1.c: 186: myMain.PowerCount++;
  3561  0C60  3001               	movlw	1
  3562  0C61  00F9               	movwf	??_my_MainTimer
  3563  0C62  0879               	movf	??_my_MainTimer,w
  3564  0C63  07B1               	addwf	(_myMain^(0+128)+1),f
  3565                           
  3566                           ;Main_B1.c: 187: if (myMain.PowerCount == (1500 / 20)) {
  3567  0C64  0831               	movf	(_myMain^(0+128)+1),w
  3568  0C65  3A4B               	xorlw	75
  3569  0C66  1D03               	skipz
  3570  0C67  0008               	return
  3571                           
  3572                           ;Main_B1.c: 188: myMain.PowerCount = 0;
  3573  0C68  01B1               	clrf	(_myMain^(0+128)+1)
  3574                           
  3575                           ;Main_B1.c: 189: myMain.PowerON = 1;
  3576  0C69  1430               	bsf	_myMain^(0+128),0
  3577                           
  3578                           ;Main_B1.c: 194: setBuz(3, 50);
  3579  0C6A  3032               	movlw	50
  3580  0C6B  0020               	movlb	0	; select bank0
  3581  0C6C  00A4               	movwf	setBuz@time
  3582  0C6D  3000               	movlw	0
  3583  0C6E  00A5               	movwf	setBuz@time+1
  3584  0C6F  3003               	movlw	3
  3585  0C70  318D  2590         	fcall	_setBuz
  3586                           
  3587                           ;Main_B1.c: 195: myMain.SelfTest = 1;
  3588  0C72  0021               	movlb	1	; select bank1
  3589  0C73  1630               	bsf	_myMain^(0+128),4
  3590                           
  3591                           ;Main_B1.c: 204: }
  3592                           ;Main_B1.c: 205: } else {
  3593  0C74  0008               	return
  3594  0C75                     l5949:	
  3595                           
  3596                           ;Main_B1.c: 206: myMain.PowerCount++;
  3597  0C75  3001               	movlw	1
  3598  0C76  00F9               	movwf	??_my_MainTimer
  3599  0C77  0879               	movf	??_my_MainTimer,w
  3600  0C78  07B1               	addwf	(_myMain^(0+128)+1),f
  3601                           
  3602                           ;Main_B1.c: 207: if (myMain.PowerCount == (1000 / 20)) {
  3603  0C79  0831               	movf	(_myMain^(0+128)+1),w
  3604  0C7A  3A32               	xorlw	50
  3605  0C7B  1903               	btfsc	3,2
  3606                           
  3607                           ;Main_B1.c: 208: myMain.PowerCount = 0;
  3608  0C7C  01B1               	clrf	(_myMain^(0+128)+1)
  3609                           
  3610                           ;Main_B1.c: 230: }
  3611                           ;Main_B1.c: 232: myMain.Count1++;
  3612  0C7D  3001               	movlw	1
  3613  0C7E  07B4               	addwf	(_myMain^(0+128)+4),f
  3614  0C7F  3000               	movlw	0
  3615  0C80  3DB5               	addwfc	((_myMain+1)^(0+128)+4),f
  3616                           
  3617                           ;Main_B1.c: 233: if (myMain.Count1 == (1000 / 20)) {
  3618  0C81  3004               	movlw	4
  3619  0C82  3EB0               	addlw	_myMain& (0+255)
  3620  0C83  0086               	movwf	6
  3621  0C84  0187               	clrf	7
  3622  0C85  3F40               	moviw [0]fsr1
  3623  0C86  3A32               	xorlw	50
  3624  0C87  1D03               	skipz
  3625  0C88  2C8B               	goto	u6265
  3626  0C89  3F41               	moviw [1]fsr1
  3627  0C8A  3A00               	xorlw	0
  3628  0C8B                     u6265:	
  3629  0C8B  1D03               	skipz
  3630  0C8C  0008               	return
  3631                           
  3632                           ;Main_B1.c: 234: myMain.Count1 = 0;
  3633  0C8D  01B4               	clrf	(_myMain^(0+128)+4)
  3634  0C8E  01B5               	clrf	((_myMain+1)^(0+128)+4)
  3635                           
  3636                           ;Main_B1.c: 246: if (myMain.Flag) {
  3637  0C8F  1CB0               	btfss	_myMain^(0+128),1
  3638  0C90  2C93               	goto	l1030
  3639                           
  3640                           ;Main_B1.c: 247: myMain.Flag = 0;
  3641  0C91  10B0               	bcf	_myMain^(0+128),1
  3642                           
  3643                           ;Main_B1.c: 256: } else {
  3644  0C92  0008               	return
  3645  0C93                     l1030:	
  3646                           
  3647                           ;Main_B1.c: 257: myMain.Flag = 1;
  3648  0C93  14B0               	bsf	_myMain^(0+128),1
  3649  0C94  0008               	return
  3650  0C95                     __end_of_my_MainTimer:	
  3651                           
  3652                           	psect	text2
  3653  0918                     __ptext2:	
  3654 ;; *************** function _myMain_Initialization *****************
  3655 ;; Defined at:
  3656 ;;		line 168 in file "../src/Main_B1.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;		None               void
  3663 ;; Registers used:
  3664 ;;		wreg, fsr1l, fsr1h
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;Total ram usage:        1 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    3
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _myMain_Initialization
  3686  0918                     _myMain_Initialization:	
  3687                           
  3688                           ;Main_B1.c: 171: product = &_product;
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _myMain_Initialization: [wregfsr1]
  3692  0918  30A0               	movlw	__product& (0+255)
  3693  0919  00F2               	movwf	??_myMain_Initialization
  3694  091A  0872               	movf	??_myMain_Initialization,w
  3695  091B  0020               	movlb	0	; select bank0
  3696  091C  00ED               	movwf	_product
  3697                           
  3698                           ;Main_B1.c: 172: product->Data[20] = 209;
  3699  091D  30D1               	movlw	209
  3700  091E  00F2               	movwf	??_myMain_Initialization
  3701  091F  086D               	movf	_product,w
  3702  0920  3E14               	addlw	20
  3703  0921  0086               	movwf	6
  3704  0922  3001               	movlw	1	; select bank2/3
  3705  0923  0087               	movwf	7
  3706  0924  0872               	movf	??_myMain_Initialization,w
  3707  0925  0081               	movwf	1
  3708  0926  0008               	return
  3709  0927                     __end_of_myMain_Initialization:	
  3710                           
  3711                           	psect	text3
  3712  0937                     __ptext3:	
  3713 ;; *************** function _WDT_Main *****************
  3714 ;; Defined at:
  3715 ;;		line 1121 in file "../src/MCU_B1.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;		None               void
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0, pclath, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3733 ;;Total ram usage:        1 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    4
  3736 ;; This function calls:
  3737 ;;		_WDT_Clearing
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _WDT_Main
  3745  0937                     _WDT_Main:	
  3746                           
  3747                           ;MCU_B1.c: 1122: if (WDT.Enable == 1) {
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3751  0937  0021               	movlb	1	; select bank1
  3752  0938  1C51               	btfss	_WDT^(0+128),0
  3753  0939  0008               	return
  3754                           
  3755                           ;MCU_B1.c: 1123: if (WDT.Timer-- > 0) {
  3756  093A  3001               	movlw	1
  3757  093B  02D2               	subwf	(_WDT^(0+128)+1),f
  3758  093C  0852               	movf	(_WDT^(0+128)+1),w
  3759  093D  3AFF               	xorlw	255
  3760  093E  1903               	skipnz
  3761  093F  0008               	return
  3762                           
  3763                           ;MCU_B1.c: 1124: WDT.Timer = 100;
  3764  0940  3064               	movlw	100
  3765  0941  00F2               	movwf	??_WDT_Main
  3766  0942  0872               	movf	??_WDT_Main,w
  3767  0943  00D2               	movwf	(_WDT^(0+128)+1)
  3768                           
  3769                           ;MCU_B1.c: 1125: WDT_Clearing();
  3770  0944  3180  2002         	fcall	_WDT_Clearing
  3771  0946  0008               	return
  3772  0947                     __end_of_WDT_Main:	
  3773                           
  3774                           	psect	text4
  3775  0002                     __ptext4:	
  3776 ;; *************** function _WDT_Clearing *****************
  3777 ;; Defined at:
  3778 ;;		line 1131 in file "../src/MCU_B1.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;		None               void
  3785 ;; Registers used:
  3786 ;;		None
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    3
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_WDT_Main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function _WDT_Clearing
  3808  0002                     _WDT_Clearing:	
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _WDT_Clearing: []
  3812  0002  0064               	clrwdt	;# 
  3813  0003  0008               	return
  3814  0004                     __end_of_WDT_Clearing:	
  3815                           
  3816                           	psect	text5
  3817  17F9                     __ptext5:	
  3818 ;; *************** function _Switch_Main *****************
  3819 ;; Defined at:
  3820 ;;		line 76 in file "../src/Switch_B1.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;		None               void
  3827 ;; Registers used:
  3828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    7
  3841 ;; This function calls:
  3842 ;;		_TouchPower
  3843 ;;		_setSw_Main
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           
  3850                           ;psect for function _Switch_Main
  3851  17F9                     _Switch_Main:	
  3852                           
  3853                           ;Switch_B1.c: 79: setSw_Main(1);
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3857  17F9  3001               	movlw	1
  3858  17FA  3180  2045  3197   	fcall	_setSw_Main
  3859                           
  3860                           ;Switch_B1.c: 91: TouchPower();
  3861  17FD  318A  2206         	fcall	_TouchPower
  3862  17FF  0008               	return
  3863  1800                     __end_of_Switch_Main:	
  3864                           
  3865                           	psect	text6
  3866  0045                     __ptext6:	
  3867 ;; *************** function _setSw_Main *****************
  3868 ;; Defined at:
  3869 ;;		line 117 in file "../src/Switch_B1.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  sw              1    wreg     unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  sw              1   11[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;		None               void
  3876 ;; Registers used:
  3877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;Total ram usage:        3 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    6
  3890 ;; This function calls:
  3891 ;;		_SwPointSelect
  3892 ;;		_getMain_All_Error_Status
  3893 ;;		_getSw_KeyStatus
  3894 ;;		_setDimmerLights_DimmingOn
  3895 ;;		_setDimmerLights_SwOff
  3896 ;;		_setDimmerLights_SwOn
  3897 ;; This function is called by:
  3898 ;;		_Switch_Main
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           
  3903                           ;psect for function _setSw_Main
  3904  0045                     _setSw_Main:	
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3908                           ;setSw_Main@sw stored from wreg
  3909  0045  0020               	movlb	0	; select bank0
  3910  0046  00AB               	movwf	setSw_Main@sw
  3911                           
  3912                           ;Switch_B1.c: 118: SwPointSelect(sw);
  3913  0047  082B               	movf	setSw_Main@sw,w
  3914  0048  3188  2061  3180   	fcall	_SwPointSelect
  3915                           
  3916                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  3917  004B  0020               	movlb	0	; select bank0
  3918  004C  086C               	movf	_Sw,w
  3919  004D  0086               	movwf	6
  3920  004E  3001               	movlw	1	; select bank2/3
  3921  004F  0087               	movwf	7
  3922  0050  1C01               	btfss	1,0
  3923  0051  2994               	goto	l1497
  3924                           
  3925                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  3926  0052  3000               	movlw	0
  3927  0053  3197  27B5  3180   	fcall	_getMain_All_Error_Status
  3928  0056  3800               	iorlw	0
  3929  0057  1D03               	skipz
  3930  0058  2874               	goto	l5789
  3931                           
  3932                           ;Switch_B1.c: 122: Sw->Detect = 0;
  3933  0059  0020               	movlb	0	; select bank0
  3934  005A  0A6C               	incf	_Sw,w
  3935  005B  0086               	movwf	6
  3936  005C  3001               	movlw	1	; select bank2/3
  3937  005D  0087               	movwf	7
  3938  005E  1081               	bcf	1,1
  3939                           
  3940                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  3941  005F  082B               	movf	setSw_Main@sw,w
  3942  0060  3189  2169  3180   	fcall	_getSw_KeyStatus
  3943  0063  3A01               	xorlw	1
  3944  0064  3000               	movlw	0
  3945  0065  1903               	skipnz
  3946  0066  3001               	movlw	1
  3947  0067  0020               	movlb	0	; select bank0
  3948  0068  00A9               	movwf	??_setSw_Main
  3949  0069  086C               	movf	_Sw,w
  3950  006A  0086               	movwf	6
  3951  006B  3001               	movlw	1	; select bank2/3
  3952  006C  0087               	movwf	7
  3953  006D  0DA9               	rlf	??_setSw_Main,f
  3954  006E  0801               	movf	1,w
  3955  006F  0629               	xorwf	??_setSw_Main,w
  3956  0070  39FD               	andlw	-3
  3957  0071  0629               	xorwf	??_setSw_Main,w
  3958  0072  0081               	movwf	1
  3959                           
  3960                           ;Switch_B1.c: 124: } else {
  3961  0073  288A               	goto	l1499
  3962  0074                     l5789:	
  3963                           
  3964                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  3965  0074  0020               	movlb	0	; select bank0
  3966  0075  0A6C               	incf	_Sw,w
  3967  0076  0086               	movwf	6
  3968  0077  3001               	movlw	1	; select bank2/3
  3969  0078  0087               	movwf	7
  3970  0079  1881               	btfsc	1,1
  3971  007A  288A               	goto	l1499
  3972                           
  3973                           ;Switch_B1.c: 126: Sw->Detect = 1;
  3974  007B  0A6C               	incf	_Sw,w
  3975  007C  0086               	movwf	6
  3976  007D  3001               	movlw	1	; select bank2/3
  3977  007E  0087               	movwf	7
  3978  007F  1481               	bsf	1,1
  3979                           
  3980                           ;Switch_B1.c: 128: Sw->Touch = 0;
  3981  0080  086C               	movf	_Sw,w
  3982  0081  0086               	movwf	6
  3983  0082  3001               	movlw	1	; select bank2/3
  3984  0083  0087               	movwf	7
  3985  0084  1081               	bcf	1,1
  3986                           
  3987                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  3988  0085  086C               	movf	_Sw,w
  3989  0086  0086               	movwf	6
  3990  0087  3001               	movlw	1	; select bank2/3
  3991  0088  0087               	movwf	7
  3992  0089  1501               	bsf	1,2
  3993  008A                     l1499:	
  3994                           
  3995                           ;Switch_B1.c: 130: }
  3996                           ;Switch_B1.c: 131: }
  3997                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  3998  008A  086C               	movf	_Sw,w
  3999  008B  0086               	movwf	6
  4000  008C  3001               	movlw	1	; select bank2/3
  4001  008D  0087               	movwf	7
  4002  008E  1C81               	btfss	1,1
  4003  008F  2946               	goto	l5831
  4004                           
  4005                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  4006  0090  086C               	movf	_Sw,w
  4007  0091  0086               	movwf	6
  4008  0092  3001               	movlw	1	; select bank2/3
  4009  0093  0087               	movwf	7
  4010  0094  1901               	btfsc	1,2
  4011  0095  28B7               	goto	l5805
  4012                           
  4013                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  4014  0096  3001               	movlw	1
  4015  0097  00A9               	movwf	??_setSw_Main
  4016  0098  086C               	movf	_Sw,w
  4017  0099  3E02               	addlw	2
  4018  009A  0086               	movwf	6
  4019  009B  3001               	movlw	1	; select bank2/3
  4020  009C  0087               	movwf	7
  4021  009D  0829               	movf	??_setSw_Main,w
  4022  009E  0781               	addwf	1,f
  4023                           
  4024                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  4025  009F  086C               	movf	_Sw,w
  4026  00A0  3E02               	addlw	2
  4027  00A1  0086               	movwf	6
  4028  00A2  3001               	movlw	1	; select bank2/3
  4029  00A3  0087               	movwf	7
  4030  00A4  3005               	movlw	5
  4031  00A5  0201               	subwf	1,w
  4032  00A6  1C03               	skipc
  4033  00A7  0008               	return
  4034                           
  4035                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  4036  00A8  086C               	movf	_Sw,w
  4037  00A9  3E02               	addlw	2
  4038  00AA  0086               	movwf	6
  4039  00AB  3001               	movlw	1	; select bank2/3
  4040  00AC  0087               	movwf	7
  4041  00AD  0181               	clrf	1
  4042                           
  4043                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  4044  00AE  086C               	movf	_Sw,w
  4045  00AF  0086               	movwf	6
  4046  00B0  3001               	movlw	1	; select bank2/3
  4047  00B1  0087               	movwf	7
  4048  00B2  1501               	bsf	1,2
  4049                           
  4050                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  4051  00B3  082B               	movf	setSw_Main@sw,w
  4052  00B4  318D  254E         	fcall	_setDimmerLights_SwOn
  4053                           
  4054                           ;Switch_B1.c: 147: }
  4055                           ;Switch_B1.c: 148: } else {
  4056  00B6  0008               	return
  4057  00B7                     l5805:	
  4058                           
  4059                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  4060  00B7  0020               	movlb	0	; select bank0
  4061  00B8  086C               	movf	_Sw,w
  4062  00B9  0086               	movwf	6
  4063  00BA  3001               	movlw	1	; select bank2/3
  4064  00BB  0087               	movwf	7
  4065  00BC  1981               	btfsc	1,3
  4066  00BD  28E9               	goto	l5815
  4067                           
  4068                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  4069  00BE  086C               	movf	_Sw,w
  4070  00BF  3E03               	addlw	3
  4071  00C0  0086               	movwf	6
  4072  00C1  3001               	movlw	1	; select bank2/3
  4073  00C2  0087               	movwf	7
  4074  00C3  3001               	movlw	1
  4075  00C4  0781               	addwf	1,f
  4076  00C5  3141               	addfsr 1,1
  4077  00C6  1803               	skipnc
  4078  00C7  0A81               	incf	1,f
  4079                           
  4080                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  4081  00C8  086C               	movf	_Sw,w
  4082  00C9  3E03               	addlw	3
  4083  00CA  0086               	movwf	6
  4084  00CB  3001               	movlw	1	; select bank2/3
  4085  00CC  0087               	movwf	7
  4086  00CD  3F40               	moviw [0]fsr1
  4087  00CE  00A9               	movwf	??_setSw_Main
  4088  00CF  3F41               	moviw [1]fsr1
  4089  00D0  00AA               	movwf	??_setSw_Main+1
  4090  00D1  3000               	movlw	0
  4091  00D2  022A               	subwf	??_setSw_Main+1,w
  4092  00D3  304B               	movlw	75
  4093  00D4  1903               	skipnz
  4094  00D5  0229               	subwf	??_setSw_Main,w
  4095  00D6  1C03               	skipc
  4096  00D7  0008               	return
  4097                           
  4098                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  4099  00D8  086C               	movf	_Sw,w
  4100  00D9  3E03               	addlw	3
  4101  00DA  0086               	movwf	6
  4102  00DB  3001               	movlw	1	; select bank2/3
  4103  00DC  0087               	movwf	7
  4104  00DD  3000               	movlw	0
  4105  00DE  3FC0               	movwi [0]fsr1
  4106  00DF  3FC1               	movwi [1]fsr1
  4107                           
  4108                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  4109  00E0  086C               	movf	_Sw,w
  4110  00E1  0086               	movwf	6
  4111  00E2  3001               	movlw	1	; select bank2/3
  4112  00E3  0087               	movwf	7
  4113  00E4  1581               	bsf	1,3
  4114                           
  4115                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  4116  00E5  082B               	movf	setSw_Main@sw,w
  4117  00E6  318A  2294         	fcall	_setDimmerLights_DimmingOn
  4118                           
  4119                           ;Switch_B1.c: 162: }
  4120                           ;Switch_B1.c: 163: } else {
  4121  00E8  0008               	return
  4122  00E9                     l5815:	
  4123                           
  4124                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  4125  00E9  0020               	movlb	0	; select bank0
  4126  00EA  086C               	movf	_Sw,w
  4127  00EB  0086               	movwf	6
  4128  00EC  3001               	movlw	1	; select bank2/3
  4129  00ED  0087               	movwf	7
  4130  00EE  1A01               	btfsc	1,4
  4131  00EF  2918               	goto	l5823
  4132                           
  4133                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  4134  00F0  086C               	movf	_Sw,w
  4135  00F1  3E05               	addlw	5
  4136  00F2  0086               	movwf	6
  4137  00F3  3001               	movlw	1	; select bank2/3
  4138  00F4  0087               	movwf	7
  4139  00F5  3001               	movlw	1
  4140  00F6  0781               	addwf	1,f
  4141  00F7  3141               	addfsr 1,1
  4142  00F8  1803               	skipnc
  4143  00F9  0A81               	incf	1,f
  4144                           
  4145                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  4146  00FA  086C               	movf	_Sw,w
  4147  00FB  3E05               	addlw	5
  4148  00FC  0086               	movwf	6
  4149  00FD  3001               	movlw	1	; select bank2/3
  4150  00FE  0087               	movwf	7
  4151  00FF  3F40               	moviw [0]fsr1
  4152  0100  00A9               	movwf	??_setSw_Main
  4153  0101  3F41               	moviw [1]fsr1
  4154  0102  00AA               	movwf	??_setSw_Main+1
  4155  0103  3000               	movlw	0
  4156  0104  022A               	subwf	??_setSw_Main+1,w
  4157  0105  304B               	movlw	75
  4158  0106  1903               	skipnz
  4159  0107  0229               	subwf	??_setSw_Main,w
  4160  0108  1C03               	skipc
  4161  0109  0008               	return
  4162                           
  4163                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  4164  010A  086C               	movf	_Sw,w
  4165  010B  3E05               	addlw	5
  4166  010C  0086               	movwf	6
  4167  010D  3001               	movlw	1	; select bank2/3
  4168  010E  0087               	movwf	7
  4169  010F  3000               	movlw	0
  4170  0110  3FC0               	movwi [0]fsr1
  4171  0111  3FC1               	movwi [1]fsr1
  4172                           
  4173                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  4174  0112  086C               	movf	_Sw,w
  4175  0113  0086               	movwf	6
  4176  0114  3001               	movlw	1	; select bank2/3
  4177  0115  0087               	movwf	7
  4178  0116  1601               	bsf	1,4
  4179                           
  4180                           ;Switch_B1.c: 179: }
  4181                           ;Switch_B1.c: 180: } else {
  4182  0117  0008               	return
  4183  0118                     l5823:	
  4184                           
  4185                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  4186  0118  086C               	movf	_Sw,w
  4187  0119  0086               	movwf	6
  4188  011A  3001               	movlw	1	; select bank2/3
  4189  011B  0087               	movwf	7
  4190  011C  1A81               	btfsc	1,5
  4191  011D  0008               	return
  4192                           
  4193                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  4194  011E  086C               	movf	_Sw,w
  4195  011F  3E07               	addlw	7
  4196  0120  0086               	movwf	6
  4197  0121  3001               	movlw	1	; select bank2/3
  4198  0122  0087               	movwf	7
  4199  0123  3001               	movlw	1
  4200  0124  0781               	addwf	1,f
  4201  0125  3141               	addfsr 1,1
  4202  0126  1803               	skipnc
  4203  0127  0A81               	incf	1,f
  4204                           
  4205                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  4206  0128  086C               	movf	_Sw,w
  4207  0129  3E07               	addlw	7
  4208  012A  0086               	movwf	6
  4209  012B  3001               	movlw	1	; select bank2/3
  4210  012C  0087               	movwf	7
  4211  012D  3F40               	moviw [0]fsr1
  4212  012E  00A9               	movwf	??_setSw_Main
  4213  012F  3F41               	moviw [1]fsr1
  4214  0130  00AA               	movwf	??_setSw_Main+1
  4215  0131  3000               	movlw	0
  4216  0132  022A               	subwf	??_setSw_Main+1,w
  4217  0133  3096               	movlw	150
  4218  0134  1903               	skipnz
  4219  0135  0229               	subwf	??_setSw_Main,w
  4220  0136  1C03               	skipc
  4221  0137  0008               	return
  4222                           
  4223                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  4224  0138  086C               	movf	_Sw,w
  4225  0139  3E07               	addlw	7
  4226  013A  0086               	movwf	6
  4227  013B  3001               	movlw	1	; select bank2/3
  4228  013C  0087               	movwf	7
  4229  013D  3000               	movlw	0
  4230  013E  3FC0               	movwi [0]fsr1
  4231  013F  3FC1               	movwi [1]fsr1
  4232                           
  4233                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  4234  0140  086C               	movf	_Sw,w
  4235  0141  0086               	movwf	6
  4236  0142  3001               	movlw	1	; select bank2/3
  4237  0143  0087               	movwf	7
  4238  0144  1681               	bsf	1,5
  4239                           
  4240                           ;Switch_B1.c: 191: }
  4241                           ;Switch_B1.c: 192: }
  4242                           ;Switch_B1.c: 193: }
  4243                           ;Switch_B1.c: 195: }
  4244                           ;Switch_B1.c: 196: }
  4245                           ;Switch_B1.c: 197: } else {
  4246  0145  0008               	return
  4247  0146                     l5831:	
  4248                           
  4249                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  4250  0146  086C               	movf	_Sw,w
  4251  0147  0086               	movwf	6
  4252  0148  3001               	movlw	1	; select bank2/3
  4253  0149  0087               	movwf	7
  4254  014A  1D01               	btfss	1,2
  4255  014B  0008               	return
  4256                           
  4257                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  4258  014C  3001               	movlw	1
  4259  014D  00A9               	movwf	??_setSw_Main
  4260  014E  086C               	movf	_Sw,w
  4261  014F  3E02               	addlw	2
  4262  0150  0086               	movwf	6
  4263  0151  3001               	movlw	1	; select bank2/3
  4264  0152  0087               	movwf	7
  4265  0153  0829               	movf	??_setSw_Main,w
  4266  0154  0781               	addwf	1,f
  4267                           
  4268                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  4269  0155  086C               	movf	_Sw,w
  4270  0156  3E02               	addlw	2
  4271  0157  0086               	movwf	6
  4272  0158  3001               	movlw	1	; select bank2/3
  4273  0159  0087               	movwf	7
  4274  015A  3005               	movlw	5
  4275  015B  0201               	subwf	1,w
  4276  015C  1C03               	skipc
  4277  015D  0008               	return
  4278                           
  4279                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  4280  015E  086C               	movf	_Sw,w
  4281  015F  3E02               	addlw	2
  4282  0160  0086               	movwf	6
  4283  0161  3001               	movlw	1	; select bank2/3
  4284  0162  0087               	movwf	7
  4285  0163  0181               	clrf	1
  4286                           
  4287                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  4288  0164  086C               	movf	_Sw,w
  4289  0165  0086               	movwf	6
  4290  0166  3001               	movlw	1	; select bank2/3
  4291  0167  0087               	movwf	7
  4292  0168  1101               	bcf	1,2
  4293                           
  4294                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  4295  0169  086C               	movf	_Sw,w
  4296  016A  3E03               	addlw	3
  4297  016B  0086               	movwf	6
  4298  016C  3001               	movlw	1	; select bank2/3
  4299  016D  0087               	movwf	7
  4300  016E  3000               	movlw	0
  4301  016F  3FC0               	movwi [0]fsr1
  4302  0170  3FC1               	movwi [1]fsr1
  4303                           
  4304                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  4305  0171  086C               	movf	_Sw,w
  4306  0172  0086               	movwf	6
  4307  0173  3001               	movlw	1	; select bank2/3
  4308  0174  0087               	movwf	7
  4309  0175  1181               	bcf	1,3
  4310                           
  4311                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  4312  0176  086C               	movf	_Sw,w
  4313  0177  0086               	movwf	6
  4314  0178  3001               	movlw	1	; select bank2/3
  4315  0179  0087               	movwf	7
  4316  017A  1201               	bcf	1,4
  4317                           
  4318                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  4319  017B  086C               	movf	_Sw,w
  4320  017C  0086               	movwf	6
  4321  017D  3001               	movlw	1	; select bank2/3
  4322  017E  0087               	movwf	7
  4323  017F  1281               	bcf	1,5
  4324                           
  4325                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  4326  0180  086C               	movf	_Sw,w
  4327  0181  3E05               	addlw	5
  4328  0182  0086               	movwf	6
  4329  0183  3001               	movlw	1	; select bank2/3
  4330  0184  0087               	movwf	7
  4331  0185  3000               	movlw	0
  4332  0186  3FC0               	movwi [0]fsr1
  4333  0187  3FC1               	movwi [1]fsr1
  4334                           
  4335                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  4336  0188  086C               	movf	_Sw,w
  4337  0189  3E07               	addlw	7
  4338  018A  0086               	movwf	6
  4339  018B  3001               	movlw	1	; select bank2/3
  4340  018C  0087               	movwf	7
  4341  018D  3000               	movlw	0
  4342  018E  3FC0               	movwi [0]fsr1
  4343  018F  3FC1               	movwi [1]fsr1
  4344                           
  4345                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  4346  0190  082B               	movf	setSw_Main@sw,w
  4347  0191  318B  235B         	fcall	_setDimmerLights_SwOff
  4348                           
  4349                           ;Switch_B1.c: 222: }
  4350                           ;Switch_B1.c: 223: }
  4351                           ;Switch_B1.c: 224: }
  4352                           ;Switch_B1.c: 225: } else {
  4353  0193  0008               	return
  4354  0194                     l1497:	
  4355                           
  4356                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  4357  0194  0021               	movlb	1	; select bank1
  4358  0195  1C30               	btfss	_myMain^(0+128),0
  4359  0196  0008               	return
  4360                           
  4361                           ;Switch_B1.c: 227: Sw->Enable = 1;
  4362  0197  0020               	movlb	0	; select bank0
  4363  0198  086C               	movf	_Sw,w
  4364  0199  0086               	movwf	6
  4365  019A  3001               	movlw	1	; select bank2/3
  4366  019B  0087               	movwf	7
  4367  019C  1401               	bsf	1,0
  4368  019D  0008               	return
  4369  019E                     __end_of_setSw_Main:	
  4370                           
  4371                           	psect	text7
  4372  0A94                     __ptext7:	
  4373 ;; *************** function _setDimmerLights_DimmingOn *****************
  4374 ;; Defined at:
  4375 ;;		line 848 in file "../src/Dimmer_B1.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  sw              1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  sw              1    4[COMMON] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;		None               void
  4382 ;; Registers used:
  4383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;Total ram usage:        1 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    4
  4396 ;; This function calls:
  4397 ;;		_DimmerLights_SelectPointer
  4398 ;; This function is called by:
  4399 ;;		_setSw_Main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _setDimmerLights_DimmingOn
  4405  0A94                     _setDimmerLights_DimmingOn:	
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4409                           ;setDimmerLights_DimmingOn@sw stored from wreg
  4410  0A94  00F4               	movwf	setDimmerLights_DimmingOn@sw
  4411                           
  4412                           ;Dimmer_B1.c: 854: DimmerLights_SelectPointer(sw);
  4413  0A95  0874               	movf	setDimmerLights_DimmingOn@sw,w
  4414  0A96  3188  2040  318A   	fcall	_DimmerLights_SelectPointer
  4415                           
  4416                           ;Dimmer_B1.c: 855: if (DimmerLights->Trigger == 0) {
  4417  0A99  0020               	movlb	0	; select bank0
  4418  0A9A  086B               	movf	_DimmerLights,w
  4419  0A9B  0086               	movwf	6
  4420  0A9C  0187               	clrf	7
  4421  0A9D  1881               	btfsc	1,1
  4422  0A9E  0008               	return
  4423                           
  4424                           ;Dimmer_B1.c: 856: if (DimmerLights->SwFlag == 1) {
  4425  0A9F  086B               	movf	_DimmerLights,w
  4426  0AA0  0086               	movwf	6
  4427  0AA1  0187               	clrf	7
  4428  0AA2  1C01               	btfss	1,0
  4429  0AA3  0008               	return
  4430                           
  4431                           ;Dimmer_B1.c: 857: DimmerLights->Status = 1;
  4432  0AA4  0A6B               	incf	_DimmerLights,w
  4433  0AA5  0086               	movwf	6
  4434  0AA6  0187               	clrf	7
  4435  0AA7  1401               	bsf	1,0
  4436                           
  4437                           ;Dimmer_B1.c: 859: DimmerLights->DimmingSwFlag = 1;
  4438  0AA8  086B               	movf	_DimmerLights,w
  4439  0AA9  0086               	movwf	6
  4440  0AAA  0187               	clrf	7
  4441  0AAB  1581               	bsf	1,3
  4442                           
  4443                           ;Dimmer_B1.c: 860: DimmerLights->DimmingTrigger = 1;
  4444  0AAC  086B               	movf	_DimmerLights,w
  4445  0AAD  0086               	movwf	6
  4446  0AAE  0187               	clrf	7
  4447  0AAF  1601               	bsf	1,4
  4448                           
  4449                           ;Dimmer_B1.c: 861: DimmerLights->DimmingSwitch = 1;
  4450  0AB0  086B               	movf	_DimmerLights,w
  4451  0AB1  0086               	movwf	6
  4452  0AB2  0187               	clrf	7
  4453  0AB3  1681               	bsf	1,5
  4454  0AB4  0008               	return
  4455  0AB5                     __end_of_setDimmerLights_DimmingOn:	
  4456                           
  4457                           	psect	text8
  4458  0969                     __ptext8:	
  4459 ;; *************** function _getSw_KeyStatus *****************
  4460 ;; Defined at:
  4461 ;;		line 238 in file "../src/Switch_B1.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  sw              1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  sw              1    0[COMMON] unsigned char 
  4466 ;;  status          1    3[COMMON] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      unsigned char 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;Total ram usage:        3 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_setSw_Main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           
  4491                           ;psect for function _getSw_KeyStatus
  4492  0969                     _getSw_KeyStatus:	
  4493                           
  4494                           ;Switch_B1.c: 239: char status = 0;
  4495                           
  4496                           ;incstack = 0
  4497                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  4498  0969  01F3               	clrf	getSw_KeyStatus@status
  4499                           
  4500                           ;Switch_B1.c: 279: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  4501  096A  01F4               	clrf	_getSw_KeyStatus$5375
  4502  096B  0AF4               	incf	_getSw_KeyStatus$5375,f
  4503  096C  0020               	movlb	0	; select bank0
  4504  096D  1F0C               	btfss	12,6	;volatile
  4505  096E  1A0C               	btfsc	12,4	;volatile
  4506  096F  2974               	goto	l4417
  4507  0970  1C0C               	btfss	12,0	;volatile
  4508  0971  1B8C               	btfsc	12,7	;volatile
  4509  0972  2974               	goto	l4417
  4510  0973  01F4               	clrf	_getSw_KeyStatus$5375
  4511  0974                     l4417:	
  4512  0974  0874               	movf	_getSw_KeyStatus$5375,w
  4513  0975  00F2               	movwf	??_getSw_KeyStatus
  4514  0976  0872               	movf	??_getSw_KeyStatus,w
  4515  0977  00F3               	movwf	getSw_KeyStatus@status
  4516                           
  4517                           ;Switch_B1.c: 283: return status;
  4518  0978  0873               	movf	getSw_KeyStatus@status,w
  4519  0979  0008               	return
  4520  097A                     __end_of_getSw_KeyStatus:	
  4521                           
  4522                           	psect	text9
  4523  0861                     __ptext9:	
  4524 ;; *************** function _SwPointSelect *****************
  4525 ;; Defined at:
  4526 ;;		line 25 in file "../src/Switch_B1.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  sw              1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  sw              1    3[COMMON] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;		None               void
  4533 ;; Registers used:
  4534 ;;		wreg
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;Total ram usage:        2 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    3
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_setSw_Main
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function _SwPointSelect
  4556  0861                     _SwPointSelect:	
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _SwPointSelect: [wreg]
  4560                           ;SwPointSelect@sw stored from wreg
  4561  0861  00F3               	movwf	SwPointSelect@sw
  4562                           
  4563                           ;Switch_B1.c: 28: if (sw == 1) {
  4564  0862  0873               	movf	SwPointSelect@sw,w
  4565  0863  3A01               	xorlw	1
  4566  0864  1D03               	skipz
  4567  0865  0008               	return
  4568                           
  4569                           ;Switch_B1.c: 29: Sw = &Sw1;
  4570  0866  3055               	movlw	_Sw1& (0+255)
  4571  0867  00F2               	movwf	??_SwPointSelect
  4572  0868  0872               	movf	??_SwPointSelect,w
  4573  0869  0020               	movlb	0	; select bank0
  4574  086A  00EC               	movwf	_Sw
  4575  086B  0008               	return
  4576  086C                     __end_of_SwPointSelect:	
  4577                           
  4578                           	psect	text10
  4579  0A06                     __ptext10:	
  4580 ;; *************** function _TouchPower *****************
  4581 ;; Defined at:
  4582 ;;		line 10 in file "../src/Switch_B1.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;		None               void
  4589 ;; Registers used:
  4590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    4
  4603 ;; This function calls:
  4604 ;;		_Timeout_Counter
  4605 ;;		_set_TimeoutCleared
  4606 ;; This function is called by:
  4607 ;;		_Switch_Main
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           
  4612                           ;psect for function _TouchPower
  4613  0A06                     _TouchPower:	
  4614                           
  4615                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4619  0A06  0021               	movlb	1	; select bank1
  4620  0A07  1C30               	btfss	_myMain^(0+128),0
  4621  0A08  0008               	return
  4622                           
  4623                           ;Switch_B1.c: 12: if (RB0 == 0) {
  4624  0A09  0020               	movlb	0	; select bank0
  4625  0A0A  180D               	btfsc	13,0	;volatile
  4626  0A0B  0008               	return
  4627  0A0C  2A12               	goto	l4729
  4628  0A0D                     l1477:	
  4629                           ;Switch_B1.c: 13: while (RB0 == 0 && myMain.Timeout == 0) {
  4630                           
  4631                           
  4632                           ;Switch_B1.c: 14: RB0 = 1;
  4633  0A0D  0020               	movlb	0	; select bank0
  4634  0A0E  140D               	bsf	13,0	;volatile
  4635                           
  4636                           ;Switch_B1.c: 15: Timeout_Counter();
  4637  0A0F  3189  21F1  318A   	fcall	_Timeout_Counter
  4638  0A12                     l4729:	
  4639  0A12  0020               	movlb	0	; select bank0
  4640  0A13  180D               	btfsc	13,0	;volatile
  4641  0A14  2A18               	goto	l4733
  4642  0A15  0021               	movlb	1	; select bank1
  4643  0A16  1D3A               	btfss	(_myMain^(0+128)+10),2
  4644  0A17  2A0D               	goto	l1477
  4645  0A18                     l4733:	
  4646                           
  4647                           ;Switch_B1.c: 16: }
  4648                           ;Switch_B1.c: 17: set_TimeoutCleared();
  4649  0A18  3197  27DA         	fcall	_set_TimeoutCleared
  4650  0A1A  0008               	return
  4651  0A1B                     __end_of_TouchPower:	
  4652                           
  4653                           	psect	text11
  4654  17DA                     __ptext11:	
  4655 ;; *************** function _set_TimeoutCleared *****************
  4656 ;; Defined at:
  4657 ;;		line 285 in file "../src/Main_B1.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;		None               void
  4664 ;; Registers used:
  4665 ;;		status,2
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:    3
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_TouchPower
  4682 ;;		_getAD
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _set_TimeoutCleared
  4688  17DA                     _set_TimeoutCleared:	
  4689                           
  4690                           ;Main_B1.c: 286: myMain.Timeout = 0;
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _set_TimeoutCleared: [status,2]
  4694  17DA  0021               	movlb	1	; select bank1
  4695  17DB  113A               	bcf	(_myMain^(0+128)+10),2
  4696                           
  4697                           ;Main_B1.c: 287: myMain.Timeout_Counter = 0;
  4698  17DC  01BB               	clrf	(_myMain^(0+128)+11)
  4699  17DD  01BC               	clrf	((_myMain+1)^(0+128)+11)
  4700  17DE  0008               	return
  4701  17DF                     __end_of_set_TimeoutCleared:	
  4702                           
  4703                           	psect	text12
  4704  09F1                     __ptext12:	
  4705 ;; *************** function _Timeout_Counter *****************
  4706 ;; Defined at:
  4707 ;;		line 276 in file "../src/Main_B1.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;		None               void
  4714 ;; Registers used:
  4715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    3
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_TouchPower
  4732 ;;		_getAD
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           
  4737                           ;psect for function _Timeout_Counter
  4738  09F1                     _Timeout_Counter:	
  4739                           
  4740                           ;Main_B1.c: 277: myMain.Timeout_Counter++;
  4741                           
  4742                           ;incstack = 0
  4743                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  4744  09F1  3001               	movlw	1
  4745  09F2  0021               	movlb	1	; select bank1
  4746  09F3  07BB               	addwf	(_myMain^(0+128)+11),f
  4747  09F4  3000               	movlw	0
  4748  09F5  3DBC               	addwfc	((_myMain+1)^(0+128)+11),f
  4749                           
  4750                           ;Main_B1.c: 278: if (myMain.Timeout_Counter == 25000) {
  4751  09F6  300B               	movlw	11
  4752  09F7  3EB0               	addlw	_myMain& (0+255)
  4753  09F8  0086               	movwf	6
  4754  09F9  0187               	clrf	7
  4755  09FA  3F40               	moviw [0]fsr1
  4756  09FB  3AA8               	xorlw	168
  4757  09FC  1D03               	skipz
  4758  09FD  2A00               	goto	u3895
  4759  09FE  3F41               	moviw [1]fsr1
  4760  09FF  3A61               	xorlw	97
  4761  0A00                     u3895:	
  4762  0A00  1D03               	skipz
  4763  0A01  0008               	return
  4764                           
  4765                           ;Main_B1.c: 279: myMain.Timeout_Counter = 0;
  4766  0A02  01BB               	clrf	(_myMain^(0+128)+11)
  4767  0A03  01BC               	clrf	((_myMain+1)^(0+128)+11)
  4768                           
  4769                           ;Main_B1.c: 280: myMain.Timeout = 1;
  4770  0A04  153A               	bsf	(_myMain^(0+128)+10),2
  4771  0A05  0008               	return
  4772  0A06                     __end_of_Timeout_Counter:	
  4773                           
  4774                           	psect	text13
  4775  17CC                     __ptext13:	
  4776 ;; *************** function _Switch_Initialization *****************
  4777 ;; Defined at:
  4778 ;;		line 46 in file "../src/Switch_B1.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;		None               void
  4785 ;; Registers used:
  4786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    6
  4799 ;; This function calls:
  4800 ;;		_setSw_Initialization
  4801 ;; This function is called by:
  4802 ;;		_main
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           
  4807                           ;psect for function _Switch_Initialization
  4808  17CC                     _Switch_Initialization:	
  4809                           
  4810                           ;Switch_B1.c: 52: setSw_Initialization(1);
  4811                           
  4812                           ;incstack = 0
  4813                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4814  17CC  3001               	movlw	1
  4815  17CD  3188  20EC         	fcall	_setSw_Initialization
  4816  17CF  0008               	return
  4817  17D0                     __end_of_Switch_Initialization:	
  4818                           
  4819                           	psect	text14
  4820  08EC                     __ptext14:	
  4821 ;; *************** function _setSw_Initialization *****************
  4822 ;; Defined at:
  4823 ;;		line 66 in file "../src/Switch_B1.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  sw              1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  sw              1    6[COMMON] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;		None               void
  4830 ;; Registers used:
  4831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    5
  4844 ;; This function calls:
  4845 ;;		_setLED
  4846 ;; This function is called by:
  4847 ;;		_Switch_Initialization
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _setSw_Initialization
  4853  08EC                     _setSw_Initialization:	
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4857                           ;setSw_Initialization@sw stored from wreg
  4858  08EC  00F6               	movwf	setSw_Initialization@sw
  4859                           
  4860                           ;Switch_B1.c: 68: setLED(sw, 1);
  4861  08ED  01F4               	clrf	setLED@command
  4862  08EE  0AF4               	incf	setLED@command,f
  4863  08EF  0876               	movf	setSw_Initialization@sw,w
  4864  08F0  318B  23BA  3188   	fcall	_setLED
  4865                           
  4866                           ;Switch_B1.c: 70: setLED(sw + 1, 1);
  4867  08F3  01F4               	clrf	setLED@command
  4868  08F4  0AF4               	incf	setLED@command,f
  4869  08F5  0876               	movf	setSw_Initialization@sw,w
  4870  08F6  3E01               	addlw	1
  4871  08F7  318B  23BA         	fcall	_setLED
  4872  08F9  0008               	return
  4873  08FA                     __end_of_setSw_Initialization:	
  4874                           
  4875                           	psect	text15
  4876  097A                     __ptext15:	
  4877 ;; *************** function _Mcu_Initialization *****************
  4878 ;; Defined at:
  4879 ;;		line 30 in file "../src/MCU_B1.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;		None               void
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0, pclath, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;Total ram usage:        0 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    4
  4900 ;; This function calls:
  4901 ;;		_ADC_Set
  4902 ;;		_Fosc_Set
  4903 ;;		_IOC_Set
  4904 ;;		_IO_Set
  4905 ;;		_TMR1_Set
  4906 ;;		_WDT_Set
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _Mcu_Initialization
  4914  097A                     _Mcu_Initialization:	
  4915                           
  4916                           ;MCU_B1.c: 32: Fosc_Set();
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4920  097A  3197  27C8  3189   	fcall	_Fosc_Set
  4921                           
  4922                           ;MCU_B1.c: 34: IO_Set();
  4923  097D  318A  221B  3189   	fcall	_IO_Set
  4924                           
  4925                           ;MCU_B1.c: 36: ;;
  4926                           ;MCU_B1.c: 38: TMR1_Set();
  4927  0980  3188  209C  3189   	fcall	_TMR1_Set
  4928                           
  4929                           ;MCU_B1.c: 40: ADC_Set();
  4930  0983  3197  27F2  3189   	fcall	_ADC_Set
  4931                           
  4932                           ;MCU_B1.c: 42: ;;
  4933                           ;MCU_B1.c: 44: ;;
  4934                           ;MCU_B1.c: 46: IOC_Set();
  4935  0986  3188  2056  3189   	fcall	_IOC_Set
  4936                           
  4937                           ;MCU_B1.c: 48: ;;
  4938                           ;MCU_B1.c: 50: ;;
  4939                           ;MCU_B1.c: 52: WDT_Set();
  4940  0989  3187  27F7         	fcall	_WDT_Set
  4941  098B  0008               	return
  4942  098C                     __end_of_Mcu_Initialization:	
  4943                           
  4944                           	psect	text16
  4945  07F7                     __ptext16:	
  4946 ;; *************** function _WDT_Set *****************
  4947 ;; Defined at:
  4948 ;;		line 1107 in file "../src/MCU_B1.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		wreg
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;Total ram usage:        1 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    3
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_Mcu_Initialization
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           
  4977                           ;psect for function _WDT_Set
  4978  07F7                     _WDT_Set:	
  4979                           
  4980                           ;MCU_B1.c: 1114: WDTCON = 0b00010111;;
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in _WDT_Set: [wreg]
  4984  07F7  3017               	movlw	23
  4985  07F8  0021               	movlb	1	; select bank1
  4986  07F9  0097               	movwf	23	;volatile
  4987                           
  4988                           ;MCU_B1.c: 1116: WDT.Enable = 1;
  4989  07FA  1451               	bsf	_WDT^(0+128),0
  4990                           
  4991                           ;MCU_B1.c: 1117: WDT.Timer = 10;
  4992  07FB  300A               	movlw	10
  4993  07FC  00F2               	movwf	??_WDT_Set
  4994  07FD  0872               	movf	??_WDT_Set,w
  4995  07FE  00D2               	movwf	(_WDT^(0+128)+1)
  4996  07FF  0008               	return
  4997  0800                     __end_of_WDT_Set:	
  4998                           
  4999                           	psect	text17
  5000  089C                     __ptext17:	
  5001 ;; *************** function _TMR1_Set *****************
  5002 ;; Defined at:
  5003 ;;		line 226 in file "../src/MCU_B1.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;		None               void
  5010 ;; Registers used:
  5011 ;;		wreg
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;Total ram usage:        0 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    3
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_Mcu_Initialization
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _TMR1_Set
  5033  089C                     _TMR1_Set:	
  5034                           
  5035                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _TMR1_Set: [wreg]
  5039  089C  3041               	movlw	65
  5040  089D  0020               	movlb	0	; select bank0
  5041  089E  0098               	movwf	24	;volatile
  5042                           
  5043                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5044  089F  30FA               	movlw	250
  5045  08A0  0097               	movwf	23	;volatile
  5046                           
  5047                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5048  08A1  3038               	movlw	56
  5049  08A2  0096               	movwf	22	;volatile
  5050                           
  5051                           ;MCU_B1.c: 230: TMR1IE = 1;
  5052  08A3  0021               	movlb	1	; select bank1
  5053  08A4  1411               	bsf	17,0	;volatile
  5054                           
  5055                           ;MCU_B1.c: 231: PEIE = 1;
  5056  08A5  170B               	bsf	11,6	;volatile
  5057                           
  5058                           ;MCU_B1.c: 232: GIE = 1;
  5059  08A6  178B               	bsf	11,7	;volatile
  5060  08A7  0008               	return
  5061  08A8                     __end_of_TMR1_Set:	
  5062                           
  5063                           	psect	text18
  5064  0A1B                     __ptext18:	
  5065 ;; *************** function _IO_Set *****************
  5066 ;; Defined at:
  5067 ;;		line 60 in file "../src/MCU_B1.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;		None               void
  5074 ;; Registers used:
  5075 ;;		wreg, status,2
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    3
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_Mcu_Initialization
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _IO_Set
  5097  0A1B                     _IO_Set:	
  5098                           
  5099                           ;MCU_B1.c: 92: TRISA = 0b11110111;;
  5100                           
  5101                           ;incstack = 0
  5102                           ; Regs used in _IO_Set: [wreg+status,2]
  5103  0A1B  30F7               	movlw	247
  5104  0A1C  0021               	movlb	1	; select bank1
  5105  0A1D  008C               	movwf	12	;volatile
  5106                           
  5107                           ;MCU_B1.c: 93: TRISB = 0b00000100;;
  5108  0A1E  3004               	movlw	4
  5109  0A1F  008D               	movwf	13	;volatile
  5110                           
  5111                           ;MCU_B1.c: 94: TRISC = 0b00100110;;
  5112  0A20  3026               	movlw	38
  5113  0A21  008E               	movwf	14	;volatile
  5114                           
  5115                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  5116  0A22  0022               	movlb	2	; select bank2
  5117  0A23  018C               	clrf	12	;volatile
  5118                           
  5119                           ;MCU_B1.c: 97: LATB = 0b00000000;;
  5120  0A24  018D               	clrf	13	;volatile
  5121                           
  5122                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  5123  0A25  018E               	clrf	14	;volatile
  5124                           
  5125                           ;MCU_B1.c: 100: ANSELA = 0b00001110;;
  5126  0A26  300E               	movlw	14
  5127  0A27  0023               	movlb	3	; select bank3
  5128  0A28  008C               	movwf	12	;volatile
  5129                           
  5130                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  5131  0A29  018D               	clrf	13	;volatile
  5132                           
  5133                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  5134  0A2A  018E               	clrf	14	;volatile
  5135                           
  5136                           ;MCU_B1.c: 104: PORTA = 0b11110111;;
  5137  0A2B  30F7               	movlw	247
  5138  0A2C  0020               	movlb	0	; select bank0
  5139  0A2D  008C               	movwf	12	;volatile
  5140                           
  5141                           ;MCU_B1.c: 105: PORTB = 0b00000100;;
  5142  0A2E  3004               	movlw	4
  5143  0A2F  008D               	movwf	13	;volatile
  5144                           
  5145                           ;MCU_B1.c: 106: PORTC = 0b00100110;;
  5146  0A30  3026               	movlw	38
  5147  0A31  008E               	movwf	14	;volatile
  5148                           
  5149                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  5150  0A32  0024               	movlb	4	; select bank4
  5151  0A33  018D               	clrf	13	;volatile
  5152  0A34  0008               	return
  5153  0A35                     __end_of_IO_Set:	
  5154                           
  5155                           	psect	text19
  5156  0856                     __ptext19:	
  5157 ;; *************** function _IOC_Set *****************
  5158 ;; Defined at:
  5159 ;;		line 381 in file "../src/MCU_B1.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;		None               void
  5166 ;; Registers used:
  5167 ;;		wreg, status,2
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    3
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_Mcu_Initialization
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           
  5188                           ;psect for function _IOC_Set
  5189  0856                     _IOC_Set:	
  5190                           
  5191                           ;MCU_B1.c: 383: IOCBP = 0b00000100;;
  5192                           
  5193                           ;incstack = 0
  5194                           ; Regs used in _IOC_Set: [wreg+status,2]
  5195  0856  3004               	movlw	4
  5196  0857  0027               	movlb	7	; select bank7
  5197  0858  0094               	movwf	20	;volatile
  5198                           
  5199                           ;MCU_B1.c: 384: IOCBN = 0b00000100;;
  5200  0859  3004               	movlw	4
  5201  085A  0095               	movwf	21	;volatile
  5202                           
  5203                           ;MCU_B1.c: 386: IOCBF = 0b00000000;
  5204  085B  0196               	clrf	22	;volatile
  5205                           
  5206                           ;MCU_B1.c: 388: IOCIE = 1;
  5207  085C  158B               	bsf	11,3	;volatile
  5208                           
  5209                           ;MCU_B1.c: 389: IOCIF = 0;
  5210  085D  100B               	bcf	11,0	;volatile
  5211                           
  5212                           ;MCU_B1.c: 390: PEIE = 1;
  5213  085E  170B               	bsf	11,6	;volatile
  5214                           
  5215                           ;MCU_B1.c: 391: GIE = 1;
  5216  085F  178B               	bsf	11,7	;volatile
  5217  0860  0008               	return
  5218  0861                     __end_of_IOC_Set:	
  5219                           
  5220                           	psect	text20
  5221  17C8                     __ptext20:	
  5222 ;; *************** function _Fosc_Set *****************
  5223 ;; Defined at:
  5224 ;;		line 56 in file "../src/MCU_B1.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;		None               void
  5231 ;; Registers used:
  5232 ;;		wreg
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5242 ;;Total ram usage:        0 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    3
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_Mcu_Initialization
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           
  5253                           ;psect for function _Fosc_Set
  5254  17C8                     _Fosc_Set:	
  5255                           
  5256                           ;MCU_B1.c: 57: OSCCON = 0x78;
  5257                           
  5258                           ;incstack = 0
  5259                           ; Regs used in _Fosc_Set: [wreg]
  5260  17C8  3078               	movlw	120
  5261  17C9  0021               	movlb	1	; select bank1
  5262  17CA  0099               	movwf	25	;volatile
  5263  17CB  0008               	return
  5264  17CC                     __end_of_Fosc_Set:	
  5265                           
  5266                           	psect	text21
  5267  17F2                     __ptext21:	
  5268 ;; *************** function _ADC_Set *****************
  5269 ;; Defined at:
  5270 ;;		line 429 in file "../src/MCU_B1.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;		None               void
  5277 ;; Registers used:
  5278 ;;		wreg
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    3
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_Mcu_Initialization
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _ADC_Set
  5300  17F2                     _ADC_Set:	
  5301                           
  5302                           ;MCU_B1.c: 430: ADCON1 = 0xf3;
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _ADC_Set: [wreg]
  5306  17F2  30F3               	movlw	243
  5307  17F3  0021               	movlb	1	; select bank1
  5308  17F4  009E               	movwf	30	;volatile
  5309                           
  5310                           ;MCU_B1.c: 431: FVRCON = 0xc1;
  5311  17F5  30C1               	movlw	193
  5312  17F6  0022               	movlb	2	; select bank2
  5313  17F7  0097               	movwf	23	;volatile
  5314  17F8  0008               	return
  5315  17F9                     __end_of_ADC_Set:	
  5316                           
  5317                           	psect	text22
  5318  17C4                     __ptext22:	
  5319 ;; *************** function _LED_Main *****************
  5320 ;; Defined at:
  5321 ;;		line 47 in file "../src/LED_B1.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;		None               void
  5328 ;; Registers used:
  5329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;Total ram usage:        0 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    5
  5342 ;; This function calls:
  5343 ;;		_setLED_Main
  5344 ;; This function is called by:
  5345 ;;		_main
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _LED_Main
  5351  17C4                     _LED_Main:	
  5352                           
  5353                           ;LED_B1.c: 67: setLED_Main(99);
  5354                           
  5355                           ;incstack = 0
  5356                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5357  17C4  3063               	movlw	99
  5358  17C5  318B  232D         	fcall	_setLED_Main
  5359  17C7  0008               	return
  5360  17C8                     __end_of_LED_Main:	
  5361                           
  5362                           	psect	text23
  5363  0B2D                     __ptext23:	
  5364 ;; *************** function _setLED_Main *****************
  5365 ;; Defined at:
  5366 ;;		line 229 in file "../src/LED_B1.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  led             1    wreg     unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  led             1    6[COMMON] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;Total ram usage:        3 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    4
  5387 ;; This function calls:
  5388 ;;		_LedPointSelect
  5389 ;; This function is called by:
  5390 ;;		_LED_Main
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function _setLED_Main
  5396  0B2D                     _setLED_Main:	
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5400                           ;setLED_Main@led stored from wreg
  5401  0B2D  00F6               	movwf	setLED_Main@led
  5402                           
  5403                           ;LED_B1.c: 230: LedPointSelect(led);
  5404  0B2E  0876               	movf	setLED_Main@led,w
  5405  0B2F  3188  202B  318B   	fcall	_LedPointSelect
  5406                           
  5407                           ;LED_B1.c: 231: if (LED->GO == 1) {
  5408  0B32  087B               	movf	_LED,w
  5409  0B33  0086               	movwf	6
  5410  0B34  0187               	clrf	7
  5411  0B35  1C81               	btfss	1,1
  5412  0B36  0008               	return
  5413                           
  5414                           ;LED_B1.c: 232: LED->Time++;
  5415  0B37  0A7B               	incf	_LED,w
  5416  0B38  0086               	movwf	6
  5417  0B39  0187               	clrf	7
  5418  0B3A  3001               	movlw	1
  5419  0B3B  0781               	addwf	1,f
  5420  0B3C  3141               	addfsr 1,1
  5421  0B3D  1803               	skipnc
  5422  0B3E  0A81               	incf	1,f
  5423                           
  5424                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  5425  0B3F  0A7B               	incf	_LED,w
  5426  0B40  0086               	movwf	6
  5427  0B41  0187               	clrf	7
  5428  0B42  3F40               	moviw [0]fsr1
  5429  0B43  00F4               	movwf	??_setLED_Main
  5430  0B44  3F41               	moviw [1]fsr1
  5431  0B45  00F5               	movwf	??_setLED_Main+1
  5432  0B46  3000               	movlw	0
  5433  0B47  0275               	subwf	??_setLED_Main+1,w
  5434  0B48  3019               	movlw	25
  5435  0B49  1903               	skipnz
  5436  0B4A  0274               	subwf	??_setLED_Main,w
  5437  0B4B  1C03               	skipc
  5438  0B4C  0008               	return
  5439                           
  5440                           ;LED_B1.c: 234: LED->Time = 0;
  5441  0B4D  0A7B               	incf	_LED,w
  5442  0B4E  0086               	movwf	6
  5443  0B4F  0187               	clrf	7
  5444  0B50  3000               	movlw	0
  5445  0B51  3FC0               	movwi [0]fsr1
  5446  0B52  3FC1               	movwi [1]fsr1
  5447                           
  5448                           ;LED_B1.c: 252: if (led == 99) {
  5449  0B53  0876               	movf	setLED_Main@led,w
  5450  0B54  3A63               	xorlw	99
  5451  0B55  1D03               	skipz
  5452  0B56  0008               	return
  5453                           
  5454                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  5455  0B57  3020               	movlw	32
  5456  0B58  0020               	movlb	0	; select bank0
  5457  0B59  068D               	xorwf	13,f
  5458  0B5A  0008               	return
  5459  0B5B                     __end_of_setLED_Main:	
  5460                           
  5461                           	psect	text24
  5462  17C0                     __ptext24:	
  5463 ;; *************** function _LED_Initialization *****************
  5464 ;; Defined at:
  5465 ;;		line 31 in file "../src/LED_B1.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;		None               void
  5472 ;; Registers used:
  5473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    6
  5486 ;; This function calls:
  5487 ;;		_setLED_Initialization
  5488 ;; This function is called by:
  5489 ;;		_main
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _LED_Initialization
  5495  17C0                     _LED_Initialization:	
  5496                           
  5497                           ;LED_B1.c: 42: setLED_Initialization(99);
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5501  17C0  3063               	movlw	99
  5502  17C1  3188  20DE         	fcall	_setLED_Initialization
  5503  17C3  0008               	return
  5504  17C4                     __end_of_LED_Initialization:	
  5505                           
  5506                           	psect	text25
  5507  08DE                     __ptext25:	
  5508 ;; *************** function _setLED_Initialization *****************
  5509 ;; Defined at:
  5510 ;;		line 74 in file "../src/LED_B1.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  led             1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  led             1    6[COMMON] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;Total ram usage:        1 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    5
  5531 ;; This function calls:
  5532 ;;		_LedPointSelect
  5533 ;;		_setLED
  5534 ;; This function is called by:
  5535 ;;		_LED_Initialization
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _setLED_Initialization
  5541  08DE                     _setLED_Initialization:	
  5542                           
  5543                           ;incstack = 0
  5544                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5545                           ;setLED_Initialization@led stored from wreg
  5546  08DE  00F6               	movwf	setLED_Initialization@led
  5547                           
  5548                           ;LED_B1.c: 75: LedPointSelect(led);
  5549  08DF  0876               	movf	setLED_Initialization@led,w
  5550  08E0  3188  202B  3188   	fcall	_LedPointSelect
  5551                           
  5552                           ;LED_B1.c: 76: LED->Enable = 1;
  5553  08E3  087B               	movf	_LED,w
  5554  08E4  0086               	movwf	6
  5555  08E5  0187               	clrf	7
  5556  08E6  1401               	bsf	1,0
  5557                           
  5558                           ;LED_B1.c: 77: setLED(led, 0);
  5559  08E7  01F4               	clrf	setLED@command
  5560  08E8  0876               	movf	setLED_Initialization@led,w
  5561  08E9  318B  23BA         	fcall	_setLED
  5562  08EB  0008               	return
  5563  08EC                     __end_of_setLED_Initialization:	
  5564                           
  5565                           	psect	text26
  5566  0D0D                     __ptext26:	
  5567 ;; *************** function _Flash_Memory_Main *****************
  5568 ;; Defined at:
  5569 ;;		line 980 in file "../src/MCU_B1.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;		None
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  key_Status      1    0[BANK0 ] unsigned char 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;		None               void
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;Total ram usage:        3 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    6
  5590 ;; This function calls:
  5591 ;;		_Flash_Memory_Modify
  5592 ;;		_getAll_Sw_KeyStatus
  5593 ;;		_getMain_All_LightsStatus
  5594 ;; This function is called by:
  5595 ;;		_main
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _Flash_Memory_Main
  5601  0D0D                     _Flash_Memory_Main:	
  5602                           
  5603                           ;MCU_B1.c: 981: char key_Status = 0;
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5607  0D0D  0020               	movlb	0	; select bank0
  5608  0D0E  01A0               	clrf	Flash_Memory_Main@key_Status
  5609                           
  5610                           ;MCU_B1.c: 983: key_Status = getAll_Sw_KeyStatus();
  5611  0D0F  3189  2158  318D   	fcall	_getAll_Sw_KeyStatus
  5612  0D12  00F8               	movwf	??_Flash_Memory_Main
  5613  0D13  0878               	movf	??_Flash_Memory_Main,w
  5614  0D14  0020               	movlb	0	; select bank0
  5615  0D15  00A0               	movwf	Flash_Memory_Main@key_Status
  5616                           
  5617                           ;MCU_B1.c: 985: if (Memory.Modify == 1) {
  5618  0D16  0022               	movlb	2	; select bank2
  5619  0D17  1C54               	btfss	(_Memory^(0+256)+36),0
  5620  0D18  0008               	return
  5621                           
  5622                           ;MCU_B1.c: 986: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
  5623  0D19  0020               	movlb	0	; select bank0
  5624  0D1A  01A1               	clrf	_Flash_Memory_Main$2716
  5625  0D1B  3188  2000  318D   	fcall	_getMain_All_LightsStatus
  5626  0D1E  3800               	iorlw	0
  5627  0D1F  1D03               	skipz
  5628  0D20  2D27               	goto	l5911
  5629  0D21  0020               	movlb	0	; select bank0
  5630  0D22  08A0               	movf	Flash_Memory_Main@key_Status,f
  5631  0D23  1D03               	skipz
  5632  0D24  2D27               	goto	l5911
  5633  0D25  01A1               	clrf	_Flash_Memory_Main$2716
  5634  0D26  0AA1               	incf	_Flash_Memory_Main$2716,f
  5635  0D27                     l5911:	
  5636  0D27  0020               	movlb	0	; select bank0
  5637  0D28  0821               	movf	_Flash_Memory_Main$2716,w
  5638  0D29  0022               	movlb	2	; select bank2
  5639  0D2A  10D4               	bcf	(_Memory^(0+256)+36),1
  5640  0D2B  1D03               	skipz
  5641  0D2C  14D4               	bsf	(_Memory^(0+256)+36),1
  5642                           
  5643                           ;MCU_B1.c: 987: if (Memory.GO == 1) {
  5644  0D2D  1CD4               	btfss	(_Memory^(0+256)+36),1
  5645  0D2E  2D48               	goto	l883
  5646                           
  5647                           ;MCU_B1.c: 988: Memory.Runtime = 1;
  5648  0D2F  15D4               	bsf	(_Memory^(0+256)+36),3
  5649                           
  5650                           ;MCU_B1.c: 989: Memory.Time++;
  5651  0D30  3001               	movlw	1
  5652  0D31  07D2               	addwf	(_Memory^(0+256)+34),f
  5653  0D32  3000               	movlw	0
  5654  0D33  3DD3               	addwfc	((_Memory+1)^(0+256)+34),f
  5655                           
  5656                           ;MCU_B1.c: 990: if (Memory.Time == (200 / 20)) {
  5657  0D34  3022               	movlw	34
  5658  0D35  3E30               	addlw	_Memory& (0+255)
  5659  0D36  0086               	movwf	6
  5660  0D37  3001               	movlw	1	; select bank2/3
  5661  0D38  0087               	movwf	7
  5662  0D39  3F40               	moviw [0]fsr1
  5663  0D3A  3A0A               	xorlw	10
  5664  0D3B  1D03               	skipz
  5665  0D3C  2D3F               	goto	u6215
  5666  0D3D  3F41               	moviw [1]fsr1
  5667  0D3E  3A00               	xorlw	0
  5668  0D3F                     u6215:	
  5669  0D3F  1D03               	skipz
  5670  0D40  0008               	return
  5671                           
  5672                           ;MCU_B1.c: 991: Memory.Time = 0;
  5673  0D41  01D2               	clrf	(_Memory^(0+256)+34)
  5674  0D42  01D3               	clrf	((_Memory+1)^(0+256)+34)
  5675                           
  5676                           ;MCU_B1.c: 992: Memory.Modify = 0;
  5677  0D43  1054               	bcf	(_Memory^(0+256)+36),0
  5678                           
  5679                           ;MCU_B1.c: 993: Memory.GO = 0;
  5680  0D44  10D4               	bcf	(_Memory^(0+256)+36),1
  5681                           
  5682                           ;MCU_B1.c: 994: Flash_Memory_Modify();
  5683  0D45  3185  2558         	fcall	_Flash_Memory_Modify
  5684                           
  5685                           ;MCU_B1.c: 995: }
  5686                           ;MCU_B1.c: 996: } else {
  5687  0D47  0008               	return
  5688  0D48                     l883:	
  5689                           
  5690                           ;MCU_B1.c: 997: if (Memory.Runtime == 1) {
  5691  0D48  1DD4               	btfss	(_Memory^(0+256)+36),3
  5692  0D49  0008               	return
  5693                           
  5694                           ;MCU_B1.c: 998: Memory.Runtime = 0;
  5695  0D4A  11D4               	bcf	(_Memory^(0+256)+36),3
  5696                           
  5697                           ;MCU_B1.c: 999: Memory.Time = 0;
  5698  0D4B  01D2               	clrf	(_Memory^(0+256)+34)
  5699  0D4C  01D3               	clrf	((_Memory+1)^(0+256)+34)
  5700  0D4D  0008               	return
  5701  0D4E                     __end_of_Flash_Memory_Main:	
  5702                           
  5703                           	psect	text27
  5704  0958                     __ptext27:	
  5705 ;; *************** function _getAll_Sw_KeyStatus *****************
  5706 ;; Defined at:
  5707 ;;		line 286 in file "../src/Switch_B1.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  status          1    3[COMMON] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        3 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    3
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_Flash_Memory_Main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _getAll_Sw_KeyStatus
  5737  0958                     _getAll_Sw_KeyStatus:	
  5738                           
  5739                           ;Switch_B1.c: 287: char status = 0;
  5740                           
  5741                           ;incstack = 0
  5742                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
  5743  0958  01F3               	clrf	getAll_Sw_KeyStatus@status
  5744                           
  5745                           ;Switch_B1.c: 311: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RA7 == 1 ? 1 : 0;
  5746  0959  01F4               	clrf	_getAll_Sw_KeyStatus$5378
  5747  095A  0AF4               	incf	_getAll_Sw_KeyStatus$5378,f
  5748  095B  0020               	movlb	0	; select bank0
  5749  095C  1F0C               	btfss	12,6	;volatile
  5750  095D  1A0C               	btfsc	12,4	;volatile
  5751  095E  2963               	goto	l5741
  5752  095F  1C0C               	btfss	12,0	;volatile
  5753  0960  1B8C               	btfsc	12,7	;volatile
  5754  0961  2963               	goto	l5741
  5755  0962  01F4               	clrf	_getAll_Sw_KeyStatus$5378
  5756  0963                     l5741:	
  5757  0963  0874               	movf	_getAll_Sw_KeyStatus$5378,w
  5758  0964  00F2               	movwf	??_getAll_Sw_KeyStatus
  5759  0965  0872               	movf	??_getAll_Sw_KeyStatus,w
  5760  0966  00F3               	movwf	getAll_Sw_KeyStatus@status
  5761                           
  5762                           ;Switch_B1.c: 315: return status;
  5763  0967  0873               	movf	getAll_Sw_KeyStatus@status,w
  5764  0968  0008               	return
  5765  0969                     __end_of_getAll_Sw_KeyStatus:	
  5766                           
  5767                           	psect	text28
  5768  0558                     __ptext28:	
  5769 ;; *************** function _Flash_Memory_Modify *****************
  5770 ;; Defined at:
  5771 ;;		line 1057 in file "../src/MCU_B1.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  i               1    7[COMMON] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;		None               void
  5778 ;; Registers used:
  5779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:        2 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    5
  5792 ;; This function calls:
  5793 ;;		_Flash_Memory_Erasing
  5794 ;;		_Flash_Memory_Read
  5795 ;;		_Flash_Memory_Write
  5796 ;;		_setMemory_Data
  5797 ;; This function is called by:
  5798 ;;		_Flash_Memory_Main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _Flash_Memory_Modify
  5804  0558                     _Flash_Memory_Modify:	
  5805                           
  5806                           ;MCU_B1.c: 1058: char i = 0;
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5810  0558  01F7               	clrf	Flash_Memory_Modify@i
  5811                           
  5812                           ;MCU_B1.c: 1059: for (i = 0; i < 32; i++) {
  5813  0559  01F7               	clrf	Flash_Memory_Modify@i
  5814  055A  3020               	movlw	32
  5815  055B  0277               	subwf	Flash_Memory_Modify@i,w
  5816  055C  1803               	btfsc	3,0
  5817  055D  2D72               	goto	l5759
  5818  055E                     l5753:	
  5819                           
  5820                           ;MCU_B1.c: 1060: Memory.Data[i] = Flash_Memory_Read(i);
  5821  055E  0877               	movf	Flash_Memory_Modify@i,w
  5822  055F  3189  21B3  3185   	fcall	_Flash_Memory_Read
  5823  0562  00F6               	movwf	??_Flash_Memory_Modify
  5824  0563  0877               	movf	Flash_Memory_Modify@i,w
  5825  0564  3E30               	addlw	_Memory& (0+255)
  5826  0565  0086               	movwf	6
  5827  0566  3001               	movlw	1	; select bank2/3
  5828  0567  0087               	movwf	7
  5829  0568  0876               	movf	??_Flash_Memory_Modify,w
  5830  0569  0081               	movwf	1
  5831  056A  3001               	movlw	1
  5832  056B  00F6               	movwf	??_Flash_Memory_Modify
  5833  056C  0876               	movf	??_Flash_Memory_Modify,w
  5834  056D  07F7               	addwf	Flash_Memory_Modify@i,f
  5835  056E  3020               	movlw	32
  5836  056F  0277               	subwf	Flash_Memory_Modify@i,w
  5837  0570  1C03               	skipc
  5838  0571  2D5E               	goto	l5753
  5839  0572                     l5759:	
  5840                           
  5841                           ;MCU_B1.c: 1061: }
  5842                           ;MCU_B1.c: 1062: setMemory_Data(6, product->Data[11]);
  5843  0572  0020               	movlb	0	; select bank0
  5844  0573  086D               	movf	_product,w
  5845  0574  0086               	movwf	6
  5846  0575  3001               	movlw	1	; select bank2/3
  5847  0576  0087               	movwf	7
  5848  0577  3001               	movlw	1	; select bank2/3
  5849  0578  3F4B               	moviw [11]fsr1
  5850  0579  00F2               	movwf	setMemory_Data@data
  5851  057A  3006               	movlw	6
  5852  057B  3188  204B  3185   	fcall	_setMemory_Data
  5853                           
  5854                           ;MCU_B1.c: 1063: setMemory_Data(0, product->Data[12]);
  5855  057E  0020               	movlb	0	; select bank0
  5856  057F  086D               	movf	_product,w
  5857  0580  0086               	movwf	6
  5858  0581  3001               	movlw	1	; select bank2/3
  5859  0582  0087               	movwf	7
  5860  0583  3001               	movlw	1	; select bank2/3
  5861  0584  3F4C               	moviw [12]fsr1
  5862  0585  00F2               	movwf	setMemory_Data@data
  5863  0586  3000               	movlw	0
  5864  0587  3188  204B  3185   	fcall	_setMemory_Data
  5865                           
  5866                           ;MCU_B1.c: 1064: setMemory_Data(1, product->Data[13]);
  5867  058A  0020               	movlb	0	; select bank0
  5868  058B  086D               	movf	_product,w
  5869  058C  0086               	movwf	6
  5870  058D  3001               	movlw	1	; select bank2/3
  5871  058E  0087               	movwf	7
  5872  058F  3001               	movlw	1	; select bank2/3
  5873  0590  3F4D               	moviw [13]fsr1
  5874  0591  00F2               	movwf	setMemory_Data@data
  5875  0592  3001               	movlw	1
  5876  0593  3188  204B  3185   	fcall	_setMemory_Data
  5877                           
  5878                           ;MCU_B1.c: 1065: setMemory_Data(2, product->Data[14]);
  5879  0596  0020               	movlb	0	; select bank0
  5880  0597  086D               	movf	_product,w
  5881  0598  0086               	movwf	6
  5882  0599  3001               	movlw	1	; select bank2/3
  5883  059A  0087               	movwf	7
  5884  059B  3001               	movlw	1	; select bank2/3
  5885  059C  3F4E               	moviw [14]fsr1
  5886  059D  00F2               	movwf	setMemory_Data@data
  5887  059E  3002               	movlw	2
  5888  059F  3188  204B  3185   	fcall	_setMemory_Data
  5889                           
  5890                           ;MCU_B1.c: 1067: setMemory_Data(3, product->Data[21]);
  5891  05A2  0020               	movlb	0	; select bank0
  5892  05A3  086D               	movf	_product,w
  5893  05A4  0086               	movwf	6
  5894  05A5  3001               	movlw	1	; select bank2/3
  5895  05A6  0087               	movwf	7
  5896  05A7  3001               	movlw	1	; select bank2/3
  5897  05A8  3F55               	moviw [21]fsr1
  5898  05A9  00F2               	movwf	setMemory_Data@data
  5899  05AA  3003               	movlw	3
  5900  05AB  3188  204B  3185   	fcall	_setMemory_Data
  5901                           
  5902                           ;MCU_B1.c: 1068: setMemory_Data(4, product->Data[22]);
  5903  05AE  0020               	movlb	0	; select bank0
  5904  05AF  086D               	movf	_product,w
  5905  05B0  0086               	movwf	6
  5906  05B1  3001               	movlw	1	; select bank2/3
  5907  05B2  0087               	movwf	7
  5908  05B3  3001               	movlw	1	; select bank2/3
  5909  05B4  3F56               	moviw [22]fsr1
  5910  05B5  00F2               	movwf	setMemory_Data@data
  5911  05B6  3004               	movlw	4
  5912  05B7  3188  204B  3185   	fcall	_setMemory_Data
  5913                           
  5914                           ;MCU_B1.c: 1069: setMemory_Data(5, product->Data[23]);
  5915  05BA  0020               	movlb	0	; select bank0
  5916  05BB  086D               	movf	_product,w
  5917  05BC  0086               	movwf	6
  5918  05BD  3001               	movlw	1	; select bank2/3
  5919  05BE  0087               	movwf	7
  5920  05BF  3001               	movlw	1	; select bank2/3
  5921  05C0  3F57               	moviw [23]fsr1
  5922  05C1  00F2               	movwf	setMemory_Data@data
  5923  05C2  3005               	movlw	5
  5924  05C3  3188  204B  3185   	fcall	_setMemory_Data
  5925                           
  5926                           ;MCU_B1.c: 1070: if (myMain.SaveDimmer == 1) {
  5927  05C6  0021               	movlb	1	; select bank1
  5928  05C7  1EBA               	btfss	(_myMain^(0+128)+10),5
  5929  05C8  2DD2               	goto	l5767
  5930                           
  5931                           ;MCU_B1.c: 1071: myMain.SaveDimmer = 0;
  5932  05C9  12BA               	bcf	(_myMain^(0+128)+10),5
  5933                           
  5934                           ;MCU_B1.c: 1072: setMemory_Data(30, 0xaa);
  5935  05CA  30AA               	movlw	170
  5936  05CB  00F6               	movwf	??_Flash_Memory_Modify
  5937  05CC  0876               	movf	??_Flash_Memory_Modify,w
  5938  05CD  00F2               	movwf	setMemory_Data@data
  5939  05CE  301E               	movlw	30
  5940  05CF  3188  204B  3185   	fcall	_setMemory_Data
  5941  05D2                     l5767:	
  5942                           
  5943                           ;MCU_B1.c: 1073: }
  5944                           ;MCU_B1.c: 1075: if (Memory.LoopSave == 1) {
  5945  05D2  0022               	movlb	2	; select bank2
  5946  05D3  1D54               	btfss	(_Memory^(0+256)+36),2
  5947  05D4  2DD9               	goto	l907
  5948                           
  5949                           ;MCU_B1.c: 1076: Memory.LoopSave = 0;
  5950  05D5  1154               	bcf	(_Memory^(0+256)+36),2
  5951                           
  5952                           ;MCU_B1.c: 1077: myMain.FirstOpen = 0;
  5953  05D6  0021               	movlb	1	; select bank1
  5954  05D7  11B0               	bcf	_myMain^(0+128),3
  5955                           
  5956                           ;MCU_B1.c: 1078: myMain.First = 0;
  5957  05D8  12B0               	bcf	_myMain^(0+128),5
  5958  05D9                     l907:	
  5959                           
  5960                           ;MCU_B1.c: 1080: }
  5961                           ;MCU_B1.c: 1081: GIE = 0;
  5962  05D9  138B               	bcf	11,7	;volatile
  5963                           
  5964                           ;MCU_B1.c: 1082: Flash_Memory_Erasing();
  5965  05DA  3188  2090  3185   	fcall	_Flash_Memory_Erasing
  5966                           
  5967                           ;MCU_B1.c: 1083: Flash_Memory_Write();
  5968  05DD  318A  22D7         	fcall	_Flash_Memory_Write
  5969                           
  5970                           ;MCU_B1.c: 1084: GIE = 1;
  5971  05DF  178B               	bsf	11,7	;volatile
  5972  05E0  0008               	return
  5973  05E1                     __end_of_Flash_Memory_Modify:	
  5974                           
  5975                           	psect	text29
  5976  0890                     __ptext29:	
  5977 ;; *************** function _Flash_Memory_Erasing *****************
  5978 ;; Defined at:
  5979 ;;		line 1046 in file "../src/MCU_B1.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;		None
  5984 ;; Return value:  Size  Location     Type
  5985 ;;		None               void
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, pclath, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    4
  6000 ;; This function calls:
  6001 ;;		_Flash_Memory_Unlock
  6002 ;; This function is called by:
  6003 ;;		_Flash_Memory_Modify
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           
  6008                           ;psect for function _Flash_Memory_Erasing
  6009  0890                     _Flash_Memory_Erasing:	
  6010                           
  6011                           ;MCU_B1.c: 1047: CFGS = 0;
  6012                           
  6013                           ;incstack = 0
  6014                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  6015  0890  0023               	movlb	3	; select bank3
  6016  0891  1315               	bcf	21,6	;volatile
  6017                           
  6018                           ;MCU_B1.c: 1048: PMADRH = 0x30;
  6019  0892  3030               	movlw	48
  6020  0893  0092               	movwf	18	;volatile
  6021                           
  6022                           ;MCU_B1.c: 1049: PMADRL = 0x00;
  6023  0894  0191               	clrf	17	;volatile
  6024                           
  6025                           ;MCU_B1.c: 1050: FREE = 1;
  6026  0895  1615               	bsf	21,4	;volatile
  6027                           
  6028                           ;MCU_B1.c: 1051: WREN = 1;
  6029  0896  1515               	bsf	21,2	;volatile
  6030                           
  6031                           ;MCU_B1.c: 1052: Flash_Memory_Unlock();
  6032  0897  3188  2022         	fcall	_Flash_Memory_Unlock
  6033                           
  6034                           ;MCU_B1.c: 1053: WREN = 0;
  6035  0899  0023               	movlb	3	; select bank3
  6036  089A  1115               	bcf	21,2	;volatile
  6037  089B  0008               	return
  6038  089C                     __end_of_Flash_Memory_Erasing:	
  6039                           
  6040                           	psect	text30
  6041  0294                     __ptext30:	
  6042 ;; *************** function _Flash_Memory_Initialization *****************
  6043 ;; Defined at:
  6044 ;;		line 934 in file "../src/MCU_B1.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  value           1    7[COMMON] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;		None               void
  6051 ;; Registers used:
  6052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;Total ram usage:        2 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    5
  6065 ;; This function calls:
  6066 ;;		_Flash_Memory_Read
  6067 ;;		_Flash_Memory_Write
  6068 ;;		_setMemory_Data
  6069 ;; This function is called by:
  6070 ;;		_main
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _Flash_Memory_Initialization
  6076  0294                     _Flash_Memory_Initialization:	
  6077                           
  6078                           ;MCU_B1.c: 935: char value = 0;
  6079                           
  6080                           ;incstack = 0
  6081                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  6082  0294  01F7               	clrf	Flash_Memory_Initialization@value
  6083                           
  6084                           ;MCU_B1.c: 936: if (Flash_Memory_Read(31) == 0xaa) {
  6085  0295  301F               	movlw	31
  6086  0296  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6087  0299  3AAA               	xorlw	170
  6088  029A  1D03               	skipz
  6089  029B  2B16               	goto	l5885
  6090                           
  6091                           ;MCU_B1.c: 937: product->Data[11] = Flash_Memory_Read(6);
  6092  029C  3006               	movlw	6
  6093  029D  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6094  02A0  00F6               	movwf	??_Flash_Memory_Initialization
  6095  02A1  0020               	movlb	0	; select bank0
  6096  02A2  086D               	movf	_product,w
  6097  02A3  3E0B               	addlw	11
  6098  02A4  0086               	movwf	6
  6099  02A5  3001               	movlw	1	; select bank2/3
  6100  02A6  0087               	movwf	7
  6101  02A7  0876               	movf	??_Flash_Memory_Initialization,w
  6102  02A8  0081               	movwf	1
  6103                           
  6104                           ;MCU_B1.c: 938: product->Data[12] = Flash_Memory_Read(0);
  6105  02A9  3000               	movlw	0
  6106  02AA  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6107  02AD  00F6               	movwf	??_Flash_Memory_Initialization
  6108  02AE  0020               	movlb	0	; select bank0
  6109  02AF  086D               	movf	_product,w
  6110  02B0  3E0C               	addlw	12
  6111  02B1  0086               	movwf	6
  6112  02B2  3001               	movlw	1	; select bank2/3
  6113  02B3  0087               	movwf	7
  6114  02B4  0876               	movf	??_Flash_Memory_Initialization,w
  6115  02B5  0081               	movwf	1
  6116                           
  6117                           ;MCU_B1.c: 939: product->Data[13] = Flash_Memory_Read(1);
  6118  02B6  3001               	movlw	1
  6119  02B7  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6120  02BA  00F6               	movwf	??_Flash_Memory_Initialization
  6121  02BB  0020               	movlb	0	; select bank0
  6122  02BC  086D               	movf	_product,w
  6123  02BD  3E0D               	addlw	13
  6124  02BE  0086               	movwf	6
  6125  02BF  3001               	movlw	1	; select bank2/3
  6126  02C0  0087               	movwf	7
  6127  02C1  0876               	movf	??_Flash_Memory_Initialization,w
  6128  02C2  0081               	movwf	1
  6129                           
  6130                           ;MCU_B1.c: 940: product->Data[14] = Flash_Memory_Read(2);
  6131  02C3  3002               	movlw	2
  6132  02C4  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6133  02C7  00F6               	movwf	??_Flash_Memory_Initialization
  6134  02C8  0020               	movlb	0	; select bank0
  6135  02C9  086D               	movf	_product,w
  6136  02CA  3E0E               	addlw	14
  6137  02CB  0086               	movwf	6
  6138  02CC  3001               	movlw	1	; select bank2/3
  6139  02CD  0087               	movwf	7
  6140  02CE  0876               	movf	??_Flash_Memory_Initialization,w
  6141  02CF  0081               	movwf	1
  6142                           
  6143                           ;MCU_B1.c: 943: product->Data[21] = Flash_Memory_Read(3);
  6144  02D0  3003               	movlw	3
  6145  02D1  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6146  02D4  00F6               	movwf	??_Flash_Memory_Initialization
  6147  02D5  0020               	movlb	0	; select bank0
  6148  02D6  086D               	movf	_product,w
  6149  02D7  3E15               	addlw	21
  6150  02D8  0086               	movwf	6
  6151  02D9  3001               	movlw	1	; select bank2/3
  6152  02DA  0087               	movwf	7
  6153  02DB  0876               	movf	??_Flash_Memory_Initialization,w
  6154  02DC  0081               	movwf	1
  6155                           
  6156                           ;MCU_B1.c: 944: product->Data[22] = Flash_Memory_Read(4);
  6157  02DD  3004               	movlw	4
  6158  02DE  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6159  02E1  00F6               	movwf	??_Flash_Memory_Initialization
  6160  02E2  0020               	movlb	0	; select bank0
  6161  02E3  086D               	movf	_product,w
  6162  02E4  3E16               	addlw	22
  6163  02E5  0086               	movwf	6
  6164  02E6  3001               	movlw	1	; select bank2/3
  6165  02E7  0087               	movwf	7
  6166  02E8  0876               	movf	??_Flash_Memory_Initialization,w
  6167  02E9  0081               	movwf	1
  6168                           
  6169                           ;MCU_B1.c: 945: product->Data[23] = Flash_Memory_Read(5);
  6170  02EA  3005               	movlw	5
  6171  02EB  3189  21B3  3182   	fcall	_Flash_Memory_Read
  6172  02EE  00F6               	movwf	??_Flash_Memory_Initialization
  6173  02EF  0020               	movlb	0	; select bank0
  6174  02F0  086D               	movf	_product,w
  6175  02F1  3E17               	addlw	23
  6176  02F2  0086               	movwf	6
  6177  02F3  3001               	movlw	1	; select bank2/3
  6178  02F4  0087               	movwf	7
  6179  02F5  0876               	movf	??_Flash_Memory_Initialization,w
  6180  02F6  0081               	movwf	1
  6181                           
  6182                           ;MCU_B1.c: 952: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  6183  02F7  086D               	movf	_product,w
  6184  02F8  3E0C               	addlw	12
  6185  02F9  0086               	movwf	6
  6186  02FA  3001               	movlw	1	; select bank2/3
  6187  02FB  0087               	movwf	7
  6188  02FC  0801               	movf	1,w
  6189  02FD  3AFF               	xorlw	255
  6190  02FE  1D03               	skipz
  6191  02FF  0008               	return
  6192  0300  086D               	movf	_product,w
  6193  0301  3E0D               	addlw	13
  6194  0302  0086               	movwf	6
  6195  0303  3001               	movlw	1	; select bank2/3
  6196  0304  0087               	movwf	7
  6197  0305  0801               	movf	1,w
  6198  0306  3AFF               	xorlw	255
  6199  0307  1D03               	skipz
  6200  0308  0008               	return
  6201  0309  086D               	movf	_product,w
  6202  030A  3E0E               	addlw	14
  6203  030B  0086               	movwf	6
  6204  030C  3001               	movlw	1	; select bank2/3
  6205  030D  0087               	movwf	7
  6206  030E  0801               	movf	1,w
  6207  030F  3AFF               	xorlw	255
  6208  0310  1D03               	skipz
  6209  0311  0008               	return
  6210                           
  6211                           ;MCU_B1.c: 953: myMain.FirstOpen = 1;
  6212  0312  0021               	movlb	1	; select bank1
  6213  0313  15B0               	bsf	_myMain^(0+128),3
  6214                           
  6215                           ;MCU_B1.c: 954: myMain.First = 1;
  6216  0314  16B0               	bsf	_myMain^(0+128),5
  6217                           
  6218                           ;MCU_B1.c: 955: }
  6219                           ;MCU_B1.c: 956: } else {
  6220  0315  0008               	return
  6221  0316                     l5885:	
  6222                           
  6223                           ;MCU_B1.c: 958: setMemory_Data(0, 0xff);
  6224  0316  30FF               	movlw	255
  6225  0317  00F6               	movwf	??_Flash_Memory_Initialization
  6226  0318  0876               	movf	??_Flash_Memory_Initialization,w
  6227  0319  00F2               	movwf	setMemory_Data@data
  6228  031A  3000               	movlw	0
  6229  031B  3188  204B  3182   	fcall	_setMemory_Data
  6230                           
  6231                           ;MCU_B1.c: 959: setMemory_Data(1, 0xff);
  6232  031E  30FF               	movlw	255
  6233  031F  00F6               	movwf	??_Flash_Memory_Initialization
  6234  0320  0876               	movf	??_Flash_Memory_Initialization,w
  6235  0321  00F2               	movwf	setMemory_Data@data
  6236  0322  3001               	movlw	1
  6237  0323  3188  204B  3182   	fcall	_setMemory_Data
  6238                           
  6239                           ;MCU_B1.c: 960: setMemory_Data(2, 0xff);
  6240  0326  30FF               	movlw	255
  6241  0327  00F6               	movwf	??_Flash_Memory_Initialization
  6242  0328  0876               	movf	??_Flash_Memory_Initialization,w
  6243  0329  00F2               	movwf	setMemory_Data@data
  6244  032A  3002               	movlw	2
  6245  032B  3188  204B  3182   	fcall	_setMemory_Data
  6246                           
  6247                           ;MCU_B1.c: 961: setMemory_Data(3, 0xff);
  6248  032E  30FF               	movlw	255
  6249  032F  00F6               	movwf	??_Flash_Memory_Initialization
  6250  0330  0876               	movf	??_Flash_Memory_Initialization,w
  6251  0331  00F2               	movwf	setMemory_Data@data
  6252  0332  3003               	movlw	3
  6253  0333  3188  204B  3182   	fcall	_setMemory_Data
  6254                           
  6255                           ;MCU_B1.c: 962: setMemory_Data(4, 0xff);
  6256  0336  30FF               	movlw	255
  6257  0337  00F6               	movwf	??_Flash_Memory_Initialization
  6258  0338  0876               	movf	??_Flash_Memory_Initialization,w
  6259  0339  00F2               	movwf	setMemory_Data@data
  6260  033A  3004               	movlw	4
  6261  033B  3188  204B  3182   	fcall	_setMemory_Data
  6262                           
  6263                           ;MCU_B1.c: 963: setMemory_Data(5, 0xff);
  6264  033E  30FF               	movlw	255
  6265  033F  00F6               	movwf	??_Flash_Memory_Initialization
  6266  0340  0876               	movf	??_Flash_Memory_Initialization,w
  6267  0341  00F2               	movwf	setMemory_Data@data
  6268  0342  3005               	movlw	5
  6269  0343  3188  204B  3182   	fcall	_setMemory_Data
  6270                           
  6271                           ;MCU_B1.c: 964: setMemory_Data(6, 0xff);
  6272  0346  30FF               	movlw	255
  6273  0347  00F6               	movwf	??_Flash_Memory_Initialization
  6274  0348  0876               	movf	??_Flash_Memory_Initialization,w
  6275  0349  00F2               	movwf	setMemory_Data@data
  6276  034A  3006               	movlw	6
  6277  034B  3188  204B  3182   	fcall	_setMemory_Data
  6278                           
  6279                           ;MCU_B1.c: 965: setMemory_Data(31, 0xaa);
  6280  034E  30AA               	movlw	170
  6281  034F  00F6               	movwf	??_Flash_Memory_Initialization
  6282  0350  0876               	movf	??_Flash_Memory_Initialization,w
  6283  0351  00F2               	movwf	setMemory_Data@data
  6284  0352  301F               	movlw	31
  6285  0353  3188  204B  3182   	fcall	_setMemory_Data
  6286                           
  6287                           ;MCU_B1.c: 970: GIE = 0;
  6288  0356  138B               	bcf	11,7	;volatile
  6289                           
  6290                           ;MCU_B1.c: 971: Flash_Memory_Write();
  6291  0357  318A  22D7         	fcall	_Flash_Memory_Write
  6292                           
  6293                           ;MCU_B1.c: 972: GIE = 1;
  6294  0359  178B               	bsf	11,7	;volatile
  6295                           
  6296                           ;MCU_B1.c: 973: myMain.FirstOpen = 1;
  6297  035A  0021               	movlb	1	; select bank1
  6298  035B  15B0               	bsf	_myMain^(0+128),3
  6299                           
  6300                           ;MCU_B1.c: 974: myMain.First = 1;
  6301  035C  16B0               	bsf	_myMain^(0+128),5
  6302                           
  6303                           ;MCU_B1.c: 975: myMain.InitDimmer = 1;
  6304  035D  163A               	bsf	(_myMain^(0+128)+10),4
  6305  035E  0008               	return
  6306  035F                     __end_of_Flash_Memory_Initialization:	
  6307                           
  6308                           	psect	text31
  6309  084B                     __ptext31:	
  6310 ;; *************** function _setMemory_Data *****************
  6311 ;; Defined at:
  6312 ;;		line 1099 in file "../src/MCU_B1.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  address         1    wreg     unsigned char 
  6315 ;;  data            1    2[COMMON] unsigned char 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  address         1    4[COMMON] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;		None               void
  6320 ;; Registers used:
  6321 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;Total ram usage:        3 bytes
  6332 ;; Hardware stack levels used:    1
  6333 ;; Hardware stack levels required when called:    3
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_Flash_Memory_Initialization
  6338 ;;		_Flash_Memory_Modify
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function _setMemory_Data
  6344  084B                     _setMemory_Data:	
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  6348                           ;setMemory_Data@address stored from wreg
  6349  084B  00F4               	movwf	setMemory_Data@address
  6350                           
  6351                           ;MCU_B1.c: 1100: Memory.Data[address] = data;
  6352  084C  0872               	movf	setMemory_Data@data,w
  6353  084D  00F3               	movwf	??_setMemory_Data
  6354  084E  0874               	movf	setMemory_Data@address,w
  6355  084F  3E30               	addlw	_Memory& (0+255)
  6356  0850  0086               	movwf	6
  6357  0851  3001               	movlw	1	; select bank2/3
  6358  0852  0087               	movwf	7
  6359  0853  0873               	movf	??_setMemory_Data,w
  6360  0854  0081               	movwf	1
  6361  0855  0008               	return
  6362  0856                     __end_of_setMemory_Data:	
  6363                           
  6364                           	psect	text32
  6365  0AD7                     __ptext32:	
  6366 ;; *************** function _Flash_Memory_Write *****************
  6367 ;; Defined at:
  6368 ;;		line 1027 in file "../src/MCU_B1.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  i               1    3[COMMON] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;		None               void
  6375 ;; Registers used:
  6376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:        2 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    4
  6389 ;; This function calls:
  6390 ;;		_Flash_Memory_Unlock
  6391 ;; This function is called by:
  6392 ;;		_Flash_Memory_Initialization
  6393 ;;		_Flash_Memory_Modify
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           
  6398                           ;psect for function _Flash_Memory_Write
  6399  0AD7                     _Flash_Memory_Write:	
  6400                           
  6401                           ;MCU_B1.c: 1028: char i = 0;
  6402                           
  6403                           ;incstack = 0
  6404                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6405  0AD7  01F3               	clrf	Flash_Memory_Write@i
  6406                           
  6407                           ;MCU_B1.c: 1029: CFGS = 0;
  6408  0AD8  0023               	movlb	3	; select bank3
  6409  0AD9  1315               	bcf	21,6	;volatile
  6410                           
  6411                           ;MCU_B1.c: 1030: PMADRH = 0x30;
  6412  0ADA  3030               	movlw	48
  6413  0ADB  0092               	movwf	18	;volatile
  6414                           
  6415                           ;MCU_B1.c: 1031: PMDATH = 0;
  6416  0ADC  0194               	clrf	20	;volatile
  6417                           
  6418                           ;MCU_B1.c: 1032: FREE = 0;
  6419  0ADD  1215               	bcf	21,4	;volatile
  6420                           
  6421                           ;MCU_B1.c: 1033: LWLO = 1;
  6422  0ADE  1695               	bsf	21,5	;volatile
  6423                           
  6424                           ;MCU_B1.c: 1034: WREN = 1;
  6425  0ADF  1515               	bsf	21,2	;volatile
  6426                           
  6427                           ;MCU_B1.c: 1035: for (i = 0; i < 32; i++) {
  6428  0AE0  01F3               	clrf	Flash_Memory_Write@i
  6429  0AE1  3020               	movlw	32
  6430  0AE2  0273               	subwf	Flash_Memory_Write@i,w
  6431  0AE3  1803               	btfsc	3,0
  6432  0AE4  2AFA               	goto	l897
  6433  0AE5                     l5557:	
  6434                           
  6435                           ;MCU_B1.c: 1036: PMADRL = i;
  6436  0AE5  0873               	movf	Flash_Memory_Write@i,w
  6437  0AE6  0023               	movlb	3	; select bank3
  6438  0AE7  0091               	movwf	17	;volatile
  6439                           
  6440                           ;MCU_B1.c: 1037: PMDATL = Memory.Data[i];
  6441  0AE8  0873               	movf	Flash_Memory_Write@i,w
  6442  0AE9  3E30               	addlw	_Memory& (0+255)
  6443  0AEA  0086               	movwf	6
  6444  0AEB  3001               	movlw	1	; select bank2/3
  6445  0AEC  0087               	movwf	7
  6446  0AED  0801               	movf	1,w
  6447  0AEE  0093               	movwf	19	;volatile
  6448                           
  6449                           ;MCU_B1.c: 1038: Flash_Memory_Unlock();
  6450  0AEF  3188  2022  318A   	fcall	_Flash_Memory_Unlock
  6451  0AF2  3001               	movlw	1
  6452  0AF3  00F2               	movwf	??_Flash_Memory_Write
  6453  0AF4  0872               	movf	??_Flash_Memory_Write,w
  6454  0AF5  07F3               	addwf	Flash_Memory_Write@i,f
  6455  0AF6  3020               	movlw	32
  6456  0AF7  0273               	subwf	Flash_Memory_Write@i,w
  6457  0AF8  1C03               	skipc
  6458  0AF9  2AE5               	goto	l5557
  6459  0AFA                     l897:	
  6460                           
  6461                           ;MCU_B1.c: 1039: }
  6462                           ;MCU_B1.c: 1040: LWLO = 0;
  6463  0AFA  0023               	movlb	3	; select bank3
  6464  0AFB  1295               	bcf	21,5	;volatile
  6465                           
  6466                           ;MCU_B1.c: 1041: Flash_Memory_Unlock();
  6467  0AFC  3188  2022         	fcall	_Flash_Memory_Unlock
  6468                           
  6469                           ;MCU_B1.c: 1042: WREN = 0;
  6470  0AFE  0023               	movlb	3	; select bank3
  6471  0AFF  1115               	bcf	21,2	;volatile
  6472  0B00  0008               	return
  6473  0B01                     __end_of_Flash_Memory_Write:	
  6474                           
  6475                           	psect	text33
  6476  0822                     __ptext33:	
  6477 ;; *************** function _Flash_Memory_Unlock *****************
  6478 ;; Defined at:
  6479 ;;		line 1006 in file "../src/MCU_B1.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;		None               void
  6486 ;; Registers used:
  6487 ;;		wreg
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    3
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_Flash_Memory_Write
  6504 ;;		_Flash_Memory_Erasing
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           
  6509                           ;psect for function _Flash_Memory_Unlock
  6510  0822                     _Flash_Memory_Unlock:	
  6511                           
  6512                           ;MCU_B1.c: 1007: PMCON2 = 0x55;
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  6516  0822  3055               	movlw	85
  6517  0823  0023               	movlb	3	; select bank3
  6518  0824  0096               	movwf	22	;volatile
  6519                           
  6520                           ;MCU_B1.c: 1008: PMCON2 = 0xaa;
  6521  0825  30AA               	movlw	170
  6522  0826  0096               	movwf	22	;volatile
  6523                           
  6524                           ;MCU_B1.c: 1009: WR = 1;
  6525  0827  1495               	bsf	21,1	;volatile
  6526                           
  6527                           ;MCU_B1.c: 1010: __nop();
  6528  0828  0000               	nop
  6529                           
  6530                           ;MCU_B1.c: 1011: __nop();
  6531  0829  0000               	nop
  6532  082A  0008               	return
  6533  082B                     __end_of_Flash_Memory_Unlock:	
  6534                           
  6535                           	psect	text34
  6536  09B3                     __ptext34:	
  6537 ;; *************** function _Flash_Memory_Read *****************
  6538 ;; Defined at:
  6539 ;;		line 1015 in file "../src/MCU_B1.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  address         1    wreg     unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  address         1    4[COMMON] unsigned char 
  6544 ;;  ret             1    5[COMMON] unsigned char 
  6545 ;;  i               1    3[COMMON] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      unsigned char 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;Total ram usage:        4 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    3
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_Flash_Memory_Initialization
  6566 ;;		_Flash_Memory_Modify
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           
  6571                           ;psect for function _Flash_Memory_Read
  6572  09B3                     _Flash_Memory_Read:	
  6573                           
  6574                           ;incstack = 0
  6575                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  6576                           ;Flash_Memory_Read@address stored from wreg
  6577  09B3  00F4               	movwf	Flash_Memory_Read@address
  6578                           
  6579                           ;MCU_B1.c: 1016: char i = 0, ret = 0;
  6580  09B4  01F3               	clrf	Flash_Memory_Read@i
  6581  09B5  01F5               	clrf	Flash_Memory_Read@ret
  6582                           
  6583                           ;MCU_B1.c: 1017: PMADRH = 0x30;
  6584  09B6  3030               	movlw	48
  6585  09B7  0023               	movlb	3	; select bank3
  6586  09B8  0092               	movwf	18	;volatile
  6587                           
  6588                           ;MCU_B1.c: 1018: PMADRL = address;
  6589  09B9  0874               	movf	Flash_Memory_Read@address,w
  6590  09BA  0091               	movwf	17	;volatile
  6591                           
  6592                           ;MCU_B1.c: 1019: CFGS = 0;
  6593  09BB  1315               	bcf	21,6	;volatile
  6594                           
  6595                           ;MCU_B1.c: 1020: RD = 1;
  6596  09BC  1415               	bsf	21,0	;volatile
  6597                           
  6598                           ;MCU_B1.c: 1021: i = PMDATH;
  6599  09BD  0814               	movf	20,w	;volatile
  6600  09BE  00F2               	movwf	??_Flash_Memory_Read
  6601  09BF  0872               	movf	??_Flash_Memory_Read,w
  6602  09C0  00F3               	movwf	Flash_Memory_Read@i
  6603                           
  6604                           ;MCU_B1.c: 1022: ret = PMDATL;
  6605  09C1  0813               	movf	19,w	;volatile
  6606  09C2  00F2               	movwf	??_Flash_Memory_Read
  6607  09C3  0872               	movf	??_Flash_Memory_Read,w
  6608  09C4  00F5               	movwf	Flash_Memory_Read@ret
  6609                           
  6610                           ;MCU_B1.c: 1023: return ret;
  6611  09C5  0875               	movf	Flash_Memory_Read@ret,w
  6612  09C6  0008               	return
  6613  09C7                     __end_of_Flash_Memory_Read:	
  6614                           
  6615                           	psect	text35
  6616  0BEF                     __ptext35:	
  6617 ;; *************** function _Exception_Main *****************
  6618 ;; Defined at:
  6619 ;;		line 503 in file "../src/Main_B1.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  error           1    3[BANK0 ] unsigned char 
  6624 ;;  status          1    2[BANK0 ] unsigned char 
  6625 ;;  count           1    1[BANK0 ] unsigned char 
  6626 ;;  lights          1    0[BANK0 ] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;		None               void
  6629 ;; Registers used:
  6630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;Total ram usage:        5 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    5
  6643 ;; This function calls:
  6644 ;;		_getMain_All_Error_Status
  6645 ;;		_setLED
  6646 ;; This function is called by:
  6647 ;;		_main
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _Exception_Main
  6653  0BEF                     _Exception_Main:	
  6654                           
  6655                           ;Main_B1.c: 504: char error = getMain_All_Error_Status(0);
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6659  0BEF  3000               	movlw	0
  6660  0BF0  3197  27B5  318B   	fcall	_getMain_All_Error_Status
  6661  0BF3  00F6               	movwf	??_Exception_Main
  6662  0BF4  0876               	movf	??_Exception_Main,w
  6663  0BF5  0020               	movlb	0	; select bank0
  6664  0BF6  00A3               	movwf	Exception_Main@error
  6665                           
  6666                           ;Main_B1.c: 505: char lights = 0, count = 1;
  6667  0BF7  01A0               	clrf	Exception_Main@lights
  6668  0BF8  01A1               	clrf	Exception_Main@count
  6669  0BF9  0AA1               	incf	Exception_Main@count,f
  6670                           
  6671                           ;Main_B1.c: 506: char status = 0;
  6672  0BFA  01A2               	clrf	Exception_Main@status
  6673                           
  6674                           ;Main_B1.c: 508: if (myMain.Error_Run == 1) {
  6675  0BFB  0021               	movlb	1	; select bank1
  6676  0BFC  1DBA               	btfss	(_myMain^(0+128)+10),3
  6677  0BFD  2C0C               	goto	l5983
  6678                           
  6679                           ;Main_B1.c: 509: if (error == 0) {
  6680  0BFE  0020               	movlb	0	; select bank0
  6681  0BFF  08A3               	movf	Exception_Main@error,f
  6682  0C00  1D03               	skipz
  6683  0C01  0008               	return
  6684                           
  6685                           ;Main_B1.c: 510: myMain.Error_Run = 0;
  6686  0C02  0021               	movlb	1	; select bank1
  6687  0C03  11BA               	bcf	(_myMain^(0+128)+10),3
  6688                           
  6689                           ;Main_B1.c: 513: setLED(99, 10);
  6690  0C04  300A               	movlw	10
  6691  0C05  00F6               	movwf	??_Exception_Main
  6692  0C06  0876               	movf	??_Exception_Main,w
  6693  0C07  00F4               	movwf	setLED@command
  6694  0C08  3063               	movlw	99
  6695  0C09  318B  23BA         	fcall	_setLED
  6696                           
  6697                           ;Main_B1.c: 526: }
  6698                           ;Main_B1.c: 527: } else {
  6699  0C0B  0008               	return
  6700  0C0C                     l5983:	
  6701                           
  6702                           ;Main_B1.c: 528: if (error != 0) {
  6703  0C0C  0020               	movlb	0	; select bank0
  6704  0C0D  0823               	movf	Exception_Main@error,w
  6705  0C0E  1903               	btfsc	3,2
  6706  0C0F  0008               	return
  6707                           
  6708                           ;Main_B1.c: 529: myMain.Error_Run = 1;
  6709  0C10  0021               	movlb	1	; select bank1
  6710  0C11  15BA               	bsf	(_myMain^(0+128)+10),3
  6711                           
  6712                           ;Main_B1.c: 531: setLED(99, 11);
  6713  0C12  300B               	movlw	11
  6714  0C13  00F6               	movwf	??_Exception_Main
  6715  0C14  0876               	movf	??_Exception_Main,w
  6716  0C15  00F4               	movwf	setLED@command
  6717  0C16  3063               	movlw	99
  6718  0C17  318B  23BA  318B   	fcall	_setLED
  6719                           
  6720                           ;Main_B1.c: 590: }
  6721                           
  6722                           ;Main_B1.c: 589: break;
  6723                           
  6724                           ;Main_B1.c: 565: case 3:
  6725                           
  6726                           ;Main_B1.c: 564: break;
  6727                           
  6728                           ;Main_B1.c: 543: case 2:
  6729                           
  6730                           ;Main_B1.c: 542: switch (error) {
  6731  0C1A  0020               	movlb	0	; select bank0
  6732  0C1B  0823               	movf	Exception_Main@error,w
  6733                           
  6734                           ; Switch size 1, requested type "space"
  6735                           ; Number of cases is 2, Range of values is 2 to 3
  6736                           ; switch strategies available:
  6737                           ; Name         Instructions Cycles
  6738                           ; simple_byte            7     4 (average)
  6739                           ; direct_byte           13     9 (fixed)
  6740                           ; jumptable            263     9 (fixed)
  6741                           ;	Chosen strategy is simple_byte
  6742  0C1C  3A02               	xorlw	2	; case 2
  6743  0C1D  1903               	skipnz
  6744  0C1E  2C24               	goto	l1062
  6745  0C1F  3A01               	xorlw	1	; case 3
  6746  0C20  1903               	skipnz
  6747  0C21  2C24               	goto	l1062
  6748  0C22  2C24               	goto	l1062
  6749  0C23  0008               	return
  6750  0C24                     l1062:	
  6751  0C24  0008               	return
  6752  0C25                     __end_of_Exception_Main:	
  6753                           
  6754                           	psect	text36
  6755  17B5                     __ptext36:	
  6756 ;; *************** function _getMain_All_Error_Status *****************
  6757 ;; Defined at:
  6758 ;;		line 428 in file "../src/Main_B1.c"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;  command         1    wreg     unsigned char 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  command         1    0[COMMON] unsigned char 
  6763 ;;  status          1    2[COMMON] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      unsigned char 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;Total ram usage:        1 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    3
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_Exception_Main
  6784 ;;		_setSw_Main
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           
  6789                           ;psect for function _getMain_All_Error_Status
  6790  17B5                     _getMain_All_Error_Status:	
  6791                           
  6792                           ;Main_B1.c: 429: char status = 0;
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  6796  17B5  01F2               	clrf	getMain_All_Error_Status@status
  6797                           
  6798                           ;Main_B1.c: 459: return status;
  6799  17B6  0872               	movf	getMain_All_Error_Status@status,w
  6800  17B7  0008               	return
  6801  17B8                     __end_of_getMain_All_Error_Status:	
  6802                           
  6803                           	psect	text37
  6804  0808                     __ptext37:	
  6805 ;; *************** function _DimmerLights_Main *****************
  6806 ;; Defined at:
  6807 ;;		line 869 in file "../src/Dimmer_B1.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;		None               void
  6814 ;; Registers used:
  6815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    8
  6828 ;; This function calls:
  6829 ;;		_DimmerLights_DimmingFunction
  6830 ;;		_setDimmerLights_Main
  6831 ;; This function is called by:
  6832 ;;		_main
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           
  6837                           ;psect for function _DimmerLights_Main
  6838  0808                     _DimmerLights_Main:	
  6839                           
  6840                           ;Dimmer_B1.c: 881: setDimmerLights_Main(1);
  6841                           
  6842                           ;incstack = 0
  6843                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6844  0808  3001               	movlw	1
  6845  0809  318E  26E4  3188   	fcall	_setDimmerLights_Main
  6846                           
  6847                           ;Dimmer_B1.c: 884: DimmerLights_DimmingFunction(1);
  6848  080C  3001               	movlw	1
  6849  080D  318D  25E3         	fcall	_DimmerLights_DimmingFunction
  6850  080F  0008               	return
  6851  0810                     __end_of_DimmerLights_Main:	
  6852                           
  6853                           	psect	text38
  6854  0EE4                     __ptext38:	
  6855 ;; *************** function _setDimmerLights_Main *****************
  6856 ;; Defined at:
  6857 ;;		line 926 in file "../src/Dimmer_B1.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  lights          1    wreg     unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  lights          1   73[BANK0 ] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;		None               void
  6864 ;; Registers used:
  6865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    7
  6878 ;; This function calls:
  6879 ;;		_DimmerLights_SelectPointer
  6880 ;;		_getDimmerLights_Allow_Condition
  6881 ;;		_getMain_All_LightsStatus
  6882 ;;		_setDimmerLights_Dimming
  6883 ;;		_setDimmerLights_OnOff
  6884 ;; This function is called by:
  6885 ;;		_DimmerLights_Main
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           
  6890                           ;psect for function _setDimmerLights_Main
  6891  0EE4                     _setDimmerLights_Main:	
  6892                           
  6893                           ;incstack = 0
  6894                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6895                           ;setDimmerLights_Main@lights stored from wreg
  6896  0EE4  0020               	movlb	0	; select bank0
  6897  0EE5  00E9               	movwf	setDimmerLights_Main@lights
  6898                           
  6899                           ;Dimmer_B1.c: 928: DimmerLights_SelectPointer(lights);
  6900  0EE6  0869               	movf	setDimmerLights_Main@lights,w
  6901  0EE7  3188  2040  318E   	fcall	_DimmerLights_SelectPointer
  6902                           
  6903                           ;Dimmer_B1.c: 929: if (DimmerLights->Trigger == 1) {
  6904  0EEA  0020               	movlb	0	; select bank0
  6905  0EEB  086B               	movf	_DimmerLights,w
  6906  0EEC  0086               	movwf	6
  6907  0EED  0187               	clrf	7
  6908  0EEE  1C81               	btfss	1,1
  6909  0EEF  2F0D               	goto	l5649
  6910                           
  6911                           ;Dimmer_B1.c: 930: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6912  0EF0  0869               	movf	setDimmerLights_Main@lights,w
  6913  0EF1  3197  27B2  318E   	fcall	_getDimmerLights_Allow_Condition
  6914  0EF4  3800               	iorlw	0
  6915  0EF5  1D03               	skipz
  6916  0EF6  0008               	return
  6917                           
  6918                           ;Dimmer_B1.c: 931: DimmerLights->Trigger = 0;
  6919  0EF7  0020               	movlb	0	; select bank0
  6920  0EF8  086B               	movf	_DimmerLights,w
  6921  0EF9  0086               	movwf	6
  6922  0EFA  0187               	clrf	7
  6923  0EFB  1081               	bcf	1,1
  6924                           
  6925                           ;Dimmer_B1.c: 932: if (DimmerLights->Switch == 1) {
  6926  0EFC  086B               	movf	_DimmerLights,w
  6927  0EFD  0086               	movwf	6
  6928  0EFE  0187               	clrf	7
  6929  0EFF  1D01               	btfss	1,2
  6930  0F00  2F07               	goto	l5647
  6931                           
  6932                           ;Dimmer_B1.c: 933: setDimmerLights_OnOff(lights, 1);
  6933  0F01  01E5               	clrf	setDimmerLights_OnOff@command
  6934  0F02  0AE5               	incf	setDimmerLights_OnOff@command,f
  6935  0F03  0869               	movf	setDimmerLights_Main@lights,w
  6936  0F04  3184  24BC         	fcall	_setDimmerLights_OnOff
  6937                           
  6938                           ;Dimmer_B1.c: 934: } else {
  6939  0F06  0008               	return
  6940  0F07                     l5647:	
  6941                           
  6942                           ;Dimmer_B1.c: 935: setDimmerLights_OnOff(lights, 0);
  6943  0F07  0020               	movlb	0	; select bank0
  6944  0F08  01E5               	clrf	setDimmerLights_OnOff@command
  6945  0F09  0869               	movf	setDimmerLights_Main@lights,w
  6946  0F0A  3184  24BC         	fcall	_setDimmerLights_OnOff
  6947                           
  6948                           ;Dimmer_B1.c: 936: }
  6949                           ;Dimmer_B1.c: 937: }
  6950                           ;Dimmer_B1.c: 938: } else {
  6951  0F0C  0008               	return
  6952  0F0D                     l5649:	
  6953                           
  6954                           ;Dimmer_B1.c: 939: if (getMain_All_LightsStatus() == 1) {
  6955  0F0D  3188  2000  318E   	fcall	_getMain_All_LightsStatus
  6956  0F10  3A01               	xorlw	1
  6957  0F11  1D03               	skipz
  6958  0F12  2F36               	goto	l5661
  6959                           
  6960                           ;Dimmer_B1.c: 940: if (DimmerLights->DimmingTrigger == 1) {
  6961  0F13  0020               	movlb	0	; select bank0
  6962  0F14  086B               	movf	_DimmerLights,w
  6963  0F15  0086               	movwf	6
  6964  0F16  0187               	clrf	7
  6965  0F17  1E01               	btfss	1,4
  6966  0F18  0008               	return
  6967                           
  6968                           ;Dimmer_B1.c: 941: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6969  0F19  0869               	movf	setDimmerLights_Main@lights,w
  6970  0F1A  3197  27B2  318E   	fcall	_getDimmerLights_Allow_Condition
  6971  0F1D  3800               	iorlw	0
  6972  0F1E  1D03               	skipz
  6973  0F1F  0008               	return
  6974                           
  6975                           ;Dimmer_B1.c: 942: DimmerLights->DimmingTrigger = 0;
  6976  0F20  0020               	movlb	0	; select bank0
  6977  0F21  086B               	movf	_DimmerLights,w
  6978  0F22  0086               	movwf	6
  6979  0F23  0187               	clrf	7
  6980  0F24  1201               	bcf	1,4
  6981                           
  6982                           ;Dimmer_B1.c: 943: if (DimmerLights->DimmingSwitch == 1) {
  6983  0F25  086B               	movf	_DimmerLights,w
  6984  0F26  0086               	movwf	6
  6985  0F27  0187               	clrf	7
  6986  0F28  1E81               	btfss	1,5
  6987  0F29  2F30               	goto	l5659
  6988                           
  6989                           ;Dimmer_B1.c: 944: setDimmerLights_Dimming(lights, 1);
  6990  0F2A  01DD               	clrf	setDimmerLights_Dimming@status
  6991  0F2B  0ADD               	incf	setDimmerLights_Dimming@status,f
  6992  0F2C  0869               	movf	setDimmerLights_Main@lights,w
  6993  0F2D  318C  24D0         	fcall	_setDimmerLights_Dimming
  6994                           
  6995                           ;Dimmer_B1.c: 945: } else {
  6996  0F2F  0008               	return
  6997  0F30                     l5659:	
  6998                           
  6999                           ;Dimmer_B1.c: 946: setDimmerLights_Dimming(lights, 0);
  7000  0F30  0020               	movlb	0	; select bank0
  7001  0F31  01DD               	clrf	setDimmerLights_Dimming@status
  7002  0F32  0869               	movf	setDimmerLights_Main@lights,w
  7003  0F33  318C  24D0         	fcall	_setDimmerLights_Dimming
  7004                           
  7005                           ;Dimmer_B1.c: 947: }
  7006                           ;Dimmer_B1.c: 948: }
  7007                           ;Dimmer_B1.c: 949: }
  7008                           ;Dimmer_B1.c: 950: } else {
  7009  0F35  0008               	return
  7010  0F36                     l5661:	
  7011                           
  7012                           ;Dimmer_B1.c: 951: if (DimmerLights->DimmingTrigger == 1) {
  7013  0F36  0020               	movlb	0	; select bank0
  7014  0F37  086B               	movf	_DimmerLights,w
  7015  0F38  0086               	movwf	6
  7016  0F39  0187               	clrf	7
  7017  0F3A  1E01               	btfss	1,4
  7018  0F3B  0008               	return
  7019                           
  7020                           ;Dimmer_B1.c: 952: DimmerLights->DimmingTrigger = 0;
  7021  0F3C  086B               	movf	_DimmerLights,w
  7022  0F3D  0086               	movwf	6
  7023  0F3E  0187               	clrf	7
  7024  0F3F  1201               	bcf	1,4
  7025  0F40  0008               	return
  7026  0F41                     __end_of_setDimmerLights_Main:	
  7027                           
  7028                           	psect	text39
  7029  04BC                     __ptext39:	
  7030 ;; *************** function _setDimmerLights_OnOff *****************
  7031 ;; Defined at:
  7032 ;;		line 1003 in file "../src/Dimmer_B1.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  lights          1    wreg     unsigned char 
  7035 ;;  command         1   69[BANK0 ] unsigned char 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  lights          1   72[BANK0 ] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:        4 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    6
  7054 ;; This function calls:
  7055 ;;		_DimmerIntr_ValueCalculate
  7056 ;;		_getCmd_Status
  7057 ;;		_getDelayOff_GO
  7058 ;;		_getDimmerLights_PercentToValue
  7059 ;;		_getMain_All_LightsStatus
  7060 ;;		_setCmd_Status
  7061 ;;		_setDelayOff_GO
  7062 ;;		_setDimmerIntr_ControlStatus
  7063 ;;		_setDimmerIntr_DimmingValue
  7064 ;;		_setDimmerIntr_Dimming_RF
  7065 ;;		_setDimmerIntr_MaxmumValue
  7066 ;;		_setDimmerLights_DimmingClose
  7067 ;;		_setLED
  7068 ;;		_setProductData
  7069 ;; This function is called by:
  7070 ;;		_setDimmerLights_Main
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           
  7075                           ;psect for function _setDimmerLights_OnOff
  7076  04BC                     _setDimmerLights_OnOff:	
  7077                           
  7078                           ;incstack = 0
  7079                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7080                           ;setDimmerLights_OnOff@lights stored from wreg
  7081  04BC  0020               	movlb	0	; select bank0
  7082  04BD  00E8               	movwf	setDimmerLights_OnOff@lights
  7083                           
  7084                           ;Dimmer_B1.c: 1005: if (command == 1) {
  7085  04BE  0865               	movf	setDimmerLights_OnOff@command,w
  7086  04BF  3A01               	xorlw	1
  7087  04C0  1D03               	skipz
  7088  04C1  2D13               	goto	l5477
  7089                           
  7090                           ;Dimmer_B1.c: 1007: setDimmerIntr_ControlStatus(lights, 1);
  7091  04C2  01F2               	clrf	setDimmerIntr_ControlStatus@command
  7092  04C3  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
  7093  04C4  0868               	movf	setDimmerLights_OnOff@lights,w
  7094  04C5  3189  21C7  3184   	fcall	_setDimmerIntr_ControlStatus
  7095                           
  7096                           ;Dimmer_B1.c: 1017: setLED(lights, 0);
  7097  04C8  01F4               	clrf	setLED@command
  7098  04C9  0020               	movlb	0	; select bank0
  7099  04CA  0868               	movf	setDimmerLights_OnOff@lights,w
  7100  04CB  318B  23BA  3184   	fcall	_setLED
  7101                           
  7102                           ;Dimmer_B1.c: 1018: ;;
  7103                           ;Dimmer_B1.c: 1038: if (DimmerLights->DimmingRun == 1) {
  7104  04CE  0020               	movlb	0	; select bank0
  7105  04CF  0A6B               	incf	_DimmerLights,w
  7106  04D0  0086               	movwf	6
  7107  04D1  0187               	clrf	7
  7108  04D2  1F01               	btfss	1,6
  7109  04D3  2CF4               	goto	l5469
  7110                           
  7111                           ;Dimmer_B1.c: 1039: DimmerLights->DimmingRun = 0;
  7112  04D4  0A6B               	incf	_DimmerLights,w
  7113  04D5  0086               	movwf	6
  7114  04D6  0187               	clrf	7
  7115  04D7  1301               	bcf	1,6
  7116                           
  7117                           ;Dimmer_B1.c: 1040: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
  7118  04D8  0868               	movf	setDimmerLights_OnOff@lights,w
  7119  04D9  3E14               	addlw	20
  7120  04DA  076D               	addwf	_product,w
  7121  04DB  00E6               	movwf	??_setDimmerLights_OnOff
  7122  04DC  0866               	movf	??_setDimmerLights_OnOff,w
  7123  04DD  0086               	movwf	6
  7124  04DE  3001               	movlw	1	; select bank2/3
  7125  04DF  0087               	movwf	7
  7126  04E0  0801               	movf	1,w
  7127  04E1  3187  274C  3184   	fcall	_getDimmerLights_PercentToValue
  7128  04E4  0020               	movlb	0	; select bank0
  7129  04E5  00E7               	movwf	??_setDimmerLights_OnOff+1
  7130  04E6  0867               	movf	??_setDimmerLights_OnOff+1,w
  7131  04E7  00DA               	movwf	setDimmerIntr_MaxmumValue@value
  7132  04E8  0868               	movf	setDimmerLights_OnOff@lights,w
  7133  04E9  3188  2078  3184   	fcall	_setDimmerIntr_MaxmumValue
  7134                           
  7135                           ;Dimmer_B1.c: 1041: setDimmerIntr_Dimming_RF(lights, 1);
  7136  04EC  01F2               	clrf	setDimmerIntr_Dimming_RF@command
  7137  04ED  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
  7138  04EE  0020               	movlb	0	; select bank0
  7139  04EF  0868               	movf	setDimmerLights_OnOff@lights,w
  7140  04F0  3189  21DC  3184   	fcall	_setDimmerIntr_Dimming_RF
  7141                           
  7142                           ;Dimmer_B1.c: 1042: } else {
  7143  04F3  2D09               	goto	l5471
  7144  04F4                     l5469:	
  7145                           
  7146                           ;Dimmer_B1.c: 1045: setDimmerIntr_DimmingValue(lights, getDimmerLights_PercentToValue(pr
      +                          oduct->Data[20 + lights]));
  7147  04F4  0020               	movlb	0	; select bank0
  7148  04F5  0868               	movf	setDimmerLights_OnOff@lights,w
  7149  04F6  3E14               	addlw	20
  7150  04F7  076D               	addwf	_product,w
  7151  04F8  00E6               	movwf	??_setDimmerLights_OnOff
  7152  04F9  0866               	movf	??_setDimmerLights_OnOff,w
  7153  04FA  0086               	movwf	6
  7154  04FB  3001               	movlw	1	; select bank2/3
  7155  04FC  0087               	movwf	7
  7156  04FD  0801               	movf	1,w
  7157  04FE  3187  274C  3184   	fcall	_getDimmerLights_PercentToValue
  7158  0501  0020               	movlb	0	; select bank0
  7159  0502  00E7               	movwf	??_setDimmerLights_OnOff+1
  7160  0503  0867               	movf	??_setDimmerLights_OnOff+1,w
  7161  0504  00DA               	movwf	setDimmerIntr_DimmingValue@value
  7162  0505  0868               	movf	setDimmerLights_OnOff@lights,w
  7163  0506  3188  2084  3184   	fcall	_setDimmerIntr_DimmingValue
  7164  0509                     l5471:	
  7165                           
  7166                           ;Dimmer_B1.c: 1051: }
  7167                           ;Dimmer_B1.c: 1053: if (lights == 1) {
  7168  0509  0020               	movlb	0	; select bank0
  7169  050A  0868               	movf	setDimmerLights_OnOff@lights,w
  7170  050B  3A01               	xorlw	1
  7171  050C  1D03               	skipz
  7172  050D  2D37               	goto	l5489
  7173                           
  7174                           ;Dimmer_B1.c: 1056: DimmerIntr_ValueCalculate(1);
  7175  050E  3001               	movlw	1
  7176  050F  318B  2301  3184   	fcall	_DimmerIntr_ValueCalculate
  7177                           
  7178                           ;Dimmer_B1.c: 1063: }
  7179                           ;Dimmer_B1.c: 1069: } else if (command == 0) {
  7180                           
  7181                           ;Dimmer_B1.c: 1058: } else if (lights == 2) {
  7182  0512  2D37               	goto	l5489
  7183  0513                     l5477:	
  7184  0513  0020               	movlb	0	; select bank0
  7185  0514  08E5               	movf	setDimmerLights_OnOff@command,f
  7186  0515  1D03               	skipz
  7187  0516  2D37               	goto	l5489
  7188                           
  7189                           ;Dimmer_B1.c: 1071: setDimmerIntr_ControlStatus(lights, 0);
  7190  0517  01F2               	clrf	setDimmerIntr_ControlStatus@command
  7191  0518  0868               	movf	setDimmerLights_OnOff@lights,w
  7192  0519  3189  21C7  3184   	fcall	_setDimmerIntr_ControlStatus
  7193                           
  7194                           ;Dimmer_B1.c: 1078: if (getDelayOff_GO(lights) == 1) {
  7195  051C  0020               	movlb	0	; select bank0
  7196  051D  0868               	movf	setDimmerLights_OnOff@lights,w
  7197  051E  3188  20D0  3184   	fcall	_getDelayOff_GO
  7198  0521  3A01               	xorlw	1
  7199  0522  1D03               	skipz
  7200  0523  2D2B               	goto	l475
  7201                           
  7202                           ;Dimmer_B1.c: 1079: setDelayOff_GO(lights, 0, 0);
  7203  0524  0020               	movlb	0	; select bank0
  7204  0525  01DD               	clrf	setDelayOff_GO@command
  7205  0526  01DE               	clrf	setDelayOff_GO@value
  7206  0527  0868               	movf	setDimmerLights_OnOff@lights,w
  7207  0528  3186  2668  3184   	fcall	_setDelayOff_GO
  7208  052B                     l475:	
  7209                           
  7210                           ;Dimmer_B1.c: 1080: }
  7211                           ;Dimmer_B1.c: 1085: setLED(lights, 1);
  7212  052B  01F4               	clrf	setLED@command
  7213  052C  0AF4               	incf	setLED@command,f
  7214  052D  0020               	movlb	0	; select bank0
  7215  052E  0868               	movf	setDimmerLights_OnOff@lights,w
  7216  052F  318B  23BA  3184   	fcall	_setLED
  7217                           
  7218                           ;Dimmer_B1.c: 1086: ;;
  7219                           ;Dimmer_B1.c: 1090: if (lights == 1) {
  7220  0532  0020               	movlb	0	; select bank0
  7221  0533  0868               	movf	setDimmerLights_OnOff@lights,w
  7222  0534  3A01               	xorlw	1
  7223  0535  1903               	btfsc	3,2
  7224                           
  7225                           ;Dimmer_B1.c: 1092: RB1 = 0;
  7226  0536  108D               	bcf	13,1	;volatile
  7227  0537                     l5489:	
  7228                           
  7229                           ;Dimmer_B1.c: 1098: }
  7230                           ;Dimmer_B1.c: 1124: }
  7231                           ;Dimmer_B1.c: 1126: setDimmerLights_DimmingClose();
  7232  0537  3197  27D5  3184   	fcall	_setDimmerLights_DimmingClose
  7233                           
  7234                           ;Dimmer_B1.c: 1128: ;;
  7235                           ;Dimmer_B1.c: 1130: if (getCmd_Status(1) == 1) {
  7236  053A  3001               	movlw	1
  7237  053B  3189  2109  3184   	fcall	_getCmd_Status
  7238  053E  3A01               	xorlw	1
  7239  053F  1D03               	skipz
  7240  0540  0008               	return
  7241                           
  7242                           ;Dimmer_B1.c: 1131: if (getMain_All_LightsStatus() == 0) {
  7243  0541  3188  2000  3184   	fcall	_getMain_All_LightsStatus
  7244  0544  3800               	iorlw	0
  7245  0545  1D03               	skipz
  7246  0546  0008               	return
  7247                           
  7248                           ;Dimmer_B1.c: 1132: setCmd_Status(1, 0);
  7249  0547  01F2               	clrf	setCmd_Status@cmd
  7250  0548  3001               	movlw	1
  7251  0549  3189  219F  3184   	fcall	_setCmd_Status
  7252                           
  7253                           ;Dimmer_B1.c: 1133: setProductData(11, 0);
  7254  054C  0020               	movlb	0	; select bank0
  7255  054D  01DA               	clrf	setProductData@value
  7256  054E  300B               	movlw	11
  7257  054F  3188  206C  3184   	fcall	_setProductData
  7258                           
  7259                           ;Dimmer_B1.c: 1134: setProductData(17, 0);
  7260  0552  0020               	movlb	0	; select bank0
  7261  0553  01DA               	clrf	setProductData@value
  7262  0554  3011               	movlw	17
  7263  0555  3188  206C         	fcall	_setProductData
  7264                           
  7265                           ;Dimmer_B1.c: 1136: }
  7266                           ;Dimmer_B1.c: 1137: } else {
  7267                           
  7268                           ;Dimmer_B1.c: 1135: ;;
  7269  0557  0008               	return
  7270  0558                     __end_of_setDimmerLights_OnOff:	
  7271                           ;Dimmer_B1.c: 1138: ;;
  7272                           
  7273                           
  7274                           	psect	text40
  7275  0BBA                     __ptext40:	
  7276 ;; *************** function _setLED *****************
  7277 ;; Defined at:
  7278 ;;		line 81 in file "../src/LED_B1.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  led             1    wreg     unsigned char 
  7281 ;;  command         1    4[COMMON] unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  led             1    5[COMMON] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;		None               void
  7286 ;; Registers used:
  7287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7293 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;Total ram usage:        2 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    4
  7300 ;; This function calls:
  7301 ;;		_LedPointSelect
  7302 ;; This function is called by:
  7303 ;;		_setDimmerLights_OnOff
  7304 ;;		_setLED_Initialization
  7305 ;;		_Exception_Main
  7306 ;;		_setSw_Initialization
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           
  7311                           ;psect for function _setLED
  7312  0BBA                     _setLED:	
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7316                           ;setLED@led stored from wreg
  7317  0BBA  00F5               	movwf	setLED@led
  7318                           
  7319                           ;LED_B1.c: 82: LedPointSelect(led);
  7320  0BBB  0875               	movf	setLED@led,w
  7321  0BBC  3188  202B  318B   	fcall	_LedPointSelect
  7322                           
  7323                           ;LED_B1.c: 83: if (command == 0) {
  7324  0BBF  08F4               	movf	setLED@command,f
  7325  0BC0  1D03               	skipz
  7326  0BC1  2BC8               	goto	l5399
  7327                           
  7328                           ;LED_B1.c: 112: if (led == 99) {
  7329  0BC2  0875               	movf	setLED@led,w
  7330  0BC3  3A63               	xorlw	99
  7331  0BC4  1D03               	skipz
  7332  0BC5  2BC8               	goto	l5399
  7333                           
  7334                           ;LED_B1.c: 116: RB5 = 1;
  7335  0BC6  0020               	movlb	0	; select bank0
  7336  0BC7  168D               	bsf	13,5	;volatile
  7337  0BC8                     l5399:	
  7338                           
  7339                           ;LED_B1.c: 118: }
  7340                           ;LED_B1.c: 120: }
  7341                           ;LED_B1.c: 121: if (command == 1) {
  7342  0BC8  0874               	movf	setLED@command,w
  7343  0BC9  3A01               	xorlw	1
  7344  0BCA  1D03               	skipz
  7345  0BCB  2BD2               	goto	l5405
  7346                           
  7347                           ;LED_B1.c: 150: if (led == 99) {
  7348  0BCC  0875               	movf	setLED@led,w
  7349  0BCD  3A63               	xorlw	99
  7350  0BCE  1D03               	skipz
  7351  0BCF  2BD2               	goto	l5405
  7352                           
  7353                           ;LED_B1.c: 154: RB5 = 0;
  7354  0BD0  0020               	movlb	0	; select bank0
  7355  0BD1  128D               	bcf	13,5	;volatile
  7356  0BD2                     l5405:	
  7357                           
  7358                           ;LED_B1.c: 156: }
  7359                           ;LED_B1.c: 158: }
  7360                           ;LED_B1.c: 159: if (command == 10) {
  7361  0BD2  0874               	movf	setLED@command,w
  7362  0BD3  3A0A               	xorlw	10
  7363  0BD4  1D03               	skipz
  7364  0BD5  2BE6               	goto	l5413
  7365                           
  7366                           ;LED_B1.c: 160: LED->GO = 0;
  7367  0BD6  087B               	movf	_LED,w
  7368  0BD7  0086               	movwf	6
  7369  0BD8  0187               	clrf	7
  7370  0BD9  1081               	bcf	1,1
  7371                           
  7372                           ;LED_B1.c: 161: LED->Time = 0;
  7373  0BDA  0A7B               	incf	_LED,w
  7374  0BDB  0086               	movwf	6
  7375  0BDC  0187               	clrf	7
  7376  0BDD  3000               	movlw	0
  7377  0BDE  3FC0               	movwi [0]fsr1
  7378  0BDF  3FC1               	movwi [1]fsr1
  7379                           
  7380                           ;LED_B1.c: 190: if (led == 99) {
  7381  0BE0  0875               	movf	setLED@led,w
  7382  0BE1  3A63               	xorlw	99
  7383  0BE2  1D03               	skipz
  7384  0BE3  2BE6               	goto	l5413
  7385                           
  7386                           ;LED_B1.c: 194: RB5 = 1;
  7387  0BE4  0020               	movlb	0	; select bank0
  7388  0BE5  168D               	bsf	13,5	;volatile
  7389  0BE6                     l5413:	
  7390                           
  7391                           ;LED_B1.c: 196: }
  7392                           ;LED_B1.c: 198: }
  7393                           ;LED_B1.c: 199: if (command == 11) {
  7394  0BE6  0874               	movf	setLED@command,w
  7395  0BE7  3A0B               	xorlw	11
  7396  0BE8  1D03               	skipz
  7397  0BE9  0008               	return
  7398                           
  7399                           ;LED_B1.c: 200: LED->GO = 1;
  7400  0BEA  087B               	movf	_LED,w
  7401  0BEB  0086               	movwf	6
  7402  0BEC  0187               	clrf	7
  7403  0BED  1481               	bsf	1,1
  7404  0BEE  0008               	return
  7405  0BEF                     __end_of_setLED:	
  7406                           
  7407                           	psect	text41
  7408  082B                     __ptext41:	
  7409 ;; *************** function _LedPointSelect *****************
  7410 ;; Defined at:
  7411 ;;		line 7 in file "../src/LED_B1.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  led             1    wreg     unsigned char 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  led             1    3[COMMON] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;		None               void
  7418 ;; Registers used:
  7419 ;;		wreg
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;Total ram usage:        2 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    3
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_setLED_Initialization
  7436 ;;		_setLED
  7437 ;;		_setLED_Main
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function _LedPointSelect
  7443  082B                     _LedPointSelect:	
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in _LedPointSelect: [wreg]
  7447                           ;LedPointSelect@led stored from wreg
  7448  082B  00F3               	movwf	LedPointSelect@led
  7449                           
  7450                           ;LED_B1.c: 24: if (led == 99) {
  7451  082C  0873               	movf	LedPointSelect@led,w
  7452  082D  3A63               	xorlw	99
  7453  082E  1D03               	skipz
  7454  082F  0008               	return
  7455                           
  7456                           ;LED_B1.c: 25: LED = &VarErrLED;
  7457  0830  30E4               	movlw	_VarErrLED& (0+255)
  7458  0831  00F2               	movwf	??_LedPointSelect
  7459  0832  0872               	movf	??_LedPointSelect,w
  7460  0833  00FB               	movwf	_LED
  7461  0834  0008               	return
  7462  0835                     __end_of_LedPointSelect:	
  7463                           
  7464                           	psect	text42
  7465  17D5                     __ptext42:	
  7466 ;; *************** function _setDimmerLights_DimmingClose *****************
  7467 ;; Defined at:
  7468 ;;		line 2042 in file "../src/Dimmer_B1.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;		None
  7473 ;; Return value:  Size  Location     Type
  7474 ;;		None               void
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, pclath, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;Total ram usage:        0 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    4
  7489 ;; This function calls:
  7490 ;;		_setDimmerIntr_Dimming_Sw
  7491 ;; This function is called by:
  7492 ;;		_setDimmerLights_OnOff
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _setDimmerLights_DimmingClose
  7498  17D5                     _setDimmerLights_DimmingClose:	
  7499                           
  7500                           ;Dimmer_B1.c: 2044: setDimmerIntr_Dimming_Sw(1, 0);
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
  7504  17D5  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
  7505  17D6  3001               	movlw	1
  7506  17D7  3189  218C         	fcall	_setDimmerIntr_Dimming_Sw
  7507  17D9  0008               	return
  7508  17DA                     __end_of_setDimmerLights_DimmingClose:	
  7509                           
  7510                           	psect	text43
  7511  09DC                     __ptext43:	
  7512 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7513 ;; Defined at:
  7514 ;;		line 292 in file "../src/Dimmer_B1.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  lights          1    wreg     unsigned char 
  7517 ;;  command         1    2[COMMON] unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  lights          1    4[COMMON] unsigned char 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;		None               void
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7529 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;Total ram usage:        3 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    3
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_setDimmerLights_OnOff
  7540 ;;		_DimmerLights_AssignationDimming
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           
  7545                           ;psect for function _setDimmerIntr_Dimming_RF
  7546  09DC                     _setDimmerIntr_Dimming_RF:	
  7547                           
  7548                           ;incstack = 0
  7549                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7550                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7551  09DC  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
  7552                           
  7553                           ;Dimmer_B1.c: 294: if (lights == 1) {
  7554  09DD  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
  7555  09DE  3A01               	xorlw	1
  7556  09DF  1D03               	skipz
  7557  09E0  0008               	return
  7558                           
  7559                           ;Dimmer_B1.c: 295: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7560  09E1  0872               	movf	setDimmerIntr_Dimming_RF@command,w
  7561  09E2  3A01               	xorlw	1
  7562  09E3  3000               	movlw	0
  7563  09E4  1903               	skipnz
  7564  09E5  3001               	movlw	1
  7565  09E6  00F3               	movwf	??_setDimmerIntr_Dimming_RF
  7566  09E7  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
  7567  09E8  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
  7568  09E9  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
  7569  09EA  0021               	movlb	1	; select bank1
  7570  09EB  0820               	movf	_DimmerIntr1^(0+128),w
  7571  09EC  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7572  09ED  39BF               	andlw	-65
  7573  09EE  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7574  09EF  00A0               	movwf	_DimmerIntr1^(0+128)
  7575  09F0  0008               	return
  7576  09F1                     __end_of_setDimmerIntr_Dimming_RF:	
  7577                           
  7578                           	psect	text44
  7579  0884                     __ptext44:	
  7580 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7581 ;; Defined at:
  7582 ;;		line 139 in file "../src/Dimmer_B1.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  lights          1    wreg     unsigned char 
  7585 ;;  value           1   58[BANK0 ] unsigned char 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  lights          1   60[BANK0 ] unsigned char 
  7588 ;; Return value:  Size  Location     Type
  7589 ;;		None               void
  7590 ;; Registers used:
  7591 ;;		wreg
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7597 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;Total ram usage:        3 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    3
  7604 ;; This function calls:
  7605 ;;		Nothing
  7606 ;; This function is called by:
  7607 ;;		_setDimmerLights_OnOff
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           
  7612                           ;psect for function _setDimmerIntr_DimmingValue
  7613  0884                     _setDimmerIntr_DimmingValue:	
  7614                           
  7615                           ;incstack = 0
  7616                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7617                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7618  0884  0020               	movlb	0	; select bank0
  7619  0885  00DC               	movwf	setDimmerIntr_DimmingValue@lights
  7620                           
  7621                           ;Dimmer_B1.c: 141: if (lights == 1) {
  7622  0886  085C               	movf	setDimmerIntr_DimmingValue@lights,w
  7623  0887  3A01               	xorlw	1
  7624  0888  1D03               	skipz
  7625  0889  0008               	return
  7626                           
  7627                           ;Dimmer_B1.c: 142: DimmerIntr1.DimmingValue = value;
  7628  088A  085A               	movf	setDimmerIntr_DimmingValue@value,w
  7629  088B  00DB               	movwf	??_setDimmerIntr_DimmingValue
  7630  088C  085B               	movf	??_setDimmerIntr_DimmingValue,w
  7631  088D  0021               	movlb	1	; select bank1
  7632  088E  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
  7633  088F  0008               	return
  7634  0890                     __end_of_setDimmerIntr_DimmingValue:	
  7635                           
  7636                           	psect	text45
  7637  09C7                     __ptext45:	
  7638 ;; *************** function _setDimmerIntr_ControlStatus *****************
  7639 ;; Defined at:
  7640 ;;		line 121 in file "../src/Dimmer_B1.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  lights          1    wreg     unsigned char 
  7643 ;;  command         1    2[COMMON] unsigned char 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  lights          1    4[COMMON] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;		None               void
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;Total ram usage:        3 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    3
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_setDimmerLights_OnOff
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           
  7670                           ;psect for function _setDimmerIntr_ControlStatus
  7671  09C7                     _setDimmerIntr_ControlStatus:	
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  7675                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  7676  09C7  00F4               	movwf	setDimmerIntr_ControlStatus@lights
  7677                           
  7678                           ;Dimmer_B1.c: 123: if (lights == 1) {
  7679  09C8  0874               	movf	setDimmerIntr_ControlStatus@lights,w
  7680  09C9  3A01               	xorlw	1
  7681  09CA  1D03               	skipz
  7682  09CB  0008               	return
  7683                           
  7684                           ;Dimmer_B1.c: 124: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  7685  09CC  0872               	movf	setDimmerIntr_ControlStatus@command,w
  7686  09CD  3A01               	xorlw	1
  7687  09CE  3000               	movlw	0
  7688  09CF  1903               	skipnz
  7689  09D0  3001               	movlw	1
  7690  09D1  00F3               	movwf	??_setDimmerIntr_ControlStatus
  7691  09D2  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
  7692  09D3  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
  7693  09D4  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
  7694  09D5  0021               	movlb	1	; select bank1
  7695  09D6  0820               	movf	_DimmerIntr1^(0+128),w
  7696  09D7  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
  7697  09D8  39F7               	andlw	-9
  7698  09D9  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
  7699  09DA  00A0               	movwf	_DimmerIntr1^(0+128)
  7700  09DB  0008               	return
  7701  09DC                     __end_of_setDimmerIntr_ControlStatus:	
  7702                           
  7703                           	psect	text46
  7704  0668                     __ptext46:	
  7705 ;; *************** function _setDelayOff_GO *****************
  7706 ;; Defined at:
  7707 ;;		line 87 in file "../src/DelayOff_B1.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  sw              1    wreg     unsigned char 
  7710 ;;  command         1   61[BANK0 ] unsigned char 
  7711 ;;  value           1   62[BANK0 ] unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  sw              1   68[BANK0 ] unsigned char 
  7714 ;;  k               1   67[BANK0 ] unsigned char 
  7715 ;;  j               1   66[BANK0 ] unsigned char 
  7716 ;;  i               1   65[BANK0 ] unsigned char 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;		None               void
  7719 ;; Registers used:
  7720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7726 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7727 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7728 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;Total ram usage:        8 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:    4
  7733 ;; This function calls:
  7734 ;;		_DelayOffPointSelect
  7735 ;;		___bmul
  7736 ;;		_setProductData
  7737 ;; This function is called by:
  7738 ;;		_setDimmerLights_OnOff
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function _setDelayOff_GO
  7744  0668                     _setDelayOff_GO:	
  7745                           
  7746                           ;incstack = 0
  7747                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7748                           ;setDelayOff_GO@sw stored from wreg
  7749  0668  0020               	movlb	0	; select bank0
  7750  0669  00E4               	movwf	setDelayOff_GO@sw
  7751                           
  7752                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
  7753  066A  0864               	movf	setDelayOff_GO@sw,w
  7754  066B  3188  2035  3186   	fcall	_DelayOffPointSelect
  7755                           
  7756                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
  7757  066E  0020               	movlb	0	; select bank0
  7758  066F  085D               	movf	setDelayOff_GO@command,w
  7759  0670  3A01               	xorlw	1
  7760  0671  3000               	movlw	0
  7761  0672  1903               	skipnz
  7762  0673  3001               	movlw	1
  7763  0674  00DF               	movwf	??_setDelayOff_GO
  7764  0675  086A               	movf	_DelayOff,w
  7765  0676  0086               	movwf	6
  7766  0677  0187               	clrf	7
  7767  0678  0DDF               	rlf	??_setDelayOff_GO,f
  7768  0679  0801               	movf	1,w
  7769  067A  065F               	xorwf	??_setDelayOff_GO,w
  7770  067B  39FD               	andlw	-3
  7771  067C  065F               	xorwf	??_setDelayOff_GO,w
  7772  067D  0081               	movwf	1
  7773                           
  7774                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
  7775  067E  086A               	movf	_DelayOff,w
  7776  067F  3E02               	addlw	2
  7777  0680  0086               	movwf	6
  7778  0681  0187               	clrf	7
  7779  0682  3000               	movlw	0
  7780  0683  3FC0               	movwi [0]fsr1
  7781  0684  3FC1               	movwi [1]fsr1
  7782                           
  7783                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
  7784  0685  086A               	movf	_DelayOff,w
  7785  0686  3E04               	addlw	4
  7786  0687  0086               	movwf	6
  7787  0688  0187               	clrf	7
  7788  0689  0181               	clrf	1
  7789                           
  7790                           ;DelayOff_B1.c: 94: if (command == 1) {
  7791  068A  085D               	movf	setDelayOff_GO@command,w
  7792  068B  3A01               	xorlw	1
  7793  068C  1D03               	skipz
  7794  068D  2EDD               	goto	l4055
  7795                           
  7796                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
  7797  068E  3005               	movlw	5
  7798  068F  00DF               	movwf	??_setDelayOff_GO
  7799  0690  085F               	movf	??_setDelayOff_GO,w
  7800  0691  00E1               	movwf	setDelayOff_GO@i
  7801  0692  01E2               	clrf	setDelayOff_GO@j
  7802  0693  01E3               	clrf	setDelayOff_GO@k
  7803                           
  7804                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
  7805  0694  300F               	movlw	15
  7806  0695  055E               	andwf	setDelayOff_GO@value,w
  7807  0696  00DF               	movwf	??_setDelayOff_GO
  7808  0697  085F               	movf	??_setDelayOff_GO,w
  7809  0698  3A05               	xorlw	5
  7810  0699  1903               	skipnz
  7811  069A  2E9F               	goto	l4041
  7812  069B  085E               	movf	setDelayOff_GO@value,w
  7813  069C  390F               	andlw	15
  7814  069D  1D03               	btfss	3,2
  7815  069E  2ECC               	goto	l4051
  7816  069F                     l4041:	
  7817  069F  3031               	movlw	49
  7818  06A0  025E               	subwf	setDelayOff_GO@value,w
  7819  06A1  1803               	skipnc
  7820  06A2  2ECC               	goto	l4051
  7821                           
  7822                           ;DelayOff_B1.c: 98: j = value & 0x0f;
  7823  06A3  085E               	movf	setDelayOff_GO@value,w
  7824  06A4  390F               	andlw	15
  7825  06A5  00DF               	movwf	??_setDelayOff_GO
  7826  06A6  085F               	movf	??_setDelayOff_GO,w
  7827  06A7  00E2               	movwf	setDelayOff_GO@j
  7828                           
  7829                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
  7830  06A8  085E               	movf	setDelayOff_GO@value,w
  7831  06A9  00DF               	movwf	??_setDelayOff_GO
  7832  06AA  3004               	movlw	4
  7833  06AB                     u3545:	
  7834  06AB  36DF               	lsrf	??_setDelayOff_GO,f
  7835  06AC  0B89               	decfsz	9,f
  7836  06AD  2EAB               	goto	u3545
  7837  06AE  085F               	movf	??_setDelayOff_GO,w
  7838  06AF  390F               	andlw	15
  7839  06B0  00E0               	movwf	??_setDelayOff_GO+1
  7840  06B1  0860               	movf	??_setDelayOff_GO+1,w
  7841  06B2  00E3               	movwf	setDelayOff_GO@k
  7842                           
  7843                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
  7844  06B3  300A               	movlw	10
  7845  06B4  00DF               	movwf	??_setDelayOff_GO
  7846  06B5  085F               	movf	??_setDelayOff_GO,w
  7847  06B6  00F2               	movwf	___bmul@multiplicand
  7848  06B7  0863               	movf	setDelayOff_GO@k,w
  7849  06B8  3189  2147  3186   	fcall	___bmul
  7850  06BB  0020               	movlb	0	; select bank0
  7851  06BC  0762               	addwf	setDelayOff_GO@j,w
  7852  06BD  00E0               	movwf	??_setDelayOff_GO+1
  7853  06BE  0A6A               	incf	_DelayOff,w
  7854  06BF  0086               	movwf	6
  7855  06C0  0187               	clrf	7
  7856  06C1  0860               	movf	??_setDelayOff_GO+1,w
  7857  06C2  0081               	movwf	1
  7858                           
  7859                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
  7860  06C3  085E               	movf	setDelayOff_GO@value,w
  7861  06C4  00DF               	movwf	??_setDelayOff_GO
  7862  06C5  085F               	movf	??_setDelayOff_GO,w
  7863  06C6  00DA               	movwf	setProductData@value
  7864  06C7  0864               	movf	setDelayOff_GO@sw,w
  7865  06C8  3E1A               	addlw	26
  7866  06C9  3188  206C         	fcall	_setProductData
  7867                           
  7868                           ;DelayOff_B1.c: 103: } else {
  7869  06CB  0008               	return
  7870  06CC                     l4051:	
  7871                           
  7872                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
  7873  06CC  3005               	movlw	5
  7874  06CD  0020               	movlb	0	; select bank0
  7875  06CE  00DF               	movwf	??_setDelayOff_GO
  7876  06CF  0A6A               	incf	_DelayOff,w
  7877  06D0  0086               	movwf	6
  7878  06D1  0187               	clrf	7
  7879  06D2  085F               	movf	??_setDelayOff_GO,w
  7880  06D3  0081               	movwf	1
  7881                           
  7882                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
  7883  06D4  3005               	movlw	5
  7884  06D5  00DF               	movwf	??_setDelayOff_GO
  7885  06D6  085F               	movf	??_setDelayOff_GO,w
  7886  06D7  00DA               	movwf	setProductData@value
  7887  06D8  0864               	movf	setDelayOff_GO@sw,w
  7888  06D9  3E1A               	addlw	26
  7889  06DA  3188  206C         	fcall	_setProductData
  7890                           
  7891                           ;DelayOff_B1.c: 106: }
  7892                           ;DelayOff_B1.c: 108: } else if (command == 0) {
  7893  06DC  0008               	return
  7894  06DD                     l4055:	
  7895  06DD  0020               	movlb	0	; select bank0
  7896  06DE  08DD               	movf	setDelayOff_GO@command,f
  7897  06DF  1D03               	skipz
  7898  06E0  0008               	return
  7899                           
  7900                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
  7901  06E1  01DA               	clrf	setProductData@value
  7902  06E2  0864               	movf	setDelayOff_GO@sw,w
  7903  06E3  3E1A               	addlw	26
  7904  06E4  3188  206C         	fcall	_setProductData
  7905  06E6  0008               	return
  7906  06E7                     __end_of_setDelayOff_GO:	
  7907                           
  7908                           	psect	text47
  7909  0947                     __ptext47:	
  7910 ;; *************** function ___bmul *****************
  7911 ;; Defined at:
  7912 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  multiplier      1    wreg     unsigned char 
  7915 ;;  multiplicand    1    2[COMMON] unsigned char 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;  multiplier      1    5[COMMON] unsigned char 
  7918 ;;  product         1    4[COMMON] unsigned char 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      unsigned char 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2, status,0
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;Total ram usage:        4 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    3
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_setDelayOff_GO
  7939 ;;		_DelayTimejudge
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function ___bmul
  7945  0947                     ___bmul:	
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7949                           ;___bmul@multiplier stored from wreg
  7950  0947  00F5               	movwf	___bmul@multiplier
  7951  0948  01F4               	clrf	___bmul@product
  7952  0949                     l3707:	
  7953  0949  1C75               	btfss	___bmul@multiplier,0
  7954  094A  294F               	goto	l3711
  7955  094B  0872               	movf	___bmul@multiplicand,w
  7956  094C  00F3               	movwf	??___bmul
  7957  094D  0873               	movf	??___bmul,w
  7958  094E  07F4               	addwf	___bmul@product,f
  7959  094F                     l3711:	
  7960  094F  1003               	clrc
  7961  0950  0DF2               	rlf	___bmul@multiplicand,f
  7962  0951  1003               	clrc
  7963  0952  0CF5               	rrf	___bmul@multiplier,f
  7964  0953  08F5               	movf	___bmul@multiplier,f
  7965  0954  1D03               	skipz
  7966  0955  2949               	goto	l3707
  7967  0956  0874               	movf	___bmul@product,w
  7968  0957  0008               	return
  7969  0958                     __end_of___bmul:	
  7970                           
  7971                           	psect	text48
  7972  099F                     __ptext48:	
  7973 ;; *************** function _setCmd_Status *****************
  7974 ;; Defined at:
  7975 ;;		line 655 in file "../src/Main_B1.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  number          1    wreg     unsigned char 
  7978 ;;  cmd             1    2[COMMON] unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  number          1    4[COMMON] unsigned char 
  7981 ;; Return value:  Size  Location     Type
  7982 ;;		None               void
  7983 ;; Registers used:
  7984 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;Total ram usage:        3 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:    3
  7997 ;; This function calls:
  7998 ;;		Nothing
  7999 ;; This function is called by:
  8000 ;;		_setDimmerLights_OnOff
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           
  8005                           ;psect for function _setCmd_Status
  8006  099F                     _setCmd_Status:	
  8007                           
  8008                           ;incstack = 0
  8009                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  8010                           ;setCmd_Status@number stored from wreg
  8011  099F  00F4               	movwf	setCmd_Status@number
  8012                           
  8013                           ;Main_B1.c: 656: switch (number) {
  8014  09A0  29AD               	goto	l4189
  8015  09A1                     l4185:	
  8016                           ;Main_B1.c: 657: case 1:
  8017                           
  8018                           
  8019                           ;Main_B1.c: 658: Cmd.all_off = cmd == 1 ? 1 : 0;
  8020  09A1  0872               	movf	setCmd_Status@cmd,w
  8021  09A2  3A01               	xorlw	1
  8022  09A3  3000               	movlw	0
  8023  09A4  1903               	skipnz
  8024  09A5  3001               	movlw	1
  8025  09A6  00F3               	movwf	??_setCmd_Status
  8026  09A7  087A               	movf	_Cmd,w
  8027  09A8  0673               	xorwf	??_setCmd_Status,w
  8028  09A9  39FE               	andlw	-2
  8029  09AA  0673               	xorwf	??_setCmd_Status,w
  8030  09AB  00FA               	movwf	_Cmd
  8031                           
  8032                           ;Main_B1.c: 660: }
  8033                           
  8034                           ;Main_B1.c: 659: break;
  8035  09AC  0008               	return
  8036  09AD                     l4189:	
  8037  09AD  0874               	movf	setCmd_Status@number,w
  8038                           
  8039                           ; Switch size 1, requested type "space"
  8040                           ; Number of cases is 1, Range of values is 1 to 1
  8041                           ; switch strategies available:
  8042                           ; Name         Instructions Cycles
  8043                           ; simple_byte            4     3 (average)
  8044                           ; direct_byte           11     9 (fixed)
  8045                           ; jumptable            263     9 (fixed)
  8046                           ;	Chosen strategy is simple_byte
  8047  09AE  3A01               	xorlw	1	; case 1
  8048  09AF  1903               	skipnz
  8049  09B0  29A1               	goto	l4185
  8050  09B1  29B2               	goto	l1071
  8051  09B2                     l1071:	
  8052  09B2  0008               	return
  8053  09B3                     __end_of_setCmd_Status:	
  8054                           
  8055                           	psect	text49
  8056  0800                     __ptext49:	
  8057 ;; *************** function _getMain_All_LightsStatus *****************
  8058 ;; Defined at:
  8059 ;;		line 377 in file "../src/Main_B1.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;		None
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  status          1    2[COMMON] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      unsigned char 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;Total ram usage:        1 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    3
  8080 ;; This function calls:
  8081 ;;		Nothing
  8082 ;; This function is called by:
  8083 ;;		_setDimmerLights_Main
  8084 ;;		_setDimmerLights_OnOff
  8085 ;;		_Flash_Memory_Main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           
  8090                           ;psect for function _getMain_All_LightsStatus
  8091  0800                     _getMain_All_LightsStatus:	
  8092                           
  8093                           ;Main_B1.c: 378: char status = 0;
  8094                           
  8095                           ;incstack = 0
  8096                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  8097  0800  01F2               	clrf	getMain_All_LightsStatus@status
  8098                           
  8099                           ;Main_B1.c: 385: status = DimmerLights1.Status == 1 ? 1 : 0;
  8100  0801  3000               	movlw	0
  8101  0802  0021               	movlb	1	; select bank1
  8102  0803  1857               	btfsc	(_DimmerLights1^(0+128)+1),0
  8103  0804  3001               	movlw	1
  8104  0805  00F2               	movwf	getMain_All_LightsStatus@status
  8105                           
  8106                           ;Main_B1.c: 424: return status;
  8107  0806  0872               	movf	getMain_All_LightsStatus@status,w
  8108  0807  0008               	return
  8109  0808                     __end_of_getMain_All_LightsStatus:	
  8110                           
  8111                           	psect	text50
  8112  08D0                     __ptext50:	
  8113 ;; *************** function _getDelayOff_GO *****************
  8114 ;; Defined at:
  8115 ;;		line 114 in file "../src/DelayOff_B1.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  sw              1    wreg     unsigned char 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  sw              1    4[COMMON] unsigned char 
  8120 ;;  go              1    5[COMMON] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:        2 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    4
  8137 ;; This function calls:
  8138 ;;		_DelayOffPointSelect
  8139 ;; This function is called by:
  8140 ;;		_setDimmerLights_OnOff
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function _getDelayOff_GO
  8146  08D0                     _getDelayOff_GO:	
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8150                           ;getDelayOff_GO@sw stored from wreg
  8151  08D0  00F4               	movwf	getDelayOff_GO@sw
  8152                           
  8153                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
  8154  08D1  0874               	movf	getDelayOff_GO@sw,w
  8155  08D2  3188  2035         	fcall	_DelayOffPointSelect
  8156                           
  8157                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
  8158  08D4  0020               	movlb	0	; select bank0
  8159  08D5  086A               	movf	_DelayOff,w
  8160  08D6  0086               	movwf	6
  8161  08D7  0187               	clrf	7
  8162  08D8  3000               	movlw	0
  8163  08D9  1881               	btfsc	1,1
  8164  08DA  3001               	movlw	1
  8165  08DB  00F5               	movwf	getDelayOff_GO@go
  8166                           
  8167                           ;DelayOff_B1.c: 117: return go;
  8168  08DC  0875               	movf	getDelayOff_GO@go,w
  8169  08DD  0008               	return
  8170  08DE                     __end_of_getDelayOff_GO:	
  8171                           
  8172                           	psect	text51
  8173  0909                     __ptext51:	
  8174 ;; *************** function _getCmd_Status *****************
  8175 ;; Defined at:
  8176 ;;		line 663 in file "../src/Main_B1.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  number          1    wreg     unsigned char 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  number          1    2[COMMON] unsigned char 
  8181 ;;  cmd             1    3[COMMON] unsigned char 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      unsigned char 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8195 ;;Total ram usage:        2 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    3
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_setDimmerLights_OnOff
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           
  8206                           ;psect for function _getCmd_Status
  8207  0909                     _getCmd_Status:	
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  8211                           ;getCmd_Status@number stored from wreg
  8212  0909  00F2               	movwf	getCmd_Status@number
  8213                           
  8214                           ;Main_B1.c: 664: char cmd = 0;
  8215  090A  01F3               	clrf	getCmd_Status@cmd
  8216                           
  8217                           ;Main_B1.c: 665: switch (number) {
  8218  090B  2911               	goto	l4177
  8219  090C                     l4173:	
  8220                           ;Main_B1.c: 666: case 1:
  8221                           
  8222                           
  8223                           ;Main_B1.c: 667: cmd = Cmd.all_off == 1 ? 1 : 0;
  8224  090C  3000               	movlw	0
  8225  090D  187A               	btfsc	_Cmd,0
  8226  090E  3001               	movlw	1
  8227  090F  00F3               	movwf	getCmd_Status@cmd
  8228                           
  8229                           ;Main_B1.c: 669: }
  8230                           
  8231                           ;Main_B1.c: 668: break;
  8232  0910  2916               	goto	l4179
  8233  0911                     l4177:	
  8234  0911  0872               	movf	getCmd_Status@number,w
  8235                           
  8236                           ; Switch size 1, requested type "space"
  8237                           ; Number of cases is 1, Range of values is 1 to 1
  8238                           ; switch strategies available:
  8239                           ; Name         Instructions Cycles
  8240                           ; simple_byte            4     3 (average)
  8241                           ; direct_byte           11     9 (fixed)
  8242                           ; jumptable            263     9 (fixed)
  8243                           ;	Chosen strategy is simple_byte
  8244  0912  3A01               	xorlw	1	; case 1
  8245  0913  1903               	skipnz
  8246  0914  290C               	goto	l4173
  8247  0915  2916               	goto	l4179
  8248  0916                     l4179:	
  8249                           
  8250                           ;Main_B1.c: 670: return cmd;
  8251  0916  0873               	movf	getCmd_Status@cmd,w
  8252  0917  0008               	return
  8253  0918                     __end_of_getCmd_Status:	
  8254                           
  8255                           	psect	text52
  8256  0CD0                     __ptext52:	
  8257 ;; *************** function _setDimmerLights_Dimming *****************
  8258 ;; Defined at:
  8259 ;;		line 1144 in file "../src/Dimmer_B1.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  lights          1    wreg     unsigned char 
  8262 ;;  status          1   61[BANK0 ] unsigned char 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  lights          1   64[BANK0 ] unsigned char 
  8265 ;;  value           1   63[BANK0 ] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;		None               void
  8268 ;; Registers used:
  8269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8275 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;Total ram usage:        4 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    6
  8282 ;; This function calls:
  8283 ;;		_getDimmerIntr_DimmingValue
  8284 ;;		_getDimmerLights_ValueToPercent
  8285 ;;		_setBuz
  8286 ;;		_setDimmerIntr_Dimming_Sw
  8287 ;;		_setDimmerIntr_MaxmumValue
  8288 ;;		_setMemory_Modify
  8289 ;;		_setProductData
  8290 ;; This function is called by:
  8291 ;;		_setDimmerLights_Main
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           
  8296                           ;psect for function _setDimmerLights_Dimming
  8297  0CD0                     _setDimmerLights_Dimming:	
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _setDimmerLights_Dimming: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  8301                           ;setDimmerLights_Dimming@lights stored from wreg
  8302  0CD0  0020               	movlb	0	; select bank0
  8303  0CD1  00E0               	movwf	setDimmerLights_Dimming@lights
  8304                           
  8305                           ;Dimmer_B1.c: 1145: setDimmerIntr_Dimming_Sw(lights, status);
  8306  0CD2  085D               	movf	setDimmerLights_Dimming@status,w
  8307  0CD3  00DE               	movwf	??_setDimmerLights_Dimming
  8308  0CD4  085E               	movf	??_setDimmerLights_Dimming,w
  8309  0CD5  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
  8310  0CD6  0860               	movf	setDimmerLights_Dimming@lights,w
  8311  0CD7  3189  218C  318C   	fcall	_setDimmerIntr_Dimming_Sw
  8312                           
  8313                           ;Dimmer_B1.c: 1146: if (status == 1) {
  8314  0CDA  0020               	movlb	0	; select bank0
  8315  0CDB  085D               	movf	setDimmerLights_Dimming@status,w
  8316  0CDC  3A01               	xorlw	1
  8317  0CDD  1D03               	skipz
  8318  0CDE  2CE7               	goto	l5507
  8319                           
  8320                           ;Dimmer_B1.c: 1150: setBuz(1, 100);
  8321  0CDF  3064               	movlw	100
  8322  0CE0  00A4               	movwf	setBuz@time
  8323  0CE1  3000               	movlw	0
  8324  0CE2  00A5               	movwf	setBuz@time+1
  8325  0CE3  3001               	movlw	1
  8326  0CE4  318D  2590         	fcall	_setBuz
  8327                           
  8328                           ;Dimmer_B1.c: 1151: } else if (status == 0) {
  8329  0CE6  0008               	return
  8330  0CE7                     l5507:	
  8331  0CE7  0020               	movlb	0	; select bank0
  8332  0CE8  08DD               	movf	setDimmerLights_Dimming@status,f
  8333  0CE9  1D03               	skipz
  8334  0CEA  0008               	return
  8335                           
  8336                           ;Dimmer_B1.c: 1157: char value = getDimmerIntr_DimmingValue(lights);
  8337  0CEB  0860               	movf	setDimmerLights_Dimming@lights,w
  8338  0CEC  3188  20B5  318C   	fcall	_getDimmerIntr_DimmingValue
  8339  0CEF  0020               	movlb	0	; select bank0
  8340  0CF0  00DE               	movwf	??_setDimmerLights_Dimming
  8341  0CF1  085E               	movf	??_setDimmerLights_Dimming,w
  8342  0CF2  00DF               	movwf	setDimmerLights_Dimming@value
  8343                           
  8344                           ;Dimmer_B1.c: 1158: setDimmerIntr_MaxmumValue(lights, value);
  8345  0CF3  085F               	movf	setDimmerLights_Dimming@value,w
  8346  0CF4  00DE               	movwf	??_setDimmerLights_Dimming
  8347  0CF5  085E               	movf	??_setDimmerLights_Dimming,w
  8348  0CF6  00DA               	movwf	setDimmerIntr_MaxmumValue@value
  8349  0CF7  0860               	movf	setDimmerLights_Dimming@lights,w
  8350  0CF8  3188  2078  318C   	fcall	_setDimmerIntr_MaxmumValue
  8351                           
  8352                           ;Dimmer_B1.c: 1159: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
  8353  0CFB  0020               	movlb	0	; select bank0
  8354  0CFC  085F               	movf	setDimmerLights_Dimming@value,w
  8355  0CFD  3186  26E7  318C   	fcall	_getDimmerLights_ValueToPercent
  8356  0D00  0020               	movlb	0	; select bank0
  8357  0D01  00DE               	movwf	??_setDimmerLights_Dimming
  8358  0D02  085E               	movf	??_setDimmerLights_Dimming,w
  8359  0D03  00DA               	movwf	setProductData@value
  8360  0D04  0860               	movf	setDimmerLights_Dimming@lights,w
  8361  0D05  3E14               	addlw	20
  8362  0D06  3188  206C  318C   	fcall	_setProductData
  8363                           
  8364                           ;Dimmer_B1.c: 1166: setMemory_Modify(1);
  8365  0D09  3001               	movlw	1
  8366  0D0A  3189  2127         	fcall	_setMemory_Modify
  8367                           
  8368                           ;Dimmer_B1.c: 1170: ;;
  8369                           ;Dimmer_B1.c: 1171: ;;
  8370  0D0C  0008               	return
  8371  0D0D                     __end_of_setDimmerLights_Dimming:	
  8372                           
  8373                           	psect	text53
  8374  0878                     __ptext53:	
  8375 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  8376 ;; Defined at:
  8377 ;;		line 177 in file "../src/Dimmer_B1.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  lights          1    wreg     unsigned char 
  8380 ;;  value           1   58[BANK0 ] unsigned char 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  lights          1   60[BANK0 ] unsigned char 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;		None               void
  8385 ;; Registers used:
  8386 ;;		wreg
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8392 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;Total ram usage:        3 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    3
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_setDimmerLights_OnOff
  8403 ;;		_setDimmerLights_Dimming
  8404 ;;		_DimmerLights_AssignationDimming
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           
  8409                           ;psect for function _setDimmerIntr_MaxmumValue
  8410  0878                     _setDimmerIntr_MaxmumValue:	
  8411                           
  8412                           ;incstack = 0
  8413                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  8414                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  8415  0878  0020               	movlb	0	; select bank0
  8416  0879  00DC               	movwf	setDimmerIntr_MaxmumValue@lights
  8417                           
  8418                           ;Dimmer_B1.c: 179: if (lights == 1) {
  8419  087A  085C               	movf	setDimmerIntr_MaxmumValue@lights,w
  8420  087B  3A01               	xorlw	1
  8421  087C  1D03               	skipz
  8422  087D  0008               	return
  8423                           
  8424                           ;Dimmer_B1.c: 180: DimmerIntr1.MaxmumValue = value;
  8425  087E  085A               	movf	setDimmerIntr_MaxmumValue@value,w
  8426  087F  00DB               	movwf	??_setDimmerIntr_MaxmumValue
  8427  0880  085B               	movf	??_setDimmerIntr_MaxmumValue,w
  8428  0881  0021               	movlb	1	; select bank1
  8429  0882  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
  8430  0883  0008               	return
  8431  0884                     __end_of_setDimmerIntr_MaxmumValue:	
  8432                           
  8433                           	psect	text54
  8434  098C                     __ptext54:	
  8435 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  8436 ;; Defined at:
  8437 ;;		line 253 in file "../src/Dimmer_B1.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  lights          1    wreg     unsigned char 
  8440 ;;  command         1    2[COMMON] unsigned char 
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  lights          1    4[COMMON] unsigned char 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;		None               void
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8452 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;Total ram usage:        3 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    3
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_setDimmerLights_Dimming
  8463 ;;		_setDimmerLights_DimmingClose
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           
  8468                           ;psect for function _setDimmerIntr_Dimming_Sw
  8469  098C                     _setDimmerIntr_Dimming_Sw:	
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  8473                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  8474  098C  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
  8475                           
  8476                           ;Dimmer_B1.c: 255: if (lights == 1) {
  8477  098D  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
  8478  098E  3A01               	xorlw	1
  8479  098F  1D03               	skipz
  8480  0990  0008               	return
  8481                           
  8482                           ;Dimmer_B1.c: 256: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  8483  0991  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
  8484  0992  3A01               	xorlw	1
  8485  0993  3000               	movlw	0
  8486  0994  1903               	skipnz
  8487  0995  3001               	movlw	1
  8488  0996  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
  8489  0997  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
  8490  0998  0021               	movlb	1	; select bank1
  8491  0999  0820               	movf	_DimmerIntr1^(0+128),w
  8492  099A  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  8493  099B  39EF               	andlw	-17
  8494  099C  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  8495  099D  00A0               	movwf	_DimmerIntr1^(0+128)
  8496  099E  0008               	return
  8497  099F                     __end_of_setDimmerIntr_Dimming_Sw:	
  8498                           
  8499                           	psect	text55
  8500  08B5                     __ptext55:	
  8501 ;; *************** function _getDimmerIntr_DimmingValue *****************
  8502 ;; Defined at:
  8503 ;;		line 157 in file "../src/Dimmer_B1.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  lights          1    wreg     unsigned char 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  lights          1    3[COMMON] unsigned char 
  8508 ;;  value           1    4[COMMON] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      unsigned char 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;Total ram usage:        3 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    3
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_setDimmerLights_Dimming
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function _getDimmerIntr_DimmingValue
  8534  08B5                     _getDimmerIntr_DimmingValue:	
  8535                           
  8536                           ;incstack = 0
  8537                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  8538                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  8539  08B5  00F3               	movwf	getDimmerIntr_DimmingValue@lights
  8540                           
  8541                           ;Dimmer_B1.c: 158: char value = 0;
  8542  08B6  01F4               	clrf	getDimmerIntr_DimmingValue@value
  8543                           
  8544                           ;Dimmer_B1.c: 160: if (lights == 1) {
  8545  08B7  0873               	movf	getDimmerIntr_DimmingValue@lights,w
  8546  08B8  3A01               	xorlw	1
  8547  08B9  1D03               	skipz
  8548  08BA  28C0               	goto	l365
  8549                           
  8550                           ;Dimmer_B1.c: 161: value = DimmerIntr1.DimmingValue;
  8551  08BB  0021               	movlb	1	; select bank1
  8552  08BC  0825               	movf	(_DimmerIntr1^(0+128)+5),w
  8553  08BD  00F2               	movwf	??_getDimmerIntr_DimmingValue
  8554  08BE  0872               	movf	??_getDimmerIntr_DimmingValue,w
  8555  08BF  00F4               	movwf	getDimmerIntr_DimmingValue@value
  8556  08C0                     l365:	
  8557                           
  8558                           ;Dimmer_B1.c: 162: }
  8559                           ;Dimmer_B1.c: 174: return value;
  8560  08C0  0874               	movf	getDimmerIntr_DimmingValue@value,w
  8561  08C1  0008               	return
  8562  08C2                     __end_of_getDimmerIntr_DimmingValue:	
  8563                           
  8564                           	psect	text56
  8565  17B2                     __ptext56:	
  8566 ;; *************** function _getDimmerLights_Allow_Condition *****************
  8567 ;; Defined at:
  8568 ;;		line 1177 in file "../src/Dimmer_B1.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  lights          1    wreg     unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  lights          1    0[COMMON] unsigned char 
  8573 ;;  allow           1    2[COMMON] unsigned char 
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      unsigned char 
  8576 ;; Registers used:
  8577 ;;		wreg, status,2
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;Total ram usage:        1 bytes
  8588 ;; Hardware stack levels used:    1
  8589 ;; Hardware stack levels required when called:    3
  8590 ;; This function calls:
  8591 ;;		Nothing
  8592 ;; This function is called by:
  8593 ;;		_setDimmerLights_Main
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           
  8598                           ;psect for function _getDimmerLights_Allow_Condition
  8599  17B2                     _getDimmerLights_Allow_Condition:	
  8600                           
  8601                           ;Dimmer_B1.c: 1178: char allow = 0;
  8602                           
  8603                           ;incstack = 0
  8604                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  8605  17B2  01F2               	clrf	getDimmerLights_Allow_Condition@allow
  8606                           
  8607                           ;Dimmer_B1.c: 1212: return allow;
  8608  17B3  0872               	movf	getDimmerLights_Allow_Condition@allow,w
  8609  17B4  0008               	return
  8610  17B5                     __end_of_getDimmerLights_Allow_Condition:	
  8611                           
  8612                           	psect	text57
  8613  0DE3                     __ptext57:	
  8614 ;; *************** function _DimmerLights_DimmingFunction *****************
  8615 ;; Defined at:
  8616 ;;		line 2126 in file "../src/Dimmer_B1.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  lights          1    wreg     unsigned char 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  lights          1    6[BANK0 ] unsigned char 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;		None               void
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, pclath, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;Total ram usage:        2 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    6
  8637 ;; This function calls:
  8638 ;;		_DimmerIntr_ValueCalculate
  8639 ;; This function is called by:
  8640 ;;		_DimmerLights_Main
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function _DimmerLights_DimmingFunction
  8646  0DE3                     _DimmerLights_DimmingFunction:	
  8647                           
  8648                           ;incstack = 0
  8649                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
  8650                           ;DimmerLights_DimmingFunction@lights stored from wreg
  8651  0DE3  0020               	movlb	0	; select bank0
  8652  0DE4  00A6               	movwf	DimmerLights_DimmingFunction@lights
  8653                           
  8654                           ;Dimmer_B1.c: 2128: if (lights == 1) {
  8655  0DE5  0826               	movf	DimmerLights_DimmingFunction@lights,w
  8656  0DE6  3A01               	xorlw	1
  8657  0DE7  1D03               	skipz
  8658  0DE8  0008               	return
  8659                           
  8660                           ;Dimmer_B1.c: 2129: if (DimmerIntr1.Tune == 1) {
  8661  0DE9  0021               	movlb	1	; select bank1
  8662  0DEA  1CA0               	btfss	_DimmerIntr1^(0+128),1
  8663  0DEB  0008               	return
  8664                           
  8665                           ;Dimmer_B1.c: 2130: DimmerIntr1.Tune = 0;
  8666  0DEC  10A0               	bcf	_DimmerIntr1^(0+128),1
  8667                           
  8668                           ;Dimmer_B1.c: 2131: DimmerIntr1.TuneTime++;
  8669  0DED  3001               	movlw	1
  8670  0DEE  0020               	movlb	0	; select bank0
  8671  0DEF  00A5               	movwf	??_DimmerLights_DimmingFunction
  8672  0DF0  0825               	movf	??_DimmerLights_DimmingFunction,w
  8673  0DF1  0021               	movlb	1	; select bank1
  8674  0DF2  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
  8675                           
  8676                           ;Dimmer_B1.c: 2132: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8677  0DF3  0824               	movf	(_DimmerIntr1^(0+128)+4),w
  8678  0DF4  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
  8679  0DF5  1C03               	skipc
  8680  0DF6  0008               	return
  8681                           
  8682                           ;Dimmer_B1.c: 2133: DimmerIntr1.TuneTime = 0;
  8683  0DF7  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
  8684                           
  8685                           ;Dimmer_B1.c: 2134: DimmerIntr1.TuneGO = 1;
  8686  0DF8  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
  8687                           
  8688                           ;Dimmer_B1.c: 2135: if (DimmerIntr1.Dimming_Sw == 1) {
  8689  0DF9  1E20               	btfss	_DimmerIntr1^(0+128),4
  8690  0DFA  2E19               	goto	l561
  8691                           
  8692                           ;Dimmer_B1.c: 2137: if (DimmerIntr1.Dimming_Status == 0) {
  8693  0DFB  1AA0               	btfsc	_DimmerIntr1^(0+128),5
  8694  0DFC  2E0D               	goto	l5689
  8695                           
  8696                           ;Dimmer_B1.c: 2138: if (DimmerIntr1.DimmingValue < ((char)(87*0.55))) {
  8697  0DFD  302F               	movlw	47
  8698  0DFE  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
  8699  0DFF  1803               	skipnc
  8700  0E00  2E0B               	goto	l563
  8701                           
  8702                           ;Dimmer_B1.c: 2139: DimmerIntr1.DimmingValue++;
  8703  0E01  3001               	movlw	1
  8704  0E02  0020               	movlb	0	; select bank0
  8705  0E03  00A5               	movwf	??_DimmerLights_DimmingFunction
  8706  0E04  0825               	movf	??_DimmerLights_DimmingFunction,w
  8707  0E05  0021               	movlb	1	; select bank1
  8708  0E06  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
  8709                           
  8710                           ;Dimmer_B1.c: 2140: DimmerIntr_ValueCalculate(1);
  8711  0E07  3001               	movlw	1
  8712  0E08  318B  2301         	fcall	_DimmerIntr_ValueCalculate
  8713                           
  8714                           ;Dimmer_B1.c: 2141: } else {
  8715  0E0A  0008               	return
  8716  0E0B                     l563:	
  8717                           
  8718                           ;Dimmer_B1.c: 2142: DimmerIntr1.Dimming_Status = 1;
  8719  0E0B  16A0               	bsf	_DimmerIntr1^(0+128),5
  8720                           
  8721                           ;Dimmer_B1.c: 2143: }
  8722                           ;Dimmer_B1.c: 2144: } else {
  8723  0E0C  0008               	return
  8724  0E0D                     l5689:	
  8725                           
  8726                           ;Dimmer_B1.c: 2145: if (DimmerIntr1.DimmingValue > ((char)(10*0.55))) {
  8727  0E0D  3006               	movlw	6
  8728  0E0E  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
  8729  0E0F  1C03               	skipc
  8730  0E10  2E17               	goto	l566
  8731                           
  8732                           ;Dimmer_B1.c: 2146: DimmerIntr1.DimmingValue--;
  8733  0E11  3001               	movlw	1
  8734  0E12  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
  8735                           
  8736                           ;Dimmer_B1.c: 2147: DimmerIntr_ValueCalculate(1);
  8737  0E13  3001               	movlw	1
  8738  0E14  318B  2301         	fcall	_DimmerIntr_ValueCalculate
  8739                           
  8740                           ;Dimmer_B1.c: 2148: } else {
  8741  0E16  0008               	return
  8742  0E17                     l566:	
  8743                           
  8744                           ;Dimmer_B1.c: 2149: DimmerIntr1.Dimming_Status = 0;
  8745  0E17  12A0               	bcf	_DimmerIntr1^(0+128),5
  8746                           
  8747                           ;Dimmer_B1.c: 2150: }
  8748                           ;Dimmer_B1.c: 2151: }
  8749                           ;Dimmer_B1.c: 2170: } else if (DimmerIntr1.Dimming_RF == 1) {
  8750  0E18  0008               	return
  8751  0E19                     l561:	
  8752  0E19  1F20               	btfss	_DimmerIntr1^(0+128),6
  8753  0E1A  0008               	return
  8754                           
  8755                           ;Dimmer_B1.c: 2172: if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8756  0E1B  0826               	movf	(_DimmerIntr1^(0+128)+6),w
  8757  0E1C  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
  8758  0E1D  1803               	skipnc
  8759  0E1E  2E29               	goto	l5701
  8760                           
  8761                           ;Dimmer_B1.c: 2173: DimmerIntr1.DimmingValue++;
  8762  0E1F  3001               	movlw	1
  8763  0E20  0020               	movlb	0	; select bank0
  8764  0E21  00A5               	movwf	??_DimmerLights_DimmingFunction
  8765  0E22  0825               	movf	??_DimmerLights_DimmingFunction,w
  8766  0E23  0021               	movlb	1	; select bank1
  8767  0E24  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
  8768                           
  8769                           ;Dimmer_B1.c: 2174: DimmerIntr_ValueCalculate(1);
  8770  0E25  3001               	movlw	1
  8771  0E26  318B  2301         	fcall	_DimmerIntr_ValueCalculate
  8772                           
  8773                           ;Dimmer_B1.c: 2175: } else if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8774  0E28  0008               	return
  8775  0E29                     l5701:	
  8776  0E29  0021               	movlb	1	; select bank1
  8777  0E2A  0825               	movf	(_DimmerIntr1^(0+128)+5),w
  8778  0E2B  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
  8779  0E2C  1803               	skipnc
  8780  0E2D  2E34               	goto	l572
  8781                           
  8782                           ;Dimmer_B1.c: 2176: DimmerIntr1.DimmingValue--;
  8783  0E2E  3001               	movlw	1
  8784  0E2F  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
  8785                           
  8786                           ;Dimmer_B1.c: 2177: DimmerIntr_ValueCalculate(1);
  8787  0E30  3001               	movlw	1
  8788  0E31  318B  2301         	fcall	_DimmerIntr_ValueCalculate
  8789                           
  8790                           ;Dimmer_B1.c: 2178: } else {
  8791  0E33  0008               	return
  8792  0E34                     l572:	
  8793                           
  8794                           ;Dimmer_B1.c: 2179: DimmerIntr1.Dimming_RF = 0;
  8795  0E34  1320               	bcf	_DimmerIntr1^(0+128),6
  8796  0E35  0008               	return
  8797  0E36                     __end_of_DimmerLights_DimmingFunction:	
  8798                           
  8799                           	psect	text58
  8800  0B01                     __ptext58:	
  8801 ;; *************** function _DimmerIntr_ValueCalculate *****************
  8802 ;; Defined at:
  8803 ;;		line 2057 in file "../src/Dimmer_B1.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  lights          1    wreg     unsigned char 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;  lights          1    4[BANK0 ] unsigned char 
  8808 ;; Return value:  Size  Location     Type
  8809 ;;		None               void
  8810 ;; Registers used:
  8811 ;;		wreg, status,2, status,0, pclath, cstack
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;Total ram usage:        3 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    5
  8824 ;; This function calls:
  8825 ;;		_Division
  8826 ;; This function is called by:
  8827 ;;		_setDimmerLights_OnOff
  8828 ;;		_DimmerLights_DimmingFunction
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _DimmerIntr_ValueCalculate
  8834  0B01                     _DimmerIntr_ValueCalculate:	
  8835                           
  8836                           ;incstack = 0
  8837                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg+status,2+status,0+pclath+cstack]
  8838                           ;DimmerIntr_ValueCalculate@lights stored from wreg
  8839  0B01  0020               	movlb	0	; select bank0
  8840  0B02  00A4               	movwf	DimmerIntr_ValueCalculate@lights
  8841                           
  8842                           ;Dimmer_B1.c: 2059: if (lights == 1) {
  8843  0B03  0824               	movf	DimmerIntr_ValueCalculate@lights,w
  8844  0B04  3A01               	xorlw	1
  8845  0B05  1D03               	skipz
  8846  0B06  0008               	return
  8847                           
  8848                           ;Dimmer_B1.c: 2070: DimmerIntr1.TuneValue2 = Division(DimmerIntr1.DimmingValue, 2);
  8849  0B07  3002               	movlw	2
  8850  0B08  00A2               	movwf	??_DimmerIntr_ValueCalculate
  8851  0B09  0822               	movf	??_DimmerIntr_ValueCalculate,w
  8852  0B0A  00F7               	movwf	Division@num
  8853  0B0B  0021               	movlb	1	; select bank1
  8854  0B0C  0825               	movf	(_DimmerIntr1^(0+128)+5),w
  8855  0B0D  3188  20FA         	fcall	_Division
  8856  0B0F  0020               	movlb	0	; select bank0
  8857  0B10  00A3               	movwf	??_DimmerIntr_ValueCalculate+1
  8858  0B11  0823               	movf	??_DimmerIntr_ValueCalculate+1,w
  8859  0B12  0021               	movlb	1	; select bank1
  8860  0B13  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
  8861                           
  8862                           ;Dimmer_B1.c: 2071: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (55 - DimmerIntr1.
      +                          DimmingValue);
  8863  0B14  0325               	decf	(_DimmerIntr1^(0+128)+5),w
  8864  0B15  3AFF               	xorlw	255
  8865  0B16  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
  8866  0B17  3E37               	addlw	55
  8867  0B18  0020               	movlb	0	; select bank0
  8868  0B19  00A2               	movwf	??_DimmerIntr_ValueCalculate
  8869  0B1A  0822               	movf	??_DimmerIntr_ValueCalculate,w
  8870  0B1B  0021               	movlb	1	; select bank1
  8871  0B1C  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
  8872                           
  8873                           ;Dimmer_B1.c: 2072: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneVa
      +                          lue2;
  8874  0B1D  0829               	movf	(_DimmerIntr1^(0+128)+9),w
  8875  0B1E  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
  8876  0B1F  0020               	movlb	0	; select bank0
  8877  0B20  00A2               	movwf	??_DimmerIntr_ValueCalculate
  8878  0B21  0822               	movf	??_DimmerIntr_ValueCalculate,w
  8879  0B22  0021               	movlb	1	; select bank1
  8880  0B23  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
  8881                           
  8882                           ;Dimmer_B1.c: 2073: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 5;
  8883  0B24  082A               	movf	(_DimmerIntr1^(0+128)+10),w
  8884  0B25  3E05               	addlw	5
  8885  0B26  0020               	movlb	0	; select bank0
  8886  0B27  00A2               	movwf	??_DimmerIntr_ValueCalculate
  8887  0B28  0822               	movf	??_DimmerIntr_ValueCalculate,w
  8888  0B29  0021               	movlb	1	; select bank1
  8889  0B2A  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
  8890                           
  8891                           ;Dimmer_B1.c: 2075: DimmerIntr1.Calculate = 1;
  8892  0B2B  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
  8893  0B2C  0008               	return
  8894  0B2D                     __end_of_DimmerIntr_ValueCalculate:	
  8895                           
  8896                           	psect	text59
  8897  17EB                     __ptext59:	
  8898 ;; *************** function _DimmerLights_Initialization *****************
  8899 ;; Defined at:
  8900 ;;		line 705 in file "../src/Dimmer_B1.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;		None
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;		None               void
  8907 ;; Registers used:
  8908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;Total ram usage:        0 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    7
  8921 ;; This function calls:
  8922 ;;		_DimmerIntr_Initialization
  8923 ;;		_setDimmerLights_Initialization
  8924 ;; This function is called by:
  8925 ;;		_main
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           
  8930                           ;psect for function _DimmerLights_Initialization
  8931  17EB                     _DimmerLights_Initialization:	
  8932                           
  8933                           ;Dimmer_B1.c: 707: setDimmerLights_Initialization(1);
  8934                           
  8935                           ;incstack = 0
  8936                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8937  17EB  3001               	movlw	1
  8938  17EC  3197  27AE  3197   	fcall	_setDimmerLights_Initialization
  8939                           
  8940                           ;Dimmer_B1.c: 717: DimmerIntr_Initialization();
  8941  17EF  318E  268A         	fcall	_DimmerIntr_Initialization
  8942  17F1  0008               	return
  8943  17F2                     __end_of_DimmerLights_Initialization:	
  8944                           
  8945                           	psect	text60
  8946  17AE                     __ptext60:	
  8947 ;; *************** function _setDimmerLights_Initialization *****************
  8948 ;; Defined at:
  8949 ;;		line 721 in file "../src/Dimmer_B1.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  lights          1    wreg     unsigned char 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  lights          1    0[COMMON] unsigned char 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;		None               void
  8956 ;; Registers used:
  8957 ;;		wreg
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;Total ram usage:        0 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    3
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_DimmerLights_Initialization
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           
  8978                           ;psect for function _setDimmerLights_Initialization
  8979  17AE                     _setDimmerLights_Initialization:	
  8980                           
  8981                           ;incstack = 0
  8982                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  8983  17AE  0008               	return
  8984  17AF                     __end_of_setDimmerLights_Initialization:	
  8985                           
  8986                           	psect	text61
  8987  0E8A                     __ptext61:	
  8988 ;; *************** function _DimmerIntr_Initialization *****************
  8989 ;; Defined at:
  8990 ;;		line 7 in file "../src/Dimmer_B1.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;		None
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;		None
  8995 ;; Return value:  Size  Location     Type
  8996 ;;		None               void
  8997 ;; Registers used:
  8998 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;Total ram usage:        2 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    6
  9011 ;; This function calls:
  9012 ;;		_Division
  9013 ;;		_getDimmerLights_PercentToValue
  9014 ;;		_getDimmerLights_ValueToPercent
  9015 ;;		_setMemory_Modify
  9016 ;; This function is called by:
  9017 ;;		_DimmerLights_Initialization
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           
  9022                           ;psect for function _DimmerIntr_Initialization
  9023  0E8A                     _DimmerIntr_Initialization:	
  9024                           
  9025                           ;Dimmer_B1.c: 11: DimmerIntr1.TuneTimeValue = 3;
  9026                           
  9027                           ;incstack = 0
  9028                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  9029  0E8A  3003               	movlw	3
  9030  0E8B  0020               	movlb	0	; select bank0
  9031  0E8C  00DA               	movwf	??_DimmerIntr_Initialization
  9032  0E8D  085A               	movf	??_DimmerIntr_Initialization,w
  9033  0E8E  0021               	movlb	1	; select bank1
  9034  0E8F  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
  9035                           
  9036                           ;Dimmer_B1.c: 12: DimmerIntr1.MaxmumValue = ((char)(87*0.55));
  9037  0E90  302F               	movlw	47
  9038  0E91  0020               	movlb	0	; select bank0
  9039  0E92  00DA               	movwf	??_DimmerIntr_Initialization
  9040  0E93  085A               	movf	??_DimmerIntr_Initialization,w
  9041  0E94  0021               	movlb	1	; select bank1
  9042  0E95  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
  9043                           
  9044                           ;Dimmer_B1.c: 13: DimmerIntr1.MinimumValue = ((char)(10*0.55));
  9045  0E96  3005               	movlw	5
  9046  0E97  0020               	movlb	0	; select bank0
  9047  0E98  00DA               	movwf	??_DimmerIntr_Initialization
  9048  0E99  085A               	movf	??_DimmerIntr_Initialization,w
  9049  0E9A  0021               	movlb	1	; select bank1
  9050  0E9B  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
  9051                           
  9052                           ;Dimmer_B1.c: 14: DimmerIntr1.Tune = 0;
  9053  0E9C  10A0               	bcf	_DimmerIntr1^(0+128),1
  9054                           
  9055                           ;Dimmer_B1.c: 20: product->Data[21] = getDimmerLights_ValueToPercent(((char)(87*0.55)));
  9056  0E9D  302F               	movlw	47
  9057  0E9E  3186  26E7  318E   	fcall	_getDimmerLights_ValueToPercent
  9058  0EA1  0020               	movlb	0	; select bank0
  9059  0EA2  00DA               	movwf	??_DimmerIntr_Initialization
  9060  0EA3  086D               	movf	_product,w
  9061  0EA4  3E15               	addlw	21
  9062  0EA5  0086               	movwf	6
  9063  0EA6  3001               	movlw	1	; select bank2/3
  9064  0EA7  0087               	movwf	7
  9065  0EA8  085A               	movf	??_DimmerIntr_Initialization,w
  9066  0EA9  0081               	movwf	1
  9067                           
  9068                           ;Dimmer_B1.c: 23: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
  9069  0EAA  086D               	movf	_product,w
  9070  0EAB  3E15               	addlw	21
  9071  0EAC  0086               	movwf	6
  9072  0EAD  3001               	movlw	1	; select bank2/3
  9073  0EAE  0087               	movwf	7
  9074  0EAF  0801               	movf	1,w
  9075  0EB0  3187  274C  318E   	fcall	_getDimmerLights_PercentToValue
  9076  0EB3  0020               	movlb	0	; select bank0
  9077  0EB4  00DA               	movwf	??_DimmerIntr_Initialization
  9078  0EB5  085A               	movf	??_DimmerIntr_Initialization,w
  9079  0EB6  0021               	movlb	1	; select bank1
  9080  0EB7  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
  9081                           
  9082                           ;Dimmer_B1.c: 40: DimmerIntr1.TuneValue2 = Division(((char)(87*0.55)), 2);
  9083  0EB8  3002               	movlw	2
  9084  0EB9  0020               	movlb	0	; select bank0
  9085  0EBA  00DA               	movwf	??_DimmerIntr_Initialization
  9086  0EBB  085A               	movf	??_DimmerIntr_Initialization,w
  9087  0EBC  00F7               	movwf	Division@num
  9088  0EBD  302F               	movlw	47
  9089  0EBE  3188  20FA  318E   	fcall	_Division
  9090  0EC1  0020               	movlb	0	; select bank0
  9091  0EC2  00DB               	movwf	??_DimmerIntr_Initialization+1
  9092  0EC3  085B               	movf	??_DimmerIntr_Initialization+1,w
  9093  0EC4  0021               	movlb	1	; select bank1
  9094  0EC5  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
  9095                           
  9096                           ;Dimmer_B1.c: 41: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (55 - ((char)(87*0.5
      +                          5)));
  9097  0EC6  0828               	movf	(_DimmerIntr1^(0+128)+8),w
  9098  0EC7  3E08               	addlw	8
  9099  0EC8  0020               	movlb	0	; select bank0
  9100  0EC9  00DA               	movwf	??_DimmerIntr_Initialization
  9101  0ECA  085A               	movf	??_DimmerIntr_Initialization,w
  9102  0ECB  0021               	movlb	1	; select bank1
  9103  0ECC  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
  9104                           
  9105                           ;Dimmer_B1.c: 42: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneValu
      +                          e2;
  9106  0ECD  0829               	movf	(_DimmerIntr1^(0+128)+9),w
  9107  0ECE  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
  9108  0ECF  0020               	movlb	0	; select bank0
  9109  0ED0  00DA               	movwf	??_DimmerIntr_Initialization
  9110  0ED1  085A               	movf	??_DimmerIntr_Initialization,w
  9111  0ED2  0021               	movlb	1	; select bank1
  9112  0ED3  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
  9113                           
  9114                           ;Dimmer_B1.c: 43: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 1;
  9115  0ED4  082A               	movf	(_DimmerIntr1^(0+128)+10),w
  9116  0ED5  3E01               	addlw	1
  9117  0ED6  0020               	movlb	0	; select bank0
  9118  0ED7  00DA               	movwf	??_DimmerIntr_Initialization
  9119  0ED8  085A               	movf	??_DimmerIntr_Initialization,w
  9120  0ED9  0021               	movlb	1	; select bank1
  9121  0EDA  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
  9122                           
  9123                           ;Dimmer_B1.c: 44: DimmerIntr1.Calculate = 1;
  9124  0EDB  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
  9125                           
  9126                           ;Dimmer_B1.c: 113: if (myMain.InitDimmer == 1) {
  9127  0EDC  1E3A               	btfss	(_myMain^(0+128)+10),4
  9128  0EDD  0008               	return
  9129                           
  9130                           ;Dimmer_B1.c: 114: myMain.InitDimmer = 0;
  9131  0EDE  123A               	bcf	(_myMain^(0+128)+10),4
  9132                           
  9133                           ;Dimmer_B1.c: 115: myMain.SaveDimmer = 1;
  9134  0EDF  16BA               	bsf	(_myMain^(0+128)+10),5
  9135                           
  9136                           ;Dimmer_B1.c: 116: setMemory_Modify(1);
  9137  0EE0  3001               	movlw	1
  9138  0EE1  3189  2127         	fcall	_setMemory_Modify
  9139  0EE3  0008               	return
  9140  0EE4                     __end_of_DimmerIntr_Initialization:	
  9141                           
  9142                           	psect	text62
  9143  0927                     __ptext62:	
  9144 ;; *************** function _setMemory_Modify *****************
  9145 ;; Defined at:
  9146 ;;		line 1088 in file "../src/MCU_B1.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  command         1    wreg     unsigned char 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  command         1    3[COMMON] unsigned char 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;		None               void
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9164 ;;Total ram usage:        2 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    3
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_DimmerIntr_Initialization
  9171 ;;		_setDimmerLights_Dimming
  9172 ;;		_DimmerLights_AssignationDimming
  9173 ;; This function uses a non-reentrant model
  9174 ;;
  9175                           
  9176                           
  9177                           ;psect for function _setMemory_Modify
  9178  0927                     _setMemory_Modify:	
  9179                           
  9180                           ;incstack = 0
  9181                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
  9182                           ;setMemory_Modify@command stored from wreg
  9183  0927  00F3               	movwf	setMemory_Modify@command
  9184                           
  9185                           ;MCU_B1.c: 1089: Memory.Modify = command == 1 ? 1 : 0;
  9186  0928  0873               	movf	setMemory_Modify@command,w
  9187  0929  3A01               	xorlw	1
  9188  092A  3000               	movlw	0
  9189  092B  1903               	skipnz
  9190  092C  3001               	movlw	1
  9191  092D  00F2               	movwf	??_setMemory_Modify
  9192  092E  0022               	movlb	2	; select bank2
  9193  092F  0854               	movf	(_Memory^(0+256)+36),w
  9194  0930  0672               	xorwf	??_setMemory_Modify,w
  9195  0931  39FE               	andlw	-2
  9196  0932  0672               	xorwf	??_setMemory_Modify,w
  9197  0933  00D4               	movwf	(_Memory^(0+256)+36)
  9198                           
  9199                           ;MCU_B1.c: 1090: Memory.Time = 0;
  9200  0934  01D2               	clrf	(_Memory^(0+256)+34)
  9201  0935  01D3               	clrf	((_Memory+1)^(0+256)+34)
  9202  0936  0008               	return
  9203  0937                     __end_of_setMemory_Modify:	
  9204                           
  9205                           	psect	text63
  9206  06E7                     __ptext63:	
  9207 ;; *************** function _getDimmerLights_ValueToPercent *****************
  9208 ;; Defined at:
  9209 ;;		line 1317 in file "../src/Dimmer_B1.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  value           1    wreg     unsigned char 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  value           1   54[BANK0 ] unsigned char 
  9214 ;;  i               3   55[BANK0 ] float 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      unsigned char 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, pclath, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;Total ram usage:        6 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    5
  9231 ;; This function calls:
  9232 ;;		___awtoft
  9233 ;;		___ftadd
  9234 ;;		___ftdiv
  9235 ;;		___ftneg
  9236 ;;		___fttol
  9237 ;; This function is called by:
  9238 ;;		_DimmerIntr_Initialization
  9239 ;;		_setDimmerLights_Dimming
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           
  9244                           ;psect for function _getDimmerLights_ValueToPercent
  9245  06E7                     _getDimmerLights_ValueToPercent:	
  9246                           
  9247                           ;incstack = 0
  9248                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
  9249                           ;getDimmerLights_ValueToPercent@value stored from wreg
  9250  06E7  0020               	movlb	0	; select bank0
  9251  06E8  00D6               	movwf	getDimmerLights_ValueToPercent@value
  9252                           
  9253                           ;Dimmer_B1.c: 1325: float i = ((char)(87*0.55)) - ((char)(10*0.55));
  9254  06E9  3000               	movlw	0
  9255  06EA  00D7               	movwf	getDimmerLights_ValueToPercent@i
  9256  06EB  3028               	movlw	40
  9257  06EC  00D8               	movwf	getDimmerLights_ValueToPercent@i+1
  9258  06ED  3042               	movlw	66
  9259  06EE  00D9               	movwf	getDimmerLights_ValueToPercent@i+2
  9260                           
  9261                           ;Dimmer_B1.c: 1326: i /= 100;
  9262  06EF  3000               	movlw	0
  9263  06F0  00A6               	movwf	___ftdiv@f2
  9264  06F1  30C8               	movlw	200
  9265  06F2  00A7               	movwf	___ftdiv@f2+1
  9266  06F3  3042               	movlw	66
  9267  06F4  00A8               	movwf	___ftdiv@f2+2
  9268  06F5  0857               	movf	getDimmerLights_ValueToPercent@i,w
  9269  06F6  00A9               	movwf	___ftdiv@f1
  9270  06F7  0858               	movf	getDimmerLights_ValueToPercent@i+1,w
  9271  06F8  00AA               	movwf	___ftdiv@f1+1
  9272  06F9  0859               	movf	getDimmerLights_ValueToPercent@i+2,w
  9273  06FA  00AB               	movwf	___ftdiv@f1+2
  9274  06FB  3184  2413  3186   	fcall	___ftdiv
  9275  06FE  0020               	movlb	0	; select bank0
  9276  06FF  0826               	movf	?___ftdiv,w
  9277  0700  00D7               	movwf	getDimmerLights_ValueToPercent@i
  9278  0701  0827               	movf	?___ftdiv+1,w
  9279  0702  00D8               	movwf	getDimmerLights_ValueToPercent@i+1
  9280  0703  0828               	movf	?___ftdiv+2,w
  9281  0704  00D9               	movwf	getDimmerLights_ValueToPercent@i+2
  9282                           
  9283                           ;Dimmer_B1.c: 1328: return (char) (100 - ((((char)(87*0.55)) - value) / i));
  9284  0705  0856               	movf	getDimmerLights_ValueToPercent@value,w
  9285  0706  00D4               	movwf	??_getDimmerLights_ValueToPercent
  9286  0707  01D5               	clrf	??_getDimmerLights_ValueToPercent+1
  9287  0708  09D4               	comf	??_getDimmerLights_ValueToPercent,f
  9288  0709  09D5               	comf	??_getDimmerLights_ValueToPercent+1,f
  9289  070A  0AD4               	incf	??_getDimmerLights_ValueToPercent,f
  9290  070B  1903               	skipnz
  9291  070C  0AD5               	incf	??_getDimmerLights_ValueToPercent+1,f
  9292  070D  0854               	movf	??_getDimmerLights_ValueToPercent,w
  9293  070E  3E2F               	addlw	47
  9294  070F  00A0               	movwf	___awtoft@c
  9295  0710  3000               	movlw	0
  9296  0711  3D55               	addwfc	??_getDimmerLights_ValueToPercent+1,w
  9297  0712  00A1               	movwf	___awtoft@c+1
  9298  0713  318A  22B5  3186   	fcall	___awtoft
  9299  0716  0020               	movlb	0	; select bank0
  9300  0717  0820               	movf	?___awtoft,w
  9301  0718  00A9               	movwf	___ftdiv@f1
  9302  0719  0821               	movf	?___awtoft+1,w
  9303  071A  00AA               	movwf	___ftdiv@f1+1
  9304  071B  0822               	movf	?___awtoft+2,w
  9305  071C  00AB               	movwf	___ftdiv@f1+2
  9306  071D  0857               	movf	getDimmerLights_ValueToPercent@i,w
  9307  071E  00A6               	movwf	___ftdiv@f2
  9308  071F  0858               	movf	getDimmerLights_ValueToPercent@i+1,w
  9309  0720  00A7               	movwf	___ftdiv@f2+1
  9310  0721  0859               	movf	getDimmerLights_ValueToPercent@i+2,w
  9311  0722  00A8               	movwf	___ftdiv@f2+2
  9312  0723  3184  2413  3186   	fcall	___ftdiv
  9313  0726  0020               	movlb	0	; select bank0
  9314  0727  0826               	movf	?___ftdiv,w
  9315  0728  00B6               	movwf	___ftneg@f1
  9316  0729  0827               	movf	?___ftdiv+1,w
  9317  072A  00B7               	movwf	___ftneg@f1+1
  9318  072B  0828               	movf	?___ftdiv+2,w
  9319  072C  00B8               	movwf	___ftneg@f1+2
  9320  072D  3188  2019  3186   	fcall	___ftneg
  9321  0730  0020               	movlb	0	; select bank0
  9322  0731  0836               	movf	?___ftneg,w
  9323  0732  00BC               	movwf	___ftadd@f2
  9324  0733  0837               	movf	?___ftneg+1,w
  9325  0734  00BD               	movwf	___ftadd@f2+1
  9326  0735  0838               	movf	?___ftneg+2,w
  9327  0736  00BE               	movwf	___ftadd@f2+2
  9328  0737  3000               	movlw	0
  9329  0738  00B9               	movwf	___ftadd@f1
  9330  0739  30C8               	movlw	200
  9331  073A  00BA               	movwf	___ftadd@f1+1
  9332  073B  3042               	movlw	66
  9333  073C  00BB               	movwf	___ftadd@f1+2
  9334  073D  3181  219E  3186   	fcall	___ftadd
  9335  0740  0020               	movlb	0	; select bank0
  9336  0741  0839               	movf	?___ftadd,w
  9337  0742  00C6               	movwf	___fttol@f1
  9338  0743  083A               	movf	?___ftadd+1,w
  9339  0744  00C7               	movwf	___fttol@f1+1
  9340  0745  083B               	movf	?___ftadd+2,w
  9341  0746  00C8               	movwf	___fttol@f1+2
  9342  0747  3185  25E1         	fcall	___fttol
  9343  0749  0020               	movlb	0	; select bank0
  9344  074A  0846               	movf	?___fttol,w
  9345  074B  0008               	return
  9346  074C                     __end_of_getDimmerLights_ValueToPercent:	
  9347                           
  9348                           	psect	text64
  9349  074C                     __ptext64:	
  9350 ;; *************** function _getDimmerLights_PercentToValue *****************
  9351 ;; Defined at:
  9352 ;;		line 1301 in file "../src/Dimmer_B1.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  value           1    wreg     unsigned char 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  value           1   54[BANK0 ] unsigned char 
  9357 ;;  i               3   55[BANK0 ] float 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      unsigned char 
  9360 ;; Registers used:
  9361 ;;		wreg, status,2, status,0, pclath, cstack
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;Total ram usage:        6 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    5
  9374 ;; This function calls:
  9375 ;;		___awtoft
  9376 ;;		___ftadd
  9377 ;;		___ftdiv
  9378 ;;		___ftmul
  9379 ;;		___ftneg
  9380 ;;		___fttol
  9381 ;; This function is called by:
  9382 ;;		_DimmerIntr_Initialization
  9383 ;;		_setDimmerLights_OnOff
  9384 ;;		_DimmerLights_AssignationDimming
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function _getDimmerLights_PercentToValue
  9390  074C                     _getDimmerLights_PercentToValue:	
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
  9394                           ;getDimmerLights_PercentToValue@value stored from wreg
  9395  074C  0020               	movlb	0	; select bank0
  9396  074D  00D6               	movwf	getDimmerLights_PercentToValue@value
  9397                           
  9398                           ;Dimmer_B1.c: 1309: float i = ((char)(87*0.55)) - ((char)(10*0.55));
  9399  074E  3000               	movlw	0
  9400  074F  00D7               	movwf	getDimmerLights_PercentToValue@i
  9401  0750  3028               	movlw	40
  9402  0751  00D8               	movwf	getDimmerLights_PercentToValue@i+1
  9403  0752  3042               	movlw	66
  9404  0753  00D9               	movwf	getDimmerLights_PercentToValue@i+2
  9405                           
  9406                           ;Dimmer_B1.c: 1310: i /= 100;
  9407  0754  3000               	movlw	0
  9408  0755  00A6               	movwf	___ftdiv@f2
  9409  0756  30C8               	movlw	200
  9410  0757  00A7               	movwf	___ftdiv@f2+1
  9411  0758  3042               	movlw	66
  9412  0759  00A8               	movwf	___ftdiv@f2+2
  9413  075A  0857               	movf	getDimmerLights_PercentToValue@i,w
  9414  075B  00A9               	movwf	___ftdiv@f1
  9415  075C  0858               	movf	getDimmerLights_PercentToValue@i+1,w
  9416  075D  00AA               	movwf	___ftdiv@f1+1
  9417  075E  0859               	movf	getDimmerLights_PercentToValue@i+2,w
  9418  075F  00AB               	movwf	___ftdiv@f1+2
  9419  0760  3184  2413  3187   	fcall	___ftdiv
  9420  0763  0020               	movlb	0	; select bank0
  9421  0764  0826               	movf	?___ftdiv,w
  9422  0765  00D7               	movwf	getDimmerLights_PercentToValue@i
  9423  0766  0827               	movf	?___ftdiv+1,w
  9424  0767  00D8               	movwf	getDimmerLights_PercentToValue@i+1
  9425  0768  0828               	movf	?___ftdiv+2,w
  9426  0769  00D9               	movwf	getDimmerLights_PercentToValue@i+2
  9427                           
  9428                           ;Dimmer_B1.c: 1312: return (char) (((char)(87*0.55)) - ((100 - value) * i));
  9429  076A  0856               	movf	getDimmerLights_PercentToValue@value,w
  9430  076B  00D4               	movwf	??_getDimmerLights_PercentToValue
  9431  076C  01D5               	clrf	??_getDimmerLights_PercentToValue+1
  9432  076D  09D4               	comf	??_getDimmerLights_PercentToValue,f
  9433  076E  09D5               	comf	??_getDimmerLights_PercentToValue+1,f
  9434  076F  0AD4               	incf	??_getDimmerLights_PercentToValue,f
  9435  0770  1903               	skipnz
  9436  0771  0AD5               	incf	??_getDimmerLights_PercentToValue+1,f
  9437  0772  0854               	movf	??_getDimmerLights_PercentToValue,w
  9438  0773  3E64               	addlw	100
  9439  0774  00A0               	movwf	___awtoft@c
  9440  0775  3000               	movlw	0
  9441  0776  3D55               	addwfc	??_getDimmerLights_PercentToValue+1,w
  9442  0777  00A1               	movwf	___awtoft@c+1
  9443  0778  318A  22B5  3187   	fcall	___awtoft
  9444  077B  0020               	movlb	0	; select bank0
  9445  077C  0820               	movf	?___awtoft,w
  9446  077D  00A9               	movwf	___ftmul@f2
  9447  077E  0821               	movf	?___awtoft+1,w
  9448  077F  00AA               	movwf	___ftmul@f2+1
  9449  0780  0822               	movf	?___awtoft+2,w
  9450  0781  00AB               	movwf	___ftmul@f2+2
  9451  0782  0857               	movf	getDimmerLights_PercentToValue@i,w
  9452  0783  00A6               	movwf	___ftmul@f1
  9453  0784  0858               	movf	getDimmerLights_PercentToValue@i+1,w
  9454  0785  00A7               	movwf	___ftmul@f1+1
  9455  0786  0859               	movf	getDimmerLights_PercentToValue@i+2,w
  9456  0787  00A8               	movwf	___ftmul@f1+2
  9457  0788  3183  235F  3187   	fcall	___ftmul
  9458  078B  0020               	movlb	0	; select bank0
  9459  078C  0826               	movf	?___ftmul,w
  9460  078D  00B6               	movwf	___ftneg@f1
  9461  078E  0827               	movf	?___ftmul+1,w
  9462  078F  00B7               	movwf	___ftneg@f1+1
  9463  0790  0828               	movf	?___ftmul+2,w
  9464  0791  00B8               	movwf	___ftneg@f1+2
  9465  0792  3188  2019  3187   	fcall	___ftneg
  9466  0795  0020               	movlb	0	; select bank0
  9467  0796  0836               	movf	?___ftneg,w
  9468  0797  00BC               	movwf	___ftadd@f2
  9469  0798  0837               	movf	?___ftneg+1,w
  9470  0799  00BD               	movwf	___ftadd@f2+1
  9471  079A  0838               	movf	?___ftneg+2,w
  9472  079B  00BE               	movwf	___ftadd@f2+2
  9473  079C  3000               	movlw	0
  9474  079D  00B9               	movwf	___ftadd@f1
  9475  079E  303C               	movlw	60
  9476  079F  00BA               	movwf	___ftadd@f1+1
  9477  07A0  3042               	movlw	66
  9478  07A1  00BB               	movwf	___ftadd@f1+2
  9479  07A2  3181  219E  3187   	fcall	___ftadd
  9480  07A5  0020               	movlb	0	; select bank0
  9481  07A6  0839               	movf	?___ftadd,w
  9482  07A7  00C6               	movwf	___fttol@f1
  9483  07A8  083A               	movf	?___ftadd+1,w
  9484  07A9  00C7               	movwf	___fttol@f1+1
  9485  07AA  083B               	movf	?___ftadd+2,w
  9486  07AB  00C8               	movwf	___fttol@f1+2
  9487  07AC  3185  25E1         	fcall	___fttol
  9488  07AE  0020               	movlb	0	; select bank0
  9489  07AF  0846               	movf	?___fttol,w
  9490  07B0  0008               	return
  9491  07B1                     __end_of_getDimmerLights_PercentToValue:	
  9492                           
  9493                           	psect	text65
  9494  05E1                     __ptext65:	
  9495 ;; *************** function ___fttol *****************
  9496 ;; Defined at:
  9497 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  f1              3   38[BANK0 ] float 
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;  lval            4   47[BANK0 ] unsigned long 
  9502 ;;  exp1            1   51[BANK0 ] unsigned char 
  9503 ;;  sign1           1   46[BANK0 ] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  4   38[BANK0 ] long 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;Total ram usage:       14 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    3
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_getDimmerLights_PercentToValue
  9524 ;;		_getDimmerLights_ValueToPercent
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function ___fttol
  9530  05E1                     ___fttol:	
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  9534  05E1  0020               	movlb	0	; select bank0
  9535  05E2  0846               	movf	___fttol@f1,w
  9536  05E3  00CA               	movwf	??___fttol
  9537  05E4  0847               	movf	___fttol@f1+1,w
  9538  05E5  00CB               	movwf	??___fttol+1
  9539  05E6  0848               	movf	___fttol@f1+2,w
  9540  05E7  00CC               	movwf	??___fttol+2
  9541  05E8  1003               	clrc
  9542  05E9  0D4B               	rlf	??___fttol+1,w
  9543  05EA  0D4C               	rlf	??___fttol+2,w
  9544  05EB  00CD               	movwf	??___fttol+3
  9545  05EC  084D               	movf	??___fttol+3,w
  9546  05ED  00D3               	movwf	___fttol@exp1
  9547  05EE  08D3               	movf	___fttol@exp1,f
  9548  05EF  1D03               	skipz
  9549  05F0  2DFA               	goto	l3955
  9550  05F1  3000               	movlw	0
  9551  05F2  00C9               	movwf	?___fttol+3
  9552  05F3  3000               	movlw	0
  9553  05F4  00C8               	movwf	?___fttol+2
  9554  05F5  3000               	movlw	0
  9555  05F6  00C7               	movwf	?___fttol+1
  9556  05F7  3000               	movlw	0
  9557  05F8  00C6               	movwf	?___fttol
  9558  05F9  0008               	return
  9559  05FA                     l3955:	
  9560  05FA  0846               	movf	___fttol@f1,w
  9561  05FB  00CA               	movwf	??___fttol
  9562  05FC  0847               	movf	___fttol@f1+1,w
  9563  05FD  00CB               	movwf	??___fttol+1
  9564  05FE  0848               	movf	___fttol@f1+2,w
  9565  05FF  00CC               	movwf	??___fttol+2
  9566  0600  3017               	movlw	23
  9567  0601                     u3375:	
  9568  0601  36CC               	lsrf	??___fttol+2,f
  9569  0602  0CCB               	rrf	??___fttol+1,f
  9570  0603  0CCA               	rrf	??___fttol,f
  9571  0604  0B89               	decfsz	9,f
  9572  0605  2E01               	goto	u3375
  9573  0606  084A               	movf	??___fttol,w
  9574  0607  00CD               	movwf	??___fttol+3
  9575  0608  084D               	movf	??___fttol+3,w
  9576  0609  00CE               	movwf	___fttol@sign1
  9577  060A  17C7               	bsf	___fttol@f1+1,7
  9578  060B  30FF               	movlw	255
  9579  060C  05C6               	andwf	___fttol@f1,f
  9580  060D  30FF               	movlw	255
  9581  060E  05C7               	andwf	___fttol@f1+1,f
  9582  060F  3000               	movlw	0
  9583  0610  05C8               	andwf	___fttol@f1+2,f
  9584  0611  0846               	movf	___fttol@f1,w
  9585  0612  00CF               	movwf	___fttol@lval
  9586  0613  0847               	movf	___fttol@f1+1,w
  9587  0614  00D0               	movwf	___fttol@lval+1
  9588  0615  0848               	movf	___fttol@f1+2,w
  9589  0616  00D1               	movwf	___fttol@lval+2
  9590  0617  01D2               	clrf	___fttol@lval+3
  9591  0618  308E               	movlw	142
  9592  0619  02D3               	subwf	___fttol@exp1,f
  9593  061A  1FD3               	btfss	___fttol@exp1,7
  9594  061B  2E38               	goto	l3975
  9595  061C  0853               	movf	___fttol@exp1,w
  9596  061D  3A80               	xorlw	128
  9597  061E  3E8F               	addlw	143
  9598  061F  1803               	skipnc
  9599  0620  2E2A               	goto	l3973
  9600  0621  3000               	movlw	0
  9601  0622  00C9               	movwf	?___fttol+3
  9602  0623  3000               	movlw	0
  9603  0624  00C8               	movwf	?___fttol+2
  9604  0625  3000               	movlw	0
  9605  0626  00C7               	movwf	?___fttol+1
  9606  0627  3000               	movlw	0
  9607  0628  00C6               	movwf	?___fttol
  9608  0629  0008               	return
  9609  062A                     l3973:	
  9610  062A  3001               	movlw	1
  9611  062B                     u3405:	
  9612  062B  36D2               	lsrf	___fttol@lval+3,f
  9613  062C  0CD1               	rrf	___fttol@lval+2,f
  9614  062D  0CD0               	rrf	___fttol@lval+1,f
  9615  062E  0CCF               	rrf	___fttol@lval,f
  9616  062F  0B89               	decfsz	9,f
  9617  0630  2E2B               	goto	u3405
  9618  0631  3001               	movlw	1
  9619  0632  00CA               	movwf	??___fttol
  9620  0633  084A               	movf	??___fttol,w
  9621  0634  07D3               	addwf	___fttol@exp1,f
  9622  0635  1903               	btfsc	3,2
  9623  0636  2E51               	goto	l3985
  9624  0637  2E2A               	goto	l3973
  9625  0638                     l3975:	
  9626  0638  3018               	movlw	24
  9627  0639  0253               	subwf	___fttol@exp1,w
  9628  063A  1C03               	skipc
  9629  063B  2E4E               	goto	l3983
  9630  063C  3000               	movlw	0
  9631  063D  00C9               	movwf	?___fttol+3
  9632  063E  3000               	movlw	0
  9633  063F  00C8               	movwf	?___fttol+2
  9634  0640  3000               	movlw	0
  9635  0641  00C7               	movwf	?___fttol+1
  9636  0642  3000               	movlw	0
  9637  0643  00C6               	movwf	?___fttol
  9638  0644  0008               	return
  9639  0645                     l3981:	
  9640  0645  3001               	movlw	1
  9641  0646                     u3435:	
  9642  0646  35CF               	lslf	___fttol@lval,f
  9643  0647  0DD0               	rlf	___fttol@lval+1,f
  9644  0648  0DD1               	rlf	___fttol@lval+2,f
  9645  0649  0DD2               	rlf	___fttol@lval+3,f
  9646  064A  0B89               	decfsz	9,f
  9647  064B  2E46               	goto	u3435
  9648  064C  3001               	movlw	1
  9649  064D  02D3               	subwf	___fttol@exp1,f
  9650  064E                     l3983:	
  9651  064E  08D3               	movf	___fttol@exp1,f
  9652  064F  1D03               	skipz
  9653  0650  2E45               	goto	l3981
  9654  0651                     l3985:	
  9655  0651  084E               	movf	___fttol@sign1,w
  9656  0652  1903               	btfsc	3,2
  9657  0653  2E5F               	goto	l3989
  9658  0654  09CF               	comf	___fttol@lval,f
  9659  0655  09D0               	comf	___fttol@lval+1,f
  9660  0656  09D1               	comf	___fttol@lval+2,f
  9661  0657  09D2               	comf	___fttol@lval+3,f
  9662  0658  0ACF               	incf	___fttol@lval,f
  9663  0659  1903               	skipnz
  9664  065A  0AD0               	incf	___fttol@lval+1,f
  9665  065B  1903               	skipnz
  9666  065C  0AD1               	incf	___fttol@lval+2,f
  9667  065D  1903               	skipnz
  9668  065E  0AD2               	incf	___fttol@lval+3,f
  9669  065F                     l3989:	
  9670  065F  0852               	movf	___fttol@lval+3,w
  9671  0660  00C9               	movwf	?___fttol+3
  9672  0661  0851               	movf	___fttol@lval+2,w
  9673  0662  00C8               	movwf	?___fttol+2
  9674  0663  0850               	movf	___fttol@lval+1,w
  9675  0664  00C7               	movwf	?___fttol+1
  9676  0665  084F               	movf	___fttol@lval,w
  9677  0666  00C6               	movwf	?___fttol
  9678  0667  0008               	return
  9679  0668                     __end_of___fttol:	
  9680                           
  9681                           	psect	text66
  9682  0819                     __ptext66:	
  9683 ;; *************** function ___ftneg *****************
  9684 ;; Defined at:
  9685 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  f1              3   22[BANK0 ] float 
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;		None
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  3   22[BANK0 ] float 
  9692 ;; Registers used:
  9693 ;;		wreg
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9699 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;Total ram usage:        3 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; Hardware stack levels required when called:    3
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_getDimmerLights_PercentToValue
  9710 ;;		_getDimmerLights_ValueToPercent
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           
  9715                           ;psect for function ___ftneg
  9716  0819                     ___ftneg:	
  9717                           
  9718                           ;incstack = 0
  9719                           ; Regs used in ___ftneg: [wreg]
  9720  0819  0020               	movlb	0	; select bank0
  9721  081A  0838               	movf	___ftneg@f1+2,w
  9722  081B  0437               	iorwf	___ftneg@f1+1,w
  9723  081C  0436               	iorwf	___ftneg@f1,w
  9724  081D  1903               	skipnz
  9725  081E  0008               	return
  9726  081F  3080               	movlw	128
  9727  0820  06B8               	xorwf	___ftneg@f1+2,f
  9728  0821  0008               	return
  9729  0822                     __end_of___ftneg:	
  9730                           
  9731                           	psect	text67
  9732  035F                     __ptext67:	
  9733 ;; *************** function ___ftmul *****************
  9734 ;; Defined at:
  9735 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  f1              3    6[BANK0 ] float 
  9738 ;;  f2              3    9[BANK0 ] float 
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;  f3_as_produc    3   17[BANK0 ] unsigned um
  9741 ;;  sign            1   21[BANK0 ] unsigned char 
  9742 ;;  cntr            1   20[BANK0 ] unsigned char 
  9743 ;;  exp             1   16[BANK0 ] unsigned char 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  3    6[BANK0 ] float 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0, pclath, cstack
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:       16 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    4
  9760 ;; This function calls:
  9761 ;;		___ftpack
  9762 ;; This function is called by:
  9763 ;;		_getDimmerLights_PercentToValue
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           
  9768                           ;psect for function ___ftmul
  9769  035F                     ___ftmul:	
  9770                           
  9771                           ;incstack = 0
  9772                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9773  035F  0020               	movlb	0	; select bank0
  9774  0360  0826               	movf	___ftmul@f1,w
  9775  0361  00AC               	movwf	??___ftmul
  9776  0362  0827               	movf	___ftmul@f1+1,w
  9777  0363  00AD               	movwf	??___ftmul+1
  9778  0364  0828               	movf	___ftmul@f1+2,w
  9779  0365  00AE               	movwf	??___ftmul+2
  9780  0366  1003               	clrc
  9781  0367  0D2D               	rlf	??___ftmul+1,w
  9782  0368  0D2E               	rlf	??___ftmul+2,w
  9783  0369  00AF               	movwf	??___ftmul+3
  9784  036A  082F               	movf	??___ftmul+3,w
  9785  036B  00B0               	movwf	___ftmul@exp
  9786  036C  08B0               	movf	___ftmul@exp,f
  9787  036D  1D03               	skipz
  9788  036E  2B76               	goto	l3897
  9789  036F  3000               	movlw	0
  9790  0370  00A6               	movwf	?___ftmul
  9791  0371  3000               	movlw	0
  9792  0372  00A7               	movwf	?___ftmul+1
  9793  0373  3000               	movlw	0
  9794  0374  00A8               	movwf	?___ftmul+2
  9795  0375  0008               	return
  9796  0376                     l3897:	
  9797  0376  0829               	movf	___ftmul@f2,w
  9798  0377  00AC               	movwf	??___ftmul
  9799  0378  082A               	movf	___ftmul@f2+1,w
  9800  0379  00AD               	movwf	??___ftmul+1
  9801  037A  082B               	movf	___ftmul@f2+2,w
  9802  037B  00AE               	movwf	??___ftmul+2
  9803  037C  1003               	clrc
  9804  037D  0D2D               	rlf	??___ftmul+1,w
  9805  037E  0D2E               	rlf	??___ftmul+2,w
  9806  037F  00AF               	movwf	??___ftmul+3
  9807  0380  082F               	movf	??___ftmul+3,w
  9808  0381  00B5               	movwf	___ftmul@sign
  9809  0382  08B5               	movf	___ftmul@sign,f
  9810  0383  1D03               	skipz
  9811  0384  2B8C               	goto	l3903
  9812  0385  3000               	movlw	0
  9813  0386  00A6               	movwf	?___ftmul
  9814  0387  3000               	movlw	0
  9815  0388  00A7               	movwf	?___ftmul+1
  9816  0389  3000               	movlw	0
  9817  038A  00A8               	movwf	?___ftmul+2
  9818  038B  0008               	return
  9819  038C                     l3903:	
  9820  038C  0835               	movf	___ftmul@sign,w
  9821  038D  3E7B               	addlw	123
  9822  038E  00AC               	movwf	??___ftmul
  9823  038F  082C               	movf	??___ftmul,w
  9824  0390  07B0               	addwf	___ftmul@exp,f
  9825  0391  0826               	movf	___ftmul@f1,w
  9826  0392  00AC               	movwf	??___ftmul
  9827  0393  0827               	movf	___ftmul@f1+1,w
  9828  0394  00AD               	movwf	??___ftmul+1
  9829  0395  0828               	movf	___ftmul@f1+2,w
  9830  0396  00AE               	movwf	??___ftmul+2
  9831  0397  3010               	movlw	16
  9832  0398                     u3255:	
  9833  0398  36AE               	lsrf	??___ftmul+2,f
  9834  0399  0CAD               	rrf	??___ftmul+1,f
  9835  039A  0CAC               	rrf	??___ftmul,f
  9836  039B  0B89               	decfsz	9,f
  9837  039C  2B98               	goto	u3255
  9838  039D  082C               	movf	??___ftmul,w
  9839  039E  00AF               	movwf	??___ftmul+3
  9840  039F  082F               	movf	??___ftmul+3,w
  9841  03A0  00B5               	movwf	___ftmul@sign
  9842  03A1  0829               	movf	___ftmul@f2,w
  9843  03A2  00AC               	movwf	??___ftmul
  9844  03A3  082A               	movf	___ftmul@f2+1,w
  9845  03A4  00AD               	movwf	??___ftmul+1
  9846  03A5  082B               	movf	___ftmul@f2+2,w
  9847  03A6  00AE               	movwf	??___ftmul+2
  9848  03A7  3010               	movlw	16
  9849  03A8                     u3265:	
  9850  03A8  36AE               	lsrf	??___ftmul+2,f
  9851  03A9  0CAD               	rrf	??___ftmul+1,f
  9852  03AA  0CAC               	rrf	??___ftmul,f
  9853  03AB  0B89               	decfsz	9,f
  9854  03AC  2BA8               	goto	u3265
  9855  03AD  082C               	movf	??___ftmul,w
  9856  03AE  00AF               	movwf	??___ftmul+3
  9857  03AF  082F               	movf	??___ftmul+3,w
  9858  03B0  06B5               	xorwf	___ftmul@sign,f
  9859  03B1  3080               	movlw	128
  9860  03B2  00AC               	movwf	??___ftmul
  9861  03B3  082C               	movf	??___ftmul,w
  9862  03B4  05B5               	andwf	___ftmul@sign,f
  9863  03B5  17A7               	bsf	___ftmul@f1+1,7
  9864  03B6  17AA               	bsf	___ftmul@f2+1,7
  9865  03B7  30FF               	movlw	255
  9866  03B8  05A9               	andwf	___ftmul@f2,f
  9867  03B9  30FF               	movlw	255
  9868  03BA  05AA               	andwf	___ftmul@f2+1,f
  9869  03BB  3000               	movlw	0
  9870  03BC  05AB               	andwf	___ftmul@f2+2,f
  9871  03BD  3000               	movlw	0
  9872  03BE  00B1               	movwf	___ftmul@f3_as_product
  9873  03BF  3000               	movlw	0
  9874  03C0  00B2               	movwf	___ftmul@f3_as_product+1
  9875  03C1  3000               	movlw	0
  9876  03C2  00B3               	movwf	___ftmul@f3_as_product+2
  9877  03C3  3007               	movlw	7
  9878  03C4  00AC               	movwf	??___ftmul
  9879  03C5  082C               	movf	??___ftmul,w
  9880  03C6  00B4               	movwf	___ftmul@cntr
  9881  03C7                     l3915:	
  9882  03C7  1C26               	btfss	___ftmul@f1,0
  9883  03C8  2BCF               	goto	l3919
  9884  03C9  0829               	movf	___ftmul@f2,w
  9885  03CA  07B1               	addwf	___ftmul@f3_as_product,f
  9886  03CB  082A               	movf	___ftmul@f2+1,w
  9887  03CC  3DB2               	addwfc	___ftmul@f3_as_product+1,f
  9888  03CD  082B               	movf	___ftmul@f2+2,w
  9889  03CE  3DB3               	addwfc	___ftmul@f3_as_product+2,f
  9890  03CF                     l3919:	
  9891  03CF  3001               	movlw	1
  9892  03D0                     u3285:	
  9893  03D0  36A8               	lsrf	___ftmul@f1+2,f
  9894  03D1  0CA7               	rrf	___ftmul@f1+1,f
  9895  03D2  0CA6               	rrf	___ftmul@f1,f
  9896  03D3  0B89               	decfsz	9,f
  9897  03D4  2BD0               	goto	u3285
  9898  03D5  3001               	movlw	1
  9899  03D6                     u3295:	
  9900  03D6  35A9               	lslf	___ftmul@f2,f
  9901  03D7  0DAA               	rlf	___ftmul@f2+1,f
  9902  03D8  0DAB               	rlf	___ftmul@f2+2,f
  9903  03D9  0B89               	decfsz	9,f
  9904  03DA  2BD6               	goto	u3295
  9905  03DB  3001               	movlw	1
  9906  03DC  02B4               	subwf	___ftmul@cntr,f
  9907  03DD  1D03               	btfss	3,2
  9908  03DE  2BC7               	goto	l3915
  9909  03DF  3009               	movlw	9
  9910  03E0  00AC               	movwf	??___ftmul
  9911  03E1  082C               	movf	??___ftmul,w
  9912  03E2  00B4               	movwf	___ftmul@cntr
  9913  03E3                     l3927:	
  9914  03E3  1C26               	btfss	___ftmul@f1,0
  9915  03E4  2BEB               	goto	l3931
  9916  03E5  0829               	movf	___ftmul@f2,w
  9917  03E6  07B1               	addwf	___ftmul@f3_as_product,f
  9918  03E7  082A               	movf	___ftmul@f2+1,w
  9919  03E8  3DB2               	addwfc	___ftmul@f3_as_product+1,f
  9920  03E9  082B               	movf	___ftmul@f2+2,w
  9921  03EA  3DB3               	addwfc	___ftmul@f3_as_product+2,f
  9922  03EB                     l3931:	
  9923  03EB  3001               	movlw	1
  9924  03EC                     u3325:	
  9925  03EC  36A8               	lsrf	___ftmul@f1+2,f
  9926  03ED  0CA7               	rrf	___ftmul@f1+1,f
  9927  03EE  0CA6               	rrf	___ftmul@f1,f
  9928  03EF  0B89               	decfsz	9,f
  9929  03F0  2BEC               	goto	u3325
  9930  03F1  3001               	movlw	1
  9931  03F2                     u3335:	
  9932  03F2  36B3               	lsrf	___ftmul@f3_as_product+2,f
  9933  03F3  0CB2               	rrf	___ftmul@f3_as_product+1,f
  9934  03F4  0CB1               	rrf	___ftmul@f3_as_product,f
  9935  03F5  0B89               	decfsz	9,f
  9936  03F6  2BF2               	goto	u3335
  9937  03F7  3001               	movlw	1
  9938  03F8  02B4               	subwf	___ftmul@cntr,f
  9939  03F9  1D03               	btfss	3,2
  9940  03FA  2BE3               	goto	l3927
  9941  03FB  0831               	movf	___ftmul@f3_as_product,w
  9942  03FC  00F2               	movwf	___ftpack@arg
  9943  03FD  0832               	movf	___ftmul@f3_as_product+1,w
  9944  03FE  00F3               	movwf	___ftpack@arg+1
  9945  03FF  0833               	movf	___ftmul@f3_as_product+2,w
  9946  0400  00F4               	movwf	___ftpack@arg+2
  9947  0401  0830               	movf	___ftmul@exp,w
  9948  0402  00AC               	movwf	??___ftmul
  9949  0403  082C               	movf	??___ftmul,w
  9950  0404  00F5               	movwf	___ftpack@exp
  9951  0405  0835               	movf	___ftmul@sign,w
  9952  0406  00AD               	movwf	??___ftmul+1
  9953  0407  082D               	movf	??___ftmul+1,w
  9954  0408  00F6               	movwf	___ftpack@sign
  9955  0409  318F  27A0         	fcall	___ftpack
  9956  040B  0872               	movf	?___ftpack,w
  9957  040C  0020               	movlb	0	; select bank0
  9958  040D  00A6               	movwf	?___ftmul
  9959  040E  0873               	movf	?___ftpack+1,w
  9960  040F  00A7               	movwf	?___ftmul+1
  9961  0410  0874               	movf	?___ftpack+2,w
  9962  0411  00A8               	movwf	?___ftmul+2
  9963  0412  0008               	return
  9964  0413                     __end_of___ftmul:	
  9965                           
  9966                           	psect	text68
  9967  0413                     __ptext68:	
  9968 ;; *************** function ___ftdiv *****************
  9969 ;; Defined at:
  9970 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  f2              3    6[BANK0 ] float 
  9973 ;;  f1              3    9[BANK0 ] float 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  f3              3   17[BANK0 ] float 
  9976 ;;  sign            1   21[BANK0 ] unsigned char 
  9977 ;;  exp             1   20[BANK0 ] unsigned char 
  9978 ;;  cntr            1   16[BANK0 ] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  3    6[BANK0 ] float 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0, pclath, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9988 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;Total ram usage:       16 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    4
  9995 ;; This function calls:
  9996 ;;		___ftpack
  9997 ;; This function is called by:
  9998 ;;		_getDimmerLights_PercentToValue
  9999 ;;		_getDimmerLights_ValueToPercent
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           
 10004                           ;psect for function ___ftdiv
 10005  0413                     ___ftdiv:	
 10006                           
 10007                           ;incstack = 0
 10008                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 10009  0413  0020               	movlb	0	; select bank0
 10010  0414  0829               	movf	___ftdiv@f1,w
 10011  0415  00AC               	movwf	??___ftdiv
 10012  0416  082A               	movf	___ftdiv@f1+1,w
 10013  0417  00AD               	movwf	??___ftdiv+1
 10014  0418  082B               	movf	___ftdiv@f1+2,w
 10015  0419  00AE               	movwf	??___ftdiv+2
 10016  041A  1003               	clrc
 10017  041B  0D2D               	rlf	??___ftdiv+1,w
 10018  041C  0D2E               	rlf	??___ftdiv+2,w
 10019  041D  00AF               	movwf	??___ftdiv+3
 10020  041E  082F               	movf	??___ftdiv+3,w
 10021  041F  00B4               	movwf	___ftdiv@exp
 10022  0420  08B4               	movf	___ftdiv@exp,f
 10023  0421  1D03               	skipz
 10024  0422  2C2A               	goto	l3855
 10025  0423  3000               	movlw	0
 10026  0424  00A6               	movwf	?___ftdiv
 10027  0425  3000               	movlw	0
 10028  0426  00A7               	movwf	?___ftdiv+1
 10029  0427  3000               	movlw	0
 10030  0428  00A8               	movwf	?___ftdiv+2
 10031  0429  0008               	return
 10032  042A                     l3855:	
 10033  042A  0826               	movf	___ftdiv@f2,w
 10034  042B  00AC               	movwf	??___ftdiv
 10035  042C  0827               	movf	___ftdiv@f2+1,w
 10036  042D  00AD               	movwf	??___ftdiv+1
 10037  042E  0828               	movf	___ftdiv@f2+2,w
 10038  042F  00AE               	movwf	??___ftdiv+2
 10039  0430  1003               	clrc
 10040  0431  0D2D               	rlf	??___ftdiv+1,w
 10041  0432  0D2E               	rlf	??___ftdiv+2,w
 10042  0433  00AF               	movwf	??___ftdiv+3
 10043  0434  082F               	movf	??___ftdiv+3,w
 10044  0435  00B5               	movwf	___ftdiv@sign
 10045  0436  08B5               	movf	___ftdiv@sign,f
 10046  0437  1D03               	skipz
 10047  0438  2C40               	goto	l3861
 10048  0439  3000               	movlw	0
 10049  043A  00A6               	movwf	?___ftdiv
 10050  043B  3000               	movlw	0
 10051  043C  00A7               	movwf	?___ftdiv+1
 10052  043D  3000               	movlw	0
 10053  043E  00A8               	movwf	?___ftdiv+2
 10054  043F  0008               	return
 10055  0440                     l3861:	
 10056  0440  3000               	movlw	0
 10057  0441  00B1               	movwf	___ftdiv@f3
 10058  0442  3000               	movlw	0
 10059  0443  00B2               	movwf	___ftdiv@f3+1
 10060  0444  3000               	movlw	0
 10061  0445  00B3               	movwf	___ftdiv@f3+2
 10062  0446  3089               	movlw	137
 10063  0447  0735               	addwf	___ftdiv@sign,w
 10064  0448  00AC               	movwf	??___ftdiv
 10065  0449  082C               	movf	??___ftdiv,w
 10066  044A  02B4               	subwf	___ftdiv@exp,f
 10067  044B  0829               	movf	___ftdiv@f1,w
 10068  044C  00AC               	movwf	??___ftdiv
 10069  044D  082A               	movf	___ftdiv@f1+1,w
 10070  044E  00AD               	movwf	??___ftdiv+1
 10071  044F  082B               	movf	___ftdiv@f1+2,w
 10072  0450  00AE               	movwf	??___ftdiv+2
 10073  0451  3010               	movlw	16
 10074  0452                     u3175:	
 10075  0452  36AE               	lsrf	??___ftdiv+2,f
 10076  0453  0CAD               	rrf	??___ftdiv+1,f
 10077  0454  0CAC               	rrf	??___ftdiv,f
 10078  0455  0B89               	decfsz	9,f
 10079  0456  2C52               	goto	u3175
 10080  0457  082C               	movf	??___ftdiv,w
 10081  0458  00AF               	movwf	??___ftdiv+3
 10082  0459  082F               	movf	??___ftdiv+3,w
 10083  045A  00B5               	movwf	___ftdiv@sign
 10084  045B  0826               	movf	___ftdiv@f2,w
 10085  045C  00AC               	movwf	??___ftdiv
 10086  045D  0827               	movf	___ftdiv@f2+1,w
 10087  045E  00AD               	movwf	??___ftdiv+1
 10088  045F  0828               	movf	___ftdiv@f2+2,w
 10089  0460  00AE               	movwf	??___ftdiv+2
 10090  0461  3010               	movlw	16
 10091  0462                     u3185:	
 10092  0462  36AE               	lsrf	??___ftdiv+2,f
 10093  0463  0CAD               	rrf	??___ftdiv+1,f
 10094  0464  0CAC               	rrf	??___ftdiv,f
 10095  0465  0B89               	decfsz	9,f
 10096  0466  2C62               	goto	u3185
 10097  0467  082C               	movf	??___ftdiv,w
 10098  0468  00AF               	movwf	??___ftdiv+3
 10099  0469  082F               	movf	??___ftdiv+3,w
 10100  046A  06B5               	xorwf	___ftdiv@sign,f
 10101  046B  3080               	movlw	128
 10102  046C  00AC               	movwf	??___ftdiv
 10103  046D  082C               	movf	??___ftdiv,w
 10104  046E  05B5               	andwf	___ftdiv@sign,f
 10105  046F  17AA               	bsf	___ftdiv@f1+1,7
 10106  0470  30FF               	movlw	255
 10107  0471  05A9               	andwf	___ftdiv@f1,f
 10108  0472  30FF               	movlw	255
 10109  0473  05AA               	andwf	___ftdiv@f1+1,f
 10110  0474  3000               	movlw	0
 10111  0475  05AB               	andwf	___ftdiv@f1+2,f
 10112  0476  17A7               	bsf	___ftdiv@f2+1,7
 10113  0477  30FF               	movlw	255
 10114  0478  05A6               	andwf	___ftdiv@f2,f
 10115  0479  30FF               	movlw	255
 10116  047A  05A7               	andwf	___ftdiv@f2+1,f
 10117  047B  3000               	movlw	0
 10118  047C  05A8               	andwf	___ftdiv@f2+2,f
 10119  047D  3018               	movlw	24
 10120  047E  00AC               	movwf	??___ftdiv
 10121  047F  082C               	movf	??___ftdiv,w
 10122  0480  00B0               	movwf	___ftdiv@cntr
 10123  0481                     l3875:	
 10124  0481  3001               	movlw	1
 10125  0482                     u3195:	
 10126  0482  35B1               	lslf	___ftdiv@f3,f
 10127  0483  0DB2               	rlf	___ftdiv@f3+1,f
 10128  0484  0DB3               	rlf	___ftdiv@f3+2,f
 10129  0485  0B89               	decfsz	9,f
 10130  0486  2C82               	goto	u3195
 10131  0487  0828               	movf	___ftdiv@f2+2,w
 10132  0488  022B               	subwf	___ftdiv@f1+2,w
 10133  0489  1D03               	skipz
 10134  048A  2C91               	goto	u3205
 10135  048B  0827               	movf	___ftdiv@f2+1,w
 10136  048C  022A               	subwf	___ftdiv@f1+1,w
 10137  048D  1D03               	skipz
 10138  048E  2C91               	goto	u3205
 10139  048F  0826               	movf	___ftdiv@f2,w
 10140  0490  0229               	subwf	___ftdiv@f1,w
 10141  0491                     u3205:	
 10142  0491  1C03               	skipc
 10143  0492  2C9A               	goto	l3883
 10144  0493  0826               	movf	___ftdiv@f2,w
 10145  0494  02A9               	subwf	___ftdiv@f1,f
 10146  0495  0827               	movf	___ftdiv@f2+1,w
 10147  0496  3BAA               	subwfb	___ftdiv@f1+1,f
 10148  0497  0828               	movf	___ftdiv@f2+2,w
 10149  0498  3BAB               	subwfb	___ftdiv@f1+2,f
 10150  0499  1431               	bsf	___ftdiv@f3,0
 10151  049A                     l3883:	
 10152  049A  3001               	movlw	1
 10153  049B                     u3215:	
 10154  049B  35A9               	lslf	___ftdiv@f1,f
 10155  049C  0DAA               	rlf	___ftdiv@f1+1,f
 10156  049D  0DAB               	rlf	___ftdiv@f1+2,f
 10157  049E  0B89               	decfsz	9,f
 10158  049F  2C9B               	goto	u3215
 10159  04A0  3001               	movlw	1
 10160  04A1  02B0               	subwf	___ftdiv@cntr,f
 10161  04A2  1D03               	btfss	3,2
 10162  04A3  2C81               	goto	l3875
 10163  04A4  0831               	movf	___ftdiv@f3,w
 10164  04A5  00F2               	movwf	___ftpack@arg
 10165  04A6  0832               	movf	___ftdiv@f3+1,w
 10166  04A7  00F3               	movwf	___ftpack@arg+1
 10167  04A8  0833               	movf	___ftdiv@f3+2,w
 10168  04A9  00F4               	movwf	___ftpack@arg+2
 10169  04AA  0834               	movf	___ftdiv@exp,w
 10170  04AB  00AC               	movwf	??___ftdiv
 10171  04AC  082C               	movf	??___ftdiv,w
 10172  04AD  00F5               	movwf	___ftpack@exp
 10173  04AE  0835               	movf	___ftdiv@sign,w
 10174  04AF  00AD               	movwf	??___ftdiv+1
 10175  04B0  082D               	movf	??___ftdiv+1,w
 10176  04B1  00F6               	movwf	___ftpack@sign
 10177  04B2  318F  27A0         	fcall	___ftpack
 10178  04B4  0872               	movf	?___ftpack,w
 10179  04B5  0020               	movlb	0	; select bank0
 10180  04B6  00A6               	movwf	?___ftdiv
 10181  04B7  0873               	movf	?___ftpack+1,w
 10182  04B8  00A7               	movwf	?___ftdiv+1
 10183  04B9  0874               	movf	?___ftpack+2,w
 10184  04BA  00A8               	movwf	?___ftdiv+2
 10185  04BB  0008               	return
 10186  04BC                     __end_of___ftdiv:	
 10187                           
 10188                           	psect	text69
 10189  019E                     __ptext69:	
 10190 ;; *************** function ___ftadd *****************
 10191 ;; Defined at:
 10192 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  f1              3   25[BANK0 ] float 
 10195 ;;  f2              3   28[BANK0 ] float 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  exp1            1   37[BANK0 ] unsigned char 
 10198 ;;  exp2            1   36[BANK0 ] unsigned char 
 10199 ;;  sign            1   35[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  3   25[BANK0 ] float 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0, pclath, cstack
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10209 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;Total ram usage:       13 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    4
 10216 ;; This function calls:
 10217 ;;		___ftpack
 10218 ;; This function is called by:
 10219 ;;		_getDimmerLights_PercentToValue
 10220 ;;		_getDimmerLights_ValueToPercent
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           
 10225                           ;psect for function ___ftadd
 10226  019E                     ___ftadd:	
 10227                           
 10228                           ;incstack = 0
 10229                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 10230  019E  0020               	movlb	0	; select bank0
 10231  019F  0839               	movf	___ftadd@f1,w
 10232  01A0  00BF               	movwf	??___ftadd
 10233  01A1  083A               	movf	___ftadd@f1+1,w
 10234  01A2  00C0               	movwf	??___ftadd+1
 10235  01A3  083B               	movf	___ftadd@f1+2,w
 10236  01A4  00C1               	movwf	??___ftadd+2
 10237  01A5  1003               	clrc
 10238  01A6  0D40               	rlf	??___ftadd+1,w
 10239  01A7  0D41               	rlf	??___ftadd+2,w
 10240  01A8  00C2               	movwf	??___ftadd+3
 10241  01A9  0842               	movf	??___ftadd+3,w
 10242  01AA  00C5               	movwf	___ftadd@exp1
 10243  01AB  083C               	movf	___ftadd@f2,w
 10244  01AC  00BF               	movwf	??___ftadd
 10245  01AD  083D               	movf	___ftadd@f2+1,w
 10246  01AE  00C0               	movwf	??___ftadd+1
 10247  01AF  083E               	movf	___ftadd@f2+2,w
 10248  01B0  00C1               	movwf	??___ftadd+2
 10249  01B1  1003               	clrc
 10250  01B2  0D40               	rlf	??___ftadd+1,w
 10251  01B3  0D41               	rlf	??___ftadd+2,w
 10252  01B4  00C2               	movwf	??___ftadd+3
 10253  01B5  0842               	movf	??___ftadd+3,w
 10254  01B6  00C4               	movwf	___ftadd@exp2
 10255  01B7  0845               	movf	___ftadd@exp1,w
 10256  01B8  1903               	btfsc	3,2
 10257  01B9  29C6               	goto	l3785
 10258  01BA  0844               	movf	___ftadd@exp2,w
 10259  01BB  0245               	subwf	___ftadd@exp1,w
 10260  01BC  1803               	skipnc
 10261  01BD  29CD               	goto	l3789
 10262  01BE  0345               	decf	___ftadd@exp1,w
 10263  01BF  3AFF               	xorlw	255
 10264  01C0  0744               	addwf	___ftadd@exp2,w
 10265  01C1  00BF               	movwf	??___ftadd
 10266  01C2  3019               	movlw	25
 10267  01C3  023F               	subwf	??___ftadd,w
 10268  01C4  1C03               	skipc
 10269  01C5  29CD               	goto	l3789
 10270  01C6                     l3785:	
 10271  01C6  083C               	movf	___ftadd@f2,w
 10272  01C7  00B9               	movwf	?___ftadd
 10273  01C8  083D               	movf	___ftadd@f2+1,w
 10274  01C9  00BA               	movwf	?___ftadd+1
 10275  01CA  083E               	movf	___ftadd@f2+2,w
 10276  01CB  00BB               	movwf	?___ftadd+2
 10277  01CC  0008               	return
 10278  01CD                     l3789:	
 10279  01CD  0844               	movf	___ftadd@exp2,w
 10280  01CE  1903               	btfsc	3,2
 10281  01CF  0008               	return
 10282  01D0  0845               	movf	___ftadd@exp1,w
 10283  01D1  0244               	subwf	___ftadd@exp2,w
 10284  01D2  1803               	skipnc
 10285  01D3  29DC               	goto	l3795
 10286  01D4  0344               	decf	___ftadd@exp2,w
 10287  01D5  3AFF               	xorlw	255
 10288  01D6  0745               	addwf	___ftadd@exp1,w
 10289  01D7  00BF               	movwf	??___ftadd
 10290  01D8  3019               	movlw	25
 10291  01D9  023F               	subwf	??___ftadd,w
 10292  01DA  1803               	btfsc	3,0
 10293  01DB  0008               	return
 10294  01DC                     l3795:	
 10295  01DC  3006               	movlw	6
 10296  01DD  00BF               	movwf	??___ftadd
 10297  01DE  083F               	movf	??___ftadd,w
 10298  01DF  00C3               	movwf	___ftadd@sign
 10299  01E0  1BBB               	btfsc	___ftadd@f1+2,7
 10300  01E1  17C3               	bsf	___ftadd@sign,7
 10301  01E2  1BBE               	btfsc	___ftadd@f2+2,7
 10302  01E3  1743               	bsf	___ftadd@sign,6
 10303  01E4  17BA               	bsf	___ftadd@f1+1,7
 10304  01E5  30FF               	movlw	255
 10305  01E6  05B9               	andwf	___ftadd@f1,f
 10306  01E7  30FF               	movlw	255
 10307  01E8  05BA               	andwf	___ftadd@f1+1,f
 10308  01E9  3000               	movlw	0
 10309  01EA  05BB               	andwf	___ftadd@f1+2,f
 10310  01EB  17BD               	bsf	___ftadd@f2+1,7
 10311  01EC  30FF               	movlw	255
 10312  01ED  05BC               	andwf	___ftadd@f2,f
 10313  01EE  30FF               	movlw	255
 10314  01EF  05BD               	andwf	___ftadd@f2+1,f
 10315  01F0  3000               	movlw	0
 10316  01F1  05BE               	andwf	___ftadd@f2+2,f
 10317  01F2  0844               	movf	___ftadd@exp2,w
 10318  01F3  0245               	subwf	___ftadd@exp1,w
 10319  01F4  1803               	skipnc
 10320  01F5  2A18               	goto	l3817
 10321  01F6                     l3807:	
 10322  01F6  3001               	movlw	1
 10323  01F7                     u3015:	
 10324  01F7  35BC               	lslf	___ftadd@f2,f
 10325  01F8  0DBD               	rlf	___ftadd@f2+1,f
 10326  01F9  0DBE               	rlf	___ftadd@f2+2,f
 10327  01FA  0B89               	decfsz	9,f
 10328  01FB  29F7               	goto	u3015
 10329  01FC  3001               	movlw	1
 10330  01FD  02C4               	subwf	___ftadd@exp2,f
 10331  01FE  0844               	movf	___ftadd@exp2,w
 10332  01FF  0645               	xorwf	___ftadd@exp1,w
 10333  0200  1903               	skipnz
 10334  0201  2A13               	goto	l3815
 10335  0202  3001               	movlw	1
 10336  0203  02C3               	subwf	___ftadd@sign,f
 10337  0204  0843               	movf	___ftadd@sign,w
 10338  0205  3907               	andlw	7
 10339  0206  1903               	btfsc	3,2
 10340  0207  2A13               	goto	l3815
 10341  0208  29F6               	goto	l3807
 10342  0209                     l3813:	
 10343  0209  3001               	movlw	1
 10344  020A                     u3045:	
 10345  020A  36BB               	lsrf	___ftadd@f1+2,f
 10346  020B  0CBA               	rrf	___ftadd@f1+1,f
 10347  020C  0CB9               	rrf	___ftadd@f1,f
 10348  020D  0B89               	decfsz	9,f
 10349  020E  2A0A               	goto	u3045
 10350  020F  3001               	movlw	1
 10351  0210  00BF               	movwf	??___ftadd
 10352  0211  083F               	movf	??___ftadd,w
 10353  0212  07C5               	addwf	___ftadd@exp1,f
 10354  0213                     l3815:	
 10355  0213  0845               	movf	___ftadd@exp1,w
 10356  0214  0644               	xorwf	___ftadd@exp2,w
 10357  0215  1903               	btfsc	3,2
 10358  0216  2A3D               	goto	l1810
 10359  0217  2A09               	goto	l3813
 10360  0218                     l3817:	
 10361  0218  0845               	movf	___ftadd@exp1,w
 10362  0219  0244               	subwf	___ftadd@exp2,w
 10363  021A  1803               	skipnc
 10364  021B  2A3D               	goto	l1810
 10365  021C                     l3819:	
 10366  021C  3001               	movlw	1
 10367  021D                     u3075:	
 10368  021D  35B9               	lslf	___ftadd@f1,f
 10369  021E  0DBA               	rlf	___ftadd@f1+1,f
 10370  021F  0DBB               	rlf	___ftadd@f1+2,f
 10371  0220  0B89               	decfsz	9,f
 10372  0221  2A1D               	goto	u3075
 10373  0222  3001               	movlw	1
 10374  0223  02C5               	subwf	___ftadd@exp1,f
 10375  0224  0844               	movf	___ftadd@exp2,w
 10376  0225  0645               	xorwf	___ftadd@exp1,w
 10377  0226  1903               	skipnz
 10378  0227  2A39               	goto	l3827
 10379  0228  3001               	movlw	1
 10380  0229  02C3               	subwf	___ftadd@sign,f
 10381  022A  0843               	movf	___ftadd@sign,w
 10382  022B  3907               	andlw	7
 10383  022C  1903               	btfsc	3,2
 10384  022D  2A39               	goto	l3827
 10385  022E  2A1C               	goto	l3819
 10386  022F                     l3825:	
 10387  022F  3001               	movlw	1
 10388  0230                     u3105:	
 10389  0230  36BE               	lsrf	___ftadd@f2+2,f
 10390  0231  0CBD               	rrf	___ftadd@f2+1,f
 10391  0232  0CBC               	rrf	___ftadd@f2,f
 10392  0233  0B89               	decfsz	9,f
 10393  0234  2A30               	goto	u3105
 10394  0235  3001               	movlw	1
 10395  0236  00BF               	movwf	??___ftadd
 10396  0237  083F               	movf	??___ftadd,w
 10397  0238  07C4               	addwf	___ftadd@exp2,f
 10398  0239                     l3827:	
 10399  0239  0845               	movf	___ftadd@exp1,w
 10400  023A  0644               	xorwf	___ftadd@exp2,w
 10401  023B  1D03               	skipz
 10402  023C  2A2F               	goto	l3825
 10403  023D                     l1810:	
 10404  023D  1FC3               	btfss	___ftadd@sign,7
 10405  023E  2A4F               	goto	l3831
 10406  023F  30FF               	movlw	255
 10407  0240  06B9               	xorwf	___ftadd@f1,f
 10408  0241  30FF               	movlw	255
 10409  0242  06BA               	xorwf	___ftadd@f1+1,f
 10410  0243  30FF               	movlw	255
 10411  0244  06BB               	xorwf	___ftadd@f1+2,f
 10412  0245  3001               	movlw	1
 10413  0246  07B9               	addwf	___ftadd@f1,f
 10414  0247  3000               	movlw	0
 10415  0248  1803               	skipnc
 10416  0249  3001               	movlw	1
 10417  024A  07BA               	addwf	___ftadd@f1+1,f
 10418  024B  3000               	movlw	0
 10419  024C  1803               	skipnc
 10420  024D  3001               	movlw	1
 10421  024E  07BB               	addwf	___ftadd@f1+2,f
 10422  024F                     l3831:	
 10423  024F  1F43               	btfss	___ftadd@sign,6
 10424  0250  2A61               	goto	l3835
 10425  0251  30FF               	movlw	255
 10426  0252  06BC               	xorwf	___ftadd@f2,f
 10427  0253  30FF               	movlw	255
 10428  0254  06BD               	xorwf	___ftadd@f2+1,f
 10429  0255  30FF               	movlw	255
 10430  0256  06BE               	xorwf	___ftadd@f2+2,f
 10431  0257  3001               	movlw	1
 10432  0258  07BC               	addwf	___ftadd@f2,f
 10433  0259  3000               	movlw	0
 10434  025A  1803               	skipnc
 10435  025B  3001               	movlw	1
 10436  025C  07BD               	addwf	___ftadd@f2+1,f
 10437  025D  3000               	movlw	0
 10438  025E  1803               	skipnc
 10439  025F  3001               	movlw	1
 10440  0260  07BE               	addwf	___ftadd@f2+2,f
 10441  0261                     l3835:	
 10442  0261  01C3               	clrf	___ftadd@sign
 10443  0262  0839               	movf	___ftadd@f1,w
 10444  0263  07BC               	addwf	___ftadd@f2,f
 10445  0264  083A               	movf	___ftadd@f1+1,w
 10446  0265  3DBD               	addwfc	___ftadd@f2+1,f
 10447  0266  083B               	movf	___ftadd@f1+2,w
 10448  0267  3DBE               	addwfc	___ftadd@f2+2,f
 10449  0268  1FBE               	btfss	___ftadd@f2+2,7
 10450  0269  2A7C               	goto	l3845
 10451  026A  30FF               	movlw	255
 10452  026B  06BC               	xorwf	___ftadd@f2,f
 10453  026C  30FF               	movlw	255
 10454  026D  06BD               	xorwf	___ftadd@f2+1,f
 10455  026E  30FF               	movlw	255
 10456  026F  06BE               	xorwf	___ftadd@f2+2,f
 10457  0270  3001               	movlw	1
 10458  0271  07BC               	addwf	___ftadd@f2,f
 10459  0272  3000               	movlw	0
 10460  0273  1803               	skipnc
 10461  0274  3001               	movlw	1
 10462  0275  07BD               	addwf	___ftadd@f2+1,f
 10463  0276  3000               	movlw	0
 10464  0277  1803               	skipnc
 10465  0278  3001               	movlw	1
 10466  0279  07BE               	addwf	___ftadd@f2+2,f
 10467  027A  01C3               	clrf	___ftadd@sign
 10468  027B  0AC3               	incf	___ftadd@sign,f
 10469  027C                     l3845:	
 10470  027C  083C               	movf	___ftadd@f2,w
 10471  027D  00F2               	movwf	___ftpack@arg
 10472  027E  083D               	movf	___ftadd@f2+1,w
 10473  027F  00F3               	movwf	___ftpack@arg+1
 10474  0280  083E               	movf	___ftadd@f2+2,w
 10475  0281  00F4               	movwf	___ftpack@arg+2
 10476  0282  0845               	movf	___ftadd@exp1,w
 10477  0283  00BF               	movwf	??___ftadd
 10478  0284  083F               	movf	??___ftadd,w
 10479  0285  00F5               	movwf	___ftpack@exp
 10480  0286  0843               	movf	___ftadd@sign,w
 10481  0287  00C0               	movwf	??___ftadd+1
 10482  0288  0840               	movf	??___ftadd+1,w
 10483  0289  00F6               	movwf	___ftpack@sign
 10484  028A  318F  27A0         	fcall	___ftpack
 10485  028C  0872               	movf	?___ftpack,w
 10486  028D  0020               	movlb	0	; select bank0
 10487  028E  00B9               	movwf	?___ftadd
 10488  028F  0873               	movf	?___ftpack+1,w
 10489  0290  00BA               	movwf	?___ftadd+1
 10490  0291  0874               	movf	?___ftpack+2,w
 10491  0292  00BB               	movwf	?___ftadd+2
 10492  0293  0008               	return
 10493  0294                     __end_of___ftadd:	
 10494                           
 10495                           	psect	text70
 10496  0AB5                     __ptext70:	
 10497 ;; *************** function ___awtoft *****************
 10498 ;; Defined at:
 10499 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  c               2    0[BANK0 ] int 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  sign            1    5[BANK0 ] unsigned char 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  3    0[BANK0 ] float 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2, status,0, pclath, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10513 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;Total ram usage:        6 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    4
 10520 ;; This function calls:
 10521 ;;		___ftpack
 10522 ;; This function is called by:
 10523 ;;		_getDimmerLights_PercentToValue
 10524 ;;		_getDimmerLights_ValueToPercent
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           
 10529                           ;psect for function ___awtoft
 10530  0AB5                     ___awtoft:	
 10531                           
 10532                           ;incstack = 0
 10533                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 10534  0AB5  0020               	movlb	0	; select bank0
 10535  0AB6  01A5               	clrf	___awtoft@sign
 10536  0AB7  1FA1               	btfss	___awtoft@c+1,7
 10537  0AB8  2AC0               	goto	l5337
 10538  0AB9  09A0               	comf	___awtoft@c,f
 10539  0ABA  09A1               	comf	___awtoft@c+1,f
 10540  0ABB  0AA0               	incf	___awtoft@c,f
 10541  0ABC  1903               	skipnz
 10542  0ABD  0AA1               	incf	___awtoft@c+1,f
 10543  0ABE  01A5               	clrf	___awtoft@sign
 10544  0ABF  0AA5               	incf	___awtoft@sign,f
 10545  0AC0                     l5337:	
 10546  0AC0  0820               	movf	___awtoft@c,w
 10547  0AC1  00F2               	movwf	___ftpack@arg
 10548  0AC2  0821               	movf	___awtoft@c+1,w
 10549  0AC3  00F3               	movwf	___ftpack@arg+1
 10550  0AC4  01F4               	clrf	___ftpack@arg+2
 10551  0AC5  308E               	movlw	142
 10552  0AC6  00A3               	movwf	??___awtoft
 10553  0AC7  0823               	movf	??___awtoft,w
 10554  0AC8  00F5               	movwf	___ftpack@exp
 10555  0AC9  0825               	movf	___awtoft@sign,w
 10556  0ACA  00A4               	movwf	??___awtoft+1
 10557  0ACB  0824               	movf	??___awtoft+1,w
 10558  0ACC  00F6               	movwf	___ftpack@sign
 10559  0ACD  318F  27A0         	fcall	___ftpack
 10560  0ACF  0872               	movf	?___ftpack,w
 10561  0AD0  0020               	movlb	0	; select bank0
 10562  0AD1  00A0               	movwf	?___awtoft
 10563  0AD2  0873               	movf	?___ftpack+1,w
 10564  0AD3  00A1               	movwf	?___awtoft+1
 10565  0AD4  0874               	movf	?___ftpack+2,w
 10566  0AD5  00A2               	movwf	?___awtoft+2
 10567  0AD6  0008               	return
 10568  0AD7                     __end_of___awtoft:	
 10569                           
 10570                           	psect	text71
 10571  0FA0                     __ptext71:	
 10572 ;; *************** function ___ftpack *****************
 10573 ;; Defined at:
 10574 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  arg             3    2[COMMON] unsigned um
 10577 ;;  exp             1    5[COMMON] unsigned char 
 10578 ;;  sign            1    6[COMMON] unsigned char 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  3    2[COMMON] float 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10590 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;Total ram usage:        8 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    3
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		___awtoft
 10601 ;;		___ftadd
 10602 ;;		___ftdiv
 10603 ;;		___ftmul
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           
 10608                           ;psect for function ___ftpack
 10609  0FA0                     ___ftpack:	
 10610                           
 10611                           ;incstack = 0
 10612                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 10613  0FA0  0875               	movf	___ftpack@exp,w
 10614  0FA1  1903               	btfsc	3,2
 10615  0FA2  2FA8               	goto	l3633
 10616  0FA3  0874               	movf	___ftpack@arg+2,w
 10617  0FA4  0473               	iorwf	___ftpack@arg+1,w
 10618  0FA5  0472               	iorwf	___ftpack@arg,w
 10619  0FA6  1D03               	skipz
 10620  0FA7  2FB9               	goto	l3639
 10621  0FA8                     l3633:	
 10622  0FA8  3000               	movlw	0
 10623  0FA9  00F2               	movwf	?___ftpack
 10624  0FAA  3000               	movlw	0
 10625  0FAB  00F3               	movwf	?___ftpack+1
 10626  0FAC  3000               	movlw	0
 10627  0FAD  00F4               	movwf	?___ftpack+2
 10628  0FAE  0008               	return
 10629  0FAF                     l3637:	
 10630  0FAF  3001               	movlw	1
 10631  0FB0  00F7               	movwf	??___ftpack
 10632  0FB1  0877               	movf	??___ftpack,w
 10633  0FB2  07F5               	addwf	___ftpack@exp,f
 10634  0FB3  3001               	movlw	1
 10635  0FB4                     u2635:	
 10636  0FB4  36F4               	lsrf	___ftpack@arg+2,f
 10637  0FB5  0CF3               	rrf	___ftpack@arg+1,f
 10638  0FB6  0CF2               	rrf	___ftpack@arg,f
 10639  0FB7  0B89               	decfsz	9,f
 10640  0FB8  2FB4               	goto	u2635
 10641  0FB9                     l3639:	
 10642  0FB9  30FE               	movlw	254
 10643  0FBA  0574               	andwf	___ftpack@arg+2,w
 10644  0FBB  1903               	btfsc	3,2
 10645  0FBC  2FD2               	goto	l1781
 10646  0FBD  2FAF               	goto	l3637
 10647  0FBE                     l3641:	
 10648  0FBE  3001               	movlw	1
 10649  0FBF  00F7               	movwf	??___ftpack
 10650  0FC0  0877               	movf	??___ftpack,w
 10651  0FC1  07F5               	addwf	___ftpack@exp,f
 10652  0FC2  3001               	movlw	1
 10653  0FC3  07F2               	addwf	___ftpack@arg,f
 10654  0FC4  3000               	movlw	0
 10655  0FC5  1803               	skipnc
 10656  0FC6  3001               	movlw	1
 10657  0FC7  07F3               	addwf	___ftpack@arg+1,f
 10658  0FC8  3000               	movlw	0
 10659  0FC9  1803               	skipnc
 10660  0FCA  3001               	movlw	1
 10661  0FCB  07F4               	addwf	___ftpack@arg+2,f
 10662  0FCC  3001               	movlw	1
 10663  0FCD                     u2655:	
 10664  0FCD  36F4               	lsrf	___ftpack@arg+2,f
 10665  0FCE  0CF3               	rrf	___ftpack@arg+1,f
 10666  0FCF  0CF2               	rrf	___ftpack@arg,f
 10667  0FD0  0B89               	decfsz	9,f
 10668  0FD1  2FCD               	goto	u2655
 10669  0FD2                     l1781:	
 10670  0FD2  30FF               	movlw	255
 10671  0FD3  0574               	andwf	___ftpack@arg+2,w
 10672  0FD4  1903               	btfsc	3,2
 10673  0FD5  2FDF               	goto	l3649
 10674  0FD6  2FBE               	goto	l3641
 10675  0FD7                     l3647:	
 10676  0FD7  3001               	movlw	1
 10677  0FD8  02F5               	subwf	___ftpack@exp,f
 10678  0FD9  3001               	movlw	1
 10679  0FDA                     u2675:	
 10680  0FDA  35F2               	lslf	___ftpack@arg,f
 10681  0FDB  0DF3               	rlf	___ftpack@arg+1,f
 10682  0FDC  0DF4               	rlf	___ftpack@arg+2,f
 10683  0FDD  0B89               	decfsz	9,f
 10684  0FDE  2FDA               	goto	u2675
 10685  0FDF                     l3649:	
 10686  0FDF  1FF3               	btfss	___ftpack@arg+1,7
 10687  0FE0  2FD7               	goto	l3647
 10688  0FE1  1875               	btfsc	___ftpack@exp,0
 10689  0FE2  2FE9               	goto	l1787
 10690  0FE3  30FF               	movlw	255
 10691  0FE4  05F2               	andwf	___ftpack@arg,f
 10692  0FE5  307F               	movlw	127
 10693  0FE6  05F3               	andwf	___ftpack@arg+1,f
 10694  0FE7  30FF               	movlw	255
 10695  0FE8  05F4               	andwf	___ftpack@arg+2,f
 10696  0FE9                     l1787:	
 10697  0FE9  1003               	clrc
 10698  0FEA  0CF5               	rrf	___ftpack@exp,f
 10699  0FEB  0875               	movf	___ftpack@exp,w
 10700  0FEC  00F7               	movwf	??___ftpack
 10701  0FED  01F8               	clrf	??___ftpack+1
 10702  0FEE  01F9               	clrf	??___ftpack+2
 10703  0FEF  3010               	movlw	16
 10704  0FF0                     u2705:	
 10705  0FF0  35F7               	lslf	??___ftpack,f
 10706  0FF1  0DF8               	rlf	??___ftpack+1,f
 10707  0FF2  0DF9               	rlf	??___ftpack+2,f
 10708  0FF3  0B89               	decfsz	9,f
 10709  0FF4  2FF0               	goto	u2705
 10710  0FF5  0877               	movf	??___ftpack,w
 10711  0FF6  04F2               	iorwf	___ftpack@arg,f
 10712  0FF7  0878               	movf	??___ftpack+1,w
 10713  0FF8  04F3               	iorwf	___ftpack@arg+1,f
 10714  0FF9  0879               	movf	??___ftpack+2,w
 10715  0FFA  04F4               	iorwf	___ftpack@arg+2,f
 10716  0FFB  0876               	movf	___ftpack@sign,w
 10717  0FFC  1903               	btfsc	3,2
 10718  0FFD  0008               	return
 10719  0FFE  17F4               	bsf	___ftpack@arg+2,7
 10720  0FFF  0008               	return
 10721  1000                     __end_of___ftpack:	
 10722                           
 10723                           	psect	text72
 10724  08FA                     __ptext72:	
 10725 ;; *************** function _Division *****************
 10726 ;; Defined at:
 10727 ;;		line 2397 in file "../src/Dimmer_B1.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  value           1    wreg     unsigned char 
 10730 ;;  num             1    7[COMMON] unsigned char 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  value           1    0[BANK0 ] unsigned char 
 10733 ;;  result          1    1[BANK0 ] unsigned char 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      unsigned char 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0, pclath, cstack
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10743 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;Total ram usage:        5 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; Hardware stack levels required when called:    4
 10750 ;; This function calls:
 10751 ;;		___lbdiv
 10752 ;; This function is called by:
 10753 ;;		_DimmerIntr_Initialization
 10754 ;;		_DimmerIntr_ValueCalculate
 10755 ;; This function uses a non-reentrant model
 10756 ;;
 10757                           
 10758                           
 10759                           ;psect for function _Division
 10760  08FA                     _Division:	
 10761                           
 10762                           ;incstack = 0
 10763                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
 10764                           ;Division@value stored from wreg
 10765  08FA  0020               	movlb	0	; select bank0
 10766  08FB  00A0               	movwf	Division@value
 10767                           
 10768                           ;Dimmer_B1.c: 2398: char result = (char) (value / num);
 10769  08FC  0877               	movf	Division@num,w
 10770  08FD  00F8               	movwf	??_Division
 10771  08FE  0878               	movf	??_Division,w
 10772  08FF  00F2               	movwf	___lbdiv@divisor
 10773  0900  0820               	movf	Division@value,w
 10774  0901  318A  2273         	fcall	___lbdiv
 10775  0903  00F9               	movwf	??_Division+1
 10776  0904  0879               	movf	??_Division+1,w
 10777  0905  0020               	movlb	0	; select bank0
 10778  0906  00A1               	movwf	Division@result
 10779                           
 10780                           ;Dimmer_B1.c: 2399: return result;
 10781  0907  0821               	movf	Division@result,w
 10782  0908  0008               	return
 10783  0909                     __end_of_Division:	
 10784                           
 10785                           	psect	text73
 10786  0A73                     __ptext73:	
 10787 ;; *************** function ___lbdiv *****************
 10788 ;; Defined at:
 10789 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  dividend        1    wreg     unsigned char 
 10792 ;;  divisor         1    2[COMMON] unsigned char 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;  dividend        1    4[COMMON] unsigned char 
 10795 ;;  quotient        1    6[COMMON] unsigned char 
 10796 ;;  counter         1    5[COMMON] unsigned char 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  1    wreg      unsigned char 
 10799 ;; Registers used:
 10800 ;;		wreg, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        5 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    3
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_Division
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           
 10821                           ;psect for function ___lbdiv
 10822  0A73                     ___lbdiv:	
 10823                           
 10824                           ;incstack = 0
 10825                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 10826                           ;___lbdiv@dividend stored from wreg
 10827  0A73  00F4               	movwf	___lbdiv@dividend
 10828  0A74  01F6               	clrf	___lbdiv@quotient
 10829  0A75  0872               	movf	___lbdiv@divisor,w
 10830  0A76  1903               	btfsc	3,2
 10831  0A77  2A92               	goto	l5271
 10832  0A78  01F5               	clrf	___lbdiv@counter
 10833  0A79  0AF5               	incf	___lbdiv@counter,f
 10834  0A7A                     l5259:	
 10835  0A7A  1BF2               	btfsc	___lbdiv@divisor,7
 10836  0A7B  2A83               	goto	l5261
 10837  0A7C  1003               	clrc
 10838  0A7D  0DF2               	rlf	___lbdiv@divisor,f
 10839  0A7E  3001               	movlw	1
 10840  0A7F  00F3               	movwf	??___lbdiv
 10841  0A80  0873               	movf	??___lbdiv,w
 10842  0A81  07F5               	addwf	___lbdiv@counter,f
 10843  0A82  2A7A               	goto	l5259
 10844  0A83                     l5261:	
 10845  0A83  1003               	clrc
 10846  0A84  0DF6               	rlf	___lbdiv@quotient,f
 10847  0A85  0872               	movf	___lbdiv@divisor,w
 10848  0A86  0274               	subwf	___lbdiv@dividend,w
 10849  0A87  1C03               	skipc
 10850  0A88  2A8D               	goto	L1
 10851  0A89  0872               	movf	___lbdiv@divisor,w
 10852  0A8A  02F4               	subwf	___lbdiv@dividend,f
 10853  0A8B  1476               	bsf	___lbdiv@quotient,0
 10854  0A8C  1003               	clrc
 10855  0A8D                     L1:	
 10856  0A8D  0CF2               	rrf	___lbdiv@divisor,f
 10857  0A8E  3001               	movlw	1
 10858  0A8F  02F5               	subwf	___lbdiv@counter,f
 10859  0A90  1D03               	btfss	3,2
 10860  0A91  2A83               	goto	l5261
 10861  0A92                     l5271:	
 10862  0A92  0876               	movf	___lbdiv@quotient,w
 10863  0A93  0008               	return
 10864  0A94                     __end_of___lbdiv:	
 10865                           
 10866                           	psect	text74
 10867  17BC                     __ptext74:	
 10868 ;; *************** function _DelayOff_Main *****************
 10869 ;; Defined at:
 10870 ;;		line 41 in file "../src/DelayOff_B1.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;		None
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;		None               void
 10877 ;; Registers used:
 10878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;Total ram usage:        0 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; Hardware stack levels required when called:    7
 10891 ;; This function calls:
 10892 ;;		_DlyOff_Main
 10893 ;; This function is called by:
 10894 ;;		_main
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           
 10899                           ;psect for function _DelayOff_Main
 10900  17BC                     _DelayOff_Main:	
 10901                           
 10902                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 10903                           
 10904                           ;incstack = 0
 10905                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10906  17BC  3001               	movlw	1
 10907  17BD  318F  2741         	fcall	_DlyOff_Main
 10908  17BF  0008               	return
 10909  17C0                     __end_of_DelayOff_Main:	
 10910                           
 10911                           	psect	text75
 10912  0F41                     __ptext75:	
 10913 ;; *************** function _DlyOff_Main *****************
 10914 ;; Defined at:
 10915 ;;		line 61 in file "../src/DelayOff_B1.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  sw              1    wreg     unsigned char 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  sw              1   63[BANK0 ] unsigned char 
 10920 ;; Return value:  Size  Location     Type
 10921 ;;		None               void
 10922 ;; Registers used:
 10923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;Total ram usage:        3 bytes
 10934 ;; Hardware stack levels used:    1
 10935 ;; Hardware stack levels required when called:    6
 10936 ;; This function calls:
 10937 ;;		_DelayOffPointSelect
 10938 ;;		_getDimmerLights_Status
 10939 ;;		_setDimmerLights_SwOff
 10940 ;;		_setDimmerLights_SwOn
 10941 ;;		_setProductData
 10942 ;; This function is called by:
 10943 ;;		_DelayOff_Main
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           
 10948                           ;psect for function _DlyOff_Main
 10949  0F41                     _DlyOff_Main:	
 10950                           
 10951                           ;incstack = 0
 10952                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10953                           ;DlyOff_Main@sw stored from wreg
 10954  0F41  0020               	movlb	0	; select bank0
 10955  0F42  00DF               	movwf	DlyOff_Main@sw
 10956                           
 10957                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 10958  0F43  085F               	movf	DlyOff_Main@sw,w
 10959  0F44  3188  2035  318F   	fcall	_DelayOffPointSelect
 10960                           
 10961                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 10962  0F47  0020               	movlb	0	; select bank0
 10963  0F48  086A               	movf	_DelayOff,w
 10964  0F49  0086               	movwf	6
 10965  0F4A  0187               	clrf	7
 10966  0F4B  1C81               	btfss	1,1
 10967  0F4C  0008               	return
 10968                           
 10969                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 10970  0F4D  086A               	movf	_DelayOff,w
 10971  0F4E  3E02               	addlw	2
 10972  0F4F  0086               	movwf	6
 10973  0F50  0187               	clrf	7
 10974  0F51  3001               	movlw	1
 10975  0F52  0781               	addwf	1,f
 10976  0F53  3141               	addfsr 1,1
 10977  0F54  1803               	skipnc
 10978  0F55  0A81               	incf	1,f
 10979                           
 10980                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 10981  0F56  086A               	movf	_DelayOff,w
 10982  0F57  3E02               	addlw	2
 10983  0F58  0086               	movwf	6
 10984  0F59  0187               	clrf	7
 10985  0F5A  3F40               	moviw [0]fsr1
 10986  0F5B  00DD               	movwf	??_DlyOff_Main
 10987  0F5C  3F41               	moviw [1]fsr1
 10988  0F5D  00DE               	movwf	??_DlyOff_Main+1
 10989  0F5E  3009               	movlw	9
 10990  0F5F  025E               	subwf	??_DlyOff_Main+1,w
 10991  0F60  30C4               	movlw	196
 10992  0F61  1903               	skipnz
 10993  0F62  025D               	subwf	??_DlyOff_Main,w
 10994  0F63  1C03               	skipc
 10995  0F64  0008               	return
 10996                           
 10997                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 10998  0F65  086A               	movf	_DelayOff,w
 10999  0F66  3E02               	addlw	2
 11000  0F67  0086               	movwf	6
 11001  0F68  0187               	clrf	7
 11002  0F69  3000               	movlw	0
 11003  0F6A  3FC0               	movwi [0]fsr1
 11004  0F6B  3FC1               	movwi [1]fsr1
 11005                           
 11006                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 11007  0F6C  3001               	movlw	1
 11008  0F6D  00DD               	movwf	??_DlyOff_Main
 11009  0F6E  086A               	movf	_DelayOff,w
 11010  0F6F  3E04               	addlw	4
 11011  0F70  0086               	movwf	6
 11012  0F71  0187               	clrf	7
 11013  0F72  085D               	movf	??_DlyOff_Main,w
 11014  0F73  0781               	addwf	1,f
 11015                           
 11016                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 11017  0F74  086A               	movf	_DelayOff,w
 11018  0F75  3E04               	addlw	4
 11019  0F76  0086               	movwf	6
 11020  0F77  0187               	clrf	7
 11021  0F78  0A6A               	incf	_DelayOff,w
 11022  0F79  0084               	movwf	4
 11023  0F7A  0185               	clrf	5
 11024  0F7B  0800               	movf	0,w
 11025  0F7C  0201               	subwf	1,w
 11026  0F7D  1C03               	skipc
 11027  0F7E  0008               	return
 11028                           
 11029                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 11030  0F7F  086A               	movf	_DelayOff,w
 11031  0F80  3E04               	addlw	4
 11032  0F81  0086               	movwf	6
 11033  0F82  0187               	clrf	7
 11034  0F83  0181               	clrf	1
 11035                           
 11036                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 11037  0F84  086A               	movf	_DelayOff,w
 11038  0F85  0086               	movwf	6
 11039  0F86  0187               	clrf	7
 11040  0F87  1081               	bcf	1,1
 11041                           
 11042                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 11043  0F88  085F               	movf	DlyOff_Main@sw,w
 11044  0F89  3188  20C2  318F   	fcall	_getDimmerLights_Status
 11045  0F8C  3A01               	xorlw	1
 11046  0F8D  1D03               	skipz
 11047  0F8E  2F99               	goto	l240
 11048                           
 11049                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 11050  0F8F  0020               	movlb	0	; select bank0
 11051  0F90  085F               	movf	DlyOff_Main@sw,w
 11052  0F91  318D  254E  318F   	fcall	_setDimmerLights_SwOn
 11053                           
 11054                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 11055  0F94  0020               	movlb	0	; select bank0
 11056  0F95  085F               	movf	DlyOff_Main@sw,w
 11057  0F96  318B  235B  318F   	fcall	_setDimmerLights_SwOff
 11058  0F99                     l240:	
 11059                           
 11060                           ;DelayOff_B1.c: 78: }
 11061                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 11062  0F99  0020               	movlb	0	; select bank0
 11063  0F9A  01DA               	clrf	setProductData@value
 11064  0F9B  085F               	movf	DlyOff_Main@sw,w
 11065  0F9C  3E1A               	addlw	26
 11066  0F9D  3188  206C         	fcall	_setProductData
 11067  0F9F  0008               	return
 11068  0FA0                     __end_of_DlyOff_Main:	
 11069                           
 11070                           	psect	text76
 11071  086C                     __ptext76:	
 11072 ;; *************** function _setProductData *****************
 11073 ;; Defined at:
 11074 ;;		line 649 in file "../src/Main_B1.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  address         1    wreg     unsigned char 
 11077 ;;  value           1   58[BANK0 ] unsigned char 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  address         1   60[BANK0 ] unsigned char 
 11080 ;; Return value:  Size  Location     Type
 11081 ;;		None               void
 11082 ;; Registers used:
 11083 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11089 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;Total ram usage:        3 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    3
 11096 ;; This function calls:
 11097 ;;		Nothing
 11098 ;; This function is called by:
 11099 ;;		_DlyOff_Main
 11100 ;;		_setDelayOff_GO
 11101 ;;		_setDimmerLights_OnOff
 11102 ;;		_setDimmerLights_Dimming
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           
 11107                           ;psect for function _setProductData
 11108  086C                     _setProductData:	
 11109                           
 11110                           ;incstack = 0
 11111                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 11112                           ;setProductData@address stored from wreg
 11113  086C  0020               	movlb	0	; select bank0
 11114  086D  00DC               	movwf	setProductData@address
 11115                           
 11116                           ;Main_B1.c: 650: _product.Data[address] = value;
 11117  086E  085A               	movf	setProductData@value,w
 11118  086F  00DB               	movwf	??_setProductData
 11119  0870  085C               	movf	setProductData@address,w
 11120  0871  3EA0               	addlw	__product& (0+255)
 11121  0872  0086               	movwf	6
 11122  0873  3001               	movlw	1	; select bank3/4
 11123  0874  0087               	movwf	7
 11124  0875  085B               	movf	??_setProductData,w
 11125  0876  0081               	movwf	1
 11126  0877  0008               	return
 11127  0878                     __end_of_setProductData:	
 11128                           
 11129                           	psect	text77
 11130  0D4E                     __ptext77:	
 11131 ;; *************** function _setDimmerLights_SwOn *****************
 11132 ;; Defined at:
 11133 ;;		line 761 in file "../src/Dimmer_B1.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  sw              1    wreg     unsigned char 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;  sw              1    8[BANK0 ] unsigned char 
 11138 ;;  dimmingStatu    1    7[BANK0 ] unsigned char 
 11139 ;;  idle            1    6[BANK0 ] unsigned char 
 11140 ;; Return value:  Size  Location     Type
 11141 ;;		None               void
 11142 ;; Registers used:
 11143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;Total ram usage:        4 bytes
 11154 ;; Hardware stack levels used:    1
 11155 ;; Hardware stack levels required when called:    5
 11156 ;; This function calls:
 11157 ;;		_DimmerLights_SelectPointer
 11158 ;;		_getDimmerIntr_Dimming_Sw
 11159 ;;		_setBuz
 11160 ;; This function is called by:
 11161 ;;		_DlyOff_Main
 11162 ;;		_setSw_Main
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           
 11167                           ;psect for function _setDimmerLights_SwOn
 11168  0D4E                     _setDimmerLights_SwOn:	
 11169                           
 11170                           ;incstack = 0
 11171                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11172                           ;setDimmerLights_SwOn@sw stored from wreg
 11173  0D4E  0020               	movlb	0	; select bank0
 11174  0D4F  00A8               	movwf	setDimmerLights_SwOn@sw
 11175                           
 11176                           ;Dimmer_B1.c: 762: char idle = 0;
 11177  0D50  01A6               	clrf	setDimmerLights_SwOn@idle
 11178                           
 11179                           ;Dimmer_B1.c: 764: char dimmingStatus = 0;
 11180  0D51  01A7               	clrf	setDimmerLights_SwOn@dimmingStatus
 11181                           
 11182                           ;Dimmer_B1.c: 765: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 11183  0D52  0828               	movf	setDimmerLights_SwOn@sw,w
 11184  0D53  3188  20A8  318D   	fcall	_getDimmerIntr_Dimming_Sw
 11185  0D56  00F9               	movwf	??_setDimmerLights_SwOn
 11186  0D57  0879               	movf	??_setDimmerLights_SwOn,w
 11187  0D58  0020               	movlb	0	; select bank0
 11188  0D59  00A7               	movwf	setDimmerLights_SwOn@dimmingStatus
 11189                           
 11190                           ;Dimmer_B1.c: 792: DimmerLights_SelectPointer(sw);
 11191  0D5A  0828               	movf	setDimmerLights_SwOn@sw,w
 11192  0D5B  3188  2040  318D   	fcall	_DimmerLights_SelectPointer
 11193                           
 11194                           ;Dimmer_B1.c: 793: if (idle == 0) {
 11195  0D5E  0020               	movlb	0	; select bank0
 11196  0D5F  08A6               	movf	setDimmerLights_SwOn@idle,f
 11197  0D60  1D03               	skipz
 11198  0D61  0008               	return
 11199                           
 11200                           ;Dimmer_B1.c: 795: if (dimmingStatus == 0) {
 11201  0D62  08A7               	movf	setDimmerLights_SwOn@dimmingStatus,f
 11202  0D63  1D03               	skipz
 11203  0D64  2D80               	goto	l5451
 11204                           
 11205                           ;Dimmer_B1.c: 796: DimmerLights->SwFlag = 1;
 11206  0D65  086B               	movf	_DimmerLights,w
 11207  0D66  0086               	movwf	6
 11208  0D67  0187               	clrf	7
 11209  0D68  1401               	bsf	1,0
 11210                           
 11211                           ;Dimmer_B1.c: 797: if (DimmerLights->Status == 0) {
 11212  0D69  0A6B               	incf	_DimmerLights,w
 11213  0D6A  0086               	movwf	6
 11214  0D6B  0187               	clrf	7
 11215  0D6C  1801               	btfsc	1,0
 11216  0D6D  2D7B               	goto	l5449
 11217                           
 11218                           ;Dimmer_B1.c: 798: DimmerLights->Status = 1;
 11219  0D6E  0A6B               	incf	_DimmerLights,w
 11220  0D6F  0086               	movwf	6
 11221  0D70  0187               	clrf	7
 11222  0D71  1401               	bsf	1,0
 11223                           
 11224                           ;Dimmer_B1.c: 801: DimmerLights->Trigger = 1;
 11225  0D72  086B               	movf	_DimmerLights,w
 11226  0D73  0086               	movwf	6
 11227  0D74  0187               	clrf	7
 11228  0D75  1481               	bsf	1,1
 11229                           
 11230                           ;Dimmer_B1.c: 802: DimmerLights->Switch = 1;
 11231  0D76  086B               	movf	_DimmerLights,w
 11232  0D77  0086               	movwf	6
 11233  0D78  0187               	clrf	7
 11234  0D79  1501               	bsf	1,2
 11235                           
 11236                           ;Dimmer_B1.c: 809: } else {
 11237  0D7A  2D88               	goto	l5453
 11238  0D7B                     l5449:	
 11239                           
 11240                           ;Dimmer_B1.c: 810: DimmerLights->Status = 0;
 11241  0D7B  0A6B               	incf	_DimmerLights,w
 11242  0D7C  0086               	movwf	6
 11243  0D7D  0187               	clrf	7
 11244  0D7E  1001               	bcf	1,0
 11245                           
 11246                           ;Dimmer_B1.c: 811: }
 11247                           ;Dimmer_B1.c: 812: } else {
 11248  0D7F  2D88               	goto	l5453
 11249  0D80                     l5451:	
 11250                           
 11251                           ;Dimmer_B1.c: 813: DimmerLights->DimmingTrigger = 1;
 11252  0D80  086B               	movf	_DimmerLights,w
 11253  0D81  0086               	movwf	6
 11254  0D82  0187               	clrf	7
 11255  0D83  1601               	bsf	1,4
 11256                           
 11257                           ;Dimmer_B1.c: 814: DimmerLights->DimmingSwitch = 0;
 11258  0D84  086B               	movf	_DimmerLights,w
 11259  0D85  0086               	movwf	6
 11260  0D86  0187               	clrf	7
 11261  0D87  1281               	bcf	1,5
 11262  0D88                     l5453:	
 11263                           
 11264                           ;Dimmer_B1.c: 815: }
 11265                           ;Dimmer_B1.c: 816: setBuz(1, 100);
 11266  0D88  3064               	movlw	100
 11267  0D89  00A4               	movwf	setBuz@time
 11268  0D8A  3000               	movlw	0
 11269  0D8B  00A5               	movwf	setBuz@time+1
 11270  0D8C  3001               	movlw	1
 11271  0D8D  318D  2590         	fcall	_setBuz
 11272  0D8F  0008               	return
 11273  0D90                     __end_of_setDimmerLights_SwOn:	
 11274                           
 11275                           	psect	text78
 11276  0D90                     __ptext78:	
 11277 ;; *************** function _setBuz *****************
 11278 ;; Defined at:
 11279 ;;		line 22 in file "../src/Buzzer_B1.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  count           1    wreg     unsigned char 
 11282 ;;  time            2    4[BANK0 ] int 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  count           1    8[COMMON] unsigned char 
 11285 ;; Return value:  Size  Location     Type
 11286 ;;		None               void
 11287 ;; Registers used:
 11288 ;;		wreg, status,2, status,0, pclath, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;Total ram usage:        4 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    4
 11301 ;; This function calls:
 11302 ;;		___awdiv
 11303 ;; This function is called by:
 11304 ;;		_setDimmerLights_SwOn
 11305 ;;		_setDimmerLights_Dimming
 11306 ;;		_my_MainTimer
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           
 11311                           ;psect for function _setBuz
 11312  0D90                     _setBuz:	
 11313                           
 11314                           ;incstack = 0
 11315                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 11316                           ;setBuz@count stored from wreg
 11317  0D90  00F8               	movwf	setBuz@count
 11318                           
 11319                           ;Buzzer_B1.c: 23: time /= 20;
 11320  0D91  3014               	movlw	20
 11321  0D92  00F2               	movwf	___awdiv@divisor
 11322  0D93  3000               	movlw	0
 11323  0D94  00F3               	movwf	___awdiv@divisor+1
 11324  0D95  0020               	movlb	0	; select bank0
 11325  0D96  0825               	movf	setBuz@time+1,w
 11326  0D97  01F5               	clrf	___awdiv@dividend+1
 11327  0D98  07F5               	addwf	___awdiv@dividend+1,f
 11328  0D99  0824               	movf	setBuz@time,w
 11329  0D9A  01F4               	clrf	___awdiv@dividend
 11330  0D9B  07F4               	addwf	___awdiv@dividend,f
 11331  0D9C  318E  2636  318D   	fcall	___awdiv
 11332  0D9F  0873               	movf	?___awdiv+1,w
 11333  0DA0  0020               	movlb	0	; select bank0
 11334  0DA1  01A5               	clrf	setBuz@time+1
 11335  0DA2  07A5               	addwf	setBuz@time+1,f
 11336  0DA3  0872               	movf	?___awdiv,w
 11337  0DA4  01A4               	clrf	setBuz@time
 11338  0DA5  07A4               	addwf	setBuz@time,f
 11339                           
 11340                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 11341  0DA6  0021               	movlb	1	; select bank1
 11342  0DA7  1C3D               	btfss	_Buz1^(0+128),0
 11343  0DA8  0008               	return
 11344                           
 11345                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 11346  0DA9  18BD               	btfsc	_Buz1^(0+128),1
 11347  0DAA  2DBF               	goto	l56
 11348                           
 11349                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 11350  0DAB  14BD               	bsf	_Buz1^(0+128),1
 11351                           
 11352                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 11353  0DAC  01BE               	clrf	(_Buz1^(0+128)+1)
 11354  0DAD  01BF               	clrf	((_Buz1+1)^(0+128)+1)
 11355                           
 11356                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 11357  0DAE  0878               	movf	setBuz@count,w
 11358  0DAF  00F7               	movwf	??_setBuz
 11359  0DB0  0877               	movf	??_setBuz,w
 11360  0DB1  00C0               	movwf	(_Buz1^(0+128)+3)
 11361                           
 11362                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 11363  0DB2  0020               	movlb	0	; select bank0
 11364  0DB3  0825               	movf	setBuz@time+1,w
 11365  0DB4  0021               	movlb	1	; select bank1
 11366  0DB5  01C4               	clrf	((_Buz1+1)^(0+128)+6)
 11367  0DB6  07C4               	addwf	((_Buz1+1)^(0+128)+6),f
 11368  0DB7  0020               	movlb	0	; select bank0
 11369  0DB8  0824               	movf	setBuz@time,w
 11370  0DB9  0021               	movlb	1	; select bank1
 11371  0DBA  01C3               	clrf	(_Buz1^(0+128)+6)
 11372  0DBB  07C3               	addwf	(_Buz1^(0+128)+6),f
 11373                           
 11374                           ;Buzzer_B1.c: 30: RB3 = 1;
 11375  0DBC  0020               	movlb	0	; select bank0
 11376  0DBD  158D               	bsf	13,3	;volatile
 11377                           
 11378                           ;Buzzer_B1.c: 31: } else {
 11379  0DBE  0008               	return
 11380  0DBF                     l56:	
 11381                           
 11382                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 11383  0DBF  19BD               	btfsc	_Buz1^(0+128),3
 11384  0DC0  2DD1               	goto	l58
 11385                           
 11386                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 11387  0DC1  15BD               	bsf	_Buz1^(0+128),3
 11388                           
 11389                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 11390  0DC2  0878               	movf	setBuz@count,w
 11391  0DC3  00F7               	movwf	??_setBuz
 11392  0DC4  0877               	movf	??_setBuz,w
 11393  0DC5  00C1               	movwf	(_Buz1^(0+128)+4)
 11394                           
 11395                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 11396  0DC6  0020               	movlb	0	; select bank0
 11397  0DC7  0825               	movf	setBuz@time+1,w
 11398  0DC8  0021               	movlb	1	; select bank1
 11399  0DC9  01C6               	clrf	((_Buz1+1)^(0+128)+8)
 11400  0DCA  07C6               	addwf	((_Buz1+1)^(0+128)+8),f
 11401  0DCB  0020               	movlb	0	; select bank0
 11402  0DCC  0824               	movf	setBuz@time,w
 11403  0DCD  0021               	movlb	1	; select bank1
 11404  0DCE  01C5               	clrf	(_Buz1^(0+128)+8)
 11405  0DCF  07C5               	addwf	(_Buz1^(0+128)+8),f
 11406                           
 11407                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 11408  0DD0  0008               	return
 11409  0DD1                     l58:	
 11410  0DD1  1A3D               	btfsc	_Buz1^(0+128),4
 11411  0DD2  0008               	return
 11412                           
 11413                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 11414  0DD3  163D               	bsf	_Buz1^(0+128),4
 11415                           
 11416                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 11417  0DD4  0878               	movf	setBuz@count,w
 11418  0DD5  00F7               	movwf	??_setBuz
 11419  0DD6  0877               	movf	??_setBuz,w
 11420  0DD7  00C2               	movwf	(_Buz1^(0+128)+5)
 11421                           
 11422                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 11423  0DD8  0020               	movlb	0	; select bank0
 11424  0DD9  0825               	movf	setBuz@time+1,w
 11425  0DDA  0021               	movlb	1	; select bank1
 11426  0DDB  01C8               	clrf	((_Buz1+1)^(0+128)+10)
 11427  0DDC  07C8               	addwf	((_Buz1+1)^(0+128)+10),f
 11428  0DDD  0020               	movlb	0	; select bank0
 11429  0DDE  0824               	movf	setBuz@time,w
 11430  0DDF  0021               	movlb	1	; select bank1
 11431  0DE0  01C7               	clrf	(_Buz1^(0+128)+10)
 11432  0DE1  07C7               	addwf	(_Buz1^(0+128)+10),f
 11433  0DE2  0008               	return
 11434  0DE3                     __end_of_setBuz:	
 11435                           
 11436                           	psect	text79
 11437  0E36                     __ptext79:	
 11438 ;; *************** function ___awdiv *****************
 11439 ;; Defined at:
 11440 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  divisor         2    2[COMMON] int 
 11443 ;;  dividend        2    4[COMMON] int 
 11444 ;; Auto vars:     Size  Location     Type
 11445 ;;  quotient        2    2[BANK0 ] int 
 11446 ;;  sign            1    1[BANK0 ] unsigned char 
 11447 ;;  counter         1    0[BANK0 ] unsigned char 
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  2    2[COMMON] int 
 11450 ;; Registers used:
 11451 ;;		wreg, status,2, status,0
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;Total ram usage:        9 bytes
 11462 ;; Hardware stack levels used:    1
 11463 ;; Hardware stack levels required when called:    3
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_setBuz
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           
 11472                           ;psect for function ___awdiv
 11473  0E36                     ___awdiv:	
 11474                           
 11475                           ;incstack = 0
 11476                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11477  0E36  0020               	movlb	0	; select bank0
 11478  0E37  01A1               	clrf	___awdiv@sign
 11479  0E38  1FF3               	btfss	___awdiv@divisor+1,7
 11480  0E39  2E41               	goto	l5293
 11481  0E3A  09F2               	comf	___awdiv@divisor,f
 11482  0E3B  09F3               	comf	___awdiv@divisor+1,f
 11483  0E3C  0AF2               	incf	___awdiv@divisor,f
 11484  0E3D  1903               	skipnz
 11485  0E3E  0AF3               	incf	___awdiv@divisor+1,f
 11486  0E3F  01A1               	clrf	___awdiv@sign
 11487  0E40  0AA1               	incf	___awdiv@sign,f
 11488  0E41                     l5293:	
 11489  0E41  1FF5               	btfss	___awdiv@dividend+1,7
 11490  0E42  2E4C               	goto	l5299
 11491  0E43  09F4               	comf	___awdiv@dividend,f
 11492  0E44  09F5               	comf	___awdiv@dividend+1,f
 11493  0E45  0AF4               	incf	___awdiv@dividend,f
 11494  0E46  1903               	skipnz
 11495  0E47  0AF5               	incf	___awdiv@dividend+1,f
 11496  0E48  3001               	movlw	1
 11497  0E49  00F6               	movwf	??___awdiv
 11498  0E4A  0876               	movf	??___awdiv,w
 11499  0E4B  06A1               	xorwf	___awdiv@sign,f
 11500  0E4C                     l5299:	
 11501  0E4C  01A2               	clrf	___awdiv@quotient
 11502  0E4D  01A3               	clrf	___awdiv@quotient+1
 11503  0E4E  0873               	movf	___awdiv@divisor+1,w
 11504  0E4F  0472               	iorwf	___awdiv@divisor,w
 11505  0E50  1903               	skipnz
 11506  0E51  2E7B               	goto	l5321
 11507  0E52  01A0               	clrf	___awdiv@counter
 11508  0E53  0AA0               	incf	___awdiv@counter,f
 11509  0E54                     l5309:	
 11510  0E54  1BF3               	btfsc	___awdiv@divisor+1,7
 11511  0E55  2E60               	goto	l5311
 11512  0E56  3001               	movlw	1
 11513  0E57                     u5295:	
 11514  0E57  35F2               	lslf	___awdiv@divisor,f
 11515  0E58  0DF3               	rlf	___awdiv@divisor+1,f
 11516  0E59  0B89               	decfsz	9,f
 11517  0E5A  2E57               	goto	u5295
 11518  0E5B  3001               	movlw	1
 11519  0E5C  00F6               	movwf	??___awdiv
 11520  0E5D  0876               	movf	??___awdiv,w
 11521  0E5E  07A0               	addwf	___awdiv@counter,f
 11522  0E5F  2E54               	goto	l5309
 11523  0E60                     l5311:	
 11524  0E60  3001               	movlw	1
 11525  0E61                     u5315:	
 11526  0E61  35A2               	lslf	___awdiv@quotient,f
 11527  0E62  0DA3               	rlf	___awdiv@quotient+1,f
 11528  0E63  0B89               	decfsz	9,f
 11529  0E64  2E61               	goto	u5315
 11530  0E65  0873               	movf	___awdiv@divisor+1,w
 11531  0E66  0275               	subwf	___awdiv@dividend+1,w
 11532  0E67  1D03               	skipz
 11533  0E68  2E6B               	goto	u5325
 11534  0E69  0872               	movf	___awdiv@divisor,w
 11535  0E6A  0274               	subwf	___awdiv@dividend,w
 11536  0E6B                     u5325:	
 11537  0E6B  1C03               	skipc
 11538  0E6C  2E72               	goto	l5317
 11539  0E6D  0872               	movf	___awdiv@divisor,w
 11540  0E6E  02F4               	subwf	___awdiv@dividend,f
 11541  0E6F  0873               	movf	___awdiv@divisor+1,w
 11542  0E70  3BF5               	subwfb	___awdiv@dividend+1,f
 11543  0E71  1422               	bsf	___awdiv@quotient,0
 11544  0E72                     l5317:	
 11545  0E72  3001               	movlw	1
 11546  0E73                     u5335:	
 11547  0E73  36F3               	lsrf	___awdiv@divisor+1,f
 11548  0E74  0CF2               	rrf	___awdiv@divisor,f
 11549  0E75  0B89               	decfsz	9,f
 11550  0E76  2E73               	goto	u5335
 11551  0E77  3001               	movlw	1
 11552  0E78  02A0               	subwf	___awdiv@counter,f
 11553  0E79  1D03               	btfss	3,2
 11554  0E7A  2E60               	goto	l5311
 11555  0E7B                     l5321:	
 11556  0E7B  0821               	movf	___awdiv@sign,w
 11557  0E7C  1903               	btfsc	3,2
 11558  0E7D  2E83               	goto	l5325
 11559  0E7E  09A2               	comf	___awdiv@quotient,f
 11560  0E7F  09A3               	comf	___awdiv@quotient+1,f
 11561  0E80  0AA2               	incf	___awdiv@quotient,f
 11562  0E81  1903               	skipnz
 11563  0E82  0AA3               	incf	___awdiv@quotient+1,f
 11564  0E83                     l5325:	
 11565  0E83  0823               	movf	___awdiv@quotient+1,w
 11566  0E84  01F3               	clrf	?___awdiv+1
 11567  0E85  07F3               	addwf	?___awdiv+1,f
 11568  0E86  0822               	movf	___awdiv@quotient,w
 11569  0E87  01F2               	clrf	?___awdiv
 11570  0E88  07F2               	addwf	?___awdiv,f
 11571  0E89  0008               	return
 11572  0E8A                     __end_of___awdiv:	
 11573                           
 11574                           	psect	text80
 11575  08A8                     __ptext80:	
 11576 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 11577 ;; Defined at:
 11578 ;;		line 271 in file "../src/Dimmer_B1.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  lights          1    wreg     unsigned char 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  lights          1    2[COMMON] unsigned char 
 11583 ;;  status          1    3[COMMON] unsigned char 
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      unsigned char 
 11586 ;; Registers used:
 11587 ;;		wreg, status,2
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;Total ram usage:        2 bytes
 11598 ;; Hardware stack levels used:    1
 11599 ;; Hardware stack levels required when called:    3
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_setDimmerLights_SwOn
 11604 ;;		_setRF_AdjControl
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           
 11609                           ;psect for function _getDimmerIntr_Dimming_Sw
 11610  08A8                     _getDimmerIntr_Dimming_Sw:	
 11611                           
 11612                           ;incstack = 0
 11613                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 11614                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 11615  08A8  00F2               	movwf	getDimmerIntr_Dimming_Sw@lights
 11616                           
 11617                           ;Dimmer_B1.c: 272: char status = 0;
 11618  08A9  01F3               	clrf	getDimmerIntr_Dimming_Sw@status
 11619                           
 11620                           ;Dimmer_B1.c: 274: if (lights == 1) {
 11621  08AA  0872               	movf	getDimmerIntr_Dimming_Sw@lights,w
 11622  08AB  3A01               	xorlw	1
 11623  08AC  1D03               	skipz
 11624  08AD  28B3               	goto	l4113
 11625                           
 11626                           ;Dimmer_B1.c: 275: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 11627  08AE  3000               	movlw	0
 11628  08AF  0021               	movlb	1	; select bank1
 11629  08B0  1A20               	btfsc	_DimmerIntr1^(0+128),4
 11630  08B1  3001               	movlw	1
 11631  08B2  00F3               	movwf	getDimmerIntr_Dimming_Sw@status
 11632  08B3                     l4113:	
 11633                           
 11634                           ;Dimmer_B1.c: 276: }
 11635                           ;Dimmer_B1.c: 289: return status;
 11636  08B3  0873               	movf	getDimmerIntr_Dimming_Sw@status,w
 11637  08B4  0008               	return
 11638  08B5                     __end_of_getDimmerIntr_Dimming_Sw:	
 11639                           
 11640                           	psect	text81
 11641  0B5B                     __ptext81:	
 11642 ;; *************** function _setDimmerLights_SwOff *****************
 11643 ;; Defined at:
 11644 ;;		line 821 in file "../src/Dimmer_B1.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  sw              1    wreg     unsigned char 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  sw              1    4[COMMON] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;		None               void
 11651 ;; Registers used:
 11652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;Total ram usage:        1 bytes
 11663 ;; Hardware stack levels used:    1
 11664 ;; Hardware stack levels required when called:    4
 11665 ;; This function calls:
 11666 ;;		_DimmerLights_SelectPointer
 11667 ;; This function is called by:
 11668 ;;		_DlyOff_Main
 11669 ;;		_setSw_Main
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           
 11674                           ;psect for function _setDimmerLights_SwOff
 11675  0B5B                     _setDimmerLights_SwOff:	
 11676                           
 11677                           ;incstack = 0
 11678                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 11679                           ;setDimmerLights_SwOff@sw stored from wreg
 11680  0B5B  00F4               	movwf	setDimmerLights_SwOff@sw
 11681                           
 11682                           ;Dimmer_B1.c: 823: DimmerLights_SelectPointer(sw);
 11683  0B5C  0874               	movf	setDimmerLights_SwOff@sw,w
 11684  0B5D  3188  2040  318B   	fcall	_DimmerLights_SelectPointer
 11685                           
 11686                           ;Dimmer_B1.c: 825: if (DimmerLights->SwFlag == 1) {
 11687  0B60  0020               	movlb	0	; select bank0
 11688  0B61  086B               	movf	_DimmerLights,w
 11689  0B62  0086               	movwf	6
 11690  0B63  0187               	clrf	7
 11691  0B64  1C01               	btfss	1,0
 11692  0B65  0008               	return
 11693                           
 11694                           ;Dimmer_B1.c: 826: DimmerLights->SwFlag = 0;
 11695  0B66  086B               	movf	_DimmerLights,w
 11696  0B67  0086               	movwf	6
 11697  0B68  0187               	clrf	7
 11698  0B69  1001               	bcf	1,0
 11699                           
 11700                           ;Dimmer_B1.c: 827: if (DimmerLights->Status == 1) {
 11701  0B6A  0A6B               	incf	_DimmerLights,w
 11702  0B6B  0086               	movwf	6
 11703  0B6C  0187               	clrf	7
 11704  0B6D  1C01               	btfss	1,0
 11705  0B6E  2B81               	goto	l4235
 11706                           
 11707                           ;Dimmer_B1.c: 828: if (DimmerLights->DimmingSwFlag == 1) {
 11708  0B6F  086B               	movf	_DimmerLights,w
 11709  0B70  0086               	movwf	6
 11710  0B71  0187               	clrf	7
 11711  0B72  1D81               	btfss	1,3
 11712  0B73  0008               	return
 11713                           
 11714                           ;Dimmer_B1.c: 829: DimmerLights->DimmingSwFlag = 0;
 11715  0B74  086B               	movf	_DimmerLights,w
 11716  0B75  0086               	movwf	6
 11717  0B76  0187               	clrf	7
 11718  0B77  1181               	bcf	1,3
 11719                           
 11720                           ;Dimmer_B1.c: 831: DimmerLights->DimmingTrigger = 1;
 11721  0B78  086B               	movf	_DimmerLights,w
 11722  0B79  0086               	movwf	6
 11723  0B7A  0187               	clrf	7
 11724  0B7B  1601               	bsf	1,4
 11725                           
 11726                           ;Dimmer_B1.c: 832: DimmerLights->DimmingSwitch = 0;
 11727  0B7C  086B               	movf	_DimmerLights,w
 11728  0B7D  0086               	movwf	6
 11729  0B7E  0187               	clrf	7
 11730  0B7F  1281               	bcf	1,5
 11731                           
 11732                           ;Dimmer_B1.c: 833: }
 11733                           ;Dimmer_B1.c: 834: } else {
 11734  0B80  0008               	return
 11735  0B81                     l4235:	
 11736                           
 11737                           ;Dimmer_B1.c: 837: DimmerLights->Trigger = 1;
 11738  0B81  086B               	movf	_DimmerLights,w
 11739  0B82  0086               	movwf	6
 11740  0B83  0187               	clrf	7
 11741  0B84  1481               	bsf	1,1
 11742                           
 11743                           ;Dimmer_B1.c: 838: DimmerLights->Switch = 0;
 11744  0B85  086B               	movf	_DimmerLights,w
 11745  0B86  0086               	movwf	6
 11746  0B87  0187               	clrf	7
 11747  0B88  1101               	bcf	1,2
 11748  0B89  0008               	return
 11749  0B8A                     __end_of_setDimmerLights_SwOff:	
 11750                           
 11751                           	psect	text82
 11752  08C2                     __ptext82:	
 11753 ;; *************** function _getDimmerLights_Status *****************
 11754 ;; Defined at:
 11755 ;;		line 1268 in file "../src/Dimmer_B1.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  lights          1    wreg     unsigned char 
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;  lights          1    4[COMMON] unsigned char 
 11760 ;;  status          1    5[COMMON] unsigned char 
 11761 ;; Return value:  Size  Location     Type
 11762 ;;                  1    wreg      unsigned char 
 11763 ;; Registers used:
 11764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11765 ;; Tracked objects:
 11766 ;;		On entry : 0/0
 11767 ;;		On exit  : 0/0
 11768 ;;		Unchanged: 0/0
 11769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;Total ram usage:        2 bytes
 11775 ;; Hardware stack levels used:    1
 11776 ;; Hardware stack levels required when called:    4
 11777 ;; This function calls:
 11778 ;;		_DimmerLights_SelectPointer
 11779 ;; This function is called by:
 11780 ;;		_DlyOff_Main
 11781 ;;		_DimmerLights_AssignationDimming
 11782 ;;		_setRF_AdjControl
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           
 11787                           ;psect for function _getDimmerLights_Status
 11788  08C2                     _getDimmerLights_Status:	
 11789                           
 11790                           ;incstack = 0
 11791                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 11792                           ;getDimmerLights_Status@lights stored from wreg
 11793  08C2  00F4               	movwf	getDimmerLights_Status@lights
 11794                           
 11795                           ;Dimmer_B1.c: 1269: DimmerLights_SelectPointer(lights);
 11796  08C3  0874               	movf	getDimmerLights_Status@lights,w
 11797  08C4  3188  2040         	fcall	_DimmerLights_SelectPointer
 11798                           
 11799                           ;Dimmer_B1.c: 1270: char status = DimmerLights->Status == 1 ? 1 : 0;
 11800  08C6  0020               	movlb	0	; select bank0
 11801  08C7  0A6B               	incf	_DimmerLights,w
 11802  08C8  0086               	movwf	6
 11803  08C9  0187               	clrf	7
 11804  08CA  3000               	movlw	0
 11805  08CB  1801               	btfsc	1,0
 11806  08CC  3001               	movlw	1
 11807  08CD  00F5               	movwf	getDimmerLights_Status@status
 11808                           
 11809                           ;Dimmer_B1.c: 1271: return status;
 11810  08CE  0875               	movf	getDimmerLights_Status@status,w
 11811  08CF  0008               	return
 11812  08D0                     __end_of_getDimmerLights_Status:	
 11813                           
 11814                           	psect	text83
 11815  0840                     __ptext83:	
 11816 ;; *************** function _DimmerLights_SelectPointer *****************
 11817 ;; Defined at:
 11818 ;;		line 684 in file "../src/Dimmer_B1.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;  lights          1    wreg     unsigned char 
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;  lights          1    3[COMMON] unsigned char 
 11823 ;; Return value:  Size  Location     Type
 11824 ;;		None               void
 11825 ;; Registers used:
 11826 ;;		wreg
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;Total ram usage:        2 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; Hardware stack levels required when called:    3
 11839 ;; This function calls:
 11840 ;;		Nothing
 11841 ;; This function is called by:
 11842 ;;		_setDimmerLights_SwOn
 11843 ;;		_setDimmerLights_SwOff
 11844 ;;		_setDimmerLights_DimmingOn
 11845 ;;		_setDimmerLights_Main
 11846 ;;		_getDimmerLights_Status
 11847 ;;		_DimmerLights_TwoPhase_Main
 11848 ;;		_setDimmerLights_Status
 11849 ;;		_setDimmerLights_DimmingRun
 11850 ;;		_setRF_AdjControl
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           
 11855                           ;psect for function _DimmerLights_SelectPointer
 11856  0840                     _DimmerLights_SelectPointer:	
 11857                           
 11858                           ;incstack = 0
 11859                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 11860                           ;DimmerLights_SelectPointer@lights stored from wreg
 11861  0840  00F3               	movwf	DimmerLights_SelectPointer@lights
 11862                           
 11863                           ;Dimmer_B1.c: 686: if (lights == 1) {
 11864  0841  0873               	movf	DimmerLights_SelectPointer@lights,w
 11865  0842  3A01               	xorlw	1
 11866  0843  1D03               	skipz
 11867  0844  0008               	return
 11868                           
 11869                           ;Dimmer_B1.c: 687: DimmerLights = &DimmerLights1;
 11870  0845  30D6               	movlw	_DimmerLights1& (0+255)
 11871  0846  00F2               	movwf	??_DimmerLights_SelectPointer
 11872  0847  0872               	movf	??_DimmerLights_SelectPointer,w
 11873  0848  0020               	movlb	0	; select bank0
 11874  0849  00EB               	movwf	_DimmerLights
 11875  084A  0008               	return
 11876  084B                     __end_of_DimmerLights_SelectPointer:	
 11877                           
 11878                           	psect	text84
 11879  17B8                     __ptext84:	
 11880 ;; *************** function _DelayOff_Initialization *****************
 11881 ;; Defined at:
 11882 ;;		line 26 in file "../src/DelayOff_B1.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;		None
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;		None
 11887 ;; Return value:  Size  Location     Type
 11888 ;;		None               void
 11889 ;; Registers used:
 11890 ;;		wreg, status,2, status,0, pclath, cstack
 11891 ;; Tracked objects:
 11892 ;;		On entry : 0/0
 11893 ;;		On exit  : 0/0
 11894 ;;		Unchanged: 0/0
 11895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;Total ram usage:        0 bytes
 11901 ;; Hardware stack levels used:    1
 11902 ;; Hardware stack levels required when called:    5
 11903 ;; This function calls:
 11904 ;;		_DlyOff_Initialization
 11905 ;; This function is called by:
 11906 ;;		_main
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           
 11911                           ;psect for function _DelayOff_Initialization
 11912  17B8                     _DelayOff_Initialization:	
 11913                           
 11914                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 11915                           
 11916                           ;incstack = 0
 11917                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 11918  17B8  3001               	movlw	1
 11919  17B9  3197  27D0         	fcall	_DlyOff_Initialization
 11920  17BB  0008               	return
 11921  17BC                     __end_of_DelayOff_Initialization:	
 11922                           
 11923                           	psect	text85
 11924  17D0                     __ptext85:	
 11925 ;; *************** function _DlyOff_Initialization *****************
 11926 ;; Defined at:
 11927 ;;		line 56 in file "../src/DelayOff_B1.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  sw              1    wreg     unsigned char 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;  sw              1    4[COMMON] unsigned char 
 11932 ;; Return value:  Size  Location     Type
 11933 ;;		None               void
 11934 ;; Registers used:
 11935 ;;		wreg, status,2, status,0, pclath, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;Total ram usage:        1 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:    4
 11948 ;; This function calls:
 11949 ;;		_DelayOffPointSelect
 11950 ;; This function is called by:
 11951 ;;		_DelayOff_Initialization
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           
 11956                           ;psect for function _DlyOff_Initialization
 11957  17D0                     _DlyOff_Initialization:	
 11958                           
 11959                           ;incstack = 0
 11960                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 11961                           ;DlyOff_Initialization@sw stored from wreg
 11962  17D0  00F4               	movwf	DlyOff_Initialization@sw
 11963                           
 11964                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 11965  17D1  0874               	movf	DlyOff_Initialization@sw,w
 11966  17D2  3188  2035         	fcall	_DelayOffPointSelect
 11967  17D4  0008               	return
 11968  17D5                     __end_of_DlyOff_Initialization:	
 11969                           
 11970                           	psect	text86
 11971  0835                     __ptext86:	
 11972 ;; *************** function _DelayOffPointSelect *****************
 11973 ;; Defined at:
 11974 ;;		line 7 in file "../src/DelayOff_B1.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;  sw              1    wreg     unsigned char 
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;  sw              1    3[COMMON] unsigned char 
 11979 ;; Return value:  Size  Location     Type
 11980 ;;		None               void
 11981 ;; Registers used:
 11982 ;;		wreg
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;Total ram usage:        2 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:    3
 11995 ;; This function calls:
 11996 ;;		Nothing
 11997 ;; This function is called by:
 11998 ;;		_DlyOff_Initialization
 11999 ;;		_DlyOff_Main
 12000 ;;		_setDelayOff_GO
 12001 ;;		_getDelayOff_GO
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           
 12006                           ;psect for function _DelayOffPointSelect
 12007  0835                     _DelayOffPointSelect:	
 12008                           
 12009                           ;incstack = 0
 12010                           ; Regs used in _DelayOffPointSelect: [wreg]
 12011                           ;DelayOffPointSelect@sw stored from wreg
 12012  0835  00F3               	movwf	DelayOffPointSelect@sw
 12013                           
 12014                           ;DelayOff_B1.c: 9: if (sw == 1) {
 12015  0836  0873               	movf	DelayOffPointSelect@sw,w
 12016  0837  3A01               	xorlw	1
 12017  0838  1D03               	skipz
 12018  0839  0008               	return
 12019                           
 12020                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 12021  083A  30DF               	movlw	_DlySw1& (0+255)
 12022  083B  00F2               	movwf	??_DelayOffPointSelect
 12023  083C  0872               	movf	??_DelayOffPointSelect,w
 12024  083D  0020               	movlb	0	; select bank0
 12025  083E  00EA               	movwf	_DelayOff
 12026  083F  0008               	return
 12027  0840                     __end_of_DelayOffPointSelect:	
 12028                           
 12029                           	psect	text87
 12030  07B1                     __ptext87:	
 12031 ;; *************** function _Buzzer_Main *****************
 12032 ;; Defined at:
 12033 ;;		line 46 in file "../src/Buzzer_B1.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;		None
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;		None               void
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;Total ram usage:        1 bytes
 12052 ;; Hardware stack levels used:    1
 12053 ;; Hardware stack levels required when called:    3
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_main
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           
 12062                           ;psect for function _Buzzer_Main
 12063  07B1                     _Buzzer_Main:	
 12064                           
 12065                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 12066                           
 12067                           ;incstack = 0
 12068                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 12069  07B1  0021               	movlb	1	; select bank1
 12070  07B2  1CBD               	btfss	_Buz1^(0+128),1
 12071  07B3  0008               	return
 12072                           
 12073                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 12074  07B4  3001               	movlw	1
 12075  07B5  07BE               	addwf	(_Buz1^(0+128)+1),f
 12076  07B6  3000               	movlw	0
 12077  07B7  3DBF               	addwfc	((_Buz1+1)^(0+128)+1),f
 12078                           
 12079                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 12080  07B8  0844               	movf	((_Buz1+1)^(0+128)+6),w
 12081  07B9  023F               	subwf	((_Buz1+1)^(0+128)+1),w
 12082  07BA  1D03               	skipz
 12083  07BB  2FBE               	goto	u4695
 12084  07BC  0843               	movf	(_Buz1^(0+128)+6),w
 12085  07BD  023E               	subwf	(_Buz1^(0+128)+1),w
 12086  07BE                     u4695:	
 12087  07BE  1C03               	skipc
 12088  07BF  0008               	return
 12089                           
 12090                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 12091  07C0  01BE               	clrf	(_Buz1^(0+128)+1)
 12092  07C1  01BF               	clrf	((_Buz1+1)^(0+128)+1)
 12093                           
 12094                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 12095  07C2  12BD               	bcf	_Buz1^(0+128),5
 12096  07C3  0020               	movlb	0	; select bank0
 12097  07C4  1D8D               	btfss	13,3	;volatile
 12098  07C5  2FC8               	goto	l4825
 12099  07C6  0021               	movlb	1	; select bank1
 12100  07C7  16BD               	bsf	_Buz1^(0+128),5
 12101  07C8                     l4825:	
 12102                           
 12103                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 12104  07C8  0021               	movlb	1	; select bank1
 12105  07C9  1ABD               	btfsc	_Buz1^(0+128),5
 12106  07CA  2FF0               	goto	l66
 12107                           
 12108                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 12109  07CB  08C0               	movf	(_Buz1^(0+128)+3),f
 12110  07CC  1D03               	skipz
 12111  07CD  2FEC               	goto	l67
 12112                           
 12113                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 12114  07CE  1DBD               	btfss	_Buz1^(0+128),3
 12115  07CF  2FDC               	goto	l68
 12116                           
 12117                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 12118  07D0  11BD               	bcf	_Buz1^(0+128),3
 12119                           
 12120                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 12121  07D1  0841               	movf	(_Buz1^(0+128)+4),w
 12122  07D2  00F2               	movwf	??_Buzzer_Main
 12123  07D3  0872               	movf	??_Buzzer_Main,w
 12124  07D4  00C0               	movwf	(_Buz1^(0+128)+3)
 12125                           
 12126                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 12127  07D5  0846               	movf	((_Buz1+1)^(0+128)+8),w
 12128  07D6  01C4               	clrf	((_Buz1+1)^(0+128)+6)
 12129  07D7  07C4               	addwf	((_Buz1+1)^(0+128)+6),f
 12130  07D8  0845               	movf	(_Buz1^(0+128)+8),w
 12131  07D9  01C3               	clrf	(_Buz1^(0+128)+6)
 12132  07DA  07C3               	addwf	(_Buz1^(0+128)+6),f
 12133                           
 12134                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 12135  07DB  0008               	return
 12136  07DC                     l68:	
 12137  07DC  1E3D               	btfss	_Buz1^(0+128),4
 12138  07DD  2FEA               	goto	l70
 12139                           
 12140                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 12141  07DE  123D               	bcf	_Buz1^(0+128),4
 12142                           
 12143                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 12144  07DF  0842               	movf	(_Buz1^(0+128)+5),w
 12145  07E0  00F2               	movwf	??_Buzzer_Main
 12146  07E1  0872               	movf	??_Buzzer_Main,w
 12147  07E2  00C0               	movwf	(_Buz1^(0+128)+3)
 12148                           
 12149                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 12150  07E3  0848               	movf	((_Buz1+1)^(0+128)+10),w
 12151  07E4  01C4               	clrf	((_Buz1+1)^(0+128)+6)
 12152  07E5  07C4               	addwf	((_Buz1+1)^(0+128)+6),f
 12153  07E6  0847               	movf	(_Buz1^(0+128)+10),w
 12154  07E7  01C3               	clrf	(_Buz1^(0+128)+6)
 12155  07E8  07C3               	addwf	(_Buz1^(0+128)+6),f
 12156                           
 12157                           ;Buzzer_B1.c: 62: } else {
 12158  07E9  0008               	return
 12159  07EA                     l70:	
 12160                           
 12161                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 12162  07EA  10BD               	bcf	_Buz1^(0+128),1
 12163                           
 12164                           ;Buzzer_B1.c: 64: }
 12165                           ;Buzzer_B1.c: 65: } else {
 12166  07EB  0008               	return
 12167  07EC                     l67:	
 12168                           
 12169                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 12170  07EC  16BD               	bsf	_Buz1^(0+128),5
 12171                           
 12172                           ;Buzzer_B1.c: 68: RB3 = 1;
 12173  07ED  0020               	movlb	0	; select bank0
 12174  07EE  158D               	bsf	13,3	;volatile
 12175                           
 12176                           ;Buzzer_B1.c: 69: }
 12177                           ;Buzzer_B1.c: 70: } else {
 12178  07EF  0008               	return
 12179  07F0                     l66:	
 12180                           
 12181                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 12182  07F0  12BD               	bcf	_Buz1^(0+128),5
 12183                           
 12184                           ;Buzzer_B1.c: 73: RB3 = 0;
 12185  07F1  0020               	movlb	0	; select bank0
 12186  07F2  118D               	bcf	13,3	;volatile
 12187                           
 12188                           ;Buzzer_B1.c: 75: Buz1.Count--;
 12189  07F3  3001               	movlw	1
 12190  07F4  0021               	movlb	1	; select bank1
 12191  07F5  02C0               	subwf	(_Buz1^(0+128)+3),f
 12192  07F6  0008               	return
 12193  07F7                     __end_of_Buzzer_Main:	
 12194                           
 12195                           	psect	text88
 12196  17AF                     __ptext88:	
 12197 ;; *************** function _Buzzer_Initialization *****************
 12198 ;; Defined at:
 12199 ;;		line 11 in file "../src/Buzzer_B1.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;		None
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;		None
 12204 ;; Return value:  Size  Location     Type
 12205 ;;		None               void
 12206 ;; Registers used:
 12207 ;;		None
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;Total ram usage:        0 bytes
 12218 ;; Hardware stack levels used:    1
 12219 ;; Hardware stack levels required when called:    3
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_main
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _Buzzer_Initialization
 12229  17AF                     _Buzzer_Initialization:	
 12230                           
 12231                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _Buzzer_Initialization: []
 12235  17AF  0021               	movlb	1	; select bank1
 12236  17B0  143D               	bsf	_Buz1^(0+128),0
 12237  17B1  0008               	return
 12238  17B2                     __end_of_Buzzer_Initialization:	
 12239                           
 12240                           	psect	intentry
 12241  0004                     __pintentry:	
 12242 ;; *************** function _ISR *****************
 12243 ;; Defined at:
 12244 ;;		line 116 in file "../src/MCU_B1.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;		None
 12249 ;; Return value:  Size  Location     Type
 12250 ;;		None               void
 12251 ;; Registers used:
 12252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;Total ram usage:        1 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    2
 12265 ;; This function calls:
 12266 ;;		_IOC_ISR
 12267 ;;		_TMR1_ISR
 12268 ;; This function is called by:
 12269 ;;		Interrupt level 1
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273  0004                     _ISR:	
 12274                           
 12275                           ;incstack = 0
 12276                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12277  0004  147E               	bsf	126,0	;set compiler interrupt flag
 12278  0005  3180               	pagesel	$
 12279  0006  0020               	movlb	0	; select bank0
 12280  0007  087F               	movf	127,w
 12281  0008  00F1               	movwf	??_ISR
 12282                           
 12283                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 12284  0009  0021               	movlb	1	; select bank1
 12285  000A  1C11               	btfss	17,0	;volatile
 12286  000B  2812               	goto	i1l5151
 12287  000C  0020               	movlb	0	; select bank0
 12288  000D  1C11               	btfss	17,0	;volatile
 12289  000E  2812               	goto	i1l5151
 12290                           
 12291                           ;MCU_B1.c: 126: TMR1_ISR();
 12292  000F  318A  2235  3180   	fcall	_TMR1_ISR
 12293  0012                     i1l5151:	
 12294                           
 12295                           ;MCU_B1.c: 127: }
 12296                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 12297  0012  198B               	btfsc	11,3	;volatile
 12298  0013  1C0B               	btfss	11,0	;volatile
 12299  0014  281A               	goto	i1l846
 12300  0015  0027               	movlb	7	; select bank7
 12301  0016  1D16               	btfss	22,2	;volatile
 12302  0017  281A               	goto	i1l846
 12303                           
 12304                           ;MCU_B1.c: 139: IOC_ISR();
 12305  0018  3188  2010         	fcall	_IOC_ISR
 12306  001A                     i1l846:	
 12307                           ;MCU_B1.c: 140: }
 12308                           ;MCU_B1.c: 148: return;
 12309                           
 12310  001A  0871               	movf	??_ISR,w
 12311  001B  0020               	movlb	0	; select bank0
 12312  001C  00FF               	movwf	127
 12313  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 12314  001E  0009               	retfie
 12315  001F                     __end_of_ISR:	
 12316                           
 12317                           	psect	text90
 12318  0A35                     __ptext90:	
 12319 ;; *************** function _TMR1_ISR *****************
 12320 ;; Defined at:
 12321 ;;		line 236 in file "../src/MCU_B1.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;		None
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;		None               void
 12328 ;; Registers used:
 12329 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;Total ram usage:        0 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:    1
 12342 ;; This function calls:
 12343 ;;		_DimmerLights_TMR_1
 12344 ;; This function is called by:
 12345 ;;		_ISR
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _TMR1_ISR
 12351  0A35                     _TMR1_ISR:	
 12352                           
 12353                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 12354                           
 12355                           ;incstack = 0
 12356                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12357  0A35  318C  2425  318A   	fcall	_DimmerLights_TMR_1
 12358                           
 12359                           ;MCU_B1.c: 269: Timer1.Count++;
 12360  0A38  3001               	movlw	1
 12361  0A39  0021               	movlb	1	; select bank1
 12362  0A3A  07CF               	addwf	(_Timer1^(0+128)+1),f
 12363  0A3B  3000               	movlw	0
 12364  0A3C  3DD0               	addwfc	((_Timer1+1)^(0+128)+1),f
 12365                           
 12366                           ;MCU_B1.c: 270: if (Timer1.Count == (int)(20*10)) {
 12367  0A3D  3001               	movlw	1
 12368  0A3E  3ECE               	addlw	_Timer1& (0+255)
 12369  0A3F  0086               	movwf	6
 12370  0A40  0187               	clrf	7
 12371  0A41  3F40               	moviw [0]fsr1
 12372  0A42  3AC8               	xorlw	200
 12373  0A43  1D03               	skipz
 12374  0A44  2A47               	goto	u475_25
 12375  0A45  3F41               	moviw [1]fsr1
 12376  0A46  3A00               	xorlw	0
 12377  0A47                     u475_25:	
 12378  0A47  1D03               	skipz
 12379  0A48  2A4C               	goto	i1l4873
 12380                           
 12381                           ;MCU_B1.c: 271: Timer1.Count = 0;
 12382  0A49  01CF               	clrf	(_Timer1^(0+128)+1)
 12383  0A4A  01D0               	clrf	((_Timer1+1)^(0+128)+1)
 12384                           
 12385                           ;MCU_B1.c: 272: Timer1.Timeout = 1;
 12386  0A4B  144E               	bsf	_Timer1^(0+128),0
 12387  0A4C                     i1l4873:	
 12388                           
 12389                           ;MCU_B1.c: 273: }
 12390                           ;MCU_B1.c: 275: TMR1H = (int)((65536-1480)/256);
 12391  0A4C  30FA               	movlw	250
 12392  0A4D  0020               	movlb	0	; select bank0
 12393  0A4E  0097               	movwf	23	;volatile
 12394                           
 12395                           ;MCU_B1.c: 276: TMR1L = (int)((65536-1480)%256);
 12396  0A4F  3038               	movlw	56
 12397  0A50  0096               	movwf	22	;volatile
 12398                           
 12399                           ;MCU_B1.c: 277: TMR1IF = 0;
 12400  0A51  1011               	bcf	17,0	;volatile
 12401  0A52  0008               	return
 12402  0A53                     __end_of_TMR1_ISR:	
 12403                           
 12404                           	psect	text91
 12405  0C25                     __ptext91:	
 12406 ;; *************** function _DimmerLights_TMR_1 *****************
 12407 ;; Defined at:
 12408 ;;		line 1730 in file "../src/Dimmer_B1.c"
 12409 ;; Parameters:    Size  Location     Type
 12410 ;;		None
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;		None
 12413 ;; Return value:  Size  Location     Type
 12414 ;;		None               void
 12415 ;; Registers used:
 12416 ;;		wreg, status,2, status,0
 12417 ;; Tracked objects:
 12418 ;;		On entry : 0/0
 12419 ;;		On exit  : 0/0
 12420 ;;		Unchanged: 0/0
 12421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;Total ram usage:        1 bytes
 12427 ;; Hardware stack levels used:    1
 12428 ;; This function calls:
 12429 ;;		Nothing
 12430 ;; This function is called by:
 12431 ;;		_TMR1_ISR
 12432 ;; This function uses a non-reentrant model
 12433 ;;
 12434                           
 12435                           
 12436                           ;psect for function _DimmerLights_TMR_1
 12437  0C25                     _DimmerLights_TMR_1:	
 12438                           
 12439                           ;Dimmer_B1.c: 1733: if (DimmerIntr1.Start == 1) {
 12440                           
 12441                           ;incstack = 0
 12442                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 12443  0C25  0021               	movlb	1	; select bank1
 12444  0C26  1D20               	btfss	_DimmerIntr1^(0+128),2
 12445  0C27  2C4B               	goto	i1l527
 12446                           
 12447                           ;Dimmer_B1.c: 1734: DimmerIntr1.Count++;
 12448  0C28  3001               	movlw	1
 12449  0C29  00F0               	movwf	??_DimmerLights_TMR_1
 12450  0C2A  0870               	movf	??_DimmerLights_TMR_1,w
 12451  0C2B  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 12452                           
 12453                           ;Dimmer_B1.c: 1736: if (DimmerIntr1.Count == DimmerIntr1.TuneEnd_Value) {
 12454  0C2C  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 12455  0C2D  062F               	xorwf	(_DimmerIntr1^(0+128)+15),w
 12456  0C2E  1D03               	skipz
 12457  0C2F  2C32               	goto	i1l4551
 12458                           
 12459                           ;Dimmer_B1.c: 1737: DimmerIntr1.Count = 0;
 12460  0C30  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 12461                           
 12462                           ;Dimmer_B1.c: 1738: DimmerIntr1.Start = 0;
 12463  0C31  1120               	bcf	_DimmerIntr1^(0+128),2
 12464  0C32                     i1l4551:	
 12465                           
 12466                           ;Dimmer_B1.c: 1739: }
 12467                           ;Dimmer_B1.c: 1743: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2_Value) {
 12468  0C32  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 12469  0C33  062C               	xorwf	(_DimmerIntr1^(0+128)+12),w
 12470  0C34  1903               	btfsc	3,2
 12471                           
 12472                           ;Dimmer_B1.c: 1744: if (DimmerIntr1.ControlStatus == 1) {
 12473  0C35  1DA0               	btfss	_DimmerIntr1^(0+128),3
 12474  0C36  2C39               	goto	i1l4557
 12475                           
 12476                           ;Dimmer_B1.c: 1745: RB1 = 0;
 12477  0C37  0020               	movlb	0	; select bank0
 12478  0C38  108D               	bcf	13,1	;volatile
 12479  0C39                     i1l4557:	
 12480                           
 12481                           ;Dimmer_B1.c: 1746: }
 12482                           ;Dimmer_B1.c: 1747: }
 12483                           ;Dimmer_B1.c: 1750: if (DimmerIntr1.Count == DimmerIntr1.TuneValue3_Value) {
 12484  0C39  0021               	movlb	1	; select bank1
 12485  0C3A  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 12486  0C3B  062D               	xorwf	(_DimmerIntr1^(0+128)+13),w
 12487  0C3C  1903               	btfsc	3,2
 12488                           
 12489                           ;Dimmer_B1.c: 1751: if (DimmerIntr1.ControlStatus == 1) {
 12490  0C3D  1DA0               	btfss	_DimmerIntr1^(0+128),3
 12491  0C3E  2C41               	goto	i1l4563
 12492                           
 12493                           ;Dimmer_B1.c: 1752: RB1 = 1;
 12494  0C3F  0020               	movlb	0	; select bank0
 12495  0C40  148D               	bsf	13,1	;volatile
 12496  0C41                     i1l4563:	
 12497                           
 12498                           ;Dimmer_B1.c: 1753: }
 12499                           ;Dimmer_B1.c: 1754: }
 12500                           ;Dimmer_B1.c: 1757: if (DimmerIntr1.Count == DimmerIntr1.TuneValue4_Value) {
 12501  0C41  0021               	movlb	1	; select bank1
 12502  0C42  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 12503  0C43  062E               	xorwf	(_DimmerIntr1^(0+128)+14),w
 12504  0C44  1D03               	skipz
 12505  0C45  0008               	return
 12506                           
 12507                           ;Dimmer_B1.c: 1758: if (DimmerIntr1.ControlStatus == 1) {
 12508  0C46  1DA0               	btfss	_DimmerIntr1^(0+128),3
 12509  0C47  0008               	return
 12510                           
 12511                           ;Dimmer_B1.c: 1759: RB1 = 0;
 12512  0C48  0020               	movlb	0	; select bank0
 12513  0C49  108D               	bcf	13,1	;volatile
 12514                           
 12515                           ;Dimmer_B1.c: 1760: }
 12516                           ;Dimmer_B1.c: 1763: }
 12517                           ;Dimmer_B1.c: 1765: } else {
 12518  0C4A  0008               	return
 12519  0C4B                     i1l527:	
 12520                           
 12521                           ;Dimmer_B1.c: 1766: if (DimmerIntr1.GO == 1) {
 12522  0C4B  1C20               	btfss	_DimmerIntr1^(0+128),0
 12523  0C4C  0008               	return
 12524                           
 12525                           ;Dimmer_B1.c: 1767: DimmerIntr1.Count++;
 12526  0C4D  3001               	movlw	1
 12527  0C4E  00F0               	movwf	??_DimmerLights_TMR_1
 12528  0C4F  0870               	movf	??_DimmerLights_TMR_1,w
 12529  0C50  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 12530                           
 12531                           ;Dimmer_B1.c: 1768: if (DimmerIntr1.Count == 7) {
 12532  0C51  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 12533  0C52  3A07               	xorlw	7
 12534  0C53  1D03               	skipz
 12535  0C54  0008               	return
 12536                           
 12537                           ;Dimmer_B1.c: 1769: DimmerIntr1.Count = 0;
 12538  0C55  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 12539                           
 12540                           ;Dimmer_B1.c: 1770: DimmerIntr1.GO = 0;
 12541  0C56  1020               	bcf	_DimmerIntr1^(0+128),0
 12542                           
 12543                           ;Dimmer_B1.c: 1771: DimmerIntr1.Start = 1;
 12544  0C57  1520               	bsf	_DimmerIntr1^(0+128),2
 12545                           
 12546                           ;Dimmer_B1.c: 1773: if (DimmerIntr1.ControlStatus == 1) {
 12547  0C58  1DA0               	btfss	_DimmerIntr1^(0+128),3
 12548  0C59  0008               	return
 12549                           
 12550                           ;Dimmer_B1.c: 1774: RB1 = 1;
 12551  0C5A  0020               	movlb	0	; select bank0
 12552  0C5B  148D               	bsf	13,1	;volatile
 12553  0C5C  0008               	return
 12554  0C5D                     __end_of_DimmerLights_TMR_1:	
 12555                           
 12556                           	psect	text92
 12557  0810                     __ptext92:	
 12558 ;; *************** function _IOC_ISR *****************
 12559 ;; Defined at:
 12560 ;;		line 396 in file "../src/MCU_B1.c"
 12561 ;; Parameters:    Size  Location     Type
 12562 ;;		None
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;		None
 12565 ;; Return value:  Size  Location     Type
 12566 ;;		None               void
 12567 ;; Registers used:
 12568 ;;		wreg, status,2, status,0, pclath, cstack
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12578 ;;Total ram usage:        0 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    1
 12581 ;; This function calls:
 12582 ;;		_DimmerLights_IOC_1
 12583 ;; This function is called by:
 12584 ;;		_ISR
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           
 12589                           ;psect for function _IOC_ISR
 12590  0810                     _IOC_ISR:	
 12591                           
 12592                           ;MCU_B1.c: 398: if (myMain.PowerON == 1) {
 12593                           
 12594                           ;incstack = 0
 12595                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 12596  0810  0021               	movlb	1	; select bank1
 12597  0811  1C30               	btfss	_myMain^(0+128),0
 12598  0812  2815               	goto	i1l4883
 12599                           
 12600                           ;MCU_B1.c: 404: DimmerLights_IOC_1();
 12601  0813  318B  238A         	fcall	_DimmerLights_IOC_1
 12602  0815                     i1l4883:	
 12603                           
 12604                           ;MCU_B1.c: 418: }
 12605                           ;MCU_B1.c: 420: IOCBF2 = 0;
 12606  0815  0027               	movlb	7	; select bank7
 12607  0816  1116               	bcf	22,2	;volatile
 12608                           
 12609                           ;MCU_B1.c: 421: IOCIF = 0;
 12610  0817  100B               	bcf	11,0	;volatile
 12611  0818  0008               	return
 12612  0819                     __end_of_IOC_ISR:	
 12613                           
 12614                           	psect	text93
 12615  0B8A                     __ptext93:	
 12616 ;; *************** function _DimmerLights_IOC_1 *****************
 12617 ;; Defined at:
 12618 ;;		line 1816 in file "../src/Dimmer_B1.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;		None
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;		None               void
 12625 ;; Registers used:
 12626 ;;		wreg, status,2, status,0
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;Total ram usage:        1 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; This function calls:
 12639 ;;		Nothing
 12640 ;; This function is called by:
 12641 ;;		_IOC_ISR
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           
 12646                           ;psect for function _DimmerLights_IOC_1
 12647  0B8A                     _DimmerLights_IOC_1:	
 12648                           
 12649                           ;Dimmer_B1.c: 1830: if (DimmerIntr1.Start == 0 && DimmerIntr1.GO == 0) {
 12650                           
 12651                           ;incstack = 0
 12652                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2+status,0]
 12653  0B8A  0021               	movlb	1	; select bank1
 12654  0B8B  1920               	btfsc	_DimmerIntr1^(0+128),2
 12655  0B8C  0008               	return
 12656  0B8D  1820               	btfsc	_DimmerIntr1^(0+128),0
 12657  0B8E  0008               	return
 12658                           
 12659                           ;Dimmer_B1.c: 1832: if (RB2 != DimmerIntr1.Status) {
 12660  0B8F  0E21               	swapf	(_DimmerIntr1^(0+128)+1),w
 12661  0B90  0C89               	rrf	9,f
 12662  0B91  3901               	andlw	1
 12663  0B92  00F0               	movwf	??_DimmerLights_IOC_1
 12664  0B93  3000               	movlw	0
 12665  0B94  0020               	movlb	0	; select bank0
 12666  0B95  190D               	btfsc	13,2	;volatile
 12667  0B96  3001               	movlw	1
 12668  0B97  0670               	xorwf	??_DimmerLights_IOC_1,w
 12669  0B98  1903               	skipnz
 12670  0B99  0008               	return
 12671                           
 12672                           ;Dimmer_B1.c: 1835: DimmerIntr1.Count = 0;
 12673  0B9A  0021               	movlb	1	; select bank1
 12674  0B9B  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 12675                           
 12676                           ;Dimmer_B1.c: 1836: DimmerIntr1.GO = 1;
 12677  0B9C  1420               	bsf	_DimmerIntr1^(0+128),0
 12678                           
 12679                           ;Dimmer_B1.c: 1838: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 12680  0B9D  1E20               	btfss	_DimmerIntr1^(0+128),4
 12681  0B9E  1B20               	btfsc	_DimmerIntr1^(0+128),6
 12682                           
 12683                           ;Dimmer_B1.c: 1839: DimmerIntr1.Tune = 1;
 12684  0B9F  14A0               	bsf	_DimmerIntr1^(0+128),1
 12685                           
 12686                           ;Dimmer_B1.c: 1840: }
 12687                           ;Dimmer_B1.c: 1842: if (DimmerIntr1.Calculate == 1) {
 12688  0BA0  1FA1               	btfss	(_DimmerIntr1^(0+128)+1),7
 12689  0BA1  2BB3               	goto	i1l4601
 12690                           
 12691                           ;Dimmer_B1.c: 1843: DimmerIntr1.Calculate = 0;
 12692  0BA2  13A1               	bcf	(_DimmerIntr1^(0+128)+1),7
 12693                           
 12694                           ;Dimmer_B1.c: 1844: DimmerIntr1.TuneEnd_Value = DimmerIntr1.TuneEnd;
 12695  0BA3  082B               	movf	(_DimmerIntr1^(0+128)+11),w
 12696  0BA4  00F0               	movwf	??_DimmerLights_IOC_1
 12697  0BA5  0870               	movf	??_DimmerLights_IOC_1,w
 12698  0BA6  00AF               	movwf	(_DimmerIntr1^(0+128)+15)
 12699                           
 12700                           ;Dimmer_B1.c: 1845: DimmerIntr1.TuneValue2_Value = DimmerIntr1.TuneValue2;
 12701  0BA7  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 12702  0BA8  00F0               	movwf	??_DimmerLights_IOC_1
 12703  0BA9  0870               	movf	??_DimmerLights_IOC_1,w
 12704  0BAA  00AC               	movwf	(_DimmerIntr1^(0+128)+12)
 12705                           
 12706                           ;Dimmer_B1.c: 1846: DimmerIntr1.TuneValue3_Value = DimmerIntr1.TuneValue3;
 12707  0BAB  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 12708  0BAC  00F0               	movwf	??_DimmerLights_IOC_1
 12709  0BAD  0870               	movf	??_DimmerLights_IOC_1,w
 12710  0BAE  00AD               	movwf	(_DimmerIntr1^(0+128)+13)
 12711                           
 12712                           ;Dimmer_B1.c: 1847: DimmerIntr1.TuneValue4_Value = DimmerIntr1.TuneValue4;
 12713  0BAF  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 12714  0BB0  00F0               	movwf	??_DimmerLights_IOC_1
 12715  0BB1  0870               	movf	??_DimmerLights_IOC_1,w
 12716  0BB2  00AE               	movwf	(_DimmerIntr1^(0+128)+14)
 12717  0BB3                     i1l4601:	
 12718                           
 12719                           ;Dimmer_B1.c: 1848: }
 12720                           ;Dimmer_B1.c: 1853: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 12721  0BB3  12A1               	bcf	(_DimmerIntr1^(0+128)+1),5
 12722  0BB4  0020               	movlb	0	; select bank0
 12723  0BB5  1D0D               	btfss	13,2	;volatile
 12724  0BB6  0008               	return
 12725  0BB7  0021               	movlb	1	; select bank1
 12726  0BB8  16A1               	bsf	(_DimmerIntr1^(0+128)+1),5
 12727  0BB9  0008               	return
 12728  0BBA                     __end_of_DimmerLights_IOC_1:	
 12729  007E                     btemp	set	126	;btemp
 12730  007E                     pic14e$flags	set	126
 12731  007E                     wtemp	set	126
 12732  007E                     wtemp0	set	126
 12733  0080                     wtemp1	set	128
 12734  0082                     wtemp2	set	130
 12735  0084                     wtemp3	set	132
 12736  0086                     wtemp4	set	134
 12737  0088                     wtemp5	set	136
 12738  007F                     wtemp6	set	127
 12739  007E                     ttemp	set	126
 12740  007E                     ttemp0	set	126
 12741  0081                     ttemp1	set	129
 12742  0084                     ttemp2	set	132
 12743  0087                     ttemp3	set	135
 12744  007F                     ttemp4	set	127
 12745  007E                     ltemp	set	126
 12746  007E                     ltemp0	set	126
 12747  0082                     ltemp1	set	130
 12748  0086                     ltemp2	set	134
 12749  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         139
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      78
    BANK1            80      4      76
    BANK2            80      0      62
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK2[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights1(BANK1[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK3[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw1(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_my_MainTimer
    _my_MainTimer->_setBuz
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setLED
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _DimmerIntr_ValueCalculate->_Division
    _DimmerIntr_Initialization->_Division
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _Division->___lbdiv
    _DlyOff_Main->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _IOC_ISR->_DimmerLights_IOC_1

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDimmerIntr_DimmingValue->_getDimmerLights_PercentToValue
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _setDimmerLights_Dimming->_setProductData
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _DimmerIntr_ValueCalculate->_Division
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _DimmerIntr_Initialization->_getDimmerLights_ValueToPercent
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   77695
                                              0 BANK1      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1185
                                              9 COMMON     1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    1733
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    1733
                                              9 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      44
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      4     4      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1069
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1069
                                              6 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0      93
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0      93
                                              4 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1100
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1100
                                              6 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2251
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    1146
                                              6 COMMON     1     1      0
                                              0 BANK0      4     4      0
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             2     2      0      34
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   37001
       _DimmerLights_DimmingFunction
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   36290
                                             73 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   21174
                                             69 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
                             _setLED
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1007
                                              4 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     222
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_RF                             3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     133
                                             58 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       8     6      2    1472
                                             61 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     133
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _getMain_All_LightsStatus                             1     1      0      37
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0      67
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   14817
                                             61 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     311
                                             58 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      46
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0     711
                                              5 BANK0      2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            3     3      0     680
                                              2 BANK0      3     3      0
                           _Division
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   27796
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            2     2      0   27796
                                             58 BANK0      2     2      0
                           _Division
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       6     6      0   11874
                                             52 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_PercentToValue                       6     6      0   15251
                                             52 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     430
                                             38 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     223
                                             22 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3377
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    3687
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    4221
                                             25 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    3214
                                              0 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2873
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _Division                                             5     4      1     649
                                              7 COMMON     3     2      1
                                              0 BANK0      2     2      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (6) ___lbdiv                                              5     4      1     345
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    2341
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    2341
                                             61 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setProductData                                       3     2      1     667
                                             58 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 4     4      0    1386
                                              9 COMMON     1     1      0
                                              6 BANK0      3     3      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1185
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      44
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Status                               2     2      0      67
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      44
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      44
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0       0
                 _DimmerLights_IOC_1
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_IOC_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _Division
         ___lbdiv
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
         _Division
           ___lbdiv
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
           _Division
             ___lbdiv
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
   _Exception_Main
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
   _TMR1_ISR
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      20      11       40.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     104      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     104      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Apr 11 16:39:58 2015

                    __size_of_Switch_Main 0007                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 09B3                            ___bmul@product 0074  
                                      l70 07EA                                        l56 0DBF  
                                      l66 07F0                                        l58 0DD1  
                                      l67 07EC                                        l68 07DC  
                                      _RD 0CA8                                        _WR 0CA9  
                            ___awdiv@sign 0021                                        _u1 0120  
                                      _Sw 006C                    __end_of_setDelayOff_GO 06E7  
                            ___ftadd@exp1 0045                              ___ftadd@exp2 0044  
                    _setDimmerLights_Main 0EE4                              ___ftadd@sign 0043  
                                     l240 0F99                      _setDimmerLights_SwOn 0D4E  
                                     l365 08C0                                       l561 0E19  
                                     l563 0E0B                                       l475 052B  
                                     l572 0E34                                       l566 0E17  
                                     l907 05D9                                       l883 0D48  
                                     l897 0AFA                                       _GIE 005F  
                                     _RA0 0060                                       _RB0 0068  
    __size_of_DimmerLights_Initialization 0007                                       _RB1 0069  
                                     _RB2 006A                                       _RA4 0064  
                                     _LED 007B                                       _RB3 006B  
                                     _RA6 0066                                       _RB5 006D  
                                     _RA7 0067                                       _ISR 0004  
                                     _WDT 00D1                                       _Cmd 007A  
            getDimmerLights_Status@lights 0074                                       _Sw1 0155  
              ??_setDimmerIntr_Dimming_RF 0073                ??_setDimmerIntr_Dimming_Sw 0073  
         setDimmerIntr_Dimming_RF@command 0072                     _Buzzer_Initialization 17AF  
                         __end_of_ADC_Set 17F9                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0075  
     __end_of_setDimmerIntr_ControlStatus 09DC               _setDimmerIntr_ControlStatus 09C7  
                       ??_getSw_KeyStatus 0072                                      ?_ISR 0070  
                            ___ftdiv@cntr 0030                           __end_of_IOC_ISR 0819  
                   _setDimmerLights_OnOff 04BC                              ___ftdiv@sign 0035  
                                    l1030 0C93                                      l1014 0CAD  
                                    l1062 0C24                                      l1071 09B2  
                                    l4113 08B3                                      l4041 069F  
                                    l1810 023D                                      l4051 06CC  
                         __end_of_IOC_Set 0861                                      l1477 0A0D  
                                    l4055 06DD                                      l1497 0194  
                                    l4235 0B81                                      l1499 008A  
                                    l1781 0FD2                                      l4173 090C  
                                    l5311 0E60                                      l3711 094F  
                                    l5321 0E7B                                      l3641 0FBE  
                                    l3633 0FA8                                      l4177 0911  
                                    l4185 09A1                                      l4417 0974  
                                    l1787 0FE9                                      l4179 0916  
                                    l3707 0949                                      l5325 0E83  
                                    l5317 0E72                                      l5309 0E54  
                                    l5261 0A83                                      l3637 0FAF  
                                    l3813 0209                                      l4189 09AD  
                                    l5413 0BE6                                      l5405 0BD2  
                                    l5271 0A92                                      l3647 0FD7  
                                    l3639 0FB9                                      l3831 024F  
                                    l3815 0213                                      l3807 01F6  
                                    l3903 038C                                      l3649 0FDF  
                                    l5337 0AC0                                      l3825 022F  
                                    l3817 0218                                      l5451 0D80  
                                    l5259 0A7A                                      l3835 0261  
                                    l3827 0239                                      l3819 021C  
                                    l3931 03EB                                      l3915 03C7  
                                    l5507 0CE7                                      l5293 0E41  
                                    l5453 0D88                                      l3845 027C  
                                    l3861 0440                                      l5701 0E29  
                                    l4733 0A18                                      l3855 042A  
                                    l3927 03E3                                      l3919 03CF  
                                    l5471 0509                                      l4825 07C8  
                                    l5449 0D7B                                      l3785 01C6  
                                    l4729 0A12                                      l5299 0E4C  
                                    l3795 01DC                                      l3883 049A  
                                    l3875 0481                                      l3955 05FA  
                   _setDimmerLights_SwOff 0B5B                                      l3789 01CD  
                                    l3981 0645                                      l3973 062A  
                                    l5469 04F4                                      l5477 0513  
                                    l5661 0F36                                      l5557 0AE5  
                                    l5741 0963                                      l5805 00B7  
                                    l3983 064E                                      l3975 0638  
                                    l5399 0BC8                                      l5647 0F07  
                                    l5911 0D27                                      l5823 0118  
                                    l5815 00E9                                      l5831 0146  
                                    l3897 0376                                      l3985 0651  
                                    l5489 0537                                      l5649 0F0D  
                                    l5753 055E                                      l5659 0F30  
                                    l3989 065F                                      l5767 05D2  
                                    l5759 0572                                      l5689 0E0D  
                                    l5885 0316                                      l5789 0074  
                                    l5949 0C75                                      l5983 0C0C  
                   _myMain_Initialization 0918                                      _CFGS 0CAE  
                            __CFG_WDTE$ON 0000                                      _FREE 0CAC  
                                    _LATA 010C                                      _LATB 010D  
                                    u3015 01F7                                      _LATC 010E  
                                    u3105 0230                                      u3045 020A  
                                    u3205 0491                                      u3215 049B  
                                    u3075 021D                                      u3325 03EC  
                                    u3405 062B                                      u3175 0452  
                                    u3335 03F2                                      u3255 0398  
                                    u2705 0FF0                                      u3185 0462  
                                    u3265 03A8                                      u2635 0FB4  
                                    u3195 0482                                      u3435 0646  
                                    u3285 03D0                                      u2655 0FCD  
                                    u3295 03D6                                      u3375 0601  
                                    u3545 06AB                                      u5315 0E61  
                                    u2675 0FDA                                      _PEIE 005E  
                                    u5325 0E6B                                      u5335 0E73  
                                    u6215 0D3F                                      u5295 0E57  
                                    u6265 0C8B                                      u4695 07BE  
                                    u3895 0A00                                      _LWLO 0CAD  
                                    _WREN 0CAA                                      _WPUB 020D  
                                    _Buz1 00BD                                      _main 0C95  
                            ___ftpack@arg 0072                       __end_of_DlyOff_Main 0FA0  
                            ___ftpack@exp 0075                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                         __end_of_WDT_Set 0800                                      ltemp 007E  
                                    start 001F                                      ttemp 007E  
                                    wtemp 007E         setDimmerLights_SwOn@dimmingStatus 0027  
    __end_of_DimmerLights_DimmingFunction 0E36     __size_of_DimmerLights_DimmingFunction 0053  
            _DimmerLights_DimmingFunction 0DE3                         ___bmul@multiplier 0075  
                            ___ftmul@cntr 0034                              ___ftmul@sign 0035  
                                   ??_ISR 0071                              ___fttol@exp1 0053  
              ?_DimmerIntr_ValueCalculate 0070                              ___fttol@lval 004F  
 __end_of_getDimmerLights_Allow_Condition 17B5  __size_of_getDimmerLights_Allow_Condition 0003  
       ??_getDimmerLights_Allow_Condition 0072          ?_getDimmerLights_Allow_Condition 0070  
         _getDimmerLights_Allow_Condition 17B2                    _getDimmerLights_Status 08C2  
                        __end_of_LED_Main 17C8                                _DimmerIntr 00D3  
                   ?_setDimmerLights_Main 0070                           ?_setDelayOff_GO 005D  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 00E8  
                         __end_of___awdiv 0E8A                           __end_of___lbdiv 0A94  
                         __end_of___ftadd 0294                           __end_of___ftdiv 04BC  
                         __end_of___ftneg 0822                           __end_of___ftmul 0413  
                         ___awdiv@divisor 0072                                     _T1CON 0018  
                         __end_of___fttol 0668                                     _IOCBF 0396  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                                   i1l527 0C4B                                     i1l846 001A  
                         ___awdiv@counter 0020                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTA 000C  
                                   _PORTB 000D                                     _PORTC 000E  
                            ?_setLED_Main 0070                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                 __end_of_Timeout_Counter 0A06                             __CFG_WRT$HALF 0000  
  __end_of_getDimmerLights_ValueToPercent 074C   __size_of_getDimmerLights_ValueToPercent 0065  
          _getDimmerLights_ValueToPercent 06E7                                     _Light 00D4  
                        __end_of_TMR1_ISR 0A53                   __size_of_setProductData 000C  
                        __end_of_TMR1_Set 08A8        DimmerLights_DimmingFunction@lights 0026  
                           ___awtoft@sign 0025                             ___ftpack@sign 0076  
                           ??_Buzzer_Main 0072                          __end_of_WDT_Main 0947  
                          __CFG_BOREN$OFF 0000                        Flash_Memory_Read@i 0073  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 000E             __end_of_setLED_Initialization 08EC  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                       _getAll_Sw_KeyStatus 0958  
                         ___lbdiv@divisor 0072               __size_of_Flash_Memory_Write 002A  
                         ___lbdiv@counter 0075          __size_of_DelayOff_Initialization 0004  
                  ??_Flash_Memory_Erasing 0072               ??_setDimmerLights_DimmingOn 0074  
                         __initialization 0021             ?_DimmerLights_DimmingFunction 0070  
                       ?_setMemory_Modify 0070                          __end_of_Division 0909  
                 __size_of_getDelayOff_GO 000E                              __end_of_main 0CD0  
                        __end_of_Fosc_Set 17CC            getMain_All_LightsStatus@status 0072  
                      ??_setMemory_Modify 0072              setDimmerLights_OnOff@command 0065  
                          _Exception_Main 0BEF         __end_of_DimmerIntr_ValueCalculate 0B2D  
                               ??_ADC_Set 0072                      _setSw_Initialization 08EC  
                                  ??_main 007A                             ___fttol@sign1 004E  
                    ?_getAll_Sw_KeyStatus 0070               ?_setDimmerIntr_DimmingValue 005A  
            ??_DimmerLights_SelectPointer 0072                            _setMemory_Data 084B  
                  ?_Buzzer_Initialization 0070                   ??_DlyOff_Initialization 0074  
      setDimmerIntr_ControlStatus@command 0072                   _setDimmerLights_Dimming 0CD0  
                               ??_IOC_ISR 0071                                 ??_IOC_Set 0072  
                             _DimmerIntr1 00A0                  _getMain_All_LightsStatus 0800  
                 ??_Switch_Initialization 0077                    ?_setDimmerLights_OnOff 0065  
                  ?_setDimmerLights_SwOff 0070                               _DlyOff_Main 0F41  
                  ?_myMain_Initialization 0070                                    _ADCON0 009D  
                                  _ADCON1 009E          __end_of_getDimmerIntr_Dimming_Sw 08B5  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0074                                 ??_WDT_Set 0072  
                        __end_of___awtoft 0AD7                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                        __end_of___ftpack 1000                  _getMain_All_Error_Status 17B5  
                                  _IOCBF2 1CB2                                    i1l5151 0012  
                                  i1l4601 0BB3                                    i1l4551 0C32  
                                  i1l4563 0C41                                    i1l4557 0C39  
                                  i1l4873 0A4C                                    i1l4883 0815  
                                  _FVRCON 0117      getDimmerLights_Allow_Condition@allow 0072  
                                  _PMADRH 0192                                    _PMADRL 0191  
                                  _PMDATH 0194                                    _PMDATL 0193  
                                  _PMCON2 0196                                    _OSCCON 0099  
                                  u475_25 0A47                                    _TMR1IE 0488  
                                  _TMR1IF 0088                                    _IO_Set 0A1B  
                                  _WDTCON 0097      __end_of_setDimmerLights_DimmingClose 17DA  
   __size_of_setDimmerLights_DimmingClose 0005              _setDimmerLights_DimmingClose 17D5  
             ??_setDimmerIntr_MaxmumValue 005B                                    _Dimmer 00C9  
                                  _DlySw1 00DF                     __end_of_getCmd_Status 0918  
              __end_of_Mcu_Initialization 098C                       __end_of_Buzzer_Main 07F7  
                                  _Memory 0130                                    _Timer1 00CE  
                                  ___bmul 0947                    __end_of_Exception_Main 0C25  
                    Exception_Main@lights 0020                                 ??___awdiv 0076  
                               ??___lbdiv 0073                                 ??___ftadd 003F  
            __size_of_DelayOffPointSelect 000B                                 ??___ftdiv 002C  
                               ??___ftneg 007A                                 ??___ftmul 002C  
                               ??___fttol 004A              ?_Flash_Memory_Initialization 0070  
                  ??_setDimmerLights_Main 007A                      Exception_Main@status 0022  
                  ??_setDimmerLights_SwOn 0079                                    _setLED 0BBA  
                                  _myMain 00B0                    __end_of_setMemory_Data 0856  
                   ?_setSw_Initialization 0070                          ___awdiv@quotient 0022  
                                  _setBuz 0D90          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 09F1          __end_of_setDimmerIntr_Dimming_Sw 099F  
                   ___ftmul@f3_as_product 0031                 _setDimmerLights_DimmingOn 0A94  
                Flash_Memory_Read@address 0074                          ?_Timeout_Counter 0070  
             __size_of_DimmerLights_IOC_1 0030                     __end_of_SwPointSelect 086C  
             __size_of_DimmerLights_TMR_1 0038              __size_of_Flash_Memory_Modify 0089  
                 __size_of_LedPointSelect 000A           setDimmerIntr_Dimming_Sw@command 0072  
                        ___lbdiv@dividend 0074                       Flash_Memory_Write@i 0073  
            __size_of_Flash_Memory_Unlock 0009                                _TouchPower 0A06  
                 __end_of__initialization 0041           setDimmerIntr_DimmingValue@value 005A  
         getDimmerIntr_DimmingValue@value 0074                                 ?_LED_Main 0070  
                              ___ftadd@f1 0039                                ___ftadd@f2 003C  
                           ?_my_MainTimer 0070                                ___ftdiv@f1 0029  
                              ___ftdiv@f2 0026                                ___ftdiv@f3 0031  
           ?_setDimmerLights_DimmingClose 0070                                ___ftneg@f1 0036  
                              ___awtoft@c 0020                       ___bmul@multiplicand 0072  
            ?_DimmerLights_Initialization 0070                                ___ftmul@f1 0026  
                              ___ftmul@f2 0029                ?_DimmerIntr_Initialization 0070  
                              ___fttol@f1 0046                            __pcstackCOMMON 0070  
                         ?_Exception_Main 0070                              __pidataBANK3 0A53  
                               ?_TMR1_ISR 0070                                 ?_TMR1_Set 0070  
                      _LED_Initialization 17C0                           _getSw_KeyStatus 0969  
                         ?_setMemory_Data 0072            ??_DimmerLights_DimmingFunction 0025  
        ??_getDimmerLights_PercentToValue 0054           ?_getDimmerLights_PercentToValue 0070  
               ??_setDimmerLights_Dimming 005E             ??_Flash_Memory_Initialization 0076  
                        ___lbdiv@quotient 0076                                 ?_WDT_Main 0070  
       setDimmerIntr_ControlStatus@lights 0074                 _setDimmerIntr_MaxmumValue 0878  
              __end_of_set_TimeoutCleared 17DF           setDimmerIntr_MaxmumValue@lights 005C  
                     ?_LED_Initialization 0070                            _setProductData 086C  
                    __size_of_setLED_Main 002E                                 ?_Division 0077  
                              __pbssBANK0 006A                                __pbssBANK1 00A0  
                              __pbssBANK2 0120                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 07B1                                   ?_IO_Set 0070  
                          ??_my_MainTimer 0079                                ??_LED_Main 0077  
                         __CFG_VCAPEN$OFF 0000                   _DelayOff_Initialization 17B8  
                           ??_Switch_Main 007A                      ??_LED_Initialization 0077  
                            _DimmerLights 006B                         LedPointSelect@led 0073  
                  __size_of_DelayOff_Main 0004                               setBuz@count 0078  
                 ?_getDimmerLights_Status 0070                                __pmaintext 0C95  
                          _getDelayOff_GO 08D0                                   ?___bmul 0072  
                        ??_setDelayOff_GO 005F         __end_of_DimmerIntr_Initialization 0EE4  
           ??_DimmerLights_Initialization 007A                                ??_TMR1_ISR 0071  
       __size_of_getDimmerIntr_Dimming_Sw 000D                                ??_TMR1_Set 0072  
                              __pintentry 0004                    ??_setSw_Initialization 0076  
               ?_getDimmerIntr_Dimming_Sw 0070               ??_DimmerIntr_ValueCalculate 0022  
                                 ?_setLED 0074                                   _ADC_Set 17F2  
                                 ?_setBuz 0024                                 ?___awtoft 0020  
                               ?___ftpack 0072        __end_of_DimmerLights_SelectPointer 084B  
              _DimmerLights_SelectPointer 0840                                ??_WDT_Main 0072  
                  __end_of_setProductData 0878             setDimmerLights_Dimming@lights 0060  
                                 _IOC_ISR 0810                                   _IOC_Set 0856  
           setDimmerLights_Dimming@status 005D     getDimmerLights_Allow_Condition@lights 0070  
                       _Flash_Memory_Main 0D0D                         _Flash_Memory_Read 09B3  
                      ?_Flash_Memory_Main 0070                        ?_Flash_Memory_Read 0070  
                              ??_Division 0078                                   _WDT_Set 07F7  
                  __size_of_setCmd_Status 0014                                ??_Fosc_Set 0072  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 0D0D  
                     getCmd_Status@number 0072                           __size_of_IO_Set 001A  
                     setCmd_Status@number 0074         __size_of_setDimmerIntr_Dimming_RF 0015  
       __size_of_setDimmerIntr_Dimming_Sw 0013                 ?_setDimmerIntr_Dimming_RF 0072  
                     ??_Flash_Memory_Main 0078                 ?_setDimmerIntr_Dimming_Sw 0072  
                     ??_Flash_Memory_Read 0072                    __end_of_getDelayOff_GO 08DE  
          __end_of_getDimmerLights_Status 08D0                   __end_of_getSw_KeyStatus 097A  
                         __size_of___bmul 0011                       setProductData@value 005A  
                                 ___awdiv 0E36            ??_setDimmerLights_DimmingClose 0075  
                                 ___lbdiv 0A73                                   ___ftadd 019E  
                                 ___ftdiv 0413                                   ___ftneg 0819  
                                 ___ftmul 035F                                   ___fttol 05E1  
                     __end_of_Switch_Main 1800                ??_getMain_All_LightsStatus 0072  
                 ??_Buzzer_Initialization 0072                                ??___awtoft 0023  
                              ??___ftpack 0077                           __size_of_setLED 0035  
         DimmerIntr_ValueCalculate@lights 0024                           __size_of_setBuz 0053  
                                 __ptext1 0C5D                                   __ptext2 0918  
                                 __ptext3 0937                                   __ptext4 0002  
                                 __ptext5 17F9                                   __ptext6 0045  
                                 __ptext7 0A94                                   __ptext8 0969  
                                 __ptext9 0861                              __size_of_ISR 001B  
              ??_getMain_All_Error_Status 0072                   ??_setDimmerLights_OnOff 0066  
                         ?_setProductData 005A                 __end_of_Flash_Memory_Main 0D4E  
               __end_of_Flash_Memory_Read 09C7                   ??_setDimmerLights_SwOff 0074  
                 ??_myMain_Initialization 0072                             _DelayOff_Main 17BC  
                       _DimmerLights_Main 0808            __size_of_DlyOff_Initialization 0005  
               __size_of_setMemory_Modify 0010             __end_of_DlyOff_Initialization 17D5  
                            ?_DlyOff_Main 0070                        ?_DimmerLights_Main 0070  
                                 _product 006D                            _LedPointSelect 082B  
               getAll_Sw_KeyStatus@status 0073                       _DelayOffPointSelect 0835  
                                 clrloop0 17E6            __size_of_Switch_Initialization 0004  
               _DimmerIntr_ValueCalculate 0B01             __end_of_Switch_Initialization 17D0  
                    end_of_initialization 0041                 ??_DelayOff_Initialization 0075  
              __end_of_Flash_Memory_Write 0B01        __size_of_setDimmerLights_DimmingOn 0021  
                                 init_ram 17DF                       ??_DimmerLights_Main 007A  
                    Flash_Memory_Read@ret 0075                                   initloop 17E0  
                              _setSw_Main 0045                    setDimmerLights_SwOn@sw 0028  
                    Flash_Memory_Modify@i 0077                     _setLED_Initialization 08DE  
                         ?_getDelayOff_GO 0070             __size_of_Flash_Memory_Erasing 000C  
                    ?_DelayOffPointSelect 0070                       _Flash_Memory_Modify 0558  
                           _setCmd_Status 099F                       _Flash_Memory_Unlock 0822  
                     __size_of_TouchPower 0015                  setLED_Initialization@led 0076  
                  setSw_Initialization@sw 0076                 __end_of_DimmerLights_Main 0810  
                      _Mcu_Initialization 097A                      __end_of_my_MainTimer 0C95  
                          ?_DelayOff_Main 0070                          __CFG_FOSC$INTOSC 0000  
                  __end_of_LedPointSelect 0835          setDimmerIntr_DimmingValue@lights 005C  
        getDimmerIntr_DimmingValue@lights 0073                       ?_Mcu_Initialization 0070  
                    ?_Flash_Memory_Modify 0070                      ?_Flash_Memory_Unlock 0070  
      __size_of_setDimmerIntr_MaxmumValue 000C            setDimmerIntr_Dimming_RF@lights 0074  
         getMain_All_Error_Status@command 0070                               ___ftdiv@exp 0034  
       __end_of_setDimmerLights_DimmingOn 0AB5                          ??_Exception_Main 0076  
                          __end_of_IO_Set 0A35                               _Switch_Main 17F9  
                       __size_of_LED_Main 0004                          ?_getSw_KeyStatus 0070  
                        ??_setMemory_Data 0073                               ___ftmul@exp 0030  
             ??_DimmerIntr_Initialization 005A                      ??_Mcu_Initialization 0073  
             __end_of_getAll_Sw_KeyStatus 0969                     ??_DelayOffPointSelect 0072  
                           ?_WDT_Clearing 0070                            ?_setCmd_Status 0072  
                          __end_of___bmul 0958       __size_of_getDimmerIntr_DimmingValue 000D  
                       getSw_KeyStatus@sw 0070                         __size_of_TMR1_ISR 001E  
        DimmerLights_SelectPointer@lights 0073                         __size_of_TMR1_Set 000C  
           __size_of_setDimmerLights_Main 005D                            __end_of_setLED 0BEF  
           __size_of_setDimmerLights_SwOn 0042                            __end_of_setBuz 0DE3  
              __end_of_DimmerLights_IOC_1 0BBA                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 0014                         __size_of_WDT_Main 0010  
              __end_of_DimmerLights_TMR_1 0C5D                       start_initialization 0021  
                         ?_LedPointSelect 0070                               __end_of_ISR 001F  
                  __size_of_getCmd_Status 000F                     ??_Flash_Memory_Modify 0076  
            ?_setDimmerIntr_ControlStatus 0072                     ??_Flash_Memory_Unlock 0072  
  __end_of_getDimmerLights_PercentToValue 07B1   __size_of_getDimmerLights_PercentToValue 0065  
          _getDimmerLights_PercentToValue 074C                              ?_Buzzer_Main 0070  
     getDimmerLights_PercentToValue@value 0056                        _set_TimeoutCleared 17DA  
       __end_of_setDimmerIntr_MaxmumValue 0884                                  ??_IO_Set 0072  
                __size_of_Timeout_Counter 0015                                 _VarErrLED 00E4  
                       __size_of_Division 000F                               ?_setSw_Main 0070  
                  ?_setLED_Initialization 0070                         __size_of_Fosc_Set 0004  
                     ?_set_TimeoutCleared 0070                            ??_WDT_Clearing 0072  
                   setProductData@address 005C                       Exception_Main@count 0021  
                     Exception_Main@error 0023                                  ??___bmul 0073  
                  __size_of_SwPointSelect 000B          __end_of_getMain_All_LightsStatus 0808  
                             __pdataBANK3 01A0                                  ??_setLED 0075  
                                ?_ADC_Set 0070                                  ??_setBuz 0077  
                         ??_DelayOff_Main 007A               ?_DimmerLights_SelectPointer 0070  
        __end_of_getMain_All_Error_Status 17B8                __size_of_DimmerLights_Main 0008  
                      setMemory_Data@data 0072            setDimmerIntr_Dimming_Sw@lights 0074  
          getDimmerIntr_Dimming_Sw@lights 0072                             ??_setLED_Main 0074  
                       __size_of___awtoft 0022                         __size_of___ftpack 0060  
                                ?_IOC_ISR 0070                               __pbssCOMMON 007A  
                                ?_IOC_Set 0070            getDimmerIntr_Dimming_Sw@status 0073  
                               ___latbits 0003                          _setMemory_Modify 0927  
                           __pcstackBANK0 0020                             __pcstackBANK1 00E8  
                    ??_set_TimeoutCleared 0072                 _DimmerIntr_Initialization 0E8A  
                           DlyOff_Main@sw 005F                                  ?_WDT_Set 0070  
           ??_setDimmerIntr_ControlStatus 0073                              ??_TouchPower 0072  
                    __size_of_DlyOff_Main 005F            setDimmerIntr_MaxmumValue@value 005A  
             setDimmerLights_DimmingOn@sw 0074                             _DimmerLights1 00D6  
                   setDelayOff_GO@command 005D                                 __pnvBANK0 006D  
             __size_of_LED_Initialization 0004        __size_of_DimmerIntr_ValueCalculate 002C  
                   DelayOffPointSelect@sw 0073                             _getCmd_Status 0909  
                              setBuz@time 0024                           ??_setCmd_Status 0073  
                     setDelayOff_GO@value 005E                  ?_setDimmerLights_Dimming 005D  
     __end_of_Flash_Memory_Initialization 035F               _Flash_Memory_Initialization 0294  
                                ?___awdiv 0072                                  ?___lbdiv 0072  
                                ?___ftadd 0039                                  ?___ftdiv 0026  
                                ?___ftneg 0036                                  ?___ftmul 0026  
                                ?___fttol 0046                     __size_of_my_MainTimer 0038  
                        ??_setProductData 005B             __size_of_setSw_Initialization 000E  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 17B2  
                      __end_of_TouchPower 0A1B                       __size_of_setSw_Main 0159  
      __end_of_getDimmerIntr_DimmingValue 08C2              ??_setDimmerIntr_DimmingValue 005B  
              _getDimmerIntr_DimmingValue 08B5            __size_of_setDimmerLights_OnOff 009C  
           __end_of_setDimmerLights_OnOff 0558            __size_of_setDimmerLights_SwOff 002F  
          __size_of_myMain_Initialization 000F             __end_of_setDimmerLights_SwOff 0B8A  
           __end_of_myMain_Initialization 0927                             _SwPointSelect 0861  
                     __end_of_setLED_Main 0B5B                          ??_getDelayOff_GO 0074  
                                _LED_Main 17C4                           SwPointSelect@sw 0073  
                               clear_ram0 17E5                              _my_MainTimer 0C5D  
     __end_of_DimmerLights_Initialization 17F2               _DimmerLights_Initialization 17EB  
                  _Flash_Memory_Main$2716 0021                            ?_getCmd_Status 0070  
                _getDimmerIntr_Dimming_Sw 08A8                                  _GO_nDONE 04E9  
                       ??_Timeout_Counter 0072      __size_of_setDimmerIntr_ControlStatus 0015  
     __size_of_setDimmerIntr_DimmingValue 000C                        _Flash_Memory_Write 0AD7  
                                _TMR1_ISR 0A35                                  _TMR1_Set 089C  
                                _WDT_Main 0937                   DlyOff_Initialization@sw 0074  
                   getSw_KeyStatus@status 0073                          __size_of_ADC_Set 0007  
                     ?_Flash_Memory_Write 0070                   __size_of_setDelayOff_GO 007F  
                                _DelayOff 006A                              setSw_Main@sw 002B  
                        __size_of_IOC_ISR 0009            getMain_All_Error_Status@status 0072  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 089C  
                          ?_SwPointSelect 0070                            setLED_Main@led 0076  
                    __end_of_WDT_Clearing 0004                     _DlyOff_Initialization 17D0  
       __size_of_getMain_All_LightsStatus 0008                                  _Division 08FA  
               ?_getMain_All_LightsStatus 0070                  _setDimmerIntr_Dimming_RF 09DC  
             setDimmerLights_OnOff@lights 0068                  _setDimmerIntr_Dimming_Sw 098C  
                                _Fosc_Set 17C8                          __size_of_WDT_Set 0009  
                   _Switch_Initialization 17CC         __size_of_getMain_All_Error_Status 0003  
                    ??_Flash_Memory_Write 0072                 ?_getMain_All_Error_Status 0070  
                    __size_of_Buzzer_Main 0046                              ?_Switch_Main 0070  
     __size_of_DimmerLights_SelectPointer 000B                                  _SwDetect 00D5  
                        getCmd_Status@cmd 0073                          setCmd_Status@cmd 0072  
        ??_getDimmerLights_ValueToPercent 0054           ?_getDimmerLights_ValueToPercent 0070  
                               setLED@led 0075                          __size_of___awdiv 0054  
                        __size_of___lbdiv 0021                          __size_of___ftadd 00F6  
                        __size_of___ftdiv 00A9                          __size_of___ftneg 0009  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                setDimmerLights_SwOn@idle 0026                                  ___awtoft 0AB5  
                        ??_LedPointSelect 0072                                  ___ftpack 0FA0  
                             _setLED_Main 0B2D                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
                        setDelayOff_GO@sw 0064                                  __ptext10 0A06  
                                __ptext11 17DA                                  __ptext20 17C8  
                                __ptext12 09F1                                  __ptext21 17F2  
                                __ptext13 17CC                                  __ptext30 0294  
                                __ptext22 17C4                                  __ptext14 08EC  
                                __ptext31 084B                                  __ptext23 0B2D  
                                __ptext15 097A                                  __ptext40 0BBA  
                                __ptext32 0AD7                                  __ptext24 17C0  
                                __ptext16 07F7                                  __ptext41 082B  
                                __ptext33 0822                                  __ptext25 08DE  
                                __ptext17 089C                                  __ptext50 08D0  
                                __ptext42 17D5                                  __ptext34 09B3  
                                __ptext26 0D0D                                  __ptext18 0A1B  
                                __ptext51 0909                                  __ptext43 09DC  
                                __ptext35 0BEF                                  __ptext27 0958  
                                __ptext19 0856                                  __ptext60 17AE  
                                __ptext52 0CD0                                  __ptext44 0884  
                                __ptext36 17B5                                  __ptext28 0558  
                                __ptext61 0E8A                                  __ptext53 0878  
                                __ptext45 09C7                                  __ptext37 0808  
                                __ptext29 0890                                  __ptext70 0AB5  
                                __ptext62 0927                                  __ptext54 098C  
                                __ptext46 0668                                  __ptext38 0EE4  
                                __ptext71 0FA0                                  __ptext63 06E7  
                                __ptext55 08B5                                  __ptext47 0947  
                                __ptext39 04BC                                  __ptext80 08A8  
                                __ptext72 08FA                                  __ptext64 074C  
                                __ptext56 17B2                                  __ptext48 099F  
                                __ptext81 0B5B                                  __ptext73 0A73  
                                __ptext65 05E1                                  __ptext57 0DE3  
                                __ptext49 0800                                  __ptext90 0A35  
                                __ptext82 08C2                                  __ptext74 17BC  
                                __ptext66 0819                                  __ptext58 0B01  
                                __ptext91 0C25                                  __ptext83 0840  
                                __ptext75 0F41                                  __ptext67 035F  
                                __ptext59 17EB                                  __ptext92 0810  
                                __ptext84 17B8                                  __ptext76 086C  
                                __ptext68 0413                                  __ptext93 0B8A  
                                __ptext85 17D0                                  __ptext77 0D4E  
                                __ptext69 019E                                  __ptext86 0835  
                                __ptext78 0D90                                  __ptext87 07B1  
                                __ptext79 0E36                                  __ptext88 17AF  
                                __product 01A0                   ??_setLED_Initialization 0076  
                ??_getDimmerLights_Status 0074              __end_of_setDimmerLights_Main 0F41  
                      _DimmerLights_IOC_1 0B8A              __end_of_setDimmerLights_SwOn 0D90  
                            ??_setSw_Main 0029                             setLED@command 0074  
                           __size_of_main 003B        __size_of_DimmerIntr_Initialization 005A  
                         ??_getCmd_Status 0072                        _DimmerLights_TMR_1 0C25  
              setDimmerLights_Main@lights 0069               __end_of_DelayOffPointSelect 0840  
              ?_setDimmerLights_DimmingOn 0070                  __end_of_setMemory_Modify 0937  
                     ?_DimmerLights_IOC_1 0070                       ?_DimmerLights_TMR_1 0070  
             __size_of_Mcu_Initialization 0012               Flash_Memory_Main@key_Status 0020  
                _getAll_Sw_KeyStatus$5378 0074                                  main@argc 00E8  
                                main@argv 00EA                      _getSw_KeyStatus$5375 0074  
     getDimmerLights_ValueToPercent@value 0056                  __size_of_getSw_KeyStatus 0011  
            setDimmerLights_Dimming@value 005F        __end_of_setDimmerIntr_DimmingValue 0890  
              _setDimmerIntr_DimmingValue 0884               __end_of_Flash_Memory_Modify 05E1  
            __size_of_getAll_Sw_KeyStatus 0011               __end_of_Flash_Memory_Unlock 082B  
                         ??_SwPointSelect 0072                        __end_of_setSw_Main 019E  
                    ??_DimmerLights_IOC_1 0070           getDimmerLights_PercentToValue@i 0057  
                  ?_DlyOff_Initialization 0070                      ??_DimmerLights_TMR_1 0070  
                          Division@result 0021                               pic14e$flags 007E  
            ??_getDimmerIntr_DimmingValue 0072                   setDimmerLights_SwOff@sw 0074  
                                intlevel1 0000                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 0061                           setDelayOff_GO@j 0062  
                         setDelayOff_GO@k 0063    __end_of_setDimmerLights_Initialization 17AF  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 17AE  
              ?_setDimmerIntr_MaxmumValue 005A                      _Flash_Memory_Erasing 0890  
                 __size_of_Exception_Main 0036                             Division@value 0020  
         __end_of_DelayOff_Initialization 17BC                     __size_of_WDT_Clearing 0002  
                   __end_of_DelayOff_Main 17C0                   __size_of_setMemory_Data 000B  
                          _setDelayOff_GO 0668               ?_getDimmerIntr_DimmingValue 0070  
        __size_of_setDimmerLights_Dimming 003D      __size_of_Flash_Memory_Initialization 00CB  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 005D  
                   setMemory_Data@address 0074                ??_getDimmerIntr_Dimming_Sw 0072  
            __end_of_setSw_Initialization 08FA                           _Timeout_Counter 09F1  
         __size_of_getDimmerLights_Status 000E           getDimmerLights_ValueToPercent@i 0057  
        Flash_Memory_Initialization@value 0077                __end_of_LED_Initialization 17C4  
                             Division@num 0077                   setMemory_Modify@command 0073  
