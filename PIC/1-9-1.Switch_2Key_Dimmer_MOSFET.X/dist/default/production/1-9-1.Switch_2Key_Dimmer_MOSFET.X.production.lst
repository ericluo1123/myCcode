

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Apr 11 16:49:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text106,local,class=CODE,merge=1,inline,delta=2
   125                           	psect	text107,local,class=CODE,merge=1,delta=2
   126                           	psect	text108,local,class=CODE,merge=1,delta=2
   127                           	psect	text109,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   129                           	psect	intentry,global,class=CODE,delta=2
   130                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text113,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text114,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text115,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text116,local,class=CODE,merge=1,inline,delta=2
   135                           	psect	text117,local,class=CODE,merge=1,inline,delta=2
   136                           	dabs	1,0x7E,2
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0097                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009B                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  0116                     	;# 
   184  0117                     	;# 
   185  011D                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  018E                     	;# 
   189  0191                     	;# 
   190  0191                     	;# 
   191  0192                     	;# 
   192  0193                     	;# 
   193  0193                     	;# 
   194  0194                     	;# 
   195  0195                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019C                     	;# 
   205  019C                     	;# 
   206  019D                     	;# 
   207  019E                     	;# 
   208  019F                     	;# 
   209  020D                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0213                     	;# 
   217  0214                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  0291                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0293                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  0394                     	;# 
   235  0395                     	;# 
   236  0396                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  0116                     	;# 
   295  0117                     	;# 
   296  011D                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0197                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019C                     	;# 
   316  019C                     	;# 
   317  019D                     	;# 
   318  019E                     	;# 
   319  019F                     	;# 
   320  020D                     	;# 
   321  0210                     	;# 
   322  0211                     	;# 
   323  0211                     	;# 
   324  0212                     	;# 
   325  0212                     	;# 
   326  0213                     	;# 
   327  0213                     	;# 
   328  0214                     	;# 
   329  0214                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0216                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0217                     	;# 
   337  0291                     	;# 
   338  0291                     	;# 
   339  0292                     	;# 
   340  0293                     	;# 
   341  0298                     	;# 
   342  0298                     	;# 
   343  0299                     	;# 
   344  029A                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEB                     	;# 
   356  0FED                     	;# 
   357  0FEE                     	;# 
   358  0FEF                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  0010                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0015                     	;# 
   378  0016                     	;# 
   379  0016                     	;# 
   380  0017                     	;# 
   381  0018                     	;# 
   382  0019                     	;# 
   383  001A                     	;# 
   384  001B                     	;# 
   385  001C                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  0090                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0099                     	;# 
   396  009A                     	;# 
   397  009B                     	;# 
   398  009B                     	;# 
   399  009C                     	;# 
   400  009D                     	;# 
   401  009E                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  0116                     	;# 
   406  0117                     	;# 
   407  011D                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  018E                     	;# 
   411  0191                     	;# 
   412  0191                     	;# 
   413  0192                     	;# 
   414  0193                     	;# 
   415  0193                     	;# 
   416  0194                     	;# 
   417  0195                     	;# 
   418  0196                     	;# 
   419  0197                     	;# 
   420  0199                     	;# 
   421  019A                     	;# 
   422  019B                     	;# 
   423  019B                     	;# 
   424  019B                     	;# 
   425  019B                     	;# 
   426  019C                     	;# 
   427  019C                     	;# 
   428  019D                     	;# 
   429  019E                     	;# 
   430  019F                     	;# 
   431  020D                     	;# 
   432  0210                     	;# 
   433  0211                     	;# 
   434  0211                     	;# 
   435  0212                     	;# 
   436  0212                     	;# 
   437  0213                     	;# 
   438  0213                     	;# 
   439  0214                     	;# 
   440  0214                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0216                     	;# 
   445  0216                     	;# 
   446  0217                     	;# 
   447  0217                     	;# 
   448  0291                     	;# 
   449  0291                     	;# 
   450  0292                     	;# 
   451  0293                     	;# 
   452  0298                     	;# 
   453  0298                     	;# 
   454  0299                     	;# 
   455  029A                     	;# 
   456  0394                     	;# 
   457  0395                     	;# 
   458  0396                     	;# 
   459  0FE4                     	;# 
   460  0FE5                     	;# 
   461  0FE6                     	;# 
   462  0FE7                     	;# 
   463  0FE8                     	;# 
   464  0FE9                     	;# 
   465  0FEA                     	;# 
   466  0FEB                     	;# 
   467  0FED                     	;# 
   468  0FEE                     	;# 
   469  0FEF                     	;# 
   470  0000                     	;# 
   471  0001                     	;# 
   472  0002                     	;# 
   473  0003                     	;# 
   474  0004                     	;# 
   475  0005                     	;# 
   476  0006                     	;# 
   477  0007                     	;# 
   478  0008                     	;# 
   479  0009                     	;# 
   480  000A                     	;# 
   481  000B                     	;# 
   482  000C                     	;# 
   483  000D                     	;# 
   484  000E                     	;# 
   485  0010                     	;# 
   486  0011                     	;# 
   487  0012                     	;# 
   488  0015                     	;# 
   489  0016                     	;# 
   490  0016                     	;# 
   491  0017                     	;# 
   492  0018                     	;# 
   493  0019                     	;# 
   494  001A                     	;# 
   495  001B                     	;# 
   496  001C                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0099                     	;# 
   507  009A                     	;# 
   508  009B                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  011D                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521  018E                     	;# 
   522  0191                     	;# 
   523  0191                     	;# 
   524  0192                     	;# 
   525  0193                     	;# 
   526  0193                     	;# 
   527  0194                     	;# 
   528  0195                     	;# 
   529  0196                     	;# 
   530  0197                     	;# 
   531  0199                     	;# 
   532  019A                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019C                     	;# 
   538  019C                     	;# 
   539  019D                     	;# 
   540  019E                     	;# 
   541  019F                     	;# 
   542  020D                     	;# 
   543  0210                     	;# 
   544  0211                     	;# 
   545  0211                     	;# 
   546  0212                     	;# 
   547  0212                     	;# 
   548  0213                     	;# 
   549  0213                     	;# 
   550  0214                     	;# 
   551  0214                     	;# 
   552  0215                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0216                     	;# 
   556  0216                     	;# 
   557  0217                     	;# 
   558  0217                     	;# 
   559  0291                     	;# 
   560  0291                     	;# 
   561  0292                     	;# 
   562  0293                     	;# 
   563  0298                     	;# 
   564  0298                     	;# 
   565  0299                     	;# 
   566  029A                     	;# 
   567  0394                     	;# 
   568  0395                     	;# 
   569  0396                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000D                     	;# 
   595  000E                     	;# 
   596  0010                     	;# 
   597  0011                     	;# 
   598  0012                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  008C                     	;# 
   609  008D                     	;# 
   610  008E                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0099                     	;# 
   618  009A                     	;# 
   619  009B                     	;# 
   620  009B                     	;# 
   621  009C                     	;# 
   622  009D                     	;# 
   623  009E                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  011D                     	;# 
   630  018C                     	;# 
   631  018D                     	;# 
   632  018E                     	;# 
   633  0191                     	;# 
   634  0191                     	;# 
   635  0192                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0194                     	;# 
   639  0195                     	;# 
   640  0196                     	;# 
   641  0197                     	;# 
   642  0199                     	;# 
   643  019A                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019C                     	;# 
   649  019C                     	;# 
   650  019D                     	;# 
   651  019E                     	;# 
   652  019F                     	;# 
   653  020D                     	;# 
   654  0210                     	;# 
   655  0211                     	;# 
   656  0211                     	;# 
   657  0212                     	;# 
   658  0212                     	;# 
   659  0213                     	;# 
   660  0213                     	;# 
   661  0214                     	;# 
   662  0214                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0216                     	;# 
   667  0216                     	;# 
   668  0217                     	;# 
   669  0217                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  0394                     	;# 
   679  0395                     	;# 
   680  0396                     	;# 
   681  0FE4                     	;# 
   682  0FE5                     	;# 
   683  0FE6                     	;# 
   684  0FE7                     	;# 
   685  0FE8                     	;# 
   686  0FE9                     	;# 
   687  0FEA                     	;# 
   688  0FEB                     	;# 
   689  0FED                     	;# 
   690  0FEE                     	;# 
   691  0FEF                     	;# 
   692  0000                     	;# 
   693  0001                     	;# 
   694  0002                     	;# 
   695  0003                     	;# 
   696  0004                     	;# 
   697  0005                     	;# 
   698  0006                     	;# 
   699  0007                     	;# 
   700  0008                     	;# 
   701  0009                     	;# 
   702  000A                     	;# 
   703  000B                     	;# 
   704  000C                     	;# 
   705  000D                     	;# 
   706  000E                     	;# 
   707  0010                     	;# 
   708  0011                     	;# 
   709  0012                     	;# 
   710  0015                     	;# 
   711  0016                     	;# 
   712  0016                     	;# 
   713  0017                     	;# 
   714  0018                     	;# 
   715  0019                     	;# 
   716  001A                     	;# 
   717  001B                     	;# 
   718  001C                     	;# 
   719  008C                     	;# 
   720  008D                     	;# 
   721  008E                     	;# 
   722  0090                     	;# 
   723  0091                     	;# 
   724  0092                     	;# 
   725  0095                     	;# 
   726  0096                     	;# 
   727  0097                     	;# 
   728  0099                     	;# 
   729  009A                     	;# 
   730  009B                     	;# 
   731  009B                     	;# 
   732  009C                     	;# 
   733  009D                     	;# 
   734  009E                     	;# 
   735  010C                     	;# 
   736  010D                     	;# 
   737  010E                     	;# 
   738  0116                     	;# 
   739  0117                     	;# 
   740  011D                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  0191                     	;# 
   745  0191                     	;# 
   746  0192                     	;# 
   747  0193                     	;# 
   748  0193                     	;# 
   749  0194                     	;# 
   750  0195                     	;# 
   751  0196                     	;# 
   752  0197                     	;# 
   753  0199                     	;# 
   754  019A                     	;# 
   755  019B                     	;# 
   756  019B                     	;# 
   757  019B                     	;# 
   758  019B                     	;# 
   759  019C                     	;# 
   760  019C                     	;# 
   761  019D                     	;# 
   762  019E                     	;# 
   763  019F                     	;# 
   764  020D                     	;# 
   765  0210                     	;# 
   766  0211                     	;# 
   767  0211                     	;# 
   768  0212                     	;# 
   769  0212                     	;# 
   770  0213                     	;# 
   771  0213                     	;# 
   772  0214                     	;# 
   773  0214                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0215                     	;# 
   777  0216                     	;# 
   778  0216                     	;# 
   779  0217                     	;# 
   780  0217                     	;# 
   781  0291                     	;# 
   782  0291                     	;# 
   783  0292                     	;# 
   784  0293                     	;# 
   785  0298                     	;# 
   786  0298                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  0394                     	;# 
   790  0395                     	;# 
   791  0396                     	;# 
   792  0FE4                     	;# 
   793  0FE5                     	;# 
   794  0FE6                     	;# 
   795  0FE7                     	;# 
   796  0FE8                     	;# 
   797  0FE9                     	;# 
   798  0FEA                     	;# 
   799  0FEB                     	;# 
   800  0FED                     	;# 
   801  0FEE                     	;# 
   802  0FEF                     	;# 
   803  0000                     	;# 
   804  0001                     	;# 
   805  0002                     	;# 
   806  0003                     	;# 
   807  0004                     	;# 
   808  0005                     	;# 
   809  0006                     	;# 
   810  0007                     	;# 
   811  0008                     	;# 
   812  0009                     	;# 
   813  000A                     	;# 
   814  000B                     	;# 
   815  000C                     	;# 
   816  000D                     	;# 
   817  000E                     	;# 
   818  0010                     	;# 
   819  0011                     	;# 
   820  0012                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0016                     	;# 
   824  0017                     	;# 
   825  0018                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  008C                     	;# 
   831  008D                     	;# 
   832  008E                     	;# 
   833  0090                     	;# 
   834  0091                     	;# 
   835  0092                     	;# 
   836  0095                     	;# 
   837  0096                     	;# 
   838  0097                     	;# 
   839  0099                     	;# 
   840  009A                     	;# 
   841  009B                     	;# 
   842  009B                     	;# 
   843  009C                     	;# 
   844  009D                     	;# 
   845  009E                     	;# 
   846  010C                     	;# 
   847  010D                     	;# 
   848  010E                     	;# 
   849  0116                     	;# 
   850  0117                     	;# 
   851  011D                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  018E                     	;# 
   855  0191                     	;# 
   856  0191                     	;# 
   857  0192                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0197                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019C                     	;# 
   871  019C                     	;# 
   872  019D                     	;# 
   873  019E                     	;# 
   874  019F                     	;# 
   875  020D                     	;# 
   876  0210                     	;# 
   877  0211                     	;# 
   878  0211                     	;# 
   879  0212                     	;# 
   880  0212                     	;# 
   881  0213                     	;# 
   882  0213                     	;# 
   883  0214                     	;# 
   884  0214                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0216                     	;# 
   890  0217                     	;# 
   891  0217                     	;# 
   892  0291                     	;# 
   893  0291                     	;# 
   894  0292                     	;# 
   895  0293                     	;# 
   896  0298                     	;# 
   897  0298                     	;# 
   898  0299                     	;# 
   899  029A                     	;# 
   900  0394                     	;# 
   901  0395                     	;# 
   902  0396                     	;# 
   903  0FE4                     	;# 
   904  0FE5                     	;# 
   905  0FE6                     	;# 
   906  0FE7                     	;# 
   907  0FE8                     	;# 
   908  0FE9                     	;# 
   909  0FEA                     	;# 
   910  0FEB                     	;# 
   911  0FED                     	;# 
   912  0FEE                     	;# 
   913  0FEF                     	;# 
   914  0000                     	;# 
   915  0001                     	;# 
   916  0002                     	;# 
   917  0003                     	;# 
   918  0004                     	;# 
   919  0005                     	;# 
   920  0006                     	;# 
   921  0007                     	;# 
   922  0008                     	;# 
   923  0009                     	;# 
   924  000A                     	;# 
   925  000B                     	;# 
   926  000C                     	;# 
   927  000D                     	;# 
   928  000E                     	;# 
   929  0010                     	;# 
   930  0011                     	;# 
   931  0012                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0016                     	;# 
   935  0017                     	;# 
   936  0018                     	;# 
   937  0019                     	;# 
   938  001A                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  008C                     	;# 
   942  008D                     	;# 
   943  008E                     	;# 
   944  0090                     	;# 
   945  0091                     	;# 
   946  0092                     	;# 
   947  0095                     	;# 
   948  0096                     	;# 
   949  0097                     	;# 
   950  0099                     	;# 
   951  009A                     	;# 
   952  009B                     	;# 
   953  009B                     	;# 
   954  009C                     	;# 
   955  009D                     	;# 
   956  009E                     	;# 
   957  010C                     	;# 
   958  010D                     	;# 
   959  010E                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  011D                     	;# 
   963  018C                     	;# 
   964  018D                     	;# 
   965  018E                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0194                     	;# 
   972  0195                     	;# 
   973  0196                     	;# 
   974  0197                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019C                     	;# 
   982  019C                     	;# 
   983  019D                     	;# 
   984  019E                     	;# 
   985  019F                     	;# 
   986  020D                     	;# 
   987  0210                     	;# 
   988  0211                     	;# 
   989  0211                     	;# 
   990  0212                     	;# 
   991  0212                     	;# 
   992  0213                     	;# 
   993  0213                     	;# 
   994  0214                     	;# 
   995  0214                     	;# 
   996  0215                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0216                     	;# 
  1000  0216                     	;# 
  1001  0217                     	;# 
  1002  0217                     	;# 
  1003  0291                     	;# 
  1004  0291                     	;# 
  1005  0292                     	;# 
  1006  0293                     	;# 
  1007  0298                     	;# 
  1008  0298                     	;# 
  1009  0299                     	;# 
  1010  029A                     	;# 
  1011  0394                     	;# 
  1012  0395                     	;# 
  1013  0396                     	;# 
  1014  0FE4                     	;# 
  1015  0FE5                     	;# 
  1016  0FE6                     	;# 
  1017  0FE7                     	;# 
  1018  0FE8                     	;# 
  1019  0FE9                     	;# 
  1020  0FEA                     	;# 
  1021  0FEB                     	;# 
  1022  0FED                     	;# 
  1023  0FEE                     	;# 
  1024  0FEF                     	;# 
  1025  0000                     	;# 
  1026  0001                     	;# 
  1027  0002                     	;# 
  1028  0003                     	;# 
  1029  0004                     	;# 
  1030  0005                     	;# 
  1031  0006                     	;# 
  1032  0007                     	;# 
  1033  0008                     	;# 
  1034  0009                     	;# 
  1035  000A                     	;# 
  1036  000B                     	;# 
  1037  000C                     	;# 
  1038  000D                     	;# 
  1039  000E                     	;# 
  1040  0010                     	;# 
  1041  0011                     	;# 
  1042  0012                     	;# 
  1043  0015                     	;# 
  1044  0016                     	;# 
  1045  0016                     	;# 
  1046  0017                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  001B                     	;# 
  1051  001C                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  008E                     	;# 
  1055  0090                     	;# 
  1056  0091                     	;# 
  1057  0092                     	;# 
  1058  0095                     	;# 
  1059  0096                     	;# 
  1060  0097                     	;# 
  1061  0099                     	;# 
  1062  009A                     	;# 
  1063  009B                     	;# 
  1064  009B                     	;# 
  1065  009C                     	;# 
  1066  009D                     	;# 
  1067  009E                     	;# 
  1068  010C                     	;# 
  1069  010D                     	;# 
  1070  010E                     	;# 
  1071  0116                     	;# 
  1072  0117                     	;# 
  1073  011D                     	;# 
  1074  018C                     	;# 
  1075  018D                     	;# 
  1076  018E                     	;# 
  1077  0191                     	;# 
  1078  0191                     	;# 
  1079  0192                     	;# 
  1080  0193                     	;# 
  1081  0193                     	;# 
  1082  0194                     	;# 
  1083  0195                     	;# 
  1084  0196                     	;# 
  1085  0197                     	;# 
  1086  0199                     	;# 
  1087  019A                     	;# 
  1088  019B                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019C                     	;# 
  1093  019C                     	;# 
  1094  019D                     	;# 
  1095  019E                     	;# 
  1096  019F                     	;# 
  1097  020D                     	;# 
  1098  0210                     	;# 
  1099  0211                     	;# 
  1100  0211                     	;# 
  1101  0212                     	;# 
  1102  0212                     	;# 
  1103  0213                     	;# 
  1104  0213                     	;# 
  1105  0214                     	;# 
  1106  0214                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0216                     	;# 
  1111  0216                     	;# 
  1112  0217                     	;# 
  1113  0217                     	;# 
  1114  0291                     	;# 
  1115  0291                     	;# 
  1116  0292                     	;# 
  1117  0293                     	;# 
  1118  0298                     	;# 
  1119  0298                     	;# 
  1120  0299                     	;# 
  1121  029A                     	;# 
  1122  0394                     	;# 
  1123  0395                     	;# 
  1124  0396                     	;# 
  1125  0FE4                     	;# 
  1126  0FE5                     	;# 
  1127  0FE6                     	;# 
  1128  0FE7                     	;# 
  1129  0FE8                     	;# 
  1130  0FE9                     	;# 
  1131  0FEA                     	;# 
  1132  0FEB                     	;# 
  1133  0FED                     	;# 
  1134  0FEE                     	;# 
  1135  0FEF                     	;# 
  1136  0000                     	;# 
  1137  0001                     	;# 
  1138  0002                     	;# 
  1139  0003                     	;# 
  1140  0004                     	;# 
  1141  0005                     	;# 
  1142  0006                     	;# 
  1143  0007                     	;# 
  1144  0008                     	;# 
  1145  0009                     	;# 
  1146  000A                     	;# 
  1147  000B                     	;# 
  1148  000C                     	;# 
  1149  000D                     	;# 
  1150  000E                     	;# 
  1151  0010                     	;# 
  1152  0011                     	;# 
  1153  0012                     	;# 
  1154  0015                     	;# 
  1155  0016                     	;# 
  1156  0016                     	;# 
  1157  0017                     	;# 
  1158  0018                     	;# 
  1159  0019                     	;# 
  1160  001A                     	;# 
  1161  001B                     	;# 
  1162  001C                     	;# 
  1163  008C                     	;# 
  1164  008D                     	;# 
  1165  008E                     	;# 
  1166  0090                     	;# 
  1167  0091                     	;# 
  1168  0092                     	;# 
  1169  0095                     	;# 
  1170  0096                     	;# 
  1171  0097                     	;# 
  1172  0099                     	;# 
  1173  009A                     	;# 
  1174  009B                     	;# 
  1175  009B                     	;# 
  1176  009C                     	;# 
  1177  009D                     	;# 
  1178  009E                     	;# 
  1179  010C                     	;# 
  1180  010D                     	;# 
  1181  010E                     	;# 
  1182  0116                     	;# 
  1183  0117                     	;# 
  1184  011D                     	;# 
  1185  018C                     	;# 
  1186  018D                     	;# 
  1187  018E                     	;# 
  1188  0191                     	;# 
  1189  0191                     	;# 
  1190  0192                     	;# 
  1191  0193                     	;# 
  1192  0193                     	;# 
  1193  0194                     	;# 
  1194  0195                     	;# 
  1195  0196                     	;# 
  1196  0197                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  019C                     	;# 
  1205  019D                     	;# 
  1206  019E                     	;# 
  1207  019F                     	;# 
  1208  020D                     	;# 
  1209  0210                     	;# 
  1210  0211                     	;# 
  1211  0211                     	;# 
  1212  0212                     	;# 
  1213  0212                     	;# 
  1214  0213                     	;# 
  1215  0213                     	;# 
  1216  0214                     	;# 
  1217  0214                     	;# 
  1218  0215                     	;# 
  1219  0215                     	;# 
  1220  0215                     	;# 
  1221  0216                     	;# 
  1222  0216                     	;# 
  1223  0217                     	;# 
  1224  0217                     	;# 
  1225  0291                     	;# 
  1226  0291                     	;# 
  1227  0292                     	;# 
  1228  0293                     	;# 
  1229  0298                     	;# 
  1230  0298                     	;# 
  1231  0299                     	;# 
  1232  029A                     	;# 
  1233  0394                     	;# 
  1234  0395                     	;# 
  1235  0396                     	;# 
  1236  0FE4                     	;# 
  1237  0FE5                     	;# 
  1238  0FE6                     	;# 
  1239  0FE7                     	;# 
  1240  0FE8                     	;# 
  1241  0FE9                     	;# 
  1242  0FEA                     	;# 
  1243  0FEB                     	;# 
  1244  0FED                     	;# 
  1245  0FEE                     	;# 
  1246  0FEF                     	;# 
  1247  0000                     	;# 
  1248  0001                     	;# 
  1249  0002                     	;# 
  1250  0003                     	;# 
  1251  0004                     	;# 
  1252  0005                     	;# 
  1253  0006                     	;# 
  1254  0007                     	;# 
  1255  0008                     	;# 
  1256  0009                     	;# 
  1257  000A                     	;# 
  1258  000B                     	;# 
  1259  000C                     	;# 
  1260  000D                     	;# 
  1261  000E                     	;# 
  1262  0010                     	;# 
  1263  0011                     	;# 
  1264  0012                     	;# 
  1265  0015                     	;# 
  1266  0016                     	;# 
  1267  0016                     	;# 
  1268  0017                     	;# 
  1269  0018                     	;# 
  1270  0019                     	;# 
  1271  001A                     	;# 
  1272  001B                     	;# 
  1273  001C                     	;# 
  1274  008C                     	;# 
  1275  008D                     	;# 
  1276  008E                     	;# 
  1277  0090                     	;# 
  1278  0091                     	;# 
  1279  0092                     	;# 
  1280  0095                     	;# 
  1281  0096                     	;# 
  1282  0097                     	;# 
  1283  0099                     	;# 
  1284  009A                     	;# 
  1285  009B                     	;# 
  1286  009B                     	;# 
  1287  009C                     	;# 
  1288  009D                     	;# 
  1289  009E                     	;# 
  1290  010C                     	;# 
  1291  010D                     	;# 
  1292  010E                     	;# 
  1293  0116                     	;# 
  1294  0117                     	;# 
  1295  011D                     	;# 
  1296  018C                     	;# 
  1297  018D                     	;# 
  1298  018E                     	;# 
  1299  0191                     	;# 
  1300  0191                     	;# 
  1301  0192                     	;# 
  1302  0193                     	;# 
  1303  0193                     	;# 
  1304  0194                     	;# 
  1305  0195                     	;# 
  1306  0196                     	;# 
  1307  0197                     	;# 
  1308  0199                     	;# 
  1309  019A                     	;# 
  1310  019B                     	;# 
  1311  019B                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019C                     	;# 
  1315  019C                     	;# 
  1316  019D                     	;# 
  1317  019E                     	;# 
  1318  019F                     	;# 
  1319  020D                     	;# 
  1320  0210                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  0212                     	;# 
  1324  0212                     	;# 
  1325  0213                     	;# 
  1326  0213                     	;# 
  1327  0214                     	;# 
  1328  0214                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0216                     	;# 
  1333  0216                     	;# 
  1334  0217                     	;# 
  1335  0217                     	;# 
  1336  0291                     	;# 
  1337  0291                     	;# 
  1338  0292                     	;# 
  1339  0293                     	;# 
  1340  0298                     	;# 
  1341  0298                     	;# 
  1342  0299                     	;# 
  1343  029A                     	;# 
  1344  0394                     	;# 
  1345  0395                     	;# 
  1346  0396                     	;# 
  1347  0FE4                     	;# 
  1348  0FE5                     	;# 
  1349  0FE6                     	;# 
  1350  0FE7                     	;# 
  1351  0FE8                     	;# 
  1352  0FE9                     	;# 
  1353  0FEA                     	;# 
  1354  0FEB                     	;# 
  1355  0FED                     	;# 
  1356  0FEE                     	;# 
  1357  0FEF                     	;# 
  1358  0000                     	;# 
  1359  0001                     	;# 
  1360  0002                     	;# 
  1361  0003                     	;# 
  1362  0004                     	;# 
  1363  0005                     	;# 
  1364  0006                     	;# 
  1365  0007                     	;# 
  1366  0008                     	;# 
  1367  0009                     	;# 
  1368  000A                     	;# 
  1369  000B                     	;# 
  1370  000C                     	;# 
  1371  000D                     	;# 
  1372  000E                     	;# 
  1373  0010                     	;# 
  1374  0011                     	;# 
  1375  0012                     	;# 
  1376  0015                     	;# 
  1377  0016                     	;# 
  1378  0016                     	;# 
  1379  0017                     	;# 
  1380  0018                     	;# 
  1381  0019                     	;# 
  1382  001A                     	;# 
  1383  001B                     	;# 
  1384  001C                     	;# 
  1385  008C                     	;# 
  1386  008D                     	;# 
  1387  008E                     	;# 
  1388  0090                     	;# 
  1389  0091                     	;# 
  1390  0092                     	;# 
  1391  0095                     	;# 
  1392  0096                     	;# 
  1393  0097                     	;# 
  1394  0099                     	;# 
  1395  009A                     	;# 
  1396  009B                     	;# 
  1397  009B                     	;# 
  1398  009C                     	;# 
  1399  009D                     	;# 
  1400  009E                     	;# 
  1401  010C                     	;# 
  1402  010D                     	;# 
  1403  010E                     	;# 
  1404  0116                     	;# 
  1405  0117                     	;# 
  1406  011D                     	;# 
  1407  018C                     	;# 
  1408  018D                     	;# 
  1409  018E                     	;# 
  1410  0191                     	;# 
  1411  0191                     	;# 
  1412  0192                     	;# 
  1413  0193                     	;# 
  1414  0193                     	;# 
  1415  0194                     	;# 
  1416  0195                     	;# 
  1417  0196                     	;# 
  1418  0197                     	;# 
  1419  0199                     	;# 
  1420  019A                     	;# 
  1421  019B                     	;# 
  1422  019B                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019C                     	;# 
  1426  019C                     	;# 
  1427  019D                     	;# 
  1428  019E                     	;# 
  1429  019F                     	;# 
  1430  020D                     	;# 
  1431  0210                     	;# 
  1432  0211                     	;# 
  1433  0211                     	;# 
  1434  0212                     	;# 
  1435  0212                     	;# 
  1436  0213                     	;# 
  1437  0213                     	;# 
  1438  0214                     	;# 
  1439  0214                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  0291                     	;# 
  1448  0291                     	;# 
  1449  0292                     	;# 
  1450  0293                     	;# 
  1451  0298                     	;# 
  1452  0298                     	;# 
  1453  0299                     	;# 
  1454  029A                     	;# 
  1455  0394                     	;# 
  1456  0395                     	;# 
  1457  0396                     	;# 
  1458  0FE4                     	;# 
  1459  0FE5                     	;# 
  1460  0FE6                     	;# 
  1461  0FE7                     	;# 
  1462  0FE8                     	;# 
  1463  0FE9                     	;# 
  1464  0FEA                     	;# 
  1465  0FEB                     	;# 
  1466  0FED                     	;# 
  1467  0FEE                     	;# 
  1468  0FEF                     	;# 
  1469  0000                     	;# 
  1470  0001                     	;# 
  1471  0002                     	;# 
  1472  0003                     	;# 
  1473  0004                     	;# 
  1474  0005                     	;# 
  1475  0006                     	;# 
  1476  0007                     	;# 
  1477  0008                     	;# 
  1478  0009                     	;# 
  1479  000A                     	;# 
  1480  000B                     	;# 
  1481  000C                     	;# 
  1482  000D                     	;# 
  1483  000E                     	;# 
  1484  0010                     	;# 
  1485  0011                     	;# 
  1486  0012                     	;# 
  1487  0015                     	;# 
  1488  0016                     	;# 
  1489  0016                     	;# 
  1490  0017                     	;# 
  1491  0018                     	;# 
  1492  0019                     	;# 
  1493  001A                     	;# 
  1494  001B                     	;# 
  1495  001C                     	;# 
  1496  008C                     	;# 
  1497  008D                     	;# 
  1498  008E                     	;# 
  1499  0090                     	;# 
  1500  0091                     	;# 
  1501  0092                     	;# 
  1502  0095                     	;# 
  1503  0096                     	;# 
  1504  0097                     	;# 
  1505  0099                     	;# 
  1506  009A                     	;# 
  1507  009B                     	;# 
  1508  009B                     	;# 
  1509  009C                     	;# 
  1510  009D                     	;# 
  1511  009E                     	;# 
  1512  010C                     	;# 
  1513  010D                     	;# 
  1514  010E                     	;# 
  1515  0116                     	;# 
  1516  0117                     	;# 
  1517  011D                     	;# 
  1518  018C                     	;# 
  1519  018D                     	;# 
  1520  018E                     	;# 
  1521  0191                     	;# 
  1522  0191                     	;# 
  1523  0192                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0197                     	;# 
  1530  0199                     	;# 
  1531  019A                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019B                     	;# 
  1536  019C                     	;# 
  1537  019C                     	;# 
  1538  019D                     	;# 
  1539  019E                     	;# 
  1540  019F                     	;# 
  1541  020D                     	;# 
  1542  0210                     	;# 
  1543  0211                     	;# 
  1544  0211                     	;# 
  1545  0212                     	;# 
  1546  0212                     	;# 
  1547  0213                     	;# 
  1548  0213                     	;# 
  1549  0214                     	;# 
  1550  0214                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0216                     	;# 
  1555  0216                     	;# 
  1556  0217                     	;# 
  1557  0217                     	;# 
  1558  0291                     	;# 
  1559  0291                     	;# 
  1560  0292                     	;# 
  1561  0293                     	;# 
  1562  0298                     	;# 
  1563  0298                     	;# 
  1564  0299                     	;# 
  1565  029A                     	;# 
  1566  0394                     	;# 
  1567  0395                     	;# 
  1568  0396                     	;# 
  1569  0FE4                     	;# 
  1570  0FE5                     	;# 
  1571  0FE6                     	;# 
  1572  0FE7                     	;# 
  1573  0FE8                     	;# 
  1574  0FE9                     	;# 
  1575  0FEA                     	;# 
  1576  0FEB                     	;# 
  1577  0FED                     	;# 
  1578  0FEE                     	;# 
  1579  0FEF                     	;# 
  1580  0000                     	;# 
  1581  0001                     	;# 
  1582  0002                     	;# 
  1583  0003                     	;# 
  1584  0004                     	;# 
  1585  0005                     	;# 
  1586  0006                     	;# 
  1587  0007                     	;# 
  1588  0008                     	;# 
  1589  0009                     	;# 
  1590  000A                     	;# 
  1591  000B                     	;# 
  1592  000C                     	;# 
  1593  000D                     	;# 
  1594  000E                     	;# 
  1595  0010                     	;# 
  1596  0011                     	;# 
  1597  0012                     	;# 
  1598  0015                     	;# 
  1599  0016                     	;# 
  1600  0016                     	;# 
  1601  0017                     	;# 
  1602  0018                     	;# 
  1603  0019                     	;# 
  1604  001A                     	;# 
  1605  001B                     	;# 
  1606  001C                     	;# 
  1607  008C                     	;# 
  1608  008D                     	;# 
  1609  008E                     	;# 
  1610  0090                     	;# 
  1611  0091                     	;# 
  1612  0092                     	;# 
  1613  0095                     	;# 
  1614  0096                     	;# 
  1615  0097                     	;# 
  1616  0099                     	;# 
  1617  009A                     	;# 
  1618  009B                     	;# 
  1619  009B                     	;# 
  1620  009C                     	;# 
  1621  009D                     	;# 
  1622  009E                     	;# 
  1623  010C                     	;# 
  1624  010D                     	;# 
  1625  010E                     	;# 
  1626  0116                     	;# 
  1627  0117                     	;# 
  1628  011D                     	;# 
  1629  018C                     	;# 
  1630  018D                     	;# 
  1631  018E                     	;# 
  1632  0191                     	;# 
  1633  0191                     	;# 
  1634  0192                     	;# 
  1635  0193                     	;# 
  1636  0193                     	;# 
  1637  0194                     	;# 
  1638  0195                     	;# 
  1639  0196                     	;# 
  1640  0197                     	;# 
  1641  0199                     	;# 
  1642  019A                     	;# 
  1643  019B                     	;# 
  1644  019B                     	;# 
  1645  019B                     	;# 
  1646  019B                     	;# 
  1647  019C                     	;# 
  1648  019C                     	;# 
  1649  019D                     	;# 
  1650  019E                     	;# 
  1651  019F                     	;# 
  1652  020D                     	;# 
  1653  0210                     	;# 
  1654  0211                     	;# 
  1655  0211                     	;# 
  1656  0212                     	;# 
  1657  0212                     	;# 
  1658  0213                     	;# 
  1659  0213                     	;# 
  1660  0214                     	;# 
  1661  0214                     	;# 
  1662  0215                     	;# 
  1663  0215                     	;# 
  1664  0215                     	;# 
  1665  0216                     	;# 
  1666  0216                     	;# 
  1667  0217                     	;# 
  1668  0217                     	;# 
  1669  0291                     	;# 
  1670  0291                     	;# 
  1671  0292                     	;# 
  1672  0293                     	;# 
  1673  0298                     	;# 
  1674  0298                     	;# 
  1675  0299                     	;# 
  1676  029A                     	;# 
  1677  0394                     	;# 
  1678  0395                     	;# 
  1679  0396                     	;# 
  1680  0FE4                     	;# 
  1681  0FE5                     	;# 
  1682  0FE6                     	;# 
  1683  0FE7                     	;# 
  1684  0FE8                     	;# 
  1685  0FE9                     	;# 
  1686  0FEA                     	;# 
  1687  0FEB                     	;# 
  1688  0FED                     	;# 
  1689  0FEE                     	;# 
  1690  0FEF                     	;# 
  1691  0000                     	;# 
  1692  0001                     	;# 
  1693  0002                     	;# 
  1694  0003                     	;# 
  1695  0004                     	;# 
  1696  0005                     	;# 
  1697  0006                     	;# 
  1698  0007                     	;# 
  1699  0008                     	;# 
  1700  0009                     	;# 
  1701  000A                     	;# 
  1702  000B                     	;# 
  1703  000C                     	;# 
  1704  000D                     	;# 
  1705  000E                     	;# 
  1706  0010                     	;# 
  1707  0011                     	;# 
  1708  0012                     	;# 
  1709  0015                     	;# 
  1710  0016                     	;# 
  1711  0016                     	;# 
  1712  0017                     	;# 
  1713  0018                     	;# 
  1714  0019                     	;# 
  1715  001A                     	;# 
  1716  001B                     	;# 
  1717  001C                     	;# 
  1718  008C                     	;# 
  1719  008D                     	;# 
  1720  008E                     	;# 
  1721  0090                     	;# 
  1722  0091                     	;# 
  1723  0092                     	;# 
  1724  0095                     	;# 
  1725  0096                     	;# 
  1726  0097                     	;# 
  1727  0099                     	;# 
  1728  009A                     	;# 
  1729  009B                     	;# 
  1730  009B                     	;# 
  1731  009C                     	;# 
  1732  009D                     	;# 
  1733  009E                     	;# 
  1734  010C                     	;# 
  1735  010D                     	;# 
  1736  010E                     	;# 
  1737  0116                     	;# 
  1738  0117                     	;# 
  1739  011D                     	;# 
  1740  018C                     	;# 
  1741  018D                     	;# 
  1742  018E                     	;# 
  1743  0191                     	;# 
  1744  0191                     	;# 
  1745  0192                     	;# 
  1746  0193                     	;# 
  1747  0193                     	;# 
  1748  0194                     	;# 
  1749  0195                     	;# 
  1750  0196                     	;# 
  1751  0197                     	;# 
  1752  0199                     	;# 
  1753  019A                     	;# 
  1754  019B                     	;# 
  1755  019B                     	;# 
  1756  019B                     	;# 
  1757  019B                     	;# 
  1758  019C                     	;# 
  1759  019C                     	;# 
  1760  019D                     	;# 
  1761  019E                     	;# 
  1762  019F                     	;# 
  1763  020D                     	;# 
  1764  0210                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  0212                     	;# 
  1768  0212                     	;# 
  1769  0213                     	;# 
  1770  0213                     	;# 
  1771  0214                     	;# 
  1772  0214                     	;# 
  1773  0215                     	;# 
  1774  0215                     	;# 
  1775  0215                     	;# 
  1776  0216                     	;# 
  1777  0216                     	;# 
  1778  0217                     	;# 
  1779  0217                     	;# 
  1780  0291                     	;# 
  1781  0291                     	;# 
  1782  0292                     	;# 
  1783  0293                     	;# 
  1784  0298                     	;# 
  1785  0298                     	;# 
  1786  0299                     	;# 
  1787  029A                     	;# 
  1788  0394                     	;# 
  1789  0395                     	;# 
  1790  0396                     	;# 
  1791  0FE4                     	;# 
  1792  0FE5                     	;# 
  1793  0FE6                     	;# 
  1794  0FE7                     	;# 
  1795  0FE8                     	;# 
  1796  0FE9                     	;# 
  1797  0FEA                     	;# 
  1798  0FEB                     	;# 
  1799  0FED                     	;# 
  1800  0FEE                     	;# 
  1801  0FEF                     	;# 
  1802  0000                     	;# 
  1803  0001                     	;# 
  1804  0002                     	;# 
  1805  0003                     	;# 
  1806  0004                     	;# 
  1807  0005                     	;# 
  1808  0006                     	;# 
  1809  0007                     	;# 
  1810  0008                     	;# 
  1811  0009                     	;# 
  1812  000A                     	;# 
  1813  000B                     	;# 
  1814  000C                     	;# 
  1815  000D                     	;# 
  1816  000E                     	;# 
  1817  0010                     	;# 
  1818  0011                     	;# 
  1819  0012                     	;# 
  1820  0015                     	;# 
  1821  0016                     	;# 
  1822  0016                     	;# 
  1823  0017                     	;# 
  1824  0018                     	;# 
  1825  0019                     	;# 
  1826  001A                     	;# 
  1827  001B                     	;# 
  1828  001C                     	;# 
  1829  008C                     	;# 
  1830  008D                     	;# 
  1831  008E                     	;# 
  1832  0090                     	;# 
  1833  0091                     	;# 
  1834  0092                     	;# 
  1835  0095                     	;# 
  1836  0096                     	;# 
  1837  0097                     	;# 
  1838  0099                     	;# 
  1839  009A                     	;# 
  1840  009B                     	;# 
  1841  009B                     	;# 
  1842  009C                     	;# 
  1843  009D                     	;# 
  1844  009E                     	;# 
  1845  010C                     	;# 
  1846  010D                     	;# 
  1847  010E                     	;# 
  1848  0116                     	;# 
  1849  0117                     	;# 
  1850  011D                     	;# 
  1851  018C                     	;# 
  1852  018D                     	;# 
  1853  018E                     	;# 
  1854  0191                     	;# 
  1855  0191                     	;# 
  1856  0192                     	;# 
  1857  0193                     	;# 
  1858  0193                     	;# 
  1859  0194                     	;# 
  1860  0195                     	;# 
  1861  0196                     	;# 
  1862  0197                     	;# 
  1863  0199                     	;# 
  1864  019A                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019B                     	;# 
  1868  019B                     	;# 
  1869  019C                     	;# 
  1870  019C                     	;# 
  1871  019D                     	;# 
  1872  019E                     	;# 
  1873  019F                     	;# 
  1874  020D                     	;# 
  1875  0210                     	;# 
  1876  0211                     	;# 
  1877  0211                     	;# 
  1878  0212                     	;# 
  1879  0212                     	;# 
  1880  0213                     	;# 
  1881  0213                     	;# 
  1882  0214                     	;# 
  1883  0214                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0216                     	;# 
  1888  0216                     	;# 
  1889  0217                     	;# 
  1890  0217                     	;# 
  1891  0291                     	;# 
  1892  0291                     	;# 
  1893  0292                     	;# 
  1894  0293                     	;# 
  1895  0298                     	;# 
  1896  0298                     	;# 
  1897  0299                     	;# 
  1898  029A                     	;# 
  1899  0394                     	;# 
  1900  0395                     	;# 
  1901  0396                     	;# 
  1902  0FE4                     	;# 
  1903  0FE5                     	;# 
  1904  0FE6                     	;# 
  1905  0FE7                     	;# 
  1906  0FE8                     	;# 
  1907  0FE9                     	;# 
  1908  0FEA                     	;# 
  1909  0FEB                     	;# 
  1910  0FED                     	;# 
  1911  0FEE                     	;# 
  1912  0FEF                     	;# 
  1913  0000                     	;# 
  1914  0001                     	;# 
  1915  0002                     	;# 
  1916  0003                     	;# 
  1917  0004                     	;# 
  1918  0005                     	;# 
  1919  0006                     	;# 
  1920  0007                     	;# 
  1921  0008                     	;# 
  1922  0009                     	;# 
  1923  000A                     	;# 
  1924  000B                     	;# 
  1925  000C                     	;# 
  1926  000D                     	;# 
  1927  000E                     	;# 
  1928  0010                     	;# 
  1929  0011                     	;# 
  1930  0012                     	;# 
  1931  0015                     	;# 
  1932  0016                     	;# 
  1933  0016                     	;# 
  1934  0017                     	;# 
  1935  0018                     	;# 
  1936  0019                     	;# 
  1937  001A                     	;# 
  1938  001B                     	;# 
  1939  001C                     	;# 
  1940  008C                     	;# 
  1941  008D                     	;# 
  1942  008E                     	;# 
  1943  0090                     	;# 
  1944  0091                     	;# 
  1945  0092                     	;# 
  1946  0095                     	;# 
  1947  0096                     	;# 
  1948  0097                     	;# 
  1949  0099                     	;# 
  1950  009A                     	;# 
  1951  009B                     	;# 
  1952  009B                     	;# 
  1953  009C                     	;# 
  1954  009D                     	;# 
  1955  009E                     	;# 
  1956  010C                     	;# 
  1957  010D                     	;# 
  1958  010E                     	;# 
  1959  0116                     	;# 
  1960  0117                     	;# 
  1961  011D                     	;# 
  1962  018C                     	;# 
  1963  018D                     	;# 
  1964  018E                     	;# 
  1965  0191                     	;# 
  1966  0191                     	;# 
  1967  0192                     	;# 
  1968  0193                     	;# 
  1969  0193                     	;# 
  1970  0194                     	;# 
  1971  0195                     	;# 
  1972  0196                     	;# 
  1973  0197                     	;# 
  1974  0199                     	;# 
  1975  019A                     	;# 
  1976  019B                     	;# 
  1977  019B                     	;# 
  1978  019B                     	;# 
  1979  019B                     	;# 
  1980  019C                     	;# 
  1981  019C                     	;# 
  1982  019D                     	;# 
  1983  019E                     	;# 
  1984  019F                     	;# 
  1985  020D                     	;# 
  1986  0210                     	;# 
  1987  0211                     	;# 
  1988  0211                     	;# 
  1989  0212                     	;# 
  1990  0212                     	;# 
  1991  0213                     	;# 
  1992  0213                     	;# 
  1993  0214                     	;# 
  1994  0214                     	;# 
  1995  0215                     	;# 
  1996  0215                     	;# 
  1997  0215                     	;# 
  1998  0216                     	;# 
  1999  0216                     	;# 
  2000  0217                     	;# 
  2001  0217                     	;# 
  2002  0291                     	;# 
  2003  0291                     	;# 
  2004  0292                     	;# 
  2005  0293                     	;# 
  2006  0298                     	;# 
  2007  0298                     	;# 
  2008  0299                     	;# 
  2009  029A                     	;# 
  2010  0394                     	;# 
  2011  0395                     	;# 
  2012  0396                     	;# 
  2013  0FE4                     	;# 
  2014  0FE5                     	;# 
  2015  0FE6                     	;# 
  2016  0FE7                     	;# 
  2017  0FE8                     	;# 
  2018  0FE9                     	;# 
  2019  0FEA                     	;# 
  2020  0FEB                     	;# 
  2021  0FED                     	;# 
  2022  0FEE                     	;# 
  2023  0FEF                     	;# 
  2024  0000                     	;# 
  2025  0001                     	;# 
  2026  0002                     	;# 
  2027  0003                     	;# 
  2028  0004                     	;# 
  2029  0005                     	;# 
  2030  0006                     	;# 
  2031  0007                     	;# 
  2032  0008                     	;# 
  2033  0009                     	;# 
  2034  000A                     	;# 
  2035  000B                     	;# 
  2036  000C                     	;# 
  2037  000D                     	;# 
  2038  000E                     	;# 
  2039  0010                     	;# 
  2040  0011                     	;# 
  2041  0012                     	;# 
  2042  0015                     	;# 
  2043  0016                     	;# 
  2044  0016                     	;# 
  2045  0017                     	;# 
  2046  0018                     	;# 
  2047  0019                     	;# 
  2048  001A                     	;# 
  2049  001B                     	;# 
  2050  001C                     	;# 
  2051  008C                     	;# 
  2052  008D                     	;# 
  2053  008E                     	;# 
  2054  0090                     	;# 
  2055  0091                     	;# 
  2056  0092                     	;# 
  2057  0095                     	;# 
  2058  0096                     	;# 
  2059  0097                     	;# 
  2060  0099                     	;# 
  2061  009A                     	;# 
  2062  009B                     	;# 
  2063  009B                     	;# 
  2064  009C                     	;# 
  2065  009D                     	;# 
  2066  009E                     	;# 
  2067  010C                     	;# 
  2068  010D                     	;# 
  2069  010E                     	;# 
  2070  0116                     	;# 
  2071  0117                     	;# 
  2072  011D                     	;# 
  2073  018C                     	;# 
  2074  018D                     	;# 
  2075  018E                     	;# 
  2076  0191                     	;# 
  2077  0191                     	;# 
  2078  0192                     	;# 
  2079  0193                     	;# 
  2080  0193                     	;# 
  2081  0194                     	;# 
  2082  0195                     	;# 
  2083  0196                     	;# 
  2084  0197                     	;# 
  2085  0199                     	;# 
  2086  019A                     	;# 
  2087  019B                     	;# 
  2088  019B                     	;# 
  2089  019B                     	;# 
  2090  019B                     	;# 
  2091  019C                     	;# 
  2092  019C                     	;# 
  2093  019D                     	;# 
  2094  019E                     	;# 
  2095  019F                     	;# 
  2096  020D                     	;# 
  2097  0210                     	;# 
  2098  0211                     	;# 
  2099  0211                     	;# 
  2100  0212                     	;# 
  2101  0212                     	;# 
  2102  0213                     	;# 
  2103  0213                     	;# 
  2104  0214                     	;# 
  2105  0214                     	;# 
  2106  0215                     	;# 
  2107  0215                     	;# 
  2108  0215                     	;# 
  2109  0216                     	;# 
  2110  0216                     	;# 
  2111  0217                     	;# 
  2112  0217                     	;# 
  2113  0291                     	;# 
  2114  0291                     	;# 
  2115  0292                     	;# 
  2116  0293                     	;# 
  2117  0298                     	;# 
  2118  0298                     	;# 
  2119  0299                     	;# 
  2120  029A                     	;# 
  2121  0394                     	;# 
  2122  0395                     	;# 
  2123  0396                     	;# 
  2124  0FE4                     	;# 
  2125  0FE5                     	;# 
  2126  0FE6                     	;# 
  2127  0FE7                     	;# 
  2128  0FE8                     	;# 
  2129  0FE9                     	;# 
  2130  0FEA                     	;# 
  2131  0FEB                     	;# 
  2132  0FED                     	;# 
  2133  0FEE                     	;# 
  2134  0FEF                     	;# 
  2135                           
  2136                           	psect	idataBANK4
  2137  1273                     __pidataBANK4:	
  2138                           
  2139                           ;initializer for __product
  2140  1273  3463               	retlw	99
  2141  1274  3402               	retlw	2
  2142  1275  3400               	retlw	0
  2143  1276  3400               	retlw	0
  2144  1277  3400               	retlw	0
  2145  1278  3400               	retlw	0
  2146  1279  3400               	retlw	0
  2147  127A  3400               	retlw	0
  2148  127B  3400               	retlw	0
  2149  127C  3400               	retlw	0
  2150  127D  3400               	retlw	0
  2151  127E  3400               	retlw	0
  2152  127F  34FF               	retlw	255
  2153  1280  34FF               	retlw	255
  2154  1281  34FF               	retlw	255
  2155  1282  3400               	retlw	0
  2156  1283  3400               	retlw	0
  2157  1284  3400               	retlw	0
  2158  1285  3400               	retlw	0
  2159  1286  3400               	retlw	0
  2160  1287  3400               	retlw	0
  2161  1288  3400               	retlw	0
  2162  1289  3400               	retlw	0
  2163  128A  3400               	retlw	0
  2164  128B  3400               	retlw	0
  2165  128C  3400               	retlw	0
  2166  128D  3400               	retlw	0
  2167  128E  3400               	retlw	0
  2168  128F  3400               	retlw	0
  2169  1290  3400               	retlw	0
  2170  1291  3400               	retlw	0
  2171  1292  3400               	retlw	0
  2172                           
  2173                           	psect	nvBANK0
  2174  006D                     __pnvBANK0:	
  2175  006D                     _product:	
  2176  006D                     	ds	1
  2177  000C                     _PORTA	set	12
  2178  000D                     _PORTB	set	13
  2179  000E                     _PORTC	set	14
  2180  0018                     _T1CON	set	24
  2181  0017                     _TMR1H	set	23
  2182  0016                     _TMR1L	set	22
  2183  005F                     _GIE	set	95
  2184  005B                     _IOCIE	set	91
  2185  0058                     _IOCIF	set	88
  2186  005E                     _PEIE	set	94
  2187  0060                     _RA0	set	96
  2188  0063                     _RA3	set	99
  2189  0064                     _RA4	set	100
  2190  0066                     _RA6	set	102
  2191  0067                     _RA7	set	103
  2192  0069                     _RB1	set	105
  2193  006A                     _RB2	set	106
  2194  006B                     _RB3	set	107
  2195  006C                     _RB4	set	108
  2196  006D                     _RB5	set	109
  2197  0075                     _RC5	set	117
  2198  0077                     _RC7	set	119
  2199  0088                     _TMR1IF	set	136
  2200  009D                     _ADCON0	set	157
  2201  009E                     _ADCON1	set	158
  2202  009C                     _ADRESH	set	156
  2203  009B                     _ADRESL	set	155
  2204  0099                     _OSCCON	set	153
  2205  008C                     _TRISA	set	140
  2206  008D                     _TRISB	set	141
  2207  008E                     _TRISC	set	142
  2208  0097                     _WDTCON	set	151
  2209  04E9                     _GO_nDONE	set	1257
  2210  0488                     _TMR1IE	set	1160
  2211  0117                     _FVRCON	set	279
  2212  010C                     _LATA	set	268
  2213  010D                     _LATB	set	269
  2214  010E                     _LATC	set	270
  2215  018C                     _ANSELA	set	396
  2216  018D                     _ANSELB	set	397
  2217  018E                     _ANSELC	set	398
  2218  0192                     _PMADRH	set	402
  2219  0191                     _PMADRL	set	401
  2220  0196                     _PMCON2	set	406
  2221  0194                     _PMDATH	set	404
  2222  0193                     _PMDATL	set	403
  2223  0CAE                     _CFGS	set	3246
  2224  0CAC                     _FREE	set	3244
  2225  0CAD                     _LWLO	set	3245
  2226  0CA8                     _RD	set	3240
  2227  0CA9                     _WR	set	3241
  2228  0CAA                     _WREN	set	3242
  2229  020D                     _WPUB	set	525
  2230  0396                     _IOCBF	set	918
  2231  0395                     _IOCBN	set	917
  2232  0394                     _IOCBP	set	916
  2233  1CB2                     _IOCBF2	set	7346
  2234                           
  2235                           ; #config settings
  2236  0000                     
  2237                           	psect	cinit
  2238  0021                     start_initialization:	
  2239  0021                     __initialization:	
  2240                           
  2241                           ; Clear objects allocated to COMMON
  2242  0021  01FA               	clrf	__pbssCOMMON& (0+127)
  2243  0022  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2244                           
  2245                           ; Clear objects allocated to BANK0
  2246  0023  01EA               	clrf	__pbssBANK0& (0+127)
  2247  0024  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  2248  0025  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  2249                           
  2250                           ; Clear objects allocated to BANK1
  2251  0026  30A0               	movlw	low __pbssBANK1
  2252  0027  0084               	movwf	4
  2253  0028  3000               	movlw	high __pbssBANK1
  2254  0029  0085               	movwf	5
  2255  002A  304F               	movlw	79
  2256  002B  319F  2709  3180   	fcall	clear_ram0
  2257                           
  2258                           ; Clear objects allocated to BANK2
  2259  002E  3020               	movlw	low __pbssBANK2
  2260  002F  0084               	movwf	4
  2261  0030  3001               	movlw	high __pbssBANK2
  2262  0031  0085               	movwf	5
  2263  0032  3050               	movlw	80
  2264  0033  319F  2709  3180   	fcall	clear_ram0
  2265                           
  2266                           ; Clear objects allocated to BANK3
  2267  0036  30A0               	movlw	low __pbssBANK3
  2268  0037  0084               	movwf	4
  2269  0038  3001               	movlw	high __pbssBANK3
  2270  0039  0085               	movwf	5
  2271  003A  304C               	movlw	76
  2272  003B  319F  2709  3180   	fcall	clear_ram0
  2273                           
  2274                           ; Initialize objects allocated to BANK4
  2275  003E  3073               	movlw	low __pidataBANK4
  2276  003F  0084               	movwf	4
  2277  0040  3092               	movlw	(high __pidataBANK4)| (0+128)
  2278  0041  0085               	movwf	5
  2279  0042  3020               	movlw	low __pdataBANK4
  2280  0043  0086               	movwf	6
  2281  0044  3002               	movlw	high __pdataBANK4
  2282  0045  0087               	movwf	7
  2283  0046  3020               	movlw	32
  2284  0047  319F  2703         	fcall	init_ram
  2285  0049                     end_of_initialization:	
  2286                           ;End of C runtime variable initialization code
  2287                           
  2288  0049                     __end_of__initialization:	
  2289  0049  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2290  004A  0020               	movlb	0
  2291  004B  3197  2F07         	ljmp	_main	;jump to C main() function
  2292                           
  2293                           	psect	bssCOMMON
  2294  007A                     __pbssCOMMON:	
  2295  007A                     _Cmd:	
  2296  007A                     	ds	1
  2297  007B                     _LED:	
  2298  007B                     	ds	1
  2299                           
  2300                           	psect	bssBANK0
  2301  006A                     __pbssBANK0:	
  2302  006A                     _DelayOff:	
  2303  006A                     	ds	1
  2304  006B                     _DimmerLights:	
  2305  006B                     	ds	1
  2306  006C                     _Sw:	
  2307  006C                     	ds	1
  2308                           
  2309                           	psect	bssBANK1
  2310  00A0                     __pbssBANK1:	
  2311  00A0                     _DimmerIntr1:	
  2312  00A0                     	ds	16
  2313  00B0                     _DimmerIntr2:	
  2314  00B0                     	ds	16
  2315  00C0                     _myMain:	
  2316  00C0                     	ds	13
  2317  00CD                     _Buz1:	
  2318  00CD                     	ds	12
  2319  00D9                     _Timer1:	
  2320  00D9                     	ds	3
  2321  00DC                     _WDT:	
  2322  00DC                     	ds	2
  2323  00DE                     _DimmerIntr:	
  2324  00DE                     	ds	1
  2325  00DF                     _Light:	
  2326  00DF                     	ds	1
  2327  00E0                     _SwDetect:	
  2328  00E0                     	ds	1
  2329  00E1                     _Temp:	
  2330  00E1                     	ds	14
  2331                           
  2332                           	psect	bssBANK2
  2333  0120                     __pbssBANK2:	
  2334  0120                     _Dimmer:	
  2335  0120                     	ds	5
  2336  0125                     _Load:	
  2337  0125                     	ds	40
  2338  014D                     _DimmerLights1:	
  2339  014D                     	ds	9
  2340  0156                     _DimmerLights2:	
  2341  0156                     	ds	9
  2342  015F                     _DlySw1:	
  2343  015F                     	ds	5
  2344  0164                     _VarErrLED:	
  2345  0164                     	ds	4
  2346  0168                     _VarLED1:	
  2347  0168                     	ds	4
  2348  016C                     _VarLED2:	
  2349  016C                     	ds	4
  2350                           
  2351                           	psect	bssBANK3
  2352  01A0                     __pbssBANK3:	
  2353  01A0                     _u1:	
  2354  01A0                     	ds	16
  2355  01B0                     _Memory:	
  2356  01B0                     	ds	37
  2357  01D5                     _Sw1:	
  2358  01D5                     	ds	9
  2359  01DE                     _Sw2:	
  2360  01DE                     	ds	9
  2361  01E7                     _DlySw2:	
  2362  01E7                     	ds	5
  2363                           
  2364                           	psect	dataBANK4
  2365  0220                     __pdataBANK4:	
  2366  0220                     __product:	
  2367  0220                     	ds	32
  2368                           
  2369                           	psect	clrtext
  2370  1F09                     clear_ram0:	
  2371                           ;	Called with FSR0 containing the base address, and
  2372                           ;	WREG with the size to clear
  2373                           
  2374  1F09  0064               	clrwdt	;clear the watchdog before getting into this loop
  2375  1F0A                     clrloop0:	
  2376  1F0A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2377  1F0B  3101               	addfsr 0,1
  2378  1F0C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2379  1F0D  2F0A               	goto	clrloop0	;have we reached the end yet?
  2380  1F0E  3400               	retlw	0	;all done for this memory range, return
  2381                           
  2382                           	psect	inittext
  2383  1F03                     init_ram:	
  2384  1F03  00FE               	movwf	126
  2385  1F04                     initloop:	
  2386  1F04  0012               	moviw fsr0++
  2387  1F05  001E               	movwi fsr1++
  2388  1F06  0BFE               	decfsz	126,f
  2389  1F07  2F04               	goto	initloop
  2390  1F08  3400               	retlw	0
  2391                           
  2392                           	psect	cstackBANK3
  2393  01EC                     __pcstackBANK3:	
  2394  01EC                     ?_main:	
  2395  01EC                     main@argc:	
  2396                           ; 2 bytes @ 0x0
  2397                           
  2398                           
  2399                           ; 2 bytes @ 0x0
  2400  01EC                     	ds	2
  2401  01EE                     main@argv:	
  2402                           
  2403                           ; 2 bytes @ 0x2
  2404  01EE                     	ds	2
  2405                           
  2406                           	psect	cstackCOMMON
  2407  0070                     __pcstackCOMMON:	
  2408  0070                     ?_DlyOff_Initialization:	
  2409  0070                     ?_DlyOff_Main:	
  2410                           ; 0 bytes @ 0x0
  2411                           
  2412  0070                     ?_setDimmerLights_SwOn:	
  2413                           ; 0 bytes @ 0x0
  2414                           
  2415  0070                     ?_setDimmerLights_SwOff:	
  2416                           ; 0 bytes @ 0x0
  2417                           
  2418  0070                     ?_setMemory_Modify:	
  2419                           ; 0 bytes @ 0x0
  2420                           
  2421  0070                     ?_setDimmerLights_Initialization:	
  2422                           ; 0 bytes @ 0x0
  2423                           
  2424  0070                     ?_setDimmerLights_Main:	
  2425                           ; 0 bytes @ 0x0
  2426                           
  2427  0070                     ?_DimmerLights_DimmingFunction:	
  2428                           ; 0 bytes @ 0x0
  2429                           
  2430  0070                     ?_DimmerLights_TwoPhase_Main:	
  2431                           ; 0 bytes @ 0x0
  2432                           
  2433  0070                     ?_DimmerLights_AssignationDimming:	
  2434                           ; 0 bytes @ 0x0
  2435                           
  2436  0070                     ?_setDimmerLights_Line:	
  2437                           ; 0 bytes @ 0x0
  2438                           
  2439  0070                     ?_DimmerIntr_ValueCalculate:	
  2440                           ; 0 bytes @ 0x0
  2441                           
  2442  0070                     ?_setDimmerLights_DimmingClose:	
  2443                           ; 0 bytes @ 0x0
  2444                           
  2445  0070                     ?_setLED_Initialization:	
  2446                           ; 0 bytes @ 0x0
  2447                           
  2448  0070                     ?_setLED_Main:	
  2449                           ; 0 bytes @ 0x0
  2450                           
  2451  0070                     ?_Fosc_Set:	
  2452                           ; 0 bytes @ 0x0
  2453                           
  2454  0070                     ?_IO_Set:	
  2455                           ; 0 bytes @ 0x0
  2456                           
  2457  0070                     ?_TMR1_Set:	
  2458                           ; 0 bytes @ 0x0
  2459                           
  2460  0070                     ?_ADC_Set:	
  2461                           ; 0 bytes @ 0x0
  2462                           
  2463  0070                     ?_IOC_Set:	
  2464                           ; 0 bytes @ 0x0
  2465                           
  2466  0070                     ?_WDT_Set:	
  2467                           ; 0 bytes @ 0x0
  2468                           
  2469  0070                     ?_TMR1_ISR:	
  2470                           ; 0 bytes @ 0x0
  2471                           
  2472  0070                     ?_IOC_ISR:	
  2473                           ; 0 bytes @ 0x0
  2474                           
  2475  0070                     ?_Timeout_Counter:	
  2476                           ; 0 bytes @ 0x0
  2477                           
  2478  0070                     ?_set_TimeoutCleared:	
  2479                           ; 0 bytes @ 0x0
  2480                           
  2481  0070                     ?_Flash_Memory_Write:	
  2482                           ; 0 bytes @ 0x0
  2483                           
  2484  0070                     ?_Flash_Memory_Modify:	
  2485                           ; 0 bytes @ 0x0
  2486                           
  2487  0070                     ?_WDT_Clearing:	
  2488                           ; 0 bytes @ 0x0
  2489                           
  2490  0070                     ?_setLoad_AH_AL_Restore:	
  2491                           ; 0 bytes @ 0x0
  2492                           
  2493  0070                     ?_setTemp_Initialization:	
  2494                           ; 0 bytes @ 0x0
  2495                           
  2496  0070                     ?_setTemp_Main:	
  2497                           ; 0 bytes @ 0x0
  2498                           
  2499  0070                     ?_setOverTemp_ADV_Restore:	
  2500                           ; 0 bytes @ 0x0
  2501                           
  2502  0070                     ?_setSw_Initialization:	
  2503                           ; 0 bytes @ 0x0
  2504                           
  2505  0070                     ?_setSw_Main:	
  2506                           ; 0 bytes @ 0x0
  2507                           
  2508  0070                     ?_myMain_Initialization:	
  2509                           ; 0 bytes @ 0x0
  2510                           
  2511  0070                     ?_my_MainTimer:	
  2512                           ; 0 bytes @ 0x0
  2513                           
  2514  0070                     ?_Exception_Main:	
  2515                           ; 0 bytes @ 0x0
  2516                           
  2517  0070                     ?_Buzzer_Initialization:	
  2518                           ; 0 bytes @ 0x0
  2519                           
  2520  0070                     ?_Buzzer_Main:	
  2521                           ; 0 bytes @ 0x0
  2522                           
  2523  0070                     ?_DelayOffPointSelect:	
  2524                           ; 0 bytes @ 0x0
  2525                           
  2526  0070                     ?_DelayOff_Initialization:	
  2527                           ; 0 bytes @ 0x0
  2528                           
  2529  0070                     ?_DelayOff_Main:	
  2530                           ; 0 bytes @ 0x0
  2531                           
  2532  0070                     ?_DimmerIntr_Initialization:	
  2533                           ; 0 bytes @ 0x0
  2534                           
  2535  0070                     ?_DimmerLights_SelectPointer:	
  2536                           ; 0 bytes @ 0x0
  2537                           
  2538  0070                     ?_DimmerLights_Initialization:	
  2539                           ; 0 bytes @ 0x0
  2540                           
  2541  0070                     ?_setDimmerLights_DimmingOn:	
  2542                           ; 0 bytes @ 0x0
  2543                           
  2544  0070                     ?_DimmerLights_Main:	
  2545                           ; 0 bytes @ 0x0
  2546                           
  2547  0070                     ?_DimmerLights_TMR_1:	
  2548                           ; 0 bytes @ 0x0
  2549                           
  2550  0070                     ??_DimmerLights_TMR_1:	
  2551                           ; 0 bytes @ 0x0
  2552                           
  2553  0070                     ?_DimmerLights_IOC_1:	
  2554                           ; 0 bytes @ 0x0
  2555                           
  2556  0070                     ??_DimmerLights_IOC_1:	
  2557                           ; 0 bytes @ 0x0
  2558                           
  2559  0070                     ?_DimmerLights_TMR_2:	
  2560                           ; 0 bytes @ 0x0
  2561                           
  2562  0070                     ??_DimmerLights_TMR_2:	
  2563                           ; 0 bytes @ 0x0
  2564                           
  2565  0070                     ?_DimmerLights_IOC_2:	
  2566                           ; 0 bytes @ 0x0
  2567                           
  2568  0070                     ??_DimmerLights_IOC_2:	
  2569                           ; 0 bytes @ 0x0
  2570                           
  2571  0070                     ?_LedPointSelect:	
  2572                           ; 0 bytes @ 0x0
  2573                           
  2574  0070                     ?_LED_Initialization:	
  2575                           ; 0 bytes @ 0x0
  2576                           
  2577  0070                     ?_LED_Main:	
  2578                           ; 0 bytes @ 0x0
  2579                           
  2580  0070                     ?_Mcu_Initialization:	
  2581                           ; 0 bytes @ 0x0
  2582                           
  2583  0070                     ?_ISR:	
  2584                           ; 0 bytes @ 0x0
  2585                           
  2586  0070                     ?_Flash_Memory_Initialization:	
  2587                           ; 0 bytes @ 0x0
  2588                           
  2589  0070                     ?_Flash_Memory_Main:	
  2590                           ; 0 bytes @ 0x0
  2591                           
  2592  0070                     ?_Flash_Memory_Unlock:	
  2593                           ; 0 bytes @ 0x0
  2594                           
  2595  0070                     ?_Flash_Memory_Erasing:	
  2596                           ; 0 bytes @ 0x0
  2597                           
  2598  0070                     ?_WDT_Main:	
  2599                           ; 0 bytes @ 0x0
  2600                           
  2601  0070                     ?_Load_Initialization:	
  2602                           ; 0 bytes @ 0x0
  2603                           
  2604  0070                     ?_getLoad_AD:	
  2605                           ; 0 bytes @ 0x0
  2606                           
  2607  0070                     ?_Load_Main:	
  2608                           ; 0 bytes @ 0x0
  2609                           
  2610  0070                     ?_Temp_Initialization:	
  2611                           ; 0 bytes @ 0x0
  2612                           
  2613  0070                     ?_getTemp_AD:	
  2614                           ; 0 bytes @ 0x0
  2615                           
  2616  0070                     ?_Temp_Main:	
  2617                           ; 0 bytes @ 0x0
  2618                           
  2619  0070                     ?_TouchPower:	
  2620                           ; 0 bytes @ 0x0
  2621                           
  2622  0070                     ?_SwPointSelect:	
  2623                           ; 0 bytes @ 0x0
  2624                           
  2625  0070                     ?_Switch_Initialization:	
  2626                           ; 0 bytes @ 0x0
  2627                           
  2628  0070                     ?_Switch_Main:	
  2629                           ; 0 bytes @ 0x0
  2630                           
  2631  0070                     ?_getDimmerLights_Status:	
  2632                           ; 0 bytes @ 0x0
  2633                           
  2634  0070                     ?_getDimmerLights_ValueToPercent:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     ?_getDimmerLights_PercentToValue:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     ?_getLoad_OK:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ?_getMain_All_Error_Status:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     ?_getMain_All_LightsStatus:	
  2647                           ; 1 bytes @ 0x0
  2648                           
  2649  0070                     ?_getDimmerLights_Allow_Condition:	
  2650                           ; 1 bytes @ 0x0
  2651                           
  2652  0070                     ?_getCmd_Status:	
  2653                           ; 1 bytes @ 0x0
  2654                           
  2655  0070                     ?_Flash_Memory_Read:	
  2656                           ; 1 bytes @ 0x0
  2657                           
  2658  0070                     ?_getAll_Sw_KeyStatus:	
  2659                           ; 1 bytes @ 0x0
  2660                           
  2661  0070                     ?_getMain_Lights_Count:	
  2662                           ; 1 bytes @ 0x0
  2663                           
  2664  0070                     ?_getSw_KeyStatus:	
  2665                           ; 1 bytes @ 0x0
  2666                           
  2667  0070                     ?_getDelayOff_GO:	
  2668                           ; 1 bytes @ 0x0
  2669                           
  2670  0070                     ?_getDimmerIntr_DimmingValue:	
  2671                           ; 1 bytes @ 0x0
  2672                           
  2673  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2674                           ; 1 bytes @ 0x0
  2675                           
  2676  0070                     ?_getAll_DimmerIntr_Dimming_Sw_RF:	
  2677                           ; 1 bytes @ 0x0
  2678                           
  2679  0070                     ?_getDimmerLights_Line:	
  2680                           ; 1 bytes @ 0x0
  2681                           
  2682  0070                     ?_getDimmer_LoadGO:	
  2683                           ; 1 bytes @ 0x0
  2684                           
  2685  0070                     ?_getDimmer_Load_Status:	
  2686                           ; 1 bytes @ 0x0
  2687                           
  2688  0070                     setDimmerLights_Initialization@lights:	
  2689                           ; 1 bytes @ 0x0
  2690                           
  2691                           
  2692                           ; 1 bytes @ 0x0
  2693  0070                     	ds	1
  2694  0071                     ??_TMR1_ISR:	
  2695  0071                     ??_IOC_ISR:	
  2696                           ; 0 bytes @ 0x1
  2697                           
  2698  0071                     ??_ISR:	
  2699                           ; 0 bytes @ 0x1
  2700                           
  2701                           
  2702                           ; 0 bytes @ 0x1
  2703  0071                     	ds	1
  2704  0072                     ??_setMemory_Modify:	
  2705  0072                     ??_setDimmerLights_Initialization:	
  2706                           ; 0 bytes @ 0x2
  2707                           
  2708  0072                     ??_getLoad_OK:	
  2709                           ; 0 bytes @ 0x2
  2710                           
  2711  0072                     ??_getMain_All_Error_Status:	
  2712                           ; 0 bytes @ 0x2
  2713                           
  2714  0072                     ??_getMain_All_LightsStatus:	
  2715                           ; 0 bytes @ 0x2
  2716                           
  2717  0072                     ??_setDimmerLights_Line:	
  2718                           ; 0 bytes @ 0x2
  2719                           
  2720  0072                     ??_getCmd_Status:	
  2721                           ; 0 bytes @ 0x2
  2722                           
  2723  0072                     ?_setCmd_Status:	
  2724                           ; 0 bytes @ 0x2
  2725                           
  2726  0072                     ??_Fosc_Set:	
  2727                           ; 0 bytes @ 0x2
  2728                           
  2729  0072                     ??_IO_Set:	
  2730                           ; 0 bytes @ 0x2
  2731                           
  2732  0072                     ??_TMR1_Set:	
  2733                           ; 0 bytes @ 0x2
  2734                           
  2735  0072                     ??_ADC_Set:	
  2736                           ; 0 bytes @ 0x2
  2737                           
  2738  0072                     ??_IOC_Set:	
  2739                           ; 0 bytes @ 0x2
  2740                           
  2741  0072                     ??_WDT_Set:	
  2742                           ; 0 bytes @ 0x2
  2743                           
  2744  0072                     ??_Timeout_Counter:	
  2745                           ; 0 bytes @ 0x2
  2746                           
  2747  0072                     ??_set_TimeoutCleared:	
  2748                           ; 0 bytes @ 0x2
  2749                           
  2750  0072                     ??_Flash_Memory_Read:	
  2751                           ; 0 bytes @ 0x2
  2752                           
  2753  0072                     ?_setMemory_Data:	
  2754                           ; 0 bytes @ 0x2
  2755                           
  2756  0072                     ??_Flash_Memory_Write:	
  2757                           ; 0 bytes @ 0x2
  2758                           
  2759  0072                     ??_getAll_Sw_KeyStatus:	
  2760                           ; 0 bytes @ 0x2
  2761                           
  2762  0072                     ??_WDT_Clearing:	
  2763                           ; 0 bytes @ 0x2
  2764                           
  2765  0072                     ??_setLoad_AH_AL_Restore:	
  2766                           ; 0 bytes @ 0x2
  2767                           
  2768  0072                     ??_getMain_Lights_Count:	
  2769                           ; 0 bytes @ 0x2
  2770                           
  2771  0072                     ??_setTemp_Initialization:	
  2772                           ; 0 bytes @ 0x2
  2773                           
  2774  0072                     ??_setOverTemp_ADV_Restore:	
  2775                           ; 0 bytes @ 0x2
  2776                           
  2777  0072                     ??_getSw_KeyStatus:	
  2778                           ; 0 bytes @ 0x2
  2779                           
  2780  0072                     ??_myMain_Initialization:	
  2781                           ; 0 bytes @ 0x2
  2782                           
  2783  0072                     ??_Buzzer_Initialization:	
  2784                           ; 0 bytes @ 0x2
  2785                           
  2786  0072                     ??_Buzzer_Main:	
  2787                           ; 0 bytes @ 0x2
  2788                           
  2789  0072                     ??_DelayOffPointSelect:	
  2790                           ; 0 bytes @ 0x2
  2791                           
  2792  0072                     ?_setDimmerIntr_ControlStatus:	
  2793                           ; 0 bytes @ 0x2
  2794                           
  2795  0072                     ?_setDimmerIntr_DimmingValue:	
  2796                           ; 0 bytes @ 0x2
  2797                           
  2798  0072                     ??_getDimmerIntr_DimmingValue:	
  2799                           ; 0 bytes @ 0x2
  2800                           
  2801  0072                     ?_setDimmerIntr_Dimming_Sw:	
  2802                           ; 0 bytes @ 0x2
  2803                           
  2804  0072                     ??_getDimmerIntr_Dimming_Sw:	
  2805                           ; 0 bytes @ 0x2
  2806                           
  2807  0072                     ?_setDimmerIntr_Dimming_RF:	
  2808                           ; 0 bytes @ 0x2
  2809                           
  2810  0072                     ??_getAll_DimmerIntr_Dimming_Sw_RF:	
  2811                           ; 0 bytes @ 0x2
  2812                           
  2813  0072                     ??_DimmerLights_SelectPointer:	
  2814                           ; 0 bytes @ 0x2
  2815                           
  2816  0072                     ??_getDimmerLights_Line:	
  2817                           ; 0 bytes @ 0x2
  2818                           
  2819  0072                     ??_getDimmer_LoadGO:	
  2820                           ; 0 bytes @ 0x2
  2821                           
  2822  0072                     ??_getDimmer_Load_Status:	
  2823                           ; 0 bytes @ 0x2
  2824                           
  2825  0072                     ??_LedPointSelect:	
  2826                           ; 0 bytes @ 0x2
  2827                           
  2828  0072                     ??_Flash_Memory_Unlock:	
  2829                           ; 0 bytes @ 0x2
  2830                           
  2831  0072                     ??_Flash_Memory_Erasing:	
  2832                           ; 0 bytes @ 0x2
  2833                           
  2834  0072                     ??_WDT_Main:	
  2835                           ; 0 bytes @ 0x2
  2836                           
  2837  0072                     ??_Temp_Initialization:	
  2838                           ; 0 bytes @ 0x2
  2839                           
  2840  0072                     ??_TouchPower:	
  2841                           ; 0 bytes @ 0x2
  2842                           
  2843  0072                     ??_SwPointSelect:	
  2844                           ; 0 bytes @ 0x2
  2845                           
  2846  0072                     ?___bmul:	
  2847                           ; 0 bytes @ 0x2
  2848                           
  2849  0072                     ?___lbdiv:	
  2850                           ; 1 bytes @ 0x2
  2851                           
  2852  0072                     ?_getAD:	
  2853                           ; 1 bytes @ 0x2
  2854                           
  2855  0072                     ?___wmul:	
  2856                           ; 2 bytes @ 0x2
  2857                           
  2858  0072                     ?___awdiv:	
  2859                           ; 2 bytes @ 0x2
  2860                           
  2861  0072                     ?___lwdiv:	
  2862                           ; 2 bytes @ 0x2
  2863                           
  2864  0072                     ?___ftpack:	
  2865                           ; 2 bytes @ 0x2
  2866                           
  2867  0072                     setDimmerIntr_ControlStatus@command:	
  2868                           ; 3 bytes @ 0x2
  2869                           
  2870  0072                     setDimmerIntr_DimmingValue@value:	
  2871                           ; 1 bytes @ 0x2
  2872                           
  2873  0072                     setDimmerIntr_Dimming_Sw@command:	
  2874                           ; 1 bytes @ 0x2
  2875                           
  2876  0072                     getDimmerIntr_Dimming_Sw@status:	
  2877                           ; 1 bytes @ 0x2
  2878                           
  2879  0072                     setDimmerIntr_Dimming_RF@command:	
  2880                           ; 1 bytes @ 0x2
  2881                           
  2882  0072                     setDimmerLights_Line@lights:	
  2883                           ; 1 bytes @ 0x2
  2884                           
  2885  0072                     getDimmer_LoadGO@loadgo:	
  2886                           ; 1 bytes @ 0x2
  2887                           
  2888  0072                     getDimmer_Load_Status@status:	
  2889                           ; 1 bytes @ 0x2
  2890                           
  2891  0072                     getAD@adcon1:	
  2892                           ; 1 bytes @ 0x2
  2893                           
  2894  0072                     setMemory_Data@data:	
  2895                           ; 1 bytes @ 0x2
  2896                           
  2897  0072                     getLoad_OK@ok:	
  2898                           ; 1 bytes @ 0x2
  2899                           
  2900  0072                     getMain_All_LightsStatus@status:	
  2901                           ; 1 bytes @ 0x2
  2902                           
  2903  0072                     setCmd_Status@cmd:	
  2904                           ; 1 bytes @ 0x2
  2905                           
  2906  0072                     getCmd_Status@number:	
  2907                           ; 1 bytes @ 0x2
  2908                           
  2909  0072                     ___bmul@multiplicand:	
  2910                           ; 1 bytes @ 0x2
  2911                           
  2912  0072                     ___lbdiv@divisor:	
  2913                           ; 1 bytes @ 0x2
  2914                           
  2915  0072                     ___wmul@multiplier:	
  2916                           ; 1 bytes @ 0x2
  2917                           
  2918  0072                     ___awdiv@divisor:	
  2919                           ; 2 bytes @ 0x2
  2920                           
  2921  0072                     ___lwdiv@divisor:	
  2922                           ; 2 bytes @ 0x2
  2923                           
  2924  0072                     ___ftpack@arg:	
  2925                           ; 2 bytes @ 0x2
  2926                           
  2927                           
  2928                           ; 3 bytes @ 0x2
  2929  0072                     	ds	1
  2930  0073                     ??_getDimmerLights_Allow_Condition:	
  2931  0073                     ??_setCmd_Status:	
  2932                           ; 0 bytes @ 0x3
  2933                           
  2934  0073                     ??_setMemory_Data:	
  2935                           ; 0 bytes @ 0x3
  2936                           
  2937  0073                     ??_setDimmerIntr_ControlStatus:	
  2938                           ; 0 bytes @ 0x3
  2939                           
  2940  0073                     ??_setDimmerIntr_DimmingValue:	
  2941                           ; 0 bytes @ 0x3
  2942                           
  2943  0073                     ??_setDimmerIntr_Dimming_Sw:	
  2944                           ; 0 bytes @ 0x3
  2945                           
  2946  0073                     ??_setDimmerIntr_Dimming_RF:	
  2947                           ; 0 bytes @ 0x3
  2948                           
  2949  0073                     ??_Mcu_Initialization:	
  2950                           ; 0 bytes @ 0x3
  2951                           
  2952  0073                     ??___bmul:	
  2953                           ; 0 bytes @ 0x3
  2954                           
  2955  0073                     ??___lbdiv:	
  2956                           ; 0 bytes @ 0x3
  2957                           
  2958  0073                     DelayOffPointSelect@sw:	
  2959                           ; 0 bytes @ 0x3
  2960                           
  2961  0073                     getDimmerIntr_DimmingValue@value:	
  2962                           ; 1 bytes @ 0x3
  2963                           
  2964  0073                     getDimmerIntr_Dimming_Sw@lights:	
  2965                           ; 1 bytes @ 0x3
  2966                           
  2967  0073                     getAll_DimmerIntr_Dimming_Sw_RF@status:	
  2968                           ; 1 bytes @ 0x3
  2969                           
  2970  0073                     DimmerLights_SelectPointer@lights:	
  2971                           ; 1 bytes @ 0x3
  2972                           
  2973  0073                     getDimmerLights_Line@line:	
  2974                           ; 1 bytes @ 0x3
  2975                           
  2976  0073                     LedPointSelect@led:	
  2977                           ; 1 bytes @ 0x3
  2978                           
  2979  0073                     Flash_Memory_Read@i:	
  2980                           ; 1 bytes @ 0x3
  2981                           
  2982  0073                     Flash_Memory_Write@i:	
  2983                           ; 1 bytes @ 0x3
  2984                           
  2985  0073                     setMemory_Modify@command:	
  2986                           ; 1 bytes @ 0x3
  2987                           
  2988  0073                     setLoad_AH_AL_Restore@i:	
  2989                           ; 1 bytes @ 0x3
  2990                           
  2991  0073                     SwPointSelect@sw:	
  2992                           ; 1 bytes @ 0x3
  2993                           
  2994  0073                     _getSw_KeyStatus$5956:	
  2995                           ; 1 bytes @ 0x3
  2996                           
  2997  0073                     getAll_Sw_KeyStatus@status:	
  2998                           ; 1 bytes @ 0x3
  2999                           
  3000  0073                     getMain_Lights_Count@status1:	
  3001                           ; 1 bytes @ 0x3
  3002                           
  3003  0073                     getCmd_Status@cmd:	
  3004                           ; 1 bytes @ 0x3
  3005                           
  3006  0073                     setOverTemp_ADV_Restore@i:	
  3007                           ; 1 bytes @ 0x3
  3008                           
  3009  0073                     _getMain_All_Error_Status$6687:	
  3010                           ; 2 bytes @ 0x3
  3011                           
  3012                           
  3013                           ; 2 bytes @ 0x3
  3014  0073                     	ds	1
  3015  0074                     ??_DlyOff_Initialization:	
  3016  0074                     ??_getDimmerLights_Status:	
  3017                           ; 0 bytes @ 0x4
  3018                           
  3019  0074                     ??_setDimmerLights_SwOff:	
  3020                           ; 0 bytes @ 0x4
  3021                           
  3022  0074                     ?_setLED:	
  3023                           ; 0 bytes @ 0x4
  3024                           
  3025  0074                     ??_setLED_Main:	
  3026                           ; 0 bytes @ 0x4
  3027                           
  3028  0074                     ??_getDelayOff_GO:	
  3029                           ; 0 bytes @ 0x4
  3030                           
  3031  0074                     ??_setDimmerLights_DimmingOn:	
  3032                           ; 0 bytes @ 0x4
  3033                           
  3034  0074                     ??_Load_Initialization:	
  3035                           ; 0 bytes @ 0x4
  3036                           
  3037  0074                     DlyOff_Initialization@sw:	
  3038                           ; 0 bytes @ 0x4
  3039                           
  3040  0074                     getDelayOff_GO@sw:	
  3041                           ; 1 bytes @ 0x4
  3042                           
  3043  0074                     setDimmerIntr_ControlStatus@lights:	
  3044                           ; 1 bytes @ 0x4
  3045                           
  3046  0074                     setDimmerIntr_DimmingValue@lights:	
  3047                           ; 1 bytes @ 0x4
  3048                           
  3049  0074                     getDimmerIntr_DimmingValue@lights:	
  3050                           ; 1 bytes @ 0x4
  3051                           
  3052  0074                     setDimmerIntr_Dimming_Sw@lights:	
  3053                           ; 1 bytes @ 0x4
  3054                           
  3055  0074                     setDimmerIntr_Dimming_RF@lights:	
  3056                           ; 1 bytes @ 0x4
  3057                           
  3058  0074                     _getAll_DimmerIntr_Dimming_Sw_RF$2221:	
  3059                           ; 1 bytes @ 0x4
  3060                           
  3061  0074                     setDimmerLights_SwOff@sw:	
  3062                           ; 1 bytes @ 0x4
  3063                           
  3064  0074                     setDimmerLights_DimmingOn@sw:	
  3065                           ; 1 bytes @ 0x4
  3066                           
  3067  0074                     _getDimmerLights_Allow_Condition$2344:	
  3068                           ; 1 bytes @ 0x4
  3069                           
  3070  0074                     getDimmerLights_Status@lights:	
  3071                           ; 1 bytes @ 0x4
  3072                           
  3073  0074                     setLED@command:	
  3074                           ; 1 bytes @ 0x4
  3075                           
  3076  0074                     Flash_Memory_Read@address:	
  3077                           ; 1 bytes @ 0x4
  3078                           
  3079  0074                     setMemory_Data@address:	
  3080                           ; 1 bytes @ 0x4
  3081                           
  3082  0074                     _getSw_KeyStatus$5957:	
  3083                           ; 1 bytes @ 0x4
  3084                           
  3085  0074                     _getAll_Sw_KeyStatus$5960:	
  3086                           ; 1 bytes @ 0x4
  3087                           
  3088  0074                     getMain_Lights_Count@status2:	
  3089                           ; 1 bytes @ 0x4
  3090                           
  3091  0074                     setCmd_Status@number:	
  3092                           ; 1 bytes @ 0x4
  3093                           
  3094  0074                     ___bmul@product:	
  3095                           ; 1 bytes @ 0x4
  3096                           
  3097  0074                     ___lbdiv@dividend:	
  3098                           ; 1 bytes @ 0x4
  3099                           
  3100  0074                     ___wmul@multiplicand:	
  3101                           ; 1 bytes @ 0x4
  3102                           
  3103  0074                     ___awdiv@dividend:	
  3104                           ; 2 bytes @ 0x4
  3105                           
  3106  0074                     ___lwdiv@dividend:	
  3107                           ; 2 bytes @ 0x4
  3108                           
  3109                           
  3110                           ; 2 bytes @ 0x4
  3111  0074                     	ds	1
  3112  0075                     ??_setLED:	
  3113  0075                     ??_setDimmerLights_DimmingClose:	
  3114                           ; 0 bytes @ 0x5
  3115                           
  3116  0075                     ??_DelayOff_Initialization:	
  3117                           ; 0 bytes @ 0x5
  3118                           
  3119  0075                     ??_getAD:	
  3120                           ; 0 bytes @ 0x5
  3121                           
  3122  0075                     getDelayOff_GO@go:	
  3123                           ; 0 bytes @ 0x5
  3124                           
  3125  0075                     _getDimmerLights_Allow_Condition$2345:	
  3126                           ; 1 bytes @ 0x5
  3127                           
  3128  0075                     getDimmerLights_Status@status:	
  3129                           ; 1 bytes @ 0x5
  3130                           
  3131  0075                     setLED@led:	
  3132                           ; 1 bytes @ 0x5
  3133                           
  3134  0075                     getAD@adcon0:	
  3135                           ; 1 bytes @ 0x5
  3136                           
  3137  0075                     Flash_Memory_Read@ret:	
  3138                           ; 1 bytes @ 0x5
  3139                           
  3140  0075                     getSw_KeyStatus@status:	
  3141                           ; 1 bytes @ 0x5
  3142                           
  3143  0075                     getMain_Lights_Count@count:	
  3144                           ; 1 bytes @ 0x5
  3145                           
  3146  0075                     ___bmul@multiplier:	
  3147                           ; 1 bytes @ 0x5
  3148                           
  3149  0075                     ___ftpack@exp:	
  3150                           ; 1 bytes @ 0x5
  3151                           
  3152  0075                     ___lbdiv@counter:	
  3153                           ; 1 bytes @ 0x5
  3154                           
  3155  0075                     _getMain_All_Error_Status$6688:	
  3156                           ; 1 bytes @ 0x5
  3157                           
  3158                           
  3159                           ; 2 bytes @ 0x5
  3160  0075                     	ds	1
  3161  0076                     ??_setLED_Initialization:	
  3162  0076                     ??_Flash_Memory_Modify:	
  3163                           ; 0 bytes @ 0x6
  3164                           
  3165  0076                     ??_setSw_Initialization:	
  3166                           ; 0 bytes @ 0x6
  3167                           
  3168  0076                     ??_Flash_Memory_Initialization:	
  3169                           ; 0 bytes @ 0x6
  3170                           
  3171  0076                     ??_getLoad_AD:	
  3172                           ; 0 bytes @ 0x6
  3173                           
  3174  0076                     ??_getTemp_AD:	
  3175                           ; 0 bytes @ 0x6
  3176                           
  3177  0076                     ??___wmul:	
  3178                           ; 0 bytes @ 0x6
  3179                           
  3180  0076                     ??___awdiv:	
  3181                           ; 0 bytes @ 0x6
  3182                           
  3183  0076                     ??___lwdiv:	
  3184                           ; 0 bytes @ 0x6
  3185                           
  3186  0076                     _getDimmerLights_Allow_Condition$2346:	
  3187                           ; 0 bytes @ 0x6
  3188                           
  3189  0076                     setLED_Initialization@led:	
  3190                           ; 1 bytes @ 0x6
  3191                           
  3192  0076                     setLED_Main@led:	
  3193                           ; 1 bytes @ 0x6
  3194                           
  3195  0076                     setSw_Initialization@sw:	
  3196                           ; 1 bytes @ 0x6
  3197                           
  3198  0076                     getSw_KeyStatus@sw:	
  3199                           ; 1 bytes @ 0x6
  3200                           
  3201  0076                     ___ftpack@sign:	
  3202                           ; 1 bytes @ 0x6
  3203                           
  3204  0076                     ___lbdiv@quotient:	
  3205                           ; 1 bytes @ 0x6
  3206                           
  3207  0076                     ___wmul@product:	
  3208                           ; 1 bytes @ 0x6
  3209                           
  3210                           
  3211                           ; 2 bytes @ 0x6
  3212  0076                     	ds	1
  3213  0077                     ??___ftpack:	
  3214  0077                     ??_setBuz:	
  3215                           ; 0 bytes @ 0x7
  3216                           
  3217  0077                     ??_LED_Initialization:	
  3218                           ; 0 bytes @ 0x7
  3219                           
  3220  0077                     ??_LED_Main:	
  3221                           ; 0 bytes @ 0x7
  3222                           
  3223  0077                     ??_Switch_Initialization:	
  3224                           ; 0 bytes @ 0x7
  3225                           
  3226  0077                     ?_Division:	
  3227                           ; 0 bytes @ 0x7
  3228                           
  3229  0077                     getDimmerLights_Allow_Condition@lights:	
  3230                           ; 1 bytes @ 0x7
  3231                           
  3232  0077                     Division@num:	
  3233                           ; 1 bytes @ 0x7
  3234                           
  3235  0077                     Flash_Memory_Initialization@value:	
  3236                           ; 1 bytes @ 0x7
  3237                           
  3238  0077                     Flash_Memory_Modify@i:	
  3239                           ; 1 bytes @ 0x7
  3240                           
  3241  0077                     getTemp_AD@channel:	
  3242                           ; 1 bytes @ 0x7
  3243                           
  3244  0077                     getMain_All_Error_Status@command:	
  3245                           ; 1 bytes @ 0x7
  3246                           
  3247  0077                     ___lwdiv@quotient:	
  3248                           ; 1 bytes @ 0x7
  3249                           
  3250                           
  3251                           ; 2 bytes @ 0x7
  3252  0077                     	ds	1
  3253  0078                     ??_Division:	
  3254  0078                     ??_Flash_Memory_Main:	
  3255                           ; 0 bytes @ 0x8
  3256                           
  3257  0078                     setBuz@count:	
  3258                           ; 0 bytes @ 0x8
  3259                           
  3260  0078                     getDimmerLights_Allow_Condition@allow:	
  3261                           ; 1 bytes @ 0x8
  3262                           
  3263  0078                     getMain_All_Error_Status@status:	
  3264                           ; 1 bytes @ 0x8
  3265                           
  3266  0078                     getTemp_AD@ADRES:	
  3267                           ; 1 bytes @ 0x8
  3268                           
  3269                           
  3270                           ; 2 bytes @ 0x8
  3271  0078                     	ds	1
  3272  0079                     ??_setDimmerLights_SwOn:	
  3273  0079                     ??_my_MainTimer:	
  3274                           ; 0 bytes @ 0x9
  3275                           
  3276  0079                     ??_Exception_Main:	
  3277                           ; 0 bytes @ 0x9
  3278                           
  3279  0079                     ___lwdiv@counter:	
  3280                           ; 0 bytes @ 0x9
  3281                           
  3282                           
  3283                           ; 1 bytes @ 0x9
  3284  0079                     	ds	1
  3285  007A                     ??_setDimmerLights_Main:	
  3286  007A                     ??_DimmerLights_TwoPhase_Main:	
  3287                           ; 0 bytes @ 0xA
  3288                           
  3289  007A                     ??_DelayOff_Main:	
  3290                           ; 0 bytes @ 0xA
  3291                           
  3292  007A                     ??_DimmerLights_Initialization:	
  3293                           ; 0 bytes @ 0xA
  3294                           
  3295  007A                     ??_DimmerLights_Main:	
  3296                           ; 0 bytes @ 0xA
  3297                           
  3298  007A                     ??_Temp_Main:	
  3299                           ; 0 bytes @ 0xA
  3300                           
  3301  007A                     ??_Switch_Main:	
  3302                           ; 0 bytes @ 0xA
  3303                           
  3304  007A                     ??_main:	
  3305                           ; 0 bytes @ 0xA
  3306                           
  3307  007A                     ??___ftneg:	
  3308                           ; 0 bytes @ 0xA
  3309                           
  3310                           
  3311                           	psect	cstackBANK0
  3312  0020                     __pcstackBANK0:	
  3313                           ; 0 bytes @ 0xA
  3314                           
  3315  0020                     ??_Load_Main:	
  3316  0020                     ?___awtoft:	
  3317                           ; 0 bytes @ 0x0
  3318                           
  3319  0020                     Division@value:	
  3320                           ; 3 bytes @ 0x0
  3321                           
  3322  0020                     Flash_Memory_Main@key_Status:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325  0020                     getLoad_AD@channel:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328  0020                     ___awdiv@counter:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331  0020                     ___awtoft@c:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334                           
  3335                           ; 2 bytes @ 0x0
  3336  0020                     	ds	1
  3337  0021                     Division@result:	
  3338  0021                     _Flash_Memory_Main$3231:	
  3339                           ; 1 bytes @ 0x1
  3340                           
  3341  0021                     getLoad_AD@k:	
  3342                           ; 1 bytes @ 0x1
  3343                           
  3344  0021                     ___awdiv@sign:	
  3345                           ; 1 bytes @ 0x1
  3346                           
  3347                           
  3348                           ; 1 bytes @ 0x1
  3349  0021                     	ds	1
  3350  0022                     ??_DimmerIntr_ValueCalculate:	
  3351  0022                     getLoad_AD@j:	
  3352                           ; 0 bytes @ 0x2
  3353                           
  3354  0022                     Load_Main@error:	
  3355                           ; 1 bytes @ 0x2
  3356                           
  3357  0022                     ___awdiv@quotient:	
  3358                           ; 1 bytes @ 0x2
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x2
  3362  0022                     	ds	1
  3363  0023                     ??___awtoft:	
  3364  0023                     getLoad_AD@ADRES:	
  3365                           ; 0 bytes @ 0x3
  3366                           
  3367  0023                     _Load_Main$3608:	
  3368                           ; 2 bytes @ 0x3
  3369                           
  3370                           
  3371                           ; 2 bytes @ 0x3
  3372  0023                     	ds	1
  3373  0024                     ?_setBuz:	
  3374  0024                     DimmerIntr_ValueCalculate@lights:	
  3375                           ; 0 bytes @ 0x4
  3376                           
  3377  0024                     setBuz@time:	
  3378                           ; 1 bytes @ 0x4
  3379                           
  3380                           
  3381                           ; 2 bytes @ 0x4
  3382  0024                     	ds	1
  3383  0025                     ??_DimmerLights_DimmingFunction:	
  3384  0025                     getLoad_AD@i:	
  3385                           ; 0 bytes @ 0x5
  3386                           
  3387  0025                     Load_Main@ErrorCountValue:	
  3388                           ; 1 bytes @ 0x5
  3389                           
  3390  0025                     ___awtoft@sign:	
  3391                           ; 1 bytes @ 0x5
  3392                           
  3393                           
  3394                           ; 1 bytes @ 0x5
  3395  0025                     	ds	1
  3396  0026                     ?___ftdiv:	
  3397  0026                     ?___ftmul:	
  3398                           ; 3 bytes @ 0x6
  3399                           
  3400  0026                     setDimmerLights_SwOn@dimmingStatus:	
  3401                           ; 3 bytes @ 0x6
  3402                           
  3403  0026                     DimmerLights_DimmingFunction@lights:	
  3404                           ; 1 bytes @ 0x6
  3405                           
  3406  0026                     Load_Main@Load_RunStatus:	
  3407                           ; 1 bytes @ 0x6
  3408                           
  3409  0026                     Exception_Main@status:	
  3410                           ; 1 bytes @ 0x6
  3411                           
  3412  0026                     ___ftdiv@f2:	
  3413                           ; 1 bytes @ 0x6
  3414                           
  3415  0026                     ___ftmul@f1:	
  3416                           ; 3 bytes @ 0x6
  3417                           
  3418                           
  3419                           ; 3 bytes @ 0x6
  3420  0026                     	ds	1
  3421  0027                     _setDimmerLights_SwOn$2274:	
  3422  0027                     Load_Main@LightsCount:	
  3423                           ; 1 bytes @ 0x7
  3424                           
  3425  0027                     Exception_Main@count:	
  3426                           ; 1 bytes @ 0x7
  3427                           
  3428                           
  3429                           ; 1 bytes @ 0x7
  3430  0027                     	ds	1
  3431  0028                     _setDimmerLights_SwOn$2283:	
  3432  0028                     Exception_Main@error:	
  3433                           ; 1 bytes @ 0x8
  3434                           
  3435  0028                     Load_Main@i:	
  3436                           ; 1 bytes @ 0x8
  3437                           
  3438                           
  3439                           ; 2 bytes @ 0x8
  3440  0028                     	ds	1
  3441  0029                     setDimmerLights_SwOn@idle:	
  3442  0029                     Exception_Main@i:	
  3443                           ; 1 bytes @ 0x9
  3444                           
  3445  0029                     ___ftdiv@f1:	
  3446                           ; 2 bytes @ 0x9
  3447                           
  3448  0029                     ___ftmul@f2:	
  3449                           ; 3 bytes @ 0x9
  3450                           
  3451                           
  3452                           ; 3 bytes @ 0x9
  3453  0029                     	ds	1
  3454  002A                     setDimmerLights_SwOn@sw:	
  3455                           
  3456                           ; 1 bytes @ 0xA
  3457  002A                     	ds	1
  3458  002B                     ??_setSw_Main:	
  3459  002B                     Exception_Main@i_6700:	
  3460                           ; 0 bytes @ 0xB
  3461                           
  3462                           
  3463                           ; 2 bytes @ 0xB
  3464  002B                     	ds	1
  3465  002C                     ??___ftdiv:	
  3466  002C                     ??___ftmul:	
  3467                           ; 0 bytes @ 0xC
  3468                           
  3469                           
  3470                           ; 0 bytes @ 0xC
  3471  002C                     	ds	1
  3472  002D                     setSw_Main@sw:	
  3473  002D                     Exception_Main@lights:	
  3474                           ; 1 bytes @ 0xD
  3475                           
  3476                           
  3477                           ; 1 bytes @ 0xD
  3478  002D                     	ds	3
  3479  0030                     ___ftdiv@cntr:	
  3480  0030                     ___ftmul@exp:	
  3481                           ; 1 bytes @ 0x10
  3482                           
  3483                           
  3484                           ; 1 bytes @ 0x10
  3485  0030                     	ds	1
  3486  0031                     ___ftdiv@f3:	
  3487  0031                     ___ftmul@f3_as_product:	
  3488                           ; 3 bytes @ 0x11
  3489                           
  3490                           
  3491                           ; 3 bytes @ 0x11
  3492  0031                     	ds	3
  3493  0034                     ___ftdiv@exp:	
  3494  0034                     ___ftmul@cntr:	
  3495                           ; 1 bytes @ 0x14
  3496                           
  3497                           
  3498                           ; 1 bytes @ 0x14
  3499  0034                     	ds	1
  3500  0035                     ___ftdiv@sign:	
  3501  0035                     ___ftmul@sign:	
  3502                           ; 1 bytes @ 0x15
  3503                           
  3504                           
  3505                           ; 1 bytes @ 0x15
  3506  0035                     	ds	1
  3507  0036                     ?___ftneg:	
  3508  0036                     ___ftneg@f1:	
  3509                           ; 3 bytes @ 0x16
  3510                           
  3511                           
  3512                           ; 3 bytes @ 0x16
  3513  0036                     	ds	3
  3514  0039                     ?___ftadd:	
  3515  0039                     ___ftadd@f1:	
  3516                           ; 3 bytes @ 0x19
  3517                           
  3518                           
  3519                           ; 3 bytes @ 0x19
  3520  0039                     	ds	3
  3521  003C                     ___ftadd@f2:	
  3522                           
  3523                           ; 3 bytes @ 0x1C
  3524  003C                     	ds	3
  3525  003F                     ??___ftadd:	
  3526                           
  3527                           ; 0 bytes @ 0x1F
  3528  003F                     	ds	4
  3529  0043                     ___ftadd@sign:	
  3530                           
  3531                           ; 1 bytes @ 0x23
  3532  0043                     	ds	1
  3533  0044                     ___ftadd@exp2:	
  3534                           
  3535                           ; 1 bytes @ 0x24
  3536  0044                     	ds	1
  3537  0045                     ___ftadd@exp1:	
  3538                           
  3539                           ; 1 bytes @ 0x25
  3540  0045                     	ds	1
  3541  0046                     ?___fttol:	
  3542  0046                     ___fttol@f1:	
  3543                           ; 4 bytes @ 0x26
  3544                           
  3545                           
  3546                           ; 3 bytes @ 0x26
  3547  0046                     	ds	4
  3548  004A                     ??___fttol:	
  3549                           
  3550                           ; 0 bytes @ 0x2A
  3551  004A                     	ds	4
  3552  004E                     ___fttol@sign1:	
  3553                           
  3554                           ; 1 bytes @ 0x2E
  3555  004E                     	ds	1
  3556  004F                     ___fttol@lval:	
  3557                           
  3558                           ; 4 bytes @ 0x2F
  3559  004F                     	ds	4
  3560  0053                     ___fttol@exp1:	
  3561                           
  3562                           ; 1 bytes @ 0x33
  3563  0053                     	ds	1
  3564  0054                     ??_getDimmerLights_ValueToPercent:	
  3565  0054                     ??_getDimmerLights_PercentToValue:	
  3566                           ; 0 bytes @ 0x34
  3567                           
  3568                           
  3569                           ; 0 bytes @ 0x34
  3570  0054                     	ds	2
  3571  0056                     getDimmerLights_PercentToValue@value:	
  3572  0056                     getDimmerLights_ValueToPercent@value:	
  3573                           ; 1 bytes @ 0x36
  3574                           
  3575                           
  3576                           ; 1 bytes @ 0x36
  3577  0056                     	ds	1
  3578  0057                     getDimmerLights_PercentToValue@i:	
  3579  0057                     getDimmerLights_ValueToPercent@i:	
  3580                           ; 3 bytes @ 0x37
  3581                           
  3582                           
  3583                           ; 3 bytes @ 0x37
  3584  0057                     	ds	3
  3585  005A                     ?_setProductData:	
  3586  005A                     ??_DimmerIntr_Initialization:	
  3587                           ; 0 bytes @ 0x3A
  3588                           
  3589  005A                     ?_setDimmerIntr_MaxmumValue:	
  3590                           ; 0 bytes @ 0x3A
  3591                           
  3592  005A                     setDimmerIntr_MaxmumValue@value:	
  3593                           ; 0 bytes @ 0x3A
  3594                           
  3595  005A                     setProductData@value:	
  3596                           ; 1 bytes @ 0x3A
  3597                           
  3598                           
  3599                           ; 1 bytes @ 0x3A
  3600  005A                     	ds	1
  3601  005B                     ??_setProductData:	
  3602  005B                     ??_setDimmerIntr_MaxmumValue:	
  3603                           ; 0 bytes @ 0x3B
  3604                           
  3605                           
  3606                           ; 0 bytes @ 0x3B
  3607  005B                     	ds	1
  3608  005C                     setDimmerIntr_MaxmumValue@lights:	
  3609  005C                     setProductData@address:	
  3610                           ; 1 bytes @ 0x3C
  3611                           
  3612                           
  3613                           ; 1 bytes @ 0x3C
  3614  005C                     	ds	1
  3615  005D                     ??_DlyOff_Main:	
  3616  005D                     ?_setDimmerLights_Dimming:	
  3617                           ; 0 bytes @ 0x3D
  3618                           
  3619  005D                     ??_DimmerLights_AssignationDimming:	
  3620                           ; 0 bytes @ 0x3D
  3621                           
  3622  005D                     ??_setTemp_Main:	
  3623                           ; 0 bytes @ 0x3D
  3624                           
  3625  005D                     ?_setDelayOff_GO:	
  3626                           ; 0 bytes @ 0x3D
  3627                           
  3628  005D                     setDelayOff_GO@command:	
  3629                           ; 0 bytes @ 0x3D
  3630                           
  3631  005D                     setDimmerLights_Dimming@status:	
  3632                           ; 1 bytes @ 0x3D
  3633                           
  3634                           
  3635                           ; 1 bytes @ 0x3D
  3636  005D                     	ds	1
  3637  005E                     ??_setDimmerLights_Dimming:	
  3638  005E                     setDelayOff_GO@value:	
  3639                           ; 0 bytes @ 0x3E
  3640                           
  3641                           
  3642                           ; 1 bytes @ 0x3E
  3643  005E                     	ds	1
  3644  005F                     ??_setDelayOff_GO:	
  3645  005F                     DlyOff_Main@sw:	
  3646                           ; 0 bytes @ 0x3F
  3647                           
  3648  005F                     DimmerLights_AssignationDimming@status:	
  3649                           ; 1 bytes @ 0x3F
  3650                           
  3651  005F                     setDimmerLights_Dimming@value:	
  3652                           ; 1 bytes @ 0x3F
  3653                           
  3654  005F                     setTemp_Main@error:	
  3655                           ; 1 bytes @ 0x3F
  3656                           
  3657                           
  3658                           ; 1 bytes @ 0x3F
  3659  005F                     	ds	1
  3660  0060                     DimmerLights_AssignationDimming@sw:	
  3661  0060                     setDimmerLights_Dimming@lights:	
  3662                           ; 1 bytes @ 0x40
  3663                           
  3664  0060                     setTemp_Main@TempGO:	
  3665                           ; 1 bytes @ 0x40
  3666                           
  3667                           
  3668                           ; 1 bytes @ 0x40
  3669  0060                     	ds	1
  3670  0061                     setDelayOff_GO@i:	
  3671  0061                     DimmerLights_TwoPhase_Main@lights:	
  3672                           ; 1 bytes @ 0x41
  3673                           
  3674  0061                     setTemp_Main@SafeValue:	
  3675                           ; 1 bytes @ 0x41
  3676                           
  3677                           
  3678                           ; 2 bytes @ 0x41
  3679  0061                     	ds	1
  3680  0062                     setDelayOff_GO@j:	
  3681                           
  3682                           ; 1 bytes @ 0x42
  3683  0062                     	ds	1
  3684  0063                     setDelayOff_GO@k:	
  3685  0063                     setTemp_Main@DangerValue:	
  3686                           ; 1 bytes @ 0x43
  3687                           
  3688                           
  3689                           ; 2 bytes @ 0x43
  3690  0063                     	ds	1
  3691  0064                     setDelayOff_GO@sw:	
  3692                           
  3693                           ; 1 bytes @ 0x44
  3694  0064                     	ds	1
  3695  0065                     ?_setDimmerLights_OnOff:	
  3696  0065                     setDimmerLights_OnOff@command:	
  3697                           ; 0 bytes @ 0x45
  3698                           
  3699  0065                     setTemp_Main@AD:	
  3700                           ; 1 bytes @ 0x45
  3701                           
  3702                           
  3703                           ; 2 bytes @ 0x45
  3704  0065                     	ds	1
  3705  0066                     ??_setDimmerLights_OnOff:	
  3706                           
  3707                           ; 0 bytes @ 0x46
  3708  0066                     	ds	2
  3709  0068                     setDimmerLights_OnOff@lights:	
  3710                           
  3711                           ; 1 bytes @ 0x48
  3712  0068                     	ds	1
  3713  0069                     setDimmerLights_Main@lights:	
  3714                           
  3715                           ; 1 bytes @ 0x49
  3716  0069                     	ds	1
  3717                           
  3718                           	psect	maintext
  3719  1707                     __pmaintext:	
  3720 ;;
  3721 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3722 ;;
  3723 ;; *************** function _main *****************
  3724 ;; Defined at:
  3725 ;;		line 6 in file "../src/main_B1.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  argc            2    0[BANK3 ] int 
  3728 ;;  argv            2    2[BANK3 ] PTR PTR unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  2    0[BANK3 ] int 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 17F/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3740 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3744 ;;Total ram usage:        4 bytes
  3745 ;; Hardware stack levels required when called:    9
  3746 ;; This function calls:
  3747 ;;		_Buzzer_Initialization
  3748 ;;		_Buzzer_Main
  3749 ;;		_DelayOff_Initialization
  3750 ;;		_DelayOff_Main
  3751 ;;		_DimmerLights_Initialization
  3752 ;;		_DimmerLights_Main
  3753 ;;		_Exception_Main
  3754 ;;		_Flash_Memory_Initialization
  3755 ;;		_Flash_Memory_Main
  3756 ;;		_LED_Initialization
  3757 ;;		_LED_Main
  3758 ;;		_Load_Initialization
  3759 ;;		_Load_Main
  3760 ;;		_Mcu_Initialization
  3761 ;;		_Switch_Initialization
  3762 ;;		_Switch_Main
  3763 ;;		_Temp_Initialization
  3764 ;;		_Temp_Main
  3765 ;;		_WDT_Main
  3766 ;;		_getLoad_AD
  3767 ;;		_getTemp_AD
  3768 ;;		_myMain_Initialization
  3769 ;;		_my_MainTimer
  3770 ;; This function is called by:
  3771 ;;		Startup code after reset
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _main
  3777  1707                     _main:	
  3778                           
  3779                           ;main_B1.c: 7: myMain_Initialization();
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3783  1707  3190  205B  3197   	fcall	_myMain_Initialization
  3784                           
  3785                           ;main_B1.c: 8: Mcu_Initialization();
  3786  170A  3190  20BD  3197   	fcall	_Mcu_Initialization
  3787                           
  3788                           ;main_B1.c: 9: Flash_Memory_Initialization();
  3789  170D  3185  25DF  3197   	fcall	_Flash_Memory_Initialization
  3790                           
  3791                           ;main_B1.c: 10: LED_Initialization();
  3792  1710  319F  27BF  3197   	fcall	_LED_Initialization
  3793                           
  3794                           ;main_B1.c: 11: Buzzer_Initialization();
  3795  1713  319E  26E9  3197   	fcall	_Buzzer_Initialization
  3796                           
  3797                           ;main_B1.c: 13: ;;
  3798                           ;main_B1.c: 14: Temp_Initialization();
  3799  1716  319E  26EF  3197   	fcall	_Temp_Initialization
  3800                           
  3801                           ;main_B1.c: 15: Load_Initialization();
  3802  1719  319E  26EC  3197   	fcall	_Load_Initialization
  3803                           
  3804                           ;main_B1.c: 16: ;;
  3805                           ;main_B1.c: 17: DelayOff_Initialization();
  3806  171C  319F  2732  3197   	fcall	_DelayOff_Initialization
  3807                           
  3808                           ;main_B1.c: 19: DimmerLights_Initialization();
  3809  171F  319F  276F  3197   	fcall	_DimmerLights_Initialization
  3810                           
  3811                           ;main_B1.c: 20: ;;
  3812                           ;main_B1.c: 21: ;;
  3813                           ;main_B1.c: 22: ;;
  3814                           ;main_B1.c: 23: Switch_Initialization();
  3815  1722  319F  2742  3197   	fcall	_Switch_Initialization
  3816  1725                     l8632:	
  3817                           ;main_B1.c: 25: ;;
  3818                           ;main_B1.c: 26: ;;
  3819                           ;main_B1.c: 28: while (1) {
  3820                           
  3821                           
  3822                           ;main_B1.c: 30: if (myMain.PowerON == 1) {
  3823  1725  0021               	movlb	1	; select bank1
  3824  1726  1C40               	btfss	_myMain^(0+128),0
  3825  1727  2F30               	goto	l8636
  3826                           
  3827                           ;main_B1.c: 36: getLoad_AD(0x05);
  3828  1728  3005               	movlw	5
  3829  1729  318B  2364  3197   	fcall	_getLoad_AD
  3830                           
  3831                           ;main_B1.c: 40: getTemp_AD(0x09);
  3832  172C  3009               	movlw	9
  3833  172D  3189  2169  3197   	fcall	_getTemp_AD
  3834  1730                     l8636:	
  3835                           
  3836                           ;main_B1.c: 55: }
  3837                           ;main_B1.c: 91: if (Timer1.Timeout == 1) {
  3838  1730  0021               	movlb	1	; select bank1
  3839  1731  1C59               	btfss	_Timer1^(0+128),0
  3840  1732  2F25               	goto	l8632
  3841                           
  3842                           ;main_B1.c: 92: Timer1.Timeout = 0;
  3843  1733  1059               	bcf	_Timer1^(0+128),0
  3844                           
  3845                           ;main_B1.c: 94: my_MainTimer();
  3846  1734  3195  2589  3197   	fcall	_my_MainTimer
  3847                           
  3848                           ;main_B1.c: 95: WDT_Main();
  3849  1737  3190  207A  3197   	fcall	_WDT_Main
  3850                           
  3851                           ;main_B1.c: 96: ;;
  3852                           ;main_B1.c: 97: ;;
  3853                           ;main_B1.c: 98: if (myMain.PowerON == 1) {
  3854  173A  0021               	movlb	1	; select bank1
  3855  173B  1C40               	btfss	_myMain^(0+128),0
  3856  173C  2F25               	goto	l8632
  3857                           
  3858                           ;main_B1.c: 99: Flash_Memory_Main();
  3859  173D  3196  263B  3197   	fcall	_Flash_Memory_Main
  3860                           
  3861                           ;main_B1.c: 101: LED_Main();
  3862  1740  319F  27CB  3197   	fcall	_LED_Main
  3863                           
  3864                           ;main_B1.c: 102: Buzzer_Main();
  3865  1743  3196  26C1  3197   	fcall	_Buzzer_Main
  3866                           
  3867                           ;main_B1.c: 104: ;;
  3868                           ;main_B1.c: 105: Temp_Main();
  3869  1746  319E  26F2  3197   	fcall	_Temp_Main
  3870                           
  3871                           ;main_B1.c: 106: Load_Main();
  3872  1749  3180  204D  3197   	fcall	_Load_Main
  3873                           
  3874                           ;main_B1.c: 107: ;;
  3875                           ;main_B1.c: 109: ;;
  3876                           ;main_B1.c: 110: DimmerLights_Main();
  3877  174C  3194  247C  3197   	fcall	_DimmerLights_Main
  3878                           
  3879                           ;main_B1.c: 111: Switch_Main();
  3880  174F  319F  2790  3197   	fcall	_Switch_Main
  3881                           
  3882                           ;main_B1.c: 112: ;;
  3883                           ;main_B1.c: 113: ;;
  3884                           ;main_B1.c: 115: ;;
  3885                           ;main_B1.c: 116: DelayOff_Main();
  3886  1752  319F  273A  3197   	fcall	_DelayOff_Main
  3887                           
  3888                           ;main_B1.c: 117: ;;
  3889                           ;main_B1.c: 118: ;;
  3890                           ;main_B1.c: 119: Exception_Main();
  3891  1755  3184  243C  3197   	fcall	_Exception_Main
  3892  1758  2F25               	goto	l8632
  3893  1759                     __end_of_main:	
  3894                           ;main_B1.c: 126: }
  3895                           ;main_B1.c: 127: }
  3896                           ;main_B1.c: 161: }
  3897                           ;main_B1.c: 162: return (0);
  3898                           ;	Return value of _main is never used
  3899                           
  3900                           
  3901                           	psect	text1
  3902  1589                     __ptext1:	
  3903 ;; *************** function _my_MainTimer *****************
  3904 ;; Defined at:
  3905 ;;		line 183 in file "../src/main_B1.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;		None               void
  3912 ;; Registers used:
  3913 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;Total ram usage:        1 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    5
  3926 ;; This function calls:
  3927 ;;		_setBuz
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _my_MainTimer
  3935  1589                     _my_MainTimer:	
  3936                           
  3937                           ;main_B1.c: 185: if (myMain.PowerON == 0) {
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3941  1589  0021               	movlb	1	; select bank1
  3942  158A  1840               	btfsc	_myMain^(0+128),0
  3943  158B  2DA1               	goto	l8532
  3944                           
  3945                           ;main_B1.c: 186: myMain.PowerCount++;
  3946  158C  3001               	movlw	1
  3947  158D  00F9               	movwf	??_my_MainTimer
  3948  158E  0879               	movf	??_my_MainTimer,w
  3949  158F  07C1               	addwf	(_myMain^(0+128)+1),f
  3950                           
  3951                           ;main_B1.c: 187: if (myMain.PowerCount == (1500 / 20)) {
  3952  1590  0841               	movf	(_myMain^(0+128)+1),w
  3953  1591  3A4B               	xorlw	75
  3954  1592  1D03               	skipz
  3955  1593  0008               	return
  3956                           
  3957                           ;main_B1.c: 188: myMain.PowerCount = 0;
  3958  1594  01C1               	clrf	(_myMain^(0+128)+1)
  3959                           
  3960                           ;main_B1.c: 189: myMain.PowerON = 1;
  3961  1595  1440               	bsf	_myMain^(0+128),0
  3962                           
  3963                           ;main_B1.c: 194: setBuz(3, 50);
  3964  1596  3032               	movlw	50
  3965  1597  0020               	movlb	0	; select bank0
  3966  1598  00A4               	movwf	setBuz@time
  3967  1599  3000               	movlw	0
  3968  159A  00A5               	movwf	setBuz@time+1
  3969  159B  3003               	movlw	3
  3970  159C  3197  2759         	fcall	_setBuz
  3971                           
  3972                           ;main_B1.c: 195: myMain.SelfTest = 1;
  3973  159E  0021               	movlb	1	; select bank1
  3974  159F  1640               	bsf	_myMain^(0+128),4
  3975                           
  3976                           ;main_B1.c: 204: }
  3977                           ;main_B1.c: 205: } else {
  3978  15A0  0008               	return
  3979  15A1                     l8532:	
  3980                           
  3981                           ;main_B1.c: 206: myMain.PowerCount++;
  3982  15A1  3001               	movlw	1
  3983  15A2  00F9               	movwf	??_my_MainTimer
  3984  15A3  0879               	movf	??_my_MainTimer,w
  3985  15A4  07C1               	addwf	(_myMain^(0+128)+1),f
  3986                           
  3987                           ;main_B1.c: 207: if (myMain.PowerCount == (1000 / 20)) {
  3988  15A5  0841               	movf	(_myMain^(0+128)+1),w
  3989  15A6  3A32               	xorlw	50
  3990  15A7  1903               	btfsc	3,2
  3991                           
  3992                           ;main_B1.c: 208: myMain.PowerCount = 0;
  3993  15A8  01C1               	clrf	(_myMain^(0+128)+1)
  3994                           
  3995                           ;main_B1.c: 230: }
  3996                           ;main_B1.c: 232: myMain.Count1++;
  3997  15A9  3001               	movlw	1
  3998  15AA  07C4               	addwf	(_myMain^(0+128)+4),f
  3999  15AB  3000               	movlw	0
  4000  15AC  3DC5               	addwfc	((_myMain+1)^(0+128)+4),f
  4001                           
  4002                           ;main_B1.c: 233: if (myMain.Count1 == (1000 / 20)) {
  4003  15AD  3004               	movlw	4
  4004  15AE  3EC0               	addlw	_myMain& (0+255)
  4005  15AF  0086               	movwf	6
  4006  15B0  0187               	clrf	7
  4007  15B1  3F40               	moviw [0]fsr1
  4008  15B2  3A32               	xorlw	50
  4009  15B3  1D03               	skipz
  4010  15B4  2DB7               	goto	u10485
  4011  15B5  3F41               	moviw [1]fsr1
  4012  15B6  3A00               	xorlw	0
  4013  15B7                     u10485:	
  4014  15B7  1D03               	skipz
  4015  15B8  0008               	return
  4016                           
  4017                           ;main_B1.c: 234: myMain.Count1 = 0;
  4018  15B9  01C4               	clrf	(_myMain^(0+128)+4)
  4019  15BA  01C5               	clrf	((_myMain+1)^(0+128)+4)
  4020                           
  4021                           ;main_B1.c: 246: if (myMain.Flag) {
  4022  15BB  1CC0               	btfss	_myMain^(0+128),1
  4023  15BC  2DBF               	goto	l2108
  4024                           
  4025                           ;main_B1.c: 247: myMain.Flag = 0;
  4026  15BD  10C0               	bcf	_myMain^(0+128),1
  4027                           
  4028                           ;main_B1.c: 256: } else {
  4029  15BE  0008               	return
  4030  15BF                     l2108:	
  4031                           
  4032                           ;main_B1.c: 257: myMain.Flag = 1;
  4033  15BF  14C0               	bsf	_myMain^(0+128),1
  4034  15C0  0008               	return
  4035  15C1                     __end_of_my_MainTimer:	
  4036                           
  4037                           	psect	text2
  4038  105B                     __ptext2:	
  4039 ;; *************** function _myMain_Initialization *****************
  4040 ;; Defined at:
  4041 ;;		line 168 in file "../src/main_B1.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;		None               void
  4048 ;; Registers used:
  4049 ;;		wreg, fsr1l, fsr1h
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        1 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    3
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _myMain_Initialization
  4071  105B                     _myMain_Initialization:	
  4072                           
  4073                           ;main_B1.c: 171: product = &_product;
  4074                           
  4075                           ;incstack = 0
  4076                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4077  105B  3020               	movlw	__product& (0+255)
  4078  105C  00F2               	movwf	??_myMain_Initialization
  4079  105D  0872               	movf	??_myMain_Initialization,w
  4080  105E  0020               	movlb	0	; select bank0
  4081  105F  00ED               	movwf	_product
  4082                           
  4083                           ;main_B1.c: 172: product->Data[20] = 210;
  4084  1060  30D2               	movlw	210
  4085  1061  00F2               	movwf	??_myMain_Initialization
  4086  1062  086D               	movf	_product,w
  4087  1063  3E14               	addlw	20
  4088  1064  0086               	movwf	6
  4089  1065  3002               	movlw	2	; select bank4/5
  4090  1066  0087               	movwf	7
  4091  1067  0872               	movf	??_myMain_Initialization,w
  4092  1068  0081               	movwf	1
  4093  1069  0008               	return
  4094  106A                     __end_of_myMain_Initialization:	
  4095                           
  4096                           	psect	text3
  4097  0969                     __ptext3:	
  4098 ;; *************** function _getTemp_AD *****************
  4099 ;; Defined at:
  4100 ;;		line 15 in file "../src/OverTemperature_B1.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  channel         1    wreg     unsigned char 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  channel         1    7[COMMON] unsigned char 
  4105 ;;  ADRES           2    8[COMMON] unsigned int 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;		None               void
  4108 ;; Registers used:
  4109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;Total ram usage:        4 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    5
  4122 ;; This function calls:
  4123 ;;		_getAD
  4124 ;; This function is called by:
  4125 ;;		_main
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _getTemp_AD
  4131  0969                     _getTemp_AD:	
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _getTemp_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4135                           ;getTemp_AD@channel stored from wreg
  4136  0969  00F7               	movwf	getTemp_AD@channel
  4137                           
  4138                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  4139  096A  01F8               	clrf	getTemp_AD@ADRES
  4140  096B  01F9               	clrf	getTemp_AD@ADRES+1
  4141                           
  4142                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  4143  096C  0021               	movlb	1	; select bank1
  4144  096D  1D61               	btfss	_Temp^(0+128),2
  4145  096E  0008               	return
  4146                           
  4147                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0xf0);
  4148  096F  30F0               	movlw	240
  4149  0970  00F6               	movwf	??_getTemp_AD
  4150  0971  0876               	movf	??_getTemp_AD,w
  4151  0972  00F2               	movwf	getAD@adcon1
  4152  0973  0877               	movf	getTemp_AD@channel,w
  4153  0974  3191  21E6  3189   	fcall	_getAD
  4154  0977  0873               	movf	?_getAD+1,w
  4155  0978  01F9               	clrf	getTemp_AD@ADRES+1
  4156  0979  07F9               	addwf	getTemp_AD@ADRES+1,f
  4157  097A  0872               	movf	?_getAD,w
  4158  097B  01F8               	clrf	getTemp_AD@ADRES
  4159  097C  07F8               	addwf	getTemp_AD@ADRES,f
  4160                           
  4161                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  4162  097D  0879               	movf	getTemp_AD@ADRES+1,w
  4163  097E  0478               	iorwf	getTemp_AD@ADRES,w
  4164  097F  1903               	skipnz
  4165  0980  0008               	return
  4166                           
  4167                           ;OverTemperature_B1.c: 30: if (Temp.ADV[0] < ADRES) {
  4168  0981  0879               	movf	getTemp_AD@ADRES+1,w
  4169  0982  0021               	movlb	1	; select bank1
  4170  0983  0266               	subwf	((_Temp+1)^(0+128)+4),w
  4171  0984  1D03               	skipz
  4172  0985  2988               	goto	u8355
  4173  0986  0878               	movf	getTemp_AD@ADRES,w
  4174  0987  0265               	subwf	(_Temp^(0+128)+4),w
  4175  0988                     u8355:	
  4176  0988  1803               	skipnc
  4177  0989  2991               	goto	l7182
  4178                           
  4179                           ;OverTemperature_B1.c: 31: Temp.ADV[0] = ADRES;
  4180  098A  0879               	movf	getTemp_AD@ADRES+1,w
  4181  098B  01E6               	clrf	((_Temp+1)^(0+128)+4)
  4182  098C  07E6               	addwf	((_Temp+1)^(0+128)+4),f
  4183  098D  0878               	movf	getTemp_AD@ADRES,w
  4184  098E  01E5               	clrf	(_Temp^(0+128)+4)
  4185  098F  07E5               	addwf	(_Temp^(0+128)+4),f
  4186                           
  4187                           ;OverTemperature_B1.c: 32: } else if (Temp.ADV[1] < ADRES) {
  4188  0990  0008               	return
  4189  0991                     l7182:	
  4190  0991  0879               	movf	getTemp_AD@ADRES+1,w
  4191  0992  0268               	subwf	((_Temp+1)^(0+128)+6),w
  4192  0993  1D03               	skipz
  4193  0994  2997               	goto	u8365
  4194  0995  0878               	movf	getTemp_AD@ADRES,w
  4195  0996  0267               	subwf	(_Temp^(0+128)+6),w
  4196  0997                     u8365:	
  4197  0997  1803               	skipnc
  4198  0998  29A0               	goto	l7186
  4199                           
  4200                           ;OverTemperature_B1.c: 33: Temp.ADV[1] = ADRES;
  4201  0999  0879               	movf	getTemp_AD@ADRES+1,w
  4202  099A  01E8               	clrf	((_Temp+1)^(0+128)+6)
  4203  099B  07E8               	addwf	((_Temp+1)^(0+128)+6),f
  4204  099C  0878               	movf	getTemp_AD@ADRES,w
  4205  099D  01E7               	clrf	(_Temp^(0+128)+6)
  4206  099E  07E7               	addwf	(_Temp^(0+128)+6),f
  4207                           
  4208                           ;OverTemperature_B1.c: 34: } else if (Temp.ADV[2] < ADRES) {
  4209  099F  0008               	return
  4210  09A0                     l7186:	
  4211  09A0  0879               	movf	getTemp_AD@ADRES+1,w
  4212  09A1  026A               	subwf	((_Temp+1)^(0+128)+8),w
  4213  09A2  1D03               	skipz
  4214  09A3  29A6               	goto	u8375
  4215  09A4  0878               	movf	getTemp_AD@ADRES,w
  4216  09A5  0269               	subwf	(_Temp^(0+128)+8),w
  4217  09A6                     u8375:	
  4218  09A6  1803               	skipnc
  4219  09A7  29AF               	goto	l7190
  4220                           
  4221                           ;OverTemperature_B1.c: 35: Temp.ADV[2] = ADRES;
  4222  09A8  0879               	movf	getTemp_AD@ADRES+1,w
  4223  09A9  01EA               	clrf	((_Temp+1)^(0+128)+8)
  4224  09AA  07EA               	addwf	((_Temp+1)^(0+128)+8),f
  4225  09AB  0878               	movf	getTemp_AD@ADRES,w
  4226  09AC  01E9               	clrf	(_Temp^(0+128)+8)
  4227  09AD  07E9               	addwf	(_Temp^(0+128)+8),f
  4228                           
  4229                           ;OverTemperature_B1.c: 36: } else if (Temp.ADV[3] < ADRES) {
  4230  09AE  0008               	return
  4231  09AF                     l7190:	
  4232  09AF  0879               	movf	getTemp_AD@ADRES+1,w
  4233  09B0  026C               	subwf	((_Temp+1)^(0+128)+10),w
  4234  09B1  1D03               	skipz
  4235  09B2  29B5               	goto	u8385
  4236  09B3  0878               	movf	getTemp_AD@ADRES,w
  4237  09B4  026B               	subwf	(_Temp^(0+128)+10),w
  4238  09B5                     u8385:	
  4239  09B5  1803               	skipnc
  4240  09B6  29BE               	goto	l7194
  4241                           
  4242                           ;OverTemperature_B1.c: 37: Temp.ADV[3] = ADRES;
  4243  09B7  0879               	movf	getTemp_AD@ADRES+1,w
  4244  09B8  01EC               	clrf	((_Temp+1)^(0+128)+10)
  4245  09B9  07EC               	addwf	((_Temp+1)^(0+128)+10),f
  4246  09BA  0878               	movf	getTemp_AD@ADRES,w
  4247  09BB  01EB               	clrf	(_Temp^(0+128)+10)
  4248  09BC  07EB               	addwf	(_Temp^(0+128)+10),f
  4249                           
  4250                           ;OverTemperature_B1.c: 38: } else if (Temp.ADV[4] < ADRES) {
  4251  09BD  0008               	return
  4252  09BE                     l7194:	
  4253  09BE  0879               	movf	getTemp_AD@ADRES+1,w
  4254  09BF  026E               	subwf	((_Temp+1)^(0+128)+12),w
  4255  09C0  1D03               	skipz
  4256  09C1  29C4               	goto	u8395
  4257  09C2  0878               	movf	getTemp_AD@ADRES,w
  4258  09C3  026D               	subwf	(_Temp^(0+128)+12),w
  4259  09C4                     u8395:	
  4260  09C4  1803               	skipnc
  4261  09C5  0008               	return
  4262                           
  4263                           ;OverTemperature_B1.c: 39: Temp.ADV[4] = ADRES;
  4264  09C6  0879               	movf	getTemp_AD@ADRES+1,w
  4265  09C7  01EE               	clrf	((_Temp+1)^(0+128)+12)
  4266  09C8  07EE               	addwf	((_Temp+1)^(0+128)+12),f
  4267  09C9  0878               	movf	getTemp_AD@ADRES,w
  4268  09CA  01ED               	clrf	(_Temp^(0+128)+12)
  4269  09CB  07ED               	addwf	(_Temp^(0+128)+12),f
  4270  09CC  0008               	return
  4271  09CD                     __end_of_getTemp_AD:	
  4272                           
  4273                           	psect	text4
  4274  0B64                     __ptext4:	
  4275 ;; *************** function _getLoad_AD *****************
  4276 ;; Defined at:
  4277 ;;		line 16 in file "../src/OverLoad_B1.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  channel         1    wreg     unsigned char 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  channel         1    0[BANK0 ] unsigned char 
  4282 ;;  ADRES           2    3[BANK0 ] unsigned int 
  4283 ;;  i               1    5[BANK0 ] unsigned char 
  4284 ;;  j               1    2[BANK0 ] unsigned char 
  4285 ;;  k               1    1[BANK0 ] unsigned char 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;		None               void
  4288 ;; Registers used:
  4289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4296 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;Total ram usage:        8 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    5
  4302 ;; This function calls:
  4303 ;;		_getAD
  4304 ;; This function is called by:
  4305 ;;		_main
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           
  4310                           ;psect for function _getLoad_AD
  4311  0B64                     _getLoad_AD:	
  4312                           
  4313                           ;incstack = 0
  4314                           ; Regs used in _getLoad_AD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4315                           ;getLoad_AD@channel stored from wreg
  4316  0B64  0020               	movlb	0	; select bank0
  4317  0B65  00A0               	movwf	getLoad_AD@channel
  4318                           
  4319                           ;OverLoad_B1.c: 17: char i = 0, j = 0, k = 0;
  4320  0B66  01A5               	clrf	getLoad_AD@i
  4321  0B67  01A2               	clrf	getLoad_AD@j
  4322  0B68  01A1               	clrf	getLoad_AD@k
  4323                           
  4324                           ;OverLoad_B1.c: 18: ADtype ADRES = 0;
  4325  0B69  01A3               	clrf	getLoad_AD@ADRES
  4326  0B6A  01A4               	clrf	getLoad_AD@ADRES+1
  4327                           
  4328                           ;OverLoad_B1.c: 19: if (Load.ADtoGO == 1) {
  4329  0B6B  0022               	movlb	2	; select bank2
  4330  0B6C  1E25               	btfss	_Load^(0+256),4
  4331  0B6D  0008               	return
  4332                           
  4333                           ;OverLoad_B1.c: 21: ADRES = getAD(channel, 0xf3);
  4334  0B6E  30F3               	movlw	243
  4335  0B6F  00F6               	movwf	??_getLoad_AD
  4336  0B70  0876               	movf	??_getLoad_AD,w
  4337  0B71  00F2               	movwf	getAD@adcon1
  4338  0B72  0020               	movlb	0	; select bank0
  4339  0B73  0820               	movf	getLoad_AD@channel,w
  4340  0B74  3191  21E6  318B   	fcall	_getAD
  4341  0B77  0873               	movf	?_getAD+1,w
  4342  0B78  0020               	movlb	0	; select bank0
  4343  0B79  01A4               	clrf	getLoad_AD@ADRES+1
  4344  0B7A  07A4               	addwf	getLoad_AD@ADRES+1,f
  4345  0B7B  0872               	movf	?_getAD,w
  4346  0B7C  01A3               	clrf	getLoad_AD@ADRES
  4347  0B7D  07A3               	addwf	getLoad_AD@ADRES,f
  4348                           
  4349                           ;OverLoad_B1.c: 22: for (i = 0; i < 4; i++) {
  4350  0B7E  01A5               	clrf	getLoad_AD@i
  4351  0B7F  3004               	movlw	4
  4352  0B80  0225               	subwf	getLoad_AD@i,w
  4353  0B81  1803               	btfsc	3,0
  4354  0B82  2BAA               	goto	l6992
  4355  0B83                     l6980:	
  4356                           
  4357                           ;OverLoad_B1.c: 23: if (Load.AH[i] < ADRES && j == 0) {
  4358  0B83  3525               	lslf	getLoad_AD@i,w
  4359  0B84  3E30               	addlw	(_Load+11)& (0+255)
  4360  0B85  0086               	movwf	6
  4361  0B86  3001               	movlw	1	; select bank2/3
  4362  0B87  0087               	movwf	7
  4363  0B88  3F40               	moviw [0]fsr1
  4364  0B89  00F6               	movwf	??_getLoad_AD
  4365  0B8A  3F41               	moviw [1]fsr1
  4366  0B8B  00F7               	movwf	??_getLoad_AD+1
  4367  0B8C  0824               	movf	getLoad_AD@ADRES+1,w
  4368  0B8D  0277               	subwf	??_getLoad_AD+1,w
  4369  0B8E  1D03               	skipz
  4370  0B8F  2B92               	goto	u7945
  4371  0B90  0823               	movf	getLoad_AD@ADRES,w
  4372  0B91  0276               	subwf	??_getLoad_AD,w
  4373  0B92                     u7945:	
  4374  0B92  1803               	skipnc
  4375  0B93  2BA2               	goto	l6988
  4376  0B94  08A2               	movf	getLoad_AD@j,f
  4377  0B95  1D03               	skipz
  4378  0B96  2BA2               	goto	l6988
  4379                           
  4380                           ;OverLoad_B1.c: 24: Load.AH[i] = ADRES;
  4381  0B97  3525               	lslf	getLoad_AD@i,w
  4382  0B98  3E30               	addlw	(_Load+11)& (0+255)
  4383  0B99  0086               	movwf	6
  4384  0B9A  3001               	movlw	1	; select bank2/3
  4385  0B9B  0087               	movwf	7
  4386  0B9C  0823               	movf	getLoad_AD@ADRES,w
  4387  0B9D  3FC0               	movwi [0]fsr1
  4388  0B9E  0824               	movf	getLoad_AD@ADRES+1,w
  4389  0B9F  3FC1               	movwi [1]fsr1
  4390                           
  4391                           ;OverLoad_B1.c: 25: j = 1;
  4392  0BA0  01A2               	clrf	getLoad_AD@j
  4393  0BA1  0AA2               	incf	getLoad_AD@j,f
  4394  0BA2                     l6988:	
  4395  0BA2  3001               	movlw	1
  4396  0BA3  00F6               	movwf	??_getLoad_AD
  4397  0BA4  0876               	movf	??_getLoad_AD,w
  4398  0BA5  07A5               	addwf	getLoad_AD@i,f
  4399  0BA6  3004               	movlw	4
  4400  0BA7  0225               	subwf	getLoad_AD@i,w
  4401  0BA8  1C03               	skipc
  4402  0BA9  2B83               	goto	l6980
  4403  0BAA                     l6992:	
  4404                           
  4405                           ;OverLoad_B1.c: 26: }
  4406                           ;OverLoad_B1.c: 27: }
  4407                           ;OverLoad_B1.c: 28: if (j == 0) {
  4408  0BAA  08A2               	movf	getLoad_AD@j,f
  4409  0BAB  1D03               	skipz
  4410  0BAC  0008               	return
  4411                           
  4412                           ;OverLoad_B1.c: 29: for (i = 0; i < 4; i++) {
  4413  0BAD  01A5               	clrf	getLoad_AD@i
  4414  0BAE                     L1:	
  4415  0BAE  3004               	movlw	4
  4416  0BAF  0225               	subwf	getLoad_AD@i,w
  4417  0BB0  1803               	btfsc	3,0
  4418  0BB1  0008               	return
  4419                           
  4420                           ;OverLoad_B1.c: 30: if (Load.AL[i] > ADRES && k == 0) {
  4421  0BB2  3525               	lslf	getLoad_AD@i,w
  4422  0BB3  3E3A               	addlw	(_Load+21)& (0+255)
  4423  0BB4  0086               	movwf	6
  4424  0BB5  3001               	movlw	1	; select bank2/3
  4425  0BB6  0087               	movwf	7
  4426  0BB7  3F40               	moviw [0]fsr1
  4427  0BB8  00F6               	movwf	??_getLoad_AD
  4428  0BB9  3F41               	moviw [1]fsr1
  4429  0BBA  00F7               	movwf	??_getLoad_AD+1
  4430  0BBB  0877               	movf	??_getLoad_AD+1,w
  4431  0BBC  0224               	subwf	getLoad_AD@ADRES+1,w
  4432  0BBD  1D03               	skipz
  4433  0BBE  2BC1               	goto	u7995
  4434  0BBF  0876               	movf	??_getLoad_AD,w
  4435  0BC0  0223               	subwf	getLoad_AD@ADRES,w
  4436  0BC1                     u7995:	
  4437  0BC1  1803               	skipnc
  4438  0BC2  2BD1               	goto	l7008
  4439  0BC3  08A1               	movf	getLoad_AD@k,f
  4440  0BC4  1D03               	skipz
  4441  0BC5  2BD1               	goto	l7008
  4442                           
  4443                           ;OverLoad_B1.c: 31: Load.AL[i] = ADRES;
  4444  0BC6  3525               	lslf	getLoad_AD@i,w
  4445  0BC7  3E3A               	addlw	(_Load+21)& (0+255)
  4446  0BC8  0086               	movwf	6
  4447  0BC9  3001               	movlw	1	; select bank2/3
  4448  0BCA  0087               	movwf	7
  4449  0BCB  0823               	movf	getLoad_AD@ADRES,w
  4450  0BCC  3FC0               	movwi [0]fsr1
  4451  0BCD  0824               	movf	getLoad_AD@ADRES+1,w
  4452  0BCE  3FC1               	movwi [1]fsr1
  4453                           
  4454                           ;OverLoad_B1.c: 32: k = 1;
  4455  0BCF  01A1               	clrf	getLoad_AD@k
  4456  0BD0  0AA1               	incf	getLoad_AD@k,f
  4457  0BD1                     l7008:	
  4458  0BD1  3001               	movlw	1
  4459  0BD2  00F6               	movwf	??_getLoad_AD
  4460  0BD3  0876               	movf	??_getLoad_AD,w
  4461  0BD4  07A5               	addwf	getLoad_AD@i,f
  4462  0BD5  2BAE               	goto	L1
  4463  0BD6                     __end_of_getLoad_AD:	
  4464                           
  4465                           	psect	text5
  4466  11E6                     __ptext5:	
  4467 ;; *************** function _getAD *****************
  4468 ;; Defined at:
  4469 ;;		line 463 in file "../src/MCU_B1.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  adcon0          1    wreg     unsigned char 
  4472 ;;  adcon1          1    2[COMMON] unsigned char 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  adcon0          1    5[COMMON] unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  2    2[COMMON] int 
  4477 ;; Registers used:
  4478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;Total ram usage:        4 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    4
  4491 ;; This function calls:
  4492 ;;		_Timeout_Counter
  4493 ;;		_set_TimeoutCleared
  4494 ;; This function is called by:
  4495 ;;		_getLoad_AD
  4496 ;;		_getTemp_AD
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _getAD
  4502  11E6                     _getAD:	
  4503                           
  4504                           ;incstack = 0
  4505                           ; Regs used in _getAD: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4506                           ;getAD@adcon0 stored from wreg
  4507  11E6  00F5               	movwf	getAD@adcon0
  4508                           
  4509                           ;MCU_B1.c: 464: ADCON0 = adcon0;
  4510  11E7  0875               	movf	getAD@adcon0,w
  4511  11E8  0021               	movlb	1	; select bank1
  4512  11E9  009D               	movwf	29	;volatile
  4513                           
  4514                           ;MCU_B1.c: 465: ADCON1 = adcon1;
  4515  11EA  0872               	movf	getAD@adcon1,w
  4516  11EB  009E               	movwf	30	;volatile
  4517                           
  4518                           ;MCU_B1.c: 466: GO_nDONE = 1;
  4519  11EC  149D               	bsf	29,1	;volatile
  4520                           
  4521                           ;MCU_B1.c: 467: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  4522  11ED  29F1               	goto	l6544
  4523  11EE                     l6542:	
  4524                           
  4525                           ;MCU_B1.c: 468: Timeout_Counter();
  4526  11EE  3191  214A  3191   	fcall	_Timeout_Counter
  4527  11F1                     l6544:	
  4528  11F1  0021               	movlb	1	; select bank1
  4529  11F2  1C9D               	btfss	29,1	;volatile
  4530  11F3  29F6               	goto	l6548
  4531  11F4  1D4A               	btfss	(_myMain^(0+128)+10),2
  4532  11F5  29EE               	goto	l6542
  4533  11F6                     l6548:	
  4534                           
  4535                           ;MCU_B1.c: 469: };
  4536                           ;MCU_B1.c: 470: set_TimeoutCleared();
  4537  11F6  319E  26FE         	fcall	_set_TimeoutCleared
  4538                           
  4539                           ;MCU_B1.c: 471: return ((ADRESH*256)+ADRESL);
  4540  11F8  0021               	movlb	1	; select bank1
  4541  11F9  081C               	movf	28,w	;volatile
  4542  11FA  01F3               	clrf	?_getAD+1
  4543  11FB  07F3               	addwf	?_getAD+1,f
  4544  11FC  081B               	movf	27,w	;volatile
  4545  11FD  01F2               	clrf	?_getAD
  4546  11FE  07F2               	addwf	?_getAD,f
  4547  11FF  0008               	return
  4548  1200                     __end_of_getAD:	
  4549                           
  4550                           	psect	text6
  4551  107A                     __ptext6:	
  4552 ;; *************** function _WDT_Main *****************
  4553 ;; Defined at:
  4554 ;;		line 1121 in file "../src/MCU_B1.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;		None               void
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;Total ram usage:        1 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    4
  4575 ;; This function calls:
  4576 ;;		_WDT_Clearing
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           
  4583                           ;psect for function _WDT_Main
  4584  107A                     _WDT_Main:	
  4585                           
  4586                           ;MCU_B1.c: 1122: if (WDT.Enable == 1) {
  4587                           
  4588                           ;incstack = 0
  4589                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4590  107A  0021               	movlb	1	; select bank1
  4591  107B  1C5C               	btfss	_WDT^(0+128),0
  4592  107C  0008               	return
  4593                           
  4594                           ;MCU_B1.c: 1123: if (WDT.Timer-- > 0) {
  4595  107D  3001               	movlw	1
  4596  107E  02DD               	subwf	(_WDT^(0+128)+1),f
  4597  107F  085D               	movf	(_WDT^(0+128)+1),w
  4598  1080  3AFF               	xorlw	255
  4599  1081  1903               	skipnz
  4600  1082  0008               	return
  4601                           
  4602                           ;MCU_B1.c: 1124: WDT.Timer = 100;
  4603  1083  3064               	movlw	100
  4604  1084  00F2               	movwf	??_WDT_Main
  4605  1085  0872               	movf	??_WDT_Main,w
  4606  1086  00DD               	movwf	(_WDT^(0+128)+1)
  4607                           
  4608                           ;MCU_B1.c: 1125: WDT_Clearing();
  4609  1087  3180  2002         	fcall	_WDT_Clearing
  4610  1089  0008               	return
  4611  108A                     __end_of_WDT_Main:	
  4612                           
  4613                           	psect	text7
  4614  0002                     __ptext7:	
  4615 ;; *************** function _WDT_Clearing *****************
  4616 ;; Defined at:
  4617 ;;		line 1131 in file "../src/MCU_B1.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		None
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    3
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_WDT_Main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _WDT_Clearing
  4647  0002                     _WDT_Clearing:	
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _WDT_Clearing: []
  4651  0002  0064               	clrwdt	;# 
  4652  0003  0008               	return
  4653  0004                     __end_of_WDT_Clearing:	
  4654                           
  4655                           	psect	text8
  4656  1EF2                     __ptext8:	
  4657 ;; *************** function _Temp_Main *****************
  4658 ;; Defined at:
  4659 ;;		line 65 in file "../src/OverTemperature_B1.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;		None               void
  4666 ;; Registers used:
  4667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    6
  4680 ;; This function calls:
  4681 ;;		_setTemp_Main
  4682 ;; This function is called by:
  4683 ;;		_main
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _Temp_Main
  4689  1EF2                     _Temp_Main:	
  4690                           
  4691                           ;OverTemperature_B1.c: 67: setTemp_Main();
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _Temp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4695  1EF2  3185  250E         	fcall	_setTemp_Main
  4696  1EF4  0008               	return
  4697  1EF5                     __end_of_Temp_Main:	
  4698                           
  4699                           	psect	text9
  4700  050E                     __ptext9:	
  4701 ;; *************** function _setTemp_Main *****************
  4702 ;; Defined at:
  4703 ;;		line 72 in file "../src/OverTemperature_B1.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  AD              2   69[BANK0 ] int 
  4708 ;;  DangerValue     2   67[BANK0 ] unsigned int 
  4709 ;;  SafeValue       2   65[BANK0 ] unsigned int 
  4710 ;;  TempGO          1   64[BANK0 ] unsigned char 
  4711 ;;  error           1   63[BANK0 ] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;		None               void
  4714 ;; Registers used:
  4715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;Total ram usage:       10 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    5
  4728 ;; This function calls:
  4729 ;;		___lwdiv
  4730 ;;		_getMain_All_Error_Status
  4731 ;;		_getMain_All_LightsStatus
  4732 ;;		_setBuz
  4733 ;;		_setOverTemp_ADV_Restore
  4734 ;;		_setProductData
  4735 ;; This function is called by:
  4736 ;;		_Temp_Main
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           
  4741                           ;psect for function _setTemp_Main
  4742  050E                     _setTemp_Main:	
  4743                           
  4744                           ;OverTemperature_B1.c: 73: char error = getMain_All_Error_Status(0);
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _setTemp_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4748  050E  3000               	movlw	0
  4749  050F  3193  23BF  3185   	fcall	_getMain_All_Error_Status
  4750  0512  0020               	movlb	0	; select bank0
  4751  0513  00DD               	movwf	??_setTemp_Main
  4752  0514  085D               	movf	??_setTemp_Main,w
  4753  0515  00DF               	movwf	setTemp_Main@error
  4754                           
  4755                           ;OverTemperature_B1.c: 74: ADtype SafeValue = 0, DangerValue = 0;
  4756  0516  01E1               	clrf	setTemp_Main@SafeValue
  4757  0517  01E2               	clrf	setTemp_Main@SafeValue+1
  4758  0518  01E3               	clrf	setTemp_Main@DangerValue
  4759  0519  01E4               	clrf	setTemp_Main@DangerValue+1
  4760                           
  4761                           ;OverTemperature_B1.c: 75: int AD = 0;
  4762  051A  01E5               	clrf	setTemp_Main@AD
  4763  051B  01E6               	clrf	setTemp_Main@AD+1
  4764                           
  4765                           ;OverTemperature_B1.c: 76: char TempGO = getMain_All_LightsStatus();
  4766  051C  3190  202E  3185   	fcall	_getMain_All_LightsStatus
  4767  051F  0020               	movlb	0	; select bank0
  4768  0520  00DD               	movwf	??_setTemp_Main
  4769  0521  085D               	movf	??_setTemp_Main,w
  4770  0522  00E0               	movwf	setTemp_Main@TempGO
  4771                           
  4772                           ;OverTemperature_B1.c: 78: if (Temp.Enable == 1) {
  4773  0523  0021               	movlb	1	; select bank1
  4774  0524  1C61               	btfss	_Temp^(0+128),0
  4775  0525  2DDB               	goto	l1419
  4776                           
  4777                           ;OverTemperature_B1.c: 86: if (Temp.ADtoGO == 0) {
  4778  0526  1961               	btfsc	_Temp^(0+128),2
  4779  0527  2D45               	goto	l8146
  4780                           
  4781                           ;OverTemperature_B1.c: 87: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  4782  0528  0020               	movlb	0	; select bank0
  4783  0529  0860               	movf	setTemp_Main@TempGO,w
  4784  052A  3A01               	xorlw	1
  4785  052B  1D03               	skipz
  4786  052C  2D30               	goto	l1425
  4787  052D  0021               	movlb	1	; select bank1
  4788  052E  1CE1               	btfss	_Temp^(0+128),1
  4789  052F  2D33               	goto	l8138
  4790  0530                     l1425:	
  4791  0530  0021               	movlb	1	; select bank1
  4792  0531  1CE1               	btfss	_Temp^(0+128),1
  4793  0532  2D42               	goto	l8144
  4794  0533                     l8138:	
  4795                           
  4796                           ;OverTemperature_B1.c: 88: Temp.Time++;
  4797  0533  3001               	movlw	1
  4798  0534  07E2               	addwf	(_Temp^(0+128)+1),f
  4799  0535  3000               	movlw	0
  4800  0536  3DE3               	addwfc	((_Temp+1)^(0+128)+1),f
  4801                           
  4802                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (5000 / 20)) {
  4803  0537  3000               	movlw	0
  4804  0538  0263               	subwf	((_Temp+1)^(0+128)+1),w
  4805  0539  30FA               	movlw	250
  4806  053A  1903               	skipnz
  4807  053B  0262               	subwf	(_Temp^(0+128)+1),w
  4808  053C  1C03               	skipc
  4809  053D  0008               	return
  4810                           
  4811                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  4812  053E  01E2               	clrf	(_Temp^(0+128)+1)
  4813  053F  01E3               	clrf	((_Temp+1)^(0+128)+1)
  4814                           
  4815                           ;OverTemperature_B1.c: 91: Temp.ADtoGO = 1;
  4816  0540  1561               	bsf	_Temp^(0+128),2
  4817                           
  4818                           ;OverTemperature_B1.c: 92: }
  4819                           ;OverTemperature_B1.c: 93: } else {
  4820  0541  0008               	return
  4821  0542                     l8144:	
  4822                           
  4823                           ;OverTemperature_B1.c: 94: Temp.Time = 0;
  4824  0542  01E2               	clrf	(_Temp^(0+128)+1)
  4825  0543  01E3               	clrf	((_Temp+1)^(0+128)+1)
  4826                           
  4827                           ;OverTemperature_B1.c: 95: }
  4828                           ;OverTemperature_B1.c: 96: } else {
  4829  0544  0008               	return
  4830  0545                     l8146:	
  4831                           
  4832                           ;OverTemperature_B1.c: 97: Temp.Time++;
  4833  0545  3001               	movlw	1
  4834  0546  07E2               	addwf	(_Temp^(0+128)+1),f
  4835  0547  3000               	movlw	0
  4836  0548  3DE3               	addwfc	((_Temp+1)^(0+128)+1),f
  4837                           
  4838                           ;OverTemperature_B1.c: 98: if (Temp.Time >= (100 / 20)) {
  4839  0549  3000               	movlw	0
  4840  054A  0263               	subwf	((_Temp+1)^(0+128)+1),w
  4841  054B  3005               	movlw	5
  4842  054C  1903               	skipnz
  4843  054D  0262               	subwf	(_Temp^(0+128)+1),w
  4844  054E  1C03               	skipc
  4845  054F  0008               	return
  4846                           
  4847                           ;OverTemperature_B1.c: 99: Temp.Time = 0;
  4848  0550  01E2               	clrf	(_Temp^(0+128)+1)
  4849  0551  01E3               	clrf	((_Temp+1)^(0+128)+1)
  4850                           
  4851                           ;OverTemperature_B1.c: 104: AD = (Temp.ADV[1] + Temp.ADV[2] + Temp.ADV[3]) / 3;
  4852  0552  3003               	movlw	3
  4853  0553  00F2               	movwf	___lwdiv@divisor
  4854  0554  3000               	movlw	0
  4855  0555  00F3               	movwf	___lwdiv@divisor+1
  4856  0556  300A               	movlw	10
  4857  0557  3EE1               	addlw	_Temp& (0+255)
  4858  0558  0086               	movwf	6
  4859  0559  0187               	clrf	7
  4860  055A  3008               	movlw	8
  4861  055B  3EE1               	addlw	_Temp& (0+255)
  4862  055C  0084               	movwf	4
  4863  055D  0185               	clrf	5
  4864  055E  3F00               	moviw [0]fsr0
  4865  055F  0767               	addwf	(_Temp^(0+128)+6),w
  4866  0560  0020               	movlb	0	; select bank0
  4867  0561  00DD               	movwf	??_setTemp_Main
  4868  0562  3F01               	moviw [1]fsr0
  4869  0563  0021               	movlb	1	; select bank1
  4870  0564  3D68               	addwfc	((_Temp+1)^(0+128)+6),w
  4871  0565  0020               	movlb	0	; select bank0
  4872  0566  00DE               	movwf	??_setTemp_Main+1
  4873  0567  3F40               	moviw [0]fsr1
  4874  0568  075D               	addwf	??_setTemp_Main,w
  4875  0569  00F4               	movwf	___lwdiv@dividend
  4876  056A  3F41               	moviw [1]fsr1
  4877  056B  3D5E               	addwfc	??_setTemp_Main+1,w
  4878  056C  00F5               	movwf	___lwdiv@dividend+1
  4879  056D  3194  24AC  3185   	fcall	___lwdiv
  4880  0570  0873               	movf	?___lwdiv+1,w
  4881  0571  0020               	movlb	0	; select bank0
  4882  0572  01E6               	clrf	setTemp_Main@AD+1
  4883  0573  07E6               	addwf	setTemp_Main@AD+1,f
  4884  0574  0872               	movf	?___lwdiv,w
  4885  0575  01E5               	clrf	setTemp_Main@AD
  4886  0576  07E5               	addwf	setTemp_Main@AD,f
  4887                           
  4888                           ;OverTemperature_B1.c: 105: setOverTemp_ADV_Restore();
  4889  0577  3187  27E7  3185   	fcall	_setOverTemp_ADV_Restore
  4890                           
  4891                           ;OverTemperature_B1.c: 106: if (AD > 0) {
  4892  057A  0020               	movlb	0	; select bank0
  4893  057B  0866               	movf	setTemp_Main@AD+1,w
  4894  057C  3A80               	xorlw	128
  4895  057D  00DD               	movwf	??_setTemp_Main
  4896  057E  3080               	movlw	128
  4897  057F  025D               	subwf	??_setTemp_Main,w
  4898  0580  1D03               	skipz
  4899  0581  2D84               	goto	u9785
  4900  0582  3001               	movlw	1
  4901  0583  0265               	subwf	setTemp_Main@AD,w
  4902  0584                     u9785:	
  4903  0584  1C03               	skipc
  4904  0585  0008               	return
  4905                           
  4906                           ;OverTemperature_B1.c: 107: Temp.ADtoGO = 0;
  4907  0586  0021               	movlb	1	; select bank1
  4908  0587  1161               	bcf	_Temp^(0+128),2
  4909                           
  4910                           ;OverTemperature_B1.c: 123: SafeValue = 420;
  4911  0588  30A4               	movlw	164
  4912  0589  0020               	movlb	0	; select bank0
  4913  058A  00E1               	movwf	setTemp_Main@SafeValue
  4914  058B  3001               	movlw	1
  4915  058C  00E2               	movwf	setTemp_Main@SafeValue+1
  4916                           
  4917                           ;OverTemperature_B1.c: 124: DangerValue = 365;
  4918  058D  306D               	movlw	109
  4919  058E  00E3               	movwf	setTemp_Main@DangerValue
  4920  058F  3001               	movlw	1
  4921  0590  00E4               	movwf	setTemp_Main@DangerValue+1
  4922                           
  4923                           ;OverTemperature_B1.c: 130: if (Temp.ERROR == 1) {
  4924  0591  0021               	movlb	1	; select bank1
  4925  0592  1CE1               	btfss	_Temp^(0+128),1
  4926  0593  2DB2               	goto	l8176
  4927                           
  4928                           ;OverTemperature_B1.c: 131: if (AD >= SafeValue) {
  4929  0594  0020               	movlb	0	; select bank0
  4930  0595  0862               	movf	setTemp_Main@SafeValue+1,w
  4931  0596  0266               	subwf	setTemp_Main@AD+1,w
  4932  0597  1D03               	skipz
  4933  0598  2D9B               	goto	u9805
  4934  0599  0861               	movf	setTemp_Main@SafeValue,w
  4935  059A  0265               	subwf	setTemp_Main@AD,w
  4936  059B                     u9805:	
  4937  059B  1C03               	skipc
  4938  059C  2DC7               	goto	l8186
  4939                           
  4940                           ;OverTemperature_B1.c: 132: Temp.Count++;
  4941  059D  3001               	movlw	1
  4942  059E  00DD               	movwf	??_setTemp_Main
  4943  059F  085D               	movf	??_setTemp_Main,w
  4944  05A0  0021               	movlb	1	; select bank1
  4945  05A1  07E4               	addwf	(_Temp^(0+128)+3),f
  4946                           
  4947                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  4948  05A2  3003               	movlw	3
  4949  05A3  0264               	subwf	(_Temp^(0+128)+3),w
  4950  05A4  1C03               	skipc
  4951  05A5  2DC9               	goto	l8188
  4952                           
  4953                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  4954  05A6  01E4               	clrf	(_Temp^(0+128)+3)
  4955                           
  4956                           ;OverTemperature_B1.c: 135: Temp.ERROR = 0;
  4957  05A7  10E1               	bcf	_Temp^(0+128),1
  4958                           
  4959                           ;OverTemperature_B1.c: 136: setBuz(2, 100);
  4960  05A8  3064               	movlw	100
  4961  05A9  0020               	movlb	0	; select bank0
  4962  05AA  00A4               	movwf	setBuz@time
  4963  05AB  3000               	movlw	0
  4964  05AC  00A5               	movwf	setBuz@time+1
  4965  05AD  3002               	movlw	2
  4966  05AE  3197  2759  3185   	fcall	_setBuz
  4967                           
  4968                           ;OverTemperature_B1.c: 137: }
  4969                           ;OverTemperature_B1.c: 138: } else {
  4970  05B1  2DC9               	goto	l8188
  4971  05B2                     l8176:	
  4972                           ;OverTemperature_B1.c: 140: }
  4973                           ;OverTemperature_B1.c: 141: } else {
  4974                           
  4975                           ;OverTemperature_B1.c: 139: Temp.Count = 0;
  4976                           
  4977                           
  4978                           ;OverTemperature_B1.c: 142: if (AD <= DangerValue) {
  4979  05B2  0020               	movlb	0	; select bank0
  4980  05B3  0866               	movf	setTemp_Main@AD+1,w
  4981  05B4  0264               	subwf	setTemp_Main@DangerValue+1,w
  4982  05B5  1D03               	skipz
  4983  05B6  2DB9               	goto	u9825
  4984  05B7  0865               	movf	setTemp_Main@AD,w
  4985  05B8  0263               	subwf	setTemp_Main@DangerValue,w
  4986  05B9                     u9825:	
  4987  05B9  1C03               	skipc
  4988  05BA  2DC7               	goto	l8186
  4989                           
  4990                           ;OverTemperature_B1.c: 143: Temp.Count++;
  4991  05BB  3001               	movlw	1
  4992  05BC  00DD               	movwf	??_setTemp_Main
  4993  05BD  085D               	movf	??_setTemp_Main,w
  4994  05BE  0021               	movlb	1	; select bank1
  4995  05BF  07E4               	addwf	(_Temp^(0+128)+3),f
  4996                           
  4997                           ;OverTemperature_B1.c: 144: if (Temp.Count >= 3) {
  4998  05C0  3003               	movlw	3
  4999  05C1  0264               	subwf	(_Temp^(0+128)+3),w
  5000  05C2  1C03               	skipc
  5001  05C3  2DC9               	goto	l8188
  5002                           
  5003                           ;OverTemperature_B1.c: 145: Temp.Count = 0;
  5004  05C4  01E4               	clrf	(_Temp^(0+128)+3)
  5005                           
  5006                           ;OverTemperature_B1.c: 146: Temp.ERROR = 1;
  5007  05C5  14E1               	bsf	_Temp^(0+128),1
  5008                           
  5009                           ;OverTemperature_B1.c: 147: }
  5010                           ;OverTemperature_B1.c: 148: } else {
  5011  05C6  2DC9               	goto	l8188
  5012  05C7                     l8186:	
  5013                           
  5014                           ;OverTemperature_B1.c: 149: Temp.Count = 0;
  5015  05C7  0021               	movlb	1	; select bank1
  5016  05C8  01E4               	clrf	(_Temp^(0+128)+3)
  5017  05C9                     l8188:	
  5018                           
  5019                           ;OverTemperature_B1.c: 150: }
  5020                           ;OverTemperature_B1.c: 151: }
  5021                           ;OverTemperature_B1.c: 152: setProductData(24, AD >> 8);
  5022  05C9  0020               	movlb	0	; select bank0
  5023  05CA  0866               	movf	setTemp_Main@AD+1,w
  5024  05CB  00DD               	movwf	??_setTemp_Main
  5025  05CC  085D               	movf	??_setTemp_Main,w
  5026  05CD  00DA               	movwf	setProductData@value
  5027  05CE  3018               	movlw	24
  5028  05CF  319F  27A7  3185   	fcall	_setProductData
  5029                           
  5030                           ;OverTemperature_B1.c: 153: setProductData(25, AD);
  5031  05D2  0020               	movlb	0	; select bank0
  5032  05D3  0865               	movf	setTemp_Main@AD,w
  5033  05D4  00DD               	movwf	??_setTemp_Main
  5034  05D5  085D               	movf	??_setTemp_Main,w
  5035  05D6  00DA               	movwf	setProductData@value
  5036  05D7  3019               	movlw	25
  5037  05D8  319F  27A7         	fcall	_setProductData
  5038                           
  5039                           ;OverTemperature_B1.c: 169: }
  5040                           ;OverTemperature_B1.c: 170: }
  5041                           ;OverTemperature_B1.c: 171: }
  5042                           ;OverTemperature_B1.c: 174: } else {
  5043  05DA  0008               	return
  5044  05DB                     l1419:	
  5045                           
  5046                           ;OverTemperature_B1.c: 175: if (myMain.PowerON == 1) {
  5047  05DB  1C40               	btfss	_myMain^(0+128),0
  5048  05DC  0008               	return
  5049                           
  5050                           ;OverTemperature_B1.c: 176: Temp.Enable = 1;
  5051  05DD  1461               	bsf	_Temp^(0+128),0
  5052  05DE  0008               	return
  5053  05DF                     __end_of_setTemp_Main:	
  5054                           
  5055                           	psect	text10
  5056  07E7                     __ptext10:	
  5057 ;; *************** function _setOverTemp_ADV_Restore *****************
  5058 ;; Defined at:
  5059 ;;		line 182 in file "../src/OverTemperature_B1.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  i               2    3[COMMON] int 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        3 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    3
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_setTemp_Main
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _setOverTemp_ADV_Restore
  5089  07E7                     _setOverTemp_ADV_Restore:	
  5090                           
  5091                           ;OverTemperature_B1.c: 183: for (int i = 0; i < 5; i++) {
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _setOverTemp_ADV_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  5095  07E7  01F3               	clrf	setOverTemp_ADV_Restore@i
  5096  07E8  01F4               	clrf	setOverTemp_ADV_Restore@i+1
  5097  07E9                     L2:	
  5098  07E9  0874               	movf	setOverTemp_ADV_Restore@i+1,w
  5099  07EA  3A80               	xorlw	128
  5100  07EB  00F2               	movwf	??_setOverTemp_ADV_Restore
  5101  07EC  3080               	movlw	128
  5102  07ED  0272               	subwf	??_setOverTemp_ADV_Restore,w
  5103  07EE  1D03               	skipz
  5104  07EF  2FF2               	goto	u6195
  5105  07F0  3005               	movlw	5
  5106  07F1  0273               	subwf	setOverTemp_ADV_Restore@i,w
  5107  07F2                     u6195:	
  5108  07F2  1803               	btfsc	3,0
  5109  07F3  0008               	return
  5110                           
  5111                           ;OverTemperature_B1.c: 184: Temp.ADV[i] = 0;
  5112  07F4  3573               	lslf	setOverTemp_ADV_Restore@i,w
  5113  07F5  3EE5               	addlw	(_Temp+4)& (0+255)
  5114  07F6  0086               	movwf	6
  5115  07F7  0187               	clrf	7
  5116  07F8  3000               	movlw	0
  5117  07F9  3FC0               	movwi [0]fsr1
  5118  07FA  3FC1               	movwi [1]fsr1
  5119  07FB  3001               	movlw	1
  5120  07FC  07F3               	addwf	setOverTemp_ADV_Restore@i,f
  5121  07FD  3000               	movlw	0
  5122  07FE  3DF4               	addwfc	setOverTemp_ADV_Restore@i+1,f
  5123  07FF  2FE9               	goto	L2
  5124  0800                     __end_of_setOverTemp_ADV_Restore:	
  5125                           
  5126                           	psect	text11
  5127  1EEF                     __ptext11:	
  5128 ;; *************** function _Temp_Initialization *****************
  5129 ;; Defined at:
  5130 ;;		line 8 in file "../src/OverTemperature_B1.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;		None               void
  5137 ;; Registers used:
  5138 ;;		status,2, status,0, pclath, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;Total ram usage:        0 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    4
  5151 ;; This function calls:
  5152 ;;		_setTemp_Initialization
  5153 ;; This function is called by:
  5154 ;;		_main
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _Temp_Initialization
  5160  1EEF                     _Temp_Initialization:	
  5161                           
  5162                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  5166  1EEF  3188  2000         	fcall	_setTemp_Initialization
  5167  1EF1  0008               	return
  5168  1EF2                     __end_of_Temp_Initialization:	
  5169                           
  5170                           	psect	text12
  5171  0800                     __ptext12:	
  5172 ;; *************** function _setTemp_Initialization *****************
  5173 ;; Defined at:
  5174 ;;		line 60 in file "../src/OverTemperature_B1.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;		None               void
  5181 ;; Registers used:
  5182 ;;		None
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;Total ram usage:        0 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    3
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_Temp_Initialization
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           
  5203                           ;psect for function _setTemp_Initialization
  5204  0800                     _setTemp_Initialization:	
  5205                           
  5206                           ;incstack = 0
  5207                           ; Regs used in _setTemp_Initialization: []
  5208  0800  0008               	return
  5209  0801                     __end_of_setTemp_Initialization:	
  5210                           
  5211                           	psect	text13
  5212  1F90                     __ptext13:	
  5213 ;; *************** function _Switch_Main *****************
  5214 ;; Defined at:
  5215 ;;		line 76 in file "../src/Switch_B1.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    7
  5236 ;; This function calls:
  5237 ;;		_TouchPower
  5238 ;;		_setSw_Main
  5239 ;; This function is called by:
  5240 ;;		_main
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           
  5245                           ;psect for function _Switch_Main
  5246  1F90                     _Switch_Main:	
  5247                           
  5248                           ;Switch_B1.c: 79: setSw_Main(1);
  5249                           
  5250                           ;incstack = 0
  5251                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5252  1F90  3001               	movlw	1
  5253  1F91  3181  21ED  319F   	fcall	_setSw_Main
  5254                           
  5255                           ;Switch_B1.c: 83: setSw_Main(2);
  5256  1F94  3002               	movlw	2
  5257  1F95  3181  21ED  319F   	fcall	_setSw_Main
  5258                           
  5259                           ;Switch_B1.c: 91: TouchPower();
  5260  1F98  3191  215F         	fcall	_TouchPower
  5261  1F9A  0008               	return
  5262  1F9B                     __end_of_Switch_Main:	
  5263                           
  5264                           	psect	text14
  5265  01ED                     __ptext14:	
  5266 ;; *************** function _setSw_Main *****************
  5267 ;; Defined at:
  5268 ;;		line 117 in file "../src/Switch_B1.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  sw              1    wreg     unsigned char 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  sw              1   13[BANK0 ] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;Total ram usage:        3 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    6
  5289 ;; This function calls:
  5290 ;;		_SwPointSelect
  5291 ;;		_getMain_All_Error_Status
  5292 ;;		_getSw_KeyStatus
  5293 ;;		_setDimmerLights_DimmingOn
  5294 ;;		_setDimmerLights_SwOff
  5295 ;;		_setDimmerLights_SwOn
  5296 ;; This function is called by:
  5297 ;;		_Switch_Main
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _setSw_Main
  5303  01ED                     _setSw_Main:	
  5304                           
  5305                           ;incstack = 0
  5306                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5307                           ;setSw_Main@sw stored from wreg
  5308  01ED  0020               	movlb	0	; select bank0
  5309  01EE  00AD               	movwf	setSw_Main@sw
  5310                           
  5311                           ;Switch_B1.c: 118: SwPointSelect(sw);
  5312  01EF  082D               	movf	setSw_Main@sw,w
  5313  01F0  3191  2174  3181   	fcall	_SwPointSelect
  5314                           
  5315                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  5316  01F3  0020               	movlb	0	; select bank0
  5317  01F4  086C               	movf	_Sw,w
  5318  01F5  0086               	movwf	6
  5319  01F6  3001               	movlw	1	; select bank2/3
  5320  01F7  0087               	movwf	7
  5321  01F8  1C01               	btfss	1,0
  5322  01F9  2B3C               	goto	l1876
  5323                           
  5324                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  5325  01FA  3000               	movlw	0
  5326  01FB  3193  23BF  3181   	fcall	_getMain_All_Error_Status
  5327  01FE  3800               	iorlw	0
  5328  01FF  1D03               	skipz
  5329  0200  2A1C               	goto	l8204
  5330                           
  5331                           ;Switch_B1.c: 122: Sw->Detect = 0;
  5332  0201  0020               	movlb	0	; select bank0
  5333  0202  0A6C               	incf	_Sw,w
  5334  0203  0086               	movwf	6
  5335  0204  3001               	movlw	1	; select bank2/3
  5336  0205  0087               	movwf	7
  5337  0206  1081               	bcf	1,1
  5338                           
  5339                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  5340  0207  082D               	movf	setSw_Main@sw,w
  5341  0208  3192  2253  3181   	fcall	_getSw_KeyStatus
  5342  020B  3A01               	xorlw	1
  5343  020C  3000               	movlw	0
  5344  020D  1903               	skipnz
  5345  020E  3001               	movlw	1
  5346  020F  0020               	movlb	0	; select bank0
  5347  0210  00AB               	movwf	??_setSw_Main
  5348  0211  086C               	movf	_Sw,w
  5349  0212  0086               	movwf	6
  5350  0213  3001               	movlw	1	; select bank2/3
  5351  0214  0087               	movwf	7
  5352  0215  0DAB               	rlf	??_setSw_Main,f
  5353  0216  0801               	movf	1,w
  5354  0217  062B               	xorwf	??_setSw_Main,w
  5355  0218  39FD               	andlw	-3
  5356  0219  062B               	xorwf	??_setSw_Main,w
  5357  021A  0081               	movwf	1
  5358                           
  5359                           ;Switch_B1.c: 124: } else {
  5360  021B  2A32               	goto	l1878
  5361  021C                     l8204:	
  5362                           
  5363                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  5364  021C  0020               	movlb	0	; select bank0
  5365  021D  0A6C               	incf	_Sw,w
  5366  021E  0086               	movwf	6
  5367  021F  3001               	movlw	1	; select bank2/3
  5368  0220  0087               	movwf	7
  5369  0221  1881               	btfsc	1,1
  5370  0222  2A32               	goto	l1878
  5371                           
  5372                           ;Switch_B1.c: 126: Sw->Detect = 1;
  5373  0223  0A6C               	incf	_Sw,w
  5374  0224  0086               	movwf	6
  5375  0225  3001               	movlw	1	; select bank2/3
  5376  0226  0087               	movwf	7
  5377  0227  1481               	bsf	1,1
  5378                           
  5379                           ;Switch_B1.c: 128: Sw->Touch = 0;
  5380  0228  086C               	movf	_Sw,w
  5381  0229  0086               	movwf	6
  5382  022A  3001               	movlw	1	; select bank2/3
  5383  022B  0087               	movwf	7
  5384  022C  1081               	bcf	1,1
  5385                           
  5386                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  5387  022D  086C               	movf	_Sw,w
  5388  022E  0086               	movwf	6
  5389  022F  3001               	movlw	1	; select bank2/3
  5390  0230  0087               	movwf	7
  5391  0231  1501               	bsf	1,2
  5392  0232                     l1878:	
  5393                           
  5394                           ;Switch_B1.c: 130: }
  5395                           ;Switch_B1.c: 131: }
  5396                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  5397  0232  086C               	movf	_Sw,w
  5398  0233  0086               	movwf	6
  5399  0234  3001               	movlw	1	; select bank2/3
  5400  0235  0087               	movwf	7
  5401  0236  1C81               	btfss	1,1
  5402  0237  2AEE               	goto	l8246
  5403                           
  5404                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  5405  0238  086C               	movf	_Sw,w
  5406  0239  0086               	movwf	6
  5407  023A  3001               	movlw	1	; select bank2/3
  5408  023B  0087               	movwf	7
  5409  023C  1901               	btfsc	1,2
  5410  023D  2A5F               	goto	l8220
  5411                           
  5412                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  5413  023E  3001               	movlw	1
  5414  023F  00AB               	movwf	??_setSw_Main
  5415  0240  086C               	movf	_Sw,w
  5416  0241  3E02               	addlw	2
  5417  0242  0086               	movwf	6
  5418  0243  3001               	movlw	1	; select bank2/3
  5419  0244  0087               	movwf	7
  5420  0245  082B               	movf	??_setSw_Main,w
  5421  0246  0781               	addwf	1,f
  5422                           
  5423                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  5424  0247  086C               	movf	_Sw,w
  5425  0248  3E02               	addlw	2
  5426  0249  0086               	movwf	6
  5427  024A  3001               	movlw	1	; select bank2/3
  5428  024B  0087               	movwf	7
  5429  024C  3005               	movlw	5
  5430  024D  0201               	subwf	1,w
  5431  024E  1C03               	skipc
  5432  024F  0008               	return
  5433                           
  5434                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  5435  0250  086C               	movf	_Sw,w
  5436  0251  3E02               	addlw	2
  5437  0252  0086               	movwf	6
  5438  0253  3001               	movlw	1	; select bank2/3
  5439  0254  0087               	movwf	7
  5440  0255  0181               	clrf	1
  5441                           
  5442                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  5443  0256  086C               	movf	_Sw,w
  5444  0257  0086               	movwf	6
  5445  0258  3001               	movlw	1	; select bank2/3
  5446  0259  0087               	movwf	7
  5447  025A  1501               	bsf	1,2
  5448                           
  5449                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  5450  025B  082D               	movf	setSw_Main@sw,w
  5451  025C  318B  23D6         	fcall	_setDimmerLights_SwOn
  5452                           
  5453                           ;Switch_B1.c: 147: }
  5454                           ;Switch_B1.c: 148: } else {
  5455  025E  0008               	return
  5456  025F                     l8220:	
  5457                           
  5458                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  5459  025F  0020               	movlb	0	; select bank0
  5460  0260  086C               	movf	_Sw,w
  5461  0261  0086               	movwf	6
  5462  0262  3001               	movlw	1	; select bank2/3
  5463  0263  0087               	movwf	7
  5464  0264  1981               	btfsc	1,3
  5465  0265  2A91               	goto	l8230
  5466                           
  5467                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  5468  0266  086C               	movf	_Sw,w
  5469  0267  3E03               	addlw	3
  5470  0268  0086               	movwf	6
  5471  0269  3001               	movlw	1	; select bank2/3
  5472  026A  0087               	movwf	7
  5473  026B  3001               	movlw	1
  5474  026C  0781               	addwf	1,f
  5475  026D  3141               	addfsr 1,1
  5476  026E  1803               	skipnc
  5477  026F  0A81               	incf	1,f
  5478                           
  5479                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  5480  0270  086C               	movf	_Sw,w
  5481  0271  3E03               	addlw	3
  5482  0272  0086               	movwf	6
  5483  0273  3001               	movlw	1	; select bank2/3
  5484  0274  0087               	movwf	7
  5485  0275  3F40               	moviw [0]fsr1
  5486  0276  00AB               	movwf	??_setSw_Main
  5487  0277  3F41               	moviw [1]fsr1
  5488  0278  00AC               	movwf	??_setSw_Main+1
  5489  0279  3000               	movlw	0
  5490  027A  022C               	subwf	??_setSw_Main+1,w
  5491  027B  304B               	movlw	75
  5492  027C  1903               	skipnz
  5493  027D  022B               	subwf	??_setSw_Main,w
  5494  027E  1C03               	skipc
  5495  027F  0008               	return
  5496                           
  5497                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  5498  0280  086C               	movf	_Sw,w
  5499  0281  3E03               	addlw	3
  5500  0282  0086               	movwf	6
  5501  0283  3001               	movlw	1	; select bank2/3
  5502  0284  0087               	movwf	7
  5503  0285  3000               	movlw	0
  5504  0286  3FC0               	movwi [0]fsr1
  5505  0287  3FC1               	movwi [1]fsr1
  5506                           
  5507                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  5508  0288  086C               	movf	_Sw,w
  5509  0289  0086               	movwf	6
  5510  028A  3001               	movlw	1	; select bank2/3
  5511  028B  0087               	movwf	7
  5512  028C  1581               	bsf	1,3
  5513                           
  5514                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  5515  028D  082D               	movf	setSw_Main@sw,w
  5516  028E  3193  231C         	fcall	_setDimmerLights_DimmingOn
  5517                           
  5518                           ;Switch_B1.c: 162: }
  5519                           ;Switch_B1.c: 163: } else {
  5520  0290  0008               	return
  5521  0291                     l8230:	
  5522                           
  5523                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  5524  0291  0020               	movlb	0	; select bank0
  5525  0292  086C               	movf	_Sw,w
  5526  0293  0086               	movwf	6
  5527  0294  3001               	movlw	1	; select bank2/3
  5528  0295  0087               	movwf	7
  5529  0296  1A01               	btfsc	1,4
  5530  0297  2AC0               	goto	l8238
  5531                           
  5532                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  5533  0298  086C               	movf	_Sw,w
  5534  0299  3E05               	addlw	5
  5535  029A  0086               	movwf	6
  5536  029B  3001               	movlw	1	; select bank2/3
  5537  029C  0087               	movwf	7
  5538  029D  3001               	movlw	1
  5539  029E  0781               	addwf	1,f
  5540  029F  3141               	addfsr 1,1
  5541  02A0  1803               	skipnc
  5542  02A1  0A81               	incf	1,f
  5543                           
  5544                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  5545  02A2  086C               	movf	_Sw,w
  5546  02A3  3E05               	addlw	5
  5547  02A4  0086               	movwf	6
  5548  02A5  3001               	movlw	1	; select bank2/3
  5549  02A6  0087               	movwf	7
  5550  02A7  3F40               	moviw [0]fsr1
  5551  02A8  00AB               	movwf	??_setSw_Main
  5552  02A9  3F41               	moviw [1]fsr1
  5553  02AA  00AC               	movwf	??_setSw_Main+1
  5554  02AB  3000               	movlw	0
  5555  02AC  022C               	subwf	??_setSw_Main+1,w
  5556  02AD  304B               	movlw	75
  5557  02AE  1903               	skipnz
  5558  02AF  022B               	subwf	??_setSw_Main,w
  5559  02B0  1C03               	skipc
  5560  02B1  0008               	return
  5561                           
  5562                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  5563  02B2  086C               	movf	_Sw,w
  5564  02B3  3E05               	addlw	5
  5565  02B4  0086               	movwf	6
  5566  02B5  3001               	movlw	1	; select bank2/3
  5567  02B6  0087               	movwf	7
  5568  02B7  3000               	movlw	0
  5569  02B8  3FC0               	movwi [0]fsr1
  5570  02B9  3FC1               	movwi [1]fsr1
  5571                           
  5572                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  5573  02BA  086C               	movf	_Sw,w
  5574  02BB  0086               	movwf	6
  5575  02BC  3001               	movlw	1	; select bank2/3
  5576  02BD  0087               	movwf	7
  5577  02BE  1601               	bsf	1,4
  5578                           
  5579                           ;Switch_B1.c: 179: }
  5580                           ;Switch_B1.c: 180: } else {
  5581  02BF  0008               	return
  5582  02C0                     l8238:	
  5583                           
  5584                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  5585  02C0  086C               	movf	_Sw,w
  5586  02C1  0086               	movwf	6
  5587  02C2  3001               	movlw	1	; select bank2/3
  5588  02C3  0087               	movwf	7
  5589  02C4  1A81               	btfsc	1,5
  5590  02C5  0008               	return
  5591                           
  5592                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  5593  02C6  086C               	movf	_Sw,w
  5594  02C7  3E07               	addlw	7
  5595  02C8  0086               	movwf	6
  5596  02C9  3001               	movlw	1	; select bank2/3
  5597  02CA  0087               	movwf	7
  5598  02CB  3001               	movlw	1
  5599  02CC  0781               	addwf	1,f
  5600  02CD  3141               	addfsr 1,1
  5601  02CE  1803               	skipnc
  5602  02CF  0A81               	incf	1,f
  5603                           
  5604                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  5605  02D0  086C               	movf	_Sw,w
  5606  02D1  3E07               	addlw	7
  5607  02D2  0086               	movwf	6
  5608  02D3  3001               	movlw	1	; select bank2/3
  5609  02D4  0087               	movwf	7
  5610  02D5  3F40               	moviw [0]fsr1
  5611  02D6  00AB               	movwf	??_setSw_Main
  5612  02D7  3F41               	moviw [1]fsr1
  5613  02D8  00AC               	movwf	??_setSw_Main+1
  5614  02D9  3000               	movlw	0
  5615  02DA  022C               	subwf	??_setSw_Main+1,w
  5616  02DB  3096               	movlw	150
  5617  02DC  1903               	skipnz
  5618  02DD  022B               	subwf	??_setSw_Main,w
  5619  02DE  1C03               	skipc
  5620  02DF  0008               	return
  5621                           
  5622                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  5623  02E0  086C               	movf	_Sw,w
  5624  02E1  3E07               	addlw	7
  5625  02E2  0086               	movwf	6
  5626  02E3  3001               	movlw	1	; select bank2/3
  5627  02E4  0087               	movwf	7
  5628  02E5  3000               	movlw	0
  5629  02E6  3FC0               	movwi [0]fsr1
  5630  02E7  3FC1               	movwi [1]fsr1
  5631                           
  5632                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  5633  02E8  086C               	movf	_Sw,w
  5634  02E9  0086               	movwf	6
  5635  02EA  3001               	movlw	1	; select bank2/3
  5636  02EB  0087               	movwf	7
  5637  02EC  1681               	bsf	1,5
  5638                           
  5639                           ;Switch_B1.c: 191: }
  5640                           ;Switch_B1.c: 192: }
  5641                           ;Switch_B1.c: 193: }
  5642                           ;Switch_B1.c: 195: }
  5643                           ;Switch_B1.c: 196: }
  5644                           ;Switch_B1.c: 197: } else {
  5645  02ED  0008               	return
  5646  02EE                     l8246:	
  5647                           
  5648                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  5649  02EE  086C               	movf	_Sw,w
  5650  02EF  0086               	movwf	6
  5651  02F0  3001               	movlw	1	; select bank2/3
  5652  02F1  0087               	movwf	7
  5653  02F2  1D01               	btfss	1,2
  5654  02F3  0008               	return
  5655                           
  5656                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  5657  02F4  3001               	movlw	1
  5658  02F5  00AB               	movwf	??_setSw_Main
  5659  02F6  086C               	movf	_Sw,w
  5660  02F7  3E02               	addlw	2
  5661  02F8  0086               	movwf	6
  5662  02F9  3001               	movlw	1	; select bank2/3
  5663  02FA  0087               	movwf	7
  5664  02FB  082B               	movf	??_setSw_Main,w
  5665  02FC  0781               	addwf	1,f
  5666                           
  5667                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  5668  02FD  086C               	movf	_Sw,w
  5669  02FE  3E02               	addlw	2
  5670  02FF  0086               	movwf	6
  5671  0300  3001               	movlw	1	; select bank2/3
  5672  0301  0087               	movwf	7
  5673  0302  3005               	movlw	5
  5674  0303  0201               	subwf	1,w
  5675  0304  1C03               	skipc
  5676  0305  0008               	return
  5677                           
  5678                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  5679  0306  086C               	movf	_Sw,w
  5680  0307  3E02               	addlw	2
  5681  0308  0086               	movwf	6
  5682  0309  3001               	movlw	1	; select bank2/3
  5683  030A  0087               	movwf	7
  5684  030B  0181               	clrf	1
  5685                           
  5686                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  5687  030C  086C               	movf	_Sw,w
  5688  030D  0086               	movwf	6
  5689  030E  3001               	movlw	1	; select bank2/3
  5690  030F  0087               	movwf	7
  5691  0310  1101               	bcf	1,2
  5692                           
  5693                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  5694  0311  086C               	movf	_Sw,w
  5695  0312  3E03               	addlw	3
  5696  0313  0086               	movwf	6
  5697  0314  3001               	movlw	1	; select bank2/3
  5698  0315  0087               	movwf	7
  5699  0316  3000               	movlw	0
  5700  0317  3FC0               	movwi [0]fsr1
  5701  0318  3FC1               	movwi [1]fsr1
  5702                           
  5703                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  5704  0319  086C               	movf	_Sw,w
  5705  031A  0086               	movwf	6
  5706  031B  3001               	movlw	1	; select bank2/3
  5707  031C  0087               	movwf	7
  5708  031D  1181               	bcf	1,3
  5709                           
  5710                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  5711  031E  086C               	movf	_Sw,w
  5712  031F  0086               	movwf	6
  5713  0320  3001               	movlw	1	; select bank2/3
  5714  0321  0087               	movwf	7
  5715  0322  1201               	bcf	1,4
  5716                           
  5717                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  5718  0323  086C               	movf	_Sw,w
  5719  0324  0086               	movwf	6
  5720  0325  3001               	movlw	1	; select bank2/3
  5721  0326  0087               	movwf	7
  5722  0327  1281               	bcf	1,5
  5723                           
  5724                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  5725  0328  086C               	movf	_Sw,w
  5726  0329  3E05               	addlw	5
  5727  032A  0086               	movwf	6
  5728  032B  3001               	movlw	1	; select bank2/3
  5729  032C  0087               	movwf	7
  5730  032D  3000               	movlw	0
  5731  032E  3FC0               	movwi [0]fsr1
  5732  032F  3FC1               	movwi [1]fsr1
  5733                           
  5734                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  5735  0330  086C               	movf	_Sw,w
  5736  0331  3E07               	addlw	7
  5737  0332  0086               	movwf	6
  5738  0333  3001               	movlw	1	; select bank2/3
  5739  0334  0087               	movwf	7
  5740  0335  3000               	movlw	0
  5741  0336  3FC0               	movwi [0]fsr1
  5742  0337  3FC1               	movwi [1]fsr1
  5743                           
  5744                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  5745  0338  082D               	movf	setSw_Main@sw,w
  5746  0339  3195  25C1         	fcall	_setDimmerLights_SwOff
  5747                           
  5748                           ;Switch_B1.c: 222: }
  5749                           ;Switch_B1.c: 223: }
  5750                           ;Switch_B1.c: 224: }
  5751                           ;Switch_B1.c: 225: } else {
  5752  033B  0008               	return
  5753  033C                     l1876:	
  5754                           
  5755                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  5756  033C  0021               	movlb	1	; select bank1
  5757  033D  1C40               	btfss	_myMain^(0+128),0
  5758  033E  0008               	return
  5759                           
  5760                           ;Switch_B1.c: 227: Sw->Enable = 1;
  5761  033F  0020               	movlb	0	; select bank0
  5762  0340  086C               	movf	_Sw,w
  5763  0341  0086               	movwf	6
  5764  0342  3001               	movlw	1	; select bank2/3
  5765  0343  0087               	movwf	7
  5766  0344  1401               	bsf	1,0
  5767  0345  0008               	return
  5768  0346                     __end_of_setSw_Main:	
  5769                           
  5770                           	psect	text15
  5771  131C                     __ptext15:	
  5772 ;; *************** function _setDimmerLights_DimmingOn *****************
  5773 ;; Defined at:
  5774 ;;		line 848 in file "../src/Dimmer_B1.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;  sw              1    wreg     unsigned char 
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  sw              1    4[COMMON] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;		None               void
  5781 ;; Registers used:
  5782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;Total ram usage:        1 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    4
  5795 ;; This function calls:
  5796 ;;		_DimmerLights_SelectPointer
  5797 ;; This function is called by:
  5798 ;;		_setSw_Main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _setDimmerLights_DimmingOn
  5804  131C                     _setDimmerLights_DimmingOn:	
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  5808                           ;setDimmerLights_DimmingOn@sw stored from wreg
  5809  131C  00F4               	movwf	setDimmerLights_DimmingOn@sw
  5810                           
  5811                           ;Dimmer_B1.c: 854: DimmerLights_SelectPointer(sw);
  5812  131D  0874               	movf	setDimmerLights_DimmingOn@sw,w
  5813  131E  3191  2120  3193   	fcall	_DimmerLights_SelectPointer
  5814                           
  5815                           ;Dimmer_B1.c: 855: if (DimmerLights->Trigger == 0) {
  5816  1321  0020               	movlb	0	; select bank0
  5817  1322  086B               	movf	_DimmerLights,w
  5818  1323  0086               	movwf	6
  5819  1324  3001               	movlw	1	; select bank2/3
  5820  1325  0087               	movwf	7
  5821  1326  1881               	btfsc	1,1
  5822  1327  0008               	return
  5823                           
  5824                           ;Dimmer_B1.c: 856: if (DimmerLights->SwFlag == 1) {
  5825  1328  086B               	movf	_DimmerLights,w
  5826  1329  0086               	movwf	6
  5827  132A  3001               	movlw	1	; select bank2/3
  5828  132B  0087               	movwf	7
  5829  132C  1C01               	btfss	1,0
  5830  132D  0008               	return
  5831                           
  5832                           ;Dimmer_B1.c: 857: DimmerLights->Status = 1;
  5833  132E  0A6B               	incf	_DimmerLights,w
  5834  132F  0086               	movwf	6
  5835  1330  3001               	movlw	1	; select bank2/3
  5836  1331  0087               	movwf	7
  5837  1332  1401               	bsf	1,0
  5838                           
  5839                           ;Dimmer_B1.c: 859: DimmerLights->DimmingSwFlag = 1;
  5840  1333  086B               	movf	_DimmerLights,w
  5841  1334  0086               	movwf	6
  5842  1335  3001               	movlw	1	; select bank2/3
  5843  1336  0087               	movwf	7
  5844  1337  1581               	bsf	1,3
  5845                           
  5846                           ;Dimmer_B1.c: 860: DimmerLights->DimmingTrigger = 1;
  5847  1338  086B               	movf	_DimmerLights,w
  5848  1339  0086               	movwf	6
  5849  133A  3001               	movlw	1	; select bank2/3
  5850  133B  0087               	movwf	7
  5851  133C  1601               	bsf	1,4
  5852                           
  5853                           ;Dimmer_B1.c: 861: DimmerLights->DimmingSwitch = 1;
  5854  133D  086B               	movf	_DimmerLights,w
  5855  133E  0086               	movwf	6
  5856  133F  3001               	movlw	1	; select bank2/3
  5857  1340  0087               	movwf	7
  5858  1341  1681               	bsf	1,5
  5859  1342  0008               	return
  5860  1343                     __end_of_setDimmerLights_DimmingOn:	
  5861                           
  5862                           	psect	text16
  5863  1253                     __ptext16:	
  5864 ;; *************** function _getSw_KeyStatus *****************
  5865 ;; Defined at:
  5866 ;;		line 238 in file "../src/Switch_B1.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  sw              1    wreg     unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  sw              1    6[COMMON] unsigned char 
  5871 ;;  status          1    5[COMMON] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      unsigned char 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;Total ram usage:        5 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    3
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_setSw_Main
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function _getSw_KeyStatus
  5897  1253                     _getSw_KeyStatus:	
  5898                           
  5899                           ;incstack = 0
  5900                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5901                           ;getSw_KeyStatus@sw stored from wreg
  5902  1253  00F6               	movwf	getSw_KeyStatus@sw
  5903                           
  5904                           ;Switch_B1.c: 239: char status = 0;
  5905  1254  01F5               	clrf	getSw_KeyStatus@status
  5906                           
  5907                           ;Switch_B1.c: 266: if (sw == 1) {
  5908  1255  0876               	movf	getSw_KeyStatus@sw,w
  5909  1256  3A01               	xorlw	1
  5910  1257  1D03               	skipz
  5911  1258  2A62               	goto	l6072
  5912                           
  5913                           ;Switch_B1.c: 267: status = RA0 == 1 || RB1 == 1 ? 1 : 0;
  5914  1259  01F3               	clrf	_getSw_KeyStatus$5956
  5915  125A  0AF3               	incf	_getSw_KeyStatus$5956,f
  5916  125B  0020               	movlb	0	; select bank0
  5917  125C  1C0C               	btfss	12,0	;volatile
  5918  125D  188D               	btfsc	13,1	;volatile
  5919  125E  2A60               	goto	l6070
  5920  125F  01F3               	clrf	_getSw_KeyStatus$5956
  5921  1260                     l6070:	
  5922  1260  0873               	movf	_getSw_KeyStatus$5956,w
  5923  1261  2A6E               	goto	L3
  5924  1262                     l6072:	
  5925                           ;Switch_B1.c: 268: } else if (sw == 2) {
  5926                           
  5927  1262  0876               	movf	getSw_KeyStatus@sw,w
  5928  1263  3A02               	xorlw	2
  5929  1264  1D03               	skipz
  5930  1265  2A71               	goto	l6082
  5931                           
  5932                           ;Switch_B1.c: 269: status = RA6 == 1 || RA4 == 1 ? 1 : 0;
  5933  1266  01F4               	clrf	_getSw_KeyStatus$5957
  5934  1267  0AF4               	incf	_getSw_KeyStatus$5957,f
  5935  1268  0020               	movlb	0	; select bank0
  5936  1269  1F0C               	btfss	12,6	;volatile
  5937  126A  1A0C               	btfsc	12,4	;volatile
  5938  126B  2A6D               	goto	l6080
  5939  126C  01F4               	clrf	_getSw_KeyStatus$5957
  5940  126D                     l6080:	
  5941  126D  0874               	movf	_getSw_KeyStatus$5957,w
  5942  126E                     L3:	
  5943  126E  00F2               	movwf	??_getSw_KeyStatus
  5944  126F  0872               	movf	??_getSw_KeyStatus,w
  5945  1270  00F5               	movwf	getSw_KeyStatus@status
  5946  1271                     l6082:	
  5947                           
  5948                           ;Switch_B1.c: 270: }
  5949                           ;Switch_B1.c: 283: return status;
  5950  1271  0875               	movf	getSw_KeyStatus@status,w
  5951  1272  0008               	return
  5952  1273                     __end_of_getSw_KeyStatus:	
  5953                           
  5954                           	psect	text17
  5955  1174                     __ptext17:	
  5956 ;; *************** function _SwPointSelect *****************
  5957 ;; Defined at:
  5958 ;;		line 25 in file "../src/Switch_B1.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  sw              1    wreg     unsigned char 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  sw              1    3[COMMON] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;		None               void
  5965 ;; Registers used:
  5966 ;;		wreg
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;Total ram usage:        2 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; Hardware stack levels required when called:    3
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_setSw_Main
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           
  5987                           ;psect for function _SwPointSelect
  5988  1174                     _SwPointSelect:	
  5989                           
  5990                           ;incstack = 0
  5991                           ; Regs used in _SwPointSelect: [wreg]
  5992                           ;SwPointSelect@sw stored from wreg
  5993  1174  00F3               	movwf	SwPointSelect@sw
  5994                           
  5995                           ;Switch_B1.c: 28: if (sw == 1) {
  5996  1175  0873               	movf	SwPointSelect@sw,w
  5997  1176  3A01               	xorlw	1
  5998  1177  1D03               	skipz
  5999  1178  297F               	goto	l6056
  6000                           
  6001                           ;Switch_B1.c: 29: Sw = &Sw1;
  6002  1179  30D5               	movlw	_Sw1& (0+255)
  6003  117A  00F2               	movwf	??_SwPointSelect
  6004  117B  0872               	movf	??_SwPointSelect,w
  6005  117C  0020               	movlb	0	; select bank0
  6006  117D  00EC               	movwf	_Sw
  6007                           
  6008                           ;Switch_B1.c: 30: }
  6009  117E  0008               	return
  6010  117F                     l6056:	
  6011                           
  6012                           ;Switch_B1.c: 33: else if (sw == 2) {
  6013  117F  0873               	movf	SwPointSelect@sw,w
  6014  1180  3A02               	xorlw	2
  6015  1181  1D03               	skipz
  6016  1182  0008               	return
  6017                           
  6018                           ;Switch_B1.c: 34: Sw = &Sw2;
  6019  1183  30DE               	movlw	_Sw2& (0+255)
  6020  1184  00F2               	movwf	??_SwPointSelect
  6021  1185  0872               	movf	??_SwPointSelect,w
  6022  1186  0020               	movlb	0	; select bank0
  6023  1187  00EC               	movwf	_Sw
  6024  1188  0008               	return
  6025  1189                     __end_of_SwPointSelect:	
  6026                           
  6027                           	psect	text18
  6028  115F                     __ptext18:	
  6029 ;; *************** function _TouchPower *****************
  6030 ;; Defined at:
  6031 ;;		line 10 in file "../src/Switch_B1.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;		None               void
  6038 ;; Registers used:
  6039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    4
  6052 ;; This function calls:
  6053 ;;		_Timeout_Counter
  6054 ;;		_set_TimeoutCleared
  6055 ;; This function is called by:
  6056 ;;		_Switch_Main
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           
  6061                           ;psect for function _TouchPower
  6062  115F                     _TouchPower:	
  6063                           
  6064                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  6065                           
  6066                           ;incstack = 0
  6067                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6068  115F  0021               	movlb	1	; select bank1
  6069  1160  1C40               	btfss	_myMain^(0+128),0
  6070  1161  0008               	return
  6071                           
  6072                           ;Switch_B1.c: 12: if (RC5 == 0) {
  6073  1162  0020               	movlb	0	; select bank0
  6074  1163  1A8E               	btfsc	14,5	;volatile
  6075  1164  0008               	return
  6076  1165  296B               	goto	l6712
  6077  1166                     l1854:	
  6078                           ;Switch_B1.c: 13: while (RC5 == 0 && myMain.Timeout == 0) {
  6079                           
  6080                           
  6081                           ;Switch_B1.c: 14: RC5 = 1;
  6082  1166  0020               	movlb	0	; select bank0
  6083  1167  168E               	bsf	14,5	;volatile
  6084                           
  6085                           ;Switch_B1.c: 15: Timeout_Counter();
  6086  1168  3191  214A  3191   	fcall	_Timeout_Counter
  6087  116B                     l6712:	
  6088  116B  0020               	movlb	0	; select bank0
  6089  116C  1A8E               	btfsc	14,5	;volatile
  6090  116D  2971               	goto	l6716
  6091  116E  0021               	movlb	1	; select bank1
  6092  116F  1D4A               	btfss	(_myMain^(0+128)+10),2
  6093  1170  2966               	goto	l1854
  6094  1171                     l6716:	
  6095                           
  6096                           ;Switch_B1.c: 16: }
  6097                           ;Switch_B1.c: 17: set_TimeoutCleared();
  6098  1171  319E  26FE         	fcall	_set_TimeoutCleared
  6099  1173  0008               	return
  6100  1174                     __end_of_TouchPower:	
  6101                           
  6102                           	psect	text19
  6103  1EFE                     __ptext19:	
  6104 ;; *************** function _set_TimeoutCleared *****************
  6105 ;; Defined at:
  6106 ;;		line 285 in file "../src/main_B1.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;		None
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;		None               void
  6113 ;; Registers used:
  6114 ;;		status,2
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;Total ram usage:        0 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    3
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_getAD
  6131 ;;		_TouchPower
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function _set_TimeoutCleared
  6137  1EFE                     _set_TimeoutCleared:	
  6138                           
  6139                           ;main_B1.c: 286: myMain.Timeout = 0;
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in _set_TimeoutCleared: [status,2]
  6143  1EFE  0021               	movlb	1	; select bank1
  6144  1EFF  114A               	bcf	(_myMain^(0+128)+10),2
  6145                           
  6146                           ;main_B1.c: 287: myMain.Timeout_Counter = 0;
  6147  1F00  01CB               	clrf	(_myMain^(0+128)+11)
  6148  1F01  01CC               	clrf	((_myMain+1)^(0+128)+11)
  6149  1F02  0008               	return
  6150  1F03                     __end_of_set_TimeoutCleared:	
  6151                           
  6152                           	psect	text20
  6153  114A                     __ptext20:	
  6154 ;; *************** function _Timeout_Counter *****************
  6155 ;; Defined at:
  6156 ;;		line 276 in file "../src/main_B1.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    3
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_getAD
  6181 ;;		_TouchPower
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           
  6186                           ;psect for function _Timeout_Counter
  6187  114A                     _Timeout_Counter:	
  6188                           
  6189                           ;main_B1.c: 277: myMain.Timeout_Counter++;
  6190                           
  6191                           ;incstack = 0
  6192                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  6193  114A  3001               	movlw	1
  6194  114B  0021               	movlb	1	; select bank1
  6195  114C  07CB               	addwf	(_myMain^(0+128)+11),f
  6196  114D  3000               	movlw	0
  6197  114E  3DCC               	addwfc	((_myMain+1)^(0+128)+11),f
  6198                           
  6199                           ;main_B1.c: 278: if (myMain.Timeout_Counter == 25000) {
  6200  114F  300B               	movlw	11
  6201  1150  3EC0               	addlw	_myMain& (0+255)
  6202  1151  0086               	movwf	6
  6203  1152  0187               	clrf	7
  6204  1153  3F40               	moviw [0]fsr1
  6205  1154  3AA8               	xorlw	168
  6206  1155  1D03               	skipz
  6207  1156  2959               	goto	u6165
  6208  1157  3F41               	moviw [1]fsr1
  6209  1158  3A61               	xorlw	97
  6210  1159                     u6165:	
  6211  1159  1D03               	skipz
  6212  115A  0008               	return
  6213                           
  6214                           ;main_B1.c: 279: myMain.Timeout_Counter = 0;
  6215  115B  01CB               	clrf	(_myMain^(0+128)+11)
  6216  115C  01CC               	clrf	((_myMain+1)^(0+128)+11)
  6217                           
  6218                           ;main_B1.c: 280: myMain.Timeout = 1;
  6219  115D  154A               	bsf	(_myMain^(0+128)+10),2
  6220  115E  0008               	return
  6221  115F                     __end_of_Timeout_Counter:	
  6222                           
  6223                           	psect	text21
  6224  1F42                     __ptext21:	
  6225 ;; *************** function _Switch_Initialization *****************
  6226 ;; Defined at:
  6227 ;;		line 46 in file "../src/Switch_B1.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;		None               void
  6234 ;; Registers used:
  6235 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;Total ram usage:        0 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; Hardware stack levels required when called:    6
  6248 ;; This function calls:
  6249 ;;		_setSw_Initialization
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           
  6256                           ;psect for function _Switch_Initialization
  6257  1F42                     _Switch_Initialization:	
  6258                           
  6259                           ;Switch_B1.c: 52: setSw_Initialization(1);
  6260                           
  6261                           ;incstack = 0
  6262                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  6263  1F42  3001               	movlw	1
  6264  1F43  319F  272B  319F   	fcall	_setSw_Initialization
  6265                           
  6266                           ;Switch_B1.c: 56: setSw_Initialization(2);
  6267  1F46  3002               	movlw	2
  6268  1F47  319F  272B         	fcall	_setSw_Initialization
  6269  1F49  0008               	return
  6270  1F4A                     __end_of_Switch_Initialization:	
  6271                           
  6272                           	psect	text22
  6273  1F2B                     __ptext22:	
  6274 ;; *************** function _setSw_Initialization *****************
  6275 ;; Defined at:
  6276 ;;		line 66 in file "../src/Switch_B1.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  sw              1    wreg     unsigned char 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  sw              1    6[COMMON] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;		None               void
  6283 ;; Registers used:
  6284 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;Total ram usage:        1 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    5
  6297 ;; This function calls:
  6298 ;;		_setLED
  6299 ;; This function is called by:
  6300 ;;		_Switch_Initialization
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function _setSw_Initialization
  6306  1F2B                     _setSw_Initialization:	
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6310                           ;setSw_Initialization@sw stored from wreg
  6311  1F2B  00F6               	movwf	setSw_Initialization@sw
  6312                           
  6313                           ;Switch_B1.c: 68: setLED(sw, 1);
  6314  1F2C  01F4               	clrf	setLED@command
  6315  1F2D  0AF4               	incf	setLED@command,f
  6316  1F2E  0876               	movf	setSw_Initialization@sw,w
  6317  1F2F  3188  20AC         	fcall	_setLED
  6318  1F31  0008               	return
  6319  1F32                     __end_of_setSw_Initialization:	
  6320                           
  6321                           	psect	text23
  6322  10BD                     __ptext23:	
  6323 ;; *************** function _Mcu_Initialization *****************
  6324 ;; Defined at:
  6325 ;;		line 30 in file "../src/MCU_B1.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;		None
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;Total ram usage:        0 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    4
  6346 ;; This function calls:
  6347 ;;		_ADC_Set
  6348 ;;		_Fosc_Set
  6349 ;;		_IOC_Set
  6350 ;;		_IO_Set
  6351 ;;		_TMR1_Set
  6352 ;;		_WDT_Set
  6353 ;; This function is called by:
  6354 ;;		_main
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function _Mcu_Initialization
  6360  10BD                     _Mcu_Initialization:	
  6361                           
  6362                           ;MCU_B1.c: 32: Fosc_Set();
  6363                           
  6364                           ;incstack = 0
  6365                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  6366  10BD  319E  26F5  3190   	fcall	_Fosc_Set
  6367                           
  6368                           ;MCU_B1.c: 34: IO_Set();
  6369  10C0  3192  221B  3190   	fcall	_IO_Set
  6370                           
  6371                           ;MCU_B1.c: 36: ;;
  6372                           ;MCU_B1.c: 38: TMR1_Set();
  6373  10C3  319F  27D7  3190   	fcall	_TMR1_Set
  6374                           
  6375                           ;MCU_B1.c: 40: ADC_Set();
  6376  10C6  319F  2724  3190   	fcall	_ADC_Set
  6377                           
  6378                           ;MCU_B1.c: 42: ;;
  6379                           ;MCU_B1.c: 44: ;;
  6380                           ;MCU_B1.c: 46: IOC_Set();
  6381  10C9  319F  2785  3190   	fcall	_IOC_Set
  6382                           
  6383                           ;MCU_B1.c: 48: ;;
  6384                           ;MCU_B1.c: 50: ;;
  6385                           ;MCU_B1.c: 52: WDT_Set();
  6386  10CC  319F  275C         	fcall	_WDT_Set
  6387  10CE  0008               	return
  6388  10CF                     __end_of_Mcu_Initialization:	
  6389                           
  6390                           	psect	text24
  6391  1F5C                     __ptext24:	
  6392 ;; *************** function _WDT_Set *****************
  6393 ;; Defined at:
  6394 ;;		line 1107 in file "../src/MCU_B1.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;		None               void
  6401 ;; Registers used:
  6402 ;;		wreg
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;Total ram usage:        1 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    3
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_Mcu_Initialization
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function _WDT_Set
  6424  1F5C                     _WDT_Set:	
  6425                           
  6426                           ;MCU_B1.c: 1114: WDTCON = 0b00010111;;
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _WDT_Set: [wreg]
  6430  1F5C  3017               	movlw	23
  6431  1F5D  0021               	movlb	1	; select bank1
  6432  1F5E  0097               	movwf	23	;volatile
  6433                           
  6434                           ;MCU_B1.c: 1116: WDT.Enable = 1;
  6435  1F5F  145C               	bsf	_WDT^(0+128),0
  6436                           
  6437                           ;MCU_B1.c: 1117: WDT.Timer = 10;
  6438  1F60  300A               	movlw	10
  6439  1F61  00F2               	movwf	??_WDT_Set
  6440  1F62  0872               	movf	??_WDT_Set,w
  6441  1F63  00DD               	movwf	(_WDT^(0+128)+1)
  6442  1F64  0008               	return
  6443  1F65                     __end_of_WDT_Set:	
  6444                           
  6445                           	psect	text25
  6446  1FD7                     __ptext25:	
  6447 ;; *************** function _TMR1_Set *****************
  6448 ;; Defined at:
  6449 ;;		line 226 in file "../src/MCU_B1.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;		None               void
  6456 ;; Registers used:
  6457 ;;		wreg
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;Total ram usage:        0 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    3
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_Mcu_Initialization
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _TMR1_Set
  6479  1FD7                     _TMR1_Set:	
  6480                           
  6481                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _TMR1_Set: [wreg]
  6485  1FD7  3041               	movlw	65
  6486  1FD8  0020               	movlb	0	; select bank0
  6487  1FD9  0098               	movwf	24	;volatile
  6488                           
  6489                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  6490  1FDA  30FA               	movlw	250
  6491  1FDB  0097               	movwf	23	;volatile
  6492                           
  6493                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  6494  1FDC  3038               	movlw	56
  6495  1FDD  0096               	movwf	22	;volatile
  6496                           
  6497                           ;MCU_B1.c: 230: TMR1IE = 1;
  6498  1FDE  0021               	movlb	1	; select bank1
  6499  1FDF  1411               	bsf	17,0	;volatile
  6500                           
  6501                           ;MCU_B1.c: 231: PEIE = 1;
  6502  1FE0  170B               	bsf	11,6	;volatile
  6503                           
  6504                           ;MCU_B1.c: 232: GIE = 1;
  6505  1FE1  178B               	bsf	11,7	;volatile
  6506  1FE2  0008               	return
  6507  1FE3                     __end_of_TMR1_Set:	
  6508                           
  6509                           	psect	text26
  6510  121B                     __ptext26:	
  6511 ;; *************** function _IO_Set *****************
  6512 ;; Defined at:
  6513 ;;		line 60 in file "../src/MCU_B1.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;		None               void
  6520 ;; Registers used:
  6521 ;;		wreg, status,2
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    3
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_Mcu_Initialization
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _IO_Set
  6543  121B                     _IO_Set:	
  6544                           
  6545                           ;MCU_B1.c: 92: TRISA = 0b01110111;;
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in _IO_Set: [wreg+status,2]
  6549  121B  3077               	movlw	119
  6550  121C  0021               	movlb	1	; select bank1
  6551  121D  008C               	movwf	12	;volatile
  6552                           
  6553                           ;MCU_B1.c: 93: TRISB = 0b00000111;;
  6554  121E  3007               	movlw	7
  6555  121F  008D               	movwf	13	;volatile
  6556                           
  6557                           ;MCU_B1.c: 94: TRISC = 0b00001100;;
  6558  1220  300C               	movlw	12
  6559  1221  008E               	movwf	14	;volatile
  6560                           
  6561                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  6562  1222  0022               	movlb	2	; select bank2
  6563  1223  018C               	clrf	12	;volatile
  6564                           
  6565                           ;MCU_B1.c: 97: LATB = 0b00000010;;
  6566  1224  3002               	movlw	2
  6567  1225  008D               	movwf	13	;volatile
  6568                           
  6569                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  6570  1226  018E               	clrf	14	;volatile
  6571                           
  6572                           ;MCU_B1.c: 100: ANSELA = 0b00100010;;
  6573  1227  3022               	movlw	34
  6574  1228  0023               	movlb	3	; select bank3
  6575  1229  008C               	movwf	12	;volatile
  6576                           
  6577                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  6578  122A  018D               	clrf	13	;volatile
  6579                           
  6580                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  6581  122B  018E               	clrf	14	;volatile
  6582                           
  6583                           ;MCU_B1.c: 104: PORTA = 0b01110111;;
  6584  122C  3077               	movlw	119
  6585  122D  0020               	movlb	0	; select bank0
  6586  122E  008C               	movwf	12	;volatile
  6587                           
  6588                           ;MCU_B1.c: 105: PORTB = 0b00000111;;
  6589  122F  3007               	movlw	7
  6590  1230  008D               	movwf	13	;volatile
  6591                           
  6592                           ;MCU_B1.c: 106: PORTC = 0b00001100;;
  6593  1231  300C               	movlw	12
  6594  1232  008E               	movwf	14	;volatile
  6595                           
  6596                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  6597  1233  0024               	movlb	4	; select bank4
  6598  1234  018D               	clrf	13	;volatile
  6599  1235  0008               	return
  6600  1236                     __end_of_IO_Set:	
  6601                           
  6602                           	psect	text27
  6603  1F85                     __ptext27:	
  6604 ;; *************** function _IOC_Set *****************
  6605 ;; Defined at:
  6606 ;;		line 381 in file "../src/MCU_B1.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;		None               void
  6613 ;; Registers used:
  6614 ;;		wreg, status,2
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    3
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_Mcu_Initialization
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function _IOC_Set
  6636  1F85                     _IOC_Set:	
  6637                           
  6638                           ;MCU_B1.c: 383: IOCBP = 0b00000100;;
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _IOC_Set: [wreg+status,2]
  6642  1F85  3004               	movlw	4
  6643  1F86  0027               	movlb	7	; select bank7
  6644  1F87  0094               	movwf	20	;volatile
  6645                           
  6646                           ;MCU_B1.c: 384: IOCBN = 0b00000100;;
  6647  1F88  3004               	movlw	4
  6648  1F89  0095               	movwf	21	;volatile
  6649                           
  6650                           ;MCU_B1.c: 386: IOCBF = 0b00000000;
  6651  1F8A  0196               	clrf	22	;volatile
  6652                           
  6653                           ;MCU_B1.c: 388: IOCIE = 1;
  6654  1F8B  158B               	bsf	11,3	;volatile
  6655                           
  6656                           ;MCU_B1.c: 389: IOCIF = 0;
  6657  1F8C  100B               	bcf	11,0	;volatile
  6658                           
  6659                           ;MCU_B1.c: 390: PEIE = 1;
  6660  1F8D  170B               	bsf	11,6	;volatile
  6661                           
  6662                           ;MCU_B1.c: 391: GIE = 1;
  6663  1F8E  178B               	bsf	11,7	;volatile
  6664  1F8F  0008               	return
  6665  1F90                     __end_of_IOC_Set:	
  6666                           
  6667                           	psect	text28
  6668  1EF5                     __ptext28:	
  6669 ;; *************** function _Fosc_Set *****************
  6670 ;; Defined at:
  6671 ;;		line 56 in file "../src/MCU_B1.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    3
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_Mcu_Initialization
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _Fosc_Set
  6701  1EF5                     _Fosc_Set:	
  6702                           
  6703                           ;MCU_B1.c: 57: OSCCON = 0x78;
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in _Fosc_Set: [wreg]
  6707  1EF5  3078               	movlw	120
  6708  1EF6  0021               	movlb	1	; select bank1
  6709  1EF7  0099               	movwf	25	;volatile
  6710  1EF8  0008               	return
  6711  1EF9                     __end_of_Fosc_Set:	
  6712                           
  6713                           	psect	text29
  6714  1F24                     __ptext29:	
  6715 ;; *************** function _ADC_Set *****************
  6716 ;; Defined at:
  6717 ;;		line 429 in file "../src/MCU_B1.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;		None               void
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    3
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_Mcu_Initialization
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           
  6746                           ;psect for function _ADC_Set
  6747  1F24                     _ADC_Set:	
  6748                           
  6749                           ;MCU_B1.c: 430: ADCON1 = 0xf3;
  6750                           
  6751                           ;incstack = 0
  6752                           ; Regs used in _ADC_Set: [wreg]
  6753  1F24  30F3               	movlw	243
  6754  1F25  0021               	movlb	1	; select bank1
  6755  1F26  009E               	movwf	30	;volatile
  6756                           
  6757                           ;MCU_B1.c: 431: FVRCON = 0xc1;
  6758  1F27  30C1               	movlw	193
  6759  1F28  0022               	movlb	2	; select bank2
  6760  1F29  0097               	movwf	23	;volatile
  6761  1F2A  0008               	return
  6762  1F2B                     __end_of_ADC_Set:	
  6763                           
  6764                           	psect	text30
  6765  004D                     __ptext30:	
  6766 ;; *************** function _Load_Main *****************
  6767 ;; Defined at:
  6768 ;;		line 40 in file "../src/OverLoad_B1.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  i               2    8[BANK0 ] int 
  6773 ;;  LightsCount     1    7[BANK0 ] unsigned char 
  6774 ;;  Load_RunStat    1    6[BANK0 ] unsigned char 
  6775 ;;  ErrorCountVa    1    5[BANK0 ] unsigned char 
  6776 ;;  error           1    2[BANK0 ] unsigned char 
  6777 ;; Return value:  Size  Location     Type
  6778 ;;		None               void
  6779 ;; Registers used:
  6780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;Total ram usage:       10 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    4
  6793 ;; This function calls:
  6794 ;;		___lwdiv
  6795 ;;		___wmul
  6796 ;;		_getAll_DimmerIntr_Dimming_Sw_RF
  6797 ;;		_getDimmer_LoadGO
  6798 ;;		_getDimmer_Load_Status
  6799 ;;		_getMain_All_Error_Status
  6800 ;;		_getMain_All_LightsStatus
  6801 ;;		_getMain_Lights_Count
  6802 ;;		_setLoad_AH_AL_Restore
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function _Load_Main
  6810  004D                     _Load_Main:	
  6811                           
  6812                           ;OverLoad_B1.c: 41: char error = getMain_All_Error_Status(0);
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in _Load_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6816  004D  3000               	movlw	0
  6817  004E  3193  23BF  3180   	fcall	_getMain_All_Error_Status
  6818  0051  0020               	movlb	0	; select bank0
  6819  0052  00A0               	movwf	??_Load_Main
  6820  0053  0820               	movf	??_Load_Main,w
  6821  0054  00A2               	movwf	Load_Main@error
  6822                           
  6823                           ;OverLoad_B1.c: 42: char Load_RunStatus = 0, ErrorCountValue = 0, LightsCount = 0;
  6824  0055  01A6               	clrf	Load_Main@Load_RunStatus
  6825  0056  01A5               	clrf	Load_Main@ErrorCountValue
  6826  0057  01A7               	clrf	Load_Main@LightsCount
  6827                           
  6828                           ;OverLoad_B1.c: 43: if (Load.Enable == 1) {
  6829  0058  0022               	movlb	2	; select bank2
  6830  0059  1C25               	btfss	_Load^(0+256),0
  6831  005A  29E7               	goto	l1261
  6832                           
  6833                           ;OverLoad_B1.c: 45: if (getMain_All_LightsStatus() == 0) {
  6834  005B  3190  202E  3180   	fcall	_getMain_All_LightsStatus
  6835  005E  3800               	iorlw	0
  6836  005F  1D03               	skipz
  6837  0060  2863               	goto	l8372
  6838                           
  6839                           ;OverLoad_B1.c: 46: Load.GO = 0;
  6840  0061  0022               	movlb	2	; select bank2
  6841  0062  2884               	goto	l8390
  6842  0063                     l8372:	
  6843                           ;OverLoad_B1.c: 47: } else {
  6844                           
  6845                           
  6846                           ;OverLoad_B1.c: 50: if (error == 0 && getAll_DimmerIntr_Dimming_Sw_RF() == 0) {
  6847  0063  0020               	movlb	0	; select bank0
  6848  0064  08A2               	movf	Load_Main@error,f
  6849  0065  1D03               	skipz
  6850  0066  2881               	goto	l1264
  6851  0067  319F  27E3  3180   	fcall	_getAll_DimmerIntr_Dimming_Sw_RF
  6852  006A  3800               	iorlw	0
  6853  006B  1D03               	skipz
  6854  006C  2881               	goto	l1264
  6855                           
  6856                           ;OverLoad_B1.c: 51: Load.GO = 1;
  6857  006D  0022               	movlb	2	; select bank2
  6858  006E  14A5               	bsf	_Load^(0+256),1
  6859                           
  6860                           ;OverLoad_B1.c: 53: if (getDimmer_LoadGO() == 1) {
  6861  006F  319F  2716  3180   	fcall	_getDimmer_LoadGO
  6862  0072  3A01               	xorlw	1
  6863  0073  1D03               	skipz
  6864  0074  287C               	goto	l1265
  6865                           
  6866                           ;OverLoad_B1.c: 54: if (Load.Run == 0 && Load.OK == 0) {
  6867  0075  0022               	movlb	2	; select bank2
  6868  0076  1DA5               	btfss	_Load^(0+256),3
  6869  0077  1BA5               	btfsc	_Load^(0+256),7
  6870  0078  2885               	goto	l1263
  6871                           
  6872                           ;OverLoad_B1.c: 55: Load.Run = 1;
  6873  0079  15A5               	bsf	_Load^(0+256),3
  6874                           
  6875                           ;OverLoad_B1.c: 56: Load.Count = 0;
  6876  007A  01CA               	clrf	(_Load^(0+256)+37)
  6877                           
  6878                           ;OverLoad_B1.c: 57: }
  6879                           ;OverLoad_B1.c: 58: } else {
  6880  007B  2885               	goto	l1263
  6881  007C                     l1265:	
  6882                           
  6883                           ;OverLoad_B1.c: 59: if (Load.OK == 1) {
  6884  007C  0022               	movlb	2	; select bank2
  6885  007D  1FA5               	btfss	_Load^(0+256),7
  6886  007E  2885               	goto	l1263
  6887                           
  6888                           ;OverLoad_B1.c: 60: Load.OK = 0;
  6889  007F  13A5               	bcf	_Load^(0+256),7
  6890                           
  6891                           ;OverLoad_B1.c: 61: }
  6892                           ;OverLoad_B1.c: 62: }
  6893                           ;OverLoad_B1.c: 63: } else {
  6894  0080  2885               	goto	l1263
  6895  0081                     l1264:	
  6896                           
  6897                           ;OverLoad_B1.c: 64: if (Load.GO == 1) {
  6898  0081  0022               	movlb	2	; select bank2
  6899  0082  1CA5               	btfss	_Load^(0+256),1
  6900  0083  2885               	goto	l1263
  6901  0084                     l8390:	
  6902                           
  6903                           ;OverLoad_B1.c: 65: Load.GO = 0;
  6904  0084  10A5               	bcf	_Load^(0+256),1
  6905  0085                     l1263:	
  6906                           
  6907                           ;OverLoad_B1.c: 66: }
  6908                           ;OverLoad_B1.c: 67: }
  6909                           ;OverLoad_B1.c: 89: }
  6910                           ;OverLoad_B1.c: 92: if (Load.GO == 1) {
  6911  0085  1CA5               	btfss	_Load^(0+256),1
  6912  0086  29C3               	goto	l1271
  6913                           
  6914                           ;OverLoad_B1.c: 93: Load.LightsON = 1;
  6915  0087  1525               	bsf	_Load^(0+256),2
  6916                           
  6917                           ;OverLoad_B1.c: 95: if (Load.ADtoGO == 1) {
  6918  0088  1E25               	btfss	_Load^(0+256),4
  6919  0089  29C1               	goto	l1272
  6920                           
  6921                           ;OverLoad_B1.c: 96: Load.Time++;
  6922  008A  3001               	movlw	1
  6923  008B  07A6               	addwf	(_Load^(0+256)+1),f
  6924  008C  3000               	movlw	0
  6925  008D  3DA7               	addwfc	((_Load+1)^(0+256)+1),f
  6926                           
  6927                           ;OverLoad_B1.c: 97: if (Load.Time >= (40 / 20)) {
  6928  008E  3000               	movlw	0
  6929  008F  0227               	subwf	((_Load+1)^(0+256)+1),w
  6930  0090  3002               	movlw	2
  6931  0091  1903               	skipnz
  6932  0092  0226               	subwf	(_Load^(0+256)+1),w
  6933  0093  1C03               	skipc
  6934  0094  0008               	return
  6935                           
  6936                           ;OverLoad_B1.c: 98: Load.Time = 0;
  6937  0095  01A6               	clrf	(_Load^(0+256)+1)
  6938  0096  01A7               	clrf	((_Load+1)^(0+256)+1)
  6939                           
  6940                           ;OverLoad_B1.c: 99: Load.ADtoGO = 0;
  6941  0097  1225               	bcf	_Load^(0+256),4
  6942                           
  6943                           ;OverLoad_B1.c: 101: for (int i = 1; i < 4; i++) {
  6944  0098  3001               	movlw	1
  6945  0099  0020               	movlb	0	; select bank0
  6946  009A  00A8               	movwf	Load_Main@i
  6947  009B  3000               	movlw	0
  6948  009C  00A9               	movwf	Load_Main@i+1
  6949  009D  0829               	movf	Load_Main@i+1,w
  6950  009E  3A80               	xorlw	128
  6951  009F  00A0               	movwf	??_Load_Main
  6952  00A0  3080               	movlw	128
  6953  00A1  0220               	subwf	??_Load_Main,w
  6954  00A2  1D03               	skipz
  6955  00A3  28A6               	goto	u10265
  6956  00A4  3004               	movlw	4
  6957  00A5  0228               	subwf	Load_Main@i,w
  6958  00A6                     u10265:	
  6959  00A6  1803               	btfsc	3,0
  6960  00A7  28DA               	goto	l8412
  6961  00A8                     l8406:	
  6962                           
  6963                           ;OverLoad_B1.c: 102: Load.ADH += Load.AH[i];
  6964  00A8  0020               	movlb	0	; select bank0
  6965  00A9  3528               	lslf	Load_Main@i,w
  6966  00AA  3E30               	addlw	(_Load+11)& (0+255)
  6967  00AB  0086               	movwf	6
  6968  00AC  3001               	movlw	1	; select bank2/3
  6969  00AD  0087               	movwf	7
  6970  00AE  3F40               	moviw [0]fsr1
  6971  00AF  00A0               	movwf	??_Load_Main
  6972  00B0  3F41               	moviw [1]fsr1
  6973  00B1  00A1               	movwf	??_Load_Main+1
  6974  00B2  0820               	movf	??_Load_Main,w
  6975  00B3  0022               	movlb	2	; select bank2
  6976  00B4  07AA               	addwf	(_Load^(0+256)+5),f
  6977  00B5  0020               	movlb	0	; select bank0
  6978  00B6  0821               	movf	??_Load_Main+1,w
  6979  00B7  0022               	movlb	2	; select bank2
  6980  00B8  3DAB               	addwfc	((_Load+1)^(0+256)+5),f
  6981                           
  6982                           ;OverLoad_B1.c: 103: Load.ADL += Load.AL[i];
  6983  00B9  0020               	movlb	0	; select bank0
  6984  00BA  3528               	lslf	Load_Main@i,w
  6985  00BB  3E3A               	addlw	(_Load+21)& (0+255)
  6986  00BC  0086               	movwf	6
  6987  00BD  3001               	movlw	1	; select bank2/3
  6988  00BE  0087               	movwf	7
  6989  00BF  3F40               	moviw [0]fsr1
  6990  00C0  00A0               	movwf	??_Load_Main
  6991  00C1  3F41               	moviw [1]fsr1
  6992  00C2  00A1               	movwf	??_Load_Main+1
  6993  00C3  0820               	movf	??_Load_Main,w
  6994  00C4  0022               	movlb	2	; select bank2
  6995  00C5  07AC               	addwf	(_Load^(0+256)+7),f
  6996  00C6  0020               	movlb	0	; select bank0
  6997  00C7  0821               	movf	??_Load_Main+1,w
  6998  00C8  0022               	movlb	2	; select bank2
  6999  00C9  3DAD               	addwfc	((_Load+1)^(0+256)+7),f
  7000  00CA  3001               	movlw	1
  7001  00CB  0020               	movlb	0	; select bank0
  7002  00CC  07A8               	addwf	Load_Main@i,f
  7003  00CD  3000               	movlw	0
  7004  00CE  3DA9               	addwfc	Load_Main@i+1,f
  7005  00CF  0829               	movf	Load_Main@i+1,w
  7006  00D0  3A80               	xorlw	128
  7007  00D1  00A0               	movwf	??_Load_Main
  7008  00D2  3080               	movlw	128
  7009  00D3  0220               	subwf	??_Load_Main,w
  7010  00D4  1D03               	skipz
  7011  00D5  28D8               	goto	u10275
  7012  00D6  3004               	movlw	4
  7013  00D7  0228               	subwf	Load_Main@i,w
  7014  00D8                     u10275:	
  7015  00D8  1C03               	skipc
  7016  00D9  28A8               	goto	l8406
  7017  00DA                     l8412:	
  7018                           
  7019                           ;OverLoad_B1.c: 104: }
  7020                           ;OverLoad_B1.c: 105: Load.ADH /= 3;
  7021  00DA  3003               	movlw	3
  7022  00DB  00F2               	movwf	___lwdiv@divisor
  7023  00DC  3000               	movlw	0
  7024  00DD  00F3               	movwf	___lwdiv@divisor+1
  7025  00DE  0022               	movlb	2	; select bank2
  7026  00DF  082B               	movf	((_Load+1)^(0+256)+5),w
  7027  00E0  01F5               	clrf	___lwdiv@dividend+1
  7028  00E1  07F5               	addwf	___lwdiv@dividend+1,f
  7029  00E2  082A               	movf	(_Load^(0+256)+5),w
  7030  00E3  01F4               	clrf	___lwdiv@dividend
  7031  00E4  07F4               	addwf	___lwdiv@dividend,f
  7032  00E5  3194  24AC  3180   	fcall	___lwdiv
  7033  00E8  0873               	movf	?___lwdiv+1,w
  7034  00E9  0022               	movlb	2	; select bank2
  7035  00EA  01AB               	clrf	((_Load+1)^(0+256)+5)
  7036  00EB  07AB               	addwf	((_Load+1)^(0+256)+5),f
  7037  00EC  0872               	movf	?___lwdiv,w
  7038  00ED  01AA               	clrf	(_Load^(0+256)+5)
  7039  00EE  07AA               	addwf	(_Load^(0+256)+5),f
  7040                           
  7041                           ;OverLoad_B1.c: 106: Load.ADL /= 3;
  7042  00EF  3003               	movlw	3
  7043  00F0  00F2               	movwf	___lwdiv@divisor
  7044  00F1  3000               	movlw	0
  7045  00F2  00F3               	movwf	___lwdiv@divisor+1
  7046  00F3  082D               	movf	((_Load+1)^(0+256)+7),w
  7047  00F4  01F5               	clrf	___lwdiv@dividend+1
  7048  00F5  07F5               	addwf	___lwdiv@dividend+1,f
  7049  00F6  082C               	movf	(_Load^(0+256)+7),w
  7050  00F7  01F4               	clrf	___lwdiv@dividend
  7051  00F8  07F4               	addwf	___lwdiv@dividend,f
  7052  00F9  3194  24AC  3180   	fcall	___lwdiv
  7053  00FC  0873               	movf	?___lwdiv+1,w
  7054  00FD  0022               	movlb	2	; select bank2
  7055  00FE  01AD               	clrf	((_Load+1)^(0+256)+7)
  7056  00FF  07AD               	addwf	((_Load+1)^(0+256)+7),f
  7057  0100  0872               	movf	?___lwdiv,w
  7058  0101  01AC               	clrf	(_Load^(0+256)+7)
  7059  0102  07AC               	addwf	(_Load^(0+256)+7),f
  7060                           
  7061                           ;OverLoad_B1.c: 108: setLoad_AH_AL_Restore();
  7062  0103  3192  2200  3180   	fcall	_setLoad_AH_AL_Restore
  7063                           
  7064                           ;OverLoad_B1.c: 110: if (Load.ADH >= Load.ADL) {
  7065  0106  0022               	movlb	2	; select bank2
  7066  0107  082D               	movf	((_Load+1)^(0+256)+7),w
  7067  0108  022B               	subwf	((_Load+1)^(0+256)+5),w
  7068  0109  1D03               	skipz
  7069  010A  290D               	goto	u10285
  7070  010B  082C               	movf	(_Load^(0+256)+7),w
  7071  010C  022A               	subwf	(_Load^(0+256)+5),w
  7072  010D                     u10285:	
  7073  010D  1C03               	skipc
  7074  010E  0008               	return
  7075                           
  7076                           ;OverLoad_B1.c: 111: Load.AD = Load.ADH - Load.ADL;
  7077  010F  3005               	movlw	5
  7078  0110  3E25               	addlw	_Load& (0+255)
  7079  0111  0086               	movwf	6
  7080  0112  3001               	movlw	1	; select bank2/3
  7081  0113  0087               	movwf	7
  7082  0114  092C               	comf	(_Load^(0+256)+7),w
  7083  0115  0020               	movlb	0	; select bank0
  7084  0116  00A0               	movwf	??_Load_Main
  7085  0117  0022               	movlb	2	; select bank2
  7086  0118  092D               	comf	((_Load+1)^(0+256)+7),w
  7087  0119  0020               	movlb	0	; select bank0
  7088  011A  00A1               	movwf	??_Load_Main+1
  7089  011B  0AA0               	incf	??_Load_Main,f
  7090  011C  1903               	skipnz
  7091  011D  0AA1               	incf	??_Load_Main+1,f
  7092  011E  3F40               	moviw [0]fsr1
  7093  011F  0720               	addwf	??_Load_Main,w
  7094  0120  0022               	movlb	2	; select bank2
  7095  0121  00C4               	movwf	(_Load^(0+256)+31)
  7096  0122  3F41               	moviw [1]fsr1
  7097  0123  0020               	movlb	0	; select bank0
  7098  0124  3D21               	addwfc	??_Load_Main+1,w
  7099  0125  0022               	movlb	2	; select bank2
  7100  0126  00C5               	movwf	(_Load^(0+256)+32)
  7101                           
  7102                           ;OverLoad_B1.c: 112: Load.ADH = 0;
  7103  0127  01AA               	clrf	(_Load^(0+256)+5)
  7104  0128  01AB               	clrf	((_Load+1)^(0+256)+5)
  7105                           
  7106                           ;OverLoad_B1.c: 113: Load.ADL = 0;
  7107  0129  01AC               	clrf	(_Load^(0+256)+7)
  7108  012A  01AD               	clrf	((_Load+1)^(0+256)+7)
  7109                           
  7110                           ;OverLoad_B1.c: 115: if (Load.Run == 1) {
  7111  012B  1DA5               	btfss	_Load^(0+256),3
  7112  012C  2983               	goto	l8452
  7113                           
  7114                           ;OverLoad_B1.c: 116: if (Load.Count < 2) {
  7115  012D  3002               	movlw	2
  7116  012E  024A               	subwf	(_Load^(0+256)+37),w
  7117  012F  1803               	skipnc
  7118  0130  2983               	goto	l8452
  7119                           
  7120                           ;OverLoad_B1.c: 117: Load.Count++;
  7121  0131  3001               	movlw	1
  7122  0132  0020               	movlb	0	; select bank0
  7123  0133  00A0               	movwf	??_Load_Main
  7124  0134  0820               	movf	??_Load_Main,w
  7125  0135  0022               	movlb	2	; select bank2
  7126  0136  07CA               	addwf	(_Load^(0+256)+37),f
  7127                           
  7128                           ;OverLoad_B1.c: 119: Load_RunStatus = getDimmer_Load_Status();
  7129  0137  319F  271D  3180   	fcall	_getDimmer_Load_Status
  7130  013A  0020               	movlb	0	; select bank0
  7131  013B  00A0               	movwf	??_Load_Main
  7132  013C  0820               	movf	??_Load_Main,w
  7133  013D  00A6               	movwf	Load_Main@Load_RunStatus
  7134                           
  7135                           ;OverLoad_B1.c: 124: LightsCount = getMain_Lights_Count();
  7136  013E  3190  20AC  3180   	fcall	_getMain_Lights_Count
  7137  0141  0020               	movlb	0	; select bank0
  7138  0142  00A0               	movwf	??_Load_Main
  7139  0143  0820               	movf	??_Load_Main,w
  7140  0144  00A7               	movwf	Load_Main@LightsCount
  7141                           
  7142                           ;OverLoad_B1.c: 126: if (Load.Count == 1) {
  7143  0145  0022               	movlb	2	; select bank2
  7144  0146  084A               	movf	(_Load^(0+256)+37),w
  7145  0147  3A01               	xorlw	1
  7146  0148  1D03               	skipz
  7147  0149  294E               	goto	l8438
  7148                           
  7149                           ;OverLoad_B1.c: 128: Load.JudgeValue = (20*56);
  7150  014A  3060               	movlw	96
  7151  014B  00C8               	movwf	(_Load^(0+256)+35)
  7152  014C  3004               	movlw	4
  7153  014D  295B               	goto	L4
  7154  014E                     l8438:	
  7155                           ;OverLoad_B1.c: 129: } else if (Load.Count == 2) {
  7156                           
  7157  014E  084A               	movf	(_Load^(0+256)+37),w
  7158  014F  3A02               	xorlw	2
  7159  0150  1D03               	skipz
  7160  0151  2983               	goto	l8452
  7161                           
  7162                           ;OverLoad_B1.c: 130: if (LightsCount == 1) {
  7163  0152  0020               	movlb	0	; select bank0
  7164  0153  0827               	movf	Load_Main@LightsCount,w
  7165  0154  3A01               	xorlw	1
  7166  0155  1D03               	skipz
  7167  0156  295D               	goto	l8444
  7168                           
  7169                           ;OverLoad_B1.c: 131: Load.JudgeValue = (int)(1.2*56);
  7170  0157  3043               	movlw	67
  7171  0158  0022               	movlb	2	; select bank2
  7172  0159  00C8               	movwf	(_Load^(0+256)+35)
  7173  015A  3000               	movlw	0
  7174  015B                     L4:	
  7175  015B  00C9               	movwf	(_Load^(0+256)+36)
  7176                           
  7177                           ;OverLoad_B1.c: 132: } else {
  7178  015C  2983               	goto	l8452
  7179  015D                     l8444:	
  7180                           
  7181                           ;OverLoad_B1.c: 133: if (Load_RunStatus == 0) {
  7182  015D  0020               	movlb	0	; select bank0
  7183  015E  08A6               	movf	Load_Main@Load_RunStatus,f
  7184  015F  1D03               	skipz
  7185  0160  2977               	goto	l8448
  7186                           
  7187                           ;OverLoad_B1.c: 134: Load.JudgeValue = (int)(1.2*56) * LightsCount;
  7188  0161  0827               	movf	Load_Main@LightsCount,w
  7189  0162  00A0               	movwf	??_Load_Main
  7190  0163  01A1               	clrf	??_Load_Main+1
  7191  0164  0820               	movf	??_Load_Main,w
  7192  0165  00F2               	movwf	___wmul@multiplier
  7193  0166  0821               	movf	??_Load_Main+1,w
  7194  0167  00F3               	movwf	___wmul@multiplier+1
  7195  0168  3043               	movlw	67
  7196  0169  00F4               	movwf	___wmul@multiplicand
  7197  016A  3000               	movlw	0
  7198  016B  00F5               	movwf	___wmul@multiplicand+1
  7199  016C  3192  2236  3180   	fcall	___wmul
  7200  016F  0873               	movf	?___wmul+1,w
  7201  0170  0022               	movlb	2	; select bank2
  7202  0171  01C9               	clrf	((_Load+1)^(0+256)+35)
  7203  0172  07C9               	addwf	((_Load+1)^(0+256)+35),f
  7204  0173  0872               	movf	?___wmul,w
  7205  0174  01C8               	clrf	(_Load^(0+256)+35)
  7206  0175  07C8               	addwf	(_Load^(0+256)+35),f
  7207                           
  7208                           ;OverLoad_B1.c: 135: } else if (Load_RunStatus == 1) {
  7209  0176  2983               	goto	l8452
  7210  0177                     l8448:	
  7211  0177  0020               	movlb	0	; select bank0
  7212  0178  0826               	movf	Load_Main@Load_RunStatus,w
  7213  0179  3A01               	xorlw	1
  7214  017A  1D03               	skipz
  7215  017B  2983               	goto	l8452
  7216                           
  7217                           ;OverLoad_B1.c: 136: Load.JudgeValue = (int)(1.2*56) + Load.TotalLoad;
  7218  017C  0022               	movlb	2	; select bank2
  7219  017D  082E               	movf	(_Load^(0+256)+9),w
  7220  017E  3E43               	addlw	67
  7221  017F  00C8               	movwf	(_Load^(0+256)+35)
  7222  0180  3000               	movlw	0
  7223  0181  3D2F               	addwfc	((_Load+1)^(0+256)+9),w
  7224  0182  00C9               	movwf	((_Load+1)^(0+256)+35)
  7225  0183                     l8452:	
  7226                           
  7227                           ;OverLoad_B1.c: 137: }
  7228                           ;OverLoad_B1.c: 138: }
  7229                           ;OverLoad_B1.c: 139: }
  7230                           ;OverLoad_B1.c: 140: }
  7231                           ;OverLoad_B1.c: 141: }
  7232                           ;OverLoad_B1.c: 143: if (Load.AD >= Load.JudgeValue) {
  7233  0183  0022               	movlb	2	; select bank2
  7234  0184  0849               	movf	((_Load+1)^(0+256)+35),w
  7235  0185  0245               	subwf	((_Load+1)^(0+256)+31),w
  7236  0186  1D03               	skipz
  7237  0187  298A               	goto	u10365
  7238  0188  0848               	movf	(_Load^(0+256)+35),w
  7239  0189  0244               	subwf	(_Load^(0+256)+31),w
  7240  018A                     u10365:	
  7241  018A  1C03               	skipc
  7242  018B  29A9               	goto	l8468
  7243                           
  7244                           ;OverLoad_B1.c: 144: ErrorCountValue = LightsCount == 1 ? 2 : 3;
  7245  018C  0020               	movlb	0	; select bank0
  7246  018D  0827               	movf	Load_Main@LightsCount,w
  7247  018E  3A01               	xorlw	1
  7248  018F  1903               	skipnz
  7249  0190  2993               	goto	l8458
  7250  0191  3003               	movlw	3
  7251  0192  2994               	goto	L5
  7252  0193                     l8458:	
  7253  0193  3002               	movlw	2
  7254  0194                     L5:	
  7255  0194  00A3               	movwf	_Load_Main$3608
  7256  0195  3000               	movlw	0
  7257  0196  00A4               	movwf	_Load_Main$3608+1
  7258  0197  0823               	movf	_Load_Main$3608,w
  7259  0198  00A0               	movwf	??_Load_Main
  7260  0199  0820               	movf	??_Load_Main,w
  7261  019A  00A5               	movwf	Load_Main@ErrorCountValue
  7262                           
  7263                           ;OverLoad_B1.c: 145: Load.ErrorCount++;
  7264  019B  3001               	movlw	1
  7265  019C  00A0               	movwf	??_Load_Main
  7266  019D  0820               	movf	??_Load_Main,w
  7267  019E  0022               	movlb	2	; select bank2
  7268  019F  07CB               	addwf	(_Load^(0+256)+38),f
  7269                           
  7270                           ;OverLoad_B1.c: 146: if (Load.ErrorCount > ErrorCountValue) {
  7271  01A0  084B               	movf	(_Load^(0+256)+38),w
  7272  01A1  0020               	movlb	0	; select bank0
  7273  01A2  0225               	subwf	Load_Main@ErrorCountValue,w
  7274  01A3  1803               	skipnc
  7275  01A4  0008               	return
  7276                           
  7277                           ;OverLoad_B1.c: 147: Load.ErrorCount = 0;
  7278  01A5  0022               	movlb	2	; select bank2
  7279  01A6  01CB               	clrf	(_Load^(0+256)+38)
  7280                           
  7281                           ;OverLoad_B1.c: 148: Load.ERROR = 1;
  7282  01A7  16A5               	bsf	_Load^(0+256),5
  7283                           
  7284                           ;OverLoad_B1.c: 170: }
  7285                           ;OverLoad_B1.c: 171: } else {
  7286  01A8  0008               	return
  7287  01A9                     l8468:	
  7288                           
  7289                           ;OverLoad_B1.c: 172: Load.ErrorCount = 0;
  7290  01A9  01CB               	clrf	(_Load^(0+256)+38)
  7291                           
  7292                           ;OverLoad_B1.c: 173: if (Load.Run == 1) {
  7293  01AA  1DA5               	btfss	_Load^(0+256),3
  7294  01AB  0008               	return
  7295                           
  7296                           ;OverLoad_B1.c: 174: Load.SafeCount++;
  7297  01AC  3001               	movlw	1
  7298  01AD  0020               	movlb	0	; select bank0
  7299  01AE  00A0               	movwf	??_Load_Main
  7300  01AF  0820               	movf	??_Load_Main,w
  7301  01B0  0022               	movlb	2	; select bank2
  7302  01B1  07CC               	addwf	(_Load^(0+256)+39),f
  7303                           
  7304                           ;OverLoad_B1.c: 175: if (Load.SafeCount >= 3) {
  7305  01B2  3003               	movlw	3
  7306  01B3  024C               	subwf	(_Load^(0+256)+39),w
  7307  01B4  1C03               	skipc
  7308  01B5  0008               	return
  7309                           
  7310                           ;OverLoad_B1.c: 176: Load.SafeCount = 0;
  7311  01B6  01CC               	clrf	(_Load^(0+256)+39)
  7312                           
  7313                           ;OverLoad_B1.c: 177: Load.OK = 1;
  7314  01B7  17A5               	bsf	_Load^(0+256),7
  7315                           
  7316                           ;OverLoad_B1.c: 178: Load.Run = 0;
  7317  01B8  11A5               	bcf	_Load^(0+256),3
  7318                           
  7319                           ;OverLoad_B1.c: 179: Load.Count = 0;
  7320  01B9  01CA               	clrf	(_Load^(0+256)+37)
  7321                           
  7322                           ;OverLoad_B1.c: 180: Load.TotalLoad = Load.AD;
  7323  01BA  0845               	movf	((_Load+1)^(0+256)+31),w
  7324  01BB  01AF               	clrf	((_Load+1)^(0+256)+9)
  7325  01BC  07AF               	addwf	((_Load+1)^(0+256)+9),f
  7326  01BD  0844               	movf	(_Load^(0+256)+31),w
  7327  01BE  01AE               	clrf	(_Load^(0+256)+9)
  7328  01BF  07AE               	addwf	(_Load^(0+256)+9),f
  7329                           
  7330                           ;OverLoad_B1.c: 184: }
  7331                           ;OverLoad_B1.c: 185: }
  7332                           ;OverLoad_B1.c: 208: }
  7333                           ;OverLoad_B1.c: 209: }
  7334                           ;OverLoad_B1.c: 210: }
  7335                           ;OverLoad_B1.c: 211: } else {
  7336  01C0  0008               	return
  7337  01C1                     l1272:	
  7338                           
  7339                           ;OverLoad_B1.c: 212: Load.ADtoGO = 1;
  7340  01C1  1625               	bsf	_Load^(0+256),4
  7341                           
  7342                           ;OverLoad_B1.c: 213: }
  7343                           ;OverLoad_B1.c: 214: } else {
  7344  01C2  0008               	return
  7345  01C3                     l1271:	
  7346                           
  7347                           ;OverLoad_B1.c: 216: if (Load.LightsON == 1) {
  7348  01C3  1D25               	btfss	_Load^(0+256),2
  7349  01C4  29D6               	goto	l8504
  7350                           
  7351                           ;OverLoad_B1.c: 217: Load.LightsON = 0;
  7352  01C5  1125               	bcf	_Load^(0+256),2
  7353                           
  7354                           ;OverLoad_B1.c: 219: Load.ADtoGO = 0;
  7355  01C6  1225               	bcf	_Load^(0+256),4
  7356                           
  7357                           ;OverLoad_B1.c: 220: Load.Time = 0;
  7358  01C7  01A6               	clrf	(_Load^(0+256)+1)
  7359  01C8  01A7               	clrf	((_Load+1)^(0+256)+1)
  7360                           
  7361                           ;OverLoad_B1.c: 221: setLoad_AH_AL_Restore();
  7362  01C9  3192  2200  3180   	fcall	_setLoad_AH_AL_Restore
  7363                           
  7364                           ;OverLoad_B1.c: 223: Load.ErrorCount = 0;
  7365  01CC  0022               	movlb	2	; select bank2
  7366  01CD  01CB               	clrf	(_Load^(0+256)+38)
  7367                           
  7368                           ;OverLoad_B1.c: 224: Load.SafeCount = 0;
  7369  01CE  01CC               	clrf	(_Load^(0+256)+39)
  7370                           
  7371                           ;OverLoad_B1.c: 226: Load.ADH = 0;
  7372  01CF  01AA               	clrf	(_Load^(0+256)+5)
  7373  01D0  01AB               	clrf	((_Load+1)^(0+256)+5)
  7374                           
  7375                           ;OverLoad_B1.c: 227: Load.ADL = 0;
  7376  01D1  01AC               	clrf	(_Load^(0+256)+7)
  7377  01D2  01AD               	clrf	((_Load+1)^(0+256)+7)
  7378                           
  7379                           ;OverLoad_B1.c: 233: Load.Run = 0;
  7380  01D3  11A5               	bcf	_Load^(0+256),3
  7381                           
  7382                           ;OverLoad_B1.c: 234: Load.Count = 0;
  7383  01D4  01CA               	clrf	(_Load^(0+256)+37)
  7384                           
  7385                           ;OverLoad_B1.c: 235: Load.OK = 0;
  7386  01D5  13A5               	bcf	_Load^(0+256),7
  7387  01D6                     l8504:	
  7388                           
  7389                           ;OverLoad_B1.c: 257: }
  7390                           ;OverLoad_B1.c: 258: if (Load.ERROR == 1) {
  7391  01D6  1EA5               	btfss	_Load^(0+256),5
  7392  01D7  0008               	return
  7393                           
  7394                           ;OverLoad_B1.c: 259: Load.ErrorTime++;
  7395  01D8  3001               	movlw	1
  7396  01D9  07A8               	addwf	(_Load^(0+256)+3),f
  7397  01DA  3000               	movlw	0
  7398  01DB  3DA9               	addwfc	((_Load+1)^(0+256)+3),f
  7399                           
  7400                           ;OverLoad_B1.c: 260: if (Load.ErrorTime >= (10000 / 20)) {
  7401  01DC  3001               	movlw	1
  7402  01DD  0229               	subwf	((_Load+1)^(0+256)+3),w
  7403  01DE  30F4               	movlw	244
  7404  01DF  1903               	skipnz
  7405  01E0  0228               	subwf	(_Load^(0+256)+3),w
  7406  01E1  1C03               	skipc
  7407  01E2  0008               	return
  7408                           
  7409                           ;OverLoad_B1.c: 261: Load.ErrorTime = 0;
  7410  01E3  01A8               	clrf	(_Load^(0+256)+3)
  7411  01E4  01A9               	clrf	((_Load+1)^(0+256)+3)
  7412                           
  7413                           ;OverLoad_B1.c: 262: Load.ERROR = 0;
  7414  01E5  12A5               	bcf	_Load^(0+256),5
  7415                           
  7416                           ;OverLoad_B1.c: 263: }
  7417                           ;OverLoad_B1.c: 264: }
  7418                           ;OverLoad_B1.c: 265: }
  7419                           ;OverLoad_B1.c: 266: } else {
  7420  01E6  0008               	return
  7421  01E7                     l1261:	
  7422                           
  7423                           ;OverLoad_B1.c: 267: if (myMain.PowerON == 1) {
  7424  01E7  0021               	movlb	1	; select bank1
  7425  01E8  1C40               	btfss	_myMain^(0+128),0
  7426  01E9  0008               	return
  7427                           
  7428                           ;OverLoad_B1.c: 268: Load.Enable = 1;
  7429  01EA  0022               	movlb	2	; select bank2
  7430  01EB  1425               	bsf	_Load^(0+256),0
  7431  01EC  0008               	return
  7432  01ED                     __end_of_Load_Main:	
  7433                           
  7434                           	psect	text31
  7435  10AC                     __ptext31:	
  7436 ;; *************** function _getMain_Lights_Count *****************
  7437 ;; Defined at:
  7438 ;;		line 463 in file "../src/main_B1.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;		None
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  count           1    5[COMMON] unsigned char 
  7443 ;;  status2         1    4[COMMON] unsigned char 
  7444 ;;  status1         1    3[COMMON] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      unsigned char 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;Total ram usage:        4 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    3
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_Load_Main
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           
  7469                           ;psect for function _getMain_Lights_Count
  7470  10AC                     _getMain_Lights_Count:	
  7471                           
  7472                           ;main_B1.c: 464: char count = 0;
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _getMain_Lights_Count: [wreg+status,2+status,0]
  7476  10AC  01F5               	clrf	getMain_Lights_Count@count
  7477                           
  7478                           ;main_B1.c: 468: char status1 = DimmerIntr1.ControlStatus == 1 ? 1 : 0;
  7479  10AD  3000               	movlw	0
  7480  10AE  0021               	movlb	1	; select bank1
  7481  10AF  19A0               	btfsc	_DimmerIntr1^(0+128),3
  7482  10B0  3001               	movlw	1
  7483  10B1  00F3               	movwf	getMain_Lights_Count@status1
  7484                           
  7485                           ;main_B1.c: 471: char status2 = DimmerIntr2.ControlStatus == 1 ? 1 : 0;
  7486  10B2  3000               	movlw	0
  7487  10B3  19B0               	btfsc	_DimmerIntr2^(0+128),3
  7488  10B4  3001               	movlw	1
  7489  10B5  00F4               	movwf	getMain_Lights_Count@status2
  7490                           
  7491                           ;main_B1.c: 494: count = (status1 + status2);
  7492  10B6  0873               	movf	getMain_Lights_Count@status1,w
  7493  10B7  0774               	addwf	getMain_Lights_Count@status2,w
  7494  10B8  00F2               	movwf	??_getMain_Lights_Count
  7495  10B9  0872               	movf	??_getMain_Lights_Count,w
  7496  10BA  00F5               	movwf	getMain_Lights_Count@count
  7497                           
  7498                           ;main_B1.c: 499: return count;
  7499  10BB  0875               	movf	getMain_Lights_Count@count,w
  7500  10BC  0008               	return
  7501  10BD                     __end_of_getMain_Lights_Count:	
  7502                           
  7503                           	psect	text32
  7504  1F1D                     __ptext32:	
  7505 ;; *************** function _getDimmer_Load_Status *****************
  7506 ;; Defined at:
  7507 ;;		line 1346 in file "../src/Dimmer_B1.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  status          1    2[COMMON] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      unsigned char 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;Total ram usage:        1 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    3
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_Load_Main
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           
  7536                           ;psect for function _getDimmer_Load_Status
  7537  1F1D                     _getDimmer_Load_Status:	
  7538                           
  7539                           ;Dimmer_B1.c: 1347: char status = Dimmer.Load_Status == 1 ? 1 : 0;
  7540                           
  7541                           ;incstack = 0
  7542                           ; Regs used in _getDimmer_Load_Status: [wreg+status,2]
  7543  1F1D  3000               	movlw	0
  7544  1F1E  0022               	movlb	2	; select bank2
  7545  1F1F  1920               	btfsc	_Dimmer^(0+256),2
  7546  1F20  3001               	movlw	1
  7547  1F21  00F2               	movwf	getDimmer_Load_Status@status
  7548                           
  7549                           ;Dimmer_B1.c: 1348: return status;
  7550  1F22  0872               	movf	getDimmer_Load_Status@status,w
  7551  1F23  0008               	return
  7552  1F24                     __end_of_getDimmer_Load_Status:	
  7553                           
  7554                           	psect	text33
  7555  1F16                     __ptext33:	
  7556 ;; *************** function _getDimmer_LoadGO *****************
  7557 ;; Defined at:
  7558 ;;		line 1340 in file "../src/Dimmer_B1.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  loadgo          1    2[COMMON] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      unsigned char 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;Total ram usage:        1 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    3
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_Load_Main
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           
  7587                           ;psect for function _getDimmer_LoadGO
  7588  1F16                     _getDimmer_LoadGO:	
  7589                           
  7590                           ;Dimmer_B1.c: 1341: char loadgo = Dimmer.LoadGO == 1 ? 1 : 0;
  7591                           
  7592                           ;incstack = 0
  7593                           ; Regs used in _getDimmer_LoadGO: [wreg+status,2]
  7594  1F16  3000               	movlw	0
  7595  1F17  0022               	movlb	2	; select bank2
  7596  1F18  18A0               	btfsc	_Dimmer^(0+256),1
  7597  1F19  3001               	movlw	1
  7598  1F1A  00F2               	movwf	getDimmer_LoadGO@loadgo
  7599                           
  7600                           ;Dimmer_B1.c: 1342: return loadgo;
  7601  1F1B  0872               	movf	getDimmer_LoadGO@loadgo,w
  7602  1F1C  0008               	return
  7603  1F1D                     __end_of_getDimmer_LoadGO:	
  7604                           
  7605                           	psect	text34
  7606  1FE3                     __ptext34:	
  7607 ;; *************** function _getAll_DimmerIntr_Dimming_Sw_RF *****************
  7608 ;; Defined at:
  7609 ;;		line 350 in file "../src/Dimmer_B1.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;		None
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  status          1    3[COMMON] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  1    wreg      unsigned char 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;Total ram usage:        3 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    3
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_Load_Main
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function _getAll_DimmerIntr_Dimming_Sw_RF
  7639  1FE3                     _getAll_DimmerIntr_Dimming_Sw_RF:	
  7640                           
  7641                           ;Dimmer_B1.c: 351: char status = 0;
  7642                           
  7643                           ;incstack = 0
  7644                           ; Regs used in _getAll_DimmerIntr_Dimming_Sw_RF: [wreg+status,2]
  7645  1FE3  01F3               	clrf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7646                           
  7647                           ;Dimmer_B1.c: 358: status = (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr2.Dimming_Sw == 1)
      +                           ? 1 : 0;
  7648  1FE4  01F4               	clrf	_getAll_DimmerIntr_Dimming_Sw_RF$2221
  7649  1FE5  0AF4               	incf	_getAll_DimmerIntr_Dimming_Sw_RF$2221,f
  7650  1FE6  0021               	movlb	1	; select bank1
  7651  1FE7  1E20               	btfss	_DimmerIntr1^(0+128),4
  7652  1FE8  1A30               	btfsc	_DimmerIntr2^(0+128),4
  7653  1FE9  2FEB               	goto	l6186
  7654  1FEA  01F4               	clrf	_getAll_DimmerIntr_Dimming_Sw_RF$2221
  7655  1FEB                     l6186:	
  7656  1FEB  0874               	movf	_getAll_DimmerIntr_Dimming_Sw_RF$2221,w
  7657  1FEC  00F2               	movwf	??_getAll_DimmerIntr_Dimming_Sw_RF
  7658  1FED  0872               	movf	??_getAll_DimmerIntr_Dimming_Sw_RF,w
  7659  1FEE  00F3               	movwf	getAll_DimmerIntr_Dimming_Sw_RF@status
  7660                           
  7661                           ;Dimmer_B1.c: 380: return status;
  7662  1FEF  0873               	movf	getAll_DimmerIntr_Dimming_Sw_RF@status,w
  7663  1FF0  0008               	return
  7664  1FF1                     __end_of_getAll_DimmerIntr_Dimming_Sw_RF:	
  7665                           
  7666                           	psect	text35
  7667  1236                     __ptext35:	
  7668 ;; *************** function ___wmul *****************
  7669 ;; Defined at:
  7670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;  multiplier      2    2[COMMON] unsigned int 
  7673 ;;  multiplicand    2    4[COMMON] unsigned int 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  product         2    6[COMMON] unsigned int 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  2    2[COMMON] unsigned int 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;Total ram usage:        6 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; Hardware stack levels required when called:    3
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_Load_Main
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function ___wmul
  7701  1236                     ___wmul:	
  7702                           
  7703                           ;incstack = 0
  7704                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7705  1236  01F6               	clrf	___wmul@product
  7706  1237  01F7               	clrf	___wmul@product+1
  7707  1238                     l6800:	
  7708  1238  1C72               	btfss	___wmul@multiplier,0
  7709  1239  2A3E               	goto	l2243
  7710  123A  0874               	movf	___wmul@multiplicand,w
  7711  123B  07F6               	addwf	___wmul@product,f
  7712  123C  0875               	movf	___wmul@multiplicand+1,w
  7713  123D  3DF7               	addwfc	___wmul@product+1,f
  7714  123E                     l2243:	
  7715  123E  3001               	movlw	1
  7716  123F                     u7645:	
  7717  123F  35F4               	lslf	___wmul@multiplicand,f
  7718  1240  0DF5               	rlf	___wmul@multiplicand+1,f
  7719  1241  0B89               	decfsz	9,f
  7720  1242  2A3F               	goto	u7645
  7721  1243  3001               	movlw	1
  7722  1244                     u7655:	
  7723  1244  36F3               	lsrf	___wmul@multiplier+1,f
  7724  1245  0CF2               	rrf	___wmul@multiplier,f
  7725  1246  0B89               	decfsz	9,f
  7726  1247  2A44               	goto	u7655
  7727  1248  0873               	movf	___wmul@multiplier+1,w
  7728  1249  0472               	iorwf	___wmul@multiplier,w
  7729  124A  1D03               	skipz
  7730  124B  2A38               	goto	l6800
  7731  124C  0877               	movf	___wmul@product+1,w
  7732  124D  01F3               	clrf	?___wmul+1
  7733  124E  07F3               	addwf	?___wmul+1,f
  7734  124F  0876               	movf	___wmul@product,w
  7735  1250  01F2               	clrf	?___wmul
  7736  1251  07F2               	addwf	?___wmul,f
  7737  1252  0008               	return
  7738  1253                     __end_of___wmul:	
  7739                           
  7740                           	psect	text36
  7741  14AC                     __ptext36:	
  7742 ;; *************** function ___lwdiv *****************
  7743 ;; Defined at:
  7744 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  divisor         2    2[COMMON] unsigned int 
  7747 ;;  dividend        2    4[COMMON] unsigned int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  quotient        2    7[COMMON] unsigned int 
  7750 ;;  counter         1    9[COMMON] unsigned char 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  2    2[COMMON] unsigned int 
  7753 ;; Registers used:
  7754 ;;		wreg, status,2, status,0
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;Total ram usage:        8 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    3
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_Load_Main
  7771 ;;		_setTemp_Main
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function ___lwdiv
  7777  14AC                     ___lwdiv:	
  7778                           
  7779                           ;incstack = 0
  7780                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7781  14AC  01F7               	clrf	___lwdiv@quotient
  7782  14AD  01F8               	clrf	___lwdiv@quotient+1
  7783  14AE  0873               	movf	___lwdiv@divisor+1,w
  7784  14AF  0472               	iorwf	___lwdiv@divisor,w
  7785  14B0  1903               	skipnz
  7786  14B1  2CDB               	goto	l6108
  7787  14B2  01F9               	clrf	___lwdiv@counter
  7788  14B3  0AF9               	incf	___lwdiv@counter,f
  7789  14B4                     l6096:	
  7790  14B4  1BF3               	btfsc	___lwdiv@divisor+1,7
  7791  14B5  2CC0               	goto	l6098
  7792  14B6  3001               	movlw	1
  7793  14B7                     u6305:	
  7794  14B7  35F2               	lslf	___lwdiv@divisor,f
  7795  14B8  0DF3               	rlf	___lwdiv@divisor+1,f
  7796  14B9  0B89               	decfsz	9,f
  7797  14BA  2CB7               	goto	u6305
  7798  14BB  3001               	movlw	1
  7799  14BC  00F6               	movwf	??___lwdiv
  7800  14BD  0876               	movf	??___lwdiv,w
  7801  14BE  07F9               	addwf	___lwdiv@counter,f
  7802  14BF  2CB4               	goto	l6096
  7803  14C0                     l6098:	
  7804  14C0  3001               	movlw	1
  7805  14C1                     u6325:	
  7806  14C1  35F7               	lslf	___lwdiv@quotient,f
  7807  14C2  0DF8               	rlf	___lwdiv@quotient+1,f
  7808  14C3  0B89               	decfsz	9,f
  7809  14C4  2CC1               	goto	u6325
  7810  14C5  0873               	movf	___lwdiv@divisor+1,w
  7811  14C6  0275               	subwf	___lwdiv@dividend+1,w
  7812  14C7  1D03               	skipz
  7813  14C8  2CCB               	goto	u6335
  7814  14C9  0872               	movf	___lwdiv@divisor,w
  7815  14CA  0274               	subwf	___lwdiv@dividend,w
  7816  14CB                     u6335:	
  7817  14CB  1C03               	skipc
  7818  14CC  2CD2               	goto	l6104
  7819  14CD  0872               	movf	___lwdiv@divisor,w
  7820  14CE  02F4               	subwf	___lwdiv@dividend,f
  7821  14CF  0873               	movf	___lwdiv@divisor+1,w
  7822  14D0  3BF5               	subwfb	___lwdiv@dividend+1,f
  7823  14D1  1477               	bsf	___lwdiv@quotient,0
  7824  14D2                     l6104:	
  7825  14D2  3001               	movlw	1
  7826  14D3                     u6345:	
  7827  14D3  36F3               	lsrf	___lwdiv@divisor+1,f
  7828  14D4  0CF2               	rrf	___lwdiv@divisor,f
  7829  14D5  0B89               	decfsz	9,f
  7830  14D6  2CD3               	goto	u6345
  7831  14D7  3001               	movlw	1
  7832  14D8  02F9               	subwf	___lwdiv@counter,f
  7833  14D9  1D03               	btfss	3,2
  7834  14DA  2CC0               	goto	l6098
  7835  14DB                     l6108:	
  7836  14DB  0878               	movf	___lwdiv@quotient+1,w
  7837  14DC  01F3               	clrf	?___lwdiv+1
  7838  14DD  07F3               	addwf	?___lwdiv+1,f
  7839  14DE  0877               	movf	___lwdiv@quotient,w
  7840  14DF  01F2               	clrf	?___lwdiv
  7841  14E0  07F2               	addwf	?___lwdiv,f
  7842  14E1  0008               	return
  7843  14E2                     __end_of___lwdiv:	
  7844                           
  7845                           	psect	text37
  7846  1EEC                     __ptext37:	
  7847 ;; *************** function _Load_Initialization *****************
  7848 ;; Defined at:
  7849 ;;		line 9 in file "../src/OverLoad_B1.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;		None               void
  7856 ;; Registers used:
  7857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    4
  7870 ;; This function calls:
  7871 ;;		_setLoad_AH_AL_Restore
  7872 ;; This function is called by:
  7873 ;;		_main
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           
  7878                           ;psect for function _Load_Initialization
  7879  1EEC                     _Load_Initialization:	
  7880                           
  7881                           ;OverLoad_B1.c: 11: setLoad_AH_AL_Restore();
  7882                           
  7883                           ;incstack = 0
  7884                           ; Regs used in _Load_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7885  1EEC  3192  2200         	fcall	_setLoad_AH_AL_Restore
  7886  1EEE  0008               	return
  7887  1EEF                     __end_of_Load_Initialization:	
  7888                           
  7889                           	psect	text38
  7890  1200                     __ptext38:	
  7891 ;; *************** function _setLoad_AH_AL_Restore *****************
  7892 ;; Defined at:
  7893 ;;		line 294 in file "../src/OverLoad_B1.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;		None
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;  i               1    3[COMMON] unsigned char 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;		None               void
  7900 ;; Registers used:
  7901 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7911 ;;Total ram usage:        2 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    3
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_Load_Initialization
  7918 ;;		_Load_Main
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           
  7923                           ;psect for function _setLoad_AH_AL_Restore
  7924  1200                     _setLoad_AH_AL_Restore:	
  7925                           
  7926                           ;OverLoad_B1.c: 295: char i;
  7927                           ;OverLoad_B1.c: 296: for (i = 0; i < 5; i++) {
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l+fsr1h+status,2+status,0]
  7931  1200  01F3               	clrf	setLoad_AH_AL_Restore@i
  7932  1201                     L6:	
  7933  1201  3005               	movlw	5
  7934  1202  0273               	subwf	setLoad_AH_AL_Restore@i,w
  7935  1203  1803               	btfsc	3,0
  7936  1204  0008               	return
  7937                           
  7938                           ;OverLoad_B1.c: 297: Load.AH[i] = 0;
  7939  1205  3573               	lslf	setLoad_AH_AL_Restore@i,w
  7940  1206  3E30               	addlw	(_Load+11)& (0+255)
  7941  1207  0086               	movwf	6
  7942  1208  3001               	movlw	1	; select bank2/3
  7943  1209  0087               	movwf	7
  7944  120A  3000               	movlw	0
  7945  120B  3FC0               	movwi [0]fsr1
  7946  120C  3FC1               	movwi [1]fsr1
  7947                           
  7948                           ;OverLoad_B1.c: 298: Load.AL[i] = 0xffff;
  7949  120D  3573               	lslf	setLoad_AH_AL_Restore@i,w
  7950  120E  3E3A               	addlw	(_Load+21)& (0+255)
  7951  120F  0086               	movwf	6
  7952  1210  3001               	movlw	1	; select bank2/3
  7953  1211  0087               	movwf	7
  7954  1212  30FF               	movlw	255
  7955  1213  3FC0               	movwi [0]fsr1
  7956  1214  30FF               	movlw	255
  7957  1215  3FC1               	movwi [1]fsr1
  7958  1216  3001               	movlw	1
  7959  1217  00F2               	movwf	??_setLoad_AH_AL_Restore
  7960  1218  0872               	movf	??_setLoad_AH_AL_Restore,w
  7961  1219  07F3               	addwf	setLoad_AH_AL_Restore@i,f
  7962  121A  2A01               	goto	L6
  7963  121B                     __end_of_setLoad_AH_AL_Restore:	
  7964                           
  7965                           	psect	text39
  7966  1FCB                     __ptext39:	
  7967 ;; *************** function _LED_Main *****************
  7968 ;; Defined at:
  7969 ;;		line 47 in file "../src/LED_B1.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;		None               void
  7976 ;; Registers used:
  7977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;Total ram usage:        0 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    5
  7990 ;; This function calls:
  7991 ;;		_setLED_Main
  7992 ;; This function is called by:
  7993 ;;		_main
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _LED_Main
  7999  1FCB                     _LED_Main:	
  8000                           
  8001                           ;LED_B1.c: 58: setLED_Main(1);
  8002                           
  8003                           ;incstack = 0
  8004                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8005  1FCB  3001               	movlw	1
  8006  1FCC  3195  25FB  319F   	fcall	_setLED_Main
  8007                           
  8008                           ;LED_B1.c: 61: setLED_Main(2);
  8009  1FCF  3002               	movlw	2
  8010  1FD0  3195  25FB  319F   	fcall	_setLED_Main
  8011                           
  8012                           ;LED_B1.c: 67: setLED_Main(99);
  8013  1FD3  3063               	movlw	99
  8014  1FD4  3195  25FB         	fcall	_setLED_Main
  8015  1FD6  0008               	return
  8016  1FD7                     __end_of_LED_Main:	
  8017                           
  8018                           	psect	text40
  8019  15FB                     __ptext40:	
  8020 ;; *************** function _setLED_Main *****************
  8021 ;; Defined at:
  8022 ;;		line 229 in file "../src/LED_B1.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  led             1    wreg     unsigned char 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  led             1    6[COMMON] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;		None               void
  8029 ;; Registers used:
  8030 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;Total ram usage:        3 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    4
  8043 ;; This function calls:
  8044 ;;		_LedPointSelect
  8045 ;; This function is called by:
  8046 ;;		_LED_Main
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           
  8051                           ;psect for function _setLED_Main
  8052  15FB                     _setLED_Main:	
  8053                           
  8054                           ;incstack = 0
  8055                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8056                           ;setLED_Main@led stored from wreg
  8057  15FB  00F6               	movwf	setLED_Main@led
  8058                           
  8059                           ;LED_B1.c: 230: LedPointSelect(led);
  8060  15FC  0876               	movf	setLED_Main@led,w
  8061  15FD  3191  21CC  3195   	fcall	_LedPointSelect
  8062                           
  8063                           ;LED_B1.c: 231: if (LED->GO == 1) {
  8064  1600  087B               	movf	_LED,w
  8065  1601  0086               	movwf	6
  8066  1602  3001               	movlw	1	; select bank2/3
  8067  1603  0087               	movwf	7
  8068  1604  1C81               	btfss	1,1
  8069  1605  0008               	return
  8070                           
  8071                           ;LED_B1.c: 232: LED->Time++;
  8072  1606  0A7B               	incf	_LED,w
  8073  1607  0086               	movwf	6
  8074  1608  3001               	movlw	1	; select bank2/3
  8075  1609  0087               	movwf	7
  8076  160A  3001               	movlw	1
  8077  160B  0781               	addwf	1,f
  8078  160C  3141               	addfsr 1,1
  8079  160D  1803               	skipnc
  8080  160E  0A81               	incf	1,f
  8081                           
  8082                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  8083  160F  0A7B               	incf	_LED,w
  8084  1610  0086               	movwf	6
  8085  1611  3001               	movlw	1	; select bank2/3
  8086  1612  0087               	movwf	7
  8087  1613  3F40               	moviw [0]fsr1
  8088  1614  00F4               	movwf	??_setLED_Main
  8089  1615  3F41               	moviw [1]fsr1
  8090  1616  00F5               	movwf	??_setLED_Main+1
  8091  1617  3000               	movlw	0
  8092  1618  0275               	subwf	??_setLED_Main+1,w
  8093  1619  3019               	movlw	25
  8094  161A  1903               	skipnz
  8095  161B  0274               	subwf	??_setLED_Main,w
  8096  161C  1C03               	skipc
  8097  161D  0008               	return
  8098                           
  8099                           ;LED_B1.c: 234: LED->Time = 0;
  8100  161E  0A7B               	incf	_LED,w
  8101  161F  0086               	movwf	6
  8102  1620  3001               	movlw	1	; select bank2/3
  8103  1621  0087               	movwf	7
  8104  1622  3000               	movlw	0
  8105  1623  3FC0               	movwi [0]fsr1
  8106  1624  3FC1               	movwi [1]fsr1
  8107                           
  8108                           ;LED_B1.c: 237: if (led == 1) {
  8109  1625  0876               	movf	setLED_Main@led,w
  8110  1626  3A01               	xorlw	1
  8111  1627  1D03               	skipz
  8112  1628  2E2C               	goto	l875
  8113                           
  8114                           ;LED_B1.c: 238: RC7 = RC7 == 1 ? 0 : 1;
  8115  1629  3080               	movlw	128
  8116  162A  0020               	movlb	0	; select bank0
  8117  162B  068E               	xorwf	14,f
  8118  162C                     l875:	
  8119                           
  8120                           ;LED_B1.c: 239: }
  8121                           ;LED_B1.c: 242: if (led == 2) {
  8122  162C  0876               	movf	setLED_Main@led,w
  8123  162D  3A02               	xorlw	2
  8124  162E  1D03               	skipz
  8125  162F  2E33               	goto	l876
  8126                           
  8127                           ;LED_B1.c: 243: RA3 = RA3 == 1 ? 0 : 1;
  8128  1630  3008               	movlw	8
  8129  1631  0020               	movlb	0	; select bank0
  8130  1632  068C               	xorwf	12,f
  8131  1633                     l876:	
  8132                           
  8133                           ;LED_B1.c: 244: }
  8134                           ;LED_B1.c: 252: if (led == 99) {
  8135  1633  0876               	movf	setLED_Main@led,w
  8136  1634  3A63               	xorlw	99
  8137  1635  1D03               	skipz
  8138  1636  0008               	return
  8139                           
  8140                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  8141  1637  3020               	movlw	32
  8142  1638  0020               	movlb	0	; select bank0
  8143  1639  068D               	xorwf	13,f
  8144  163A  0008               	return
  8145  163B                     __end_of_setLED_Main:	
  8146                           
  8147                           	psect	text41
  8148  1FBF                     __ptext41:	
  8149 ;; *************** function _LED_Initialization *****************
  8150 ;; Defined at:
  8151 ;;		line 31 in file "../src/LED_B1.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;		None               void
  8158 ;; Registers used:
  8159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;Total ram usage:        0 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    6
  8172 ;; This function calls:
  8173 ;;		_setLED_Initialization
  8174 ;; This function is called by:
  8175 ;;		_main
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function _LED_Initialization
  8181  1FBF                     _LED_Initialization:	
  8182                           
  8183                           ;LED_B1.c: 33: setLED_Initialization(1);
  8184                           
  8185                           ;incstack = 0
  8186                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8187  1FBF  3001               	movlw	1
  8188  1FC0  3190  204C  319F   	fcall	_setLED_Initialization
  8189                           
  8190                           ;LED_B1.c: 36: setLED_Initialization(2);
  8191  1FC3  3002               	movlw	2
  8192  1FC4  3190  204C  319F   	fcall	_setLED_Initialization
  8193                           
  8194                           ;LED_B1.c: 42: setLED_Initialization(99);
  8195  1FC7  3063               	movlw	99
  8196  1FC8  3190  204C         	fcall	_setLED_Initialization
  8197  1FCA  0008               	return
  8198  1FCB                     __end_of_LED_Initialization:	
  8199                           
  8200                           	psect	text42
  8201  104C                     __ptext42:	
  8202 ;; *************** function _setLED_Initialization *****************
  8203 ;; Defined at:
  8204 ;;		line 74 in file "../src/LED_B1.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;  led             1    wreg     unsigned char 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;  led             1    6[COMMON] unsigned char 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;		None               void
  8211 ;; Registers used:
  8212 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8222 ;;Total ram usage:        1 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    5
  8225 ;; This function calls:
  8226 ;;		_LedPointSelect
  8227 ;;		_setLED
  8228 ;; This function is called by:
  8229 ;;		_LED_Initialization
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           
  8234                           ;psect for function _setLED_Initialization
  8235  104C                     _setLED_Initialization:	
  8236                           
  8237                           ;incstack = 0
  8238                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8239                           ;setLED_Initialization@led stored from wreg
  8240  104C  00F6               	movwf	setLED_Initialization@led
  8241                           
  8242                           ;LED_B1.c: 75: LedPointSelect(led);
  8243  104D  0876               	movf	setLED_Initialization@led,w
  8244  104E  3191  21CC  3190   	fcall	_LedPointSelect
  8245                           
  8246                           ;LED_B1.c: 76: LED->Enable = 1;
  8247  1051  087B               	movf	_LED,w
  8248  1052  0086               	movwf	6
  8249  1053  3001               	movlw	1	; select bank2/3
  8250  1054  0087               	movwf	7
  8251  1055  1401               	bsf	1,0
  8252                           
  8253                           ;LED_B1.c: 77: setLED(led, 0);
  8254  1056  01F4               	clrf	setLED@command
  8255  1057  0876               	movf	setLED_Initialization@led,w
  8256  1058  3188  20AC         	fcall	_setLED
  8257  105A  0008               	return
  8258  105B                     __end_of_setLED_Initialization:	
  8259                           
  8260                           	psect	text43
  8261  163B                     __ptext43:	
  8262 ;; *************** function _Flash_Memory_Main *****************
  8263 ;; Defined at:
  8264 ;;		line 980 in file "../src/MCU_B1.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;  key_Status      1    0[BANK0 ] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;		None               void
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8282 ;;Total ram usage:        3 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    6
  8285 ;; This function calls:
  8286 ;;		_Flash_Memory_Modify
  8287 ;;		_getAll_Sw_KeyStatus
  8288 ;;		_getMain_All_LightsStatus
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           
  8295                           ;psect for function _Flash_Memory_Main
  8296  163B                     _Flash_Memory_Main:	
  8297                           
  8298                           ;MCU_B1.c: 981: char key_Status = 0;
  8299                           
  8300                           ;incstack = 0
  8301                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8302  163B  0020               	movlb	0	; select bank0
  8303  163C  01A0               	clrf	Flash_Memory_Main@key_Status
  8304                           
  8305                           ;MCU_B1.c: 983: key_Status = getAll_Sw_KeyStatus();
  8306  163D  3190  209B  3196   	fcall	_getAll_Sw_KeyStatus
  8307  1640  00F8               	movwf	??_Flash_Memory_Main
  8308  1641  0878               	movf	??_Flash_Memory_Main,w
  8309  1642  0020               	movlb	0	; select bank0
  8310  1643  00A0               	movwf	Flash_Memory_Main@key_Status
  8311                           
  8312                           ;MCU_B1.c: 985: if (Memory.Modify == 1) {
  8313  1644  0023               	movlb	3	; select bank3
  8314  1645  1C54               	btfss	(_Memory^(0+384)+36),0
  8315  1646  0008               	return
  8316                           
  8317                           ;MCU_B1.c: 986: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
  8318  1647  0020               	movlb	0	; select bank0
  8319  1648  01A1               	clrf	_Flash_Memory_Main$3231
  8320  1649  3190  202E  3196   	fcall	_getMain_All_LightsStatus
  8321  164C  3800               	iorlw	0
  8322  164D  1D03               	skipz
  8323  164E  2E55               	goto	l8336
  8324  164F  0020               	movlb	0	; select bank0
  8325  1650  08A0               	movf	Flash_Memory_Main@key_Status,f
  8326  1651  1D03               	skipz
  8327  1652  2E55               	goto	l8336
  8328  1653  01A1               	clrf	_Flash_Memory_Main$3231
  8329  1654  0AA1               	incf	_Flash_Memory_Main$3231,f
  8330  1655                     l8336:	
  8331  1655  0020               	movlb	0	; select bank0
  8332  1656  0821               	movf	_Flash_Memory_Main$3231,w
  8333  1657  0023               	movlb	3	; select bank3
  8334  1658  10D4               	bcf	(_Memory^(0+384)+36),1
  8335  1659  1D03               	skipz
  8336  165A  14D4               	bsf	(_Memory^(0+384)+36),1
  8337                           
  8338                           ;MCU_B1.c: 987: if (Memory.GO == 1) {
  8339  165B  1CD4               	btfss	(_Memory^(0+384)+36),1
  8340  165C  2E76               	goto	l1123
  8341                           
  8342                           ;MCU_B1.c: 988: Memory.Runtime = 1;
  8343  165D  15D4               	bsf	(_Memory^(0+384)+36),3
  8344                           
  8345                           ;MCU_B1.c: 989: Memory.Time++;
  8346  165E  3001               	movlw	1
  8347  165F  07D2               	addwf	(_Memory^(0+384)+34),f
  8348  1660  3000               	movlw	0
  8349  1661  3DD3               	addwfc	((_Memory+1)^(0+384)+34),f
  8350                           
  8351                           ;MCU_B1.c: 990: if (Memory.Time == (200 / 20)) {
  8352  1662  3022               	movlw	34
  8353  1663  3EB0               	addlw	_Memory& (0+255)
  8354  1664  0086               	movwf	6
  8355  1665  3001               	movlw	1	; select bank3/4
  8356  1666  0087               	movwf	7
  8357  1667  3F40               	moviw [0]fsr1
  8358  1668  3A0A               	xorlw	10
  8359  1669  1D03               	skipz
  8360  166A  2E6D               	goto	u10125
  8361  166B  3F41               	moviw [1]fsr1
  8362  166C  3A00               	xorlw	0
  8363  166D                     u10125:	
  8364  166D  1D03               	skipz
  8365  166E  0008               	return
  8366                           
  8367                           ;MCU_B1.c: 991: Memory.Time = 0;
  8368  166F  01D2               	clrf	(_Memory^(0+384)+34)
  8369  1670  01D3               	clrf	((_Memory+1)^(0+384)+34)
  8370                           
  8371                           ;MCU_B1.c: 992: Memory.Modify = 0;
  8372  1671  1054               	bcf	(_Memory^(0+384)+36),0
  8373                           
  8374                           ;MCU_B1.c: 993: Memory.GO = 0;
  8375  1672  10D4               	bcf	(_Memory^(0+384)+36),1
  8376                           
  8377                           ;MCU_B1.c: 994: Flash_Memory_Modify();
  8378  1673  3187  275E         	fcall	_Flash_Memory_Modify
  8379                           
  8380                           ;MCU_B1.c: 995: }
  8381                           ;MCU_B1.c: 996: } else {
  8382  1675  0008               	return
  8383  1676                     l1123:	
  8384                           
  8385                           ;MCU_B1.c: 997: if (Memory.Runtime == 1) {
  8386  1676  1DD4               	btfss	(_Memory^(0+384)+36),3
  8387  1677  0008               	return
  8388                           
  8389                           ;MCU_B1.c: 998: Memory.Runtime = 0;
  8390  1678  11D4               	bcf	(_Memory^(0+384)+36),3
  8391                           
  8392                           ;MCU_B1.c: 999: Memory.Time = 0;
  8393  1679  01D2               	clrf	(_Memory^(0+384)+34)
  8394  167A  01D3               	clrf	((_Memory+1)^(0+384)+34)
  8395  167B  0008               	return
  8396  167C                     __end_of_Flash_Memory_Main:	
  8397                           
  8398                           	psect	text44
  8399  109B                     __ptext44:	
  8400 ;; *************** function _getAll_Sw_KeyStatus *****************
  8401 ;; Defined at:
  8402 ;;		line 286 in file "../src/Switch_B1.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  status          1    3[COMMON] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      unsigned char 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        3 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    3
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_Flash_Memory_Main
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _getAll_Sw_KeyStatus
  8432  109B                     _getAll_Sw_KeyStatus:	
  8433                           
  8434                           ;Switch_B1.c: 287: char status = 0;
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
  8438  109B  01F3               	clrf	getAll_Sw_KeyStatus@status
  8439                           
  8440                           ;Switch_B1.c: 301: status = RA0 == 1 || RB1 == 1 || RA6 == 1 || RA4 == 1 ? 1 : 0;
  8441  109C  01F4               	clrf	_getAll_Sw_KeyStatus$5960
  8442  109D  0AF4               	incf	_getAll_Sw_KeyStatus$5960,f
  8443  109E  0020               	movlb	0	; select bank0
  8444  109F  1C0C               	btfss	12,0	;volatile
  8445  10A0  188D               	btfsc	13,1	;volatile
  8446  10A1  28A6               	goto	l8084
  8447  10A2  1F0C               	btfss	12,6	;volatile
  8448  10A3  1A0C               	btfsc	12,4	;volatile
  8449  10A4  28A6               	goto	l8084
  8450  10A5  01F4               	clrf	_getAll_Sw_KeyStatus$5960
  8451  10A6                     l8084:	
  8452  10A6  0874               	movf	_getAll_Sw_KeyStatus$5960,w
  8453  10A7  00F2               	movwf	??_getAll_Sw_KeyStatus
  8454  10A8  0872               	movf	??_getAll_Sw_KeyStatus,w
  8455  10A9  00F3               	movwf	getAll_Sw_KeyStatus@status
  8456                           
  8457                           ;Switch_B1.c: 315: return status;
  8458  10AA  0873               	movf	getAll_Sw_KeyStatus@status,w
  8459  10AB  0008               	return
  8460  10AC                     __end_of_getAll_Sw_KeyStatus:	
  8461                           
  8462                           	psect	text45
  8463  075E                     __ptext45:	
  8464 ;; *************** function _Flash_Memory_Modify *****************
  8465 ;; Defined at:
  8466 ;;		line 1057 in file "../src/MCU_B1.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  i               1    7[COMMON] unsigned char 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;		None               void
  8473 ;; Registers used:
  8474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8484 ;;Total ram usage:        2 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    5
  8487 ;; This function calls:
  8488 ;;		_Flash_Memory_Erasing
  8489 ;;		_Flash_Memory_Read
  8490 ;;		_Flash_Memory_Write
  8491 ;;		_setMemory_Data
  8492 ;; This function is called by:
  8493 ;;		_Flash_Memory_Main
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           
  8498                           ;psect for function _Flash_Memory_Modify
  8499  075E                     _Flash_Memory_Modify:	
  8500                           
  8501                           ;MCU_B1.c: 1058: char i = 0;
  8502                           
  8503                           ;incstack = 0
  8504                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8505  075E  01F7               	clrf	Flash_Memory_Modify@i
  8506                           
  8507                           ;MCU_B1.c: 1059: for (i = 0; i < 32; i++) {
  8508  075F  01F7               	clrf	Flash_Memory_Modify@i
  8509  0760  3020               	movlw	32
  8510  0761  0277               	subwf	Flash_Memory_Modify@i,w
  8511  0762  1803               	btfsc	3,0
  8512  0763  2F78               	goto	l8102
  8513  0764                     l8096:	
  8514                           
  8515                           ;MCU_B1.c: 1060: Memory.Data[i] = Flash_Memory_Read(i);
  8516  0764  0877               	movf	Flash_Memory_Modify@i,w
  8517  0765  3190  20F7  3187   	fcall	_Flash_Memory_Read
  8518  0768  00F6               	movwf	??_Flash_Memory_Modify
  8519  0769  0877               	movf	Flash_Memory_Modify@i,w
  8520  076A  3EB0               	addlw	_Memory& (0+255)
  8521  076B  0086               	movwf	6
  8522  076C  3001               	movlw	1	; select bank3/4
  8523  076D  0087               	movwf	7
  8524  076E  0876               	movf	??_Flash_Memory_Modify,w
  8525  076F  0081               	movwf	1
  8526  0770  3001               	movlw	1
  8527  0771  00F6               	movwf	??_Flash_Memory_Modify
  8528  0772  0876               	movf	??_Flash_Memory_Modify,w
  8529  0773  07F7               	addwf	Flash_Memory_Modify@i,f
  8530  0774  3020               	movlw	32
  8531  0775  0277               	subwf	Flash_Memory_Modify@i,w
  8532  0776  1C03               	skipc
  8533  0777  2F64               	goto	l8096
  8534  0778                     l8102:	
  8535                           
  8536                           ;MCU_B1.c: 1061: }
  8537                           ;MCU_B1.c: 1062: setMemory_Data(6, product->Data[11]);
  8538  0778  0020               	movlb	0	; select bank0
  8539  0779  086D               	movf	_product,w
  8540  077A  0086               	movwf	6
  8541  077B  3002               	movlw	2	; select bank4/5
  8542  077C  0087               	movwf	7
  8543  077D  3002               	movlw	2	; select bank4/5
  8544  077E  3F4B               	moviw [11]fsr1
  8545  077F  00F2               	movwf	setMemory_Data@data
  8546  0780  3006               	movlw	6
  8547  0781  319F  277A  3187   	fcall	_setMemory_Data
  8548                           
  8549                           ;MCU_B1.c: 1063: setMemory_Data(0, product->Data[12]);
  8550  0784  0020               	movlb	0	; select bank0
  8551  0785  086D               	movf	_product,w
  8552  0786  0086               	movwf	6
  8553  0787  3002               	movlw	2	; select bank4/5
  8554  0788  0087               	movwf	7
  8555  0789  3002               	movlw	2	; select bank4/5
  8556  078A  3F4C               	moviw [12]fsr1
  8557  078B  00F2               	movwf	setMemory_Data@data
  8558  078C  3000               	movlw	0
  8559  078D  319F  277A  3187   	fcall	_setMemory_Data
  8560                           
  8561                           ;MCU_B1.c: 1064: setMemory_Data(1, product->Data[13]);
  8562  0790  0020               	movlb	0	; select bank0
  8563  0791  086D               	movf	_product,w
  8564  0792  0086               	movwf	6
  8565  0793  3002               	movlw	2	; select bank4/5
  8566  0794  0087               	movwf	7
  8567  0795  3002               	movlw	2	; select bank4/5
  8568  0796  3F4D               	moviw [13]fsr1
  8569  0797  00F2               	movwf	setMemory_Data@data
  8570  0798  3001               	movlw	1
  8571  0799  319F  277A  3187   	fcall	_setMemory_Data
  8572                           
  8573                           ;MCU_B1.c: 1065: setMemory_Data(2, product->Data[14]);
  8574  079C  0020               	movlb	0	; select bank0
  8575  079D  086D               	movf	_product,w
  8576  079E  0086               	movwf	6
  8577  079F  3002               	movlw	2	; select bank4/5
  8578  07A0  0087               	movwf	7
  8579  07A1  3002               	movlw	2	; select bank4/5
  8580  07A2  3F4E               	moviw [14]fsr1
  8581  07A3  00F2               	movwf	setMemory_Data@data
  8582  07A4  3002               	movlw	2
  8583  07A5  319F  277A  3187   	fcall	_setMemory_Data
  8584                           
  8585                           ;MCU_B1.c: 1067: setMemory_Data(3, product->Data[21]);
  8586  07A8  0020               	movlb	0	; select bank0
  8587  07A9  086D               	movf	_product,w
  8588  07AA  0086               	movwf	6
  8589  07AB  3002               	movlw	2	; select bank4/5
  8590  07AC  0087               	movwf	7
  8591  07AD  3002               	movlw	2	; select bank4/5
  8592  07AE  3F55               	moviw [21]fsr1
  8593  07AF  00F2               	movwf	setMemory_Data@data
  8594  07B0  3003               	movlw	3
  8595  07B1  319F  277A  3187   	fcall	_setMemory_Data
  8596                           
  8597                           ;MCU_B1.c: 1068: setMemory_Data(4, product->Data[22]);
  8598  07B4  0020               	movlb	0	; select bank0
  8599  07B5  086D               	movf	_product,w
  8600  07B6  0086               	movwf	6
  8601  07B7  3002               	movlw	2	; select bank4/5
  8602  07B8  0087               	movwf	7
  8603  07B9  3002               	movlw	2	; select bank4/5
  8604  07BA  3F56               	moviw [22]fsr1
  8605  07BB  00F2               	movwf	setMemory_Data@data
  8606  07BC  3004               	movlw	4
  8607  07BD  319F  277A  3187   	fcall	_setMemory_Data
  8608                           
  8609                           ;MCU_B1.c: 1069: setMemory_Data(5, product->Data[23]);
  8610  07C0  0020               	movlb	0	; select bank0
  8611  07C1  086D               	movf	_product,w
  8612  07C2  0086               	movwf	6
  8613  07C3  3002               	movlw	2	; select bank4/5
  8614  07C4  0087               	movwf	7
  8615  07C5  3002               	movlw	2	; select bank4/5
  8616  07C6  3F57               	moviw [23]fsr1
  8617  07C7  00F2               	movwf	setMemory_Data@data
  8618  07C8  3005               	movlw	5
  8619  07C9  319F  277A  3187   	fcall	_setMemory_Data
  8620                           
  8621                           ;MCU_B1.c: 1070: if (myMain.SaveDimmer == 1) {
  8622  07CC  0021               	movlb	1	; select bank1
  8623  07CD  1ECA               	btfss	(_myMain^(0+128)+10),5
  8624  07CE  2FD8               	goto	l8110
  8625                           
  8626                           ;MCU_B1.c: 1071: myMain.SaveDimmer = 0;
  8627  07CF  12CA               	bcf	(_myMain^(0+128)+10),5
  8628                           
  8629                           ;MCU_B1.c: 1072: setMemory_Data(30, 0xaa);
  8630  07D0  30AA               	movlw	170
  8631  07D1  00F6               	movwf	??_Flash_Memory_Modify
  8632  07D2  0876               	movf	??_Flash_Memory_Modify,w
  8633  07D3  00F2               	movwf	setMemory_Data@data
  8634  07D4  301E               	movlw	30
  8635  07D5  319F  277A  3187   	fcall	_setMemory_Data
  8636  07D8                     l8110:	
  8637                           
  8638                           ;MCU_B1.c: 1073: }
  8639                           ;MCU_B1.c: 1075: if (Memory.LoopSave == 1) {
  8640  07D8  0023               	movlb	3	; select bank3
  8641  07D9  1D54               	btfss	(_Memory^(0+384)+36),2
  8642  07DA  2FDF               	goto	l1147
  8643                           
  8644                           ;MCU_B1.c: 1076: Memory.LoopSave = 0;
  8645  07DB  1154               	bcf	(_Memory^(0+384)+36),2
  8646                           
  8647                           ;MCU_B1.c: 1077: myMain.FirstOpen = 0;
  8648  07DC  0021               	movlb	1	; select bank1
  8649  07DD  11C0               	bcf	_myMain^(0+128),3
  8650                           
  8651                           ;MCU_B1.c: 1078: myMain.First = 0;
  8652  07DE  12C0               	bcf	_myMain^(0+128),5
  8653  07DF                     l1147:	
  8654                           
  8655                           ;MCU_B1.c: 1080: }
  8656                           ;MCU_B1.c: 1081: GIE = 0;
  8657  07DF  138B               	bcf	11,7	;volatile
  8658                           
  8659                           ;MCU_B1.c: 1082: Flash_Memory_Erasing();
  8660  07E0  319F  27B3  3187   	fcall	_Flash_Memory_Erasing
  8661                           
  8662                           ;MCU_B1.c: 1083: Flash_Memory_Write();
  8663  07E3  3193  2395         	fcall	_Flash_Memory_Write
  8664                           
  8665                           ;MCU_B1.c: 1084: GIE = 1;
  8666  07E5  178B               	bsf	11,7	;volatile
  8667  07E6  0008               	return
  8668  07E7                     __end_of_Flash_Memory_Modify:	
  8669                           
  8670                           	psect	text46
  8671  1FB3                     __ptext46:	
  8672 ;; *************** function _Flash_Memory_Erasing *****************
  8673 ;; Defined at:
  8674 ;;		line 1046 in file "../src/MCU_B1.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;		None               void
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, status,0, pclath, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    4
  8695 ;; This function calls:
  8696 ;;		_Flash_Memory_Unlock
  8697 ;; This function is called by:
  8698 ;;		_Flash_Memory_Modify
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           
  8703                           ;psect for function _Flash_Memory_Erasing
  8704  1FB3                     _Flash_Memory_Erasing:	
  8705                           
  8706                           ;MCU_B1.c: 1047: CFGS = 0;
  8707                           
  8708                           ;incstack = 0
  8709                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
  8710  1FB3  0023               	movlb	3	; select bank3
  8711  1FB4  1315               	bcf	21,6	;volatile
  8712                           
  8713                           ;MCU_B1.c: 1048: PMADRH = 0x30;
  8714  1FB5  3030               	movlw	48
  8715  1FB6  0092               	movwf	18	;volatile
  8716                           
  8717                           ;MCU_B1.c: 1049: PMADRL = 0x00;
  8718  1FB7  0191               	clrf	17	;volatile
  8719                           
  8720                           ;MCU_B1.c: 1050: FREE = 1;
  8721  1FB8  1615               	bsf	21,4	;volatile
  8722                           
  8723                           ;MCU_B1.c: 1051: WREN = 1;
  8724  1FB9  1515               	bsf	21,2	;volatile
  8725                           
  8726                           ;MCU_B1.c: 1052: Flash_Memory_Unlock();
  8727  1FBA  319F  2753         	fcall	_Flash_Memory_Unlock
  8728                           
  8729                           ;MCU_B1.c: 1053: WREN = 0;
  8730  1FBC  0023               	movlb	3	; select bank3
  8731  1FBD  1115               	bcf	21,2	;volatile
  8732  1FBE  0008               	return
  8733  1FBF                     __end_of_Flash_Memory_Erasing:	
  8734                           
  8735                           	psect	text47
  8736  05DF                     __ptext47:	
  8737 ;; *************** function _Flash_Memory_Initialization *****************
  8738 ;; Defined at:
  8739 ;;		line 934 in file "../src/MCU_B1.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;		None
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  value           1    7[COMMON] unsigned char 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;		None               void
  8746 ;; Registers used:
  8747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;Total ram usage:        2 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    5
  8760 ;; This function calls:
  8761 ;;		_Flash_Memory_Read
  8762 ;;		_Flash_Memory_Write
  8763 ;;		_setMemory_Data
  8764 ;; This function is called by:
  8765 ;;		_main
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function _Flash_Memory_Initialization
  8771  05DF                     _Flash_Memory_Initialization:	
  8772                           
  8773                           ;MCU_B1.c: 935: char value = 0;
  8774                           
  8775                           ;incstack = 0
  8776                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8777  05DF  01F7               	clrf	Flash_Memory_Initialization@value
  8778                           
  8779                           ;MCU_B1.c: 936: if (Flash_Memory_Read(31) == 0xaa) {
  8780  05E0  301F               	movlw	31
  8781  05E1  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8782  05E4  3AAA               	xorlw	170
  8783  05E5  1D03               	skipz
  8784  05E6  2E61               	goto	l8310
  8785                           
  8786                           ;MCU_B1.c: 937: product->Data[11] = Flash_Memory_Read(6);
  8787  05E7  3006               	movlw	6
  8788  05E8  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8789  05EB  00F6               	movwf	??_Flash_Memory_Initialization
  8790  05EC  0020               	movlb	0	; select bank0
  8791  05ED  086D               	movf	_product,w
  8792  05EE  3E0B               	addlw	11
  8793  05EF  0086               	movwf	6
  8794  05F0  3002               	movlw	2	; select bank4/5
  8795  05F1  0087               	movwf	7
  8796  05F2  0876               	movf	??_Flash_Memory_Initialization,w
  8797  05F3  0081               	movwf	1
  8798                           
  8799                           ;MCU_B1.c: 938: product->Data[12] = Flash_Memory_Read(0);
  8800  05F4  3000               	movlw	0
  8801  05F5  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8802  05F8  00F6               	movwf	??_Flash_Memory_Initialization
  8803  05F9  0020               	movlb	0	; select bank0
  8804  05FA  086D               	movf	_product,w
  8805  05FB  3E0C               	addlw	12
  8806  05FC  0086               	movwf	6
  8807  05FD  3002               	movlw	2	; select bank4/5
  8808  05FE  0087               	movwf	7
  8809  05FF  0876               	movf	??_Flash_Memory_Initialization,w
  8810  0600  0081               	movwf	1
  8811                           
  8812                           ;MCU_B1.c: 939: product->Data[13] = Flash_Memory_Read(1);
  8813  0601  3001               	movlw	1
  8814  0602  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8815  0605  00F6               	movwf	??_Flash_Memory_Initialization
  8816  0606  0020               	movlb	0	; select bank0
  8817  0607  086D               	movf	_product,w
  8818  0608  3E0D               	addlw	13
  8819  0609  0086               	movwf	6
  8820  060A  3002               	movlw	2	; select bank4/5
  8821  060B  0087               	movwf	7
  8822  060C  0876               	movf	??_Flash_Memory_Initialization,w
  8823  060D  0081               	movwf	1
  8824                           
  8825                           ;MCU_B1.c: 940: product->Data[14] = Flash_Memory_Read(2);
  8826  060E  3002               	movlw	2
  8827  060F  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8828  0612  00F6               	movwf	??_Flash_Memory_Initialization
  8829  0613  0020               	movlb	0	; select bank0
  8830  0614  086D               	movf	_product,w
  8831  0615  3E0E               	addlw	14
  8832  0616  0086               	movwf	6
  8833  0617  3002               	movlw	2	; select bank4/5
  8834  0618  0087               	movwf	7
  8835  0619  0876               	movf	??_Flash_Memory_Initialization,w
  8836  061A  0081               	movwf	1
  8837                           
  8838                           ;MCU_B1.c: 943: product->Data[21] = Flash_Memory_Read(3);
  8839  061B  3003               	movlw	3
  8840  061C  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8841  061F  00F6               	movwf	??_Flash_Memory_Initialization
  8842  0620  0020               	movlb	0	; select bank0
  8843  0621  086D               	movf	_product,w
  8844  0622  3E15               	addlw	21
  8845  0623  0086               	movwf	6
  8846  0624  3002               	movlw	2	; select bank4/5
  8847  0625  0087               	movwf	7
  8848  0626  0876               	movf	??_Flash_Memory_Initialization,w
  8849  0627  0081               	movwf	1
  8850                           
  8851                           ;MCU_B1.c: 944: product->Data[22] = Flash_Memory_Read(4);
  8852  0628  3004               	movlw	4
  8853  0629  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8854  062C  00F6               	movwf	??_Flash_Memory_Initialization
  8855  062D  0020               	movlb	0	; select bank0
  8856  062E  086D               	movf	_product,w
  8857  062F  3E16               	addlw	22
  8858  0630  0086               	movwf	6
  8859  0631  3002               	movlw	2	; select bank4/5
  8860  0632  0087               	movwf	7
  8861  0633  0876               	movf	??_Flash_Memory_Initialization,w
  8862  0634  0081               	movwf	1
  8863                           
  8864                           ;MCU_B1.c: 945: product->Data[23] = Flash_Memory_Read(5);
  8865  0635  3005               	movlw	5
  8866  0636  3190  20F7  3185   	fcall	_Flash_Memory_Read
  8867  0639  00F6               	movwf	??_Flash_Memory_Initialization
  8868  063A  0020               	movlb	0	; select bank0
  8869  063B  086D               	movf	_product,w
  8870  063C  3E17               	addlw	23
  8871  063D  0086               	movwf	6
  8872  063E  3002               	movlw	2	; select bank4/5
  8873  063F  0087               	movwf	7
  8874  0640  0876               	movf	??_Flash_Memory_Initialization,w
  8875  0641  0081               	movwf	1
  8876                           
  8877                           ;MCU_B1.c: 952: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
  8878  0642  086D               	movf	_product,w
  8879  0643  3E0C               	addlw	12
  8880  0644  0086               	movwf	6
  8881  0645  3002               	movlw	2	; select bank4/5
  8882  0646  0087               	movwf	7
  8883  0647  0801               	movf	1,w
  8884  0648  3AFF               	xorlw	255
  8885  0649  1D03               	skipz
  8886  064A  0008               	return
  8887  064B  086D               	movf	_product,w
  8888  064C  3E0D               	addlw	13
  8889  064D  0086               	movwf	6
  8890  064E  3002               	movlw	2	; select bank4/5
  8891  064F  0087               	movwf	7
  8892  0650  0801               	movf	1,w
  8893  0651  3AFF               	xorlw	255
  8894  0652  1D03               	skipz
  8895  0653  0008               	return
  8896  0654  086D               	movf	_product,w
  8897  0655  3E0E               	addlw	14
  8898  0656  0086               	movwf	6
  8899  0657  3002               	movlw	2	; select bank4/5
  8900  0658  0087               	movwf	7
  8901  0659  0801               	movf	1,w
  8902  065A  3AFF               	xorlw	255
  8903  065B  1D03               	skipz
  8904  065C  0008               	return
  8905                           
  8906                           ;MCU_B1.c: 953: myMain.FirstOpen = 1;
  8907  065D  0021               	movlb	1	; select bank1
  8908  065E  15C0               	bsf	_myMain^(0+128),3
  8909                           
  8910                           ;MCU_B1.c: 954: myMain.First = 1;
  8911  065F  16C0               	bsf	_myMain^(0+128),5
  8912                           
  8913                           ;MCU_B1.c: 955: }
  8914                           ;MCU_B1.c: 956: } else {
  8915  0660  0008               	return
  8916  0661                     l8310:	
  8917                           
  8918                           ;MCU_B1.c: 958: setMemory_Data(0, 0xff);
  8919  0661  30FF               	movlw	255
  8920  0662  00F6               	movwf	??_Flash_Memory_Initialization
  8921  0663  0876               	movf	??_Flash_Memory_Initialization,w
  8922  0664  00F2               	movwf	setMemory_Data@data
  8923  0665  3000               	movlw	0
  8924  0666  319F  277A  3185   	fcall	_setMemory_Data
  8925                           
  8926                           ;MCU_B1.c: 959: setMemory_Data(1, 0xff);
  8927  0669  30FF               	movlw	255
  8928  066A  00F6               	movwf	??_Flash_Memory_Initialization
  8929  066B  0876               	movf	??_Flash_Memory_Initialization,w
  8930  066C  00F2               	movwf	setMemory_Data@data
  8931  066D  3001               	movlw	1
  8932  066E  319F  277A  3185   	fcall	_setMemory_Data
  8933                           
  8934                           ;MCU_B1.c: 960: setMemory_Data(2, 0xff);
  8935  0671  30FF               	movlw	255
  8936  0672  00F6               	movwf	??_Flash_Memory_Initialization
  8937  0673  0876               	movf	??_Flash_Memory_Initialization,w
  8938  0674  00F2               	movwf	setMemory_Data@data
  8939  0675  3002               	movlw	2
  8940  0676  319F  277A  3185   	fcall	_setMemory_Data
  8941                           
  8942                           ;MCU_B1.c: 961: setMemory_Data(3, 0xff);
  8943  0679  30FF               	movlw	255
  8944  067A  00F6               	movwf	??_Flash_Memory_Initialization
  8945  067B  0876               	movf	??_Flash_Memory_Initialization,w
  8946  067C  00F2               	movwf	setMemory_Data@data
  8947  067D  3003               	movlw	3
  8948  067E  319F  277A  3185   	fcall	_setMemory_Data
  8949                           
  8950                           ;MCU_B1.c: 962: setMemory_Data(4, 0xff);
  8951  0681  30FF               	movlw	255
  8952  0682  00F6               	movwf	??_Flash_Memory_Initialization
  8953  0683  0876               	movf	??_Flash_Memory_Initialization,w
  8954  0684  00F2               	movwf	setMemory_Data@data
  8955  0685  3004               	movlw	4
  8956  0686  319F  277A  3185   	fcall	_setMemory_Data
  8957                           
  8958                           ;MCU_B1.c: 963: setMemory_Data(5, 0xff);
  8959  0689  30FF               	movlw	255
  8960  068A  00F6               	movwf	??_Flash_Memory_Initialization
  8961  068B  0876               	movf	??_Flash_Memory_Initialization,w
  8962  068C  00F2               	movwf	setMemory_Data@data
  8963  068D  3005               	movlw	5
  8964  068E  319F  277A  3185   	fcall	_setMemory_Data
  8965                           
  8966                           ;MCU_B1.c: 964: setMemory_Data(6, 0xff);
  8967  0691  30FF               	movlw	255
  8968  0692  00F6               	movwf	??_Flash_Memory_Initialization
  8969  0693  0876               	movf	??_Flash_Memory_Initialization,w
  8970  0694  00F2               	movwf	setMemory_Data@data
  8971  0695  3006               	movlw	6
  8972  0696  319F  277A  3185   	fcall	_setMemory_Data
  8973                           
  8974                           ;MCU_B1.c: 965: setMemory_Data(31, 0xaa);
  8975  0699  30AA               	movlw	170
  8976  069A  00F6               	movwf	??_Flash_Memory_Initialization
  8977  069B  0876               	movf	??_Flash_Memory_Initialization,w
  8978  069C  00F2               	movwf	setMemory_Data@data
  8979  069D  301F               	movlw	31
  8980  069E  319F  277A  3185   	fcall	_setMemory_Data
  8981                           
  8982                           ;MCU_B1.c: 970: GIE = 0;
  8983  06A1  138B               	bcf	11,7	;volatile
  8984                           
  8985                           ;MCU_B1.c: 971: Flash_Memory_Write();
  8986  06A2  3193  2395         	fcall	_Flash_Memory_Write
  8987                           
  8988                           ;MCU_B1.c: 972: GIE = 1;
  8989  06A4  178B               	bsf	11,7	;volatile
  8990                           
  8991                           ;MCU_B1.c: 973: myMain.FirstOpen = 1;
  8992  06A5  0021               	movlb	1	; select bank1
  8993  06A6  15C0               	bsf	_myMain^(0+128),3
  8994                           
  8995                           ;MCU_B1.c: 974: myMain.First = 1;
  8996  06A7  16C0               	bsf	_myMain^(0+128),5
  8997                           
  8998                           ;MCU_B1.c: 975: myMain.InitDimmer = 1;
  8999  06A8  164A               	bsf	(_myMain^(0+128)+10),4
  9000  06A9  0008               	return
  9001  06AA                     __end_of_Flash_Memory_Initialization:	
  9002                           
  9003                           	psect	text48
  9004  1F7A                     __ptext48:	
  9005 ;; *************** function _setMemory_Data *****************
  9006 ;; Defined at:
  9007 ;;		line 1099 in file "../src/MCU_B1.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  address         1    wreg     unsigned char 
  9010 ;;  data            1    2[COMMON] unsigned char 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;  address         1    4[COMMON] unsigned char 
  9013 ;; Return value:  Size  Location     Type
  9014 ;;		None               void
  9015 ;; Registers used:
  9016 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9022 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;Total ram usage:        3 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; Hardware stack levels required when called:    3
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_Flash_Memory_Initialization
  9033 ;;		_Flash_Memory_Modify
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function _setMemory_Data
  9039  1F7A                     _setMemory_Data:	
  9040                           
  9041                           ;incstack = 0
  9042                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  9043                           ;setMemory_Data@address stored from wreg
  9044  1F7A  00F4               	movwf	setMemory_Data@address
  9045                           
  9046                           ;MCU_B1.c: 1100: Memory.Data[address] = data;
  9047  1F7B  0872               	movf	setMemory_Data@data,w
  9048  1F7C  00F3               	movwf	??_setMemory_Data
  9049  1F7D  0874               	movf	setMemory_Data@address,w
  9050  1F7E  3EB0               	addlw	_Memory& (0+255)
  9051  1F7F  0086               	movwf	6
  9052  1F80  3001               	movlw	1	; select bank3/4
  9053  1F81  0087               	movwf	7
  9054  1F82  0873               	movf	??_setMemory_Data,w
  9055  1F83  0081               	movwf	1
  9056  1F84  0008               	return
  9057  1F85                     __end_of_setMemory_Data:	
  9058                           
  9059                           	psect	text49
  9060  1395                     __ptext49:	
  9061 ;; *************** function _Flash_Memory_Write *****************
  9062 ;; Defined at:
  9063 ;;		line 1027 in file "../src/MCU_B1.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;		None
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  i               1    3[COMMON] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;		None               void
  9070 ;; Registers used:
  9071 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;Total ram usage:        2 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    4
  9084 ;; This function calls:
  9085 ;;		_Flash_Memory_Unlock
  9086 ;; This function is called by:
  9087 ;;		_Flash_Memory_Initialization
  9088 ;;		_Flash_Memory_Modify
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function _Flash_Memory_Write
  9094  1395                     _Flash_Memory_Write:	
  9095                           
  9096                           ;MCU_B1.c: 1028: char i = 0;
  9097                           
  9098                           ;incstack = 0
  9099                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9100  1395  01F3               	clrf	Flash_Memory_Write@i
  9101                           
  9102                           ;MCU_B1.c: 1029: CFGS = 0;
  9103  1396  0023               	movlb	3	; select bank3
  9104  1397  1315               	bcf	21,6	;volatile
  9105                           
  9106                           ;MCU_B1.c: 1030: PMADRH = 0x30;
  9107  1398  3030               	movlw	48
  9108  1399  0092               	movwf	18	;volatile
  9109                           
  9110                           ;MCU_B1.c: 1031: PMDATH = 0;
  9111  139A  0194               	clrf	20	;volatile
  9112                           
  9113                           ;MCU_B1.c: 1032: FREE = 0;
  9114  139B  1215               	bcf	21,4	;volatile
  9115                           
  9116                           ;MCU_B1.c: 1033: LWLO = 1;
  9117  139C  1695               	bsf	21,5	;volatile
  9118                           
  9119                           ;MCU_B1.c: 1034: WREN = 1;
  9120  139D  1515               	bsf	21,2	;volatile
  9121                           
  9122                           ;MCU_B1.c: 1035: for (i = 0; i < 32; i++) {
  9123  139E  01F3               	clrf	Flash_Memory_Write@i
  9124  139F  3020               	movlw	32
  9125  13A0  0273               	subwf	Flash_Memory_Write@i,w
  9126  13A1  1803               	btfsc	3,0
  9127  13A2  2BB8               	goto	l1137
  9128  13A3                     l7850:	
  9129                           
  9130                           ;MCU_B1.c: 1036: PMADRL = i;
  9131  13A3  0873               	movf	Flash_Memory_Write@i,w
  9132  13A4  0023               	movlb	3	; select bank3
  9133  13A5  0091               	movwf	17	;volatile
  9134                           
  9135                           ;MCU_B1.c: 1037: PMDATL = Memory.Data[i];
  9136  13A6  0873               	movf	Flash_Memory_Write@i,w
  9137  13A7  3EB0               	addlw	_Memory& (0+255)
  9138  13A8  0086               	movwf	6
  9139  13A9  3001               	movlw	1	; select bank3/4
  9140  13AA  0087               	movwf	7
  9141  13AB  0801               	movf	1,w
  9142  13AC  0093               	movwf	19	;volatile
  9143                           
  9144                           ;MCU_B1.c: 1038: Flash_Memory_Unlock();
  9145  13AD  319F  2753  3193   	fcall	_Flash_Memory_Unlock
  9146  13B0  3001               	movlw	1
  9147  13B1  00F2               	movwf	??_Flash_Memory_Write
  9148  13B2  0872               	movf	??_Flash_Memory_Write,w
  9149  13B3  07F3               	addwf	Flash_Memory_Write@i,f
  9150  13B4  3020               	movlw	32
  9151  13B5  0273               	subwf	Flash_Memory_Write@i,w
  9152  13B6  1C03               	skipc
  9153  13B7  2BA3               	goto	l7850
  9154  13B8                     l1137:	
  9155                           
  9156                           ;MCU_B1.c: 1039: }
  9157                           ;MCU_B1.c: 1040: LWLO = 0;
  9158  13B8  0023               	movlb	3	; select bank3
  9159  13B9  1295               	bcf	21,5	;volatile
  9160                           
  9161                           ;MCU_B1.c: 1041: Flash_Memory_Unlock();
  9162  13BA  319F  2753         	fcall	_Flash_Memory_Unlock
  9163                           
  9164                           ;MCU_B1.c: 1042: WREN = 0;
  9165  13BC  0023               	movlb	3	; select bank3
  9166  13BD  1115               	bcf	21,2	;volatile
  9167  13BE  0008               	return
  9168  13BF                     __end_of_Flash_Memory_Write:	
  9169                           
  9170                           	psect	text50
  9171  1F53                     __ptext50:	
  9172 ;; *************** function _Flash_Memory_Unlock *****************
  9173 ;; Defined at:
  9174 ;;		line 1006 in file "../src/MCU_B1.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;		None               void
  9181 ;; Registers used:
  9182 ;;		wreg
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;Total ram usage:        0 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    3
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_Flash_Memory_Write
  9199 ;;		_Flash_Memory_Erasing
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function _Flash_Memory_Unlock
  9205  1F53                     _Flash_Memory_Unlock:	
  9206                           
  9207                           ;MCU_B1.c: 1007: PMCON2 = 0x55;
  9208                           
  9209                           ;incstack = 0
  9210                           ; Regs used in _Flash_Memory_Unlock: [wreg]
  9211  1F53  3055               	movlw	85
  9212  1F54  0023               	movlb	3	; select bank3
  9213  1F55  0096               	movwf	22	;volatile
  9214                           
  9215                           ;MCU_B1.c: 1008: PMCON2 = 0xaa;
  9216  1F56  30AA               	movlw	170
  9217  1F57  0096               	movwf	22	;volatile
  9218                           
  9219                           ;MCU_B1.c: 1009: WR = 1;
  9220  1F58  1495               	bsf	21,1	;volatile
  9221                           
  9222                           ;MCU_B1.c: 1010: __nop();
  9223  1F59  0000               	nop
  9224                           
  9225                           ;MCU_B1.c: 1011: __nop();
  9226  1F5A  0000               	nop
  9227  1F5B  0008               	return
  9228  1F5C                     __end_of_Flash_Memory_Unlock:	
  9229                           
  9230                           	psect	text51
  9231  10F7                     __ptext51:	
  9232 ;; *************** function _Flash_Memory_Read *****************
  9233 ;; Defined at:
  9234 ;;		line 1015 in file "../src/MCU_B1.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  address         1    wreg     unsigned char 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  address         1    4[COMMON] unsigned char 
  9239 ;;  ret             1    5[COMMON] unsigned char 
  9240 ;;  i               1    3[COMMON] unsigned char 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      unsigned char 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;Total ram usage:        4 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    3
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_Flash_Memory_Initialization
  9261 ;;		_Flash_Memory_Modify
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _Flash_Memory_Read
  9267  10F7                     _Flash_Memory_Read:	
  9268                           
  9269                           ;incstack = 0
  9270                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
  9271                           ;Flash_Memory_Read@address stored from wreg
  9272  10F7  00F4               	movwf	Flash_Memory_Read@address
  9273                           
  9274                           ;MCU_B1.c: 1016: char i = 0, ret = 0;
  9275  10F8  01F3               	clrf	Flash_Memory_Read@i
  9276  10F9  01F5               	clrf	Flash_Memory_Read@ret
  9277                           
  9278                           ;MCU_B1.c: 1017: PMADRH = 0x30;
  9279  10FA  3030               	movlw	48
  9280  10FB  0023               	movlb	3	; select bank3
  9281  10FC  0092               	movwf	18	;volatile
  9282                           
  9283                           ;MCU_B1.c: 1018: PMADRL = address;
  9284  10FD  0874               	movf	Flash_Memory_Read@address,w
  9285  10FE  0091               	movwf	17	;volatile
  9286                           
  9287                           ;MCU_B1.c: 1019: CFGS = 0;
  9288  10FF  1315               	bcf	21,6	;volatile
  9289                           
  9290                           ;MCU_B1.c: 1020: RD = 1;
  9291  1100  1415               	bsf	21,0	;volatile
  9292                           
  9293                           ;MCU_B1.c: 1021: i = PMDATH;
  9294  1101  0814               	movf	20,w	;volatile
  9295  1102  00F2               	movwf	??_Flash_Memory_Read
  9296  1103  0872               	movf	??_Flash_Memory_Read,w
  9297  1104  00F3               	movwf	Flash_Memory_Read@i
  9298                           
  9299                           ;MCU_B1.c: 1022: ret = PMDATL;
  9300  1105  0813               	movf	19,w	;volatile
  9301  1106  00F2               	movwf	??_Flash_Memory_Read
  9302  1107  0872               	movf	??_Flash_Memory_Read,w
  9303  1108  00F5               	movwf	Flash_Memory_Read@ret
  9304                           
  9305                           ;MCU_B1.c: 1023: return ret;
  9306  1109  0875               	movf	Flash_Memory_Read@ret,w
  9307  110A  0008               	return
  9308  110B                     __end_of_Flash_Memory_Read:	
  9309                           
  9310                           	psect	text52
  9311  043C                     __ptext52:	
  9312 ;; *************** function _Exception_Main *****************
  9313 ;; Defined at:
  9314 ;;		line 503 in file "../src/main_B1.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;  i               2   11[BANK0 ] int 
  9319 ;;  i               2    9[BANK0 ] int 
  9320 ;;  lights          1   13[BANK0 ] unsigned char 
  9321 ;;  error           1    8[BANK0 ] unsigned char 
  9322 ;;  count           1    7[BANK0 ] unsigned char 
  9323 ;;  status          1    6[BANK0 ] unsigned char 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;		None               void
  9326 ;; Registers used:
  9327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;Total ram usage:        9 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    5
  9340 ;; This function calls:
  9341 ;;		_getDimmerLights_Line
  9342 ;;		_getDimmerLights_Status
  9343 ;;		_getMain_All_Error_Status
  9344 ;;		_getMain_All_LightsStatus
  9345 ;;		_setBuz
  9346 ;;		_setDimmerLights_SwOff
  9347 ;;		_setLED
  9348 ;; This function is called by:
  9349 ;;		_main
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function _Exception_Main
  9355  043C                     _Exception_Main:	
  9356                           
  9357                           ;main_B1.c: 504: char error = getMain_All_Error_Status(0);
  9358                           
  9359                           ;incstack = 0
  9360                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9361  043C  3000               	movlw	0
  9362  043D  3193  23BF  3184   	fcall	_getMain_All_Error_Status
  9363  0440  00F9               	movwf	??_Exception_Main
  9364  0441  0879               	movf	??_Exception_Main,w
  9365  0442  0020               	movlb	0	; select bank0
  9366  0443  00A8               	movwf	Exception_Main@error
  9367                           
  9368                           ;main_B1.c: 505: char lights = 0, count = 2;
  9369  0444  01AD               	clrf	Exception_Main@lights
  9370  0445  3002               	movlw	2
  9371  0446  00F9               	movwf	??_Exception_Main
  9372  0447  0879               	movf	??_Exception_Main,w
  9373  0448  00A7               	movwf	Exception_Main@count
  9374                           
  9375                           ;main_B1.c: 506: char status = 0;
  9376  0449  01A6               	clrf	Exception_Main@status
  9377                           
  9378                           ;main_B1.c: 508: if (myMain.Error_Run == 1) {
  9379  044A  0021               	movlb	1	; select bank1
  9380  044B  1DCA               	btfss	(_myMain^(0+128)+10),3
  9381  044C  2C5B               	goto	l8564
  9382                           
  9383                           ;main_B1.c: 509: if (error == 0) {
  9384  044D  0020               	movlb	0	; select bank0
  9385  044E  08A8               	movf	Exception_Main@error,f
  9386  044F  1D03               	skipz
  9387  0450  0008               	return
  9388                           
  9389                           ;main_B1.c: 510: myMain.Error_Run = 0;
  9390  0451  0021               	movlb	1	; select bank1
  9391  0452  11CA               	bcf	(_myMain^(0+128)+10),3
  9392                           
  9393                           ;main_B1.c: 513: setLED(99, 10);
  9394  0453  300A               	movlw	10
  9395  0454  00F9               	movwf	??_Exception_Main
  9396  0455  0879               	movf	??_Exception_Main,w
  9397  0456  00F4               	movwf	setLED@command
  9398  0457  3063               	movlw	99
  9399  0458  3188  20AC         	fcall	_setLED
  9400                           
  9401                           ;main_B1.c: 526: }
  9402                           ;main_B1.c: 527: } else {
  9403  045A  0008               	return
  9404  045B                     l8564:	
  9405                           
  9406                           ;main_B1.c: 528: if (error != 0) {
  9407  045B  0020               	movlb	0	; select bank0
  9408  045C  0828               	movf	Exception_Main@error,w
  9409  045D  1903               	btfsc	3,2
  9410  045E  0008               	return
  9411                           
  9412                           ;main_B1.c: 529: myMain.Error_Run = 1;
  9413  045F  0021               	movlb	1	; select bank1
  9414  0460  15CA               	bsf	(_myMain^(0+128)+10),3
  9415                           
  9416                           ;main_B1.c: 531: setLED(99, 11);
  9417  0461  300B               	movlw	11
  9418  0462  00F9               	movwf	??_Exception_Main
  9419  0463  0879               	movf	??_Exception_Main,w
  9420  0464  00F4               	movwf	setLED@command
  9421  0465  3063               	movlw	99
  9422  0466  3188  20AC  3184   	fcall	_setLED
  9423                           
  9424                           ;main_B1.c: 542: switch (error) {
  9425  0469  2D03               	goto	l8612
  9426  046A                     l8570:	
  9427                           ;main_B1.c: 543: case 2:
  9428                           
  9429                           
  9430                           ;main_B1.c: 550: if (getMain_All_LightsStatus() == 1) {
  9431  046A  3190  202E  3184   	fcall	_getMain_All_LightsStatus
  9432  046D  3A01               	xorlw	1
  9433  046E  1D03               	skipz
  9434  046F  2C79               	goto	l8574
  9435                           
  9436                           ;main_B1.c: 551: setBuz(10, 300);
  9437  0470  302C               	movlw	44
  9438  0471  0020               	movlb	0	; select bank0
  9439  0472  00A4               	movwf	setBuz@time
  9440  0473  3001               	movlw	1
  9441  0474  00A5               	movwf	setBuz@time+1
  9442  0475  300A               	movlw	10
  9443  0476  3197  2759  3184   	fcall	_setBuz
  9444  0479                     l8574:	
  9445                           
  9446                           ;main_B1.c: 552: }
  9447                           ;main_B1.c: 554: for (int i = 0; i < count; i++) {
  9448  0479  0020               	movlb	0	; select bank0
  9449  047A  01A9               	clrf	Exception_Main@i
  9450  047B  01AA               	clrf	Exception_Main@i+1
  9451  047C                     l8584:	
  9452  047C  082A               	movf	Exception_Main@i+1,w
  9453  047D  3A80               	xorlw	128
  9454  047E  00F9               	movwf	??_Exception_Main
  9455  047F  3080               	movlw	128
  9456  0480  0279               	subwf	??_Exception_Main,w
  9457  0481  1D03               	skipz
  9458  0482  2C85               	goto	u10555
  9459  0483  0827               	movf	Exception_Main@count,w
  9460  0484  0229               	subwf	Exception_Main@i,w
  9461  0485                     u10555:	
  9462  0485  1803               	btfsc	3,0
  9463  0486  2CA6               	goto	u10550
  9464                           
  9465                           ;main_B1.c: 556: if (getDimmerLights_Status(i + 1) == 1) {
  9466  0487  0020               	movlb	0	; select bank0
  9467  0488  0829               	movf	Exception_Main@i,w
  9468  0489  3E01               	addlw	1
  9469  048A  319F  27F1  3184   	fcall	_getDimmerLights_Status
  9470  048D  3A01               	xorlw	1
  9471  048E  1D03               	skipz
  9472  048F  2CA0               	goto	l8582
  9473                           
  9474                           ;main_B1.c: 557: DimmerLights->SwFlag = 1;
  9475  0490  0020               	movlb	0	; select bank0
  9476  0491  086B               	movf	_DimmerLights,w
  9477  0492  0086               	movwf	6
  9478  0493  3001               	movlw	1	; select bank2/3
  9479  0494  0087               	movwf	7
  9480  0495  1401               	bsf	1,0
  9481                           
  9482                           ;main_B1.c: 558: DimmerLights->Status = 0;
  9483  0496  0A6B               	incf	_DimmerLights,w
  9484  0497  0086               	movwf	6
  9485  0498  3001               	movlw	1	; select bank2/3
  9486  0499  0087               	movwf	7
  9487  049A  1001               	bcf	1,0
  9488                           
  9489                           ;main_B1.c: 559: setDimmerLights_SwOff(i + 1);
  9490  049B  0829               	movf	Exception_Main@i,w
  9491  049C  3E01               	addlw	1
  9492  049D  3195  25C1  3184   	fcall	_setDimmerLights_SwOff
  9493  04A0                     l8582:	
  9494  04A0  3001               	movlw	1
  9495  04A1  0020               	movlb	0	; select bank0
  9496  04A2  07A9               	addwf	Exception_Main@i,f
  9497  04A3  3000               	movlw	0
  9498  04A4  3DAA               	addwfc	Exception_Main@i+1,f
  9499  04A5  2C7C               	goto	l8584
  9500  04A6                     u10550:	
  9501  04A6  0020               	movlb	0	; select bank0
  9502  04A7  0008               	return
  9503  04A8                     l8586:	
  9504                           ;main_B1.c: 565: case 3:
  9505                           
  9506                           ;main_B1.c: 560: }
  9507                           ;main_B1.c: 561: }
  9508                           ;main_B1.c: 564: break;
  9509                           
  9510                           
  9511                           ;main_B1.c: 567: setBuz(5, 300);
  9512  04A8  302C               	movlw	44
  9513  04A9  0020               	movlb	0	; select bank0
  9514  04AA  00A4               	movwf	setBuz@time
  9515  04AB  3001               	movlw	1
  9516  04AC  00A5               	movwf	setBuz@time+1
  9517  04AD  3005               	movlw	5
  9518  04AE  3197  2759  3184   	fcall	_setBuz
  9519                           
  9520                           ;main_B1.c: 568: lights = getDimmerLights_Line();
  9521  04B1  3190  203D  3184   	fcall	_getDimmerLights_Line
  9522  04B4  00F9               	movwf	??_Exception_Main
  9523  04B5  0879               	movf	??_Exception_Main,w
  9524  04B6  0020               	movlb	0	; select bank0
  9525  04B7  00AD               	movwf	Exception_Main@lights
  9526                           
  9527                           ;main_B1.c: 569: if (lights == 0) {
  9528  04B8  08AD               	movf	Exception_Main@lights,f
  9529  04B9  1D03               	skipz
  9530  04BA  2CE9               	goto	l8604
  9531                           
  9532                           ;main_B1.c: 571: for (int i = 0; i < count; i++) {
  9533  04BB  01AB               	clrf	Exception_Main@i_6700
  9534  04BC  01AC               	clrf	Exception_Main@i_6700+1
  9535  04BD                     l8602:	
  9536  04BD  082C               	movf	Exception_Main@i_6700+1,w
  9537  04BE  3A80               	xorlw	128
  9538  04BF  00F9               	movwf	??_Exception_Main
  9539  04C0  3080               	movlw	128
  9540  04C1  0279               	subwf	??_Exception_Main,w
  9541  04C2  1D03               	skipz
  9542  04C3  2CC6               	goto	u10585
  9543  04C4  0827               	movf	Exception_Main@count,w
  9544  04C5  022B               	subwf	Exception_Main@i_6700,w
  9545  04C6                     u10585:	
  9546  04C6  1803               	btfsc	3,0
  9547  04C7  2CE7               	goto	u10580
  9548                           
  9549                           ;main_B1.c: 573: if (getDimmerLights_Status(i + 1) == 1) {
  9550  04C8  0020               	movlb	0	; select bank0
  9551  04C9  082B               	movf	Exception_Main@i_6700,w
  9552  04CA  3E01               	addlw	1
  9553  04CB  319F  27F1  3184   	fcall	_getDimmerLights_Status
  9554  04CE  3A01               	xorlw	1
  9555  04CF  1D03               	skipz
  9556  04D0  2CE1               	goto	l8600
  9557                           
  9558                           ;main_B1.c: 574: DimmerLights->SwFlag = 1;
  9559  04D1  0020               	movlb	0	; select bank0
  9560  04D2  086B               	movf	_DimmerLights,w
  9561  04D3  0086               	movwf	6
  9562  04D4  3001               	movlw	1	; select bank2/3
  9563  04D5  0087               	movwf	7
  9564  04D6  1401               	bsf	1,0
  9565                           
  9566                           ;main_B1.c: 575: DimmerLights->Status = 0;
  9567  04D7  0A6B               	incf	_DimmerLights,w
  9568  04D8  0086               	movwf	6
  9569  04D9  3001               	movlw	1	; select bank2/3
  9570  04DA  0087               	movwf	7
  9571  04DB  1001               	bcf	1,0
  9572                           
  9573                           ;main_B1.c: 576: setDimmerLights_SwOff(i + 1);
  9574  04DC  082B               	movf	Exception_Main@i_6700,w
  9575  04DD  3E01               	addlw	1
  9576  04DE  3195  25C1  3184   	fcall	_setDimmerLights_SwOff
  9577  04E1                     l8600:	
  9578  04E1  3001               	movlw	1
  9579  04E2  0020               	movlb	0	; select bank0
  9580  04E3  07AB               	addwf	Exception_Main@i_6700,f
  9581  04E4  3000               	movlw	0
  9582  04E5  3DAC               	addwfc	Exception_Main@i_6700+1,f
  9583  04E6  2CBD               	goto	l8602
  9584  04E7                     u10580:	
  9585  04E7  0020               	movlb	0	; select bank0
  9586  04E8  0008               	return
  9587  04E9                     l8604:	
  9588                           ;main_B1.c: 577: }
  9589                           ;main_B1.c: 578: }
  9590                           ;main_B1.c: 579: } else {
  9591                           
  9592                           
  9593                           ;main_B1.c: 581: if (getDimmerLights_Status(lights) == 1) {
  9594  04E9  0020               	movlb	0	; select bank0
  9595  04EA  082D               	movf	Exception_Main@lights,w
  9596  04EB  319F  27F1  3184   	fcall	_getDimmerLights_Status
  9597  04EE  3A01               	xorlw	1
  9598  04EF  1903               	btfsc	3,2
  9599  04F0  2CF3               	goto	l8606
  9600  04F1  0020               	movlb	0	; select bank0
  9601  04F2  0008               	return
  9602  04F3                     l8606:	
  9603                           
  9604                           ;main_B1.c: 583: DimmerLights->SwFlag = 1;
  9605  04F3  0020               	movlb	0	; select bank0
  9606  04F4  086B               	movf	_DimmerLights,w
  9607  04F5  0086               	movwf	6
  9608  04F6  3001               	movlw	1	; select bank2/3
  9609  04F7  0087               	movwf	7
  9610  04F8  1401               	bsf	1,0
  9611                           
  9612                           ;main_B1.c: 584: DimmerLights->Status = 0;
  9613  04F9  0A6B               	incf	_DimmerLights,w
  9614  04FA  0086               	movwf	6
  9615  04FB  3001               	movlw	1	; select bank2/3
  9616  04FC  0087               	movwf	7
  9617  04FD  1001               	bcf	1,0
  9618                           
  9619                           ;main_B1.c: 585: setDimmerLights_SwOff(lights);
  9620  04FE  082D               	movf	Exception_Main@lights,w
  9621  04FF  3195  25C1         	fcall	_setDimmerLights_SwOff
  9622  0501  0020               	movlb	0	; select bank0
  9623  0502  0008               	return
  9624  0503                     l8612:	
  9625                           ;main_B1.c: 590: }
  9626                           
  9627                           ;main_B1.c: 586: }
  9628                           ;main_B1.c: 587: }
  9629                           ;main_B1.c: 589: break;
  9630                           
  9631  0503  0020               	movlb	0	; select bank0
  9632  0504  0828               	movf	Exception_Main@error,w
  9633                           
  9634                           ; Switch size 1, requested type "space"
  9635                           ; Number of cases is 2, Range of values is 2 to 3
  9636                           ; switch strategies available:
  9637                           ; Name         Instructions Cycles
  9638                           ; simple_byte            7     4 (average)
  9639                           ; direct_byte           13     9 (fixed)
  9640                           ; jumptable            263     9 (fixed)
  9641                           ;	Chosen strategy is simple_byte
  9642  0505  3A02               	xorlw	2	; case 2
  9643  0506  1903               	skipnz
  9644  0507  2C6A               	goto	l8570
  9645  0508  3A01               	xorlw	1	; case 3
  9646  0509  1903               	skipnz
  9647  050A  2CA8               	goto	l8586
  9648  050B  2D0D               	goto	l2164
  9649  050C  0008               	return
  9650  050D                     l2164:	
  9651  050D  0008               	return
  9652  050E                     __end_of_Exception_Main:	
  9653                           
  9654                           	psect	text53
  9655  103D                     __ptext53:	
  9656 ;; *************** function _getDimmerLights_Line *****************
  9657 ;; Defined at:
  9658 ;;		line 1240 in file "../src/Dimmer_B1.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;		None
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  line            1    3[COMMON] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  1    wreg      unsigned char 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;Total ram usage:        2 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    3
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_Exception_Main
  9683 ;; This function uses a non-reentrant model
  9684 ;;
  9685                           
  9686                           
  9687                           ;psect for function _getDimmerLights_Line
  9688  103D                     _getDimmerLights_Line:	
  9689                           
  9690                           ;Dimmer_B1.c: 1241: char line = 0;
  9691                           
  9692                           ;incstack = 0
  9693                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  9694  103D  01F3               	clrf	getDimmerLights_Line@line
  9695                           
  9696                           ;Dimmer_B1.c: 1243: if (DimmerLights1.Line == 1) {
  9697  103E  0022               	movlb	2	; select bank2
  9698  103F  1CCE               	btfss	(_DimmerLights1^(0+256)+1),1
  9699  1040  2844               	goto	l640
  9700                           
  9701                           ;Dimmer_B1.c: 1244: line = 1;
  9702  1041  01F3               	clrf	getDimmerLights_Line@line
  9703  1042  0AF3               	incf	getDimmerLights_Line@line,f
  9704                           
  9705                           ;Dimmer_B1.c: 1245: }
  9706  1043  284A               	goto	l641
  9707  1044                     l640:	
  9708                           
  9709                           ;Dimmer_B1.c: 1248: else if (DimmerLights2.Line == 1) {
  9710  1044  1CD7               	btfss	(_DimmerLights2^(0+256)+1),1
  9711  1045  284A               	goto	l641
  9712                           
  9713                           ;Dimmer_B1.c: 1249: line = 2;
  9714  1046  3002               	movlw	2
  9715  1047  00F2               	movwf	??_getDimmerLights_Line
  9716  1048  0872               	movf	??_getDimmerLights_Line,w
  9717  1049  00F3               	movwf	getDimmerLights_Line@line
  9718  104A                     l641:	
  9719                           
  9720                           ;Dimmer_B1.c: 1250: }
  9721                           ;Dimmer_B1.c: 1257: return line;
  9722  104A  0873               	movf	getDimmerLights_Line@line,w
  9723  104B  0008               	return
  9724  104C                     __end_of_getDimmerLights_Line:	
  9725                           
  9726                           	psect	text54
  9727  147C                     __ptext54:	
  9728 ;; *************** function _DimmerLights_Main *****************
  9729 ;; Defined at:
  9730 ;;		line 869 in file "../src/Dimmer_B1.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;		None
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;		None               void
  9737 ;; Registers used:
  9738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;Total ram usage:        0 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; Hardware stack levels required when called:    8
  9751 ;; This function calls:
  9752 ;;		_DimmerLights_DimmingFunction
  9753 ;;		_DimmerLights_TwoPhase_Main
  9754 ;;		_getLoad_OK
  9755 ;;		_getMain_All_Error_Status
  9756 ;;		_getMain_All_LightsStatus
  9757 ;;		_setDimmerLights_Main
  9758 ;; This function is called by:
  9759 ;;		_main
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           
  9764                           ;psect for function _DimmerLights_Main
  9765  147C                     _DimmerLights_Main:	
  9766                           
  9767                           ;Dimmer_B1.c: 872: if (Dimmer.LoadGO == 1) {
  9768                           
  9769                           ;incstack = 0
  9770                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9771  147C  0022               	movlb	2	; select bank2
  9772  147D  1CA0               	btfss	_Dimmer^(0+256),1
  9773  147E  2C94               	goto	l8286
  9774                           
  9775                           ;Dimmer_B1.c: 873: if (getLoad_OK() == 1 || getMain_All_Error_Status(0) != 0 || getMain_
      +                          All_LightsStatus() == 0) {
  9776  147F  319F  270F  3194   	fcall	_getLoad_OK
  9777  1482  3A01               	xorlw	1
  9778  1483  1903               	skipnz
  9779  1484  2C92               	goto	l566
  9780  1485  3000               	movlw	0
  9781  1486  3193  23BF  3194   	fcall	_getMain_All_Error_Status
  9782  1489  3800               	iorlw	0
  9783  148A  1D03               	skipz
  9784  148B  2C92               	goto	l566
  9785  148C  3190  202E  3194   	fcall	_getMain_All_LightsStatus
  9786  148F  3800               	iorlw	0
  9787  1490  1D03               	skipz
  9788  1491  2C94               	goto	l8286
  9789  1492                     l566:	
  9790                           
  9791                           ;Dimmer_B1.c: 874: Dimmer.LoadGO = 0;
  9792  1492  0022               	movlb	2	; select bank2
  9793  1493  10A0               	bcf	_Dimmer^(0+256),1
  9794  1494                     l8286:	
  9795                           
  9796                           ;Dimmer_B1.c: 875: }
  9797                           ;Dimmer_B1.c: 876: }
  9798                           ;Dimmer_B1.c: 881: setDimmerLights_Main(1);
  9799  1494  3001               	movlw	1
  9800  1495  318A  2297  3194   	fcall	_setDimmerLights_Main
  9801                           
  9802                           ;Dimmer_B1.c: 884: DimmerLights_DimmingFunction(1);
  9803  1498  3001               	movlw	1
  9804  1499  318D  2554  3194   	fcall	_DimmerLights_DimmingFunction
  9805                           
  9806                           ;Dimmer_B1.c: 888: DimmerLights_TwoPhase_Main(1);
  9807  149C  3001               	movlw	1
  9808  149D  3188  2001  3194   	fcall	_DimmerLights_TwoPhase_Main
  9809                           
  9810                           ;Dimmer_B1.c: 894: setDimmerLights_Main(2);
  9811  14A0  3002               	movlw	2
  9812  14A1  318A  2297  3194   	fcall	_setDimmerLights_Main
  9813                           
  9814                           ;Dimmer_B1.c: 896: DimmerLights_DimmingFunction(2);
  9815  14A4  3002               	movlw	2
  9816  14A5  318D  2554  3194   	fcall	_DimmerLights_DimmingFunction
  9817                           
  9818                           ;Dimmer_B1.c: 900: DimmerLights_TwoPhase_Main(2);
  9819  14A8  3002               	movlw	2
  9820  14A9  3188  2001         	fcall	_DimmerLights_TwoPhase_Main
  9821  14AB  0008               	return
  9822  14AC                     __end_of_DimmerLights_Main:	
  9823                           
  9824                           	psect	text55
  9825  0A97                     __ptext55:	
  9826 ;; *************** function _setDimmerLights_Main *****************
  9827 ;; Defined at:
  9828 ;;		line 926 in file "../src/Dimmer_B1.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  lights          1    wreg     unsigned char 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;  lights          1   73[BANK0 ] unsigned char 
  9833 ;; Return value:  Size  Location     Type
  9834 ;;		None               void
  9835 ;; Registers used:
  9836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;Total ram usage:        1 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    7
  9849 ;; This function calls:
  9850 ;;		_DimmerLights_SelectPointer
  9851 ;;		_getDimmerLights_Allow_Condition
  9852 ;;		_getMain_All_LightsStatus
  9853 ;;		_setDimmerLights_Dimming
  9854 ;;		_setDimmerLights_OnOff
  9855 ;; This function is called by:
  9856 ;;		_DimmerLights_Main
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           
  9861                           ;psect for function _setDimmerLights_Main
  9862  0A97                     _setDimmerLights_Main:	
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9866                           ;setDimmerLights_Main@lights stored from wreg
  9867  0A97  0020               	movlb	0	; select bank0
  9868  0A98  00E9               	movwf	setDimmerLights_Main@lights
  9869                           
  9870                           ;Dimmer_B1.c: 928: DimmerLights_SelectPointer(lights);
  9871  0A99  0869               	movf	setDimmerLights_Main@lights,w
  9872  0A9A  3191  2120  318A   	fcall	_DimmerLights_SelectPointer
  9873                           
  9874                           ;Dimmer_B1.c: 929: if (DimmerLights->Trigger == 1) {
  9875  0A9D  0020               	movlb	0	; select bank0
  9876  0A9E  086B               	movf	_DimmerLights,w
  9877  0A9F  0086               	movwf	6
  9878  0AA0  3001               	movlw	1	; select bank2/3
  9879  0AA1  0087               	movwf	7
  9880  0AA2  1C81               	btfss	1,1
  9881  0AA3  2AC3               	goto	l7952
  9882                           
  9883                           ;Dimmer_B1.c: 930: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9884  0AA4  0869               	movf	setDimmerLights_Main@lights,w
  9885  0AA5  3194  24E2  318A   	fcall	_getDimmerLights_Allow_Condition
  9886  0AA8  3800               	iorlw	0
  9887  0AA9  1D03               	skipz
  9888  0AAA  0008               	return
  9889                           
  9890                           ;Dimmer_B1.c: 931: DimmerLights->Trigger = 0;
  9891  0AAB  0020               	movlb	0	; select bank0
  9892  0AAC  086B               	movf	_DimmerLights,w
  9893  0AAD  0086               	movwf	6
  9894  0AAE  3001               	movlw	1	; select bank2/3
  9895  0AAF  0087               	movwf	7
  9896  0AB0  1081               	bcf	1,1
  9897                           
  9898                           ;Dimmer_B1.c: 932: if (DimmerLights->Switch == 1) {
  9899  0AB1  086B               	movf	_DimmerLights,w
  9900  0AB2  0086               	movwf	6
  9901  0AB3  3001               	movlw	1	; select bank2/3
  9902  0AB4  0087               	movwf	7
  9903  0AB5  1D01               	btfss	1,2
  9904  0AB6  2ABD               	goto	l7950
  9905                           
  9906                           ;Dimmer_B1.c: 933: setDimmerLights_OnOff(lights, 1);
  9907  0AB7  01E5               	clrf	setDimmerLights_OnOff@command
  9908  0AB8  0AE5               	incf	setDimmerLights_OnOff@command,f
  9909  0AB9  0869               	movf	setDimmerLights_Main@lights,w
  9910  0ABA  318F  2751         	fcall	_setDimmerLights_OnOff
  9911                           
  9912                           ;Dimmer_B1.c: 934: } else {
  9913  0ABC  0008               	return
  9914  0ABD                     l7950:	
  9915                           
  9916                           ;Dimmer_B1.c: 935: setDimmerLights_OnOff(lights, 0);
  9917  0ABD  0020               	movlb	0	; select bank0
  9918  0ABE  01E5               	clrf	setDimmerLights_OnOff@command
  9919  0ABF  0869               	movf	setDimmerLights_Main@lights,w
  9920  0AC0  318F  2751         	fcall	_setDimmerLights_OnOff
  9921                           
  9922                           ;Dimmer_B1.c: 936: }
  9923                           ;Dimmer_B1.c: 937: }
  9924                           ;Dimmer_B1.c: 938: } else {
  9925  0AC2  0008               	return
  9926  0AC3                     l7952:	
  9927                           
  9928                           ;Dimmer_B1.c: 939: if (getMain_All_LightsStatus() == 1) {
  9929  0AC3  3190  202E  318A   	fcall	_getMain_All_LightsStatus
  9930  0AC6  3A01               	xorlw	1
  9931  0AC7  1D03               	skipz
  9932  0AC8  2AEF               	goto	l7964
  9933                           
  9934                           ;Dimmer_B1.c: 940: if (DimmerLights->DimmingTrigger == 1) {
  9935  0AC9  0020               	movlb	0	; select bank0
  9936  0ACA  086B               	movf	_DimmerLights,w
  9937  0ACB  0086               	movwf	6
  9938  0ACC  3001               	movlw	1	; select bank2/3
  9939  0ACD  0087               	movwf	7
  9940  0ACE  1E01               	btfss	1,4
  9941  0ACF  0008               	return
  9942                           
  9943                           ;Dimmer_B1.c: 941: if (getDimmerLights_Allow_Condition(lights) == 0) {
  9944  0AD0  0869               	movf	setDimmerLights_Main@lights,w
  9945  0AD1  3194  24E2  318A   	fcall	_getDimmerLights_Allow_Condition
  9946  0AD4  3800               	iorlw	0
  9947  0AD5  1D03               	skipz
  9948  0AD6  0008               	return
  9949                           
  9950                           ;Dimmer_B1.c: 942: DimmerLights->DimmingTrigger = 0;
  9951  0AD7  0020               	movlb	0	; select bank0
  9952  0AD8  086B               	movf	_DimmerLights,w
  9953  0AD9  0086               	movwf	6
  9954  0ADA  3001               	movlw	1	; select bank2/3
  9955  0ADB  0087               	movwf	7
  9956  0ADC  1201               	bcf	1,4
  9957                           
  9958                           ;Dimmer_B1.c: 943: if (DimmerLights->DimmingSwitch == 1) {
  9959  0ADD  086B               	movf	_DimmerLights,w
  9960  0ADE  0086               	movwf	6
  9961  0ADF  3001               	movlw	1	; select bank2/3
  9962  0AE0  0087               	movwf	7
  9963  0AE1  1E81               	btfss	1,5
  9964  0AE2  2AE9               	goto	l7962
  9965                           
  9966                           ;Dimmer_B1.c: 944: setDimmerLights_Dimming(lights, 1);
  9967  0AE3  01DD               	clrf	setDimmerLights_Dimming@status
  9968  0AE4  0ADD               	incf	setDimmerLights_Dimming@status,f
  9969  0AE5  0869               	movf	setDimmerLights_Main@lights,w
  9970  0AE6  3196  267C         	fcall	_setDimmerLights_Dimming
  9971                           
  9972                           ;Dimmer_B1.c: 945: } else {
  9973  0AE8  0008               	return
  9974  0AE9                     l7962:	
  9975                           
  9976                           ;Dimmer_B1.c: 946: setDimmerLights_Dimming(lights, 0);
  9977  0AE9  0020               	movlb	0	; select bank0
  9978  0AEA  01DD               	clrf	setDimmerLights_Dimming@status
  9979  0AEB  0869               	movf	setDimmerLights_Main@lights,w
  9980  0AEC  3196  267C         	fcall	_setDimmerLights_Dimming
  9981                           
  9982                           ;Dimmer_B1.c: 947: }
  9983                           ;Dimmer_B1.c: 948: }
  9984                           ;Dimmer_B1.c: 949: }
  9985                           ;Dimmer_B1.c: 950: } else {
  9986  0AEE  0008               	return
  9987  0AEF                     l7964:	
  9988                           
  9989                           ;Dimmer_B1.c: 951: if (DimmerLights->DimmingTrigger == 1) {
  9990  0AEF  0020               	movlb	0	; select bank0
  9991  0AF0  086B               	movf	_DimmerLights,w
  9992  0AF1  0086               	movwf	6
  9993  0AF2  3001               	movlw	1	; select bank2/3
  9994  0AF3  0087               	movwf	7
  9995  0AF4  1E01               	btfss	1,4
  9996  0AF5  0008               	return
  9997                           
  9998                           ;Dimmer_B1.c: 952: DimmerLights->DimmingTrigger = 0;
  9999  0AF6  086B               	movf	_DimmerLights,w
 10000  0AF7  0086               	movwf	6
 10001  0AF8  3001               	movlw	1	; select bank2/3
 10002  0AF9  0087               	movwf	7
 10003  0AFA  1201               	bcf	1,4
 10004  0AFB  0008               	return
 10005  0AFC                     __end_of_setDimmerLights_Main:	
 10006                           
 10007                           	psect	text56
 10008  0F51                     __ptext56:	
 10009 ;; *************** function _setDimmerLights_OnOff *****************
 10010 ;; Defined at:
 10011 ;;		line 1003 in file "../src/Dimmer_B1.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;  lights          1    wreg     unsigned char 
 10014 ;;  command         1   69[BANK0 ] unsigned char 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  lights          1   72[BANK0 ] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;		None               void
 10019 ;; Registers used:
 10020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;Total ram usage:        4 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; Hardware stack levels required when called:    6
 10033 ;; This function calls:
 10034 ;;		_DimmerIntr_ValueCalculate
 10035 ;;		_getCmd_Status
 10036 ;;		_getDelayOff_GO
 10037 ;;		_getDimmerLights_PercentToValue
 10038 ;;		_getMain_All_LightsStatus
 10039 ;;		_setCmd_Status
 10040 ;;		_setDelayOff_GO
 10041 ;;		_setDimmerIntr_ControlStatus
 10042 ;;		_setDimmerIntr_DimmingValue
 10043 ;;		_setDimmerIntr_Dimming_RF
 10044 ;;		_setDimmerIntr_MaxmumValue
 10045 ;;		_setDimmerLights_DimmingClose
 10046 ;;		_setDimmerLights_Line
 10047 ;;		_setLED
 10048 ;;		_setProductData
 10049 ;; This function is called by:
 10050 ;;		_setDimmerLights_Main
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           
 10055                           ;psect for function _setDimmerLights_OnOff
 10056  0F51                     _setDimmerLights_OnOff:	
 10057                           
 10058                           ;incstack = 0
 10059                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10060                           ;setDimmerLights_OnOff@lights stored from wreg
 10061  0F51  0020               	movlb	0	; select bank0
 10062  0F52  00E8               	movwf	setDimmerLights_OnOff@lights
 10063                           
 10064                           ;Dimmer_B1.c: 1005: if (command == 1) {
 10065  0F53  0865               	movf	setDimmerLights_OnOff@command,w
 10066  0F54  3A01               	xorlw	1
 10067  0F55  1D03               	skipz
 10068  0F56  2FAF               	goto	l7748
 10069                           
 10070                           ;Dimmer_B1.c: 1007: setDimmerIntr_ControlStatus(lights, 1);
 10071  0F57  01F2               	clrf	setDimmerIntr_ControlStatus@command
 10072  0F58  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
 10073  0F59  0868               	movf	setDimmerLights_OnOff@lights,w
 10074  0F5A  3193  236C  318F   	fcall	_setDimmerIntr_ControlStatus
 10075                           
 10076                           ;Dimmer_B1.c: 1010: Dimmer.Load_Status = 1;
 10077  0F5D  0022               	movlb	2	; select bank2
 10078  0F5E  1520               	bsf	_Dimmer^(0+256),2
 10079                           
 10080                           ;Dimmer_B1.c: 1011: setDimmerLights_Line(lights);
 10081  0F5F  0020               	movlb	0	; select bank0
 10082  0F60  0868               	movf	setDimmerLights_OnOff@lights,w
 10083  0F61  3191  219F  318F   	fcall	_setDimmerLights_Line
 10084                           
 10085                           ;Dimmer_B1.c: 1017: setLED(lights, 0);
 10086  0F64  01F4               	clrf	setLED@command
 10087  0F65  0020               	movlb	0	; select bank0
 10088  0F66  0868               	movf	setDimmerLights_OnOff@lights,w
 10089  0F67  3188  20AC  318F   	fcall	_setLED
 10090                           
 10091                           ;Dimmer_B1.c: 1038: if (DimmerLights->DimmingRun == 1) {
 10092  0F6A  0020               	movlb	0	; select bank0
 10093  0F6B  0A6B               	incf	_DimmerLights,w
 10094  0F6C  0086               	movwf	6
 10095  0F6D  3001               	movlw	1	; select bank2/3
 10096  0F6E  0087               	movwf	7
 10097  0F6F  1F01               	btfss	1,6
 10098  0F70  2F92               	goto	l7738
 10099                           
 10100                           ;Dimmer_B1.c: 1039: DimmerLights->DimmingRun = 0;
 10101  0F71  0A6B               	incf	_DimmerLights,w
 10102  0F72  0086               	movwf	6
 10103  0F73  3001               	movlw	1	; select bank2/3
 10104  0F74  0087               	movwf	7
 10105  0F75  1301               	bcf	1,6
 10106                           
 10107                           ;Dimmer_B1.c: 1040: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
 10108  0F76  0868               	movf	setDimmerLights_OnOff@lights,w
 10109  0F77  3E14               	addlw	20
 10110  0F78  076D               	addwf	_product,w
 10111  0F79  00E6               	movwf	??_setDimmerLights_OnOff
 10112  0F7A  0866               	movf	??_setDimmerLights_OnOff,w
 10113  0F7B  0086               	movwf	6
 10114  0F7C  3002               	movlw	2	; select bank4/5
 10115  0F7D  0087               	movwf	7
 10116  0F7E  0801               	movf	1,w
 10117  0F7F  3189  21CD  318F   	fcall	_getDimmerLights_PercentToValue
 10118  0F82  0020               	movlb	0	; select bank0
 10119  0F83  00E7               	movwf	??_setDimmerLights_OnOff+1
 10120  0F84  0867               	movf	??_setDimmerLights_OnOff+1,w
 10121  0F85  00DA               	movwf	setDimmerIntr_MaxmumValue@value
 10122  0F86  0868               	movf	setDimmerLights_OnOff@lights,w
 10123  0F87  3191  21B5  318F   	fcall	_setDimmerIntr_MaxmumValue
 10124                           
 10125                           ;Dimmer_B1.c: 1041: setDimmerIntr_Dimming_RF(lights, 1);
 10126  0F8A  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 10127  0F8B  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 10128  0F8C  0020               	movlb	0	; select bank0
 10129  0F8D  0868               	movf	setDimmerLights_OnOff@lights,w
 10130  0F8E  3193  2343  318F   	fcall	_setDimmerIntr_Dimming_RF
 10131                           
 10132                           ;Dimmer_B1.c: 1042: } else {
 10133  0F91  2F9B               	goto	l7740
 10134  0F92                     l7738:	
 10135                           
 10136                           ;Dimmer_B1.c: 1047: setDimmerIntr_DimmingValue(lights, ((char)(5*0.55))+((((char)(77*0.5
      +                          5))-((char)(5*0.55)))/2));
 10137  0F92  3016               	movlw	22
 10138  0F93  0020               	movlb	0	; select bank0
 10139  0F94  00E6               	movwf	??_setDimmerLights_OnOff
 10140  0F95  0866               	movf	??_setDimmerLights_OnOff,w
 10141  0F96  00F2               	movwf	setDimmerIntr_DimmingValue@value
 10142  0F97  0868               	movf	setDimmerLights_OnOff@lights,w
 10143  0F98  3191  2135  318F   	fcall	_setDimmerIntr_DimmingValue
 10144  0F9B                     l7740:	
 10145                           
 10146                           ;Dimmer_B1.c: 1051: }
 10147                           ;Dimmer_B1.c: 1053: if (lights == 1) {
 10148  0F9B  0020               	movlb	0	; select bank0
 10149  0F9C  0868               	movf	setDimmerLights_OnOff@lights,w
 10150  0F9D  3A01               	xorlw	1
 10151  0F9E  1D03               	skipz
 10152  0F9F  2FA5               	goto	l7744
 10153                           
 10154                           ;Dimmer_B1.c: 1056: DimmerIntr_ValueCalculate(1);
 10155  0FA0  3001               	movlw	1
 10156  0FA1  3188  2055  318F   	fcall	_DimmerIntr_ValueCalculate
 10157                           
 10158                           ;Dimmer_B1.c: 1058: } else if (lights == 2) {
 10159  0FA4  2FDF               	goto	l7766
 10160  0FA5                     l7744:	
 10161  0FA5  0020               	movlb	0	; select bank0
 10162  0FA6  0868               	movf	setDimmerLights_OnOff@lights,w
 10163  0FA7  3A02               	xorlw	2
 10164  0FA8  1D03               	skipz
 10165  0FA9  2FDF               	goto	l7766
 10166                           
 10167                           ;Dimmer_B1.c: 1061: DimmerIntr_ValueCalculate(2);
 10168  0FAA  3002               	movlw	2
 10169  0FAB  3188  2055  318F   	fcall	_DimmerIntr_ValueCalculate
 10170                           
 10171                           ;Dimmer_B1.c: 1063: }
 10172                           ;Dimmer_B1.c: 1069: } else if (command == 0) {
 10173  0FAE  2FDF               	goto	l7766
 10174  0FAF                     l7748:	
 10175  0FAF  0020               	movlb	0	; select bank0
 10176  0FB0  08E5               	movf	setDimmerLights_OnOff@command,f
 10177  0FB1  1D03               	skipz
 10178  0FB2  2FDF               	goto	l7766
 10179                           
 10180                           ;Dimmer_B1.c: 1071: setDimmerIntr_ControlStatus(lights, 0);
 10181  0FB3  01F2               	clrf	setDimmerIntr_ControlStatus@command
 10182  0FB4  0868               	movf	setDimmerLights_OnOff@lights,w
 10183  0FB5  3193  236C  318F   	fcall	_setDimmerIntr_ControlStatus
 10184                           
 10185                           ;Dimmer_B1.c: 1073: Dimmer.Load_Status = 0;
 10186  0FB8  0022               	movlb	2	; select bank2
 10187  0FB9  1120               	bcf	_Dimmer^(0+256),2
 10188                           
 10189                           ;Dimmer_B1.c: 1074: setDimmerLights_Line(0);
 10190  0FBA  3000               	movlw	0
 10191  0FBB  3191  219F  318F   	fcall	_setDimmerLights_Line
 10192                           
 10193                           ;Dimmer_B1.c: 1078: if (getDelayOff_GO(lights) == 1) {
 10194  0FBE  0020               	movlb	0	; select bank0
 10195  0FBF  0868               	movf	setDimmerLights_OnOff@lights,w
 10196  0FC0  3190  201F  318F   	fcall	_getDelayOff_GO
 10197  0FC3  3A01               	xorlw	1
 10198  0FC4  1D03               	skipz
 10199  0FC5  2FCD               	goto	l606
 10200                           
 10201                           ;Dimmer_B1.c: 1079: setDelayOff_GO(lights, 0, 0);
 10202  0FC6  0020               	movlb	0	; select bank0
 10203  0FC7  01DD               	clrf	setDelayOff_GO@command
 10204  0FC8  01DE               	clrf	setDelayOff_GO@value
 10205  0FC9  0868               	movf	setDimmerLights_OnOff@lights,w
 10206  0FCA  318C  2449  318F   	fcall	_setDelayOff_GO
 10207  0FCD                     l606:	
 10208                           
 10209                           ;Dimmer_B1.c: 1080: }
 10210                           ;Dimmer_B1.c: 1085: setLED(lights, 1);
 10211  0FCD  01F4               	clrf	setLED@command
 10212  0FCE  0AF4               	incf	setLED@command,f
 10213  0FCF  0020               	movlb	0	; select bank0
 10214  0FD0  0868               	movf	setDimmerLights_OnOff@lights,w
 10215  0FD1  3188  20AC  318F   	fcall	_setLED
 10216                           
 10217                           ;Dimmer_B1.c: 1090: if (lights == 1) {
 10218  0FD4  0020               	movlb	0	; select bank0
 10219  0FD5  0868               	movf	setDimmerLights_OnOff@lights,w
 10220  0FD6  3A01               	xorlw	1
 10221  0FD7  1D03               	skipz
 10222  0FD8  2FDB               	goto	l7762
 10223                           
 10224                           ;Dimmer_B1.c: 1092: RB4 = 0;
 10225  0FD9  120D               	bcf	13,4	;volatile
 10226                           
 10227                           ;Dimmer_B1.c: 1098: }
 10228  0FDA  2FDF               	goto	l7766
 10229  0FDB                     l7762:	
 10230                           
 10231                           ;Dimmer_B1.c: 1101: else if (lights == 2) {
 10232  0FDB  0868               	movf	setDimmerLights_OnOff@lights,w
 10233  0FDC  3A02               	xorlw	2
 10234  0FDD  1903               	btfsc	3,2
 10235                           
 10236                           ;Dimmer_B1.c: 1103: RA7 = 0;
 10237  0FDE  138C               	bcf	12,7	;volatile
 10238  0FDF                     l7766:	
 10239                           
 10240                           ;Dimmer_B1.c: 1108: }
 10241                           ;Dimmer_B1.c: 1124: }
 10242                           ;Dimmer_B1.c: 1126: setDimmerLights_DimmingClose();
 10243  0FDF  319F  2765  318F   	fcall	_setDimmerLights_DimmingClose
 10244                           
 10245                           ;Dimmer_B1.c: 1128: ;;
 10246                           ;Dimmer_B1.c: 1130: if (getCmd_Status(1) == 1) {
 10247  0FE2  3001               	movlw	1
 10248  0FE3  3190  2010  318F   	fcall	_getCmd_Status
 10249  0FE6  3A01               	xorlw	1
 10250  0FE7  1D03               	skipz
 10251  0FE8  0008               	return
 10252                           
 10253                           ;Dimmer_B1.c: 1131: if (getMain_All_LightsStatus() == 0) {
 10254  0FE9  3190  202E  318F   	fcall	_getMain_All_LightsStatus
 10255  0FEC  3800               	iorlw	0
 10256  0FED  1D03               	skipz
 10257  0FEE  0008               	return
 10258                           
 10259                           ;Dimmer_B1.c: 1132: setCmd_Status(1, 0);
 10260  0FEF  01F2               	clrf	setCmd_Status@cmd
 10261  0FF0  3001               	movlw	1
 10262  0FF1  3190  20E3  318F   	fcall	_setCmd_Status
 10263                           
 10264                           ;Dimmer_B1.c: 1133: setProductData(11, 0);
 10265  0FF4  0020               	movlb	0	; select bank0
 10266  0FF5  01DA               	clrf	setProductData@value
 10267  0FF6  300B               	movlw	11
 10268  0FF7  319F  27A7  318F   	fcall	_setProductData
 10269                           
 10270                           ;Dimmer_B1.c: 1134: setProductData(17, 0);
 10271  0FFA  0020               	movlb	0	; select bank0
 10272  0FFB  01DA               	clrf	setProductData@value
 10273  0FFC  3011               	movlw	17
 10274  0FFD  319F  27A7         	fcall	_setProductData
 10275                           
 10276                           ;Dimmer_B1.c: 1136: }
 10277                           ;Dimmer_B1.c: 1137: } else {
 10278                           
 10279                           ;Dimmer_B1.c: 1135: ;;
 10280  0FFF  0008               	return
 10281  1000                     __end_of_setDimmerLights_OnOff:	
 10282                           ;Dimmer_B1.c: 1138: ;;
 10283                           
 10284                           
 10285                           	psect	text57
 10286  08AC                     __ptext57:	
 10287 ;; *************** function _setLED *****************
 10288 ;; Defined at:
 10289 ;;		line 81 in file "../src/LED_B1.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  led             1    wreg     unsigned char 
 10292 ;;  command         1    4[COMMON] unsigned char 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  led             1    5[COMMON] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;		None               void
 10297 ;; Registers used:
 10298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10304 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10308 ;;Total ram usage:        2 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    4
 10311 ;; This function calls:
 10312 ;;		_LedPointSelect
 10313 ;; This function is called by:
 10314 ;;		_setDimmerLights_OnOff
 10315 ;;		_setLED_Initialization
 10316 ;;		_setSw_Initialization
 10317 ;;		_Exception_Main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           
 10322                           ;psect for function _setLED
 10323  08AC                     _setLED:	
 10324                           
 10325                           ;incstack = 0
 10326                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10327                           ;setLED@led stored from wreg
 10328  08AC  00F5               	movwf	setLED@led
 10329                           
 10330                           ;LED_B1.c: 82: LedPointSelect(led);
 10331  08AD  0875               	movf	setLED@led,w
 10332  08AE  3191  21CC  3188   	fcall	_LedPointSelect
 10333                           
 10334                           ;LED_B1.c: 83: if (command == 0) {
 10335  08B1  08F4               	movf	setLED@command,f
 10336  08B2  1D03               	skipz
 10337  08B3  28C6               	goto	l5660
 10338                           
 10339                           ;LED_B1.c: 85: if (led == 1) {
 10340  08B4  0875               	movf	setLED@led,w
 10341  08B5  3A01               	xorlw	1
 10342  08B6  1D03               	skipz
 10343  08B7  28BA               	goto	l5652
 10344                           
 10345                           ;LED_B1.c: 89: RC7 = 1;
 10346  08B8  0020               	movlb	0	; select bank0
 10347  08B9  178E               	bsf	14,7	;volatile
 10348  08BA                     l5652:	
 10349                           
 10350                           ;LED_B1.c: 91: }
 10351                           ;LED_B1.c: 94: if (led == 2) {
 10352  08BA  0875               	movf	setLED@led,w
 10353  08BB  3A02               	xorlw	2
 10354  08BC  1D03               	skipz
 10355  08BD  28C0               	goto	l5656
 10356                           
 10357                           ;LED_B1.c: 98: RA3 = 1;
 10358  08BE  0020               	movlb	0	; select bank0
 10359  08BF  158C               	bsf	12,3	;volatile
 10360  08C0                     l5656:	
 10361                           
 10362                           ;LED_B1.c: 100: }
 10363                           ;LED_B1.c: 112: if (led == 99) {
 10364  08C0  0875               	movf	setLED@led,w
 10365  08C1  3A63               	xorlw	99
 10366  08C2  1D03               	skipz
 10367  08C3  28C6               	goto	l5660
 10368                           
 10369                           ;LED_B1.c: 116: RB5 = 1;
 10370  08C4  0020               	movlb	0	; select bank0
 10371  08C5  168D               	bsf	13,5	;volatile
 10372  08C6                     l5660:	
 10373                           
 10374                           ;LED_B1.c: 118: }
 10375                           ;LED_B1.c: 120: }
 10376                           ;LED_B1.c: 121: if (command == 1) {
 10377  08C6  0874               	movf	setLED@command,w
 10378  08C7  3A01               	xorlw	1
 10379  08C8  1D03               	skipz
 10380  08C9  28DC               	goto	l5674
 10381                           
 10382                           ;LED_B1.c: 123: if (led == 1) {
 10383  08CA  0875               	movf	setLED@led,w
 10384  08CB  3A01               	xorlw	1
 10385  08CC  1D03               	skipz
 10386  08CD  28D0               	goto	l5666
 10387                           
 10388                           ;LED_B1.c: 127: RC7 = 0;
 10389  08CE  0020               	movlb	0	; select bank0
 10390  08CF  138E               	bcf	14,7	;volatile
 10391  08D0                     l5666:	
 10392                           
 10393                           ;LED_B1.c: 129: }
 10394                           ;LED_B1.c: 132: if (led == 2) {
 10395  08D0  0875               	movf	setLED@led,w
 10396  08D1  3A02               	xorlw	2
 10397  08D2  1D03               	skipz
 10398  08D3  28D6               	goto	l5670
 10399                           
 10400                           ;LED_B1.c: 136: RA3 = 0;
 10401  08D4  0020               	movlb	0	; select bank0
 10402  08D5  118C               	bcf	12,3	;volatile
 10403  08D6                     l5670:	
 10404                           
 10405                           ;LED_B1.c: 138: }
 10406                           ;LED_B1.c: 150: if (led == 99) {
 10407  08D6  0875               	movf	setLED@led,w
 10408  08D7  3A63               	xorlw	99
 10409  08D8  1D03               	skipz
 10410  08D9  28DC               	goto	l5674
 10411                           
 10412                           ;LED_B1.c: 154: RB5 = 0;
 10413  08DA  0020               	movlb	0	; select bank0
 10414  08DB  128D               	bcf	13,5	;volatile
 10415  08DC                     l5674:	
 10416                           
 10417                           ;LED_B1.c: 156: }
 10418                           ;LED_B1.c: 158: }
 10419                           ;LED_B1.c: 159: if (command == 10) {
 10420  08DC  0874               	movf	setLED@command,w
 10421  08DD  3A0A               	xorlw	10
 10422  08DE  1D03               	skipz
 10423  08DF  28FF               	goto	l5690
 10424                           
 10425                           ;LED_B1.c: 160: LED->GO = 0;
 10426  08E0  087B               	movf	_LED,w
 10427  08E1  0086               	movwf	6
 10428  08E2  3001               	movlw	1	; select bank2/3
 10429  08E3  0087               	movwf	7
 10430  08E4  1081               	bcf	1,1
 10431                           
 10432                           ;LED_B1.c: 161: LED->Time = 0;
 10433  08E5  0A7B               	incf	_LED,w
 10434  08E6  0086               	movwf	6
 10435  08E7  3001               	movlw	1	; select bank2/3
 10436  08E8  0087               	movwf	7
 10437  08E9  3000               	movlw	0
 10438  08EA  3FC0               	movwi [0]fsr1
 10439  08EB  3FC1               	movwi [1]fsr1
 10440                           
 10441                           ;LED_B1.c: 163: if (led == 1) {
 10442  08EC  0875               	movf	setLED@led,w
 10443  08ED  3A01               	xorlw	1
 10444  08EE  1D03               	skipz
 10445  08EF  28F3               	goto	l5682
 10446                           
 10447                           ;LED_B1.c: 167: RC7 = 1;
 10448  08F0  0020               	movlb	0	; select bank0
 10449  08F1  178E               	bsf	14,7	;volatile
 10450                           
 10451                           ;LED_B1.c: 169: }
 10452  08F2  28F9               	goto	l5686
 10453  08F3                     l5682:	
 10454                           
 10455                           ;LED_B1.c: 172: else if (led == 2) {
 10456  08F3  0875               	movf	setLED@led,w
 10457  08F4  3A02               	xorlw	2
 10458  08F5  1D03               	skipz
 10459  08F6  28F9               	goto	l5686
 10460                           
 10461                           ;LED_B1.c: 176: RA3 = 1;
 10462  08F7  0020               	movlb	0	; select bank0
 10463  08F8  158C               	bsf	12,3	;volatile
 10464  08F9                     l5686:	
 10465                           
 10466                           ;LED_B1.c: 178: }
 10467                           ;LED_B1.c: 190: if (led == 99) {
 10468  08F9  0875               	movf	setLED@led,w
 10469  08FA  3A63               	xorlw	99
 10470  08FB  1D03               	skipz
 10471  08FC  28FF               	goto	l5690
 10472                           
 10473                           ;LED_B1.c: 194: RB5 = 1;
 10474  08FD  0020               	movlb	0	; select bank0
 10475  08FE  168D               	bsf	13,5	;volatile
 10476  08FF                     l5690:	
 10477                           
 10478                           ;LED_B1.c: 196: }
 10479                           ;LED_B1.c: 198: }
 10480                           ;LED_B1.c: 199: if (command == 11) {
 10481  08FF  0874               	movf	setLED@command,w
 10482  0900  3A0B               	xorlw	11
 10483  0901  1D03               	skipz
 10484  0902  0008               	return
 10485                           
 10486                           ;LED_B1.c: 200: LED->GO = 1;
 10487  0903  087B               	movf	_LED,w
 10488  0904  0086               	movwf	6
 10489  0905  3001               	movlw	1	; select bank2/3
 10490  0906  0087               	movwf	7
 10491  0907  1481               	bsf	1,1
 10492  0908  0008               	return
 10493  0909                     __end_of_setLED:	
 10494                           
 10495                           	psect	text58
 10496  11CC                     __ptext58:	
 10497 ;; *************** function _LedPointSelect *****************
 10498 ;; Defined at:
 10499 ;;		line 7 in file "../src/LED_B1.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  led             1    wreg     unsigned char 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  led             1    3[COMMON] unsigned char 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;		None               void
 10506 ;; Registers used:
 10507 ;;		wreg
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    3
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_setLED_Initialization
 10524 ;;		_setLED
 10525 ;;		_setLED_Main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           
 10530                           ;psect for function _LedPointSelect
 10531  11CC                     _LedPointSelect:	
 10532                           
 10533                           ;incstack = 0
 10534                           ; Regs used in _LedPointSelect: [wreg]
 10535                           ;LedPointSelect@led stored from wreg
 10536  11CC  00F3               	movwf	LedPointSelect@led
 10537                           
 10538                           ;LED_B1.c: 9: if (led == 1) {
 10539  11CD  0873               	movf	LedPointSelect@led,w
 10540  11CE  3A01               	xorlw	1
 10541  11CF  1D03               	skipz
 10542  11D0  29D5               	goto	l841
 10543                           
 10544                           ;LED_B1.c: 10: LED = &VarLED1;
 10545  11D1  3068               	movlw	_VarLED1& (0+255)
 10546  11D2  00F2               	movwf	??_LedPointSelect
 10547  11D3  0872               	movf	??_LedPointSelect,w
 10548  11D4  00FB               	movwf	_LED
 10549  11D5                     l841:	
 10550                           
 10551                           ;LED_B1.c: 11: }
 10552                           ;LED_B1.c: 14: if (led == 2) {
 10553  11D5  0873               	movf	LedPointSelect@led,w
 10554  11D6  3A02               	xorlw	2
 10555  11D7  1D03               	skipz
 10556  11D8  29DD               	goto	l842
 10557                           
 10558                           ;LED_B1.c: 15: LED = &VarLED2;
 10559  11D9  306C               	movlw	_VarLED2& (0+255)
 10560  11DA  00F2               	movwf	??_LedPointSelect
 10561  11DB  0872               	movf	??_LedPointSelect,w
 10562  11DC  00FB               	movwf	_LED
 10563  11DD                     l842:	
 10564                           
 10565                           ;LED_B1.c: 16: }
 10566                           ;LED_B1.c: 24: if (led == 99) {
 10567  11DD  0873               	movf	LedPointSelect@led,w
 10568  11DE  3A63               	xorlw	99
 10569  11DF  1D03               	skipz
 10570  11E0  0008               	return
 10571                           
 10572                           ;LED_B1.c: 25: LED = &VarErrLED;
 10573  11E1  3064               	movlw	_VarErrLED& (0+255)
 10574  11E2  00F2               	movwf	??_LedPointSelect
 10575  11E3  0872               	movf	??_LedPointSelect,w
 10576  11E4  00FB               	movwf	_LED
 10577  11E5  0008               	return
 10578  11E6                     __end_of_LedPointSelect:	
 10579                           
 10580                           	psect	text59
 10581  1F65                     __ptext59:	
 10582 ;; *************** function _setDimmerLights_DimmingClose *****************
 10583 ;; Defined at:
 10584 ;;		line 2042 in file "../src/Dimmer_B1.c"
 10585 ;; Parameters:    Size  Location     Type
 10586 ;;		None
 10587 ;; Auto vars:     Size  Location     Type
 10588 ;;		None
 10589 ;; Return value:  Size  Location     Type
 10590 ;;		None               void
 10591 ;; Registers used:
 10592 ;;		wreg, status,2, status,0, pclath, cstack
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;Total ram usage:        0 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:    4
 10605 ;; This function calls:
 10606 ;;		_setDimmerIntr_Dimming_Sw
 10607 ;; This function is called by:
 10608 ;;		_setDimmerLights_OnOff
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           
 10613                           ;psect for function _setDimmerLights_DimmingClose
 10614  1F65                     _setDimmerLights_DimmingClose:	
 10615                           
 10616                           ;Dimmer_B1.c: 2044: setDimmerIntr_Dimming_Sw(1, 0);
 10617                           
 10618                           ;incstack = 0
 10619                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 10620  1F65  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 10621  1F66  3001               	movlw	1
 10622  1F67  3192  22F7  319F   	fcall	_setDimmerIntr_Dimming_Sw
 10623                           
 10624                           ;Dimmer_B1.c: 2048: setDimmerIntr_Dimming_Sw(2, 0);
 10625  1F6A  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 10626  1F6B  3002               	movlw	2
 10627  1F6C  3192  22F7         	fcall	_setDimmerIntr_Dimming_Sw
 10628  1F6E  0008               	return
 10629  1F6F                     __end_of_setDimmerLights_DimmingClose:	
 10630                           
 10631                           	psect	text60
 10632  1135                     __ptext60:	
 10633 ;; *************** function _setDimmerIntr_DimmingValue *****************
 10634 ;; Defined at:
 10635 ;;		line 139 in file "../src/Dimmer_B1.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  lights          1    wreg     unsigned char 
 10638 ;;  value           1    2[COMMON] unsigned char 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  lights          1    4[COMMON] unsigned char 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;		None               void
 10643 ;; Registers used:
 10644 ;;		wreg
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;Total ram usage:        3 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    3
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_setDimmerLights_OnOff
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           
 10665                           ;psect for function _setDimmerIntr_DimmingValue
 10666  1135                     _setDimmerIntr_DimmingValue:	
 10667                           
 10668                           ;incstack = 0
 10669                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 10670                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 10671  1135  00F4               	movwf	setDimmerIntr_DimmingValue@lights
 10672                           
 10673                           ;Dimmer_B1.c: 141: if (lights == 1) {
 10674  1136  0874               	movf	setDimmerIntr_DimmingValue@lights,w
 10675  1137  3A01               	xorlw	1
 10676  1138  1D03               	skipz
 10677  1139  2940               	goto	l5566
 10678                           
 10679                           ;Dimmer_B1.c: 142: DimmerIntr1.DimmingValue = value;
 10680  113A  0872               	movf	setDimmerIntr_DimmingValue@value,w
 10681  113B  00F3               	movwf	??_setDimmerIntr_DimmingValue
 10682  113C  0873               	movf	??_setDimmerIntr_DimmingValue,w
 10683  113D  0021               	movlb	1	; select bank1
 10684  113E  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 10685                           
 10686                           ;Dimmer_B1.c: 143: }
 10687  113F  0008               	return
 10688  1140                     l5566:	
 10689                           
 10690                           ;Dimmer_B1.c: 146: else if (lights == 2) {
 10691  1140  0874               	movf	setDimmerIntr_DimmingValue@lights,w
 10692  1141  3A02               	xorlw	2
 10693  1142  1D03               	skipz
 10694  1143  0008               	return
 10695                           
 10696                           ;Dimmer_B1.c: 147: DimmerIntr2.DimmingValue = value;
 10697  1144  0872               	movf	setDimmerIntr_DimmingValue@value,w
 10698  1145  00F3               	movwf	??_setDimmerIntr_DimmingValue
 10699  1146  0873               	movf	??_setDimmerIntr_DimmingValue,w
 10700  1147  0021               	movlb	1	; select bank1
 10701  1148  00B5               	movwf	(_DimmerIntr2^(0+128)+5)
 10702  1149  0008               	return
 10703  114A                     __end_of_setDimmerIntr_DimmingValue:	
 10704                           
 10705                           	psect	text61
 10706  136C                     __ptext61:	
 10707 ;; *************** function _setDimmerIntr_ControlStatus *****************
 10708 ;; Defined at:
 10709 ;;		line 121 in file "../src/Dimmer_B1.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  lights          1    wreg     unsigned char 
 10712 ;;  command         1    2[COMMON] unsigned char 
 10713 ;; Auto vars:     Size  Location     Type
 10714 ;;  lights          1    4[COMMON] unsigned char 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;		None               void
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;Total ram usage:        3 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    3
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_setDimmerLights_OnOff
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           
 10739                           ;psect for function _setDimmerIntr_ControlStatus
 10740  136C                     _setDimmerIntr_ControlStatus:	
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 10744                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 10745  136C  00F4               	movwf	setDimmerIntr_ControlStatus@lights
 10746                           
 10747                           ;Dimmer_B1.c: 123: if (lights == 1) {
 10748  136D  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 10749  136E  3A01               	xorlw	1
 10750  136F  1D03               	skipz
 10751  1370  2B81               	goto	l5558
 10752                           
 10753                           ;Dimmer_B1.c: 124: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 10754  1371  0872               	movf	setDimmerIntr_ControlStatus@command,w
 10755  1372  3A01               	xorlw	1
 10756  1373  3000               	movlw	0
 10757  1374  1903               	skipnz
 10758  1375  3001               	movlw	1
 10759  1376  00F3               	movwf	??_setDimmerIntr_ControlStatus
 10760  1377  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10761  1378  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10762  1379  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10763  137A  0021               	movlb	1	; select bank1
 10764  137B  0820               	movf	_DimmerIntr1^(0+128),w
 10765  137C  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 10766  137D  39F7               	andlw	-9
 10767  137E  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 10768  137F  00A0               	movwf	_DimmerIntr1^(0+128)
 10769                           
 10770                           ;Dimmer_B1.c: 125: }
 10771  1380  0008               	return
 10772  1381                     l5558:	
 10773                           
 10774                           ;Dimmer_B1.c: 128: else if (lights == 2) {
 10775  1381  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 10776  1382  3A02               	xorlw	2
 10777  1383  1D03               	skipz
 10778  1384  0008               	return
 10779                           
 10780                           ;Dimmer_B1.c: 129: DimmerIntr2.ControlStatus = command == 1 ? 1 : 0;
 10781  1385  0872               	movf	setDimmerIntr_ControlStatus@command,w
 10782  1386  3A01               	xorlw	1
 10783  1387  3000               	movlw	0
 10784  1388  1903               	skipnz
 10785  1389  3001               	movlw	1
 10786  138A  00F3               	movwf	??_setDimmerIntr_ControlStatus
 10787  138B  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10788  138C  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10789  138D  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 10790  138E  0021               	movlb	1	; select bank1
 10791  138F  0830               	movf	_DimmerIntr2^(0+128),w
 10792  1390  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 10793  1391  39F7               	andlw	-9
 10794  1392  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 10795  1393  00B0               	movwf	_DimmerIntr2^(0+128)
 10796  1394  0008               	return
 10797  1395                     __end_of_setDimmerIntr_ControlStatus:	
 10798                           
 10799                           	psect	text62
 10800  0C49                     __ptext62:	
 10801 ;; *************** function _setDelayOff_GO *****************
 10802 ;; Defined at:
 10803 ;;		line 87 in file "../src/DelayOff_B1.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  sw              1    wreg     unsigned char 
 10806 ;;  command         1   61[BANK0 ] unsigned char 
 10807 ;;  value           1   62[BANK0 ] unsigned char 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  sw              1   68[BANK0 ] unsigned char 
 10810 ;;  k               1   67[BANK0 ] unsigned char 
 10811 ;;  j               1   66[BANK0 ] unsigned char 
 10812 ;;  i               1   65[BANK0 ] unsigned char 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;		None               void
 10815 ;; Registers used:
 10816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;Total ram usage:        8 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:    4
 10829 ;; This function calls:
 10830 ;;		_DelayOffPointSelect
 10831 ;;		___bmul
 10832 ;;		_setProductData
 10833 ;; This function is called by:
 10834 ;;		_setDimmerLights_OnOff
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           
 10839                           ;psect for function _setDelayOff_GO
 10840  0C49                     _setDelayOff_GO:	
 10841                           
 10842                           ;incstack = 0
 10843                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10844                           ;setDelayOff_GO@sw stored from wreg
 10845  0C49  0020               	movlb	0	; select bank0
 10846  0C4A  00E4               	movwf	setDelayOff_GO@sw
 10847                           
 10848                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 10849  0C4B  0864               	movf	setDelayOff_GO@sw,w
 10850  0C4C  3191  210B  318C   	fcall	_DelayOffPointSelect
 10851                           
 10852                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 10853  0C4F  0020               	movlb	0	; select bank0
 10854  0C50  085D               	movf	setDelayOff_GO@command,w
 10855  0C51  3A01               	xorlw	1
 10856  0C52  3000               	movlw	0
 10857  0C53  1903               	skipnz
 10858  0C54  3001               	movlw	1
 10859  0C55  00DF               	movwf	??_setDelayOff_GO
 10860  0C56  086A               	movf	_DelayOff,w
 10861  0C57  0086               	movwf	6
 10862  0C58  3001               	movlw	1	; select bank2/3
 10863  0C59  0087               	movwf	7
 10864  0C5A  0DDF               	rlf	??_setDelayOff_GO,f
 10865  0C5B  0801               	movf	1,w
 10866  0C5C  065F               	xorwf	??_setDelayOff_GO,w
 10867  0C5D  39FD               	andlw	-3
 10868  0C5E  065F               	xorwf	??_setDelayOff_GO,w
 10869  0C5F  0081               	movwf	1
 10870                           
 10871                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 10872  0C60  086A               	movf	_DelayOff,w
 10873  0C61  3E02               	addlw	2
 10874  0C62  0086               	movwf	6
 10875  0C63  3001               	movlw	1	; select bank2/3
 10876  0C64  0087               	movwf	7
 10877  0C65  3000               	movlw	0
 10878  0C66  3FC0               	movwi [0]fsr1
 10879  0C67  3FC1               	movwi [1]fsr1
 10880                           
 10881                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 10882  0C68  086A               	movf	_DelayOff,w
 10883  0C69  3E04               	addlw	4
 10884  0C6A  0086               	movwf	6
 10885  0C6B  3001               	movlw	1	; select bank2/3
 10886  0C6C  0087               	movwf	7
 10887  0C6D  0181               	clrf	1
 10888                           
 10889                           ;DelayOff_B1.c: 94: if (command == 1) {
 10890  0C6E  085D               	movf	setDelayOff_GO@command,w
 10891  0C6F  3A01               	xorlw	1
 10892  0C70  1D03               	skipz
 10893  0C71  2CC3               	goto	l5522
 10894                           
 10895                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 10896  0C72  3005               	movlw	5
 10897  0C73  00DF               	movwf	??_setDelayOff_GO
 10898  0C74  085F               	movf	??_setDelayOff_GO,w
 10899  0C75  00E1               	movwf	setDelayOff_GO@i
 10900  0C76  01E2               	clrf	setDelayOff_GO@j
 10901  0C77  01E3               	clrf	setDelayOff_GO@k
 10902                           
 10903                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 10904  0C78  300F               	movlw	15
 10905  0C79  055E               	andwf	setDelayOff_GO@value,w
 10906  0C7A  00DF               	movwf	??_setDelayOff_GO
 10907  0C7B  085F               	movf	??_setDelayOff_GO,w
 10908  0C7C  3A05               	xorlw	5
 10909  0C7D  1903               	skipnz
 10910  0C7E  2C83               	goto	l5508
 10911  0C7F  085E               	movf	setDelayOff_GO@value,w
 10912  0C80  390F               	andlw	15
 10913  0C81  1D03               	btfss	3,2
 10914  0C82  2CB1               	goto	l5518
 10915  0C83                     l5508:	
 10916  0C83  3031               	movlw	49
 10917  0C84  025E               	subwf	setDelayOff_GO@value,w
 10918  0C85  1803               	skipnc
 10919  0C86  2CB1               	goto	l5518
 10920                           
 10921                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 10922  0C87  085E               	movf	setDelayOff_GO@value,w
 10923  0C88  390F               	andlw	15
 10924  0C89  00DF               	movwf	??_setDelayOff_GO
 10925  0C8A  085F               	movf	??_setDelayOff_GO,w
 10926  0C8B  00E2               	movwf	setDelayOff_GO@j
 10927                           
 10928                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 10929  0C8C  085E               	movf	setDelayOff_GO@value,w
 10930  0C8D  00DF               	movwf	??_setDelayOff_GO
 10931  0C8E  3004               	movlw	4
 10932  0C8F                     u5395:	
 10933  0C8F  36DF               	lsrf	??_setDelayOff_GO,f
 10934  0C90  0B89               	decfsz	9,f
 10935  0C91  2C8F               	goto	u5395
 10936  0C92  085F               	movf	??_setDelayOff_GO,w
 10937  0C93  390F               	andlw	15
 10938  0C94  00E0               	movwf	??_setDelayOff_GO+1
 10939  0C95  0860               	movf	??_setDelayOff_GO+1,w
 10940  0C96  00E3               	movwf	setDelayOff_GO@k
 10941                           
 10942                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 10943  0C97  300A               	movlw	10
 10944  0C98  00DF               	movwf	??_setDelayOff_GO
 10945  0C99  085F               	movf	??_setDelayOff_GO,w
 10946  0C9A  00F2               	movwf	___bmul@multiplicand
 10947  0C9B  0863               	movf	setDelayOff_GO@k,w
 10948  0C9C  3190  208A  318C   	fcall	___bmul
 10949  0C9F  0020               	movlb	0	; select bank0
 10950  0CA0  0762               	addwf	setDelayOff_GO@j,w
 10951  0CA1  00E0               	movwf	??_setDelayOff_GO+1
 10952  0CA2  0A6A               	incf	_DelayOff,w
 10953  0CA3  0086               	movwf	6
 10954  0CA4  3001               	movlw	1	; select bank2/3
 10955  0CA5  0087               	movwf	7
 10956  0CA6  0860               	movf	??_setDelayOff_GO+1,w
 10957  0CA7  0081               	movwf	1
 10958                           
 10959                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 10960  0CA8  085E               	movf	setDelayOff_GO@value,w
 10961  0CA9  00DF               	movwf	??_setDelayOff_GO
 10962  0CAA  085F               	movf	??_setDelayOff_GO,w
 10963  0CAB  00DA               	movwf	setProductData@value
 10964  0CAC  0864               	movf	setDelayOff_GO@sw,w
 10965  0CAD  3E1A               	addlw	26
 10966  0CAE  319F  27A7         	fcall	_setProductData
 10967                           
 10968                           ;DelayOff_B1.c: 103: } else {
 10969  0CB0  0008               	return
 10970  0CB1                     l5518:	
 10971                           
 10972                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 10973  0CB1  3005               	movlw	5
 10974  0CB2  0020               	movlb	0	; select bank0
 10975  0CB3  00DF               	movwf	??_setDelayOff_GO
 10976  0CB4  0A6A               	incf	_DelayOff,w
 10977  0CB5  0086               	movwf	6
 10978  0CB6  3001               	movlw	1	; select bank2/3
 10979  0CB7  0087               	movwf	7
 10980  0CB8  085F               	movf	??_setDelayOff_GO,w
 10981  0CB9  0081               	movwf	1
 10982                           
 10983                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 10984  0CBA  3005               	movlw	5
 10985  0CBB  00DF               	movwf	??_setDelayOff_GO
 10986  0CBC  085F               	movf	??_setDelayOff_GO,w
 10987  0CBD  00DA               	movwf	setProductData@value
 10988  0CBE  0864               	movf	setDelayOff_GO@sw,w
 10989  0CBF  3E1A               	addlw	26
 10990  0CC0  319F  27A7         	fcall	_setProductData
 10991                           
 10992                           ;DelayOff_B1.c: 106: }
 10993                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 10994  0CC2  0008               	return
 10995  0CC3                     l5522:	
 10996  0CC3  0020               	movlb	0	; select bank0
 10997  0CC4  08DD               	movf	setDelayOff_GO@command,f
 10998  0CC5  1D03               	skipz
 10999  0CC6  0008               	return
 11000                           
 11001                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 11002  0CC7  01DA               	clrf	setProductData@value
 11003  0CC8  0864               	movf	setDelayOff_GO@sw,w
 11004  0CC9  3E1A               	addlw	26
 11005  0CCA  319F  27A7         	fcall	_setProductData
 11006  0CCC  0008               	return
 11007  0CCD                     __end_of_setDelayOff_GO:	
 11008                           
 11009                           	psect	text63
 11010  108A                     __ptext63:	
 11011 ;; *************** function ___bmul *****************
 11012 ;; Defined at:
 11013 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  multiplier      1    wreg     unsigned char 
 11016 ;;  multiplicand    1    2[COMMON] unsigned char 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  multiplier      1    5[COMMON] unsigned char 
 11019 ;;  product         1    4[COMMON] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      unsigned char 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11029 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;Total ram usage:        4 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    3
 11036 ;; This function calls:
 11037 ;;		Nothing
 11038 ;; This function is called by:
 11039 ;;		_setDelayOff_GO
 11040 ;;		_DelayTimejudge
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           
 11045                           ;psect for function ___bmul
 11046  108A                     ___bmul:	
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11050                           ;___bmul@multiplier stored from wreg
 11051  108A  00F5               	movwf	___bmul@multiplier
 11052  108B  01F4               	clrf	___bmul@product
 11053  108C                     l5166:	
 11054  108C  1C75               	btfss	___bmul@multiplier,0
 11055  108D  2892               	goto	l5170
 11056  108E  0872               	movf	___bmul@multiplicand,w
 11057  108F  00F3               	movwf	??___bmul
 11058  1090  0873               	movf	??___bmul,w
 11059  1091  07F4               	addwf	___bmul@product,f
 11060  1092                     l5170:	
 11061  1092  1003               	clrc
 11062  1093  0DF2               	rlf	___bmul@multiplicand,f
 11063  1094  1003               	clrc
 11064  1095  0CF5               	rrf	___bmul@multiplier,f
 11065  1096  08F5               	movf	___bmul@multiplier,f
 11066  1097  1D03               	skipz
 11067  1098  288C               	goto	l5166
 11068  1099  0874               	movf	___bmul@product,w
 11069  109A  0008               	return
 11070  109B                     __end_of___bmul:	
 11071                           
 11072                           	psect	text64
 11073  10E3                     __ptext64:	
 11074 ;; *************** function _setCmd_Status *****************
 11075 ;; Defined at:
 11076 ;;		line 655 in file "../src/main_B1.c"
 11077 ;; Parameters:    Size  Location     Type
 11078 ;;  number          1    wreg     unsigned char 
 11079 ;;  cmd             1    2[COMMON] unsigned char 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  number          1    4[COMMON] unsigned char 
 11082 ;; Return value:  Size  Location     Type
 11083 ;;		None               void
 11084 ;; Registers used:
 11085 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11086 ;; Tracked objects:
 11087 ;;		On entry : 0/0
 11088 ;;		On exit  : 0/0
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11091 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;Total ram usage:        3 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; Hardware stack levels required when called:    3
 11098 ;; This function calls:
 11099 ;;		Nothing
 11100 ;; This function is called by:
 11101 ;;		_setDimmerLights_OnOff
 11102 ;; This function uses a non-reentrant model
 11103 ;;
 11104                           
 11105                           
 11106                           ;psect for function _setCmd_Status
 11107  10E3                     _setCmd_Status:	
 11108                           
 11109                           ;incstack = 0
 11110                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 11111                           ;setCmd_Status@number stored from wreg
 11112  10E3  00F4               	movwf	setCmd_Status@number
 11113                           
 11114                           ;main_B1.c: 656: switch (number) {
 11115  10E4  28F1               	goto	l5738
 11116  10E5                     l5734:	
 11117                           ;main_B1.c: 657: case 1:
 11118                           
 11119                           
 11120                           ;main_B1.c: 658: Cmd.all_off = cmd == 1 ? 1 : 0;
 11121  10E5  0872               	movf	setCmd_Status@cmd,w
 11122  10E6  3A01               	xorlw	1
 11123  10E7  3000               	movlw	0
 11124  10E8  1903               	skipnz
 11125  10E9  3001               	movlw	1
 11126  10EA  00F3               	movwf	??_setCmd_Status
 11127  10EB  087A               	movf	_Cmd,w
 11128  10EC  0673               	xorwf	??_setCmd_Status,w
 11129  10ED  39FE               	andlw	-2
 11130  10EE  0673               	xorwf	??_setCmd_Status,w
 11131  10EF  00FA               	movwf	_Cmd
 11132                           
 11133                           ;main_B1.c: 660: }
 11134                           
 11135                           ;main_B1.c: 659: break;
 11136  10F0  0008               	return
 11137  10F1                     l5738:	
 11138  10F1  0874               	movf	setCmd_Status@number,w
 11139                           
 11140                           ; Switch size 1, requested type "space"
 11141                           ; Number of cases is 1, Range of values is 1 to 1
 11142                           ; switch strategies available:
 11143                           ; Name         Instructions Cycles
 11144                           ; simple_byte            4     3 (average)
 11145                           ; direct_byte           11     9 (fixed)
 11146                           ; jumptable            263     9 (fixed)
 11147                           ;	Chosen strategy is simple_byte
 11148  10F2  3A01               	xorlw	1	; case 1
 11149  10F3  1903               	skipnz
 11150  10F4  28E5               	goto	l5734
 11151  10F5  28F6               	goto	l2173
 11152  10F6                     l2173:	
 11153  10F6  0008               	return
 11154  10F7                     __end_of_setCmd_Status:	
 11155                           
 11156                           	psect	text65
 11157  102E                     __ptext65:	
 11158 ;; *************** function _getMain_All_LightsStatus *****************
 11159 ;; Defined at:
 11160 ;;		line 377 in file "../src/main_B1.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;		None
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;  status          1    2[COMMON] unsigned char 
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      unsigned char 
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;Total ram usage:        1 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    3
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_DimmerLights_Main
 11185 ;;		_setDimmerLights_Main
 11186 ;;		_setDimmerLights_OnOff
 11187 ;;		_Flash_Memory_Main
 11188 ;;		_Load_Main
 11189 ;;		_setTemp_Main
 11190 ;;		_Exception_Main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           
 11195                           ;psect for function _getMain_All_LightsStatus
 11196  102E                     _getMain_All_LightsStatus:	
 11197                           
 11198                           ;main_B1.c: 378: char status = 0;
 11199                           
 11200                           ;incstack = 0
 11201                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2+status,0]
 11202  102E  01F2               	clrf	getMain_All_LightsStatus@status
 11203                           
 11204                           ;main_B1.c: 397: status = DimmerLights1.Status == 1 ? 1 : 0;
 11205  102F  3000               	movlw	0
 11206  1030  0022               	movlb	2	; select bank2
 11207  1031  184E               	btfsc	(_DimmerLights1^(0+256)+1),0
 11208  1032  3001               	movlw	1
 11209  1033  00F2               	movwf	getMain_All_LightsStatus@status
 11210                           
 11211                           ;main_B1.c: 398: if (status == 0) {
 11212  1034  08F2               	movf	getMain_All_LightsStatus@status,f
 11213  1035  1D03               	skipz
 11214  1036  283B               	goto	l7644
 11215                           
 11216                           ;main_B1.c: 399: status = DimmerLights2.Status == 1 ? 1 : 0;
 11217  1037  3000               	movlw	0
 11218  1038  1857               	btfsc	(_DimmerLights2^(0+256)+1),0
 11219  1039  3001               	movlw	1
 11220  103A  00F2               	movwf	getMain_All_LightsStatus@status
 11221  103B                     l7644:	
 11222                           
 11223                           ;main_B1.c: 400: }
 11224                           ;main_B1.c: 424: return status;
 11225  103B  0872               	movf	getMain_All_LightsStatus@status,w
 11226  103C  0008               	return
 11227  103D                     __end_of_getMain_All_LightsStatus:	
 11228                           
 11229                           	psect	text66
 11230  101F                     __ptext66:	
 11231 ;; *************** function _getDelayOff_GO *****************
 11232 ;; Defined at:
 11233 ;;		line 114 in file "../src/DelayOff_B1.c"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;  sw              1    wreg     unsigned char 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  sw              1    4[COMMON] unsigned char 
 11238 ;;  go              1    5[COMMON] unsigned char 
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      unsigned char 
 11241 ;; Registers used:
 11242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;Total ram usage:        2 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    4
 11255 ;; This function calls:
 11256 ;;		_DelayOffPointSelect
 11257 ;; This function is called by:
 11258 ;;		_setDimmerLights_OnOff
 11259 ;; This function uses a non-reentrant model
 11260 ;;
 11261                           
 11262                           
 11263                           ;psect for function _getDelayOff_GO
 11264  101F                     _getDelayOff_GO:	
 11265                           
 11266                           ;incstack = 0
 11267                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11268                           ;getDelayOff_GO@sw stored from wreg
 11269  101F  00F4               	movwf	getDelayOff_GO@sw
 11270                           
 11271                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 11272  1020  0874               	movf	getDelayOff_GO@sw,w
 11273  1021  3191  210B         	fcall	_DelayOffPointSelect
 11274                           
 11275                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 11276  1023  0020               	movlb	0	; select bank0
 11277  1024  086A               	movf	_DelayOff,w
 11278  1025  0086               	movwf	6
 11279  1026  3001               	movlw	1	; select bank2/3
 11280  1027  0087               	movwf	7
 11281  1028  3000               	movlw	0
 11282  1029  1881               	btfsc	1,1
 11283  102A  3001               	movlw	1
 11284  102B  00F5               	movwf	getDelayOff_GO@go
 11285                           
 11286                           ;DelayOff_B1.c: 117: return go;
 11287  102C  0875               	movf	getDelayOff_GO@go,w
 11288  102D  0008               	return
 11289  102E                     __end_of_getDelayOff_GO:	
 11290                           
 11291                           	psect	text67
 11292  1010                     __ptext67:	
 11293 ;; *************** function _getCmd_Status *****************
 11294 ;; Defined at:
 11295 ;;		line 663 in file "../src/main_B1.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  number          1    wreg     unsigned char 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  number          1    2[COMMON] unsigned char 
 11300 ;;  cmd             1    3[COMMON] unsigned char 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      unsigned char 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;Total ram usage:        2 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    3
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		_setDimmerLights_OnOff
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           
 11325                           ;psect for function _getCmd_Status
 11326  1010                     _getCmd_Status:	
 11327                           
 11328                           ;incstack = 0
 11329                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 11330                           ;getCmd_Status@number stored from wreg
 11331  1010  00F2               	movwf	getCmd_Status@number
 11332                           
 11333                           ;main_B1.c: 664: char cmd = 0;
 11334  1011  01F3               	clrf	getCmd_Status@cmd
 11335                           
 11336                           ;main_B1.c: 665: switch (number) {
 11337  1012  2818               	goto	l5726
 11338  1013                     l5722:	
 11339                           ;main_B1.c: 666: case 1:
 11340                           
 11341                           
 11342                           ;main_B1.c: 667: cmd = Cmd.all_off == 1 ? 1 : 0;
 11343  1013  3000               	movlw	0
 11344  1014  187A               	btfsc	_Cmd,0
 11345  1015  3001               	movlw	1
 11346  1016  00F3               	movwf	getCmd_Status@cmd
 11347                           
 11348                           ;main_B1.c: 669: }
 11349                           
 11350                           ;main_B1.c: 668: break;
 11351  1017  281D               	goto	l5728
 11352  1018                     l5726:	
 11353  1018  0872               	movf	getCmd_Status@number,w
 11354                           
 11355                           ; Switch size 1, requested type "space"
 11356                           ; Number of cases is 1, Range of values is 1 to 1
 11357                           ; switch strategies available:
 11358                           ; Name         Instructions Cycles
 11359                           ; simple_byte            4     3 (average)
 11360                           ; direct_byte           11     9 (fixed)
 11361                           ; jumptable            263     9 (fixed)
 11362                           ;	Chosen strategy is simple_byte
 11363  1019  3A01               	xorlw	1	; case 1
 11364  101A  1903               	skipnz
 11365  101B  2813               	goto	l5722
 11366  101C  281D               	goto	l5728
 11367  101D                     l5728:	
 11368                           
 11369                           ;main_B1.c: 670: return cmd;
 11370  101D  0873               	movf	getCmd_Status@cmd,w
 11371  101E  0008               	return
 11372  101F                     __end_of_getCmd_Status:	
 11373                           
 11374                           	psect	text68
 11375  167C                     __ptext68:	
 11376 ;; *************** function _setDimmerLights_Dimming *****************
 11377 ;; Defined at:
 11378 ;;		line 1144 in file "../src/Dimmer_B1.c"
 11379 ;; Parameters:    Size  Location     Type
 11380 ;;  lights          1    wreg     unsigned char 
 11381 ;;  status          1   61[BANK0 ] unsigned char 
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;  lights          1   64[BANK0 ] unsigned char 
 11384 ;;  value           1   63[BANK0 ] unsigned char 
 11385 ;; Return value:  Size  Location     Type
 11386 ;;		None               void
 11387 ;; Registers used:
 11388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11394 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;Total ram usage:        4 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    6
 11401 ;; This function calls:
 11402 ;;		_getDimmerIntr_DimmingValue
 11403 ;;		_getDimmerLights_ValueToPercent
 11404 ;;		_setBuz
 11405 ;;		_setDimmerIntr_Dimming_Sw
 11406 ;;		_setDimmerIntr_MaxmumValue
 11407 ;;		_setDimmerLights_Line
 11408 ;;		_setMemory_Modify
 11409 ;;		_setProductData
 11410 ;; This function is called by:
 11411 ;;		_setDimmerLights_Main
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           
 11416                           ;psect for function _setDimmerLights_Dimming
 11417  167C                     _setDimmerLights_Dimming:	
 11418                           
 11419                           ;incstack = 0
 11420                           ; Regs used in _setDimmerLights_Dimming: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 11421                           ;setDimmerLights_Dimming@lights stored from wreg
 11422  167C  0020               	movlb	0	; select bank0
 11423  167D  00E0               	movwf	setDimmerLights_Dimming@lights
 11424                           
 11425                           ;Dimmer_B1.c: 1145: setDimmerIntr_Dimming_Sw(lights, status);
 11426  167E  085D               	movf	setDimmerLights_Dimming@status,w
 11427  167F  00DE               	movwf	??_setDimmerLights_Dimming
 11428  1680  085E               	movf	??_setDimmerLights_Dimming,w
 11429  1681  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
 11430  1682  0860               	movf	setDimmerLights_Dimming@lights,w
 11431  1683  3192  22F7  3196   	fcall	_setDimmerIntr_Dimming_Sw
 11432                           
 11433                           ;Dimmer_B1.c: 1146: if (status == 1) {
 11434  1686  0020               	movlb	0	; select bank0
 11435  1687  085D               	movf	setDimmerLights_Dimming@status,w
 11436  1688  3A01               	xorlw	1
 11437  1689  1D03               	skipz
 11438  168A  2E93               	goto	l7784
 11439                           
 11440                           ;Dimmer_B1.c: 1150: setBuz(1, 100);
 11441  168B  3064               	movlw	100
 11442  168C  00A4               	movwf	setBuz@time
 11443  168D  3000               	movlw	0
 11444  168E  00A5               	movwf	setBuz@time+1
 11445  168F  3001               	movlw	1
 11446  1690  3197  2759         	fcall	_setBuz
 11447                           
 11448                           ;Dimmer_B1.c: 1151: } else if (status == 0) {
 11449  1692  0008               	return
 11450  1693                     l7784:	
 11451  1693  0020               	movlb	0	; select bank0
 11452  1694  08DD               	movf	setDimmerLights_Dimming@status,f
 11453  1695  1D03               	skipz
 11454  1696  0008               	return
 11455                           
 11456                           ;Dimmer_B1.c: 1154: Dimmer.Load_Status = 0;
 11457  1697  0022               	movlb	2	; select bank2
 11458  1698  1120               	bcf	_Dimmer^(0+256),2
 11459                           
 11460                           ;Dimmer_B1.c: 1155: setDimmerLights_Line(lights);
 11461  1699  0020               	movlb	0	; select bank0
 11462  169A  0860               	movf	setDimmerLights_Dimming@lights,w
 11463  169B  3191  219F  3196   	fcall	_setDimmerLights_Line
 11464                           
 11465                           ;Dimmer_B1.c: 1157: char value = getDimmerIntr_DimmingValue(lights);
 11466  169E  0020               	movlb	0	; select bank0
 11467  169F  0860               	movf	setDimmerLights_Dimming@lights,w
 11468  16A0  3190  20CF  3196   	fcall	_getDimmerIntr_DimmingValue
 11469  16A3  0020               	movlb	0	; select bank0
 11470  16A4  00DE               	movwf	??_setDimmerLights_Dimming
 11471  16A5  085E               	movf	??_setDimmerLights_Dimming,w
 11472  16A6  00DF               	movwf	setDimmerLights_Dimming@value
 11473                           
 11474                           ;Dimmer_B1.c: 1158: setDimmerIntr_MaxmumValue(lights, value);
 11475  16A7  085F               	movf	setDimmerLights_Dimming@value,w
 11476  16A8  00DE               	movwf	??_setDimmerLights_Dimming
 11477  16A9  085E               	movf	??_setDimmerLights_Dimming,w
 11478  16AA  00DA               	movwf	setDimmerIntr_MaxmumValue@value
 11479  16AB  0860               	movf	setDimmerLights_Dimming@lights,w
 11480  16AC  3191  21B5  3196   	fcall	_setDimmerIntr_MaxmumValue
 11481                           
 11482                           ;Dimmer_B1.c: 1159: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 11483  16AF  0020               	movlb	0	; select bank0
 11484  16B0  085F               	movf	setDimmerLights_Dimming@value,w
 11485  16B1  318A  2232  3196   	fcall	_getDimmerLights_ValueToPercent
 11486  16B4  0020               	movlb	0	; select bank0
 11487  16B5  00DE               	movwf	??_setDimmerLights_Dimming
 11488  16B6  085E               	movf	??_setDimmerLights_Dimming,w
 11489  16B7  00DA               	movwf	setProductData@value
 11490  16B8  0860               	movf	setDimmerLights_Dimming@lights,w
 11491  16B9  3E14               	addlw	20
 11492  16BA  319F  27A7  3196   	fcall	_setProductData
 11493                           
 11494                           ;Dimmer_B1.c: 1166: setMemory_Modify(1);
 11495  16BD  3001               	movlw	1
 11496  16BE  3190  206A         	fcall	_setMemory_Modify
 11497                           
 11498                           ;Dimmer_B1.c: 1170: ;;
 11499                           ;Dimmer_B1.c: 1171: ;;
 11500  16C0  0008               	return
 11501  16C1                     __end_of_setDimmerLights_Dimming:	
 11502                           
 11503                           	psect	text69
 11504  119F                     __ptext69:	
 11505 ;; *************** function _setDimmerLights_Line *****************
 11506 ;; Defined at:
 11507 ;;		line 1217 in file "../src/Dimmer_B1.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  lights          1    wreg     unsigned char 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;  lights          1    2[COMMON] unsigned char 
 11512 ;; Return value:  Size  Location     Type
 11513 ;;		None               void
 11514 ;; Registers used:
 11515 ;;		wreg
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;Total ram usage:        1 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:    3
 11528 ;; This function calls:
 11529 ;;		Nothing
 11530 ;; This function is called by:
 11531 ;;		_setDimmerLights_OnOff
 11532 ;;		_setDimmerLights_Dimming
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           
 11537                           ;psect for function _setDimmerLights_Line
 11538  119F                     _setDimmerLights_Line:	
 11539                           
 11540                           ;incstack = 0
 11541                           ; Regs used in _setDimmerLights_Line: [wreg]
 11542                           ;setDimmerLights_Line@lights stored from wreg
 11543  119F  00F2               	movwf	setDimmerLights_Line@lights
 11544                           
 11545                           ;Dimmer_B1.c: 1218: Dimmer.LoadGO = 1;
 11546  11A0  0022               	movlb	2	; select bank2
 11547  11A1  14A0               	bsf	_Dimmer^(0+256),1
 11548                           
 11549                           ;Dimmer_B1.c: 1220: DimmerLights1.Line = 0;
 11550  11A2  10CE               	bcf	(_DimmerLights1^(0+256)+1),1
 11551                           
 11552                           ;Dimmer_B1.c: 1221: if (lights == 1 && lights != 0) {
 11553  11A3  0872               	movf	setDimmerLights_Line@lights,w
 11554  11A4  3A01               	xorlw	1
 11555  11A5  1D03               	skipz
 11556  11A6  29AB               	goto	l635
 11557  11A7  0872               	movf	setDimmerLights_Line@lights,w
 11558  11A8  1903               	btfsc	3,2
 11559  11A9  29AB               	goto	l635
 11560                           
 11561                           ;Dimmer_B1.c: 1222: DimmerLights1.Line = 1;
 11562  11AA  14CE               	bsf	(_DimmerLights1^(0+256)+1),1
 11563  11AB                     l635:	
 11564                           
 11565                           ;Dimmer_B1.c: 1223: }
 11566                           ;Dimmer_B1.c: 1226: DimmerLights2.Line = 0;
 11567  11AB  10D7               	bcf	(_DimmerLights2^(0+256)+1),1
 11568                           
 11569                           ;Dimmer_B1.c: 1227: if (lights == 2 && lights != 0) {
 11570  11AC  0872               	movf	setDimmerLights_Line@lights,w
 11571  11AD  3A02               	xorlw	2
 11572  11AE  1D03               	skipz
 11573  11AF  0008               	return
 11574  11B0  0872               	movf	setDimmerLights_Line@lights,w
 11575  11B1  1903               	btfsc	3,2
 11576  11B2  0008               	return
 11577                           
 11578                           ;Dimmer_B1.c: 1228: DimmerLights2.Line = 1;
 11579  11B3  14D7               	bsf	(_DimmerLights2^(0+256)+1),1
 11580  11B4  0008               	return
 11581  11B5                     __end_of_setDimmerLights_Line:	
 11582                           
 11583                           	psect	text70
 11584  12F7                     __ptext70:	
 11585 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 11586 ;; Defined at:
 11587 ;;		line 253 in file "../src/Dimmer_B1.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  lights          1    wreg     unsigned char 
 11590 ;;  command         1    2[COMMON] unsigned char 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;  lights          1    4[COMMON] unsigned char 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;		None               void
 11595 ;; Registers used:
 11596 ;;		wreg, status,2, status,0
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;Total ram usage:        3 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    3
 11609 ;; This function calls:
 11610 ;;		Nothing
 11611 ;; This function is called by:
 11612 ;;		_setDimmerLights_Dimming
 11613 ;;		_setDimmerLights_DimmingClose
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           
 11618                           ;psect for function _setDimmerIntr_Dimming_Sw
 11619  12F7                     _setDimmerIntr_Dimming_Sw:	
 11620                           
 11621                           ;incstack = 0
 11622                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 11623                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 11624  12F7  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
 11625                           
 11626                           ;Dimmer_B1.c: 255: if (lights == 1) {
 11627  12F8  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 11628  12F9  3A01               	xorlw	1
 11629  12FA  1D03               	skipz
 11630  12FB  2B0A               	goto	l5144
 11631                           
 11632                           ;Dimmer_B1.c: 256: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 11633  12FC  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 11634  12FD  3A01               	xorlw	1
 11635  12FE  3000               	movlw	0
 11636  12FF  1903               	skipnz
 11637  1300  3001               	movlw	1
 11638  1301  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 11639  1302  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 11640  1303  0021               	movlb	1	; select bank1
 11641  1304  0820               	movf	_DimmerIntr1^(0+128),w
 11642  1305  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11643  1306  39EF               	andlw	-17
 11644  1307  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11645  1308  00A0               	movwf	_DimmerIntr1^(0+128)
 11646                           
 11647                           ;Dimmer_B1.c: 257: }
 11648  1309  0008               	return
 11649  130A                     l5144:	
 11650                           
 11651                           ;Dimmer_B1.c: 260: else if (lights == 2) {
 11652  130A  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 11653  130B  3A02               	xorlw	2
 11654  130C  1D03               	skipz
 11655  130D  0008               	return
 11656                           
 11657                           ;Dimmer_B1.c: 261: DimmerIntr2.Dimming_Sw = command == 1 ? 1 : 0;
 11658  130E  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 11659  130F  3A01               	xorlw	1
 11660  1310  3000               	movlw	0
 11661  1311  1903               	skipnz
 11662  1312  3001               	movlw	1
 11663  1313  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 11664  1314  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 11665  1315  0021               	movlb	1	; select bank1
 11666  1316  0830               	movf	_DimmerIntr2^(0+128),w
 11667  1317  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11668  1318  39EF               	andlw	-17
 11669  1319  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 11670  131A  00B0               	movwf	_DimmerIntr2^(0+128)
 11671  131B  0008               	return
 11672  131C                     __end_of_setDimmerIntr_Dimming_Sw:	
 11673                           
 11674                           	psect	text71
 11675  10CF                     __ptext71:	
 11676 ;; *************** function _getDimmerIntr_DimmingValue *****************
 11677 ;; Defined at:
 11678 ;;		line 157 in file "../src/Dimmer_B1.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  lights          1    wreg     unsigned char 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  lights          1    4[COMMON] unsigned char 
 11683 ;;  value           1    3[COMMON] unsigned char 
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      unsigned char 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;Total ram usage:        3 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:    3
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_setDimmerLights_Dimming
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _getDimmerIntr_DimmingValue
 11709  10CF                     _getDimmerIntr_DimmingValue:	
 11710                           
 11711                           ;incstack = 0
 11712                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 11713                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 11714  10CF  00F4               	movwf	getDimmerIntr_DimmingValue@lights
 11715                           
 11716                           ;Dimmer_B1.c: 158: char value = 0;
 11717  10D0  01F3               	clrf	getDimmerIntr_DimmingValue@value
 11718                           
 11719                           ;Dimmer_B1.c: 160: if (lights == 1) {
 11720  10D1  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 11721  10D2  3A01               	xorlw	1
 11722  10D3  1D03               	skipz
 11723  10D4  28D8               	goto	l5576
 11724                           
 11725                           ;Dimmer_B1.c: 161: value = DimmerIntr1.DimmingValue;
 11726  10D5  0021               	movlb	1	; select bank1
 11727  10D6  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 11728  10D7  28DE               	goto	L7
 11729  10D8                     l5576:	
 11730                           ;Dimmer_B1.c: 162: }
 11731                           
 11732                           
 11733                           ;Dimmer_B1.c: 165: else if (lights == 2) {
 11734  10D8  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 11735  10D9  3A02               	xorlw	2
 11736  10DA  1D03               	skipz
 11737  10DB  28E1               	goto	l462
 11738                           
 11739                           ;Dimmer_B1.c: 166: value = DimmerIntr2.DimmingValue;
 11740  10DC  0021               	movlb	1	; select bank1
 11741  10DD  0835               	movf	(_DimmerIntr2^(0+128)+5),w
 11742  10DE                     L7:	
 11743  10DE  00F2               	movwf	??_getDimmerIntr_DimmingValue
 11744  10DF  0872               	movf	??_getDimmerIntr_DimmingValue,w
 11745  10E0  00F3               	movwf	getDimmerIntr_DimmingValue@value
 11746  10E1                     l462:	
 11747                           
 11748                           ;Dimmer_B1.c: 167: }
 11749                           ;Dimmer_B1.c: 174: return value;
 11750  10E1  0873               	movf	getDimmerIntr_DimmingValue@value,w
 11751  10E2  0008               	return
 11752  10E3                     __end_of_getDimmerIntr_DimmingValue:	
 11753                           
 11754                           	psect	text72
 11755  14E2                     __ptext72:	
 11756 ;; *************** function _getDimmerLights_Allow_Condition *****************
 11757 ;; Defined at:
 11758 ;;		line 1177 in file "../src/Dimmer_B1.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  lights          1    wreg     unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  lights          1    7[COMMON] unsigned char 
 11763 ;;  allow           1    8[COMMON] unsigned char 
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      unsigned char 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0, pclath, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;Total ram usage:        6 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    4
 11780 ;; This function calls:
 11781 ;;		_getLoad_OK
 11782 ;; This function is called by:
 11783 ;;		_setDimmerLights_Main
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           
 11788                           ;psect for function _getDimmerLights_Allow_Condition
 11789  14E2                     _getDimmerLights_Allow_Condition:	
 11790                           
 11791                           ;incstack = 0
 11792                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+status,0+pclath+cstack]
 11793                           ;getDimmerLights_Allow_Condition@lights stored from wreg
 11794  14E2  00F7               	movwf	getDimmerLights_Allow_Condition@lights
 11795                           
 11796                           ;Dimmer_B1.c: 1178: char allow = 0;
 11797  14E3  01F8               	clrf	getDimmerLights_Allow_Condition@allow
 11798                           
 11799                           ;Dimmer_B1.c: 1184: allow = getLoad_OK() == 0 && Dimmer.LoadGO == 0 ? 0 : 1;
 11800  14E4  01F4               	clrf	_getDimmerLights_Allow_Condition$2344
 11801  14E5  0AF4               	incf	_getDimmerLights_Allow_Condition$2344,f
 11802  14E6  319F  270F  3194   	fcall	_getLoad_OK
 11803  14E9  3800               	iorlw	0
 11804  14EA  1D03               	skipz
 11805  14EB  2CF0               	goto	l5844
 11806  14EC  0022               	movlb	2	; select bank2
 11807  14ED  18A0               	btfsc	_Dimmer^(0+256),1
 11808  14EE  2CF0               	goto	l5844
 11809  14EF  01F4               	clrf	_getDimmerLights_Allow_Condition$2344
 11810  14F0                     l5844:	
 11811  14F0  0874               	movf	_getDimmerLights_Allow_Condition$2344,w
 11812  14F1  00F3               	movwf	??_getDimmerLights_Allow_Condition
 11813  14F2  0873               	movf	??_getDimmerLights_Allow_Condition,w
 11814  14F3  00F8               	movwf	getDimmerLights_Allow_Condition@allow
 11815                           
 11816                           ;Dimmer_B1.c: 1188: if (allow == 0) {
 11817  14F4  08F8               	movf	getDimmerLights_Allow_Condition@allow,f
 11818  14F5  1D03               	skipz
 11819  14F6  2D17               	goto	l5868
 11820                           
 11821                           ;Dimmer_B1.c: 1189: if (lights == 1) {
 11822  14F7  0877               	movf	getDimmerLights_Allow_Condition@lights,w
 11823  14F8  3A01               	xorlw	1
 11824  14F9  1D03               	skipz
 11825  14FA  2D06               	goto	l5858
 11826                           
 11827                           ;Dimmer_B1.c: 1190: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1 ? 1 : 0;
 11828  14FB  01F5               	clrf	_getDimmerLights_Allow_Condition$2345
 11829  14FC  0AF5               	incf	_getDimmerLights_Allow_Condition$2345,f
 11830  14FD  0022               	movlb	2	; select bank2
 11831  14FE  1A56               	btfsc	_DimmerLights2^(0+256),4
 11832  14FF  2D04               	goto	l5856
 11833  1500  0021               	movlb	1	; select bank1
 11834  1501  1A30               	btfsc	_DimmerIntr2^(0+128),4
 11835  1502  2D04               	goto	l5856
 11836  1503  01F5               	clrf	_getDimmerLights_Allow_Condition$2345
 11837  1504                     l5856:	
 11838  1504  0875               	movf	_getDimmerLights_Allow_Condition$2345,w
 11839  1505  2D14               	goto	L8
 11840  1506                     l5858:	
 11841                           ;Dimmer_B1.c: 1191: } else if (lights == 2) {
 11842                           
 11843  1506  0877               	movf	getDimmerLights_Allow_Condition@lights,w
 11844  1507  3A02               	xorlw	2
 11845  1508  1D03               	skipz
 11846  1509  2D17               	goto	l5868
 11847                           
 11848                           ;Dimmer_B1.c: 1192: allow = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw 
      +                          == 1 ? 1 : 0;
 11849  150A  01F6               	clrf	_getDimmerLights_Allow_Condition$2346
 11850  150B  0AF6               	incf	_getDimmerLights_Allow_Condition$2346,f
 11851  150C  0022               	movlb	2	; select bank2
 11852  150D  1A4D               	btfsc	_DimmerLights1^(0+256),4
 11853  150E  2D13               	goto	l5866
 11854  150F  0021               	movlb	1	; select bank1
 11855  1510  1A20               	btfsc	_DimmerIntr1^(0+128),4
 11856  1511  2D13               	goto	l5866
 11857  1512  01F6               	clrf	_getDimmerLights_Allow_Condition$2346
 11858  1513                     l5866:	
 11859  1513  0876               	movf	_getDimmerLights_Allow_Condition$2346,w
 11860  1514                     L8:	
 11861  1514  00F3               	movwf	??_getDimmerLights_Allow_Condition
 11862  1515  0873               	movf	??_getDimmerLights_Allow_Condition,w
 11863  1516  00F8               	movwf	getDimmerLights_Allow_Condition@allow
 11864  1517                     l5868:	
 11865                           
 11866                           ;Dimmer_B1.c: 1193: }
 11867                           ;Dimmer_B1.c: 1194: }
 11868                           ;Dimmer_B1.c: 1212: return allow;
 11869  1517  0878               	movf	getDimmerLights_Allow_Condition@allow,w
 11870  1518  0008               	return
 11871  1519                     __end_of_getDimmerLights_Allow_Condition:	
 11872                           
 11873                           	psect	text73
 11874  1F0F                     __ptext73:	
 11875 ;; *************** function _getLoad_OK *****************
 11876 ;; Defined at:
 11877 ;;		line 274 in file "../src/OverLoad_B1.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;		None
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  ok              1    2[COMMON] unsigned char 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      unsigned char 
 11884 ;; Registers used:
 11885 ;;		wreg, status,2
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;Total ram usage:        1 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:    3
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		_DimmerLights_Main
 11902 ;;		_getDimmerLights_Allow_Condition
 11903 ;; This function uses a non-reentrant model
 11904 ;;
 11905                           
 11906                           
 11907                           ;psect for function _getLoad_OK
 11908  1F0F                     _getLoad_OK:	
 11909                           
 11910                           ;OverLoad_B1.c: 275: char ok = Load.OK == 1 ? 1 : 0;
 11911                           
 11912                           ;incstack = 0
 11913                           ; Regs used in _getLoad_OK: [wreg+status,2]
 11914  1F0F  3000               	movlw	0
 11915  1F10  0022               	movlb	2	; select bank2
 11916  1F11  1BA5               	btfsc	_Load^(0+256),7
 11917  1F12  3001               	movlw	1
 11918  1F13  00F2               	movwf	getLoad_OK@ok
 11919                           
 11920                           ;OverLoad_B1.c: 276: return ok;
 11921  1F14  0872               	movf	getLoad_OK@ok,w
 11922  1F15  0008               	return
 11923  1F16                     __end_of_getLoad_OK:	
 11924                           
 11925                           	psect	text74
 11926  13BF                     __ptext74:	
 11927 ;; *************** function _getMain_All_Error_Status *****************
 11928 ;; Defined at:
 11929 ;;		line 428 in file "../src/main_B1.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  command         1    wreg     unsigned char 
 11932 ;; Auto vars:     Size  Location     Type
 11933 ;;  command         1    7[COMMON] unsigned char 
 11934 ;;  status          1    8[COMMON] unsigned char 
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      unsigned char 
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;Total ram usage:        7 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    3
 11951 ;; This function calls:
 11952 ;;		Nothing
 11953 ;; This function is called by:
 11954 ;;		_DimmerLights_Main
 11955 ;;		_Load_Main
 11956 ;;		_setTemp_Main
 11957 ;;		_setSw_Main
 11958 ;;		_Exception_Main
 11959 ;; This function uses a non-reentrant model
 11960 ;;
 11961                           
 11962                           
 11963                           ;psect for function _getMain_All_Error_Status
 11964  13BF                     _getMain_All_Error_Status:	
 11965                           
 11966                           ;incstack = 0
 11967                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
 11968                           ;getMain_All_Error_Status@command stored from wreg
 11969  13BF  00F7               	movwf	getMain_All_Error_Status@command
 11970                           
 11971                           ;main_B1.c: 429: char status = 0;
 11972  13C0  01F8               	clrf	getMain_All_Error_Status@status
 11973                           
 11974                           ;main_B1.c: 440: if (status == 0 && command != 2) {
 11975  13C1  08F8               	movf	getMain_All_Error_Status@status,f
 11976  13C2  1D03               	skipz
 11977  13C3  2BD6               	goto	l5822
 11978  13C4  0877               	movf	getMain_All_Error_Status@command,w
 11979  13C5  3A02               	xorlw	2
 11980  13C6  1903               	skipnz
 11981  13C7  2BD6               	goto	l5822
 11982                           
 11983                           ;main_B1.c: 441: status = Temp.ERROR == 1 ? 2 : 0;
 11984  13C8  0021               	movlb	1	; select bank1
 11985  13C9  18E1               	btfsc	_Temp^(0+128),1
 11986  13CA  2BCE               	goto	l5820
 11987  13CB  01F3               	clrf	_getMain_All_Error_Status$6687
 11988  13CC  01F4               	clrf	_getMain_All_Error_Status$6687+1
 11989  13CD  2BD2               	goto	l2132
 11990  13CE                     l5820:	
 11991  13CE  3002               	movlw	2
 11992  13CF  00F3               	movwf	_getMain_All_Error_Status$6687
 11993  13D0  3000               	movlw	0
 11994  13D1  00F4               	movwf	_getMain_All_Error_Status$6687+1
 11995  13D2                     l2132:	
 11996  13D2  0873               	movf	_getMain_All_Error_Status$6687,w
 11997  13D3  00F2               	movwf	??_getMain_All_Error_Status
 11998  13D4  0872               	movf	??_getMain_All_Error_Status,w
 11999  13D5  00F8               	movwf	getMain_All_Error_Status@status
 12000  13D6                     l5822:	
 12001                           
 12002                           ;main_B1.c: 442: }
 12003                           ;main_B1.c: 447: if (status == 0 && command != 3) {
 12004  13D6  08F8               	movf	getMain_All_Error_Status@status,f
 12005  13D7  1D03               	skipz
 12006  13D8  2BEB               	goto	l2133
 12007  13D9  0877               	movf	getMain_All_Error_Status@command,w
 12008  13DA  3A03               	xorlw	3
 12009  13DB  1903               	skipnz
 12010  13DC  2BEB               	goto	l2133
 12011                           
 12012                           ;main_B1.c: 448: status = Load.ERROR == 1 ? 3 : 0;
 12013  13DD  0022               	movlb	2	; select bank2
 12014  13DE  1AA5               	btfsc	_Load^(0+256),5
 12015  13DF  2BE3               	goto	l5830
 12016  13E0  01F5               	clrf	_getMain_All_Error_Status$6688
 12017  13E1  01F6               	clrf	_getMain_All_Error_Status$6688+1
 12018  13E2  2BE7               	goto	l2137
 12019  13E3                     l5830:	
 12020  13E3  3003               	movlw	3
 12021  13E4  00F5               	movwf	_getMain_All_Error_Status$6688
 12022  13E5  3000               	movlw	0
 12023  13E6  00F6               	movwf	_getMain_All_Error_Status$6688+1
 12024  13E7                     l2137:	
 12025  13E7  0875               	movf	_getMain_All_Error_Status$6688,w
 12026  13E8  00F2               	movwf	??_getMain_All_Error_Status
 12027  13E9  0872               	movf	??_getMain_All_Error_Status,w
 12028  13EA  00F8               	movwf	getMain_All_Error_Status@status
 12029  13EB                     l2133:	
 12030                           
 12031                           ;main_B1.c: 449: }
 12032                           ;main_B1.c: 459: return status;
 12033  13EB  0878               	movf	getMain_All_Error_Status@status,w
 12034  13EC  0008               	return
 12035  13ED                     __end_of_getMain_All_Error_Status:	
 12036                           
 12037                           	psect	text75
 12038  0801                     __ptext75:	
 12039 ;; *************** function _DimmerLights_TwoPhase_Main *****************
 12040 ;; Defined at:
 12041 ;;		line 959 in file "../src/Dimmer_B1.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  lights          1    wreg     unsigned char 
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;  lights          1   65[BANK0 ] unsigned char 
 12046 ;; Return value:  Size  Location     Type
 12047 ;;		None               void
 12048 ;; Registers used:
 12049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;Total ram usage:        1 bytes
 12060 ;; Hardware stack levels used:    1
 12061 ;; Hardware stack levels required when called:    7
 12062 ;; This function calls:
 12063 ;;		_DimmerLights_AssignationDimming
 12064 ;;		_DimmerLights_SelectPointer
 12065 ;; This function is called by:
 12066 ;;		_DimmerLights_Main
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           
 12071                           ;psect for function _DimmerLights_TwoPhase_Main
 12072  0801                     _DimmerLights_TwoPhase_Main:	
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in _DimmerLights_TwoPhase_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12076                           ;DimmerLights_TwoPhase_Main@lights stored from wreg
 12077  0801  0020               	movlb	0	; select bank0
 12078  0802  00E1               	movwf	DimmerLights_TwoPhase_Main@lights
 12079                           
 12080                           ;Dimmer_B1.c: 961: DimmerLights_SelectPointer(lights);
 12081  0803  0861               	movf	DimmerLights_TwoPhase_Main@lights,w
 12082  0804  3191  2120  3188   	fcall	_DimmerLights_SelectPointer
 12083                           
 12084                           ;Dimmer_B1.c: 962: if (DimmerLights->Phase == 1) {
 12085  0807  0020               	movlb	0	; select bank0
 12086  0808  086B               	movf	_DimmerLights,w
 12087  0809  3E02               	addlw	2
 12088  080A  0086               	movwf	6
 12089  080B  3001               	movlw	1	; select bank2/3
 12090  080C  0087               	movwf	7
 12091  080D  1C01               	btfss	1,0
 12092  080E  0008               	return
 12093                           
 12094                           ;Dimmer_B1.c: 963: if (DimmerLights->PhaseFirst == 0) {
 12095  080F  086B               	movf	_DimmerLights,w
 12096  0810  3E02               	addlw	2
 12097  0811  0086               	movwf	6
 12098  0812  3001               	movlw	1	; select bank2/3
 12099  0813  0087               	movwf	7
 12100  0814  1881               	btfsc	1,1
 12101  0815  283F               	goto	l8064
 12102                           
 12103                           ;Dimmer_B1.c: 965: if (DimmerLights->PhaseSwitch == 1) {
 12104  0816  086B               	movf	_DimmerLights,w
 12105  0817  3E02               	addlw	2
 12106  0818  0086               	movwf	6
 12107  0819  3001               	movlw	1	; select bank2/3
 12108  081A  0087               	movwf	7
 12109  081B  1D01               	btfss	1,2
 12110  081C  282E               	goto	l8062
 12111                           
 12112                           ;Dimmer_B1.c: 966: DimmerLights->PhaseFirst = 1;
 12113  081D  086B               	movf	_DimmerLights,w
 12114  081E  3E02               	addlw	2
 12115  081F  0086               	movwf	6
 12116  0820  3001               	movlw	1	; select bank2/3
 12117  0821  0087               	movwf	7
 12118  0822  1481               	bsf	1,1
 12119                           
 12120                           ;Dimmer_B1.c: 967: DimmerLights->Trigger = 1;
 12121  0823  086B               	movf	_DimmerLights,w
 12122  0824  0086               	movwf	6
 12123  0825  3001               	movlw	1	; select bank2/3
 12124  0826  0087               	movwf	7
 12125  0827  1481               	bsf	1,1
 12126                           
 12127                           ;Dimmer_B1.c: 968: DimmerLights->Switch = 1;
 12128  0828  086B               	movf	_DimmerLights,w
 12129  0829  0086               	movwf	6
 12130  082A  3001               	movlw	1	; select bank2/3
 12131  082B  0087               	movwf	7
 12132  082C  1501               	bsf	1,2
 12133                           
 12134                           ;Dimmer_B1.c: 969: } else {
 12135  082D  0008               	return
 12136  082E                     l8062:	
 12137                           
 12138                           ;Dimmer_B1.c: 970: DimmerLights->Phase = 0;
 12139  082E  086B               	movf	_DimmerLights,w
 12140  082F  3E02               	addlw	2
 12141  0830  0086               	movwf	6
 12142  0831  3001               	movlw	1	; select bank2/3
 12143  0832  0087               	movwf	7
 12144  0833  1001               	bcf	1,0
 12145                           
 12146                           ;Dimmer_B1.c: 971: DimmerLights->Trigger = 1;
 12147  0834  086B               	movf	_DimmerLights,w
 12148  0835  0086               	movwf	6
 12149  0836  3001               	movlw	1	; select bank2/3
 12150  0837  0087               	movwf	7
 12151  0838  1481               	bsf	1,1
 12152                           
 12153                           ;Dimmer_B1.c: 972: DimmerLights->Switch = 0;
 12154  0839  086B               	movf	_DimmerLights,w
 12155  083A  0086               	movwf	6
 12156  083B  3001               	movlw	1	; select bank2/3
 12157  083C  0087               	movwf	7
 12158  083D  1101               	bcf	1,2
 12159                           
 12160                           ;Dimmer_B1.c: 973: }
 12161                           ;Dimmer_B1.c: 974: } else {
 12162  083E  0008               	return
 12163  083F                     l8064:	
 12164                           
 12165                           ;Dimmer_B1.c: 975: if (DimmerLights->Trigger == 0) {
 12166  083F  086B               	movf	_DimmerLights,w
 12167  0840  0086               	movwf	6
 12168  0841  3001               	movlw	1	; select bank2/3
 12169  0842  0087               	movwf	7
 12170  0843  1881               	btfsc	1,1
 12171  0844  0008               	return
 12172                           
 12173                           ;Dimmer_B1.c: 976: DimmerLights->PhaseFirst = 0;
 12174  0845  086B               	movf	_DimmerLights,w
 12175  0846  3E02               	addlw	2
 12176  0847  0086               	movwf	6
 12177  0848  3001               	movlw	1	; select bank2/3
 12178  0849  0087               	movwf	7
 12179  084A  1081               	bcf	1,1
 12180                           
 12181                           ;Dimmer_B1.c: 977: DimmerLights->Phase = 0;
 12182  084B  086B               	movf	_DimmerLights,w
 12183  084C  3E02               	addlw	2
 12184  084D  0086               	movwf	6
 12185  084E  3001               	movlw	1	; select bank2/3
 12186  084F  0087               	movwf	7
 12187  0850  1001               	bcf	1,0
 12188                           
 12189                           ;Dimmer_B1.c: 978: DimmerLights_AssignationDimming(lights);
 12190  0851  0861               	movf	DimmerLights_TwoPhase_Main@lights,w
 12191  0852  3193  23ED         	fcall	_DimmerLights_AssignationDimming
 12192  0854  0008               	return
 12193  0855                     __end_of_DimmerLights_TwoPhase_Main:	
 12194                           
 12195                           	psect	text76
 12196  13ED                     __ptext76:	
 12197 ;; *************** function _DimmerLights_AssignationDimming *****************
 12198 ;; Defined at:
 12199 ;;		line 985 in file "../src/Dimmer_B1.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  sw              1    wreg     unsigned char 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  sw              1   64[BANK0 ] unsigned char 
 12204 ;;  status          1   63[BANK0 ] unsigned char 
 12205 ;; Return value:  Size  Location     Type
 12206 ;;		None               void
 12207 ;; Registers used:
 12208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;Total ram usage:        4 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    6
 12221 ;; This function calls:
 12222 ;;		_getDimmerLights_PercentToValue
 12223 ;;		_getDimmerLights_Status
 12224 ;;		_setDimmerIntr_Dimming_RF
 12225 ;;		_setDimmerIntr_MaxmumValue
 12226 ;;		_setMemory_Modify
 12227 ;; This function is called by:
 12228 ;;		_DimmerLights_TwoPhase_Main
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           
 12233                           ;psect for function _DimmerLights_AssignationDimming
 12234  13ED                     _DimmerLights_AssignationDimming:	
 12235                           
 12236                           ;incstack = 0
 12237                           ; Regs used in _DimmerLights_AssignationDimming: [wreg+fsr1l+fsr1h+status,2+status,0+pcl
      +                          ath+cstack]
 12238                           ;DimmerLights_AssignationDimming@sw stored from wreg
 12239  13ED  0020               	movlb	0	; select bank0
 12240  13EE  00E0               	movwf	DimmerLights_AssignationDimming@sw
 12241                           
 12242                           ;Dimmer_B1.c: 986: char status = 0;
 12243  13EF  01DF               	clrf	DimmerLights_AssignationDimming@status
 12244                           
 12245                           ;Dimmer_B1.c: 988: status = getDimmerLights_Status(sw);
 12246  13F0  0860               	movf	DimmerLights_AssignationDimming@sw,w
 12247  13F1  319F  27F1  3193   	fcall	_getDimmerLights_Status
 12248  13F4  0020               	movlb	0	; select bank0
 12249  13F5  00DD               	movwf	??_DimmerLights_AssignationDimming
 12250  13F6  085D               	movf	??_DimmerLights_AssignationDimming,w
 12251  13F7  00DF               	movwf	DimmerLights_AssignationDimming@status
 12252                           
 12253                           ;Dimmer_B1.c: 992: setMemory_Modify(1);
 12254  13F8  3001               	movlw	1
 12255  13F9  3190  206A  3193   	fcall	_setMemory_Modify
 12256                           
 12257                           ;Dimmer_B1.c: 996: if (status == 1) {
 12258  13FC  0020               	movlb	0	; select bank0
 12259  13FD  085F               	movf	DimmerLights_AssignationDimming@status,w
 12260  13FE  3A01               	xorlw	1
 12261  13FF  1D03               	skipz
 12262  1400  0008               	return
 12263                           
 12264                           ;Dimmer_B1.c: 997: setDimmerIntr_MaxmumValue(sw, getDimmerLights_PercentToValue(product-
      +                          >Data[20 + sw]));
 12265  1401  0860               	movf	DimmerLights_AssignationDimming@sw,w
 12266  1402  3E14               	addlw	20
 12267  1403  076D               	addwf	_product,w
 12268  1404  00DD               	movwf	??_DimmerLights_AssignationDimming
 12269  1405  085D               	movf	??_DimmerLights_AssignationDimming,w
 12270  1406  0086               	movwf	6
 12271  1407  3002               	movlw	2	; select bank4/5
 12272  1408  0087               	movwf	7
 12273  1409  0801               	movf	1,w
 12274  140A  3189  21CD  3193   	fcall	_getDimmerLights_PercentToValue
 12275  140D  0020               	movlb	0	; select bank0
 12276  140E  00DE               	movwf	??_DimmerLights_AssignationDimming+1
 12277  140F  085E               	movf	??_DimmerLights_AssignationDimming+1,w
 12278  1410  00DA               	movwf	setDimmerIntr_MaxmumValue@value
 12279  1411  0860               	movf	DimmerLights_AssignationDimming@sw,w
 12280  1412  3191  21B5  3193   	fcall	_setDimmerIntr_MaxmumValue
 12281                           
 12282                           ;Dimmer_B1.c: 998: setDimmerIntr_Dimming_RF(sw, 1);
 12283  1415  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 12284  1416  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 12285  1417  0020               	movlb	0	; select bank0
 12286  1418  0860               	movf	DimmerLights_AssignationDimming@sw,w
 12287  1419  3193  2343         	fcall	_setDimmerIntr_Dimming_RF
 12288  141B  0008               	return
 12289  141C                     __end_of_DimmerLights_AssignationDimming:	
 12290                           
 12291                           	psect	text77
 12292  11B5                     __ptext77:	
 12293 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 12294 ;; Defined at:
 12295 ;;		line 177 in file "../src/Dimmer_B1.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  lights          1    wreg     unsigned char 
 12298 ;;  value           1   58[BANK0 ] unsigned char 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  lights          1   60[BANK0 ] unsigned char 
 12301 ;; Return value:  Size  Location     Type
 12302 ;;		None               void
 12303 ;; Registers used:
 12304 ;;		wreg
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12310 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;Total ram usage:        3 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    3
 12317 ;; This function calls:
 12318 ;;		Nothing
 12319 ;; This function is called by:
 12320 ;;		_DimmerLights_AssignationDimming
 12321 ;;		_setDimmerLights_OnOff
 12322 ;;		_setDimmerLights_Dimming
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           
 12327                           ;psect for function _setDimmerIntr_MaxmumValue
 12328  11B5                     _setDimmerIntr_MaxmumValue:	
 12329                           
 12330                           ;incstack = 0
 12331                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 12332                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 12333  11B5  0020               	movlb	0	; select bank0
 12334  11B6  00DC               	movwf	setDimmerIntr_MaxmumValue@lights
 12335                           
 12336                           ;Dimmer_B1.c: 179: if (lights == 1) {
 12337  11B7  085C               	movf	setDimmerIntr_MaxmumValue@lights,w
 12338  11B8  3A01               	xorlw	1
 12339  11B9  1D03               	skipz
 12340  11BA  29C1               	goto	l5586
 12341                           
 12342                           ;Dimmer_B1.c: 180: DimmerIntr1.MaxmumValue = value;
 12343  11BB  085A               	movf	setDimmerIntr_MaxmumValue@value,w
 12344  11BC  00DB               	movwf	??_setDimmerIntr_MaxmumValue
 12345  11BD  085B               	movf	??_setDimmerIntr_MaxmumValue,w
 12346  11BE  0021               	movlb	1	; select bank1
 12347  11BF  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 12348                           
 12349                           ;Dimmer_B1.c: 181: }
 12350  11C0  0008               	return
 12351  11C1                     l5586:	
 12352                           
 12353                           ;Dimmer_B1.c: 184: else if (lights == 2) {
 12354  11C1  0020               	movlb	0	; select bank0
 12355  11C2  085C               	movf	setDimmerIntr_MaxmumValue@lights,w
 12356  11C3  3A02               	xorlw	2
 12357  11C4  1D03               	skipz
 12358  11C5  0008               	return
 12359                           
 12360                           ;Dimmer_B1.c: 185: DimmerIntr2.MaxmumValue = value;
 12361  11C6  085A               	movf	setDimmerIntr_MaxmumValue@value,w
 12362  11C7  00DB               	movwf	??_setDimmerIntr_MaxmumValue
 12363  11C8  085B               	movf	??_setDimmerIntr_MaxmumValue,w
 12364  11C9  0021               	movlb	1	; select bank1
 12365  11CA  00B6               	movwf	(_DimmerIntr2^(0+128)+6)
 12366  11CB  0008               	return
 12367  11CC                     __end_of_setDimmerIntr_MaxmumValue:	
 12368                           
 12369                           	psect	text78
 12370  1343                     __ptext78:	
 12371 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 12372 ;; Defined at:
 12373 ;;		line 292 in file "../src/Dimmer_B1.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  lights          1    wreg     unsigned char 
 12376 ;;  command         1    2[COMMON] unsigned char 
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;  lights          1    4[COMMON] unsigned char 
 12379 ;; Return value:  Size  Location     Type
 12380 ;;		None               void
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;Total ram usage:        3 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    3
 12395 ;; This function calls:
 12396 ;;		Nothing
 12397 ;; This function is called by:
 12398 ;;		_DimmerLights_AssignationDimming
 12399 ;;		_setDimmerLights_OnOff
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           
 12404                           ;psect for function _setDimmerIntr_Dimming_RF
 12405  1343                     _setDimmerIntr_Dimming_RF:	
 12406                           
 12407                           ;incstack = 0
 12408                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 12409                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 12410  1343  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
 12411                           
 12412                           ;Dimmer_B1.c: 294: if (lights == 1) {
 12413  1344  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12414  1345  3A01               	xorlw	1
 12415  1346  1D03               	skipz
 12416  1347  2B58               	goto	l5608
 12417                           
 12418                           ;Dimmer_B1.c: 295: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 12419  1348  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12420  1349  3A01               	xorlw	1
 12421  134A  3000               	movlw	0
 12422  134B  1903               	skipnz
 12423  134C  3001               	movlw	1
 12424  134D  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12425  134E  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12426  134F  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12427  1350  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12428  1351  0021               	movlb	1	; select bank1
 12429  1352  0820               	movf	_DimmerIntr1^(0+128),w
 12430  1353  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12431  1354  39BF               	andlw	-65
 12432  1355  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12433  1356  00A0               	movwf	_DimmerIntr1^(0+128)
 12434                           
 12435                           ;Dimmer_B1.c: 296: }
 12436  1357  0008               	return
 12437  1358                     l5608:	
 12438                           
 12439                           ;Dimmer_B1.c: 299: else if (lights == 2) {
 12440  1358  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12441  1359  3A02               	xorlw	2
 12442  135A  1D03               	skipz
 12443  135B  0008               	return
 12444                           
 12445                           ;Dimmer_B1.c: 300: DimmerIntr2.Dimming_RF = command == 1 ? 1 : 0;
 12446  135C  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12447  135D  3A01               	xorlw	1
 12448  135E  3000               	movlw	0
 12449  135F  1903               	skipnz
 12450  1360  3001               	movlw	1
 12451  1361  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12452  1362  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12453  1363  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12454  1364  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12455  1365  0021               	movlb	1	; select bank1
 12456  1366  0830               	movf	_DimmerIntr2^(0+128),w
 12457  1367  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12458  1368  39BF               	andlw	-65
 12459  1369  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12460  136A  00B0               	movwf	_DimmerIntr2^(0+128)
 12461  136B  0008               	return
 12462  136C                     __end_of_setDimmerIntr_Dimming_RF:	
 12463                           
 12464                           	psect	text79
 12465  0D54                     __ptext79:	
 12466 ;; *************** function _DimmerLights_DimmingFunction *****************
 12467 ;; Defined at:
 12468 ;;		line 2126 in file "../src/Dimmer_B1.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;  lights          1    wreg     unsigned char 
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;  lights          1    6[BANK0 ] unsigned char 
 12473 ;; Return value:  Size  Location     Type
 12474 ;;		None               void
 12475 ;; Registers used:
 12476 ;;		wreg, status,2, status,0, pclath, cstack
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;Total ram usage:        2 bytes
 12487 ;; Hardware stack levels used:    1
 12488 ;; Hardware stack levels required when called:    6
 12489 ;; This function calls:
 12490 ;;		_DimmerIntr_ValueCalculate
 12491 ;; This function is called by:
 12492 ;;		_DimmerLights_Main
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           
 12497                           ;psect for function _DimmerLights_DimmingFunction
 12498  0D54                     _DimmerLights_DimmingFunction:	
 12499                           
 12500                           ;incstack = 0
 12501                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
 12502                           ;DimmerLights_DimmingFunction@lights stored from wreg
 12503  0D54  0020               	movlb	0	; select bank0
 12504  0D55  00A6               	movwf	DimmerLights_DimmingFunction@lights
 12505                           
 12506                           ;Dimmer_B1.c: 2128: if (lights == 1) {
 12507  0D56  0826               	movf	DimmerLights_DimmingFunction@lights,w
 12508  0D57  3A01               	xorlw	1
 12509  0D58  1D03               	skipz
 12510  0D59  2DAA               	goto	l8010
 12511                           
 12512                           ;Dimmer_B1.c: 2129: if (DimmerIntr1.Tune == 1) {
 12513  0D5A  0021               	movlb	1	; select bank1
 12514  0D5B  1CA0               	btfss	_DimmerIntr1^(0+128),1
 12515  0D5C  2DAA               	goto	l8010
 12516                           
 12517                           ;Dimmer_B1.c: 2130: DimmerIntr1.Tune = 0;
 12518  0D5D  10A0               	bcf	_DimmerIntr1^(0+128),1
 12519                           
 12520                           ;Dimmer_B1.c: 2131: DimmerIntr1.TuneTime++;
 12521  0D5E  3001               	movlw	1
 12522  0D5F  0020               	movlb	0	; select bank0
 12523  0D60  00A5               	movwf	??_DimmerLights_DimmingFunction
 12524  0D61  0825               	movf	??_DimmerLights_DimmingFunction,w
 12525  0D62  0021               	movlb	1	; select bank1
 12526  0D63  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 12527                           
 12528                           ;Dimmer_B1.c: 2132: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 12529  0D64  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 12530  0D65  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 12531  0D66  1C03               	skipc
 12532  0D67  2DAA               	goto	l8010
 12533                           
 12534                           ;Dimmer_B1.c: 2133: DimmerIntr1.TuneTime = 0;
 12535  0D68  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 12536                           
 12537                           ;Dimmer_B1.c: 2134: DimmerIntr1.TuneGO = 1;
 12538  0D69  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
 12539                           
 12540                           ;Dimmer_B1.c: 2135: if (DimmerIntr1.Dimming_Sw == 1) {
 12541  0D6A  1E20               	btfss	_DimmerIntr1^(0+128),4
 12542  0D6B  2D8C               	goto	l734
 12543                           
 12544                           ;Dimmer_B1.c: 2137: if (DimmerIntr1.Dimming_Status == 0) {
 12545  0D6C  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 12546  0D6D  2D7F               	goto	l7992
 12547                           
 12548                           ;Dimmer_B1.c: 2138: if (DimmerIntr1.DimmingValue < ((char)(77*0.55))) {
 12549  0D6E  302A               	movlw	42
 12550  0D6F  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 12551  0D70  1803               	skipnc
 12552  0D71  2D7D               	goto	l736
 12553                           
 12554                           ;Dimmer_B1.c: 2139: DimmerIntr1.DimmingValue++;
 12555  0D72  3001               	movlw	1
 12556  0D73  0020               	movlb	0	; select bank0
 12557  0D74  00A5               	movwf	??_DimmerLights_DimmingFunction
 12558  0D75  0825               	movf	??_DimmerLights_DimmingFunction,w
 12559  0D76  0021               	movlb	1	; select bank1
 12560  0D77  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 12561                           
 12562                           ;Dimmer_B1.c: 2140: DimmerIntr_ValueCalculate(1);
 12563  0D78  3001               	movlw	1
 12564  0D79  3188  2055  318D   	fcall	_DimmerIntr_ValueCalculate
 12565                           
 12566                           ;Dimmer_B1.c: 2141: } else {
 12567  0D7C  2DAA               	goto	l8010
 12568  0D7D                     l736:	
 12569                           
 12570                           ;Dimmer_B1.c: 2142: DimmerIntr1.Dimming_Status = 1;
 12571  0D7D  16A0               	bsf	_DimmerIntr1^(0+128),5
 12572                           
 12573                           ;Dimmer_B1.c: 2143: }
 12574                           ;Dimmer_B1.c: 2144: } else {
 12575  0D7E  2DAA               	goto	l8010
 12576  0D7F                     l7992:	
 12577                           
 12578                           ;Dimmer_B1.c: 2145: if (DimmerIntr1.DimmingValue > ((char)(5*0.55))) {
 12579  0D7F  3003               	movlw	3
 12580  0D80  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 12581  0D81  1C03               	skipc
 12582  0D82  2D8A               	goto	l739
 12583                           
 12584                           ;Dimmer_B1.c: 2146: DimmerIntr1.DimmingValue--;
 12585  0D83  3001               	movlw	1
 12586  0D84  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 12587                           
 12588                           ;Dimmer_B1.c: 2147: DimmerIntr_ValueCalculate(1);
 12589  0D85  3001               	movlw	1
 12590  0D86  3188  2055  318D   	fcall	_DimmerIntr_ValueCalculate
 12591                           
 12592                           ;Dimmer_B1.c: 2148: } else {
 12593  0D89  2DAA               	goto	l8010
 12594  0D8A                     l739:	
 12595                           
 12596                           ;Dimmer_B1.c: 2149: DimmerIntr1.Dimming_Status = 0;
 12597  0D8A  12A0               	bcf	_DimmerIntr1^(0+128),5
 12598                           
 12599                           ;Dimmer_B1.c: 2150: }
 12600                           ;Dimmer_B1.c: 2151: }
 12601                           ;Dimmer_B1.c: 2170: } else if (DimmerIntr1.Dimming_RF == 1) {
 12602  0D8B  2DAA               	goto	l8010
 12603  0D8C                     l734:	
 12604  0D8C  1F20               	btfss	_DimmerIntr1^(0+128),6
 12605  0D8D  2DAA               	goto	l8010
 12606                           
 12607                           ;Dimmer_B1.c: 2172: if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 12608  0D8E  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 12609  0D8F  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 12610  0D90  1803               	skipnc
 12611  0D91  2D9D               	goto	l8004
 12612                           
 12613                           ;Dimmer_B1.c: 2173: DimmerIntr1.DimmingValue++;
 12614  0D92  3001               	movlw	1
 12615  0D93  0020               	movlb	0	; select bank0
 12616  0D94  00A5               	movwf	??_DimmerLights_DimmingFunction
 12617  0D95  0825               	movf	??_DimmerLights_DimmingFunction,w
 12618  0D96  0021               	movlb	1	; select bank1
 12619  0D97  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 12620                           
 12621                           ;Dimmer_B1.c: 2174: DimmerIntr_ValueCalculate(1);
 12622  0D98  3001               	movlw	1
 12623  0D99  3188  2055  318D   	fcall	_DimmerIntr_ValueCalculate
 12624                           
 12625                           ;Dimmer_B1.c: 2175: } else if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 12626  0D9C  2DAA               	goto	l8010
 12627  0D9D                     l8004:	
 12628  0D9D  0021               	movlb	1	; select bank1
 12629  0D9E  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 12630  0D9F  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 12631  0DA0  1803               	skipnc
 12632  0DA1  2DA9               	goto	l745
 12633                           
 12634                           ;Dimmer_B1.c: 2176: DimmerIntr1.DimmingValue--;
 12635  0DA2  3001               	movlw	1
 12636  0DA3  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 12637                           
 12638                           ;Dimmer_B1.c: 2177: DimmerIntr_ValueCalculate(1);
 12639  0DA4  3001               	movlw	1
 12640  0DA5  3188  2055  318D   	fcall	_DimmerIntr_ValueCalculate
 12641                           
 12642                           ;Dimmer_B1.c: 2178: } else {
 12643  0DA8  2DAA               	goto	l8010
 12644  0DA9                     l745:	
 12645                           
 12646                           ;Dimmer_B1.c: 2179: DimmerIntr1.Dimming_RF = 0;
 12647  0DA9  1320               	bcf	_DimmerIntr1^(0+128),6
 12648  0DAA                     l8010:	
 12649                           
 12650                           ;Dimmer_B1.c: 2180: }
 12651                           ;Dimmer_B1.c: 2193: }
 12652                           ;Dimmer_B1.c: 2194: }
 12653                           ;Dimmer_B1.c: 2195: }
 12654                           ;Dimmer_B1.c: 2196: }
 12655                           ;Dimmer_B1.c: 2200: if (lights == 2) {
 12656  0DAA  0020               	movlb	0	; select bank0
 12657  0DAB  0826               	movf	DimmerLights_DimmingFunction@lights,w
 12658  0DAC  3A02               	xorlw	2
 12659  0DAD  1D03               	skipz
 12660  0DAE  0008               	return
 12661                           
 12662                           ;Dimmer_B1.c: 2201: if (DimmerIntr2.Tune == 1) {
 12663  0DAF  0021               	movlb	1	; select bank1
 12664  0DB0  1CB0               	btfss	_DimmerIntr2^(0+128),1
 12665  0DB1  0008               	return
 12666                           
 12667                           ;Dimmer_B1.c: 2202: DimmerIntr2.Tune = 0;
 12668  0DB2  10B0               	bcf	_DimmerIntr2^(0+128),1
 12669                           
 12670                           ;Dimmer_B1.c: 2203: DimmerIntr2.TuneTime++;
 12671  0DB3  3001               	movlw	1
 12672  0DB4  0020               	movlb	0	; select bank0
 12673  0DB5  00A5               	movwf	??_DimmerLights_DimmingFunction
 12674  0DB6  0825               	movf	??_DimmerLights_DimmingFunction,w
 12675  0DB7  0021               	movlb	1	; select bank1
 12676  0DB8  07B3               	addwf	(_DimmerIntr2^(0+128)+3),f
 12677                           
 12678                           ;Dimmer_B1.c: 2204: if (DimmerIntr2.TuneTime >= DimmerIntr2.TuneTimeValue) {
 12679  0DB9  0834               	movf	(_DimmerIntr2^(0+128)+4),w
 12680  0DBA  0233               	subwf	(_DimmerIntr2^(0+128)+3),w
 12681  0DBB  1C03               	skipc
 12682  0DBC  0008               	return
 12683                           
 12684                           ;Dimmer_B1.c: 2205: DimmerIntr2.TuneTime = 0;
 12685  0DBD  01B3               	clrf	(_DimmerIntr2^(0+128)+3)
 12686                           
 12687                           ;Dimmer_B1.c: 2206: DimmerIntr2.TuneGO = 1;
 12688  0DBE  1731               	bsf	(_DimmerIntr2^(0+128)+1),6
 12689                           
 12690                           ;Dimmer_B1.c: 2207: if (DimmerIntr2.Dimming_Sw == 1) {
 12691  0DBF  1E30               	btfss	_DimmerIntr2^(0+128),4
 12692  0DC0  2DDF               	goto	l750
 12693                           
 12694                           ;Dimmer_B1.c: 2209: if (DimmerIntr2.Dimming_Status == 0) {
 12695  0DC1  1AB0               	btfsc	_DimmerIntr2^(0+128),5
 12696  0DC2  2DD3               	goto	l8034
 12697                           
 12698                           ;Dimmer_B1.c: 2210: if (DimmerIntr2.DimmingValue < ((char)(77*0.55))) {
 12699  0DC3  302A               	movlw	42
 12700  0DC4  0235               	subwf	(_DimmerIntr2^(0+128)+5),w
 12701  0DC5  1803               	skipnc
 12702  0DC6  2DD1               	goto	l752
 12703                           
 12704                           ;Dimmer_B1.c: 2211: DimmerIntr2.DimmingValue++;
 12705  0DC7  3001               	movlw	1
 12706  0DC8  0020               	movlb	0	; select bank0
 12707  0DC9  00A5               	movwf	??_DimmerLights_DimmingFunction
 12708  0DCA  0825               	movf	??_DimmerLights_DimmingFunction,w
 12709  0DCB  0021               	movlb	1	; select bank1
 12710  0DCC  07B5               	addwf	(_DimmerIntr2^(0+128)+5),f
 12711                           
 12712                           ;Dimmer_B1.c: 2212: DimmerIntr_ValueCalculate(2);
 12713  0DCD  3002               	movlw	2
 12714  0DCE  3188  2055         	fcall	_DimmerIntr_ValueCalculate
 12715                           
 12716                           ;Dimmer_B1.c: 2213: } else {
 12717  0DD0  0008               	return
 12718  0DD1                     l752:	
 12719                           
 12720                           ;Dimmer_B1.c: 2214: DimmerIntr2.Dimming_Status = 1;
 12721  0DD1  16B0               	bsf	_DimmerIntr2^(0+128),5
 12722                           
 12723                           ;Dimmer_B1.c: 2215: }
 12724                           ;Dimmer_B1.c: 2216: } else {
 12725  0DD2  0008               	return
 12726  0DD3                     l8034:	
 12727                           
 12728                           ;Dimmer_B1.c: 2217: if (DimmerIntr2.DimmingValue > ((char)(5*0.55))) {
 12729  0DD3  3003               	movlw	3
 12730  0DD4  0235               	subwf	(_DimmerIntr2^(0+128)+5),w
 12731  0DD5  1C03               	skipc
 12732  0DD6  2DDD               	goto	l755
 12733                           
 12734                           ;Dimmer_B1.c: 2218: DimmerIntr2.DimmingValue--;
 12735  0DD7  3001               	movlw	1
 12736  0DD8  02B5               	subwf	(_DimmerIntr2^(0+128)+5),f
 12737                           
 12738                           ;Dimmer_B1.c: 2219: DimmerIntr_ValueCalculate(2);
 12739  0DD9  3002               	movlw	2
 12740  0DDA  3188  2055         	fcall	_DimmerIntr_ValueCalculate
 12741                           
 12742                           ;Dimmer_B1.c: 2220: } else {
 12743  0DDC  0008               	return
 12744  0DDD                     l755:	
 12745                           
 12746                           ;Dimmer_B1.c: 2221: DimmerIntr2.Dimming_Status = 0;
 12747  0DDD  12B0               	bcf	_DimmerIntr2^(0+128),5
 12748                           
 12749                           ;Dimmer_B1.c: 2222: }
 12750                           ;Dimmer_B1.c: 2223: }
 12751                           ;Dimmer_B1.c: 2242: } else if (DimmerIntr2.Dimming_RF == 1) {
 12752  0DDE  0008               	return
 12753  0DDF                     l750:	
 12754  0DDF  1F30               	btfss	_DimmerIntr2^(0+128),6
 12755  0DE0  0008               	return
 12756                           
 12757                           ;Dimmer_B1.c: 2244: if (DimmerIntr2.DimmingValue < DimmerIntr2.MaxmumValue) {
 12758  0DE1  0836               	movf	(_DimmerIntr2^(0+128)+6),w
 12759  0DE2  0235               	subwf	(_DimmerIntr2^(0+128)+5),w
 12760  0DE3  1803               	skipnc
 12761  0DE4  2DEF               	goto	l8046
 12762                           
 12763                           ;Dimmer_B1.c: 2245: DimmerIntr2.DimmingValue++;
 12764  0DE5  3001               	movlw	1
 12765  0DE6  0020               	movlb	0	; select bank0
 12766  0DE7  00A5               	movwf	??_DimmerLights_DimmingFunction
 12767  0DE8  0825               	movf	??_DimmerLights_DimmingFunction,w
 12768  0DE9  0021               	movlb	1	; select bank1
 12769  0DEA  07B5               	addwf	(_DimmerIntr2^(0+128)+5),f
 12770                           
 12771                           ;Dimmer_B1.c: 2246: DimmerIntr_ValueCalculate(2);
 12772  0DEB  3002               	movlw	2
 12773  0DEC  3188  2055         	fcall	_DimmerIntr_ValueCalculate
 12774                           
 12775                           ;Dimmer_B1.c: 2247: } else if (DimmerIntr2.DimmingValue > DimmerIntr2.MaxmumValue) {
 12776  0DEE  0008               	return
 12777  0DEF                     l8046:	
 12778  0DEF  0021               	movlb	1	; select bank1
 12779  0DF0  0835               	movf	(_DimmerIntr2^(0+128)+5),w
 12780  0DF1  0236               	subwf	(_DimmerIntr2^(0+128)+6),w
 12781  0DF2  1803               	skipnc
 12782  0DF3  2DFA               	goto	l761
 12783                           
 12784                           ;Dimmer_B1.c: 2248: DimmerIntr2.DimmingValue--;
 12785  0DF4  3001               	movlw	1
 12786  0DF5  02B5               	subwf	(_DimmerIntr2^(0+128)+5),f
 12787                           
 12788                           ;Dimmer_B1.c: 2249: DimmerIntr_ValueCalculate(2);
 12789  0DF6  3002               	movlw	2
 12790  0DF7  3188  2055         	fcall	_DimmerIntr_ValueCalculate
 12791                           
 12792                           ;Dimmer_B1.c: 2250: } else {
 12793  0DF9  0008               	return
 12794  0DFA                     l761:	
 12795                           
 12796                           ;Dimmer_B1.c: 2251: DimmerIntr2.Dimming_RF = 0;
 12797  0DFA  1330               	bcf	_DimmerIntr2^(0+128),6
 12798  0DFB  0008               	return
 12799  0DFC                     __end_of_DimmerLights_DimmingFunction:	
 12800                           
 12801                           	psect	text80
 12802  0855                     __ptext80:	
 12803 ;; *************** function _DimmerIntr_ValueCalculate *****************
 12804 ;; Defined at:
 12805 ;;		line 2057 in file "../src/Dimmer_B1.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  lights          1    wreg     unsigned char 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  lights          1    4[BANK0 ] unsigned char 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;		None               void
 12812 ;; Registers used:
 12813 ;;		wreg, status,2, status,0, pclath, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;Total ram usage:        3 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    5
 12826 ;; This function calls:
 12827 ;;		_Division
 12828 ;; This function is called by:
 12829 ;;		_setDimmerLights_OnOff
 12830 ;;		_DimmerLights_DimmingFunction
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           
 12835                           ;psect for function _DimmerIntr_ValueCalculate
 12836  0855                     _DimmerIntr_ValueCalculate:	
 12837                           
 12838                           ;incstack = 0
 12839                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg+status,2+status,0+pclath+cstack]
 12840                           ;DimmerIntr_ValueCalculate@lights stored from wreg
 12841  0855  0020               	movlb	0	; select bank0
 12842  0856  00A4               	movwf	DimmerIntr_ValueCalculate@lights
 12843                           
 12844                           ;Dimmer_B1.c: 2059: if (lights == 1) {
 12845  0857  0824               	movf	DimmerIntr_ValueCalculate@lights,w
 12846  0858  3A01               	xorlw	1
 12847  0859  1D03               	skipz
 12848  085A  2881               	goto	l7660
 12849                           
 12850                           ;Dimmer_B1.c: 2070: DimmerIntr1.TuneValue2 = Division(DimmerIntr1.DimmingValue, 2);
 12851  085B  3002               	movlw	2
 12852  085C  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12853  085D  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12854  085E  00F7               	movwf	Division@num
 12855  085F  0021               	movlb	1	; select bank1
 12856  0860  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 12857  0861  3190  2001  3188   	fcall	_Division
 12858  0864  0020               	movlb	0	; select bank0
 12859  0865  00A3               	movwf	??_DimmerIntr_ValueCalculate+1
 12860  0866  0823               	movf	??_DimmerIntr_ValueCalculate+1,w
 12861  0867  0021               	movlb	1	; select bank1
 12862  0868  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 12863                           
 12864                           ;Dimmer_B1.c: 2071: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (55 - DimmerIntr1.
      +                          DimmingValue);
 12865  0869  0325               	decf	(_DimmerIntr1^(0+128)+5),w
 12866  086A  3AFF               	xorlw	255
 12867  086B  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 12868  086C  3E37               	addlw	55
 12869  086D  0020               	movlb	0	; select bank0
 12870  086E  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12871  086F  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12872  0870  0021               	movlb	1	; select bank1
 12873  0871  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
 12874                           
 12875                           ;Dimmer_B1.c: 2072: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneVa
      +                          lue2;
 12876  0872  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 12877  0873  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 12878  0874  0020               	movlb	0	; select bank0
 12879  0875  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12880  0876  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12881  0877  0021               	movlb	1	; select bank1
 12882  0878  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
 12883                           
 12884                           ;Dimmer_B1.c: 2073: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 5;
 12885  0879  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 12886  087A  3E05               	addlw	5
 12887  087B  0020               	movlb	0	; select bank0
 12888  087C  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12889  087D  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12890  087E  0021               	movlb	1	; select bank1
 12891  087F  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 12892                           
 12893                           ;Dimmer_B1.c: 2075: DimmerIntr1.Calculate = 1;
 12894  0880  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 12895  0881                     l7660:	
 12896                           
 12897                           ;Dimmer_B1.c: 2077: }
 12898                           ;Dimmer_B1.c: 2082: if (lights == 2) {
 12899  0881  0020               	movlb	0	; select bank0
 12900  0882  0824               	movf	DimmerIntr_ValueCalculate@lights,w
 12901  0883  3A02               	xorlw	2
 12902  0884  1D03               	skipz
 12903  0885  0008               	return
 12904                           
 12905                           ;Dimmer_B1.c: 2093: DimmerIntr2.TuneValue2 = Division(DimmerIntr2.DimmingValue, 2);
 12906  0886  3002               	movlw	2
 12907  0887  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12908  0888  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12909  0889  00F7               	movwf	Division@num
 12910  088A  0021               	movlb	1	; select bank1
 12911  088B  0835               	movf	(_DimmerIntr2^(0+128)+5),w
 12912  088C  3190  2001         	fcall	_Division
 12913  088E  0020               	movlb	0	; select bank0
 12914  088F  00A3               	movwf	??_DimmerIntr_ValueCalculate+1
 12915  0890  0823               	movf	??_DimmerIntr_ValueCalculate+1,w
 12916  0891  0021               	movlb	1	; select bank1
 12917  0892  00B8               	movwf	(_DimmerIntr2^(0+128)+8)
 12918                           
 12919                           ;Dimmer_B1.c: 2094: DimmerIntr2.TuneValue3 = DimmerIntr2.TuneValue2 + (55 - DimmerIntr2.
      +                          DimmingValue);
 12920  0893  0335               	decf	(_DimmerIntr2^(0+128)+5),w
 12921  0894  3AFF               	xorlw	255
 12922  0895  0738               	addwf	(_DimmerIntr2^(0+128)+8),w
 12923  0896  3E37               	addlw	55
 12924  0897  0020               	movlb	0	; select bank0
 12925  0898  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12926  0899  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12927  089A  0021               	movlb	1	; select bank1
 12928  089B  00B9               	movwf	(_DimmerIntr2^(0+128)+9)
 12929                           
 12930                           ;Dimmer_B1.c: 2095: DimmerIntr2.TuneValue4 = DimmerIntr2.TuneValue3 + DimmerIntr2.TuneVa
      +                          lue2;
 12931  089C  0839               	movf	(_DimmerIntr2^(0+128)+9),w
 12932  089D  0738               	addwf	(_DimmerIntr2^(0+128)+8),w
 12933  089E  0020               	movlb	0	; select bank0
 12934  089F  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12935  08A0  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12936  08A1  0021               	movlb	1	; select bank1
 12937  08A2  00BA               	movwf	(_DimmerIntr2^(0+128)+10)
 12938                           
 12939                           ;Dimmer_B1.c: 2096: DimmerIntr2.TuneEnd = DimmerIntr2.TuneValue4 + 5;
 12940  08A3  083A               	movf	(_DimmerIntr2^(0+128)+10),w
 12941  08A4  3E05               	addlw	5
 12942  08A5  0020               	movlb	0	; select bank0
 12943  08A6  00A2               	movwf	??_DimmerIntr_ValueCalculate
 12944  08A7  0822               	movf	??_DimmerIntr_ValueCalculate,w
 12945  08A8  0021               	movlb	1	; select bank1
 12946  08A9  00BB               	movwf	(_DimmerIntr2^(0+128)+11)
 12947                           
 12948                           ;Dimmer_B1.c: 2098: DimmerIntr2.Calculate = 1;
 12949  08AA  17B1               	bsf	(_DimmerIntr2^(0+128)+1),7
 12950  08AB  0008               	return
 12951  08AC                     __end_of_DimmerIntr_ValueCalculate:	
 12952                           
 12953                           	psect	text81
 12954  1F6F                     __ptext81:	
 12955 ;; *************** function _DimmerLights_Initialization *****************
 12956 ;; Defined at:
 12957 ;;		line 705 in file "../src/Dimmer_B1.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;		None
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;		None
 12962 ;; Return value:  Size  Location     Type
 12963 ;;		None               void
 12964 ;; Registers used:
 12965 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;Total ram usage:        0 bytes
 12976 ;; Hardware stack levels used:    1
 12977 ;; Hardware stack levels required when called:    7
 12978 ;; This function calls:
 12979 ;;		_DimmerIntr_Initialization
 12980 ;;		_setDimmerLights_Initialization
 12981 ;; This function is called by:
 12982 ;;		_main
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986                           
 12987                           ;psect for function _DimmerLights_Initialization
 12988  1F6F                     _DimmerLights_Initialization:	
 12989                           
 12990                           ;Dimmer_B1.c: 707: setDimmerLights_Initialization(1);
 12991                           
 12992                           ;incstack = 0
 12993                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12994  1F6F  3001               	movlw	1
 12995  1F70  3190  2000  319F   	fcall	_setDimmerLights_Initialization
 12996                           
 12997                           ;Dimmer_B1.c: 711: setDimmerLights_Initialization(2);
 12998  1F73  3002               	movlw	2
 12999  1F74  3190  2000  319F   	fcall	_setDimmerLights_Initialization
 13000                           
 13001                           ;Dimmer_B1.c: 717: DimmerIntr_Initialization();
 13002  1F77  318E  26A5         	fcall	_DimmerIntr_Initialization
 13003  1F79  0008               	return
 13004  1F7A                     __end_of_DimmerLights_Initialization:	
 13005                           
 13006                           	psect	text82
 13007  1000                     __ptext82:	
 13008 ;; *************** function _setDimmerLights_Initialization *****************
 13009 ;; Defined at:
 13010 ;;		line 721 in file "../src/Dimmer_B1.c"
 13011 ;; Parameters:    Size  Location     Type
 13012 ;;  lights          1    wreg     unsigned char 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;  lights          1    0[COMMON] unsigned char 
 13015 ;; Return value:  Size  Location     Type
 13016 ;;		None               void
 13017 ;; Registers used:
 13018 ;;		wreg
 13019 ;; Tracked objects:
 13020 ;;		On entry : 0/0
 13021 ;;		On exit  : 0/0
 13022 ;;		Unchanged: 0/0
 13023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;Total ram usage:        0 bytes
 13029 ;; Hardware stack levels used:    1
 13030 ;; Hardware stack levels required when called:    3
 13031 ;; This function calls:
 13032 ;;		Nothing
 13033 ;; This function is called by:
 13034 ;;		_DimmerLights_Initialization
 13035 ;; This function uses a non-reentrant model
 13036 ;;
 13037                           
 13038                           
 13039                           ;psect for function _setDimmerLights_Initialization
 13040  1000                     _setDimmerLights_Initialization:	
 13041                           
 13042                           ;incstack = 0
 13043                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 13044  1000  0008               	return
 13045  1001                     __end_of_setDimmerLights_Initialization:	
 13046                           
 13047                           	psect	text83
 13048  0EA5                     __ptext83:	
 13049 ;; *************** function _DimmerIntr_Initialization *****************
 13050 ;; Defined at:
 13051 ;;		line 7 in file "../src/Dimmer_B1.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;		None
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;		None               void
 13058 ;; Registers used:
 13059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;Total ram usage:        2 bytes
 13070 ;; Hardware stack levels used:    1
 13071 ;; Hardware stack levels required when called:    6
 13072 ;; This function calls:
 13073 ;;		_Division
 13074 ;;		_getDimmerLights_PercentToValue
 13075 ;;		_getDimmerLights_ValueToPercent
 13076 ;;		_setMemory_Modify
 13077 ;; This function is called by:
 13078 ;;		_DimmerLights_Initialization
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           
 13083                           ;psect for function _DimmerIntr_Initialization
 13084  0EA5                     _DimmerIntr_Initialization:	
 13085                           
 13086                           ;Dimmer_B1.c: 11: DimmerIntr1.TuneTimeValue = 3;
 13087                           
 13088                           ;incstack = 0
 13089                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13090  0EA5  3003               	movlw	3
 13091  0EA6  0020               	movlb	0	; select bank0
 13092  0EA7  00DA               	movwf	??_DimmerIntr_Initialization
 13093  0EA8  085A               	movf	??_DimmerIntr_Initialization,w
 13094  0EA9  0021               	movlb	1	; select bank1
 13095  0EAA  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
 13096                           
 13097                           ;Dimmer_B1.c: 12: DimmerIntr1.MaxmumValue = ((char)(77*0.55));
 13098  0EAB  302A               	movlw	42
 13099  0EAC  0020               	movlb	0	; select bank0
 13100  0EAD  00DA               	movwf	??_DimmerIntr_Initialization
 13101  0EAE  085A               	movf	??_DimmerIntr_Initialization,w
 13102  0EAF  0021               	movlb	1	; select bank1
 13103  0EB0  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 13104                           
 13105                           ;Dimmer_B1.c: 13: DimmerIntr1.MinimumValue = ((char)(5*0.55));
 13106  0EB1  3002               	movlw	2
 13107  0EB2  0020               	movlb	0	; select bank0
 13108  0EB3  00DA               	movwf	??_DimmerIntr_Initialization
 13109  0EB4  085A               	movf	??_DimmerIntr_Initialization,w
 13110  0EB5  0021               	movlb	1	; select bank1
 13111  0EB6  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
 13112                           
 13113                           ;Dimmer_B1.c: 14: DimmerIntr1.Tune = 0;
 13114  0EB7  10A0               	bcf	_DimmerIntr1^(0+128),1
 13115                           
 13116                           ;Dimmer_B1.c: 20: product->Data[21] = getDimmerLights_ValueToPercent(((char)(77*0.55)));
 13117  0EB8  302A               	movlw	42
 13118  0EB9  318A  2232  318E   	fcall	_getDimmerLights_ValueToPercent
 13119  0EBC  0020               	movlb	0	; select bank0
 13120  0EBD  00DA               	movwf	??_DimmerIntr_Initialization
 13121  0EBE  086D               	movf	_product,w
 13122  0EBF  3E15               	addlw	21
 13123  0EC0  0086               	movwf	6
 13124  0EC1  3002               	movlw	2	; select bank4/5
 13125  0EC2  0087               	movwf	7
 13126  0EC3  085A               	movf	??_DimmerIntr_Initialization,w
 13127  0EC4  0081               	movwf	1
 13128                           
 13129                           ;Dimmer_B1.c: 23: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 13130  0EC5  086D               	movf	_product,w
 13131  0EC6  3E15               	addlw	21
 13132  0EC7  0086               	movwf	6
 13133  0EC8  3002               	movlw	2	; select bank4/5
 13134  0EC9  0087               	movwf	7
 13135  0ECA  0801               	movf	1,w
 13136  0ECB  3189  21CD  318E   	fcall	_getDimmerLights_PercentToValue
 13137  0ECE  0020               	movlb	0	; select bank0
 13138  0ECF  00DA               	movwf	??_DimmerIntr_Initialization
 13139  0ED0  085A               	movf	??_DimmerIntr_Initialization,w
 13140  0ED1  0021               	movlb	1	; select bank1
 13141  0ED2  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 13142                           
 13143                           ;Dimmer_B1.c: 40: DimmerIntr1.TuneValue2 = Division(((char)(77*0.55)), 2);
 13144  0ED3  3002               	movlw	2
 13145  0ED4  0020               	movlb	0	; select bank0
 13146  0ED5  00DA               	movwf	??_DimmerIntr_Initialization
 13147  0ED6  085A               	movf	??_DimmerIntr_Initialization,w
 13148  0ED7  00F7               	movwf	Division@num
 13149  0ED8  302A               	movlw	42
 13150  0ED9  3190  2001  318E   	fcall	_Division
 13151  0EDC  0020               	movlb	0	; select bank0
 13152  0EDD  00DB               	movwf	??_DimmerIntr_Initialization+1
 13153  0EDE  085B               	movf	??_DimmerIntr_Initialization+1,w
 13154  0EDF  0021               	movlb	1	; select bank1
 13155  0EE0  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 13156                           
 13157                           ;Dimmer_B1.c: 41: DimmerIntr1.TuneValue3 = DimmerIntr1.TuneValue2 + (55 - ((char)(77*0.5
      +                          5)));
 13158  0EE1  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 13159  0EE2  3E0D               	addlw	13
 13160  0EE3  0020               	movlb	0	; select bank0
 13161  0EE4  00DA               	movwf	??_DimmerIntr_Initialization
 13162  0EE5  085A               	movf	??_DimmerIntr_Initialization,w
 13163  0EE6  0021               	movlb	1	; select bank1
 13164  0EE7  00A9               	movwf	(_DimmerIntr1^(0+128)+9)
 13165                           
 13166                           ;Dimmer_B1.c: 42: DimmerIntr1.TuneValue4 = DimmerIntr1.TuneValue3 + DimmerIntr1.TuneValu
      +                          e2;
 13167  0EE8  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 13168  0EE9  0728               	addwf	(_DimmerIntr1^(0+128)+8),w
 13169  0EEA  0020               	movlb	0	; select bank0
 13170  0EEB  00DA               	movwf	??_DimmerIntr_Initialization
 13171  0EEC  085A               	movf	??_DimmerIntr_Initialization,w
 13172  0EED  0021               	movlb	1	; select bank1
 13173  0EEE  00AA               	movwf	(_DimmerIntr1^(0+128)+10)
 13174                           
 13175                           ;Dimmer_B1.c: 43: DimmerIntr1.TuneEnd = DimmerIntr1.TuneValue4 + 1;
 13176  0EEF  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 13177  0EF0  3E01               	addlw	1
 13178  0EF1  0020               	movlb	0	; select bank0
 13179  0EF2  00DA               	movwf	??_DimmerIntr_Initialization
 13180  0EF3  085A               	movf	??_DimmerIntr_Initialization,w
 13181  0EF4  0021               	movlb	1	; select bank1
 13182  0EF5  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 13183                           
 13184                           ;Dimmer_B1.c: 44: DimmerIntr1.Calculate = 1;
 13185  0EF6  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 13186                           
 13187                           ;Dimmer_B1.c: 53: DimmerIntr2.TuneTimeValue = 3;
 13188  0EF7  3003               	movlw	3
 13189  0EF8  0020               	movlb	0	; select bank0
 13190  0EF9  00DA               	movwf	??_DimmerIntr_Initialization
 13191  0EFA  085A               	movf	??_DimmerIntr_Initialization,w
 13192  0EFB  0021               	movlb	1	; select bank1
 13193  0EFC  00B4               	movwf	(_DimmerIntr2^(0+128)+4)
 13194                           
 13195                           ;Dimmer_B1.c: 54: DimmerIntr2.MaxmumValue = ((char)(77*0.55));
 13196  0EFD  302A               	movlw	42
 13197  0EFE  0020               	movlb	0	; select bank0
 13198  0EFF  00DA               	movwf	??_DimmerIntr_Initialization
 13199  0F00  085A               	movf	??_DimmerIntr_Initialization,w
 13200  0F01  0021               	movlb	1	; select bank1
 13201  0F02  00B6               	movwf	(_DimmerIntr2^(0+128)+6)
 13202                           
 13203                           ;Dimmer_B1.c: 55: DimmerIntr2.MinimumValue = ((char)(5*0.55));
 13204  0F03  3002               	movlw	2
 13205  0F04  0020               	movlb	0	; select bank0
 13206  0F05  00DA               	movwf	??_DimmerIntr_Initialization
 13207  0F06  085A               	movf	??_DimmerIntr_Initialization,w
 13208  0F07  0021               	movlb	1	; select bank1
 13209  0F08  00B7               	movwf	(_DimmerIntr2^(0+128)+7)
 13210                           
 13211                           ;Dimmer_B1.c: 56: DimmerIntr2.Tune = 0;
 13212  0F09  10B0               	bcf	_DimmerIntr2^(0+128),1
 13213                           
 13214                           ;Dimmer_B1.c: 61: product->Data[22] = getDimmerLights_ValueToPercent(((char)(77*0.55)));
 13215  0F0A  302A               	movlw	42
 13216  0F0B  318A  2232  318E   	fcall	_getDimmerLights_ValueToPercent
 13217  0F0E  0020               	movlb	0	; select bank0
 13218  0F0F  00DA               	movwf	??_DimmerIntr_Initialization
 13219  0F10  086D               	movf	_product,w
 13220  0F11  3E16               	addlw	22
 13221  0F12  0086               	movwf	6
 13222  0F13  3002               	movlw	2	; select bank4/5
 13223  0F14  0087               	movwf	7
 13224  0F15  085A               	movf	??_DimmerIntr_Initialization,w
 13225  0F16  0081               	movwf	1
 13226                           
 13227                           ;Dimmer_B1.c: 64: DimmerIntr2.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[22]);
 13228  0F17  086D               	movf	_product,w
 13229  0F18  3E16               	addlw	22
 13230  0F19  0086               	movwf	6
 13231  0F1A  3002               	movlw	2	; select bank4/5
 13232  0F1B  0087               	movwf	7
 13233  0F1C  0801               	movf	1,w
 13234  0F1D  3189  21CD  318E   	fcall	_getDimmerLights_PercentToValue
 13235  0F20  0020               	movlb	0	; select bank0
 13236  0F21  00DA               	movwf	??_DimmerIntr_Initialization
 13237  0F22  085A               	movf	??_DimmerIntr_Initialization,w
 13238  0F23  0021               	movlb	1	; select bank1
 13239  0F24  00B5               	movwf	(_DimmerIntr2^(0+128)+5)
 13240                           
 13241                           ;Dimmer_B1.c: 79: DimmerIntr2.TuneValue2 = Division(((char)(77*0.55)), 2);
 13242  0F25  3002               	movlw	2
 13243  0F26  0020               	movlb	0	; select bank0
 13244  0F27  00DA               	movwf	??_DimmerIntr_Initialization
 13245  0F28  085A               	movf	??_DimmerIntr_Initialization,w
 13246  0F29  00F7               	movwf	Division@num
 13247  0F2A  302A               	movlw	42
 13248  0F2B  3190  2001  318E   	fcall	_Division
 13249  0F2E  0020               	movlb	0	; select bank0
 13250  0F2F  00DB               	movwf	??_DimmerIntr_Initialization+1
 13251  0F30  085B               	movf	??_DimmerIntr_Initialization+1,w
 13252  0F31  0021               	movlb	1	; select bank1
 13253  0F32  00B8               	movwf	(_DimmerIntr2^(0+128)+8)
 13254                           
 13255                           ;Dimmer_B1.c: 80: DimmerIntr2.TuneValue3 = DimmerIntr2.TuneValue2 + (55 - ((char)(77*0.5
      +                          5)));
 13256  0F33  0838               	movf	(_DimmerIntr2^(0+128)+8),w
 13257  0F34  3E0D               	addlw	13
 13258  0F35  0020               	movlb	0	; select bank0
 13259  0F36  00DA               	movwf	??_DimmerIntr_Initialization
 13260  0F37  085A               	movf	??_DimmerIntr_Initialization,w
 13261  0F38  0021               	movlb	1	; select bank1
 13262  0F39  00B9               	movwf	(_DimmerIntr2^(0+128)+9)
 13263                           
 13264                           ;Dimmer_B1.c: 81: DimmerIntr2.TuneValue4 = DimmerIntr2.TuneValue3 + DimmerIntr2.TuneValu
      +                          e2;
 13265  0F3A  0839               	movf	(_DimmerIntr2^(0+128)+9),w
 13266  0F3B  0738               	addwf	(_DimmerIntr2^(0+128)+8),w
 13267  0F3C  0020               	movlb	0	; select bank0
 13268  0F3D  00DA               	movwf	??_DimmerIntr_Initialization
 13269  0F3E  085A               	movf	??_DimmerIntr_Initialization,w
 13270  0F3F  0021               	movlb	1	; select bank1
 13271  0F40  00BA               	movwf	(_DimmerIntr2^(0+128)+10)
 13272                           
 13273                           ;Dimmer_B1.c: 82: DimmerIntr2.TuneEnd = DimmerIntr2.TuneValue4 + 1;
 13274  0F41  083A               	movf	(_DimmerIntr2^(0+128)+10),w
 13275  0F42  3E01               	addlw	1
 13276  0F43  0020               	movlb	0	; select bank0
 13277  0F44  00DA               	movwf	??_DimmerIntr_Initialization
 13278  0F45  085A               	movf	??_DimmerIntr_Initialization,w
 13279  0F46  0021               	movlb	1	; select bank1
 13280  0F47  00BB               	movwf	(_DimmerIntr2^(0+128)+11)
 13281                           
 13282                           ;Dimmer_B1.c: 83: DimmerIntr2.Calculate = 1;
 13283  0F48  17B1               	bsf	(_DimmerIntr2^(0+128)+1),7
 13284                           
 13285                           ;Dimmer_B1.c: 113: if (myMain.InitDimmer == 1) {
 13286  0F49  1E4A               	btfss	(_myMain^(0+128)+10),4
 13287  0F4A  0008               	return
 13288                           
 13289                           ;Dimmer_B1.c: 114: myMain.InitDimmer = 0;
 13290  0F4B  124A               	bcf	(_myMain^(0+128)+10),4
 13291                           
 13292                           ;Dimmer_B1.c: 115: myMain.SaveDimmer = 1;
 13293  0F4C  16CA               	bsf	(_myMain^(0+128)+10),5
 13294                           
 13295                           ;Dimmer_B1.c: 116: setMemory_Modify(1);
 13296  0F4D  3001               	movlw	1
 13297  0F4E  3190  206A         	fcall	_setMemory_Modify
 13298  0F50  0008               	return
 13299  0F51                     __end_of_DimmerIntr_Initialization:	
 13300                           
 13301                           	psect	text84
 13302  106A                     __ptext84:	
 13303 ;; *************** function _setMemory_Modify *****************
 13304 ;; Defined at:
 13305 ;;		line 1088 in file "../src/MCU_B1.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  command         1    wreg     unsigned char 
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;  command         1    3[COMMON] unsigned char 
 13310 ;; Return value:  Size  Location     Type
 13311 ;;		None               void
 13312 ;; Registers used:
 13313 ;;		wreg, status,2, status,0
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/0
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;Total ram usage:        2 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; Hardware stack levels required when called:    3
 13326 ;; This function calls:
 13327 ;;		Nothing
 13328 ;; This function is called by:
 13329 ;;		_DimmerIntr_Initialization
 13330 ;;		_DimmerLights_AssignationDimming
 13331 ;;		_setDimmerLights_Dimming
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           
 13336                           ;psect for function _setMemory_Modify
 13337  106A                     _setMemory_Modify:	
 13338                           
 13339                           ;incstack = 0
 13340                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 13341                           ;setMemory_Modify@command stored from wreg
 13342  106A  00F3               	movwf	setMemory_Modify@command
 13343                           
 13344                           ;MCU_B1.c: 1089: Memory.Modify = command == 1 ? 1 : 0;
 13345  106B  0873               	movf	setMemory_Modify@command,w
 13346  106C  3A01               	xorlw	1
 13347  106D  3000               	movlw	0
 13348  106E  1903               	skipnz
 13349  106F  3001               	movlw	1
 13350  1070  00F2               	movwf	??_setMemory_Modify
 13351  1071  0023               	movlb	3	; select bank3
 13352  1072  0854               	movf	(_Memory^(0+384)+36),w
 13353  1073  0672               	xorwf	??_setMemory_Modify,w
 13354  1074  39FE               	andlw	-2
 13355  1075  0672               	xorwf	??_setMemory_Modify,w
 13356  1076  00D4               	movwf	(_Memory^(0+384)+36)
 13357                           
 13358                           ;MCU_B1.c: 1090: Memory.Time = 0;
 13359  1077  01D2               	clrf	(_Memory^(0+384)+34)
 13360  1078  01D3               	clrf	((_Memory+1)^(0+384)+34)
 13361  1079  0008               	return
 13362  107A                     __end_of_setMemory_Modify:	
 13363                           
 13364                           	psect	text85
 13365  0A32                     __ptext85:	
 13366 ;; *************** function _getDimmerLights_ValueToPercent *****************
 13367 ;; Defined at:
 13368 ;;		line 1317 in file "../src/Dimmer_B1.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;  value           1    wreg     unsigned char 
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;  value           1   54[BANK0 ] unsigned char 
 13373 ;;  i               3   55[BANK0 ] float 
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1    wreg      unsigned char 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2, status,0, pclath, cstack
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13384 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13386 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13387 ;;Total ram usage:        6 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:    5
 13390 ;; This function calls:
 13391 ;;		___awtoft
 13392 ;;		___ftadd
 13393 ;;		___ftdiv
 13394 ;;		___ftneg
 13395 ;;		___fttol
 13396 ;; This function is called by:
 13397 ;;		_DimmerIntr_Initialization
 13398 ;;		_setDimmerLights_Dimming
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           
 13403                           ;psect for function _getDimmerLights_ValueToPercent
 13404  0A32                     _getDimmerLights_ValueToPercent:	
 13405                           
 13406                           ;incstack = 0
 13407                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 13408                           ;getDimmerLights_ValueToPercent@value stored from wreg
 13409  0A32  0020               	movlb	0	; select bank0
 13410  0A33  00D6               	movwf	getDimmerLights_ValueToPercent@value
 13411                           
 13412                           ;Dimmer_B1.c: 1325: float i = ((char)(77*0.55)) - ((char)(5*0.55));
 13413  0A34  3000               	movlw	0
 13414  0A35  00D7               	movwf	getDimmerLights_ValueToPercent@i
 13415  0A36  3020               	movlw	32
 13416  0A37  00D8               	movwf	getDimmerLights_ValueToPercent@i+1
 13417  0A38  3042               	movlw	66
 13418  0A39  00D9               	movwf	getDimmerLights_ValueToPercent@i+2
 13419                           
 13420                           ;Dimmer_B1.c: 1326: i /= 100;
 13421  0A3A  3000               	movlw	0
 13422  0A3B  00A6               	movwf	___ftdiv@f2
 13423  0A3C  30C8               	movlw	200
 13424  0A3D  00A7               	movwf	___ftdiv@f2+1
 13425  0A3E  3042               	movlw	66
 13426  0A3F  00A8               	movwf	___ftdiv@f2+2
 13427  0A40  0857               	movf	getDimmerLights_ValueToPercent@i,w
 13428  0A41  00A9               	movwf	___ftdiv@f1
 13429  0A42  0858               	movf	getDimmerLights_ValueToPercent@i+1,w
 13430  0A43  00AA               	movwf	___ftdiv@f1+1
 13431  0A44  0859               	movf	getDimmerLights_ValueToPercent@i+2,w
 13432  0A45  00AB               	movwf	___ftdiv@f1+2
 13433  0A46  318D  25FC  318A   	fcall	___ftdiv
 13434  0A49  0020               	movlb	0	; select bank0
 13435  0A4A  0826               	movf	?___ftdiv,w
 13436  0A4B  00D7               	movwf	getDimmerLights_ValueToPercent@i
 13437  0A4C  0827               	movf	?___ftdiv+1,w
 13438  0A4D  00D8               	movwf	getDimmerLights_ValueToPercent@i+1
 13439  0A4E  0828               	movf	?___ftdiv+2,w
 13440  0A4F  00D9               	movwf	getDimmerLights_ValueToPercent@i+2
 13441                           
 13442                           ;Dimmer_B1.c: 1328: return (char) (100 - ((((char)(77*0.55)) - value) / i));
 13443  0A50  0856               	movf	getDimmerLights_ValueToPercent@value,w
 13444  0A51  00D4               	movwf	??_getDimmerLights_ValueToPercent
 13445  0A52  01D5               	clrf	??_getDimmerLights_ValueToPercent+1
 13446  0A53  09D4               	comf	??_getDimmerLights_ValueToPercent,f
 13447  0A54  09D5               	comf	??_getDimmerLights_ValueToPercent+1,f
 13448  0A55  0AD4               	incf	??_getDimmerLights_ValueToPercent,f
 13449  0A56  1903               	skipnz
 13450  0A57  0AD5               	incf	??_getDimmerLights_ValueToPercent+1,f
 13451  0A58  0854               	movf	??_getDimmerLights_ValueToPercent,w
 13452  0A59  3E2A               	addlw	42
 13453  0A5A  00A0               	movwf	___awtoft@c
 13454  0A5B  3000               	movlw	0
 13455  0A5C  3D55               	addwfc	??_getDimmerLights_ValueToPercent+1,w
 13456  0A5D  00A1               	movwf	___awtoft@c+1
 13457  0A5E  3192  22D5  318A   	fcall	___awtoft
 13458  0A61  0020               	movlb	0	; select bank0
 13459  0A62  0820               	movf	?___awtoft,w
 13460  0A63  00A9               	movwf	___ftdiv@f1
 13461  0A64  0821               	movf	?___awtoft+1,w
 13462  0A65  00AA               	movwf	___ftdiv@f1+1
 13463  0A66  0822               	movf	?___awtoft+2,w
 13464  0A67  00AB               	movwf	___ftdiv@f1+2
 13465  0A68  0857               	movf	getDimmerLights_ValueToPercent@i,w
 13466  0A69  00A6               	movwf	___ftdiv@f2
 13467  0A6A  0858               	movf	getDimmerLights_ValueToPercent@i+1,w
 13468  0A6B  00A7               	movwf	___ftdiv@f2+1
 13469  0A6C  0859               	movf	getDimmerLights_ValueToPercent@i+2,w
 13470  0A6D  00A8               	movwf	___ftdiv@f2+2
 13471  0A6E  318D  25FC  318A   	fcall	___ftdiv
 13472  0A71  0020               	movlb	0	; select bank0
 13473  0A72  0826               	movf	?___ftdiv,w
 13474  0A73  00B6               	movwf	___ftneg@f1
 13475  0A74  0827               	movf	?___ftdiv+1,w
 13476  0A75  00B7               	movwf	___ftneg@f1+1
 13477  0A76  0828               	movf	?___ftdiv+2,w
 13478  0A77  00B8               	movwf	___ftneg@f1+2
 13479  0A78  319F  274A  318A   	fcall	___ftneg
 13480  0A7B  0020               	movlb	0	; select bank0
 13481  0A7C  0836               	movf	?___ftneg,w
 13482  0A7D  00BC               	movwf	___ftadd@f2
 13483  0A7E  0837               	movf	?___ftneg+1,w
 13484  0A7F  00BD               	movwf	___ftadd@f2+1
 13485  0A80  0838               	movf	?___ftneg+2,w
 13486  0A81  00BE               	movwf	___ftadd@f2+2
 13487  0A82  3000               	movlw	0
 13488  0A83  00B9               	movwf	___ftadd@f1
 13489  0A84  30C8               	movlw	200
 13490  0A85  00BA               	movwf	___ftadd@f1+1
 13491  0A86  3042               	movlw	66
 13492  0A87  00BB               	movwf	___ftadd@f1+2
 13493  0A88  3183  2346  318A   	fcall	___ftadd
 13494  0A8B  0020               	movlb	0	; select bank0
 13495  0A8C  0839               	movf	?___ftadd,w
 13496  0A8D  00C6               	movwf	___fttol@f1
 13497  0A8E  083A               	movf	?___ftadd+1,w
 13498  0A8F  00C7               	movwf	___fttol@f1+1
 13499  0A90  083B               	movf	?___ftadd+2,w
 13500  0A91  00C8               	movwf	___fttol@f1+2
 13501  0A92  318C  24CD         	fcall	___fttol
 13502  0A94  0020               	movlb	0	; select bank0
 13503  0A95  0846               	movf	?___fttol,w
 13504  0A96  0008               	return
 13505  0A97                     __end_of_getDimmerLights_ValueToPercent:	
 13506                           
 13507                           	psect	text86
 13508  09CD                     __ptext86:	
 13509 ;; *************** function _getDimmerLights_PercentToValue *****************
 13510 ;; Defined at:
 13511 ;;		line 1301 in file "../src/Dimmer_B1.c"
 13512 ;; Parameters:    Size  Location     Type
 13513 ;;  value           1    wreg     unsigned char 
 13514 ;; Auto vars:     Size  Location     Type
 13515 ;;  value           1   54[BANK0 ] unsigned char 
 13516 ;;  i               3   55[BANK0 ] float 
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      unsigned char 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2, status,0, pclath, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;Total ram usage:        6 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    5
 13533 ;; This function calls:
 13534 ;;		___awtoft
 13535 ;;		___ftadd
 13536 ;;		___ftdiv
 13537 ;;		___ftmul
 13538 ;;		___ftneg
 13539 ;;		___fttol
 13540 ;; This function is called by:
 13541 ;;		_DimmerIntr_Initialization
 13542 ;;		_DimmerLights_AssignationDimming
 13543 ;;		_setDimmerLights_OnOff
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546                           
 13547                           
 13548                           ;psect for function _getDimmerLights_PercentToValue
 13549  09CD                     _getDimmerLights_PercentToValue:	
 13550                           
 13551                           ;incstack = 0
 13552                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 13553                           ;getDimmerLights_PercentToValue@value stored from wreg
 13554  09CD  0020               	movlb	0	; select bank0
 13555  09CE  00D6               	movwf	getDimmerLights_PercentToValue@value
 13556                           
 13557                           ;Dimmer_B1.c: 1309: float i = ((char)(77*0.55)) - ((char)(5*0.55));
 13558  09CF  3000               	movlw	0
 13559  09D0  00D7               	movwf	getDimmerLights_PercentToValue@i
 13560  09D1  3020               	movlw	32
 13561  09D2  00D8               	movwf	getDimmerLights_PercentToValue@i+1
 13562  09D3  3042               	movlw	66
 13563  09D4  00D9               	movwf	getDimmerLights_PercentToValue@i+2
 13564                           
 13565                           ;Dimmer_B1.c: 1310: i /= 100;
 13566  09D5  3000               	movlw	0
 13567  09D6  00A6               	movwf	___ftdiv@f2
 13568  09D7  30C8               	movlw	200
 13569  09D8  00A7               	movwf	___ftdiv@f2+1
 13570  09D9  3042               	movlw	66
 13571  09DA  00A8               	movwf	___ftdiv@f2+2
 13572  09DB  0857               	movf	getDimmerLights_PercentToValue@i,w
 13573  09DC  00A9               	movwf	___ftdiv@f1
 13574  09DD  0858               	movf	getDimmerLights_PercentToValue@i+1,w
 13575  09DE  00AA               	movwf	___ftdiv@f1+1
 13576  09DF  0859               	movf	getDimmerLights_PercentToValue@i+2,w
 13577  09E0  00AB               	movwf	___ftdiv@f1+2
 13578  09E1  318D  25FC  3189   	fcall	___ftdiv
 13579  09E4  0020               	movlb	0	; select bank0
 13580  09E5  0826               	movf	?___ftdiv,w
 13581  09E6  00D7               	movwf	getDimmerLights_PercentToValue@i
 13582  09E7  0827               	movf	?___ftdiv+1,w
 13583  09E8  00D8               	movwf	getDimmerLights_PercentToValue@i+1
 13584  09E9  0828               	movf	?___ftdiv+2,w
 13585  09EA  00D9               	movwf	getDimmerLights_PercentToValue@i+2
 13586                           
 13587                           ;Dimmer_B1.c: 1312: return (char) (((char)(77*0.55)) - ((100 - value) * i));
 13588  09EB  0856               	movf	getDimmerLights_PercentToValue@value,w
 13589  09EC  00D4               	movwf	??_getDimmerLights_PercentToValue
 13590  09ED  01D5               	clrf	??_getDimmerLights_PercentToValue+1
 13591  09EE  09D4               	comf	??_getDimmerLights_PercentToValue,f
 13592  09EF  09D5               	comf	??_getDimmerLights_PercentToValue+1,f
 13593  09F0  0AD4               	incf	??_getDimmerLights_PercentToValue,f
 13594  09F1  1903               	skipnz
 13595  09F2  0AD5               	incf	??_getDimmerLights_PercentToValue+1,f
 13596  09F3  0854               	movf	??_getDimmerLights_PercentToValue,w
 13597  09F4  3E64               	addlw	100
 13598  09F5  00A0               	movwf	___awtoft@c
 13599  09F6  3000               	movlw	0
 13600  09F7  3D55               	addwfc	??_getDimmerLights_PercentToValue+1,w
 13601  09F8  00A1               	movwf	___awtoft@c+1
 13602  09F9  3192  22D5  3189   	fcall	___awtoft
 13603  09FC  0020               	movlb	0	; select bank0
 13604  09FD  0820               	movf	?___awtoft,w
 13605  09FE  00A9               	movwf	___ftmul@f2
 13606  09FF  0821               	movf	?___awtoft+1,w
 13607  0A00  00AA               	movwf	___ftmul@f2+1
 13608  0A01  0822               	movf	?___awtoft+2,w
 13609  0A02  00AB               	movwf	___ftmul@f2+2
 13610  0A03  0857               	movf	getDimmerLights_PercentToValue@i,w
 13611  0A04  00A6               	movwf	___ftmul@f1
 13612  0A05  0858               	movf	getDimmerLights_PercentToValue@i+1,w
 13613  0A06  00A7               	movwf	___ftmul@f1+1
 13614  0A07  0859               	movf	getDimmerLights_PercentToValue@i+2,w
 13615  0A08  00A8               	movwf	___ftmul@f1+2
 13616  0A09  3186  26AA  3189   	fcall	___ftmul
 13617  0A0C  0020               	movlb	0	; select bank0
 13618  0A0D  0826               	movf	?___ftmul,w
 13619  0A0E  00B6               	movwf	___ftneg@f1
 13620  0A0F  0827               	movf	?___ftmul+1,w
 13621  0A10  00B7               	movwf	___ftneg@f1+1
 13622  0A11  0828               	movf	?___ftmul+2,w
 13623  0A12  00B8               	movwf	___ftneg@f1+2
 13624  0A13  319F  274A  3189   	fcall	___ftneg
 13625  0A16  0020               	movlb	0	; select bank0
 13626  0A17  0836               	movf	?___ftneg,w
 13627  0A18  00BC               	movwf	___ftadd@f2
 13628  0A19  0837               	movf	?___ftneg+1,w
 13629  0A1A  00BD               	movwf	___ftadd@f2+1
 13630  0A1B  0838               	movf	?___ftneg+2,w
 13631  0A1C  00BE               	movwf	___ftadd@f2+2
 13632  0A1D  3000               	movlw	0
 13633  0A1E  00B9               	movwf	___ftadd@f1
 13634  0A1F  3028               	movlw	40
 13635  0A20  00BA               	movwf	___ftadd@f1+1
 13636  0A21  3042               	movlw	66
 13637  0A22  00BB               	movwf	___ftadd@f1+2
 13638  0A23  3183  2346  3189   	fcall	___ftadd
 13639  0A26  0020               	movlb	0	; select bank0
 13640  0A27  0839               	movf	?___ftadd,w
 13641  0A28  00C6               	movwf	___fttol@f1
 13642  0A29  083A               	movf	?___ftadd+1,w
 13643  0A2A  00C7               	movwf	___fttol@f1+1
 13644  0A2B  083B               	movf	?___ftadd+2,w
 13645  0A2C  00C8               	movwf	___fttol@f1+2
 13646  0A2D  318C  24CD         	fcall	___fttol
 13647  0A2F  0020               	movlb	0	; select bank0
 13648  0A30  0846               	movf	?___fttol,w
 13649  0A31  0008               	return
 13650  0A32                     __end_of_getDimmerLights_PercentToValue:	
 13651                           
 13652                           	psect	text87
 13653  0CCD                     __ptext87:	
 13654 ;; *************** function ___fttol *****************
 13655 ;; Defined at:
 13656 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;  f1              3   38[BANK0 ] float 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;  lval            4   47[BANK0 ] unsigned long 
 13661 ;;  exp1            1   51[BANK0 ] unsigned char 
 13662 ;;  sign1           1   46[BANK0 ] unsigned char 
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  4   38[BANK0 ] long 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13673 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13674 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;Total ram usage:       14 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    3
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_getDimmerLights_PercentToValue
 13683 ;;		_getDimmerLights_ValueToPercent
 13684 ;; This function uses a non-reentrant model
 13685 ;;
 13686                           
 13687                           
 13688                           ;psect for function ___fttol
 13689  0CCD                     ___fttol:	
 13690                           
 13691                           ;incstack = 0
 13692                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 13693  0CCD  0020               	movlb	0	; select bank0
 13694  0CCE  0846               	movf	___fttol@f1,w
 13695  0CCF  00CA               	movwf	??___fttol
 13696  0CD0  0847               	movf	___fttol@f1+1,w
 13697  0CD1  00CB               	movwf	??___fttol+1
 13698  0CD2  0848               	movf	___fttol@f1+2,w
 13699  0CD3  00CC               	movwf	??___fttol+2
 13700  0CD4  1003               	clrc
 13701  0CD5  0D4B               	rlf	??___fttol+1,w
 13702  0CD6  0D4C               	rlf	??___fttol+2,w
 13703  0CD7  00CD               	movwf	??___fttol+3
 13704  0CD8  084D               	movf	??___fttol+3,w
 13705  0CD9  00D3               	movwf	___fttol@exp1
 13706  0CDA  08D3               	movf	___fttol@exp1,f
 13707  0CDB  1D03               	skipz
 13708  0CDC  2CE6               	goto	l5414
 13709  0CDD  3000               	movlw	0
 13710  0CDE  00C9               	movwf	?___fttol+3
 13711  0CDF  3000               	movlw	0
 13712  0CE0  00C8               	movwf	?___fttol+2
 13713  0CE1  3000               	movlw	0
 13714  0CE2  00C7               	movwf	?___fttol+1
 13715  0CE3  3000               	movlw	0
 13716  0CE4  00C6               	movwf	?___fttol
 13717  0CE5  0008               	return
 13718  0CE6                     l5414:	
 13719  0CE6  0846               	movf	___fttol@f1,w
 13720  0CE7  00CA               	movwf	??___fttol
 13721  0CE8  0847               	movf	___fttol@f1+1,w
 13722  0CE9  00CB               	movwf	??___fttol+1
 13723  0CEA  0848               	movf	___fttol@f1+2,w
 13724  0CEB  00CC               	movwf	??___fttol+2
 13725  0CEC  3017               	movlw	23
 13726  0CED                     u5225:	
 13727  0CED  36CC               	lsrf	??___fttol+2,f
 13728  0CEE  0CCB               	rrf	??___fttol+1,f
 13729  0CEF  0CCA               	rrf	??___fttol,f
 13730  0CF0  0B89               	decfsz	9,f
 13731  0CF1  2CED               	goto	u5225
 13732  0CF2  084A               	movf	??___fttol,w
 13733  0CF3  00CD               	movwf	??___fttol+3
 13734  0CF4  084D               	movf	??___fttol+3,w
 13735  0CF5  00CE               	movwf	___fttol@sign1
 13736  0CF6  17C7               	bsf	___fttol@f1+1,7
 13737  0CF7  30FF               	movlw	255
 13738  0CF8  05C6               	andwf	___fttol@f1,f
 13739  0CF9  30FF               	movlw	255
 13740  0CFA  05C7               	andwf	___fttol@f1+1,f
 13741  0CFB  3000               	movlw	0
 13742  0CFC  05C8               	andwf	___fttol@f1+2,f
 13743  0CFD  0846               	movf	___fttol@f1,w
 13744  0CFE  00CF               	movwf	___fttol@lval
 13745  0CFF  0847               	movf	___fttol@f1+1,w
 13746  0D00  00D0               	movwf	___fttol@lval+1
 13747  0D01  0848               	movf	___fttol@f1+2,w
 13748  0D02  00D1               	movwf	___fttol@lval+2
 13749  0D03  01D2               	clrf	___fttol@lval+3
 13750  0D04  308E               	movlw	142
 13751  0D05  02D3               	subwf	___fttol@exp1,f
 13752  0D06  1FD3               	btfss	___fttol@exp1,7
 13753  0D07  2D24               	goto	l5434
 13754  0D08  0853               	movf	___fttol@exp1,w
 13755  0D09  3A80               	xorlw	128
 13756  0D0A  3E8F               	addlw	143
 13757  0D0B  1803               	skipnc
 13758  0D0C  2D16               	goto	l5432
 13759  0D0D  3000               	movlw	0
 13760  0D0E  00C9               	movwf	?___fttol+3
 13761  0D0F  3000               	movlw	0
 13762  0D10  00C8               	movwf	?___fttol+2
 13763  0D11  3000               	movlw	0
 13764  0D12  00C7               	movwf	?___fttol+1
 13765  0D13  3000               	movlw	0
 13766  0D14  00C6               	movwf	?___fttol
 13767  0D15  0008               	return
 13768  0D16                     l5432:	
 13769  0D16  3001               	movlw	1
 13770  0D17                     u5255:	
 13771  0D17  36D2               	lsrf	___fttol@lval+3,f
 13772  0D18  0CD1               	rrf	___fttol@lval+2,f
 13773  0D19  0CD0               	rrf	___fttol@lval+1,f
 13774  0D1A  0CCF               	rrf	___fttol@lval,f
 13775  0D1B  0B89               	decfsz	9,f
 13776  0D1C  2D17               	goto	u5255
 13777  0D1D  3001               	movlw	1
 13778  0D1E  00CA               	movwf	??___fttol
 13779  0D1F  084A               	movf	??___fttol,w
 13780  0D20  07D3               	addwf	___fttol@exp1,f
 13781  0D21  1903               	btfsc	3,2
 13782  0D22  2D3D               	goto	l5444
 13783  0D23  2D16               	goto	l5432
 13784  0D24                     l5434:	
 13785  0D24  3018               	movlw	24
 13786  0D25  0253               	subwf	___fttol@exp1,w
 13787  0D26  1C03               	skipc
 13788  0D27  2D3A               	goto	l5442
 13789  0D28  3000               	movlw	0
 13790  0D29  00C9               	movwf	?___fttol+3
 13791  0D2A  3000               	movlw	0
 13792  0D2B  00C8               	movwf	?___fttol+2
 13793  0D2C  3000               	movlw	0
 13794  0D2D  00C7               	movwf	?___fttol+1
 13795  0D2E  3000               	movlw	0
 13796  0D2F  00C6               	movwf	?___fttol
 13797  0D30  0008               	return
 13798  0D31                     l5440:	
 13799  0D31  3001               	movlw	1
 13800  0D32                     u5285:	
 13801  0D32  35CF               	lslf	___fttol@lval,f
 13802  0D33  0DD0               	rlf	___fttol@lval+1,f
 13803  0D34  0DD1               	rlf	___fttol@lval+2,f
 13804  0D35  0DD2               	rlf	___fttol@lval+3,f
 13805  0D36  0B89               	decfsz	9,f
 13806  0D37  2D32               	goto	u5285
 13807  0D38  3001               	movlw	1
 13808  0D39  02D3               	subwf	___fttol@exp1,f
 13809  0D3A                     l5442:	
 13810  0D3A  08D3               	movf	___fttol@exp1,f
 13811  0D3B  1D03               	skipz
 13812  0D3C  2D31               	goto	l5440
 13813  0D3D                     l5444:	
 13814  0D3D  084E               	movf	___fttol@sign1,w
 13815  0D3E  1903               	btfsc	3,2
 13816  0D3F  2D4B               	goto	l5448
 13817  0D40  09CF               	comf	___fttol@lval,f
 13818  0D41  09D0               	comf	___fttol@lval+1,f
 13819  0D42  09D1               	comf	___fttol@lval+2,f
 13820  0D43  09D2               	comf	___fttol@lval+3,f
 13821  0D44  0ACF               	incf	___fttol@lval,f
 13822  0D45  1903               	skipnz
 13823  0D46  0AD0               	incf	___fttol@lval+1,f
 13824  0D47  1903               	skipnz
 13825  0D48  0AD1               	incf	___fttol@lval+2,f
 13826  0D49  1903               	skipnz
 13827  0D4A  0AD2               	incf	___fttol@lval+3,f
 13828  0D4B                     l5448:	
 13829  0D4B  0852               	movf	___fttol@lval+3,w
 13830  0D4C  00C9               	movwf	?___fttol+3
 13831  0D4D  0851               	movf	___fttol@lval+2,w
 13832  0D4E  00C8               	movwf	?___fttol+2
 13833  0D4F  0850               	movf	___fttol@lval+1,w
 13834  0D50  00C7               	movwf	?___fttol+1
 13835  0D51  084F               	movf	___fttol@lval,w
 13836  0D52  00C6               	movwf	?___fttol
 13837  0D53  0008               	return
 13838  0D54                     __end_of___fttol:	
 13839                           
 13840                           	psect	text88
 13841  1F4A                     __ptext88:	
 13842 ;; *************** function ___ftneg *****************
 13843 ;; Defined at:
 13844 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;  f1              3   22[BANK0 ] float 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;		None
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  3   22[BANK0 ] float 
 13851 ;; Registers used:
 13852 ;;		wreg
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13858 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;Total ram usage:        3 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:    3
 13865 ;; This function calls:
 13866 ;;		Nothing
 13867 ;; This function is called by:
 13868 ;;		_getDimmerLights_PercentToValue
 13869 ;;		_getDimmerLights_ValueToPercent
 13870 ;; This function uses a non-reentrant model
 13871 ;;
 13872                           
 13873                           
 13874                           ;psect for function ___ftneg
 13875  1F4A                     ___ftneg:	
 13876                           
 13877                           ;incstack = 0
 13878                           ; Regs used in ___ftneg: [wreg]
 13879  1F4A  0020               	movlb	0	; select bank0
 13880  1F4B  0838               	movf	___ftneg@f1+2,w
 13881  1F4C  0437               	iorwf	___ftneg@f1+1,w
 13882  1F4D  0436               	iorwf	___ftneg@f1,w
 13883  1F4E  1903               	skipnz
 13884  1F4F  0008               	return
 13885  1F50  3080               	movlw	128
 13886  1F51  06B8               	xorwf	___ftneg@f1+2,f
 13887  1F52  0008               	return
 13888  1F53                     __end_of___ftneg:	
 13889                           
 13890                           	psect	text89
 13891  06AA                     __ptext89:	
 13892 ;; *************** function ___ftmul *****************
 13893 ;; Defined at:
 13894 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  f1              3    6[BANK0 ] float 
 13897 ;;  f2              3    9[BANK0 ] float 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  f3_as_produc    3   17[BANK0 ] unsigned um
 13900 ;;  sign            1   21[BANK0 ] unsigned char 
 13901 ;;  cntr            1   20[BANK0 ] unsigned char 
 13902 ;;  exp             1   16[BANK0 ] unsigned char 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  3    6[BANK0 ] float 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0, pclath, cstack
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:       16 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    4
 13919 ;; This function calls:
 13920 ;;		___ftpack
 13921 ;; This function is called by:
 13922 ;;		_getDimmerLights_PercentToValue
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           
 13927                           ;psect for function ___ftmul
 13928  06AA                     ___ftmul:	
 13929                           
 13930                           ;incstack = 0
 13931                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 13932  06AA  0020               	movlb	0	; select bank0
 13933  06AB  0826               	movf	___ftmul@f1,w
 13934  06AC  00AC               	movwf	??___ftmul
 13935  06AD  0827               	movf	___ftmul@f1+1,w
 13936  06AE  00AD               	movwf	??___ftmul+1
 13937  06AF  0828               	movf	___ftmul@f1+2,w
 13938  06B0  00AE               	movwf	??___ftmul+2
 13939  06B1  1003               	clrc
 13940  06B2  0D2D               	rlf	??___ftmul+1,w
 13941  06B3  0D2E               	rlf	??___ftmul+2,w
 13942  06B4  00AF               	movwf	??___ftmul+3
 13943  06B5  082F               	movf	??___ftmul+3,w
 13944  06B6  00B0               	movwf	___ftmul@exp
 13945  06B7  08B0               	movf	___ftmul@exp,f
 13946  06B8  1D03               	skipz
 13947  06B9  2EC1               	goto	l5356
 13948  06BA  3000               	movlw	0
 13949  06BB  00A6               	movwf	?___ftmul
 13950  06BC  3000               	movlw	0
 13951  06BD  00A7               	movwf	?___ftmul+1
 13952  06BE  3000               	movlw	0
 13953  06BF  00A8               	movwf	?___ftmul+2
 13954  06C0  0008               	return
 13955  06C1                     l5356:	
 13956  06C1  0829               	movf	___ftmul@f2,w
 13957  06C2  00AC               	movwf	??___ftmul
 13958  06C3  082A               	movf	___ftmul@f2+1,w
 13959  06C4  00AD               	movwf	??___ftmul+1
 13960  06C5  082B               	movf	___ftmul@f2+2,w
 13961  06C6  00AE               	movwf	??___ftmul+2
 13962  06C7  1003               	clrc
 13963  06C8  0D2D               	rlf	??___ftmul+1,w
 13964  06C9  0D2E               	rlf	??___ftmul+2,w
 13965  06CA  00AF               	movwf	??___ftmul+3
 13966  06CB  082F               	movf	??___ftmul+3,w
 13967  06CC  00B5               	movwf	___ftmul@sign
 13968  06CD  08B5               	movf	___ftmul@sign,f
 13969  06CE  1D03               	skipz
 13970  06CF  2ED7               	goto	l5362
 13971  06D0  3000               	movlw	0
 13972  06D1  00A6               	movwf	?___ftmul
 13973  06D2  3000               	movlw	0
 13974  06D3  00A7               	movwf	?___ftmul+1
 13975  06D4  3000               	movlw	0
 13976  06D5  00A8               	movwf	?___ftmul+2
 13977  06D6  0008               	return
 13978  06D7                     l5362:	
 13979  06D7  0835               	movf	___ftmul@sign,w
 13980  06D8  3E7B               	addlw	123
 13981  06D9  00AC               	movwf	??___ftmul
 13982  06DA  082C               	movf	??___ftmul,w
 13983  06DB  07B0               	addwf	___ftmul@exp,f
 13984  06DC  0826               	movf	___ftmul@f1,w
 13985  06DD  00AC               	movwf	??___ftmul
 13986  06DE  0827               	movf	___ftmul@f1+1,w
 13987  06DF  00AD               	movwf	??___ftmul+1
 13988  06E0  0828               	movf	___ftmul@f1+2,w
 13989  06E1  00AE               	movwf	??___ftmul+2
 13990  06E2  3010               	movlw	16
 13991  06E3                     u5105:	
 13992  06E3  36AE               	lsrf	??___ftmul+2,f
 13993  06E4  0CAD               	rrf	??___ftmul+1,f
 13994  06E5  0CAC               	rrf	??___ftmul,f
 13995  06E6  0B89               	decfsz	9,f
 13996  06E7  2EE3               	goto	u5105
 13997  06E8  082C               	movf	??___ftmul,w
 13998  06E9  00AF               	movwf	??___ftmul+3
 13999  06EA  082F               	movf	??___ftmul+3,w
 14000  06EB  00B5               	movwf	___ftmul@sign
 14001  06EC  0829               	movf	___ftmul@f2,w
 14002  06ED  00AC               	movwf	??___ftmul
 14003  06EE  082A               	movf	___ftmul@f2+1,w
 14004  06EF  00AD               	movwf	??___ftmul+1
 14005  06F0  082B               	movf	___ftmul@f2+2,w
 14006  06F1  00AE               	movwf	??___ftmul+2
 14007  06F2  3010               	movlw	16
 14008  06F3                     u5115:	
 14009  06F3  36AE               	lsrf	??___ftmul+2,f
 14010  06F4  0CAD               	rrf	??___ftmul+1,f
 14011  06F5  0CAC               	rrf	??___ftmul,f
 14012  06F6  0B89               	decfsz	9,f
 14013  06F7  2EF3               	goto	u5115
 14014  06F8  082C               	movf	??___ftmul,w
 14015  06F9  00AF               	movwf	??___ftmul+3
 14016  06FA  082F               	movf	??___ftmul+3,w
 14017  06FB  06B5               	xorwf	___ftmul@sign,f
 14018  06FC  3080               	movlw	128
 14019  06FD  00AC               	movwf	??___ftmul
 14020  06FE  082C               	movf	??___ftmul,w
 14021  06FF  05B5               	andwf	___ftmul@sign,f
 14022  0700  17A7               	bsf	___ftmul@f1+1,7
 14023  0701  17AA               	bsf	___ftmul@f2+1,7
 14024  0702  30FF               	movlw	255
 14025  0703  05A9               	andwf	___ftmul@f2,f
 14026  0704  30FF               	movlw	255
 14027  0705  05AA               	andwf	___ftmul@f2+1,f
 14028  0706  3000               	movlw	0
 14029  0707  05AB               	andwf	___ftmul@f2+2,f
 14030  0708  3000               	movlw	0
 14031  0709  00B1               	movwf	___ftmul@f3_as_product
 14032  070A  3000               	movlw	0
 14033  070B  00B2               	movwf	___ftmul@f3_as_product+1
 14034  070C  3000               	movlw	0
 14035  070D  00B3               	movwf	___ftmul@f3_as_product+2
 14036  070E  3007               	movlw	7
 14037  070F  00AC               	movwf	??___ftmul
 14038  0710  082C               	movf	??___ftmul,w
 14039  0711  00B4               	movwf	___ftmul@cntr
 14040  0712                     l5374:	
 14041  0712  1C26               	btfss	___ftmul@f1,0
 14042  0713  2F1A               	goto	l5378
 14043  0714  0829               	movf	___ftmul@f2,w
 14044  0715  07B1               	addwf	___ftmul@f3_as_product,f
 14045  0716  082A               	movf	___ftmul@f2+1,w
 14046  0717  3DB2               	addwfc	___ftmul@f3_as_product+1,f
 14047  0718  082B               	movf	___ftmul@f2+2,w
 14048  0719  3DB3               	addwfc	___ftmul@f3_as_product+2,f
 14049  071A                     l5378:	
 14050  071A  3001               	movlw	1
 14051  071B                     u5135:	
 14052  071B  36A8               	lsrf	___ftmul@f1+2,f
 14053  071C  0CA7               	rrf	___ftmul@f1+1,f
 14054  071D  0CA6               	rrf	___ftmul@f1,f
 14055  071E  0B89               	decfsz	9,f
 14056  071F  2F1B               	goto	u5135
 14057  0720  3001               	movlw	1
 14058  0721                     u5145:	
 14059  0721  35A9               	lslf	___ftmul@f2,f
 14060  0722  0DAA               	rlf	___ftmul@f2+1,f
 14061  0723  0DAB               	rlf	___ftmul@f2+2,f
 14062  0724  0B89               	decfsz	9,f
 14063  0725  2F21               	goto	u5145
 14064  0726  3001               	movlw	1
 14065  0727  02B4               	subwf	___ftmul@cntr,f
 14066  0728  1D03               	btfss	3,2
 14067  0729  2F12               	goto	l5374
 14068  072A  3009               	movlw	9
 14069  072B  00AC               	movwf	??___ftmul
 14070  072C  082C               	movf	??___ftmul,w
 14071  072D  00B4               	movwf	___ftmul@cntr
 14072  072E                     l5386:	
 14073  072E  1C26               	btfss	___ftmul@f1,0
 14074  072F  2F36               	goto	l5390
 14075  0730  0829               	movf	___ftmul@f2,w
 14076  0731  07B1               	addwf	___ftmul@f3_as_product,f
 14077  0732  082A               	movf	___ftmul@f2+1,w
 14078  0733  3DB2               	addwfc	___ftmul@f3_as_product+1,f
 14079  0734  082B               	movf	___ftmul@f2+2,w
 14080  0735  3DB3               	addwfc	___ftmul@f3_as_product+2,f
 14081  0736                     l5390:	
 14082  0736  3001               	movlw	1
 14083  0737                     u5175:	
 14084  0737  36A8               	lsrf	___ftmul@f1+2,f
 14085  0738  0CA7               	rrf	___ftmul@f1+1,f
 14086  0739  0CA6               	rrf	___ftmul@f1,f
 14087  073A  0B89               	decfsz	9,f
 14088  073B  2F37               	goto	u5175
 14089  073C  3001               	movlw	1
 14090  073D                     u5185:	
 14091  073D  36B3               	lsrf	___ftmul@f3_as_product+2,f
 14092  073E  0CB2               	rrf	___ftmul@f3_as_product+1,f
 14093  073F  0CB1               	rrf	___ftmul@f3_as_product,f
 14094  0740  0B89               	decfsz	9,f
 14095  0741  2F3D               	goto	u5185
 14096  0742  3001               	movlw	1
 14097  0743  02B4               	subwf	___ftmul@cntr,f
 14098  0744  1D03               	btfss	3,2
 14099  0745  2F2E               	goto	l5386
 14100  0746  0831               	movf	___ftmul@f3_as_product,w
 14101  0747  00F2               	movwf	___ftpack@arg
 14102  0748  0832               	movf	___ftmul@f3_as_product+1,w
 14103  0749  00F3               	movwf	___ftpack@arg+1
 14104  074A  0833               	movf	___ftmul@f3_as_product+2,w
 14105  074B  00F4               	movwf	___ftpack@arg+2
 14106  074C  0830               	movf	___ftmul@exp,w
 14107  074D  00AC               	movwf	??___ftmul
 14108  074E  082C               	movf	??___ftmul,w
 14109  074F  00F5               	movwf	___ftpack@exp
 14110  0750  0835               	movf	___ftmul@sign,w
 14111  0751  00AD               	movwf	??___ftmul+1
 14112  0752  082D               	movf	??___ftmul+1,w
 14113  0753  00F6               	movwf	___ftpack@sign
 14114  0754  3189  2109         	fcall	___ftpack
 14115  0756  0872               	movf	?___ftpack,w
 14116  0757  0020               	movlb	0	; select bank0
 14117  0758  00A6               	movwf	?___ftmul
 14118  0759  0873               	movf	?___ftpack+1,w
 14119  075A  00A7               	movwf	?___ftmul+1
 14120  075B  0874               	movf	?___ftpack+2,w
 14121  075C  00A8               	movwf	?___ftmul+2
 14122  075D  0008               	return
 14123  075E                     __end_of___ftmul:	
 14124                           
 14125                           	psect	text90
 14126  0DFC                     __ptext90:	
 14127 ;; *************** function ___ftdiv *****************
 14128 ;; Defined at:
 14129 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  f2              3    6[BANK0 ] float 
 14132 ;;  f1              3    9[BANK0 ] float 
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;  f3              3   17[BANK0 ] float 
 14135 ;;  sign            1   21[BANK0 ] unsigned char 
 14136 ;;  exp             1   20[BANK0 ] unsigned char 
 14137 ;;  cntr            1   16[BANK0 ] unsigned char 
 14138 ;; Return value:  Size  Location     Type
 14139 ;;                  3    6[BANK0 ] float 
 14140 ;; Registers used:
 14141 ;;		wreg, status,2, status,0, pclath, cstack
 14142 ;; Tracked objects:
 14143 ;;		On entry : 0/0
 14144 ;;		On exit  : 0/0
 14145 ;;		Unchanged: 0/0
 14146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14147 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14148 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;Total ram usage:       16 bytes
 14152 ;; Hardware stack levels used:    1
 14153 ;; Hardware stack levels required when called:    4
 14154 ;; This function calls:
 14155 ;;		___ftpack
 14156 ;; This function is called by:
 14157 ;;		_getDimmerLights_PercentToValue
 14158 ;;		_getDimmerLights_ValueToPercent
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           
 14163                           ;psect for function ___ftdiv
 14164  0DFC                     ___ftdiv:	
 14165                           
 14166                           ;incstack = 0
 14167                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 14168  0DFC  0020               	movlb	0	; select bank0
 14169  0DFD  0829               	movf	___ftdiv@f1,w
 14170  0DFE  00AC               	movwf	??___ftdiv
 14171  0DFF  082A               	movf	___ftdiv@f1+1,w
 14172  0E00  00AD               	movwf	??___ftdiv+1
 14173  0E01  082B               	movf	___ftdiv@f1+2,w
 14174  0E02  00AE               	movwf	??___ftdiv+2
 14175  0E03  1003               	clrc
 14176  0E04  0D2D               	rlf	??___ftdiv+1,w
 14177  0E05  0D2E               	rlf	??___ftdiv+2,w
 14178  0E06  00AF               	movwf	??___ftdiv+3
 14179  0E07  082F               	movf	??___ftdiv+3,w
 14180  0E08  00B4               	movwf	___ftdiv@exp
 14181  0E09  08B4               	movf	___ftdiv@exp,f
 14182  0E0A  1D03               	skipz
 14183  0E0B  2E13               	goto	l5314
 14184  0E0C  3000               	movlw	0
 14185  0E0D  00A6               	movwf	?___ftdiv
 14186  0E0E  3000               	movlw	0
 14187  0E0F  00A7               	movwf	?___ftdiv+1
 14188  0E10  3000               	movlw	0
 14189  0E11  00A8               	movwf	?___ftdiv+2
 14190  0E12  0008               	return
 14191  0E13                     l5314:	
 14192  0E13  0826               	movf	___ftdiv@f2,w
 14193  0E14  00AC               	movwf	??___ftdiv
 14194  0E15  0827               	movf	___ftdiv@f2+1,w
 14195  0E16  00AD               	movwf	??___ftdiv+1
 14196  0E17  0828               	movf	___ftdiv@f2+2,w
 14197  0E18  00AE               	movwf	??___ftdiv+2
 14198  0E19  1003               	clrc
 14199  0E1A  0D2D               	rlf	??___ftdiv+1,w
 14200  0E1B  0D2E               	rlf	??___ftdiv+2,w
 14201  0E1C  00AF               	movwf	??___ftdiv+3
 14202  0E1D  082F               	movf	??___ftdiv+3,w
 14203  0E1E  00B5               	movwf	___ftdiv@sign
 14204  0E1F  08B5               	movf	___ftdiv@sign,f
 14205  0E20  1D03               	skipz
 14206  0E21  2E29               	goto	l5320
 14207  0E22  3000               	movlw	0
 14208  0E23  00A6               	movwf	?___ftdiv
 14209  0E24  3000               	movlw	0
 14210  0E25  00A7               	movwf	?___ftdiv+1
 14211  0E26  3000               	movlw	0
 14212  0E27  00A8               	movwf	?___ftdiv+2
 14213  0E28  0008               	return
 14214  0E29                     l5320:	
 14215  0E29  3000               	movlw	0
 14216  0E2A  00B1               	movwf	___ftdiv@f3
 14217  0E2B  3000               	movlw	0
 14218  0E2C  00B2               	movwf	___ftdiv@f3+1
 14219  0E2D  3000               	movlw	0
 14220  0E2E  00B3               	movwf	___ftdiv@f3+2
 14221  0E2F  3089               	movlw	137
 14222  0E30  0735               	addwf	___ftdiv@sign,w
 14223  0E31  00AC               	movwf	??___ftdiv
 14224  0E32  082C               	movf	??___ftdiv,w
 14225  0E33  02B4               	subwf	___ftdiv@exp,f
 14226  0E34  0829               	movf	___ftdiv@f1,w
 14227  0E35  00AC               	movwf	??___ftdiv
 14228  0E36  082A               	movf	___ftdiv@f1+1,w
 14229  0E37  00AD               	movwf	??___ftdiv+1
 14230  0E38  082B               	movf	___ftdiv@f1+2,w
 14231  0E39  00AE               	movwf	??___ftdiv+2
 14232  0E3A  3010               	movlw	16
 14233  0E3B                     u5025:	
 14234  0E3B  36AE               	lsrf	??___ftdiv+2,f
 14235  0E3C  0CAD               	rrf	??___ftdiv+1,f
 14236  0E3D  0CAC               	rrf	??___ftdiv,f
 14237  0E3E  0B89               	decfsz	9,f
 14238  0E3F  2E3B               	goto	u5025
 14239  0E40  082C               	movf	??___ftdiv,w
 14240  0E41  00AF               	movwf	??___ftdiv+3
 14241  0E42  082F               	movf	??___ftdiv+3,w
 14242  0E43  00B5               	movwf	___ftdiv@sign
 14243  0E44  0826               	movf	___ftdiv@f2,w
 14244  0E45  00AC               	movwf	??___ftdiv
 14245  0E46  0827               	movf	___ftdiv@f2+1,w
 14246  0E47  00AD               	movwf	??___ftdiv+1
 14247  0E48  0828               	movf	___ftdiv@f2+2,w
 14248  0E49  00AE               	movwf	??___ftdiv+2
 14249  0E4A  3010               	movlw	16
 14250  0E4B                     u5035:	
 14251  0E4B  36AE               	lsrf	??___ftdiv+2,f
 14252  0E4C  0CAD               	rrf	??___ftdiv+1,f
 14253  0E4D  0CAC               	rrf	??___ftdiv,f
 14254  0E4E  0B89               	decfsz	9,f
 14255  0E4F  2E4B               	goto	u5035
 14256  0E50  082C               	movf	??___ftdiv,w
 14257  0E51  00AF               	movwf	??___ftdiv+3
 14258  0E52  082F               	movf	??___ftdiv+3,w
 14259  0E53  06B5               	xorwf	___ftdiv@sign,f
 14260  0E54  3080               	movlw	128
 14261  0E55  00AC               	movwf	??___ftdiv
 14262  0E56  082C               	movf	??___ftdiv,w
 14263  0E57  05B5               	andwf	___ftdiv@sign,f
 14264  0E58  17AA               	bsf	___ftdiv@f1+1,7
 14265  0E59  30FF               	movlw	255
 14266  0E5A  05A9               	andwf	___ftdiv@f1,f
 14267  0E5B  30FF               	movlw	255
 14268  0E5C  05AA               	andwf	___ftdiv@f1+1,f
 14269  0E5D  3000               	movlw	0
 14270  0E5E  05AB               	andwf	___ftdiv@f1+2,f
 14271  0E5F  17A7               	bsf	___ftdiv@f2+1,7
 14272  0E60  30FF               	movlw	255
 14273  0E61  05A6               	andwf	___ftdiv@f2,f
 14274  0E62  30FF               	movlw	255
 14275  0E63  05A7               	andwf	___ftdiv@f2+1,f
 14276  0E64  3000               	movlw	0
 14277  0E65  05A8               	andwf	___ftdiv@f2+2,f
 14278  0E66  3018               	movlw	24
 14279  0E67  00AC               	movwf	??___ftdiv
 14280  0E68  082C               	movf	??___ftdiv,w
 14281  0E69  00B0               	movwf	___ftdiv@cntr
 14282  0E6A                     l5334:	
 14283  0E6A  3001               	movlw	1
 14284  0E6B                     u5045:	
 14285  0E6B  35B1               	lslf	___ftdiv@f3,f
 14286  0E6C  0DB2               	rlf	___ftdiv@f3+1,f
 14287  0E6D  0DB3               	rlf	___ftdiv@f3+2,f
 14288  0E6E  0B89               	decfsz	9,f
 14289  0E6F  2E6B               	goto	u5045
 14290  0E70  0828               	movf	___ftdiv@f2+2,w
 14291  0E71  022B               	subwf	___ftdiv@f1+2,w
 14292  0E72  1D03               	skipz
 14293  0E73  2E7A               	goto	u5055
 14294  0E74  0827               	movf	___ftdiv@f2+1,w
 14295  0E75  022A               	subwf	___ftdiv@f1+1,w
 14296  0E76  1D03               	skipz
 14297  0E77  2E7A               	goto	u5055
 14298  0E78  0826               	movf	___ftdiv@f2,w
 14299  0E79  0229               	subwf	___ftdiv@f1,w
 14300  0E7A                     u5055:	
 14301  0E7A  1C03               	skipc
 14302  0E7B  2E83               	goto	l5342
 14303  0E7C  0826               	movf	___ftdiv@f2,w
 14304  0E7D  02A9               	subwf	___ftdiv@f1,f
 14305  0E7E  0827               	movf	___ftdiv@f2+1,w
 14306  0E7F  3BAA               	subwfb	___ftdiv@f1+1,f
 14307  0E80  0828               	movf	___ftdiv@f2+2,w
 14308  0E81  3BAB               	subwfb	___ftdiv@f1+2,f
 14309  0E82  1431               	bsf	___ftdiv@f3,0
 14310  0E83                     l5342:	
 14311  0E83  3001               	movlw	1
 14312  0E84                     u5065:	
 14313  0E84  35A9               	lslf	___ftdiv@f1,f
 14314  0E85  0DAA               	rlf	___ftdiv@f1+1,f
 14315  0E86  0DAB               	rlf	___ftdiv@f1+2,f
 14316  0E87  0B89               	decfsz	9,f
 14317  0E88  2E84               	goto	u5065
 14318  0E89  3001               	movlw	1
 14319  0E8A  02B0               	subwf	___ftdiv@cntr,f
 14320  0E8B  1D03               	btfss	3,2
 14321  0E8C  2E6A               	goto	l5334
 14322  0E8D  0831               	movf	___ftdiv@f3,w
 14323  0E8E  00F2               	movwf	___ftpack@arg
 14324  0E8F  0832               	movf	___ftdiv@f3+1,w
 14325  0E90  00F3               	movwf	___ftpack@arg+1
 14326  0E91  0833               	movf	___ftdiv@f3+2,w
 14327  0E92  00F4               	movwf	___ftpack@arg+2
 14328  0E93  0834               	movf	___ftdiv@exp,w
 14329  0E94  00AC               	movwf	??___ftdiv
 14330  0E95  082C               	movf	??___ftdiv,w
 14331  0E96  00F5               	movwf	___ftpack@exp
 14332  0E97  0835               	movf	___ftdiv@sign,w
 14333  0E98  00AD               	movwf	??___ftdiv+1
 14334  0E99  082D               	movf	??___ftdiv+1,w
 14335  0E9A  00F6               	movwf	___ftpack@sign
 14336  0E9B  3189  2109         	fcall	___ftpack
 14337  0E9D  0872               	movf	?___ftpack,w
 14338  0E9E  0020               	movlb	0	; select bank0
 14339  0E9F  00A6               	movwf	?___ftdiv
 14340  0EA0  0873               	movf	?___ftpack+1,w
 14341  0EA1  00A7               	movwf	?___ftdiv+1
 14342  0EA2  0874               	movf	?___ftpack+2,w
 14343  0EA3  00A8               	movwf	?___ftdiv+2
 14344  0EA4  0008               	return
 14345  0EA5                     __end_of___ftdiv:	
 14346                           
 14347                           	psect	text91
 14348  0346                     __ptext91:	
 14349 ;; *************** function ___ftadd *****************
 14350 ;; Defined at:
 14351 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  f1              3   25[BANK0 ] float 
 14354 ;;  f2              3   28[BANK0 ] float 
 14355 ;; Auto vars:     Size  Location     Type
 14356 ;;  exp1            1   37[BANK0 ] unsigned char 
 14357 ;;  exp2            1   36[BANK0 ] unsigned char 
 14358 ;;  sign            1   35[BANK0 ] unsigned char 
 14359 ;; Return value:  Size  Location     Type
 14360 ;;                  3   25[BANK0 ] float 
 14361 ;; Registers used:
 14362 ;;		wreg, status,2, status,0, pclath, cstack
 14363 ;; Tracked objects:
 14364 ;;		On entry : 0/0
 14365 ;;		On exit  : 0/0
 14366 ;;		Unchanged: 0/0
 14367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14368 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14369 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14370 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14371 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14372 ;;Total ram usage:       13 bytes
 14373 ;; Hardware stack levels used:    1
 14374 ;; Hardware stack levels required when called:    4
 14375 ;; This function calls:
 14376 ;;		___ftpack
 14377 ;; This function is called by:
 14378 ;;		_getDimmerLights_PercentToValue
 14379 ;;		_getDimmerLights_ValueToPercent
 14380 ;; This function uses a non-reentrant model
 14381 ;;
 14382                           
 14383                           
 14384                           ;psect for function ___ftadd
 14385  0346                     ___ftadd:	
 14386                           
 14387                           ;incstack = 0
 14388                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 14389  0346  0020               	movlb	0	; select bank0
 14390  0347  0839               	movf	___ftadd@f1,w
 14391  0348  00BF               	movwf	??___ftadd
 14392  0349  083A               	movf	___ftadd@f1+1,w
 14393  034A  00C0               	movwf	??___ftadd+1
 14394  034B  083B               	movf	___ftadd@f1+2,w
 14395  034C  00C1               	movwf	??___ftadd+2
 14396  034D  1003               	clrc
 14397  034E  0D40               	rlf	??___ftadd+1,w
 14398  034F  0D41               	rlf	??___ftadd+2,w
 14399  0350  00C2               	movwf	??___ftadd+3
 14400  0351  0842               	movf	??___ftadd+3,w
 14401  0352  00C5               	movwf	___ftadd@exp1
 14402  0353  083C               	movf	___ftadd@f2,w
 14403  0354  00BF               	movwf	??___ftadd
 14404  0355  083D               	movf	___ftadd@f2+1,w
 14405  0356  00C0               	movwf	??___ftadd+1
 14406  0357  083E               	movf	___ftadd@f2+2,w
 14407  0358  00C1               	movwf	??___ftadd+2
 14408  0359  1003               	clrc
 14409  035A  0D40               	rlf	??___ftadd+1,w
 14410  035B  0D41               	rlf	??___ftadd+2,w
 14411  035C  00C2               	movwf	??___ftadd+3
 14412  035D  0842               	movf	??___ftadd+3,w
 14413  035E  00C4               	movwf	___ftadd@exp2
 14414  035F  0845               	movf	___ftadd@exp1,w
 14415  0360  1903               	btfsc	3,2
 14416  0361  2B6E               	goto	l5244
 14417  0362  0844               	movf	___ftadd@exp2,w
 14418  0363  0245               	subwf	___ftadd@exp1,w
 14419  0364  1803               	skipnc
 14420  0365  2B75               	goto	l5248
 14421  0366  0345               	decf	___ftadd@exp1,w
 14422  0367  3AFF               	xorlw	255
 14423  0368  0744               	addwf	___ftadd@exp2,w
 14424  0369  00BF               	movwf	??___ftadd
 14425  036A  3019               	movlw	25
 14426  036B  023F               	subwf	??___ftadd,w
 14427  036C  1C03               	skipc
 14428  036D  2B75               	goto	l5248
 14429  036E                     l5244:	
 14430  036E  083C               	movf	___ftadd@f2,w
 14431  036F  00B9               	movwf	?___ftadd
 14432  0370  083D               	movf	___ftadd@f2+1,w
 14433  0371  00BA               	movwf	?___ftadd+1
 14434  0372  083E               	movf	___ftadd@f2+2,w
 14435  0373  00BB               	movwf	?___ftadd+2
 14436  0374  0008               	return
 14437  0375                     l5248:	
 14438  0375  0844               	movf	___ftadd@exp2,w
 14439  0376  1903               	btfsc	3,2
 14440  0377  0008               	return
 14441  0378  0845               	movf	___ftadd@exp1,w
 14442  0379  0244               	subwf	___ftadd@exp2,w
 14443  037A  1803               	skipnc
 14444  037B  2B84               	goto	l5254
 14445  037C  0344               	decf	___ftadd@exp2,w
 14446  037D  3AFF               	xorlw	255
 14447  037E  0745               	addwf	___ftadd@exp1,w
 14448  037F  00BF               	movwf	??___ftadd
 14449  0380  3019               	movlw	25
 14450  0381  023F               	subwf	??___ftadd,w
 14451  0382  1803               	btfsc	3,0
 14452  0383  0008               	return
 14453  0384                     l5254:	
 14454  0384  3006               	movlw	6
 14455  0385  00BF               	movwf	??___ftadd
 14456  0386  083F               	movf	??___ftadd,w
 14457  0387  00C3               	movwf	___ftadd@sign
 14458  0388  1BBB               	btfsc	___ftadd@f1+2,7
 14459  0389  17C3               	bsf	___ftadd@sign,7
 14460  038A  1BBE               	btfsc	___ftadd@f2+2,7
 14461  038B  1743               	bsf	___ftadd@sign,6
 14462  038C  17BA               	bsf	___ftadd@f1+1,7
 14463  038D  30FF               	movlw	255
 14464  038E  05B9               	andwf	___ftadd@f1,f
 14465  038F  30FF               	movlw	255
 14466  0390  05BA               	andwf	___ftadd@f1+1,f
 14467  0391  3000               	movlw	0
 14468  0392  05BB               	andwf	___ftadd@f1+2,f
 14469  0393  17BD               	bsf	___ftadd@f2+1,7
 14470  0394  30FF               	movlw	255
 14471  0395  05BC               	andwf	___ftadd@f2,f
 14472  0396  30FF               	movlw	255
 14473  0397  05BD               	andwf	___ftadd@f2+1,f
 14474  0398  3000               	movlw	0
 14475  0399  05BE               	andwf	___ftadd@f2+2,f
 14476  039A  0844               	movf	___ftadd@exp2,w
 14477  039B  0245               	subwf	___ftadd@exp1,w
 14478  039C  1803               	skipnc
 14479  039D  2BC0               	goto	l5276
 14480  039E                     l5266:	
 14481  039E  3001               	movlw	1
 14482  039F                     u4865:	
 14483  039F  35BC               	lslf	___ftadd@f2,f
 14484  03A0  0DBD               	rlf	___ftadd@f2+1,f
 14485  03A1  0DBE               	rlf	___ftadd@f2+2,f
 14486  03A2  0B89               	decfsz	9,f
 14487  03A3  2B9F               	goto	u4865
 14488  03A4  3001               	movlw	1
 14489  03A5  02C4               	subwf	___ftadd@exp2,f
 14490  03A6  0844               	movf	___ftadd@exp2,w
 14491  03A7  0645               	xorwf	___ftadd@exp1,w
 14492  03A8  1903               	skipnz
 14493  03A9  2BBB               	goto	l5274
 14494  03AA  3001               	movlw	1
 14495  03AB  02C3               	subwf	___ftadd@sign,f
 14496  03AC  0843               	movf	___ftadd@sign,w
 14497  03AD  3907               	andlw	7
 14498  03AE  1903               	btfsc	3,2
 14499  03AF  2BBB               	goto	l5274
 14500  03B0  2B9E               	goto	l5266
 14501  03B1                     l5272:	
 14502  03B1  3001               	movlw	1
 14503  03B2                     u4895:	
 14504  03B2  36BB               	lsrf	___ftadd@f1+2,f
 14505  03B3  0CBA               	rrf	___ftadd@f1+1,f
 14506  03B4  0CB9               	rrf	___ftadd@f1,f
 14507  03B5  0B89               	decfsz	9,f
 14508  03B6  2BB2               	goto	u4895
 14509  03B7  3001               	movlw	1
 14510  03B8  00BF               	movwf	??___ftadd
 14511  03B9  083F               	movf	??___ftadd,w
 14512  03BA  07C5               	addwf	___ftadd@exp1,f
 14513  03BB                     l5274:	
 14514  03BB  0845               	movf	___ftadd@exp1,w
 14515  03BC  0644               	xorwf	___ftadd@exp2,w
 14516  03BD  1903               	btfsc	3,2
 14517  03BE  2BE5               	goto	l2433
 14518  03BF  2BB1               	goto	l5272
 14519  03C0                     l5276:	
 14520  03C0  0845               	movf	___ftadd@exp1,w
 14521  03C1  0244               	subwf	___ftadd@exp2,w
 14522  03C2  1803               	skipnc
 14523  03C3  2BE5               	goto	l2433
 14524  03C4                     l5278:	
 14525  03C4  3001               	movlw	1
 14526  03C5                     u4925:	
 14527  03C5  35B9               	lslf	___ftadd@f1,f
 14528  03C6  0DBA               	rlf	___ftadd@f1+1,f
 14529  03C7  0DBB               	rlf	___ftadd@f1+2,f
 14530  03C8  0B89               	decfsz	9,f
 14531  03C9  2BC5               	goto	u4925
 14532  03CA  3001               	movlw	1
 14533  03CB  02C5               	subwf	___ftadd@exp1,f
 14534  03CC  0844               	movf	___ftadd@exp2,w
 14535  03CD  0645               	xorwf	___ftadd@exp1,w
 14536  03CE  1903               	skipnz
 14537  03CF  2BE1               	goto	l5286
 14538  03D0  3001               	movlw	1
 14539  03D1  02C3               	subwf	___ftadd@sign,f
 14540  03D2  0843               	movf	___ftadd@sign,w
 14541  03D3  3907               	andlw	7
 14542  03D4  1903               	btfsc	3,2
 14543  03D5  2BE1               	goto	l5286
 14544  03D6  2BC4               	goto	l5278
 14545  03D7                     l5284:	
 14546  03D7  3001               	movlw	1
 14547  03D8                     u4955:	
 14548  03D8  36BE               	lsrf	___ftadd@f2+2,f
 14549  03D9  0CBD               	rrf	___ftadd@f2+1,f
 14550  03DA  0CBC               	rrf	___ftadd@f2,f
 14551  03DB  0B89               	decfsz	9,f
 14552  03DC  2BD8               	goto	u4955
 14553  03DD  3001               	movlw	1
 14554  03DE  00BF               	movwf	??___ftadd
 14555  03DF  083F               	movf	??___ftadd,w
 14556  03E0  07C4               	addwf	___ftadd@exp2,f
 14557  03E1                     l5286:	
 14558  03E1  0845               	movf	___ftadd@exp1,w
 14559  03E2  0644               	xorwf	___ftadd@exp2,w
 14560  03E3  1D03               	skipz
 14561  03E4  2BD7               	goto	l5284
 14562  03E5                     l2433:	
 14563  03E5  1FC3               	btfss	___ftadd@sign,7
 14564  03E6  2BF7               	goto	l5290
 14565  03E7  30FF               	movlw	255
 14566  03E8  06B9               	xorwf	___ftadd@f1,f
 14567  03E9  30FF               	movlw	255
 14568  03EA  06BA               	xorwf	___ftadd@f1+1,f
 14569  03EB  30FF               	movlw	255
 14570  03EC  06BB               	xorwf	___ftadd@f1+2,f
 14571  03ED  3001               	movlw	1
 14572  03EE  07B9               	addwf	___ftadd@f1,f
 14573  03EF  3000               	movlw	0
 14574  03F0  1803               	skipnc
 14575  03F1  3001               	movlw	1
 14576  03F2  07BA               	addwf	___ftadd@f1+1,f
 14577  03F3  3000               	movlw	0
 14578  03F4  1803               	skipnc
 14579  03F5  3001               	movlw	1
 14580  03F6  07BB               	addwf	___ftadd@f1+2,f
 14581  03F7                     l5290:	
 14582  03F7  1F43               	btfss	___ftadd@sign,6
 14583  03F8  2C09               	goto	l5294
 14584  03F9  30FF               	movlw	255
 14585  03FA  06BC               	xorwf	___ftadd@f2,f
 14586  03FB  30FF               	movlw	255
 14587  03FC  06BD               	xorwf	___ftadd@f2+1,f
 14588  03FD  30FF               	movlw	255
 14589  03FE  06BE               	xorwf	___ftadd@f2+2,f
 14590  03FF  3001               	movlw	1
 14591  0400  07BC               	addwf	___ftadd@f2,f
 14592  0401  3000               	movlw	0
 14593  0402  1803               	skipnc
 14594  0403  3001               	movlw	1
 14595  0404  07BD               	addwf	___ftadd@f2+1,f
 14596  0405  3000               	movlw	0
 14597  0406  1803               	skipnc
 14598  0407  3001               	movlw	1
 14599  0408  07BE               	addwf	___ftadd@f2+2,f
 14600  0409                     l5294:	
 14601  0409  01C3               	clrf	___ftadd@sign
 14602  040A  0839               	movf	___ftadd@f1,w
 14603  040B  07BC               	addwf	___ftadd@f2,f
 14604  040C  083A               	movf	___ftadd@f1+1,w
 14605  040D  3DBD               	addwfc	___ftadd@f2+1,f
 14606  040E  083B               	movf	___ftadd@f1+2,w
 14607  040F  3DBE               	addwfc	___ftadd@f2+2,f
 14608  0410  1FBE               	btfss	___ftadd@f2+2,7
 14609  0411  2C24               	goto	l5304
 14610  0412  30FF               	movlw	255
 14611  0413  06BC               	xorwf	___ftadd@f2,f
 14612  0414  30FF               	movlw	255
 14613  0415  06BD               	xorwf	___ftadd@f2+1,f
 14614  0416  30FF               	movlw	255
 14615  0417  06BE               	xorwf	___ftadd@f2+2,f
 14616  0418  3001               	movlw	1
 14617  0419  07BC               	addwf	___ftadd@f2,f
 14618  041A  3000               	movlw	0
 14619  041B  1803               	skipnc
 14620  041C  3001               	movlw	1
 14621  041D  07BD               	addwf	___ftadd@f2+1,f
 14622  041E  3000               	movlw	0
 14623  041F  1803               	skipnc
 14624  0420  3001               	movlw	1
 14625  0421  07BE               	addwf	___ftadd@f2+2,f
 14626  0422  01C3               	clrf	___ftadd@sign
 14627  0423  0AC3               	incf	___ftadd@sign,f
 14628  0424                     l5304:	
 14629  0424  083C               	movf	___ftadd@f2,w
 14630  0425  00F2               	movwf	___ftpack@arg
 14631  0426  083D               	movf	___ftadd@f2+1,w
 14632  0427  00F3               	movwf	___ftpack@arg+1
 14633  0428  083E               	movf	___ftadd@f2+2,w
 14634  0429  00F4               	movwf	___ftpack@arg+2
 14635  042A  0845               	movf	___ftadd@exp1,w
 14636  042B  00BF               	movwf	??___ftadd
 14637  042C  083F               	movf	??___ftadd,w
 14638  042D  00F5               	movwf	___ftpack@exp
 14639  042E  0843               	movf	___ftadd@sign,w
 14640  042F  00C0               	movwf	??___ftadd+1
 14641  0430  0840               	movf	??___ftadd+1,w
 14642  0431  00F6               	movwf	___ftpack@sign
 14643  0432  3189  2109         	fcall	___ftpack
 14644  0434  0872               	movf	?___ftpack,w
 14645  0435  0020               	movlb	0	; select bank0
 14646  0436  00B9               	movwf	?___ftadd
 14647  0437  0873               	movf	?___ftpack+1,w
 14648  0438  00BA               	movwf	?___ftadd+1
 14649  0439  0874               	movf	?___ftpack+2,w
 14650  043A  00BB               	movwf	?___ftadd+2
 14651  043B  0008               	return
 14652  043C                     __end_of___ftadd:	
 14653                           
 14654                           	psect	text92
 14655  12D5                     __ptext92:	
 14656 ;; *************** function ___awtoft *****************
 14657 ;; Defined at:
 14658 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;  c               2    0[BANK0 ] int 
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;  sign            1    5[BANK0 ] unsigned char 
 14663 ;; Return value:  Size  Location     Type
 14664 ;;                  3    0[BANK0 ] float 
 14665 ;; Registers used:
 14666 ;;		wreg, status,2, status,0, pclath, cstack
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14672 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14676 ;;Total ram usage:        6 bytes
 14677 ;; Hardware stack levels used:    1
 14678 ;; Hardware stack levels required when called:    4
 14679 ;; This function calls:
 14680 ;;		___ftpack
 14681 ;; This function is called by:
 14682 ;;		_getDimmerLights_PercentToValue
 14683 ;;		_getDimmerLights_ValueToPercent
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           
 14688                           ;psect for function ___awtoft
 14689  12D5                     ___awtoft:	
 14690                           
 14691                           ;incstack = 0
 14692                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 14693  12D5  0020               	movlb	0	; select bank0
 14694  12D6  01A5               	clrf	___awtoft@sign
 14695  12D7  1FA1               	btfss	___awtoft@c+1,7
 14696  12D8  2AE0               	goto	l7588
 14697  12D9  09A0               	comf	___awtoft@c,f
 14698  12DA  09A1               	comf	___awtoft@c+1,f
 14699  12DB  0AA0               	incf	___awtoft@c,f
 14700  12DC  1903               	skipnz
 14701  12DD  0AA1               	incf	___awtoft@c+1,f
 14702  12DE  01A5               	clrf	___awtoft@sign
 14703  12DF  0AA5               	incf	___awtoft@sign,f
 14704  12E0                     l7588:	
 14705  12E0  0820               	movf	___awtoft@c,w
 14706  12E1  00F2               	movwf	___ftpack@arg
 14707  12E2  0821               	movf	___awtoft@c+1,w
 14708  12E3  00F3               	movwf	___ftpack@arg+1
 14709  12E4  01F4               	clrf	___ftpack@arg+2
 14710  12E5  308E               	movlw	142
 14711  12E6  00A3               	movwf	??___awtoft
 14712  12E7  0823               	movf	??___awtoft,w
 14713  12E8  00F5               	movwf	___ftpack@exp
 14714  12E9  0825               	movf	___awtoft@sign,w
 14715  12EA  00A4               	movwf	??___awtoft+1
 14716  12EB  0824               	movf	??___awtoft+1,w
 14717  12EC  00F6               	movwf	___ftpack@sign
 14718  12ED  3189  2109         	fcall	___ftpack
 14719  12EF  0872               	movf	?___ftpack,w
 14720  12F0  0020               	movlb	0	; select bank0
 14721  12F1  00A0               	movwf	?___awtoft
 14722  12F2  0873               	movf	?___ftpack+1,w
 14723  12F3  00A1               	movwf	?___awtoft+1
 14724  12F4  0874               	movf	?___ftpack+2,w
 14725  12F5  00A2               	movwf	?___awtoft+2
 14726  12F6  0008               	return
 14727  12F7                     __end_of___awtoft:	
 14728                           
 14729                           	psect	text93
 14730  0909                     __ptext93:	
 14731 ;; *************** function ___ftpack *****************
 14732 ;; Defined at:
 14733 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;  arg             3    2[COMMON] unsigned um
 14736 ;;  exp             1    5[COMMON] unsigned char 
 14737 ;;  sign            1    6[COMMON] unsigned char 
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;		None
 14740 ;; Return value:  Size  Location     Type
 14741 ;;                  3    2[COMMON] float 
 14742 ;; Registers used:
 14743 ;;		wreg, status,2, status,0
 14744 ;; Tracked objects:
 14745 ;;		On entry : 0/0
 14746 ;;		On exit  : 0/0
 14747 ;;		Unchanged: 0/0
 14748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14749 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14752 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14753 ;;Total ram usage:        8 bytes
 14754 ;; Hardware stack levels used:    1
 14755 ;; Hardware stack levels required when called:    3
 14756 ;; This function calls:
 14757 ;;		Nothing
 14758 ;; This function is called by:
 14759 ;;		___awtoft
 14760 ;;		___ftadd
 14761 ;;		___ftdiv
 14762 ;;		___ftmul
 14763 ;; This function uses a non-reentrant model
 14764 ;;
 14765                           
 14766                           
 14767                           ;psect for function ___ftpack
 14768  0909                     ___ftpack:	
 14769                           
 14770                           ;incstack = 0
 14771                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14772  0909  0875               	movf	___ftpack@exp,w
 14773  090A  1903               	btfsc	3,2
 14774  090B  2911               	goto	l5072
 14775  090C  0874               	movf	___ftpack@arg+2,w
 14776  090D  0473               	iorwf	___ftpack@arg+1,w
 14777  090E  0472               	iorwf	___ftpack@arg,w
 14778  090F  1D03               	skipz
 14779  0910  2922               	goto	l5078
 14780  0911                     l5072:	
 14781  0911  3000               	movlw	0
 14782  0912  00F2               	movwf	?___ftpack
 14783  0913  3000               	movlw	0
 14784  0914  00F3               	movwf	?___ftpack+1
 14785  0915  3000               	movlw	0
 14786  0916  00F4               	movwf	?___ftpack+2
 14787  0917  0008               	return
 14788  0918                     l5076:	
 14789  0918  3001               	movlw	1
 14790  0919  00F7               	movwf	??___ftpack
 14791  091A  0877               	movf	??___ftpack,w
 14792  091B  07F5               	addwf	___ftpack@exp,f
 14793  091C  3001               	movlw	1
 14794  091D                     u4425:	
 14795  091D  36F4               	lsrf	___ftpack@arg+2,f
 14796  091E  0CF3               	rrf	___ftpack@arg+1,f
 14797  091F  0CF2               	rrf	___ftpack@arg,f
 14798  0920  0B89               	decfsz	9,f
 14799  0921  291D               	goto	u4425
 14800  0922                     l5078:	
 14801  0922  30FE               	movlw	254
 14802  0923  0574               	andwf	___ftpack@arg+2,w
 14803  0924  1903               	btfsc	3,2
 14804  0925  293B               	goto	l2404
 14805  0926  2918               	goto	l5076
 14806  0927                     l5080:	
 14807  0927  3001               	movlw	1
 14808  0928  00F7               	movwf	??___ftpack
 14809  0929  0877               	movf	??___ftpack,w
 14810  092A  07F5               	addwf	___ftpack@exp,f
 14811  092B  3001               	movlw	1
 14812  092C  07F2               	addwf	___ftpack@arg,f
 14813  092D  3000               	movlw	0
 14814  092E  1803               	skipnc
 14815  092F  3001               	movlw	1
 14816  0930  07F3               	addwf	___ftpack@arg+1,f
 14817  0931  3000               	movlw	0
 14818  0932  1803               	skipnc
 14819  0933  3001               	movlw	1
 14820  0934  07F4               	addwf	___ftpack@arg+2,f
 14821  0935  3001               	movlw	1
 14822  0936                     u4445:	
 14823  0936  36F4               	lsrf	___ftpack@arg+2,f
 14824  0937  0CF3               	rrf	___ftpack@arg+1,f
 14825  0938  0CF2               	rrf	___ftpack@arg,f
 14826  0939  0B89               	decfsz	9,f
 14827  093A  2936               	goto	u4445
 14828  093B                     l2404:	
 14829  093B  30FF               	movlw	255
 14830  093C  0574               	andwf	___ftpack@arg+2,w
 14831  093D  1903               	btfsc	3,2
 14832  093E  2948               	goto	l5088
 14833  093F  2927               	goto	l5080
 14834  0940                     l5086:	
 14835  0940  3001               	movlw	1
 14836  0941  02F5               	subwf	___ftpack@exp,f
 14837  0942  3001               	movlw	1
 14838  0943                     u4465:	
 14839  0943  35F2               	lslf	___ftpack@arg,f
 14840  0944  0DF3               	rlf	___ftpack@arg+1,f
 14841  0945  0DF4               	rlf	___ftpack@arg+2,f
 14842  0946  0B89               	decfsz	9,f
 14843  0947  2943               	goto	u4465
 14844  0948                     l5088:	
 14845  0948  1FF3               	btfss	___ftpack@arg+1,7
 14846  0949  2940               	goto	l5086
 14847  094A  1875               	btfsc	___ftpack@exp,0
 14848  094B  2952               	goto	l2410
 14849  094C  30FF               	movlw	255
 14850  094D  05F2               	andwf	___ftpack@arg,f
 14851  094E  307F               	movlw	127
 14852  094F  05F3               	andwf	___ftpack@arg+1,f
 14853  0950  30FF               	movlw	255
 14854  0951  05F4               	andwf	___ftpack@arg+2,f
 14855  0952                     l2410:	
 14856  0952  1003               	clrc
 14857  0953  0CF5               	rrf	___ftpack@exp,f
 14858  0954  0875               	movf	___ftpack@exp,w
 14859  0955  00F7               	movwf	??___ftpack
 14860  0956  01F8               	clrf	??___ftpack+1
 14861  0957  01F9               	clrf	??___ftpack+2
 14862  0958  3010               	movlw	16
 14863  0959                     u4495:	
 14864  0959  35F7               	lslf	??___ftpack,f
 14865  095A  0DF8               	rlf	??___ftpack+1,f
 14866  095B  0DF9               	rlf	??___ftpack+2,f
 14867  095C  0B89               	decfsz	9,f
 14868  095D  2959               	goto	u4495
 14869  095E  0877               	movf	??___ftpack,w
 14870  095F  04F2               	iorwf	___ftpack@arg,f
 14871  0960  0878               	movf	??___ftpack+1,w
 14872  0961  04F3               	iorwf	___ftpack@arg+1,f
 14873  0962  0879               	movf	??___ftpack+2,w
 14874  0963  04F4               	iorwf	___ftpack@arg+2,f
 14875  0964  0876               	movf	___ftpack@sign,w
 14876  0965  1903               	btfsc	3,2
 14877  0966  0008               	return
 14878  0967  17F4               	bsf	___ftpack@arg+2,7
 14879  0968  0008               	return
 14880  0969                     __end_of___ftpack:	
 14881                           
 14882                           	psect	text94
 14883  1001                     __ptext94:	
 14884 ;; *************** function _Division *****************
 14885 ;; Defined at:
 14886 ;;		line 2397 in file "../src/Dimmer_B1.c"
 14887 ;; Parameters:    Size  Location     Type
 14888 ;;  value           1    wreg     unsigned char 
 14889 ;;  num             1    7[COMMON] unsigned char 
 14890 ;; Auto vars:     Size  Location     Type
 14891 ;;  value           1    0[BANK0 ] unsigned char 
 14892 ;;  result          1    1[BANK0 ] unsigned char 
 14893 ;; Return value:  Size  Location     Type
 14894 ;;                  1    wreg      unsigned char 
 14895 ;; Registers used:
 14896 ;;		wreg, status,2, status,0, pclath, cstack
 14897 ;; Tracked objects:
 14898 ;;		On entry : 0/0
 14899 ;;		On exit  : 0/0
 14900 ;;		Unchanged: 0/0
 14901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14905 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14906 ;;Total ram usage:        5 bytes
 14907 ;; Hardware stack levels used:    1
 14908 ;; Hardware stack levels required when called:    4
 14909 ;; This function calls:
 14910 ;;		___lbdiv
 14911 ;; This function is called by:
 14912 ;;		_DimmerIntr_Initialization
 14913 ;;		_DimmerIntr_ValueCalculate
 14914 ;; This function uses a non-reentrant model
 14915 ;;
 14916                           
 14917                           
 14918                           ;psect for function _Division
 14919  1001                     _Division:	
 14920                           
 14921                           ;incstack = 0
 14922                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
 14923                           ;Division@value stored from wreg
 14924  1001  0020               	movlb	0	; select bank0
 14925  1002  00A0               	movwf	Division@value
 14926                           
 14927                           ;Dimmer_B1.c: 2398: char result = (char) (value / num);
 14928  1003  0877               	movf	Division@num,w
 14929  1004  00F8               	movwf	??_Division
 14930  1005  0878               	movf	??_Division,w
 14931  1006  00F2               	movwf	___lbdiv@divisor
 14932  1007  0820               	movf	Division@value,w
 14933  1008  3192  22B4         	fcall	___lbdiv
 14934  100A  00F9               	movwf	??_Division+1
 14935  100B  0879               	movf	??_Division+1,w
 14936  100C  0020               	movlb	0	; select bank0
 14937  100D  00A1               	movwf	Division@result
 14938                           
 14939                           ;Dimmer_B1.c: 2399: return result;
 14940  100E  0821               	movf	Division@result,w
 14941  100F  0008               	return
 14942  1010                     __end_of_Division:	
 14943                           
 14944                           	psect	text95
 14945  12B4                     __ptext95:	
 14946 ;; *************** function ___lbdiv *****************
 14947 ;; Defined at:
 14948 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbdiv.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;  dividend        1    wreg     unsigned char 
 14951 ;;  divisor         1    2[COMMON] unsigned char 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;  dividend        1    4[COMMON] unsigned char 
 14954 ;;  quotient        1    6[COMMON] unsigned char 
 14955 ;;  counter         1    5[COMMON] unsigned char 
 14956 ;; Return value:  Size  Location     Type
 14957 ;;                  1    wreg      unsigned char 
 14958 ;; Registers used:
 14959 ;;		wreg, status,2, status,0
 14960 ;; Tracked objects:
 14961 ;;		On entry : 0/0
 14962 ;;		On exit  : 0/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14965 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;Total ram usage:        5 bytes
 14970 ;; Hardware stack levels used:    1
 14971 ;; Hardware stack levels required when called:    3
 14972 ;; This function calls:
 14973 ;;		Nothing
 14974 ;; This function is called by:
 14975 ;;		_Division
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           
 14980                           ;psect for function ___lbdiv
 14981  12B4                     ___lbdiv:	
 14982                           
 14983                           ;incstack = 0
 14984                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
 14985                           ;___lbdiv@dividend stored from wreg
 14986  12B4  00F4               	movwf	___lbdiv@dividend
 14987  12B5  01F6               	clrf	___lbdiv@quotient
 14988  12B6  0872               	movf	___lbdiv@divisor,w
 14989  12B7  1903               	btfsc	3,2
 14990  12B8  2AD3               	goto	l7526
 14991  12B9  01F5               	clrf	___lbdiv@counter
 14992  12BA  0AF5               	incf	___lbdiv@counter,f
 14993  12BB                     l7514:	
 14994  12BB  1BF2               	btfsc	___lbdiv@divisor,7
 14995  12BC  2AC4               	goto	l7516
 14996  12BD  1003               	clrc
 14997  12BE  0DF2               	rlf	___lbdiv@divisor,f
 14998  12BF  3001               	movlw	1
 14999  12C0  00F3               	movwf	??___lbdiv
 15000  12C1  0873               	movf	??___lbdiv,w
 15001  12C2  07F5               	addwf	___lbdiv@counter,f
 15002  12C3  2ABB               	goto	l7514
 15003  12C4                     l7516:	
 15004  12C4  1003               	clrc
 15005  12C5  0DF6               	rlf	___lbdiv@quotient,f
 15006  12C6  0872               	movf	___lbdiv@divisor,w
 15007  12C7  0274               	subwf	___lbdiv@dividend,w
 15008  12C8  1C03               	skipc
 15009  12C9  2ACE               	goto	L9
 15010  12CA  0872               	movf	___lbdiv@divisor,w
 15011  12CB  02F4               	subwf	___lbdiv@dividend,f
 15012  12CC  1476               	bsf	___lbdiv@quotient,0
 15013  12CD  1003               	clrc
 15014  12CE                     L9:	
 15015  12CE  0CF2               	rrf	___lbdiv@divisor,f
 15016  12CF  3001               	movlw	1
 15017  12D0  02F5               	subwf	___lbdiv@counter,f
 15018  12D1  1D03               	btfss	3,2
 15019  12D2  2AC4               	goto	l7516
 15020  12D3                     l7526:	
 15021  12D3  0876               	movf	___lbdiv@quotient,w
 15022  12D4  0008               	return
 15023  12D5                     __end_of___lbdiv:	
 15024                           
 15025                           	psect	text96
 15026  1F3A                     __ptext96:	
 15027 ;; *************** function _DelayOff_Main *****************
 15028 ;; Defined at:
 15029 ;;		line 41 in file "../src/DelayOff_B1.c"
 15030 ;; Parameters:    Size  Location     Type
 15031 ;;		None
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;		None
 15034 ;; Return value:  Size  Location     Type
 15035 ;;		None               void
 15036 ;; Registers used:
 15037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/0
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15047 ;;Total ram usage:        0 bytes
 15048 ;; Hardware stack levels used:    1
 15049 ;; Hardware stack levels required when called:    7
 15050 ;; This function calls:
 15051 ;;		_DlyOff_Main
 15052 ;; This function is called by:
 15053 ;;		_main
 15054 ;; This function uses a non-reentrant model
 15055 ;;
 15056                           
 15057                           
 15058                           ;psect for function _DelayOff_Main
 15059  1F3A                     _DelayOff_Main:	
 15060                           
 15061                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 15062                           
 15063                           ;incstack = 0
 15064                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15065  1F3A  3001               	movlw	1
 15066  1F3B  318A  22FC  319F   	fcall	_DlyOff_Main
 15067                           
 15068                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
 15069  1F3E  3002               	movlw	2
 15070  1F3F  318A  22FC         	fcall	_DlyOff_Main
 15071  1F41  0008               	return
 15072  1F42                     __end_of_DelayOff_Main:	
 15073                           
 15074                           	psect	text97
 15075  0AFC                     __ptext97:	
 15076 ;; *************** function _DlyOff_Main *****************
 15077 ;; Defined at:
 15078 ;;		line 61 in file "../src/DelayOff_B1.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  sw              1    wreg     unsigned char 
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;  sw              1   63[BANK0 ] unsigned char 
 15083 ;; Return value:  Size  Location     Type
 15084 ;;		None               void
 15085 ;; Registers used:
 15086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15087 ;; Tracked objects:
 15088 ;;		On entry : 0/0
 15089 ;;		On exit  : 0/0
 15090 ;;		Unchanged: 0/0
 15091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;Total ram usage:        3 bytes
 15097 ;; Hardware stack levels used:    1
 15098 ;; Hardware stack levels required when called:    6
 15099 ;; This function calls:
 15100 ;;		_DelayOffPointSelect
 15101 ;;		_getDimmerLights_Status
 15102 ;;		_setDimmerLights_SwOff
 15103 ;;		_setDimmerLights_SwOn
 15104 ;;		_setProductData
 15105 ;; This function is called by:
 15106 ;;		_DelayOff_Main
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110                           
 15111                           ;psect for function _DlyOff_Main
 15112  0AFC                     _DlyOff_Main:	
 15113                           
 15114                           ;incstack = 0
 15115                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15116                           ;DlyOff_Main@sw stored from wreg
 15117  0AFC  0020               	movlb	0	; select bank0
 15118  0AFD  00DF               	movwf	DlyOff_Main@sw
 15119                           
 15120                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 15121  0AFE  085F               	movf	DlyOff_Main@sw,w
 15122  0AFF  3191  210B  318A   	fcall	_DelayOffPointSelect
 15123                           
 15124                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 15125  0B02  0020               	movlb	0	; select bank0
 15126  0B03  086A               	movf	_DelayOff,w
 15127  0B04  0086               	movwf	6
 15128  0B05  3001               	movlw	1	; select bank2/3
 15129  0B06  0087               	movwf	7
 15130  0B07  1C81               	btfss	1,1
 15131  0B08  0008               	return
 15132                           
 15133                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 15134  0B09  086A               	movf	_DelayOff,w
 15135  0B0A  3E02               	addlw	2
 15136  0B0B  0086               	movwf	6
 15137  0B0C  3001               	movlw	1	; select bank2/3
 15138  0B0D  0087               	movwf	7
 15139  0B0E  3001               	movlw	1
 15140  0B0F  0781               	addwf	1,f
 15141  0B10  3141               	addfsr 1,1
 15142  0B11  1803               	skipnc
 15143  0B12  0A81               	incf	1,f
 15144                           
 15145                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 15146  0B13  086A               	movf	_DelayOff,w
 15147  0B14  3E02               	addlw	2
 15148  0B15  0086               	movwf	6
 15149  0B16  3001               	movlw	1	; select bank2/3
 15150  0B17  0087               	movwf	7
 15151  0B18  3F40               	moviw [0]fsr1
 15152  0B19  00DD               	movwf	??_DlyOff_Main
 15153  0B1A  3F41               	moviw [1]fsr1
 15154  0B1B  00DE               	movwf	??_DlyOff_Main+1
 15155  0B1C  3009               	movlw	9
 15156  0B1D  025E               	subwf	??_DlyOff_Main+1,w
 15157  0B1E  30C4               	movlw	196
 15158  0B1F  1903               	skipnz
 15159  0B20  025D               	subwf	??_DlyOff_Main,w
 15160  0B21  1C03               	skipc
 15161  0B22  0008               	return
 15162                           
 15163                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 15164  0B23  086A               	movf	_DelayOff,w
 15165  0B24  3E02               	addlw	2
 15166  0B25  0086               	movwf	6
 15167  0B26  3001               	movlw	1	; select bank2/3
 15168  0B27  0087               	movwf	7
 15169  0B28  3000               	movlw	0
 15170  0B29  3FC0               	movwi [0]fsr1
 15171  0B2A  3FC1               	movwi [1]fsr1
 15172                           
 15173                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 15174  0B2B  3001               	movlw	1
 15175  0B2C  00DD               	movwf	??_DlyOff_Main
 15176  0B2D  086A               	movf	_DelayOff,w
 15177  0B2E  3E04               	addlw	4
 15178  0B2F  0086               	movwf	6
 15179  0B30  3001               	movlw	1	; select bank2/3
 15180  0B31  0087               	movwf	7
 15181  0B32  085D               	movf	??_DlyOff_Main,w
 15182  0B33  0781               	addwf	1,f
 15183                           
 15184                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 15185  0B34  086A               	movf	_DelayOff,w
 15186  0B35  3E04               	addlw	4
 15187  0B36  0086               	movwf	6
 15188  0B37  3001               	movlw	1	; select bank2/3
 15189  0B38  0087               	movwf	7
 15190  0B39  0A6A               	incf	_DelayOff,w
 15191  0B3A  0084               	movwf	4
 15192  0B3B  3001               	movlw	1	; select bank2/3
 15193  0B3C  0085               	movwf	5
 15194  0B3D  0800               	movf	0,w
 15195  0B3E  0201               	subwf	1,w
 15196  0B3F  1C03               	skipc
 15197  0B40  0008               	return
 15198                           
 15199                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 15200  0B41  086A               	movf	_DelayOff,w
 15201  0B42  3E04               	addlw	4
 15202  0B43  0086               	movwf	6
 15203  0B44  3001               	movlw	1	; select bank2/3
 15204  0B45  0087               	movwf	7
 15205  0B46  0181               	clrf	1
 15206                           
 15207                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 15208  0B47  086A               	movf	_DelayOff,w
 15209  0B48  0086               	movwf	6
 15210  0B49  3001               	movlw	1	; select bank2/3
 15211  0B4A  0087               	movwf	7
 15212  0B4B  1081               	bcf	1,1
 15213                           
 15214                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 15215  0B4C  085F               	movf	DlyOff_Main@sw,w
 15216  0B4D  319F  27F1  318A   	fcall	_getDimmerLights_Status
 15217  0B50  3A01               	xorlw	1
 15218  0B51  1D03               	skipz
 15219  0B52  2B5D               	goto	l306
 15220                           
 15221                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 15222  0B53  0020               	movlb	0	; select bank0
 15223  0B54  085F               	movf	DlyOff_Main@sw,w
 15224  0B55  318B  23D6  318A   	fcall	_setDimmerLights_SwOn
 15225                           
 15226                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 15227  0B58  0020               	movlb	0	; select bank0
 15228  0B59  085F               	movf	DlyOff_Main@sw,w
 15229  0B5A  3195  25C1  318A   	fcall	_setDimmerLights_SwOff
 15230  0B5D                     l306:	
 15231                           
 15232                           ;DelayOff_B1.c: 78: }
 15233                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 15234  0B5D  0020               	movlb	0	; select bank0
 15235  0B5E  01DA               	clrf	setProductData@value
 15236  0B5F  085F               	movf	DlyOff_Main@sw,w
 15237  0B60  3E1A               	addlw	26
 15238  0B61  319F  27A7         	fcall	_setProductData
 15239  0B63  0008               	return
 15240  0B64                     __end_of_DlyOff_Main:	
 15241                           
 15242                           	psect	text98
 15243  1FA7                     __ptext98:	
 15244 ;; *************** function _setProductData *****************
 15245 ;; Defined at:
 15246 ;;		line 649 in file "../src/main_B1.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;  address         1    wreg     unsigned char 
 15249 ;;  value           1   58[BANK0 ] unsigned char 
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;  address         1   60[BANK0 ] unsigned char 
 15252 ;; Return value:  Size  Location     Type
 15253 ;;		None               void
 15254 ;; Registers used:
 15255 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15256 ;; Tracked objects:
 15257 ;;		On entry : 0/0
 15258 ;;		On exit  : 0/0
 15259 ;;		Unchanged: 0/0
 15260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15261 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15265 ;;Total ram usage:        3 bytes
 15266 ;; Hardware stack levels used:    1
 15267 ;; Hardware stack levels required when called:    3
 15268 ;; This function calls:
 15269 ;;		Nothing
 15270 ;; This function is called by:
 15271 ;;		_DlyOff_Main
 15272 ;;		_setDelayOff_GO
 15273 ;;		_setDimmerLights_OnOff
 15274 ;;		_setDimmerLights_Dimming
 15275 ;;		_setTemp_Main
 15276 ;; This function uses a non-reentrant model
 15277 ;;
 15278                           
 15279                           
 15280                           ;psect for function _setProductData
 15281  1FA7                     _setProductData:	
 15282                           
 15283                           ;incstack = 0
 15284                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 15285                           ;setProductData@address stored from wreg
 15286  1FA7  0020               	movlb	0	; select bank0
 15287  1FA8  00DC               	movwf	setProductData@address
 15288                           
 15289                           ;main_B1.c: 650: _product.Data[address] = value;
 15290  1FA9  085A               	movf	setProductData@value,w
 15291  1FAA  00DB               	movwf	??_setProductData
 15292  1FAB  085C               	movf	setProductData@address,w
 15293  1FAC  3E20               	addlw	__product& (0+255)
 15294  1FAD  0086               	movwf	6
 15295  1FAE  3002               	movlw	2	; select bank4/5
 15296  1FAF  0087               	movwf	7
 15297  1FB0  085B               	movf	??_setProductData,w
 15298  1FB1  0081               	movwf	1
 15299  1FB2  0008               	return
 15300  1FB3                     __end_of_setProductData:	
 15301                           
 15302                           	psect	text99
 15303  0BD6                     __ptext99:	
 15304 ;; *************** function _setDimmerLights_SwOn *****************
 15305 ;; Defined at:
 15306 ;;		line 761 in file "../src/Dimmer_B1.c"
 15307 ;; Parameters:    Size  Location     Type
 15308 ;;  sw              1    wreg     unsigned char 
 15309 ;; Auto vars:     Size  Location     Type
 15310 ;;  sw              1   10[BANK0 ] unsigned char 
 15311 ;;  idle            1    9[BANK0 ] unsigned char 
 15312 ;;  dimmingStatu    1    6[BANK0 ] unsigned char 
 15313 ;; Return value:  Size  Location     Type
 15314 ;;		None               void
 15315 ;; Registers used:
 15316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15317 ;; Tracked objects:
 15318 ;;		On entry : 0/0
 15319 ;;		On exit  : 0/0
 15320 ;;		Unchanged: 0/0
 15321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15326 ;;Total ram usage:        6 bytes
 15327 ;; Hardware stack levels used:    1
 15328 ;; Hardware stack levels required when called:    5
 15329 ;; This function calls:
 15330 ;;		_DimmerLights_SelectPointer
 15331 ;;		_getDimmerIntr_Dimming_Sw
 15332 ;;		_setBuz
 15333 ;; This function is called by:
 15334 ;;		_DlyOff_Main
 15335 ;;		_setSw_Main
 15336 ;; This function uses a non-reentrant model
 15337 ;;
 15338                           
 15339                           
 15340                           ;psect for function _setDimmerLights_SwOn
 15341  0BD6                     _setDimmerLights_SwOn:	
 15342                           
 15343                           ;incstack = 0
 15344                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15345                           ;setDimmerLights_SwOn@sw stored from wreg
 15346  0BD6  0020               	movlb	0	; select bank0
 15347  0BD7  00AA               	movwf	setDimmerLights_SwOn@sw
 15348                           
 15349                           ;Dimmer_B1.c: 762: char idle = 0;
 15350  0BD8  01A9               	clrf	setDimmerLights_SwOn@idle
 15351                           
 15352                           ;Dimmer_B1.c: 764: char dimmingStatus = 0;
 15353  0BD9  01A6               	clrf	setDimmerLights_SwOn@dimmingStatus
 15354                           
 15355                           ;Dimmer_B1.c: 765: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 15356  0BDA  082A               	movf	setDimmerLights_SwOn@sw,w
 15357  0BDB  3191  2189  318B   	fcall	_getDimmerIntr_Dimming_Sw
 15358  0BDE  00F9               	movwf	??_setDimmerLights_SwOn
 15359  0BDF  0879               	movf	??_setDimmerLights_SwOn,w
 15360  0BE0  0020               	movlb	0	; select bank0
 15361  0BE1  00A6               	movwf	setDimmerLights_SwOn@dimmingStatus
 15362                           
 15363                           ;Dimmer_B1.c: 769: if (idle == 0) {
 15364  0BE2  08A9               	movf	setDimmerLights_SwOn@idle,f
 15365  0BE3  1D03               	skipz
 15366  0BE4  2C09               	goto	l7706
 15367                           
 15368                           ;Dimmer_B1.c: 770: if (sw == 1) {
 15369  0BE5  082A               	movf	setDimmerLights_SwOn@sw,w
 15370  0BE6  3A01               	xorlw	1
 15371  0BE7  1D03               	skipz
 15372  0BE8  2BF6               	goto	l7696
 15373                           
 15374                           ;Dimmer_B1.c: 771: idle = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw ==
      +                           1 ? 1 : 0;
 15375  0BE9  01A7               	clrf	_setDimmerLights_SwOn$2274
 15376  0BEA  0AA7               	incf	_setDimmerLights_SwOn$2274,f
 15377  0BEB  0022               	movlb	2	; select bank2
 15378  0BEC  1A56               	btfsc	_DimmerLights2^(0+256),4
 15379  0BED  2BF3               	goto	l7694
 15380  0BEE  0021               	movlb	1	; select bank1
 15381  0BEF  1A30               	btfsc	_DimmerIntr2^(0+128),4
 15382  0BF0  2BF3               	goto	l7694
 15383  0BF1  0020               	movlb	0	; select bank0
 15384  0BF2  01A7               	clrf	_setDimmerLights_SwOn$2274
 15385  0BF3                     l7694:	
 15386  0BF3  0020               	movlb	0	; select bank0
 15387  0BF4  0827               	movf	_setDimmerLights_SwOn$2274,w
 15388  0BF5  2C06               	goto	L10
 15389  0BF6                     l7696:	
 15390                           ;Dimmer_B1.c: 772: } else if (sw == 2) {
 15391                           
 15392  0BF6  082A               	movf	setDimmerLights_SwOn@sw,w
 15393  0BF7  3A02               	xorlw	2
 15394  0BF8  1D03               	skipz
 15395  0BF9  2C09               	goto	l7706
 15396                           
 15397                           ;Dimmer_B1.c: 773: idle = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw ==
      +                           1 ? 1 : 0;
 15398  0BFA  01A8               	clrf	_setDimmerLights_SwOn$2283
 15399  0BFB  0AA8               	incf	_setDimmerLights_SwOn$2283,f
 15400  0BFC  0022               	movlb	2	; select bank2
 15401  0BFD  1A4D               	btfsc	_DimmerLights1^(0+256),4
 15402  0BFE  2C04               	goto	l7704
 15403  0BFF  0021               	movlb	1	; select bank1
 15404  0C00  1A20               	btfsc	_DimmerIntr1^(0+128),4
 15405  0C01  2C04               	goto	l7704
 15406  0C02  0020               	movlb	0	; select bank0
 15407  0C03  01A8               	clrf	_setDimmerLights_SwOn$2283
 15408  0C04                     l7704:	
 15409  0C04  0020               	movlb	0	; select bank0
 15410  0C05  0828               	movf	_setDimmerLights_SwOn$2283,w
 15411  0C06                     L10:	
 15412  0C06  00F9               	movwf	??_setDimmerLights_SwOn
 15413  0C07  0879               	movf	??_setDimmerLights_SwOn,w
 15414  0C08  00A9               	movwf	setDimmerLights_SwOn@idle
 15415  0C09                     l7706:	
 15416                           
 15417                           ;Dimmer_B1.c: 774: }
 15418                           ;Dimmer_B1.c: 775: }
 15419                           ;Dimmer_B1.c: 792: DimmerLights_SelectPointer(sw);
 15420  0C09  082A               	movf	setDimmerLights_SwOn@sw,w
 15421  0C0A  3191  2120  318B   	fcall	_DimmerLights_SelectPointer
 15422                           
 15423                           ;Dimmer_B1.c: 793: if (idle == 0) {
 15424  0C0D  0020               	movlb	0	; select bank0
 15425  0C0E  08A9               	movf	setDimmerLights_SwOn@idle,f
 15426  0C0F  1D03               	skipz
 15427  0C10  0008               	return
 15428                           
 15429                           ;Dimmer_B1.c: 795: if (dimmingStatus == 0) {
 15430  0C11  08A6               	movf	setDimmerLights_SwOn@dimmingStatus,f
 15431  0C12  1D03               	skipz
 15432  0C13  2C37               	goto	l7718
 15433                           
 15434                           ;Dimmer_B1.c: 796: DimmerLights->SwFlag = 1;
 15435  0C14  086B               	movf	_DimmerLights,w
 15436  0C15  0086               	movwf	6
 15437  0C16  3001               	movlw	1	; select bank2/3
 15438  0C17  0087               	movwf	7
 15439  0C18  1401               	bsf	1,0
 15440                           
 15441                           ;Dimmer_B1.c: 797: if (DimmerLights->Status == 0) {
 15442  0C19  0A6B               	incf	_DimmerLights,w
 15443  0C1A  0086               	movwf	6
 15444  0C1B  3001               	movlw	1	; select bank2/3
 15445  0C1C  0087               	movwf	7
 15446  0C1D  1801               	btfsc	1,0
 15447  0C1E  2C31               	goto	l7716
 15448                           
 15449                           ;Dimmer_B1.c: 798: DimmerLights->Status = 1;
 15450  0C1F  0A6B               	incf	_DimmerLights,w
 15451  0C20  0086               	movwf	6
 15452  0C21  3001               	movlw	1	; select bank2/3
 15453  0C22  0087               	movwf	7
 15454  0C23  1401               	bsf	1,0
 15455                           
 15456                           ;Dimmer_B1.c: 804: DimmerLights->Phase = 1;
 15457  0C24  086B               	movf	_DimmerLights,w
 15458  0C25  3E02               	addlw	2
 15459  0C26  0086               	movwf	6
 15460  0C27  3001               	movlw	1	; select bank2/3
 15461  0C28  0087               	movwf	7
 15462  0C29  1401               	bsf	1,0
 15463                           
 15464                           ;Dimmer_B1.c: 805: DimmerLights->PhaseSwitch = 1;
 15465  0C2A  086B               	movf	_DimmerLights,w
 15466  0C2B  3E02               	addlw	2
 15467  0C2C  0086               	movwf	6
 15468  0C2D  3001               	movlw	1	; select bank2/3
 15469  0C2E  0087               	movwf	7
 15470  0C2F  1501               	bsf	1,2
 15471                           
 15472                           ;Dimmer_B1.c: 809: } else {
 15473  0C30  2C41               	goto	l7720
 15474  0C31                     l7716:	
 15475                           
 15476                           ;Dimmer_B1.c: 810: DimmerLights->Status = 0;
 15477  0C31  0A6B               	incf	_DimmerLights,w
 15478  0C32  0086               	movwf	6
 15479  0C33  3001               	movlw	1	; select bank2/3
 15480  0C34  0087               	movwf	7
 15481  0C35  1001               	bcf	1,0
 15482                           
 15483                           ;Dimmer_B1.c: 811: }
 15484                           ;Dimmer_B1.c: 812: } else {
 15485  0C36  2C41               	goto	l7720
 15486  0C37                     l7718:	
 15487                           
 15488                           ;Dimmer_B1.c: 813: DimmerLights->DimmingTrigger = 1;
 15489  0C37  086B               	movf	_DimmerLights,w
 15490  0C38  0086               	movwf	6
 15491  0C39  3001               	movlw	1	; select bank2/3
 15492  0C3A  0087               	movwf	7
 15493  0C3B  1601               	bsf	1,4
 15494                           
 15495                           ;Dimmer_B1.c: 814: DimmerLights->DimmingSwitch = 0;
 15496  0C3C  086B               	movf	_DimmerLights,w
 15497  0C3D  0086               	movwf	6
 15498  0C3E  3001               	movlw	1	; select bank2/3
 15499  0C3F  0087               	movwf	7
 15500  0C40  1281               	bcf	1,5
 15501  0C41                     l7720:	
 15502                           
 15503                           ;Dimmer_B1.c: 815: }
 15504                           ;Dimmer_B1.c: 816: setBuz(1, 100);
 15505  0C41  3064               	movlw	100
 15506  0C42  00A4               	movwf	setBuz@time
 15507  0C43  3000               	movlw	0
 15508  0C44  00A5               	movwf	setBuz@time+1
 15509  0C45  3001               	movlw	1
 15510  0C46  3197  2759         	fcall	_setBuz
 15511  0C48  0008               	return
 15512  0C49                     __end_of_setDimmerLights_SwOn:	
 15513                           
 15514                           	psect	text100
 15515  1759                     __ptext100:	
 15516 ;; *************** function _setBuz *****************
 15517 ;; Defined at:
 15518 ;;		line 22 in file "../src/Buzzer_B1.c"
 15519 ;; Parameters:    Size  Location     Type
 15520 ;;  count           1    wreg     unsigned char 
 15521 ;;  time            2    4[BANK0 ] int 
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;  count           1    8[COMMON] unsigned char 
 15524 ;; Return value:  Size  Location     Type
 15525 ;;		None               void
 15526 ;; Registers used:
 15527 ;;		wreg, status,2, status,0, pclath, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;Total ram usage:        4 bytes
 15538 ;; Hardware stack levels used:    1
 15539 ;; Hardware stack levels required when called:    4
 15540 ;; This function calls:
 15541 ;;		___awdiv
 15542 ;; This function is called by:
 15543 ;;		_setDimmerLights_SwOn
 15544 ;;		_setDimmerLights_Dimming
 15545 ;;		_setTemp_Main
 15546 ;;		_my_MainTimer
 15547 ;;		_Exception_Main
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           
 15552                           ;psect for function _setBuz
 15553  1759                     _setBuz:	
 15554                           
 15555                           ;incstack = 0
 15556                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 15557                           ;setBuz@count stored from wreg
 15558  1759  00F8               	movwf	setBuz@count
 15559                           
 15560                           ;Buzzer_B1.c: 23: time /= 20;
 15561  175A  3014               	movlw	20
 15562  175B  00F2               	movwf	___awdiv@divisor
 15563  175C  3000               	movlw	0
 15564  175D  00F3               	movwf	___awdiv@divisor+1
 15565  175E  0020               	movlb	0	; select bank0
 15566  175F  0825               	movf	setBuz@time+1,w
 15567  1760  01F5               	clrf	___awdiv@dividend+1
 15568  1761  07F5               	addwf	___awdiv@dividend+1,f
 15569  1762  0824               	movf	setBuz@time,w
 15570  1763  01F4               	clrf	___awdiv@dividend
 15571  1764  07F4               	addwf	___awdiv@dividend,f
 15572  1765  3197  27AC  3197   	fcall	___awdiv
 15573  1768  0873               	movf	?___awdiv+1,w
 15574  1769  0020               	movlb	0	; select bank0
 15575  176A  01A5               	clrf	setBuz@time+1
 15576  176B  07A5               	addwf	setBuz@time+1,f
 15577  176C  0872               	movf	?___awdiv,w
 15578  176D  01A4               	clrf	setBuz@time
 15579  176E  07A4               	addwf	setBuz@time,f
 15580                           
 15581                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 15582  176F  0021               	movlb	1	; select bank1
 15583  1770  1C4D               	btfss	_Buz1^(0+128),0
 15584  1771  0008               	return
 15585                           
 15586                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 15587  1772  18CD               	btfsc	_Buz1^(0+128),1
 15588  1773  2F88               	goto	l72
 15589                           
 15590                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 15591  1774  14CD               	bsf	_Buz1^(0+128),1
 15592                           
 15593                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 15594  1775  01CE               	clrf	(_Buz1^(0+128)+1)
 15595  1776  01CF               	clrf	((_Buz1+1)^(0+128)+1)
 15596                           
 15597                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 15598  1777  0878               	movf	setBuz@count,w
 15599  1778  00F7               	movwf	??_setBuz
 15600  1779  0877               	movf	??_setBuz,w
 15601  177A  00D0               	movwf	(_Buz1^(0+128)+3)
 15602                           
 15603                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 15604  177B  0020               	movlb	0	; select bank0
 15605  177C  0825               	movf	setBuz@time+1,w
 15606  177D  0021               	movlb	1	; select bank1
 15607  177E  01D4               	clrf	((_Buz1+1)^(0+128)+6)
 15608  177F  07D4               	addwf	((_Buz1+1)^(0+128)+6),f
 15609  1780  0020               	movlb	0	; select bank0
 15610  1781  0824               	movf	setBuz@time,w
 15611  1782  0021               	movlb	1	; select bank1
 15612  1783  01D3               	clrf	(_Buz1^(0+128)+6)
 15613  1784  07D3               	addwf	(_Buz1^(0+128)+6),f
 15614                           
 15615                           ;Buzzer_B1.c: 30: RB3 = 1;
 15616  1785  0020               	movlb	0	; select bank0
 15617  1786  158D               	bsf	13,3	;volatile
 15618                           
 15619                           ;Buzzer_B1.c: 31: } else {
 15620  1787  0008               	return
 15621  1788                     l72:	
 15622                           
 15623                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 15624  1788  19CD               	btfsc	_Buz1^(0+128),3
 15625  1789  2F9A               	goto	l74
 15626                           
 15627                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 15628  178A  15CD               	bsf	_Buz1^(0+128),3
 15629                           
 15630                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 15631  178B  0878               	movf	setBuz@count,w
 15632  178C  00F7               	movwf	??_setBuz
 15633  178D  0877               	movf	??_setBuz,w
 15634  178E  00D1               	movwf	(_Buz1^(0+128)+4)
 15635                           
 15636                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 15637  178F  0020               	movlb	0	; select bank0
 15638  1790  0825               	movf	setBuz@time+1,w
 15639  1791  0021               	movlb	1	; select bank1
 15640  1792  01D6               	clrf	((_Buz1+1)^(0+128)+8)
 15641  1793  07D6               	addwf	((_Buz1+1)^(0+128)+8),f
 15642  1794  0020               	movlb	0	; select bank0
 15643  1795  0824               	movf	setBuz@time,w
 15644  1796  0021               	movlb	1	; select bank1
 15645  1797  01D5               	clrf	(_Buz1^(0+128)+8)
 15646  1798  07D5               	addwf	(_Buz1^(0+128)+8),f
 15647                           
 15648                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 15649  1799  0008               	return
 15650  179A                     l74:	
 15651  179A  1A4D               	btfsc	_Buz1^(0+128),4
 15652  179B  0008               	return
 15653                           
 15654                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 15655  179C  164D               	bsf	_Buz1^(0+128),4
 15656                           
 15657                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 15658  179D  0878               	movf	setBuz@count,w
 15659  179E  00F7               	movwf	??_setBuz
 15660  179F  0877               	movf	??_setBuz,w
 15661  17A0  00D2               	movwf	(_Buz1^(0+128)+5)
 15662                           
 15663                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 15664  17A1  0020               	movlb	0	; select bank0
 15665  17A2  0825               	movf	setBuz@time+1,w
 15666  17A3  0021               	movlb	1	; select bank1
 15667  17A4  01D8               	clrf	((_Buz1+1)^(0+128)+10)
 15668  17A5  07D8               	addwf	((_Buz1+1)^(0+128)+10),f
 15669  17A6  0020               	movlb	0	; select bank0
 15670  17A7  0824               	movf	setBuz@time,w
 15671  17A8  0021               	movlb	1	; select bank1
 15672  17A9  01D7               	clrf	(_Buz1^(0+128)+10)
 15673  17AA  07D7               	addwf	(_Buz1^(0+128)+10),f
 15674  17AB  0008               	return
 15675  17AC                     __end_of_setBuz:	
 15676                           
 15677                           	psect	text101
 15678  17AC                     __ptext101:	
 15679 ;; *************** function ___awdiv *****************
 15680 ;; Defined at:
 15681 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 15682 ;; Parameters:    Size  Location     Type
 15683 ;;  divisor         2    2[COMMON] int 
 15684 ;;  dividend        2    4[COMMON] int 
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;  quotient        2    2[BANK0 ] int 
 15687 ;;  sign            1    1[BANK0 ] unsigned char 
 15688 ;;  counter         1    0[BANK0 ] unsigned char 
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  2    2[COMMON] int 
 15691 ;; Registers used:
 15692 ;;		wreg, status,2, status,0
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;Total ram usage:        9 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:    3
 15705 ;; This function calls:
 15706 ;;		Nothing
 15707 ;; This function is called by:
 15708 ;;		_setBuz
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           
 15713                           ;psect for function ___awdiv
 15714  17AC                     ___awdiv:	
 15715                           
 15716                           ;incstack = 0
 15717                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 15718  17AC  0020               	movlb	0	; select bank0
 15719  17AD  01A1               	clrf	___awdiv@sign
 15720  17AE  1FF3               	btfss	___awdiv@divisor+1,7
 15721  17AF  2FB7               	goto	l7544
 15722  17B0  09F2               	comf	___awdiv@divisor,f
 15723  17B1  09F3               	comf	___awdiv@divisor+1,f
 15724  17B2  0AF2               	incf	___awdiv@divisor,f
 15725  17B3  1903               	skipnz
 15726  17B4  0AF3               	incf	___awdiv@divisor+1,f
 15727  17B5  01A1               	clrf	___awdiv@sign
 15728  17B6  0AA1               	incf	___awdiv@sign,f
 15729  17B7                     l7544:	
 15730  17B7  1FF5               	btfss	___awdiv@dividend+1,7
 15731  17B8  2FC2               	goto	l7550
 15732  17B9  09F4               	comf	___awdiv@dividend,f
 15733  17BA  09F5               	comf	___awdiv@dividend+1,f
 15734  17BB  0AF4               	incf	___awdiv@dividend,f
 15735  17BC  1903               	skipnz
 15736  17BD  0AF5               	incf	___awdiv@dividend+1,f
 15737  17BE  3001               	movlw	1
 15738  17BF  00F6               	movwf	??___awdiv
 15739  17C0  0876               	movf	??___awdiv,w
 15740  17C1  06A1               	xorwf	___awdiv@sign,f
 15741  17C2                     l7550:	
 15742  17C2  01A2               	clrf	___awdiv@quotient
 15743  17C3  01A3               	clrf	___awdiv@quotient+1
 15744  17C4  0873               	movf	___awdiv@divisor+1,w
 15745  17C5  0472               	iorwf	___awdiv@divisor,w
 15746  17C6  1903               	skipnz
 15747  17C7  2FF1               	goto	l7572
 15748  17C8  01A0               	clrf	___awdiv@counter
 15749  17C9  0AA0               	incf	___awdiv@counter,f
 15750  17CA                     l7560:	
 15751  17CA  1BF3               	btfsc	___awdiv@divisor+1,7
 15752  17CB  2FD6               	goto	l7562
 15753  17CC  3001               	movlw	1
 15754  17CD                     u8865:	
 15755  17CD  35F2               	lslf	___awdiv@divisor,f
 15756  17CE  0DF3               	rlf	___awdiv@divisor+1,f
 15757  17CF  0B89               	decfsz	9,f
 15758  17D0  2FCD               	goto	u8865
 15759  17D1  3001               	movlw	1
 15760  17D2  00F6               	movwf	??___awdiv
 15761  17D3  0876               	movf	??___awdiv,w
 15762  17D4  07A0               	addwf	___awdiv@counter,f
 15763  17D5  2FCA               	goto	l7560
 15764  17D6                     l7562:	
 15765  17D6  3001               	movlw	1
 15766  17D7                     u8885:	
 15767  17D7  35A2               	lslf	___awdiv@quotient,f
 15768  17D8  0DA3               	rlf	___awdiv@quotient+1,f
 15769  17D9  0B89               	decfsz	9,f
 15770  17DA  2FD7               	goto	u8885
 15771  17DB  0873               	movf	___awdiv@divisor+1,w
 15772  17DC  0275               	subwf	___awdiv@dividend+1,w
 15773  17DD  1D03               	skipz
 15774  17DE  2FE1               	goto	u8895
 15775  17DF  0872               	movf	___awdiv@divisor,w
 15776  17E0  0274               	subwf	___awdiv@dividend,w
 15777  17E1                     u8895:	
 15778  17E1  1C03               	skipc
 15779  17E2  2FE8               	goto	l7568
 15780  17E3  0872               	movf	___awdiv@divisor,w
 15781  17E4  02F4               	subwf	___awdiv@dividend,f
 15782  17E5  0873               	movf	___awdiv@divisor+1,w
 15783  17E6  3BF5               	subwfb	___awdiv@dividend+1,f
 15784  17E7  1422               	bsf	___awdiv@quotient,0
 15785  17E8                     l7568:	
 15786  17E8  3001               	movlw	1
 15787  17E9                     u8905:	
 15788  17E9  36F3               	lsrf	___awdiv@divisor+1,f
 15789  17EA  0CF2               	rrf	___awdiv@divisor,f
 15790  17EB  0B89               	decfsz	9,f
 15791  17EC  2FE9               	goto	u8905
 15792  17ED  3001               	movlw	1
 15793  17EE  02A0               	subwf	___awdiv@counter,f
 15794  17EF  1D03               	btfss	3,2
 15795  17F0  2FD6               	goto	l7562
 15796  17F1                     l7572:	
 15797  17F1  0821               	movf	___awdiv@sign,w
 15798  17F2  1903               	btfsc	3,2
 15799  17F3  2FF9               	goto	l7576
 15800  17F4  09A2               	comf	___awdiv@quotient,f
 15801  17F5  09A3               	comf	___awdiv@quotient+1,f
 15802  17F6  0AA2               	incf	___awdiv@quotient,f
 15803  17F7  1903               	skipnz
 15804  17F8  0AA3               	incf	___awdiv@quotient+1,f
 15805  17F9                     l7576:	
 15806  17F9  0823               	movf	___awdiv@quotient+1,w
 15807  17FA  01F3               	clrf	?___awdiv+1
 15808  17FB  07F3               	addwf	?___awdiv+1,f
 15809  17FC  0822               	movf	___awdiv@quotient,w
 15810  17FD  01F2               	clrf	?___awdiv
 15811  17FE  07F2               	addwf	?___awdiv,f
 15812  17FF  0008               	return
 15813  1800                     __end_of___awdiv:	
 15814                           
 15815                           	psect	text102
 15816  1189                     __ptext102:	
 15817 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 15818 ;; Defined at:
 15819 ;;		line 271 in file "../src/Dimmer_B1.c"
 15820 ;; Parameters:    Size  Location     Type
 15821 ;;  lights          1    wreg     unsigned char 
 15822 ;; Auto vars:     Size  Location     Type
 15823 ;;  lights          1    3[COMMON] unsigned char 
 15824 ;;  status          1    2[COMMON] unsigned char 
 15825 ;; Return value:  Size  Location     Type
 15826 ;;                  1    wreg      unsigned char 
 15827 ;; Registers used:
 15828 ;;		wreg, status,2
 15829 ;; Tracked objects:
 15830 ;;		On entry : 0/0
 15831 ;;		On exit  : 0/0
 15832 ;;		Unchanged: 0/0
 15833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15838 ;;Total ram usage:        2 bytes
 15839 ;; Hardware stack levels used:    1
 15840 ;; Hardware stack levels required when called:    3
 15841 ;; This function calls:
 15842 ;;		Nothing
 15843 ;; This function is called by:
 15844 ;;		_setDimmerLights_SwOn
 15845 ;;		_setRF_AdjControl
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           
 15850                           ;psect for function _getDimmerIntr_Dimming_Sw
 15851  1189                     _getDimmerIntr_Dimming_Sw:	
 15852                           
 15853                           ;incstack = 0
 15854                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 15855                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 15856  1189  00F3               	movwf	getDimmerIntr_Dimming_Sw@lights
 15857                           
 15858                           ;Dimmer_B1.c: 272: char status = 0;
 15859  118A  01F2               	clrf	getDimmerIntr_Dimming_Sw@status
 15860                           
 15861                           ;Dimmer_B1.c: 274: if (lights == 1) {
 15862  118B  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 15863  118C  3A01               	xorlw	1
 15864  118D  1D03               	skipz
 15865  118E  2994               	goto	l5596
 15866                           
 15867                           ;Dimmer_B1.c: 275: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 15868  118F  3000               	movlw	0
 15869  1190  0021               	movlb	1	; select bank1
 15870  1191  1A20               	btfsc	_DimmerIntr1^(0+128),4
 15871  1192  3001               	movlw	1
 15872  1193  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 15873  1194                     l5596:	
 15874                           
 15875                           ;Dimmer_B1.c: 276: }
 15876                           ;Dimmer_B1.c: 279: if (lights == 2) {
 15877  1194  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 15878  1195  3A02               	xorlw	2
 15879  1196  1D03               	skipz
 15880  1197  299D               	goto	l5600
 15881                           
 15882                           ;Dimmer_B1.c: 280: status = DimmerIntr2.Dimming_Sw == 1 ? 1 : 0;
 15883  1198  3000               	movlw	0
 15884  1199  0021               	movlb	1	; select bank1
 15885  119A  1A30               	btfsc	_DimmerIntr2^(0+128),4
 15886  119B  3001               	movlw	1
 15887  119C  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 15888  119D                     l5600:	
 15889                           
 15890                           ;Dimmer_B1.c: 281: }
 15891                           ;Dimmer_B1.c: 289: return status;
 15892  119D  0872               	movf	getDimmerIntr_Dimming_Sw@status,w
 15893  119E  0008               	return
 15894  119F                     __end_of_getDimmerIntr_Dimming_Sw:	
 15895                           
 15896                           	psect	text103
 15897  15C1                     __ptext103:	
 15898 ;; *************** function _setDimmerLights_SwOff *****************
 15899 ;; Defined at:
 15900 ;;		line 821 in file "../src/Dimmer_B1.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;  sw              1    wreg     unsigned char 
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;  sw              1    4[COMMON] unsigned char 
 15905 ;; Return value:  Size  Location     Type
 15906 ;;		None               void
 15907 ;; Registers used:
 15908 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15918 ;;Total ram usage:        1 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:    4
 15921 ;; This function calls:
 15922 ;;		_DimmerLights_SelectPointer
 15923 ;; This function is called by:
 15924 ;;		_DlyOff_Main
 15925 ;;		_setSw_Main
 15926 ;;		_Exception_Main
 15927 ;; This function uses a non-reentrant model
 15928 ;;
 15929                           
 15930                           
 15931                           ;psect for function _setDimmerLights_SwOff
 15932  15C1                     _setDimmerLights_SwOff:	
 15933                           
 15934                           ;incstack = 0
 15935                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15936                           ;setDimmerLights_SwOff@sw stored from wreg
 15937  15C1  00F4               	movwf	setDimmerLights_SwOff@sw
 15938                           
 15939                           ;Dimmer_B1.c: 823: DimmerLights_SelectPointer(sw);
 15940  15C2  0874               	movf	setDimmerLights_SwOff@sw,w
 15941  15C3  3191  2120  3195   	fcall	_DimmerLights_SelectPointer
 15942                           
 15943                           ;Dimmer_B1.c: 825: if (DimmerLights->SwFlag == 1) {
 15944  15C6  0020               	movlb	0	; select bank0
 15945  15C7  086B               	movf	_DimmerLights,w
 15946  15C8  0086               	movwf	6
 15947  15C9  3001               	movlw	1	; select bank2/3
 15948  15CA  0087               	movwf	7
 15949  15CB  1C01               	btfss	1,0
 15950  15CC  0008               	return
 15951                           
 15952                           ;Dimmer_B1.c: 826: DimmerLights->SwFlag = 0;
 15953  15CD  086B               	movf	_DimmerLights,w
 15954  15CE  0086               	movwf	6
 15955  15CF  3001               	movlw	1	; select bank2/3
 15956  15D0  0087               	movwf	7
 15957  15D1  1001               	bcf	1,0
 15958                           
 15959                           ;Dimmer_B1.c: 827: if (DimmerLights->Status == 1) {
 15960  15D2  0A6B               	incf	_DimmerLights,w
 15961  15D3  0086               	movwf	6
 15962  15D4  3001               	movlw	1	; select bank2/3
 15963  15D5  0087               	movwf	7
 15964  15D6  1C01               	btfss	1,0
 15965  15D7  2DEE               	goto	l5800
 15966                           
 15967                           ;Dimmer_B1.c: 828: if (DimmerLights->DimmingSwFlag == 1) {
 15968  15D8  086B               	movf	_DimmerLights,w
 15969  15D9  0086               	movwf	6
 15970  15DA  3001               	movlw	1	; select bank2/3
 15971  15DB  0087               	movwf	7
 15972  15DC  1D81               	btfss	1,3
 15973  15DD  0008               	return
 15974                           
 15975                           ;Dimmer_B1.c: 829: DimmerLights->DimmingSwFlag = 0;
 15976  15DE  086B               	movf	_DimmerLights,w
 15977  15DF  0086               	movwf	6
 15978  15E0  3001               	movlw	1	; select bank2/3
 15979  15E1  0087               	movwf	7
 15980  15E2  1181               	bcf	1,3
 15981                           
 15982                           ;Dimmer_B1.c: 831: DimmerLights->DimmingTrigger = 1;
 15983  15E3  086B               	movf	_DimmerLights,w
 15984  15E4  0086               	movwf	6
 15985  15E5  3001               	movlw	1	; select bank2/3
 15986  15E6  0087               	movwf	7
 15987  15E7  1601               	bsf	1,4
 15988                           
 15989                           ;Dimmer_B1.c: 832: DimmerLights->DimmingSwitch = 0;
 15990  15E8  086B               	movf	_DimmerLights,w
 15991  15E9  0086               	movwf	6
 15992  15EA  3001               	movlw	1	; select bank2/3
 15993  15EB  0087               	movwf	7
 15994  15EC  1281               	bcf	1,5
 15995                           
 15996                           ;Dimmer_B1.c: 833: }
 15997                           ;Dimmer_B1.c: 834: } else {
 15998  15ED  0008               	return
 15999  15EE                     l5800:	
 16000                           
 16001                           ;Dimmer_B1.c: 840: DimmerLights->Phase = 1;
 16002  15EE  086B               	movf	_DimmerLights,w
 16003  15EF  3E02               	addlw	2
 16004  15F0  0086               	movwf	6
 16005  15F1  3001               	movlw	1	; select bank2/3
 16006  15F2  0087               	movwf	7
 16007  15F3  1401               	bsf	1,0
 16008                           
 16009                           ;Dimmer_B1.c: 841: DimmerLights->PhaseSwitch = 0;
 16010  15F4  086B               	movf	_DimmerLights,w
 16011  15F5  3E02               	addlw	2
 16012  15F6  0086               	movwf	6
 16013  15F7  3001               	movlw	1	; select bank2/3
 16014  15F8  0087               	movwf	7
 16015  15F9  1101               	bcf	1,2
 16016  15FA  0008               	return
 16017  15FB                     __end_of_setDimmerLights_SwOff:	
 16018                           
 16019                           	psect	text104
 16020  1FF1                     __ptext104:	
 16021 ;; *************** function _getDimmerLights_Status *****************
 16022 ;; Defined at:
 16023 ;;		line 1268 in file "../src/Dimmer_B1.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;  lights          1    wreg     unsigned char 
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;  lights          1    4[COMMON] unsigned char 
 16028 ;;  status          1    5[COMMON] unsigned char 
 16029 ;; Return value:  Size  Location     Type
 16030 ;;                  1    wreg      unsigned char 
 16031 ;; Registers used:
 16032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16033 ;; Tracked objects:
 16034 ;;		On entry : 0/0
 16035 ;;		On exit  : 0/0
 16036 ;;		Unchanged: 0/0
 16037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16042 ;;Total ram usage:        2 bytes
 16043 ;; Hardware stack levels used:    1
 16044 ;; Hardware stack levels required when called:    4
 16045 ;; This function calls:
 16046 ;;		_DimmerLights_SelectPointer
 16047 ;; This function is called by:
 16048 ;;		_DlyOff_Main
 16049 ;;		_DimmerLights_AssignationDimming
 16050 ;;		_Exception_Main
 16051 ;;		_setRF_AdjControl
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           
 16056                           ;psect for function _getDimmerLights_Status
 16057  1FF1                     _getDimmerLights_Status:	
 16058                           
 16059                           ;incstack = 0
 16060                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16061                           ;getDimmerLights_Status@lights stored from wreg
 16062  1FF1  00F4               	movwf	getDimmerLights_Status@lights
 16063                           
 16064                           ;Dimmer_B1.c: 1269: DimmerLights_SelectPointer(lights);
 16065  1FF2  0874               	movf	getDimmerLights_Status@lights,w
 16066  1FF3  3191  2120         	fcall	_DimmerLights_SelectPointer
 16067                           
 16068                           ;Dimmer_B1.c: 1270: char status = DimmerLights->Status == 1 ? 1 : 0;
 16069  1FF5  0020               	movlb	0	; select bank0
 16070  1FF6  0A6B               	incf	_DimmerLights,w
 16071  1FF7  0086               	movwf	6
 16072  1FF8  3001               	movlw	1	; select bank2/3
 16073  1FF9  0087               	movwf	7
 16074  1FFA  3000               	movlw	0
 16075  1FFB  1801               	btfsc	1,0
 16076  1FFC  3001               	movlw	1
 16077  1FFD  00F5               	movwf	getDimmerLights_Status@status
 16078                           
 16079                           ;Dimmer_B1.c: 1271: return status;
 16080  1FFE  0875               	movf	getDimmerLights_Status@status,w
 16081  1FFF  0008               	return
 16082  2000                     __end_of_getDimmerLights_Status:	
 16083                           
 16084                           	psect	text105
 16085  1120                     __ptext105:	
 16086 ;; *************** function _DimmerLights_SelectPointer *****************
 16087 ;; Defined at:
 16088 ;;		line 684 in file "../src/Dimmer_B1.c"
 16089 ;; Parameters:    Size  Location     Type
 16090 ;;  lights          1    wreg     unsigned char 
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;  lights          1    3[COMMON] unsigned char 
 16093 ;; Return value:  Size  Location     Type
 16094 ;;		None               void
 16095 ;; Registers used:
 16096 ;;		wreg
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;Total ram usage:        2 bytes
 16107 ;; Hardware stack levels used:    1
 16108 ;; Hardware stack levels required when called:    3
 16109 ;; This function calls:
 16110 ;;		Nothing
 16111 ;; This function is called by:
 16112 ;;		_setDimmerLights_SwOn
 16113 ;;		_setDimmerLights_SwOff
 16114 ;;		_setDimmerLights_DimmingOn
 16115 ;;		_setDimmerLights_Main
 16116 ;;		_DimmerLights_TwoPhase_Main
 16117 ;;		_getDimmerLights_Status
 16118 ;;		_setDimmerLights_Status
 16119 ;;		_setDimmerLights_DimmingRun
 16120 ;;		_setRF_AdjControl
 16121 ;; This function uses a non-reentrant model
 16122 ;;
 16123                           
 16124                           
 16125                           ;psect for function _DimmerLights_SelectPointer
 16126  1120                     _DimmerLights_SelectPointer:	
 16127                           
 16128                           ;incstack = 0
 16129                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 16130                           ;DimmerLights_SelectPointer@lights stored from wreg
 16131  1120  00F3               	movwf	DimmerLights_SelectPointer@lights
 16132                           
 16133                           ;Dimmer_B1.c: 686: if (lights == 1) {
 16134  1121  0873               	movf	DimmerLights_SelectPointer@lights,w
 16135  1122  3A01               	xorlw	1
 16136  1123  1D03               	skipz
 16137  1124  292B               	goto	l5152
 16138                           
 16139                           ;Dimmer_B1.c: 687: DimmerLights = &DimmerLights1;
 16140  1125  304D               	movlw	_DimmerLights1& (0+255)
 16141  1126  00F2               	movwf	??_DimmerLights_SelectPointer
 16142  1127  0872               	movf	??_DimmerLights_SelectPointer,w
 16143  1128  0020               	movlb	0	; select bank0
 16144  1129  00EB               	movwf	_DimmerLights
 16145                           
 16146                           ;Dimmer_B1.c: 688: }
 16147  112A  0008               	return
 16148  112B                     l5152:	
 16149                           
 16150                           ;Dimmer_B1.c: 691: else if (lights == 2) {
 16151  112B  0873               	movf	DimmerLights_SelectPointer@lights,w
 16152  112C  3A02               	xorlw	2
 16153  112D  1D03               	skipz
 16154  112E  0008               	return
 16155                           
 16156                           ;Dimmer_B1.c: 692: DimmerLights = &DimmerLights2;
 16157  112F  3056               	movlw	_DimmerLights2& (0+255)
 16158  1130  00F2               	movwf	??_DimmerLights_SelectPointer
 16159  1131  0872               	movf	??_DimmerLights_SelectPointer,w
 16160  1132  0020               	movlb	0	; select bank0
 16161  1133  00EB               	movwf	_DimmerLights
 16162  1134  0008               	return
 16163  1135                     __end_of_DimmerLights_SelectPointer:	
 16164                           
 16165                           	psect	text106
 16166  1F32                     __ptext106:	
 16167 ;; *************** function _DelayOff_Initialization *****************
 16168 ;; Defined at:
 16169 ;;		line 26 in file "../src/DelayOff_B1.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;		None
 16172 ;; Auto vars:     Size  Location     Type
 16173 ;;		None
 16174 ;; Return value:  Size  Location     Type
 16175 ;;		None               void
 16176 ;; Registers used:
 16177 ;;		wreg, status,2, status,0, pclath, cstack
 16178 ;; Tracked objects:
 16179 ;;		On entry : 0/0
 16180 ;;		On exit  : 0/0
 16181 ;;		Unchanged: 0/0
 16182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;Total ram usage:        0 bytes
 16188 ;; Hardware stack levels used:    1
 16189 ;; Hardware stack levels required when called:    5
 16190 ;; This function calls:
 16191 ;;		_DlyOff_Initialization
 16192 ;; This function is called by:
 16193 ;;		_main
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           
 16198                           ;psect for function _DelayOff_Initialization
 16199  1F32                     _DelayOff_Initialization:	
 16200                           
 16201                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 16202                           
 16203                           ;incstack = 0
 16204                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 16205  1F32  3001               	movlw	1
 16206  1F33  319E  26F9  319F   	fcall	_DlyOff_Initialization
 16207                           
 16208                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 16209  1F36  3002               	movlw	2
 16210  1F37  319E  26F9         	fcall	_DlyOff_Initialization
 16211  1F39  0008               	return
 16212  1F3A                     __end_of_DelayOff_Initialization:	
 16213                           
 16214                           	psect	text107
 16215  1EF9                     __ptext107:	
 16216 ;; *************** function _DlyOff_Initialization *****************
 16217 ;; Defined at:
 16218 ;;		line 56 in file "../src/DelayOff_B1.c"
 16219 ;; Parameters:    Size  Location     Type
 16220 ;;  sw              1    wreg     unsigned char 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;  sw              1    4[COMMON] unsigned char 
 16223 ;; Return value:  Size  Location     Type
 16224 ;;		None               void
 16225 ;; Registers used:
 16226 ;;		wreg, status,2, status,0, pclath, cstack
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16236 ;;Total ram usage:        1 bytes
 16237 ;; Hardware stack levels used:    1
 16238 ;; Hardware stack levels required when called:    4
 16239 ;; This function calls:
 16240 ;;		_DelayOffPointSelect
 16241 ;; This function is called by:
 16242 ;;		_DelayOff_Initialization
 16243 ;; This function uses a non-reentrant model
 16244 ;;
 16245                           
 16246                           
 16247                           ;psect for function _DlyOff_Initialization
 16248  1EF9                     _DlyOff_Initialization:	
 16249                           
 16250                           ;incstack = 0
 16251                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 16252                           ;DlyOff_Initialization@sw stored from wreg
 16253  1EF9  00F4               	movwf	DlyOff_Initialization@sw
 16254                           
 16255                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 16256  1EFA  0874               	movf	DlyOff_Initialization@sw,w
 16257  1EFB  3191  210B         	fcall	_DelayOffPointSelect
 16258  1EFD  0008               	return
 16259  1EFE                     __end_of_DlyOff_Initialization:	
 16260                           
 16261                           	psect	text108
 16262  110B                     __ptext108:	
 16263 ;; *************** function _DelayOffPointSelect *****************
 16264 ;; Defined at:
 16265 ;;		line 7 in file "../src/DelayOff_B1.c"
 16266 ;; Parameters:    Size  Location     Type
 16267 ;;  sw              1    wreg     unsigned char 
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;  sw              1    3[COMMON] unsigned char 
 16270 ;; Return value:  Size  Location     Type
 16271 ;;		None               void
 16272 ;; Registers used:
 16273 ;;		wreg
 16274 ;; Tracked objects:
 16275 ;;		On entry : 0/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16283 ;;Total ram usage:        2 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; Hardware stack levels required when called:    3
 16286 ;; This function calls:
 16287 ;;		Nothing
 16288 ;; This function is called by:
 16289 ;;		_DlyOff_Initialization
 16290 ;;		_DlyOff_Main
 16291 ;;		_setDelayOff_GO
 16292 ;;		_getDelayOff_GO
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           
 16297                           ;psect for function _DelayOffPointSelect
 16298  110B                     _DelayOffPointSelect:	
 16299                           
 16300                           ;incstack = 0
 16301                           ; Regs used in _DelayOffPointSelect: [wreg]
 16302                           ;DelayOffPointSelect@sw stored from wreg
 16303  110B  00F3               	movwf	DelayOffPointSelect@sw
 16304                           
 16305                           ;DelayOff_B1.c: 9: if (sw == 1) {
 16306  110C  0873               	movf	DelayOffPointSelect@sw,w
 16307  110D  3A01               	xorlw	1
 16308  110E  1D03               	skipz
 16309  110F  2916               	goto	l5128
 16310                           
 16311                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 16312  1110  305F               	movlw	_DlySw1& (0+255)
 16313  1111  00F2               	movwf	??_DelayOffPointSelect
 16314  1112  0872               	movf	??_DelayOffPointSelect,w
 16315  1113  0020               	movlb	0	; select bank0
 16316  1114  00EA               	movwf	_DelayOff
 16317                           
 16318                           ;DelayOff_B1.c: 11: }
 16319  1115  0008               	return
 16320  1116                     l5128:	
 16321                           
 16322                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 16323  1116  0873               	movf	DelayOffPointSelect@sw,w
 16324  1117  3A02               	xorlw	2
 16325  1118  1D03               	skipz
 16326  1119  0008               	return
 16327                           
 16328                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 16329  111A  30E7               	movlw	_DlySw2& (0+255)
 16330  111B  00F2               	movwf	??_DelayOffPointSelect
 16331  111C  0872               	movf	??_DelayOffPointSelect,w
 16332  111D  0020               	movlb	0	; select bank0
 16333  111E  00EA               	movwf	_DelayOff
 16334  111F  0008               	return
 16335  1120                     __end_of_DelayOffPointSelect:	
 16336                           
 16337                           	psect	text109
 16338  16C1                     __ptext109:	
 16339 ;; *************** function _Buzzer_Main *****************
 16340 ;; Defined at:
 16341 ;;		line 46 in file "../src/Buzzer_B1.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;		None
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;		None
 16346 ;; Return value:  Size  Location     Type
 16347 ;;		None               void
 16348 ;; Registers used:
 16349 ;;		wreg, status,2, status,0
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16359 ;;Total ram usage:        1 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:    3
 16362 ;; This function calls:
 16363 ;;		Nothing
 16364 ;; This function is called by:
 16365 ;;		_main
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           
 16370                           ;psect for function _Buzzer_Main
 16371  16C1                     _Buzzer_Main:	
 16372                           
 16373                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 16374                           
 16375                           ;incstack = 0
 16376                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 16377  16C1  0021               	movlb	1	; select bank1
 16378  16C2  1CCD               	btfss	_Buz1^(0+128),1
 16379  16C3  0008               	return
 16380                           
 16381                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 16382  16C4  3001               	movlw	1
 16383  16C5  07CE               	addwf	(_Buz1^(0+128)+1),f
 16384  16C6  3000               	movlw	0
 16385  16C7  3DCF               	addwfc	((_Buz1+1)^(0+128)+1),f
 16386                           
 16387                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 16388  16C8  0854               	movf	((_Buz1+1)^(0+128)+6),w
 16389  16C9  024F               	subwf	((_Buz1+1)^(0+128)+1),w
 16390  16CA  1D03               	skipz
 16391  16CB  2ECE               	goto	u7685
 16392  16CC  0853               	movf	(_Buz1^(0+128)+6),w
 16393  16CD  024E               	subwf	(_Buz1^(0+128)+1),w
 16394  16CE                     u7685:	
 16395  16CE  1C03               	skipc
 16396  16CF  0008               	return
 16397                           
 16398                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 16399  16D0  01CE               	clrf	(_Buz1^(0+128)+1)
 16400  16D1  01CF               	clrf	((_Buz1+1)^(0+128)+1)
 16401                           
 16402                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 16403  16D2  12CD               	bcf	_Buz1^(0+128),5
 16404  16D3  0020               	movlb	0	; select bank0
 16405  16D4  1D8D               	btfss	13,3	;volatile
 16406  16D5  2ED8               	goto	l6820
 16407  16D6  0021               	movlb	1	; select bank1
 16408  16D7  16CD               	bsf	_Buz1^(0+128),5
 16409  16D8                     l6820:	
 16410                           
 16411                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 16412  16D8  0021               	movlb	1	; select bank1
 16413  16D9  1ACD               	btfsc	_Buz1^(0+128),5
 16414  16DA  2F00               	goto	l82
 16415                           
 16416                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 16417  16DB  08D0               	movf	(_Buz1^(0+128)+3),f
 16418  16DC  1D03               	skipz
 16419  16DD  2EFC               	goto	l83
 16420                           
 16421                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 16422  16DE  1DCD               	btfss	_Buz1^(0+128),3
 16423  16DF  2EEC               	goto	l84
 16424                           
 16425                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 16426  16E0  11CD               	bcf	_Buz1^(0+128),3
 16427                           
 16428                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 16429  16E1  0851               	movf	(_Buz1^(0+128)+4),w
 16430  16E2  00F2               	movwf	??_Buzzer_Main
 16431  16E3  0872               	movf	??_Buzzer_Main,w
 16432  16E4  00D0               	movwf	(_Buz1^(0+128)+3)
 16433                           
 16434                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 16435  16E5  0856               	movf	((_Buz1+1)^(0+128)+8),w
 16436  16E6  01D4               	clrf	((_Buz1+1)^(0+128)+6)
 16437  16E7  07D4               	addwf	((_Buz1+1)^(0+128)+6),f
 16438  16E8  0855               	movf	(_Buz1^(0+128)+8),w
 16439  16E9  01D3               	clrf	(_Buz1^(0+128)+6)
 16440  16EA  07D3               	addwf	(_Buz1^(0+128)+6),f
 16441                           
 16442                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 16443  16EB  0008               	return
 16444  16EC                     l84:	
 16445  16EC  1E4D               	btfss	_Buz1^(0+128),4
 16446  16ED  2EFA               	goto	l86
 16447                           
 16448                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 16449  16EE  124D               	bcf	_Buz1^(0+128),4
 16450                           
 16451                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 16452  16EF  0852               	movf	(_Buz1^(0+128)+5),w
 16453  16F0  00F2               	movwf	??_Buzzer_Main
 16454  16F1  0872               	movf	??_Buzzer_Main,w
 16455  16F2  00D0               	movwf	(_Buz1^(0+128)+3)
 16456                           
 16457                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 16458  16F3  0858               	movf	((_Buz1+1)^(0+128)+10),w
 16459  16F4  01D4               	clrf	((_Buz1+1)^(0+128)+6)
 16460  16F5  07D4               	addwf	((_Buz1+1)^(0+128)+6),f
 16461  16F6  0857               	movf	(_Buz1^(0+128)+10),w
 16462  16F7  01D3               	clrf	(_Buz1^(0+128)+6)
 16463  16F8  07D3               	addwf	(_Buz1^(0+128)+6),f
 16464                           
 16465                           ;Buzzer_B1.c: 62: } else {
 16466  16F9  0008               	return
 16467  16FA                     l86:	
 16468                           
 16469                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 16470  16FA  10CD               	bcf	_Buz1^(0+128),1
 16471                           
 16472                           ;Buzzer_B1.c: 64: }
 16473                           ;Buzzer_B1.c: 65: } else {
 16474  16FB  0008               	return
 16475  16FC                     l83:	
 16476                           
 16477                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 16478  16FC  16CD               	bsf	_Buz1^(0+128),5
 16479                           
 16480                           ;Buzzer_B1.c: 68: RB3 = 1;
 16481  16FD  0020               	movlb	0	; select bank0
 16482  16FE  158D               	bsf	13,3	;volatile
 16483                           
 16484                           ;Buzzer_B1.c: 69: }
 16485                           ;Buzzer_B1.c: 70: } else {
 16486  16FF  0008               	return
 16487  1700                     l82:	
 16488                           
 16489                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 16490  1700  12CD               	bcf	_Buz1^(0+128),5
 16491                           
 16492                           ;Buzzer_B1.c: 73: RB3 = 0;
 16493  1701  0020               	movlb	0	; select bank0
 16494  1702  118D               	bcf	13,3	;volatile
 16495                           
 16496                           ;Buzzer_B1.c: 75: Buz1.Count--;
 16497  1703  3001               	movlw	1
 16498  1704  0021               	movlb	1	; select bank1
 16499  1705  02D0               	subwf	(_Buz1^(0+128)+3),f
 16500  1706  0008               	return
 16501  1707                     __end_of_Buzzer_Main:	
 16502                           
 16503                           	psect	text110
 16504  1EE9                     __ptext110:	
 16505 ;; *************** function _Buzzer_Initialization *****************
 16506 ;; Defined at:
 16507 ;;		line 11 in file "../src/Buzzer_B1.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;		None               void
 16514 ;; Registers used:
 16515 ;;		None
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;Total ram usage:        0 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:    3
 16528 ;; This function calls:
 16529 ;;		Nothing
 16530 ;; This function is called by:
 16531 ;;		_main
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           
 16536                           ;psect for function _Buzzer_Initialization
 16537  1EE9                     _Buzzer_Initialization:	
 16538                           
 16539                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 16540                           
 16541                           ;incstack = 0
 16542                           ; Regs used in _Buzzer_Initialization: []
 16543  1EE9  0021               	movlb	1	; select bank1
 16544  1EEA  144D               	bsf	_Buz1^(0+128),0
 16545  1EEB  0008               	return
 16546  1EEC                     __end_of_Buzzer_Initialization:	
 16547                           
 16548                           	psect	intentry
 16549  0004                     __pintentry:	
 16550 ;; *************** function _ISR *****************
 16551 ;; Defined at:
 16552 ;;		line 116 in file "../src/MCU_B1.c"
 16553 ;; Parameters:    Size  Location     Type
 16554 ;;		None
 16555 ;; Auto vars:     Size  Location     Type
 16556 ;;		None
 16557 ;; Return value:  Size  Location     Type
 16558 ;;		None               void
 16559 ;; Registers used:
 16560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16561 ;; Tracked objects:
 16562 ;;		On entry : 0/0
 16563 ;;		On exit  : 0/0
 16564 ;;		Unchanged: 0/0
 16565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16570 ;;Total ram usage:        1 bytes
 16571 ;; Hardware stack levels used:    1
 16572 ;; Hardware stack levels required when called:    2
 16573 ;; This function calls:
 16574 ;;		_IOC_ISR
 16575 ;;		_TMR1_ISR
 16576 ;; This function is called by:
 16577 ;;		Interrupt level 1
 16578 ;; This function uses a non-reentrant model
 16579 ;;
 16580                           
 16581  0004                     _ISR:	
 16582                           
 16583                           ;incstack = 0
 16584                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16585  0004  147E               	bsf	126,0	;set compiler interrupt flag
 16586  0005  3180               	pagesel	$
 16587  0006  0020               	movlb	0	; select bank0
 16588  0007  087F               	movf	127,w
 16589  0008  00F1               	movwf	??_ISR
 16590                           
 16591                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 16592  0009  0021               	movlb	1	; select bank1
 16593  000A  1C11               	btfss	17,0	;volatile
 16594  000B  2812               	goto	i1l7412
 16595  000C  0020               	movlb	0	; select bank0
 16596  000D  1C11               	btfss	17,0	;volatile
 16597  000E  2812               	goto	i1l7412
 16598                           
 16599                           ;MCU_B1.c: 126: TMR1_ISR();
 16600  000F  3192  2293  3180   	fcall	_TMR1_ISR
 16601  0012                     i1l7412:	
 16602                           
 16603                           ;MCU_B1.c: 127: }
 16604                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 16605  0012  198B               	btfsc	11,3	;volatile
 16606  0013  1C0B               	btfss	11,0	;volatile
 16607  0014  281A               	goto	i1l1086
 16608  0015  0027               	movlb	7	; select bank7
 16609  0016  1D16               	btfss	22,2	;volatile
 16610  0017  281A               	goto	i1l1086
 16611                           
 16612                           ;MCU_B1.c: 139: IOC_ISR();
 16613  0018  319F  279B         	fcall	_IOC_ISR
 16614  001A                     i1l1086:	
 16615                           ;MCU_B1.c: 140: }
 16616                           ;MCU_B1.c: 148: return;
 16617                           
 16618  001A  0871               	movf	??_ISR,w
 16619  001B  0020               	movlb	0	; select bank0
 16620  001C  00FF               	movwf	127
 16621  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 16622  001E  0009               	retfie
 16623  001F                     __end_of_ISR:	
 16624                           
 16625                           	psect	text112
 16626  1293                     __ptext112:	
 16627 ;; *************** function _TMR1_ISR *****************
 16628 ;; Defined at:
 16629 ;;		line 236 in file "../src/MCU_B1.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;		None
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;		None
 16634 ;; Return value:  Size  Location     Type
 16635 ;;		None               void
 16636 ;; Registers used:
 16637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16638 ;; Tracked objects:
 16639 ;;		On entry : 0/0
 16640 ;;		On exit  : 0/0
 16641 ;;		Unchanged: 0/0
 16642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;Total ram usage:        0 bytes
 16648 ;; Hardware stack levels used:    1
 16649 ;; Hardware stack levels required when called:    1
 16650 ;; This function calls:
 16651 ;;		_DimmerLights_TMR_1
 16652 ;;		_DimmerLights_TMR_2
 16653 ;; This function is called by:
 16654 ;;		_ISR
 16655 ;; This function uses a non-reentrant model
 16656 ;;
 16657                           
 16658                           
 16659                           ;psect for function _TMR1_ISR
 16660  1293                     _TMR1_ISR:	
 16661                           
 16662                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 16663                           
 16664                           ;incstack = 0
 16665                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16666  1293  3195  2519  3192   	fcall	_DimmerLights_TMR_1
 16667                           
 16668                           ;MCU_B1.c: 259: DimmerLights_TMR_2();
 16669  1296  3195  2551  3192   	fcall	_DimmerLights_TMR_2
 16670                           
 16671                           ;MCU_B1.c: 269: Timer1.Count++;
 16672  1299  3001               	movlw	1
 16673  129A  0021               	movlb	1	; select bank1
 16674  129B  07DA               	addwf	(_Timer1^(0+128)+1),f
 16675  129C  3000               	movlw	0
 16676  129D  3DDB               	addwfc	((_Timer1+1)^(0+128)+1),f
 16677                           
 16678                           ;MCU_B1.c: 270: if (Timer1.Count == (int)(20*10)) {
 16679  129E  3001               	movlw	1
 16680  129F  3ED9               	addlw	_Timer1& (0+255)
 16681  12A0  0086               	movwf	6
 16682  12A1  0187               	clrf	7
 16683  12A2  3F40               	moviw [0]fsr1
 16684  12A3  3AC8               	xorlw	200
 16685  12A4  1D03               	skipz
 16686  12A5  2AA8               	goto	u778_25
 16687  12A6  3F41               	moviw [1]fsr1
 16688  12A7  3A00               	xorlw	0
 16689  12A8                     u778_25:	
 16690  12A8  1D03               	skipz
 16691  12A9  2AAD               	goto	i1l6882
 16692                           
 16693                           ;MCU_B1.c: 271: Timer1.Count = 0;
 16694  12AA  01DA               	clrf	(_Timer1^(0+128)+1)
 16695  12AB  01DB               	clrf	((_Timer1+1)^(0+128)+1)
 16696                           
 16697                           ;MCU_B1.c: 272: Timer1.Timeout = 1;
 16698  12AC  1459               	bsf	_Timer1^(0+128),0
 16699  12AD                     i1l6882:	
 16700                           
 16701                           ;MCU_B1.c: 273: }
 16702                           ;MCU_B1.c: 275: TMR1H = (int)((65536-1480)/256);
 16703  12AD  30FA               	movlw	250
 16704  12AE  0020               	movlb	0	; select bank0
 16705  12AF  0097               	movwf	23	;volatile
 16706                           
 16707                           ;MCU_B1.c: 276: TMR1L = (int)((65536-1480)%256);
 16708  12B0  3038               	movlw	56
 16709  12B1  0096               	movwf	22	;volatile
 16710                           
 16711                           ;MCU_B1.c: 277: TMR1IF = 0;
 16712  12B2  1011               	bcf	17,0	;volatile
 16713  12B3  0008               	return
 16714  12B4                     __end_of_TMR1_ISR:	
 16715                           
 16716                           	psect	text113
 16717  1551                     __ptext113:	
 16718 ;; *************** function _DimmerLights_TMR_2 *****************
 16719 ;; Defined at:
 16720 ;;		line 1891 in file "../src/Dimmer_B1.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;		None
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;		None
 16725 ;; Return value:  Size  Location     Type
 16726 ;;		None               void
 16727 ;; Registers used:
 16728 ;;		wreg, status,2, status,0
 16729 ;; Tracked objects:
 16730 ;;		On entry : 0/0
 16731 ;;		On exit  : 0/0
 16732 ;;		Unchanged: 0/0
 16733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;Total ram usage:        1 bytes
 16739 ;; Hardware stack levels used:    1
 16740 ;; This function calls:
 16741 ;;		Nothing
 16742 ;; This function is called by:
 16743 ;;		_TMR1_ISR
 16744 ;; This function uses a non-reentrant model
 16745 ;;
 16746                           
 16747                           
 16748                           ;psect for function _DimmerLights_TMR_2
 16749  1551                     _DimmerLights_TMR_2:	
 16750                           
 16751                           ;Dimmer_B1.c: 1893: if (DimmerIntr2.Start == 1) {
 16752                           
 16753                           ;incstack = 0
 16754                           ; Regs used in _DimmerLights_TMR_2: [wreg+status,2+status,0]
 16755  1551  0021               	movlb	1	; select bank1
 16756  1552  1D30               	btfss	_DimmerIntr2^(0+128),2
 16757  1553  2D77               	goto	i1l699
 16758                           
 16759                           ;Dimmer_B1.c: 1894: DimmerIntr2.Count++;
 16760  1554  3001               	movlw	1
 16761  1555  00F0               	movwf	??_DimmerLights_TMR_2
 16762  1556  0870               	movf	??_DimmerLights_TMR_2,w
 16763  1557  07B2               	addwf	(_DimmerIntr2^(0+128)+2),f
 16764                           
 16765                           ;Dimmer_B1.c: 1896: if (DimmerIntr2.Count == DimmerIntr2.TuneEnd_Value) {
 16766  1558  0832               	movf	(_DimmerIntr2^(0+128)+2),w
 16767  1559  063F               	xorwf	(_DimmerIntr2^(0+128)+15),w
 16768  155A  1D03               	skipz
 16769  155B  2D5E               	goto	i1l6416
 16770                           
 16771                           ;Dimmer_B1.c: 1897: DimmerIntr2.Count = 0;
 16772  155C  01B2               	clrf	(_DimmerIntr2^(0+128)+2)
 16773                           
 16774                           ;Dimmer_B1.c: 1898: DimmerIntr2.Start = 0;
 16775  155D  1130               	bcf	_DimmerIntr2^(0+128),2
 16776  155E                     i1l6416:	
 16777                           
 16778                           ;Dimmer_B1.c: 1899: }
 16779                           ;Dimmer_B1.c: 1903: if (DimmerIntr2.Count == DimmerIntr2.TuneValue2_Value) {
 16780  155E  0832               	movf	(_DimmerIntr2^(0+128)+2),w
 16781  155F  063C               	xorwf	(_DimmerIntr2^(0+128)+12),w
 16782  1560  1903               	btfsc	3,2
 16783                           
 16784                           ;Dimmer_B1.c: 1904: if (DimmerIntr2.ControlStatus == 1) {
 16785  1561  1DB0               	btfss	_DimmerIntr2^(0+128),3
 16786  1562  2D65               	goto	i1l6422
 16787                           
 16788                           ;Dimmer_B1.c: 1905: RA7 = 0;
 16789  1563  0020               	movlb	0	; select bank0
 16790  1564  138C               	bcf	12,7	;volatile
 16791  1565                     i1l6422:	
 16792                           
 16793                           ;Dimmer_B1.c: 1906: }
 16794                           ;Dimmer_B1.c: 1907: }
 16795                           ;Dimmer_B1.c: 1910: if (DimmerIntr2.Count == DimmerIntr2.TuneValue3_Value) {
 16796  1565  0021               	movlb	1	; select bank1
 16797  1566  0832               	movf	(_DimmerIntr2^(0+128)+2),w
 16798  1567  063D               	xorwf	(_DimmerIntr2^(0+128)+13),w
 16799  1568  1903               	btfsc	3,2
 16800                           
 16801                           ;Dimmer_B1.c: 1911: if (DimmerIntr2.ControlStatus == 1) {
 16802  1569  1DB0               	btfss	_DimmerIntr2^(0+128),3
 16803  156A  2D6D               	goto	i1l6428
 16804                           
 16805                           ;Dimmer_B1.c: 1912: RA7 = 1;
 16806  156B  0020               	movlb	0	; select bank0
 16807  156C  178C               	bsf	12,7	;volatile
 16808  156D                     i1l6428:	
 16809                           
 16810                           ;Dimmer_B1.c: 1913: }
 16811                           ;Dimmer_B1.c: 1914: }
 16812                           ;Dimmer_B1.c: 1917: if (DimmerIntr2.Count == DimmerIntr2.TuneValue4_Value) {
 16813  156D  0021               	movlb	1	; select bank1
 16814  156E  0832               	movf	(_DimmerIntr2^(0+128)+2),w
 16815  156F  063E               	xorwf	(_DimmerIntr2^(0+128)+14),w
 16816  1570  1D03               	skipz
 16817  1571  0008               	return
 16818                           
 16819                           ;Dimmer_B1.c: 1918: if (DimmerIntr2.ControlStatus == 1) {
 16820  1572  1DB0               	btfss	_DimmerIntr2^(0+128),3
 16821  1573  0008               	return
 16822                           
 16823                           ;Dimmer_B1.c: 1919: RA7 = 0;
 16824  1574  0020               	movlb	0	; select bank0
 16825  1575  138C               	bcf	12,7	;volatile
 16826                           
 16827                           ;Dimmer_B1.c: 1920: }
 16828                           ;Dimmer_B1.c: 1923: }
 16829                           ;Dimmer_B1.c: 1925: } else {
 16830  1576  0008               	return
 16831  1577                     i1l699:	
 16832                           
 16833                           ;Dimmer_B1.c: 1926: if (DimmerIntr2.GO == 1) {
 16834  1577  1C30               	btfss	_DimmerIntr2^(0+128),0
 16835  1578  0008               	return
 16836                           
 16837                           ;Dimmer_B1.c: 1927: DimmerIntr2.Count++;
 16838  1579  3001               	movlw	1
 16839  157A  00F0               	movwf	??_DimmerLights_TMR_2
 16840  157B  0870               	movf	??_DimmerLights_TMR_2,w
 16841  157C  07B2               	addwf	(_DimmerIntr2^(0+128)+2),f
 16842                           
 16843                           ;Dimmer_B1.c: 1928: if (DimmerIntr2.Count == 4) {
 16844  157D  0832               	movf	(_DimmerIntr2^(0+128)+2),w
 16845  157E  3A04               	xorlw	4
 16846  157F  1D03               	skipz
 16847  1580  0008               	return
 16848                           
 16849                           ;Dimmer_B1.c: 1929: DimmerIntr2.Count = 0;
 16850  1581  01B2               	clrf	(_DimmerIntr2^(0+128)+2)
 16851                           
 16852                           ;Dimmer_B1.c: 1930: DimmerIntr2.GO = 0;
 16853  1582  1030               	bcf	_DimmerIntr2^(0+128),0
 16854                           
 16855                           ;Dimmer_B1.c: 1931: DimmerIntr2.Start = 1;
 16856  1583  1530               	bsf	_DimmerIntr2^(0+128),2
 16857                           
 16858                           ;Dimmer_B1.c: 1933: if (DimmerIntr2.ControlStatus == 1) {
 16859  1584  1DB0               	btfss	_DimmerIntr2^(0+128),3
 16860  1585  0008               	return
 16861                           
 16862                           ;Dimmer_B1.c: 1934: RA7 = 1;
 16863  1586  0020               	movlb	0	; select bank0
 16864  1587  178C               	bsf	12,7	;volatile
 16865  1588  0008               	return
 16866  1589                     __end_of_DimmerLights_TMR_2:	
 16867                           
 16868                           	psect	text114
 16869  1519                     __ptext114:	
 16870 ;; *************** function _DimmerLights_TMR_1 *****************
 16871 ;; Defined at:
 16872 ;;		line 1730 in file "../src/Dimmer_B1.c"
 16873 ;; Parameters:    Size  Location     Type
 16874 ;;		None
 16875 ;; Auto vars:     Size  Location     Type
 16876 ;;		None
 16877 ;; Return value:  Size  Location     Type
 16878 ;;		None               void
 16879 ;; Registers used:
 16880 ;;		wreg, status,2, status,0
 16881 ;; Tracked objects:
 16882 ;;		On entry : 0/0
 16883 ;;		On exit  : 0/0
 16884 ;;		Unchanged: 0/0
 16885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16890 ;;Total ram usage:        1 bytes
 16891 ;; Hardware stack levels used:    1
 16892 ;; This function calls:
 16893 ;;		Nothing
 16894 ;; This function is called by:
 16895 ;;		_TMR1_ISR
 16896 ;; This function uses a non-reentrant model
 16897 ;;
 16898                           
 16899                           
 16900                           ;psect for function _DimmerLights_TMR_1
 16901  1519                     _DimmerLights_TMR_1:	
 16902                           
 16903                           ;Dimmer_B1.c: 1733: if (DimmerIntr1.Start == 1) {
 16904                           
 16905                           ;incstack = 0
 16906                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 16907  1519  0021               	movlb	1	; select bank1
 16908  151A  1D20               	btfss	_DimmerIntr1^(0+128),2
 16909  151B  2D3F               	goto	i1l675
 16910                           
 16911                           ;Dimmer_B1.c: 1734: DimmerIntr1.Count++;
 16912  151C  3001               	movlw	1
 16913  151D  00F0               	movwf	??_DimmerLights_TMR_1
 16914  151E  0870               	movf	??_DimmerLights_TMR_1,w
 16915  151F  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 16916                           
 16917                           ;Dimmer_B1.c: 1736: if (DimmerIntr1.Count == DimmerIntr1.TuneEnd_Value) {
 16918  1520  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 16919  1521  062F               	xorwf	(_DimmerIntr1^(0+128)+15),w
 16920  1522  1D03               	skipz
 16921  1523  2D26               	goto	i1l6354
 16922                           
 16923                           ;Dimmer_B1.c: 1737: DimmerIntr1.Count = 0;
 16924  1524  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 16925                           
 16926                           ;Dimmer_B1.c: 1738: DimmerIntr1.Start = 0;
 16927  1525  1120               	bcf	_DimmerIntr1^(0+128),2
 16928  1526                     i1l6354:	
 16929                           
 16930                           ;Dimmer_B1.c: 1739: }
 16931                           ;Dimmer_B1.c: 1743: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2_Value) {
 16932  1526  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 16933  1527  062C               	xorwf	(_DimmerIntr1^(0+128)+12),w
 16934  1528  1903               	btfsc	3,2
 16935                           
 16936                           ;Dimmer_B1.c: 1744: if (DimmerIntr1.ControlStatus == 1) {
 16937  1529  1DA0               	btfss	_DimmerIntr1^(0+128),3
 16938  152A  2D2D               	goto	i1l6360
 16939                           
 16940                           ;Dimmer_B1.c: 1745: RB4 = 0;
 16941  152B  0020               	movlb	0	; select bank0
 16942  152C  120D               	bcf	13,4	;volatile
 16943  152D                     i1l6360:	
 16944                           
 16945                           ;Dimmer_B1.c: 1746: }
 16946                           ;Dimmer_B1.c: 1747: }
 16947                           ;Dimmer_B1.c: 1750: if (DimmerIntr1.Count == DimmerIntr1.TuneValue3_Value) {
 16948  152D  0021               	movlb	1	; select bank1
 16949  152E  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 16950  152F  062D               	xorwf	(_DimmerIntr1^(0+128)+13),w
 16951  1530  1903               	btfsc	3,2
 16952                           
 16953                           ;Dimmer_B1.c: 1751: if (DimmerIntr1.ControlStatus == 1) {
 16954  1531  1DA0               	btfss	_DimmerIntr1^(0+128),3
 16955  1532  2D35               	goto	i1l6366
 16956                           
 16957                           ;Dimmer_B1.c: 1752: RB4 = 1;
 16958  1533  0020               	movlb	0	; select bank0
 16959  1534  160D               	bsf	13,4	;volatile
 16960  1535                     i1l6366:	
 16961                           
 16962                           ;Dimmer_B1.c: 1753: }
 16963                           ;Dimmer_B1.c: 1754: }
 16964                           ;Dimmer_B1.c: 1757: if (DimmerIntr1.Count == DimmerIntr1.TuneValue4_Value) {
 16965  1535  0021               	movlb	1	; select bank1
 16966  1536  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 16967  1537  062E               	xorwf	(_DimmerIntr1^(0+128)+14),w
 16968  1538  1D03               	skipz
 16969  1539  0008               	return
 16970                           
 16971                           ;Dimmer_B1.c: 1758: if (DimmerIntr1.ControlStatus == 1) {
 16972  153A  1DA0               	btfss	_DimmerIntr1^(0+128),3
 16973  153B  0008               	return
 16974                           
 16975                           ;Dimmer_B1.c: 1759: RB4 = 0;
 16976  153C  0020               	movlb	0	; select bank0
 16977  153D  120D               	bcf	13,4	;volatile
 16978                           
 16979                           ;Dimmer_B1.c: 1760: }
 16980                           ;Dimmer_B1.c: 1763: }
 16981                           ;Dimmer_B1.c: 1765: } else {
 16982  153E  0008               	return
 16983  153F                     i1l675:	
 16984                           
 16985                           ;Dimmer_B1.c: 1766: if (DimmerIntr1.GO == 1) {
 16986  153F  1C20               	btfss	_DimmerIntr1^(0+128),0
 16987  1540  0008               	return
 16988                           
 16989                           ;Dimmer_B1.c: 1767: DimmerIntr1.Count++;
 16990  1541  3001               	movlw	1
 16991  1542  00F0               	movwf	??_DimmerLights_TMR_1
 16992  1543  0870               	movf	??_DimmerLights_TMR_1,w
 16993  1544  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 16994                           
 16995                           ;Dimmer_B1.c: 1768: if (DimmerIntr1.Count == 4) {
 16996  1545  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 16997  1546  3A04               	xorlw	4
 16998  1547  1D03               	skipz
 16999  1548  0008               	return
 17000                           
 17001                           ;Dimmer_B1.c: 1769: DimmerIntr1.Count = 0;
 17002  1549  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 17003                           
 17004                           ;Dimmer_B1.c: 1770: DimmerIntr1.GO = 0;
 17005  154A  1020               	bcf	_DimmerIntr1^(0+128),0
 17006                           
 17007                           ;Dimmer_B1.c: 1771: DimmerIntr1.Start = 1;
 17008  154B  1520               	bsf	_DimmerIntr1^(0+128),2
 17009                           
 17010                           ;Dimmer_B1.c: 1773: if (DimmerIntr1.ControlStatus == 1) {
 17011  154C  1DA0               	btfss	_DimmerIntr1^(0+128),3
 17012  154D  0008               	return
 17013                           
 17014                           ;Dimmer_B1.c: 1774: RB4 = 1;
 17015  154E  0020               	movlb	0	; select bank0
 17016  154F  160D               	bsf	13,4	;volatile
 17017  1550  0008               	return
 17018  1551                     __end_of_DimmerLights_TMR_1:	
 17019                           
 17020                           	psect	text115
 17021  1F9B                     __ptext115:	
 17022 ;; *************** function _IOC_ISR *****************
 17023 ;; Defined at:
 17024 ;;		line 396 in file "../src/MCU_B1.c"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;		None
 17027 ;; Auto vars:     Size  Location     Type
 17028 ;;		None
 17029 ;; Return value:  Size  Location     Type
 17030 ;;		None               void
 17031 ;; Registers used:
 17032 ;;		wreg, status,2, status,0, pclath, cstack
 17033 ;; Tracked objects:
 17034 ;;		On entry : 0/0
 17035 ;;		On exit  : 0/0
 17036 ;;		Unchanged: 0/0
 17037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;Total ram usage:        0 bytes
 17043 ;; Hardware stack levels used:    1
 17044 ;; Hardware stack levels required when called:    1
 17045 ;; This function calls:
 17046 ;;		_DimmerLights_IOC_1
 17047 ;;		_DimmerLights_IOC_2
 17048 ;; This function is called by:
 17049 ;;		_ISR
 17050 ;; This function uses a non-reentrant model
 17051 ;;
 17052                           
 17053                           
 17054                           ;psect for function _IOC_ISR
 17055  1F9B                     _IOC_ISR:	
 17056                           
 17057                           ;MCU_B1.c: 398: if (myMain.PowerON == 1) {
 17058                           
 17059                           ;incstack = 0
 17060                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 17061  1F9B  0021               	movlb	1	; select bank1
 17062  1F9C  1C40               	btfss	_myMain^(0+128),0
 17063  1F9D  2FA3               	goto	i1l6892
 17064                           
 17065                           ;MCU_B1.c: 404: DimmerLights_IOC_1();
 17066  1F9E  3194  241C  319F   	fcall	_DimmerLights_IOC_1
 17067                           
 17068                           ;MCU_B1.c: 409: DimmerLights_IOC_2();
 17069  1FA1  3194  244C         	fcall	_DimmerLights_IOC_2
 17070  1FA3                     i1l6892:	
 17071                           
 17072                           ;MCU_B1.c: 418: }
 17073                           ;MCU_B1.c: 420: IOCBF2 = 0;
 17074  1FA3  0027               	movlb	7	; select bank7
 17075  1FA4  1116               	bcf	22,2	;volatile
 17076                           
 17077                           ;MCU_B1.c: 421: IOCIF = 0;
 17078  1FA5  100B               	bcf	11,0	;volatile
 17079  1FA6  0008               	return
 17080  1FA7                     __end_of_IOC_ISR:	
 17081                           
 17082                           	psect	text116
 17083  144C                     __ptext116:	
 17084 ;; *************** function _DimmerLights_IOC_2 *****************
 17085 ;; Defined at:
 17086 ;;		line 1974 in file "../src/Dimmer_B1.c"
 17087 ;; Parameters:    Size  Location     Type
 17088 ;;		None
 17089 ;; Auto vars:     Size  Location     Type
 17090 ;;		None
 17091 ;; Return value:  Size  Location     Type
 17092 ;;		None               void
 17093 ;; Registers used:
 17094 ;;		wreg, status,2, status,0
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;Total ram usage:        1 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; This function calls:
 17107 ;;		Nothing
 17108 ;; This function is called by:
 17109 ;;		_IOC_ISR
 17110 ;; This function uses a non-reentrant model
 17111 ;;
 17112                           
 17113                           
 17114                           ;psect for function _DimmerLights_IOC_2
 17115  144C                     _DimmerLights_IOC_2:	
 17116                           
 17117                           ;Dimmer_B1.c: 1989: if (DimmerIntr2.Start == 0 && DimmerIntr2.GO == 0) {
 17118                           
 17119                           ;incstack = 0
 17120                           ; Regs used in _DimmerLights_IOC_2: [wreg+status,2+status,0]
 17121  144C  0021               	movlb	1	; select bank1
 17122  144D  1930               	btfsc	_DimmerIntr2^(0+128),2
 17123  144E  0008               	return
 17124  144F  1830               	btfsc	_DimmerIntr2^(0+128),0
 17125  1450  0008               	return
 17126                           
 17127                           ;Dimmer_B1.c: 1991: if (RB2 != DimmerIntr2.Status) {
 17128  1451  0E31               	swapf	(_DimmerIntr2^(0+128)+1),w
 17129  1452  0C89               	rrf	9,f
 17130  1453  3901               	andlw	1
 17131  1454  00F0               	movwf	??_DimmerLights_IOC_2
 17132  1455  3000               	movlw	0
 17133  1456  0020               	movlb	0	; select bank0
 17134  1457  190D               	btfsc	13,2	;volatile
 17135  1458  3001               	movlw	1
 17136  1459  0670               	xorwf	??_DimmerLights_IOC_2,w
 17137  145A  1903               	skipnz
 17138  145B  0008               	return
 17139                           
 17140                           ;Dimmer_B1.c: 1994: DimmerIntr2.Count = 0;
 17141  145C  0021               	movlb	1	; select bank1
 17142  145D  01B2               	clrf	(_DimmerIntr2^(0+128)+2)
 17143                           
 17144                           ;Dimmer_B1.c: 1995: DimmerIntr2.GO = 1;
 17145  145E  1430               	bsf	_DimmerIntr2^(0+128),0
 17146                           
 17147                           ;Dimmer_B1.c: 1997: if (DimmerIntr2.Dimming_Sw == 1 || DimmerIntr2.Dimming_RF == 1) {
 17148  145F  1E30               	btfss	_DimmerIntr2^(0+128),4
 17149  1460  1B30               	btfsc	_DimmerIntr2^(0+128),6
 17150                           
 17151                           ;Dimmer_B1.c: 1998: DimmerIntr2.Tune = 1;
 17152  1461  14B0               	bsf	_DimmerIntr2^(0+128),1
 17153                           
 17154                           ;Dimmer_B1.c: 1999: }
 17155                           ;Dimmer_B1.c: 2001: if (DimmerIntr2.Calculate == 1) {
 17156  1462  1FB1               	btfss	(_DimmerIntr2^(0+128)+1),7
 17157  1463  2C75               	goto	i1l6466
 17158                           
 17159                           ;Dimmer_B1.c: 2002: DimmerIntr2.Calculate = 0;
 17160  1464  13B1               	bcf	(_DimmerIntr2^(0+128)+1),7
 17161                           
 17162                           ;Dimmer_B1.c: 2003: DimmerIntr2.TuneEnd_Value = DimmerIntr2.TuneEnd;
 17163  1465  083B               	movf	(_DimmerIntr2^(0+128)+11),w
 17164  1466  00F0               	movwf	??_DimmerLights_IOC_2
 17165  1467  0870               	movf	??_DimmerLights_IOC_2,w
 17166  1468  00BF               	movwf	(_DimmerIntr2^(0+128)+15)
 17167                           
 17168                           ;Dimmer_B1.c: 2004: DimmerIntr2.TuneValue2_Value = DimmerIntr2.TuneValue2;
 17169  1469  0838               	movf	(_DimmerIntr2^(0+128)+8),w
 17170  146A  00F0               	movwf	??_DimmerLights_IOC_2
 17171  146B  0870               	movf	??_DimmerLights_IOC_2,w
 17172  146C  00BC               	movwf	(_DimmerIntr2^(0+128)+12)
 17173                           
 17174                           ;Dimmer_B1.c: 2005: DimmerIntr2.TuneValue3_Value = DimmerIntr2.TuneValue3;
 17175  146D  0839               	movf	(_DimmerIntr2^(0+128)+9),w
 17176  146E  00F0               	movwf	??_DimmerLights_IOC_2
 17177  146F  0870               	movf	??_DimmerLights_IOC_2,w
 17178  1470  00BD               	movwf	(_DimmerIntr2^(0+128)+13)
 17179                           
 17180                           ;Dimmer_B1.c: 2006: DimmerIntr2.TuneValue4_Value = DimmerIntr2.TuneValue4;
 17181  1471  083A               	movf	(_DimmerIntr2^(0+128)+10),w
 17182  1472  00F0               	movwf	??_DimmerLights_IOC_2
 17183  1473  0870               	movf	??_DimmerLights_IOC_2,w
 17184  1474  00BE               	movwf	(_DimmerIntr2^(0+128)+14)
 17185  1475                     i1l6466:	
 17186                           
 17187                           ;Dimmer_B1.c: 2007: }
 17188                           ;Dimmer_B1.c: 2017: DimmerIntr2.Status = RB2 == 1 ? 1 : 0;
 17189  1475  12B1               	bcf	(_DimmerIntr2^(0+128)+1),5
 17190  1476  0020               	movlb	0	; select bank0
 17191  1477  1D0D               	btfss	13,2	;volatile
 17192  1478  0008               	return
 17193  1479  0021               	movlb	1	; select bank1
 17194  147A  16B1               	bsf	(_DimmerIntr2^(0+128)+1),5
 17195  147B  0008               	return
 17196  147C                     __end_of_DimmerLights_IOC_2:	
 17197                           
 17198                           	psect	text117
 17199  141C                     __ptext117:	
 17200 ;; *************** function _DimmerLights_IOC_1 *****************
 17201 ;; Defined at:
 17202 ;;		line 1816 in file "../src/Dimmer_B1.c"
 17203 ;; Parameters:    Size  Location     Type
 17204 ;;		None
 17205 ;; Auto vars:     Size  Location     Type
 17206 ;;		None
 17207 ;; Return value:  Size  Location     Type
 17208 ;;		None               void
 17209 ;; Registers used:
 17210 ;;		wreg, status,2, status,0
 17211 ;; Tracked objects:
 17212 ;;		On entry : 0/0
 17213 ;;		On exit  : 0/0
 17214 ;;		Unchanged: 0/0
 17215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17220 ;;Total ram usage:        1 bytes
 17221 ;; Hardware stack levels used:    1
 17222 ;; This function calls:
 17223 ;;		Nothing
 17224 ;; This function is called by:
 17225 ;;		_IOC_ISR
 17226 ;; This function uses a non-reentrant model
 17227 ;;
 17228                           
 17229                           
 17230                           ;psect for function _DimmerLights_IOC_1
 17231  141C                     _DimmerLights_IOC_1:	
 17232                           
 17233                           ;Dimmer_B1.c: 1830: if (DimmerIntr1.Start == 0 && DimmerIntr1.GO == 0) {
 17234                           
 17235                           ;incstack = 0
 17236                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2+status,0]
 17237  141C  0021               	movlb	1	; select bank1
 17238  141D  1920               	btfsc	_DimmerIntr1^(0+128),2
 17239  141E  0008               	return
 17240  141F  1820               	btfsc	_DimmerIntr1^(0+128),0
 17241  1420  0008               	return
 17242                           
 17243                           ;Dimmer_B1.c: 1832: if (RB2 != DimmerIntr1.Status) {
 17244  1421  0E21               	swapf	(_DimmerIntr1^(0+128)+1),w
 17245  1422  0C89               	rrf	9,f
 17246  1423  3901               	andlw	1
 17247  1424  00F0               	movwf	??_DimmerLights_IOC_1
 17248  1425  3000               	movlw	0
 17249  1426  0020               	movlb	0	; select bank0
 17250  1427  190D               	btfsc	13,2	;volatile
 17251  1428  3001               	movlw	1
 17252  1429  0670               	xorwf	??_DimmerLights_IOC_1,w
 17253  142A  1903               	skipnz
 17254  142B  0008               	return
 17255                           
 17256                           ;Dimmer_B1.c: 1835: DimmerIntr1.Count = 0;
 17257  142C  0021               	movlb	1	; select bank1
 17258  142D  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 17259                           
 17260                           ;Dimmer_B1.c: 1836: DimmerIntr1.GO = 1;
 17261  142E  1420               	bsf	_DimmerIntr1^(0+128),0
 17262                           
 17263                           ;Dimmer_B1.c: 1838: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 17264  142F  1E20               	btfss	_DimmerIntr1^(0+128),4
 17265  1430  1B20               	btfsc	_DimmerIntr1^(0+128),6
 17266                           
 17267                           ;Dimmer_B1.c: 1839: DimmerIntr1.Tune = 1;
 17268  1431  14A0               	bsf	_DimmerIntr1^(0+128),1
 17269                           
 17270                           ;Dimmer_B1.c: 1840: }
 17271                           ;Dimmer_B1.c: 1842: if (DimmerIntr1.Calculate == 1) {
 17272  1432  1FA1               	btfss	(_DimmerIntr1^(0+128)+1),7
 17273  1433  2C45               	goto	i1l6404
 17274                           
 17275                           ;Dimmer_B1.c: 1843: DimmerIntr1.Calculate = 0;
 17276  1434  13A1               	bcf	(_DimmerIntr1^(0+128)+1),7
 17277                           
 17278                           ;Dimmer_B1.c: 1844: DimmerIntr1.TuneEnd_Value = DimmerIntr1.TuneEnd;
 17279  1435  082B               	movf	(_DimmerIntr1^(0+128)+11),w
 17280  1436  00F0               	movwf	??_DimmerLights_IOC_1
 17281  1437  0870               	movf	??_DimmerLights_IOC_1,w
 17282  1438  00AF               	movwf	(_DimmerIntr1^(0+128)+15)
 17283                           
 17284                           ;Dimmer_B1.c: 1845: DimmerIntr1.TuneValue2_Value = DimmerIntr1.TuneValue2;
 17285  1439  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 17286  143A  00F0               	movwf	??_DimmerLights_IOC_1
 17287  143B  0870               	movf	??_DimmerLights_IOC_1,w
 17288  143C  00AC               	movwf	(_DimmerIntr1^(0+128)+12)
 17289                           
 17290                           ;Dimmer_B1.c: 1846: DimmerIntr1.TuneValue3_Value = DimmerIntr1.TuneValue3;
 17291  143D  0829               	movf	(_DimmerIntr1^(0+128)+9),w
 17292  143E  00F0               	movwf	??_DimmerLights_IOC_1
 17293  143F  0870               	movf	??_DimmerLights_IOC_1,w
 17294  1440  00AD               	movwf	(_DimmerIntr1^(0+128)+13)
 17295                           
 17296                           ;Dimmer_B1.c: 1847: DimmerIntr1.TuneValue4_Value = DimmerIntr1.TuneValue4;
 17297  1441  082A               	movf	(_DimmerIntr1^(0+128)+10),w
 17298  1442  00F0               	movwf	??_DimmerLights_IOC_1
 17299  1443  0870               	movf	??_DimmerLights_IOC_1,w
 17300  1444  00AE               	movwf	(_DimmerIntr1^(0+128)+14)
 17301  1445                     i1l6404:	
 17302                           
 17303                           ;Dimmer_B1.c: 1848: }
 17304                           ;Dimmer_B1.c: 1858: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 17305  1445  12A1               	bcf	(_DimmerIntr1^(0+128)+1),5
 17306  1446  0020               	movlb	0	; select bank0
 17307  1447  1D0D               	btfss	13,2	;volatile
 17308  1448  0008               	return
 17309  1449  0021               	movlb	1	; select bank1
 17310  144A  16A1               	bsf	(_DimmerIntr1^(0+128)+1),5
 17311  144B  0008               	return
 17312  144C                     __end_of_DimmerLights_IOC_1:	
 17313  007E                     btemp	set	126	;btemp
 17314  007E                     pic14e$flags	set	126
 17315  007E                     wtemp	set	126
 17316  007E                     wtemp0	set	126
 17317  0080                     wtemp1	set	128
 17318  0082                     wtemp2	set	130
 17319  0084                     wtemp3	set	132
 17320  0086                     wtemp4	set	134
 17321  0088                     wtemp5	set	136
 17322  007F                     wtemp6	set	127
 17323  007E                     ttemp	set	126
 17324  007E                     ttemp0	set	126
 17325  0081                     ttemp1	set	129
 17326  0084                     ttemp2	set	132
 17327  0087                     ttemp3	set	135
 17328  007F                     ttemp4	set	127
 17329  007E                     ltemp	set	126
 17330  007E                     ltemp0	set	126
 17331  0082                     ltemp1	set	130
 17332  0086                     ltemp2	set	134
 17333  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         240
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      78
    BANK1            80      0      79
    BANK2            80      0      80
    BANK3            80      4      80
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK3[9]), Sw1(BANK3[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK2[4]), VarLED2(BANK2[4]), VarLED1(BANK2[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights2(BANK2[9]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK4[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK3[5]), DlySw1(BANK2[5]), 


Critical Paths under _main in COMMON

    _main->_Exception_Main
    _main->_getTemp_AD
    _main->_my_MainTimer
    _my_MainTimer->_setBuz
    _getTemp_AD->_getAD
    _getLoad_AD->_getAD
    _setTemp_Main->___lwdiv
    _setSw_Main->_setDimmerLights_SwOn
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _Mcu_Initialization->_WDT_Set
    _Load_Main->___lwdiv
    _Load_Initialization->_setLoad_AH_AL_Restore
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_getMain_All_Error_Status
    _Exception_Main->_setBuz
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _getDimmerLights_Allow_Condition->_getLoad_OK
    _DimmerIntr_ValueCalculate->_Division
    _DimmerIntr_Initialization->_Division
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _Division->___lbdiv
    _DlyOff_Main->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _TMR1_ISR->_DimmerLights_TMR_2
    _IOC_ISR->_DimmerLights_IOC_1
    _IOC_ISR->_DimmerLights_IOC_2

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_setProductData
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _Exception_Main->_setBuz
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _setDimmerLights_Dimming->_setProductData
    _DimmerLights_TwoPhase_Main->_DimmerLights_AssignationDimming
    _DimmerLights_AssignationDimming->_setDimmerIntr_MaxmumValue
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _DimmerIntr_ValueCalculate->_Division
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _DimmerIntr_Initialization->_getDimmerLights_ValueToPercent
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftneg->___ftdiv
    ___ftneg->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftneg
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4  107245
                                              0 BANK3      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                _Load_Initialization
                          _Load_Main
                 _Mcu_Initialization
              _Switch_Initialization
                        _Switch_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                         _getLoad_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1497
                                              9 COMMON     1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     488
                                              6 COMMON     4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getLoad_AD                                           8     8      0     585
                                              6 COMMON     2     2      0
                                              0 BANK0      6     6      0
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                4     1      3     222
                                              2 COMMON     4     1      3
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    3610
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                        10    10      0    3610
                                             61 BANK0     10    10      0
                            ___lwdiv
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
            _setOverTemp_ADV_Restore
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setOverTemp_ADV_Restore                              3     3      0      68
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    2525
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    2525
                                             11 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      66
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      5     5      0     117
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0     930
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0     930
                                              6 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Load_Main                                           10    10      0    1857
                                              0 BANK0     10    10      0
                            ___lwdiv
                             ___wmul
    _getAll_DimmerIntr_Dimming_Sw_RF
                   _getDimmer_LoadGO
              _getDimmer_Load_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _getMain_Lights_Count
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _getMain_Lights_Count                                 4     4      0      70
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_Load_Status                                1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getDimmer_LoadGO                                     1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getAll_DimmerIntr_Dimming_Sw_RF                      3     3      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     270
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     696
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Load_Initialization                                  0     0      0      90
              _setLoad_AH_AL_Restore
 ---------------------------------------------------------------------------------
 (2) _setLoad_AH_AL_Restore                                2     2      0      90
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     154
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     154
                                              4 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1018
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1018
                                              6 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2285
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       9     9      0    3278
                                              9 COMMON     1     1      0
                                              6 BANK0      8     8      0
               _getDimmerLights_Line
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
                             _setBuz
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Line                                 2     2      0      25
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   55807
       _DimmerLights_DimmingFunction
         _DimmerLights_TwoPhase_Main
                         _getLoad_OK
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   38321
                                             73 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   22176
                                             69 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
               _setDimmerLights_Line
                             _setLED
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1     908
                                              4 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      66
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     355
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     177
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     266
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDelayOff_GO                                       8     6      2    1672
                                             61 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     133
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      71
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0      89
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   15626
                                             61 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
               _setDimmerLights_Line
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_Line                                 1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     355
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      69
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      6     6      0     187
                                              3 COMMON     6     6      0
                         _getLoad_OK
 ---------------------------------------------------------------------------------
 (4) _getLoad_OK                                           1     1      0      23
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             7     7      0     161
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_TwoPhase_Main                           1     1      0   16250
                                             65 BANK0      1     1      0
    _DimmerLights_AssignationDimming
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_AssignationDimming                      4     4      0   16144
                                             61 BANK0      4     4      0
     _getDimmerLights_PercentToValue
             _getDimmerLights_Status
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     355
                                             58 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_RF                             3     2      1     266
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0     981
                                              5 BANK0      2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            3     3      0     919
                                              2 BANK0      3     3      0
                           _Division
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   28004
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            2     2      0   28004
                                             58 BANK0      2     2      0
                           _Division
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (4) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       6     6      0   11874
                                             52 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_PercentToValue                       6     6      0   15251
                                             52 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     430
                                             38 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     223
                                             22 BANK0      3     0      3
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    3377
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    3687
                                              6 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    4221
                                             25 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    3214
                                              0 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2873
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (5) _Division                                             5     4      1     857
                                              7 COMMON     3     2      1
                                              0 BANK0      2     2      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (6) ___lbdiv                                              5     4      1     345
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    3115
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    3115
                                             61 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (3) _setProductData                                       3     2      1     845
                                             58 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 6     6      0    1916
                                              9 COMMON     1     1      0
                                              6 BANK0      5     5      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1497
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0      69
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      66
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      89
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      66
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      66
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (5) _DelayOffPointSelect                                  2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_TMR_1
                 _DimmerLights_TMR_2
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_TMR_2                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IOC_ISR                                              0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_IOC_2
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_IOC_2                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _DimmerLights_IOC_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _Division
         ___lbdiv
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
         _Division
           ___lbdiv
     _DimmerLights_TwoPhase_Main
       _DimmerLights_AssignationDimming
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getDimmerLights_Status
           _DimmerLights_SelectPointer
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setMemory_Modify
       _DimmerLights_SelectPointer
     _getLoad_OK
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
         _getLoad_OK
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_Line
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
           _Division
             ___lbdiv
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setDimmerLights_Line
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
   _Exception_Main
     _getDimmerLights_Line
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setBuz
       ___awdiv
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Load_Initialization
     _setLoad_AH_AL_Restore
   _Load_Main
     ___lwdiv
     ___wmul
     _getAll_DimmerIntr_Dimming_Sw_RF
     _getDimmer_LoadGO
     _getDimmer_Load_Status
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _getMain_Lights_Count
     _setLoad_AH_AL_Restore
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___lwdiv
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
       _setBuz
         ___awdiv
       _setOverTemp_ADV_Restore
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
   _WDT_Main
     _WDT_Clearing
   _getLoad_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
     _DimmerLights_IOC_2
   _TMR1_ISR
     _DimmerLights_TMR_1
     _DimmerLights_TMR_2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     169      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     169      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Apr 11 16:49:10 2015

                    __size_of_Switch_Main 000B                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 10F7                            ___bmul@product 0074  
               getMain_Lights_Count@count 0075                                        l72 1788  
                                      l82 1700                                        l74 179A  
                                      l83 16FC                                        l84 16EC  
                                      l86 16FA                                        _RD 0CA8  
                                      _WR 0CA9                              ___awdiv@sign 0021  
                                      _u1 01A0                                        _Sw 006C  
                          setTemp_Main@AD 0065                       ___wmul@multiplicand 0074  
                    _getDimmerLights_Line 103D                    __end_of_setDelayOff_GO 0CCD  
                            ___ftadd@exp1 0045                              ___ftadd@exp2 0044  
                    _setDimmerLights_Main 0A97                      _setDimmerLights_Line 119F  
                            ___ftadd@sign 0043                                       l306 0B5D  
                    _setDimmerLights_SwOn 0BD6                                       l462 10E1  
                                     l606 0FCD                                       l640 1044  
                                     l641 104A                                       l635 11AB  
                                     l750 0DDF                                       l734 0D8C  
                                     l566 1492                                       l752 0DD1  
                                     l736 0D7D                                       l761 0DFA  
                                     l745 0DA9                                       l841 11D5  
                                     l842 11DD                                       l755 0DDD  
                                     l739 0D8A                                       l875 162C  
                                     l876 1633                                       _GIE 005F  
                                     _RA0 0060      __size_of_DimmerLights_Initialization 000B  
                                     _RB1 0069                                       _RA3 0063  
                                     _RB2 006A                                       _RA4 0064  
                                     _LED 007B                                       _RB3 006B  
                                     _RB4 006C                                       _RA6 0066  
                                     _RB5 006D                                       _RA7 0067  
                                     _RC5 0075                                       _RC7 0077  
                                     _ISR 0004                                       _WDT 00DC  
                                     _Cmd 007A              getDimmerLights_Status@lights 0074  
                                     _Sw1 01D5                                       _Sw2 01DE  
              ??_setDimmerIntr_Dimming_RF 0073                ??_setDimmerIntr_Dimming_Sw 0073  
         setDimmerIntr_Dimming_RF@command 0072                     _Buzzer_Initialization 1EE9  
                         __end_of_ADC_Set 1F2B                                       wreg 0009  
    setDimmerLights_Initialization@lights 0070              getDimmerLights_Status@status 0075  
     __end_of_setDimmerIntr_ControlStatus 1395               _setDimmerIntr_ControlStatus 136C  
                       ??_getSw_KeyStatus 0072                                      ?_ISR 0070  
                            ___ftdiv@cntr 0030                           __end_of_IOC_ISR 1FA7  
                   _setDimmerLights_OnOff 0F51                                Load_Main@i 0028  
                            ___ftdiv@sign 0035                                      l1123 1676  
                                    l1137 13B8                                      l1147 07DF  
                                    l2132 13D2                                      l2108 15BF  
                                    l2133 13EB                                      l1261 01E7  
                                    l1271 01C3                                      l1263 0085  
                                    l1272 01C1                                      l1264 0081  
                                    l2137 13E7                                      l1265 007C  
                                    l1425 0530                                      l2410 0952  
                                    l2243 123E                                      l1419 05DB  
                                    l2404 093B                                      l2164 050D  
                                    l2173 10F6                                      l2433 03E5  
                         __end_of_IOC_Set 1F90                            _Load_Main$3608 0023  
                                    l1854 1166                                      l5128 1116  
                                    l5152 112B                                      l5080 0927  
                                    l5072 0911                                      l5304 0424  
                                    l5320 0E29                                      l5144 130A  
                                    l6104 14D2                                      l5314 0E13  
                                    l5170 1092                                      l5076 0918  
                                    l5244 036E                                      l6108 14DB  
                                    l1876 033C                                      l5086 0940  
                                    l5078 0922                                      l5254 0384  
                                    l5342 0E83                                      l5334 0E6A  
                                    l5414 0CE6                                      l5166 108C  
                                    l6070 1260                                      l1878 0232  
                                    l5600 119D                                      l5088 0948  
                                    l5272 03B1                                      l5248 0375  
                                    l5440 0D31                                      l5432 0D16  
                                    l6056 117F                                      l6080 126D  
                                    l6072 1262                                      l7008 0BD1  
                                    l5290 03F7                                      l5274 03BB  
                                    l5266 039E                                      l5362 06D7  
                                    l5442 0D3A                                      l5434 0D24  
                                    l8010 0DAA                                      l5522 0CC3  
                                    l6082 1271                                      l5284 03D7  
                                    l5276 03C0                                      l5356 06C1  
                                    l5444 0D3D                                      l8004 0D9D  
                                    l5508 0C83                                      l5294 0409  
                                    l5286 03E1                                      l5278 03C4  
                                    l5390 0736                                      l5374 0712  
                                    l5518 0CB1                                      l8110 07D8  
                                    l8102 0778                                      l5800 15EE  
                                    l5448 0D4B                                      l5608 1358  
                                    l6096 14B4                                      l5386 072E  
                                    l5378 071A                                      l8034 0DD3  
                                    l5722 1013                                      l6098 14C0  
                                    l6186 1FEB                                      l5820 13CE  
                                    l5652 08BA                                      l5660 08C6  
                                    l8220 025F                                      l8204 021C  
                   _setDimmerLights_SwOff 15C1                                      l8046 0DEF  
                                    l8062 082E                                      l5830 13E3  
                                    l5822 13D6                                      l5726 1018  
                                    l5734 10E5                                      l5558 1381  
                                    l5566 1140                                      l5670 08D6  
                                    l8310 0661                                      l8230 0291  
                                    l6542 11EE                                      l7190 09AF  
                                    l7182 0991                                      l8064 083F  
                                    l5576 10D8                                      l5728 101D  
                                    l5656 08C0                                      l6800 1238  
                                    l6712 116B                                      l8144 0542  
                                    l6544 11F1                                      l7514 12BB  
                                    l5586 11C1                                      l5738 10F1  
                                    l5682 08F3                                      l5690 08FF  
                                    l5666 08D0                                      l5674 08DC  
                                    l8138 0533                                      l8146 0545  
                                    l7194 09BE                                      l7186 09A0  
                                    l6820 16D8                                      l5596 1194  
                                    l7516 12C4                                      l5844 14F0  
                                    l8084 10A6                                      l8412 00DA  
                                    l6716 1171                                      l6548 11F6  
                                    l7550 17C2                                      l7526 12D3  
                                    l5686 08F9                                      l8406 00A8  
                                    l8238 02C0                                      l8246 02EE  
                                    l7560 17CA                                      l7544 17B7  
                                    l7720 0C41                                      l7704 0C04  
                                    l5856 1504                                      l8600 04E1  
                                    l8096 0764                                      l8336 1655  
                                    l8504 01D6                                      l8176 05B2  
                                    l7562 17D6                                      l7706 0C09  
                                    l5866 1513                                      l5858 1506  
                                    l8602 04BD                                      l8186 05C7  
                                    l7572 17F1                                      l7716 0C31  
                                    l7660 0881                                      l5868 1517  
                                    l7644 103B                                      l7740 0F9B  
                                    l8604 04E9                                      l8612 0503  
                                    l8444 015D                                      l8452 0183  
                                    l8372 0063                                      l8188 05C9  
                                    l8532 15A1                                      l7718 0C37  
                                    l8286 1494                                      l8606 04F3  
                                    l8438 014E                                      l8390 0084  
                                    l7576 17F9                                      l7568 17E8  
                                    l7744 0FA5                                      l8448 0177  
                                    l8632 1725                                      l7762 0FDB  
                                    l7738 0F92                                      l8570 046A  
                                    l7850 13A3                                      l8458 0193  
                                    l7588 12E0                                      l7748 0FAF  
                                    l8564 045B                                      l8468 01A9  
                                    l6980 0B83                                      l8636 1730  
                   _myMain_Initialization 105B                                      l7694 0BF3  
                                    l7766 0FDF                                      l7950 0ABD  
                                    l8582 04A0                                      l8574 0479  
                                    l7696 0BF6                                      l7784 1693  
                                    l7952 0AC3                                      l8584 047C  
                                    l6992 0BAA                                      l7962 0AE9  
                                    l8586 04A8                                      l7964 0AEF  
                                    l6988 0BA2                                      l7992 0D7F  
                                    _CFGS 0CAE                              __CFG_WDTE$ON 0000  
                                    _FREE 0CAC                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u5025 0E3B                                      u5105 06E3  
                                    u5035 0E4B                                      u5115 06F3  
                                    u5045 0E6B                                      u5055 0E7A  
                                    u5135 071B                                      u4425 091D  
                                    u5065 0E84                                      u5145 0721  
                                    u5225 0CED                                      _PEIE 005E  
                                    u4445 0936                                      u5175 0737  
                                    u5255 0D17                                      u4465 0943  
                                    u5185 073D                                      u6305 14B7  
                                    u5285 0D32                                      u6325 14C1  
                                    u6165 1159                                      u4495 0959  
                                    u6335 14CB                                      u6345 14D3  
                                    u5395 0C8F                                      u6195 07F2  
                                    u4925 03C5                                      u4865 039F  
                                    u4955 03D8                                      u4895 03B2  
                                    u8355 0988                                      u7645 123F  
                                    u8365 0997                                      u7655 1244  
                                    u8375 09A6                                      u8385 09B5  
                                    u8395 09C4                                      u7685 16CE  
                                    u8905 17E9                                      u7945 0B92  
                                    u9805 059B                                      u8865 17CD  
                                    u9825 05B9                                      u7995 0BC1  
                                    _LWLO 0CAD                                      u8885 17D7  
                                    u8895 17E1                                      u9785 0584  
                                    _WREN 0CAA                                      _WPUB 020D  
                                    _Buz1 00CD                                      _Load 0125  
                                    _Temp 00E1                                      _main 1707  
                            ___ftpack@arg 0072                       __end_of_DlyOff_Main 0B64  
                            ___ftpack@exp 0075                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                         __end_of_WDT_Set 1F65                                      ltemp 007E  
                                    start 001F                                      ttemp 007E  
                                    wtemp 007E         setDimmerLights_SwOn@dimmingStatus 0026  
    __end_of_DimmerLights_DimmingFunction 0DFC     __size_of_DimmerLights_DimmingFunction 00A8  
            _DimmerLights_DimmingFunction 0D54                         ___bmul@multiplier 0075  
                            ___ftmul@cntr 0034                              ___ftmul@sign 0035  
            __size_of_Temp_Initialization 0003      _getDimmerLights_Allow_Condition$2344 0074  
    _getDimmerLights_Allow_Condition$2345 0075      _getDimmerLights_Allow_Condition$2346 0076  
                       ?_getDimmer_LoadGO 0070                                     ??_ISR 0071  
                            ___fttol@exp1 0053                ?_DimmerIntr_ValueCalculate 0070  
                            ___fttol@lval 004F   __end_of_getDimmerLights_Allow_Condition 1519  
__size_of_getDimmerLights_Allow_Condition 0037         ??_getDimmerLights_Allow_Condition 0073  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 14E2  
                  _getDimmerLights_Status 1FF1                        ??_getDimmer_LoadGO 0072  
                        __end_of_LED_Main 1FD7                     ?_getDimmerLights_Line 0070  
                              _DimmerIntr 00DE                     ?_setDimmerLights_Main 0070  
                   ?_setDimmerLights_Line 0070                           ?_setDelayOff_GO 005D  
                   ?_setDimmerLights_SwOn 0070                                     ?_main 01EC  
                         __end_of___awdiv 1800                           __end_of___lbdiv 12D5  
                         __end_of___ftadd 043C                           __end_of___ftdiv 0EA5  
                         __end_of___ftneg 1F53                                     u10125 166D  
                         __end_of___ftmul 075E                                     u10265 00A6  
                                   u10275 00D8                           ___awdiv@divisor 0072  
                                   u10365 018A                                     u10285 010D  
                                   u10550 04A6                                     _T1CON 0018  
                                   u10555 0485                                     u10580 04E7  
                         __end_of___fttol 0D54                                     u10485 15B7  
                                   u10585 04C6                                     _IOCBF 0396  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 14E2                                     i1l675 153F  
                                   i1l699 1577                           ___awdiv@counter 0020  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _PORTA 000C                                     _PORTB 000D  
                                   _PORTC 000E                              ?_setLED_Main 0070  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 115F  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 0A97  
 __size_of_getDimmerLights_ValueToPercent 0065            _getDimmerLights_ValueToPercent 0A32  
                                   _Light 00DF                          __end_of_TMR1_ISR 12B4  
                 __size_of_setProductData 000C                          __end_of_TMR1_Set 1FE3  
      DimmerLights_DimmingFunction@lights 0026                                     _getAD 11E6  
                           ___awtoft@sign 0025                             ___ftpack@sign 0076  
                           ??_Buzzer_Main 0072                          __end_of_WDT_Main 108A  
                          __CFG_BOREN$OFF 0000              __end_of_getMain_Lights_Count 10BD  
                      Flash_Memory_Read@i 0073                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 000F  
           __end_of_setLED_Initialization 105B                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                     _getAll_Sw_KeyStatus 109B                           ___lbdiv@divisor 0072  
             __size_of_Flash_Memory_Write 002A                           ___lbdiv@counter 0075  
        __size_of_DelayOff_Initialization 0008                    ?_setLoad_AH_AL_Restore 0070  
                       setTemp_Main@error 005F                    ??_Flash_Memory_Erasing 0072  
             ??_setDimmerLights_DimmingOn 0074                           __initialization 0021  
           ?_DimmerLights_DimmingFunction 0070                         ?_setMemory_Modify 0070  
                        __end_of_Division 1010                   __size_of_getDelayOff_GO 000F  
                            __end_of_main 1759                          __end_of_Fosc_Set 1EF9  
          getMain_All_LightsStatus@status 0072                        ??_setMemory_Modify 0072  
            setDimmerLights_OnOff@command 0065                            _Exception_Main 043C  
       __end_of_DimmerIntr_ValueCalculate 08AC                                 ??_ADC_Set 0072  
                    _setSw_Initialization 1F2B                                    ??_main 007A  
                           ___fttol@sign1 004E                      ?_getAll_Sw_KeyStatus 0070  
             ?_setDimmerIntr_DimmingValue 0072              ??_DimmerLights_SelectPointer 0072  
                          _setMemory_Data 1F7A                    ?_Buzzer_Initialization 0070  
                 ??_DlyOff_Initialization 0074        setDimmerIntr_ControlStatus@command 0072  
                 _setDimmerLights_Dimming 167C                                 ??_IOC_ISR 0071  
                               ??_IOC_Set 0072                               _DimmerIntr1 00A0  
                             _DimmerIntr2 00B0                  _getMain_All_LightsStatus 102E  
                 ??_Switch_Initialization 0077                    ?_setDimmerLights_OnOff 0065  
                                  ?_getAD 0072                    ?_setDimmerLights_SwOff 0070  
                             _DlyOff_Main 0AFC                    ?_myMain_Initialization 0070  
                                  _ADCON0 009D                                    _ADCON1 009E  
        __end_of_getDimmerIntr_Dimming_Sw 119F               ?_DimmerLights_TwoPhase_Main 0070  
                                  _ADRESH 009C                                    _ADRESL 009B  
                        ___awdiv@dividend 0074                     _getDimmer_Load_Status 1F1D  
                               ??_WDT_Set 0072                          __end_of___awtoft 12F7  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 0969  
                _getMain_All_Error_Status 13BF                                    _IOCBF2 1CB2  
                                  i1l1086 001A                                    i1l6404 1445  
                                  i1l6422 1565                                    i1l6360 152D  
                                  i1l6416 155E                                    i1l6354 1526  
                                  i1l6428 156D                                    i1l7412 0012  
                                  i1l6366 1535                                    i1l6466 1475  
                                  i1l6882 12AD                                    i1l6892 1FA3  
                                  _FVRCON 0117      getDimmerLights_Allow_Condition@allow 0078  
                                  _PMADRH 0192                                    _PMADRL 0191  
                                  _PMDATH 0194                                    _PMDATL 0193  
                                  _PMCON2 0196                                    _OSCCON 0099  
                      __size_of_Load_Main 01A0                                    _TMR1IE 0488  
                                  _TMR1IF 0088                                    _IO_Set 121B  
                                  u778_25 12A8                                    _WDTCON 0097  
    __end_of_setDimmerLights_DimmingClose 1F6F     __size_of_setDimmerLights_DimmingClose 000A  
            _setDimmerLights_DimmingClose 1F65                      Exception_Main@i_6700 002B  
             ??_setDimmerIntr_MaxmumValue 005B                                    _Dimmer 0120  
                                  _DlySw1 015F                                    _DlySw2 01E7  
                ?_setOverTemp_ADV_Restore 0070                     __end_of_getCmd_Status 101F  
              __end_of_Mcu_Initialization 10CF                       __end_of_Buzzer_Main 1707  
                                  _Memory 01B0                                    _Timer1 00D9  
                                  ___bmul 108A                    __end_of_Exception_Main 050E  
                    Exception_Main@lights 002D                                    ___wmul 1236  
                               ??___awdiv 0076                                 ??___lbdiv 0073  
                               ??___ftadd 003F              __size_of_DelayOffPointSelect 0015  
                               ??___ftdiv 002C                                 ??___ftneg 007A  
                               ??___ftmul 002C                                 ??___fttol 004A  
            ?_Flash_Memory_Initialization 0070                    ??_getDimmerLights_Line 0072  
                               ??___lwdiv 0076                    ??_setDimmerLights_Main 007A  
                  ??_setDimmerLights_Line 0072                      Exception_Main@status 0026  
 __end_of_getAll_DimmerIntr_Dimming_Sw_RF 1FF1  __size_of_getAll_DimmerIntr_Dimming_Sw_RF 000E  
       ??_getAll_DimmerIntr_Dimming_Sw_RF 0072          ?_getAll_DimmerIntr_Dimming_Sw_RF 0070  
         _getAll_DimmerIntr_Dimming_Sw_RF 1FE3                    ??_setDimmerLights_SwOn 0079  
                                  _setLED 08AC                                    _myMain 00C0  
                  __end_of_setMemory_Data 1F85                     ?_setSw_Initialization 0070  
                        ___awdiv@quotient 0022                                    _setBuz 1759  
                      __size_of_Temp_Main 0003                      Load_Main@LightsCount 0027  
             __end_of_Load_Initialization 1EEF          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 136C          __end_of_setDimmerIntr_Dimming_Sw 131C  
                   ___ftmul@f3_as_product 0031                 _setDimmerLights_DimmingOn 131C  
                Flash_Memory_Read@address 0074                          ?_Timeout_Counter 0070  
             getMain_Lights_Count@status1 0073               getMain_Lights_Count@status2 0074  
             __size_of_DimmerLights_IOC_1 0030               __size_of_DimmerLights_IOC_2 0030  
                   __end_of_SwPointSelect 1189               __size_of_DimmerLights_TMR_1 0038  
             __size_of_DimmerLights_TMR_2 0038              __size_of_Flash_Memory_Modify 0089  
                 __size_of_LedPointSelect 001A           setDimmerIntr_Dimming_Sw@command 0072  
                      setTemp_Main@TempGO 0060                          ___lbdiv@dividend 0074  
                     Flash_Memory_Write@i 0073              __size_of_Flash_Memory_Unlock 0009  
                              _TouchPower 115F                   __end_of__initialization 0049  
         getDimmerIntr_DimmingValue@value 0073           setDimmerIntr_DimmingValue@value 0072  
                               ?_LED_Main 0070                                ___ftadd@f1 0039  
                              ___ftadd@f2 003C                             ?_my_MainTimer 0070  
               _setDimmerLights_SwOn$2274 0027                 _setDimmerLights_SwOn$2283 0028  
                              ___ftdiv@f1 0029                                ___ftdiv@f2 0026  
                              ___ftdiv@f3 0031             ?_setDimmerLights_DimmingClose 0070  
                              ___ftneg@f1 0036                                ___awtoft@c 0020  
                     ___bmul@multiplicand 0072              ?_DimmerLights_Initialization 0070  
                              ___ftmul@f1 0026                                ___ftmul@f2 0029  
              ?_DimmerIntr_Initialization 0070                                ___fttol@f1 0046  
                          __pcstackCOMMON 0070                           ?_Exception_Main 0070  
                            __pidataBANK4 1273                             __end_of_getAD 1200  
                               ?_TMR1_ISR 0070                                 ?_TMR1_Set 0070  
                  setLoad_AH_AL_Restore@i 0073                        _LED_Initialization 1FBF  
                         _getSw_KeyStatus 1253     DimmerLights_AssignationDimming@status 005F  
                         ?_setMemory_Data 0072            ??_DimmerLights_DimmingFunction 0025  
        ??_getDimmerLights_PercentToValue 0054           ?_getDimmerLights_PercentToValue 0070  
               ??_setDimmerLights_Dimming 005E             ??_Flash_Memory_Initialization 0076  
                        ___lbdiv@quotient 0076                      _getMain_Lights_Count 10AC  
                               ?_WDT_Main 0070                         __end_of_Load_Main 01ED  
       setDimmerIntr_ControlStatus@lights 0074                 _setDimmerIntr_MaxmumValue 11B5  
              __end_of_set_TimeoutCleared 1F03           setDimmerIntr_MaxmumValue@lights 005C  
                     ?_LED_Initialization 0070                            _setProductData 1FA7  
                    __size_of_setLED_Main 0040                    ?_getDimmer_Load_Status 0070  
                                 ??_getAD 0075                       _Temp_Initialization 1EEF  
                               ?_Division 0077                                __pbssBANK0 006A  
                              __pbssBANK1 00A0                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 16C1                         __end_of_Temp_Main 1EF5  
                                 ?_IO_Set 0070                            ??_my_MainTimer 0079  
                              ??_LED_Main 0077                           __CFG_VCAPEN$OFF 0000  
                 _DelayOff_Initialization 1F32                             ??_Switch_Main 007A  
                    ??_LED_Initialization 0077                              _DimmerLights 006B  
                       LedPointSelect@led 0073     getAll_DimmerIntr_Dimming_Sw_RF@status 0073  
                  __size_of_DelayOff_Main 0008                               setBuz@count 0078  
                 ?_getDimmerLights_Status 0070                                __pmaintext 1707  
                          _getDelayOff_GO 101F                      ?_Temp_Initialization 0070  
                                 ?___bmul 0072                          ??_setDelayOff_GO 005F  
       __end_of_DimmerIntr_Initialization 0F51             ??_DimmerLights_Initialization 007A  
                                 ?___wmul 0072                                ??_TMR1_ISR 0071  
                           ?_setTemp_Main 0070         __size_of_getDimmerIntr_Dimming_Sw 0016  
                              _getLoad_AD 0B64                                ??_TMR1_Set 0072  
                              __pintentry 0004                    ??_setSw_Initialization 0076  
                              _getLoad_OK 1F0F                 ?_getDimmerIntr_Dimming_Sw 0070  
             ??_DimmerIntr_ValueCalculate 0022                                   ?_setLED 0074  
     __size_of_DimmerLights_TwoPhase_Main 0054                     ?_getMain_Lights_Count 0070  
                                 _ADC_Set 1F24                                   ?_setBuz 0024  
                               ?___awtoft 0020                                 ?___ftpack 0072  
                              _getTemp_AD 0969        __end_of_DimmerLights_SelectPointer 1135  
              _DimmerLights_SelectPointer 1120                                ??_WDT_Main 0072  
                  __end_of_setProductData 1FB3             setDimmerLights_Dimming@lights 0060  
                                 _IOC_ISR 1F9B                                   _IOC_Set 1F85  
           setDimmerLights_Dimming@status 005D     getDimmerLights_Allow_Condition@lights 0077  
                       _Flash_Memory_Main 163B                 __size_of_getDimmer_LoadGO 0007  
                       _Flash_Memory_Read 10F7                        ?_Flash_Memory_Main 0070  
                      ?_Flash_Memory_Read 0070                                ??_Division 0078  
                                 _WDT_Set 1F5C                    __size_of_setCmd_Status 0014  
                              ??_Fosc_Set 0072                               ?_TouchPower 0070  
         __end_of_setDimmerLights_Dimming 16C1                   ??_setLoad_AH_AL_Restore 0072  
                     getCmd_Status@number 0072                           __size_of_IO_Set 001B  
                     setCmd_Status@number 0074         __size_of_setDimmerIntr_Dimming_RF 0029  
       __size_of_setDimmerIntr_Dimming_Sw 0025                 ?_setDimmerIntr_Dimming_RF 0072  
                     ??_Flash_Memory_Main 0078                 ?_setDimmerIntr_Dimming_Sw 0072  
                     ??_Flash_Memory_Read 0072                    __end_of_getDelayOff_GO 102E  
                                 _VarLED1 0168                                   _VarLED2 016C  
          __end_of_getDimmerLights_Status 2000                   __end_of_getSw_KeyStatus 1273  
                   ??_Temp_Initialization 0072                            ??_setTemp_Main 005D  
                         __size_of___bmul 0011                       setProductData@value 005A  
                                 ___awdiv 17AC            ??_setDimmerLights_DimmingClose 0075  
                                 ___lbdiv 12B4                                   ___ftadd 0346  
                                 ___ftdiv 0DFC                                   ___ftneg 1F4A  
                         __size_of___wmul 001D                                   ___ftmul 06AA  
                                 ___fttol 0CCD                       __end_of_Switch_Main 1F9B  
                                 ___lwdiv 14AC                ??_getMain_All_LightsStatus 0072  
                 ??_Buzzer_Initialization 0072                                ??___awtoft 0023  
                              ??___ftpack 0077                           __size_of_setLED 005D  
         DimmerIntr_ValueCalculate@lights 0024                           __size_of_setBuz 0053  
                                 __ptext1 1589                                   __ptext2 105B  
                                 __ptext3 0969                                   __ptext4 0B64  
                                 __ptext5 11E6                                   __ptext6 107A  
                                 __ptext7 0002                                   __ptext8 1EF2  
                                 __ptext9 050E                              __size_of_ISR 001B  
              ??_getMain_All_Error_Status 0072                   ??_setDimmerLights_OnOff 0066  
                         ?_setProductData 005A                 __end_of_Flash_Memory_Main 167C  
               __end_of_Flash_Memory_Read 110B                   ??_setDimmerLights_SwOff 0074  
                 ??_myMain_Initialization 0072                             _DelayOff_Main 1F3A  
                       _DimmerLights_Main 147C            __size_of_DlyOff_Initialization 0005  
               __size_of_setMemory_Modify 0010             __end_of_DlyOff_Initialization 1EFE  
                ??_setTemp_Initialization 0072                              ?_DlyOff_Main 0070  
                      ?_DimmerLights_Main 0070                                   _product 006D  
                          _LedPointSelect 11CC                 getAll_Sw_KeyStatus@status 0073  
                         getTemp_AD@ADRES 0078                       _DelayOffPointSelect 110B  
                                 clrloop0 1F0A            __size_of_Switch_Initialization 0008  
               _DimmerIntr_ValueCalculate 0855             __end_of_Switch_Initialization 1F4A  
                    end_of_initialization 0049                 ??_DelayOff_Initialization 0075  
              __end_of_Flash_Memory_Write 13BF        __size_of_setDimmerLights_DimmingOn 0027  
                                 init_ram 1F03                       ??_DimmerLights_Main 007A  
                    Flash_Memory_Read@ret 0075                                   initloop 1F04  
                              _setSw_Main 01ED                    setDimmerLights_SwOn@sw 002A  
                    Flash_Memory_Modify@i 0077                     _setLED_Initialization 104C  
                         ?_getDelayOff_GO 0070             __size_of_Flash_Memory_Erasing 000C  
                    ?_DelayOffPointSelect 0070                       _Flash_Memory_Modify 075E  
                             ?_getLoad_AD 0070                               ?_getLoad_OK 0070  
                  ??_getMain_Lights_Count 0072                             _setCmd_Status 10E3  
                     _Flash_Memory_Unlock 1F53                               ?_getTemp_AD 0070  
                     __size_of_TouchPower 0015                  setLED_Initialization@led 0076  
                 setTemp_Main@DangerValue 0063                    setSw_Initialization@sw 0076  
               __end_of_DimmerLights_Main 14AC                        _Mcu_Initialization 10BD  
        __size_of_setOverTemp_ADV_Restore 0019                      __end_of_my_MainTimer 15C1  
                          ?_DelayOff_Main 0070                          __CFG_FOSC$INTOSC 0000  
                  __end_of_LedPointSelect 11E6                  Load_Main@ErrorCountValue 0025  
        getDimmerIntr_DimmingValue@lights 0074          setDimmerIntr_DimmingValue@lights 0074  
                     ?_Mcu_Initialization 0070                      ?_Flash_Memory_Modify 0070  
       DimmerLights_AssignationDimming@sw 0060                      ?_Flash_Memory_Unlock 0070  
      __size_of_setDimmerIntr_MaxmumValue 0017            setDimmerIntr_Dimming_RF@lights 0074  
         getMain_All_Error_Status@command 0077                               ___ftdiv@exp 0034  
       __end_of_setDimmerLights_DimmingOn 1343                          ??_Exception_Main 0079  
                          __end_of_IO_Set 1236                               _Switch_Main 1F90  
                       __size_of_LED_Main 000C                          ?_getSw_KeyStatus 0070  
                        ??_setMemory_Data 0073                               ___ftmul@exp 0030  
             ??_DimmerIntr_Initialization 005A                      ??_Mcu_Initialization 0073  
             __end_of_getAll_Sw_KeyStatus 10AC                     ??_DelayOffPointSelect 0072  
                           ?_WDT_Clearing 0070                            ?_setCmd_Status 0072  
                          __end_of___bmul 109B       __size_of_getDimmerIntr_DimmingValue 0014  
        DimmerLights_TwoPhase_Main@lights 0061                            __end_of___wmul 1253  
                       getSw_KeyStatus@sw 0076                         __size_of_TMR1_ISR 0021  
           __size_of_getDimmerLights_Line 000F          DimmerLights_SelectPointer@lights 0073  
                       __size_of_TMR1_Set 000C             __size_of_setDimmerLights_Main 0065  
                          __end_of_setLED 0909             __size_of_setDimmerLights_Line 0016  
           __size_of_setDimmerLights_SwOn 0073                            __end_of_setBuz 17AC  
              __end_of_DimmerLights_IOC_1 144C                __end_of_DimmerLights_IOC_2 147C  
                 ??_getDimmer_Load_Status 0072                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 0014                         __size_of_WDT_Main 0010  
              __end_of_DimmerLights_TMR_1 1551                __end_of_DimmerLights_TMR_2 1589  
                     start_initialization 0021                           ?_LedPointSelect 0070  
                               _Load_Main 004D                               __end_of_ISR 001F  
                  __size_of_getCmd_Status 000F                          _getDimmer_LoadGO 1F16  
                   ??_Flash_Memory_Modify 0076              __size_of_Load_Initialization 0003  
            ?_setDimmerIntr_ControlStatus 0072           __size_of_setTemp_Initialization 0001  
                   ??_Flash_Memory_Unlock 0072                      __end_of_setTemp_Main 05DF  
  __end_of_getDimmerLights_PercentToValue 0A32   __size_of_getDimmerLights_PercentToValue 0065  
          _getDimmerLights_PercentToValue 09CD                       __size_of_getLoad_AD 0072  
                            ?_Buzzer_Main 0070       getDimmerLights_PercentToValue@value 0056  
                     __size_of_getLoad_OK 0007                        _set_TimeoutCleared 1EFE  
       __end_of_setDimmerIntr_MaxmumValue 11CC                                  ??_IO_Set 0072  
                __size_of_Timeout_Counter 0015                                 _VarErrLED 0164  
                       __size_of_Division 000F                               ?_setSw_Main 0070  
                     __size_of_getTemp_AD 0064                    ?_setLED_Initialization 0070  
                       __size_of_Fosc_Set 0004                                 _Temp_Main 1EF2  
                     ?_set_TimeoutCleared 0070                            ??_WDT_Clearing 0072  
                   setProductData@address 005C                       Exception_Main@count 0027  
                     Exception_Main@error 0028                                  ??___bmul 0073  
                                ??___wmul 0076                    __size_of_SwPointSelect 0015  
        __end_of_getMain_All_LightsStatus 103D                               __pdataBANK4 0220  
                                ??_setLED 0075                                  ?_ADC_Set 0070  
                                ??_setBuz 0077                           ??_DelayOff_Main 007A  
             ?_DimmerLights_SelectPointer 0070          __end_of_getMain_All_Error_Status 13ED  
              __size_of_DimmerLights_Main 0030                        setMemory_Data@data 0072  
          setDimmerIntr_Dimming_Sw@lights 0074            getDimmerIntr_Dimming_Sw@lights 0073  
                           ??_setLED_Main 0074                         __size_of___awtoft 0022  
                       __size_of___ftpack 0060                                  ?_IOC_ISR 0070  
                             __pbssCOMMON 007A                                  ?_IOC_Set 0070  
                 Load_Main@Load_RunStatus 0026            getDimmerIntr_Dimming_Sw@status 0072  
                               ___latbits 0003                          _setMemory_Modify 106A  
                              ?_Load_Main 0070                             __pcstackBANK0 0020  
                           __pcstackBANK3 01EC                      ??_set_TimeoutCleared 0072  
               _DimmerIntr_Initialization 0EA5                             DlyOff_Main@sw 005F  
                                ?_WDT_Set 0070             ??_setDimmerIntr_ControlStatus 0073  
                            ??_TouchPower 0072                      __size_of_DlyOff_Main 0068  
          setDimmerIntr_MaxmumValue@value 005A               setDimmerLights_DimmingOn@sw 0074  
                           _DimmerLights1 014D                             _DimmerLights2 0156  
                   setDelayOff_GO@command 005D            __size_of_setLoad_AH_AL_Restore 001B  
           __end_of_setLoad_AH_AL_Restore 121B                                 __pnvBANK0 006D  
             __size_of_LED_Initialization 000C                           Exception_Main@i 0029  
                              ?_Temp_Main 0070        __size_of_DimmerIntr_ValueCalculate 0057  
                        ___lwdiv@dividend 0074                     DelayOffPointSelect@sw 0073  
                           _getCmd_Status 1010                                setBuz@time 0024  
                         ??_setCmd_Status 0073                       setDelayOff_GO@value 005E  
                          Load_Main@error 0022                    _setTemp_Initialization 0800  
                ?_setDimmerLights_Dimming 005D       __end_of_Flash_Memory_Initialization 06AA  
             _Flash_Memory_Initialization 05DF                                  ?___awdiv 0072  
                               __ptext100 1759                                 __ptext101 17AC  
                                ?___lbdiv 0072                                 __ptext110 1EE9  
                               __ptext102 1189                                 __ptext103 15C1  
                               __ptext112 1293                                 __ptext104 1FF1  
                               __ptext113 1551                                 __ptext105 1120  
                               __ptext114 1519                                 __ptext106 1F32  
                               __ptext115 1F9B                                 __ptext107 1EF9  
                               __ptext116 144C                                 __ptext108 110B  
                               __ptext117 141C                                 __ptext109 16C1  
                                ?___ftadd 0039                                  ?___ftdiv 0026  
                                ?___ftneg 0036                                  ?___ftmul 0026  
                                ?___fttol 0046                     __size_of_my_MainTimer 0038  
                                ?___lwdiv 0072                          ??_setProductData 005B  
                 _setOverTemp_ADV_Restore 07E7             __size_of_setSw_Initialization 0007  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 1EEC  
                getDimmerLights_Line@line 0073                        __end_of_TouchPower 1174  
                     __size_of_setSw_Main 0159        __end_of_getDimmerIntr_DimmingValue 10E3  
            ??_setDimmerIntr_DimmingValue 0073                _getDimmerIntr_DimmingValue 10CF  
          __size_of_setDimmerLights_OnOff 00AF             __end_of_setDimmerLights_OnOff 1000  
          __size_of_setDimmerLights_SwOff 003A            __size_of_myMain_Initialization 000F  
           __end_of_setDimmerLights_SwOff 15FB             __end_of_myMain_Initialization 106A  
                          __size_of_getAD 001A                          ___lwdiv@quotient 0077  
                           _SwPointSelect 1174                       __end_of_setLED_Main 163B  
            ??_DimmerLights_TwoPhase_Main 007A                          ??_getDelayOff_GO 0074  
             __end_of_Temp_Initialization 1EF2                            ___wmul@product 0076  
                                _LED_Main 1FCB                           SwPointSelect@sw 0073  
                               clear_ram0 1F09                              _my_MainTimer 1589  
     __end_of_DimmerLights_Initialization 1F7A               _DimmerLights_Initialization 1F6F  
                  _Flash_Memory_Main$3231 0021                            ?_getCmd_Status 0070  
                _getDimmerIntr_Dimming_Sw 1189                                  _GO_nDONE 04E9  
                       ??_Timeout_Counter 0072      __size_of_setDimmerIntr_ControlStatus 0029  
     __size_of_setDimmerIntr_DimmingValue 0015                        _Flash_Memory_Write 1395  
                            ??_getLoad_AD 0076                                  _TMR1_ISR 1293  
                            ??_getLoad_OK 0072                                  _TMR1_Set 1FD7  
                            ??_getTemp_AD 0076                                  _WDT_Main 107A  
                 DlyOff_Initialization@sw 0074                     getSw_KeyStatus@status 0075  
                        __size_of_ADC_Set 0007                         ___wmul@multiplier 0072  
                     ?_Flash_Memory_Write 0070                     __size_of_setTemp_Main 00D1  
                 __size_of_setDelayOff_GO 0084                                  _DelayOff 006A  
                            setSw_Main@sw 002D                               ??_Load_Main 0020  
                        __size_of_IOC_ISR 000C            getMain_All_Error_Status@status 0078  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 1FBF  
                          ?_SwPointSelect 0070                               getAD@adcon0 0075  
                             getAD@adcon1 0072                            setLED_Main@led 0076  
                    __end_of_WDT_Clearing 0004                     _DlyOff_Initialization 1EF9  
       __size_of_getMain_All_LightsStatus 000F                                  _Division 1001  
               ?_getMain_All_LightsStatus 0070                  _setDimmerIntr_Dimming_RF 1343  
             setDimmerLights_OnOff@lights 0068                  _setDimmerIntr_Dimming_Sw 12F7  
                                _Fosc_Set 1EF5                          __size_of_WDT_Set 0009  
                      __end_of_getLoad_AD 0BD6                        __end_of_getLoad_OK 1F16  
                   _Switch_Initialization 1F42         __size_of_getMain_All_Error_Status 002E  
                    ??_Flash_Memory_Write 0072                 ?_getMain_All_Error_Status 0070  
                    __size_of_Buzzer_Main 0046                        __end_of_getTemp_AD 09CD  
                            ?_Switch_Main 0070                         getLoad_AD@channel 0020  
     __size_of_DimmerLights_SelectPointer 0015                                  _SwDetect 00E0  
                             ??_Temp_Main 007A                          getCmd_Status@cmd 0073  
                        setCmd_Status@cmd 0072             _getMain_All_Error_Status$6687 0073  
           _getMain_All_Error_Status$6688 0075                  __end_of_getDimmer_LoadGO 1F1D  
                     _Load_Initialization 1EEC          ??_getDimmerLights_ValueToPercent 0054  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0075  
               ??_setOverTemp_ADV_Restore 0072                              _setTemp_Main 050E  
                        __size_of___awdiv 0054                          __size_of___lbdiv 0021  
                        __size_of___ftadd 00F6                          __size_of___ftdiv 00A9  
                        __size_of___ftneg 0009                          __size_of___ftmul 00B4  
                        __size_of___fttol 0087                          __size_of___lwdiv 0036  
                setDimmerLights_SwOn@idle 0029                                  ___awtoft 12D5  
                        ??_LedPointSelect 0072                                  ___ftpack 0909  
           __size_of_getMain_Lights_Count 0011                    getDimmer_LoadGO@loadgo 0072  
                       getTemp_AD@channel 0077                               _setLED_Main 15FB  
          __size_of_getDimmer_Load_Status 0007                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
           __end_of_getDimmer_Load_Status 1F24                          setDelayOff_GO@sw 0064  
                         ___lwdiv@divisor 0072                      ?_Load_Initialization 0070  
                         ___lwdiv@counter 0079                                  __ptext10 07E7  
                                __ptext11 1EEF                                  __ptext20 114A  
                                __ptext12 0800                                  __ptext21 1F42  
                                __ptext13 1F90                                  __ptext30 004D  
                                __ptext22 1F2B                                  __ptext14 01ED  
                                __ptext31 10AC                                  __ptext23 10BD  
                                __ptext15 131C                                  __ptext40 15FB  
                                __ptext32 1F1D                                  __ptext24 1F5C  
                                __ptext16 1253                                  __ptext41 1FBF  
                                __ptext33 1F16                                  __ptext25 1FD7  
                                __ptext17 1174                                  __ptext50 1F53  
                                __ptext42 104C                                  __ptext34 1FE3  
                                __ptext26 121B                                  __ptext18 115F  
                                __ptext51 10F7                                  __ptext43 163B  
                                __ptext35 1236                                  __ptext27 1F85  
                                __ptext19 1EFE                                  __ptext60 1135  
                                __ptext52 043C                                  __ptext44 109B  
                                __ptext36 14AC                                  __ptext28 1EF5  
                                __ptext61 136C                                  __ptext53 103D  
                                __ptext45 075E                                  __ptext37 1EEC  
                                __ptext29 1F24                                  __ptext70 12F7  
                                __ptext62 0C49                                  __ptext54 147C  
                                __ptext46 1FB3                                  __ptext38 1200  
                                __ptext71 10CF                                  __ptext63 108A  
                                __ptext55 0A97                                  __ptext47 05DF  
                                __ptext39 1FCB                                  __ptext80 0855  
                                __ptext72 14E2                                  __ptext64 10E3  
                                __ptext56 0F51                                  __ptext48 1F7A  
                                __ptext81 1F6F                                  __ptext73 1F0F  
                                __ptext65 102E                                  __ptext57 08AC  
                                __ptext49 1395                                  __ptext90 0DFC  
                                __ptext82 1000                                  __ptext74 13BF  
                                __ptext66 101F                                  __ptext58 11CC  
                                __ptext91 0346                                  __ptext83 0EA5  
                                __ptext75 0801                                  __ptext67 1010  
                                __ptext59 1F65                                  __ptext92 12D5  
                                __ptext84 106A                                  __ptext76 13ED  
                                __ptext68 167C                                  __ptext93 0909  
                                __ptext85 0A32                                  __ptext77 11B5  
                                __ptext69 119F                                  __ptext94 1001  
                                __ptext86 09CD                                  __ptext78 1343  
                                __ptext95 12B4                                  __ptext87 0CCD  
                                __ptext79 0D54                                  __ptext96 1F3A  
                                __ptext88 1F4A                                  __ptext97 0AFC  
                                __ptext89 06AA                                  __ptext98 1FA7  
                                __ptext99 0BD6                                  __product 0220  
                 ??_setLED_Initialization 0076                  ??_getDimmerLights_Status 0074  
            __end_of_getDimmerLights_Line 104C              __end_of_setDimmerLights_Main 0AFC  
            __end_of_setDimmerLights_Line 11B5                        _DimmerLights_IOC_1 141C  
                      _DimmerLights_IOC_2 144C              __end_of_setDimmerLights_SwOn 0C49  
                            ??_setSw_Main 002B                             setLED@command 0074  
                           __size_of_main 0052        __size_of_DimmerIntr_Initialization 00AC  
                         ??_getCmd_Status 0072                        _DimmerLights_TMR_1 1519  
                      _DimmerLights_TMR_2 1551                setDimmerLights_Main@lights 0069  
             __end_of_DelayOffPointSelect 1120                  setOverTemp_ADV_Restore@i 0073  
              ?_setDimmerLights_DimmingOn 0070                  __end_of_setMemory_Modify 107A  
    _getAll_DimmerIntr_Dimming_Sw_RF$2221 0074                       ?_DimmerLights_IOC_1 0070  
                     ?_DimmerLights_IOC_2 0070                       ?_DimmerLights_TMR_1 0070  
                     ?_DimmerLights_TMR_2 0070               __size_of_Mcu_Initialization 0012  
                            getLoad_OK@ok 0072               Flash_Memory_Main@key_Status 0020  
                _getAll_Sw_KeyStatus$5960 0074                                  main@argc 01EC  
                                main@argv 01EE                      _getSw_KeyStatus$5956 0073  
                    _getSw_KeyStatus$5957 0074       getDimmerLights_ValueToPercent@value 0056  
                __size_of_getSw_KeyStatus 0020              setDimmerLights_Dimming@value 005F  
      __end_of_setDimmerIntr_DimmingValue 114A                _setDimmerIntr_DimmingValue 1135  
             __end_of_Flash_Memory_Modify 07E7              __size_of_getAll_Sw_KeyStatus 0011  
             __end_of_Flash_Memory_Unlock 1F5C                           ??_SwPointSelect 0072  
                      __end_of_setSw_Main 0346                     ??_Load_Initialization 0074  
                    ??_DimmerLights_IOC_1 0070                      ??_DimmerLights_IOC_2 0070  
         getDimmerLights_PercentToValue@i 0057                    ?_DlyOff_Initialization 0070  
                    ??_DimmerLights_TMR_1 0070                      ??_DimmerLights_TMR_2 0070  
                          Division@result 0021           __end_of_setOverTemp_ADV_Restore 0800  
      __end_of_DimmerLights_TwoPhase_Main 0855                _DimmerLights_TwoPhase_Main 0801  
                             pic14e$flags 007E              ??_getDimmerIntr_DimmingValue 0072  
              setDimmerLights_Line@lights 0072                   setDimmerLights_SwOff@sw 0074  
                                intlevel1 0000                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 0061                           setDelayOff_GO@j 0062  
                         setDelayOff_GO@k 0063                     setTemp_Main@SafeValue 0061  
  __end_of_setDimmerLights_Initialization 1001   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 1000                ?_setDimmerIntr_MaxmumValue 005A  
                 ?_setTemp_Initialization 0070                           getLoad_AD@ADRES 0023  
                             getLoad_AD@i 0025                               getLoad_AD@j 0022  
                             getLoad_AD@k 0021   __end_of_DimmerLights_AssignationDimming 141C  
__size_of_DimmerLights_AssignationDimming 002F         ??_DimmerLights_AssignationDimming 005D  
        ?_DimmerLights_AssignationDimming 0070           _DimmerLights_AssignationDimming 13ED  
                    _Flash_Memory_Erasing 1FB3                   __size_of_Exception_Main 00D2  
                           Division@value 0020           __end_of_DelayOff_Initialization 1F3A  
                   __size_of_WDT_Clearing 0002                     __end_of_DelayOff_Main 1F42  
                 __size_of_setMemory_Data 000B                            _setDelayOff_GO 0C49  
             ?_getDimmerIntr_DimmingValue 0070          __size_of_setDimmerLights_Dimming 0045  
             getDimmer_Load_Status@status 0072      __size_of_Flash_Memory_Initialization 00CB  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 005D  
                   setMemory_Data@address 0074                ??_getDimmerIntr_Dimming_Sw 0072  
            __end_of_setSw_Initialization 1F32                           _Timeout_Counter 114A  
         __size_of_getDimmerLights_Status 000F           getDimmerLights_ValueToPercent@i 0057  
        Flash_Memory_Initialization@value 0077                __end_of_LED_Initialization 1FCB  
          __end_of_setTemp_Initialization 0801                               Division@num 0077  
                 setMemory_Modify@command 0073                     _setLoad_AH_AL_Restore 1200  
