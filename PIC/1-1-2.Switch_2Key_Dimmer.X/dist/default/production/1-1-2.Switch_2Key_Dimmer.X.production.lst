

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Mar 30 16:46:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1518
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	text56,local,class=CODE,merge=1,delta=2
    77                           	psect	text57,local,class=CODE,merge=1,delta=2
    78                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text59,local,class=CODE,merge=1,delta=2
    80                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,delta=2
    95                           	psect	text75,local,class=CODE,merge=1,delta=2
    96                           	psect	text76,local,class=CODE,merge=1,delta=2
    97                           	psect	text77,local,class=CODE,merge=1,delta=2
    98                           	psect	text78,local,class=CODE,merge=1,delta=2
    99                           	psect	text79,local,class=CODE,merge=1,delta=2
   100                           	psect	text80,local,class=CODE,merge=1,delta=2
   101                           	psect	text81,local,class=CODE,merge=1,delta=2
   102                           	psect	text82,local,class=CODE,merge=1,delta=2
   103                           	psect	text83,local,class=CODE,merge=1,delta=2
   104                           	psect	text84,local,class=CODE,merge=1,delta=2
   105                           	psect	text85,local,class=CODE,merge=1,delta=2
   106                           	psect	text86,local,class=CODE,merge=1,delta=2
   107                           	psect	text87,local,class=CODE,merge=1,delta=2
   108                           	psect	text88,local,class=CODE,merge=1,delta=2
   109                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text92,local,class=CODE,merge=1,delta=2
   113                           	psect	text93,local,class=CODE,merge=1,delta=2
   114                           	psect	text94,local,class=CODE,merge=1,delta=2
   115                           	psect	text95,local,class=CODE,merge=1,delta=2
   116                           	psect	text96,local,class=CODE,merge=1,delta=2
   117                           	psect	text97,local,class=CODE,merge=1,delta=2
   118                           	psect	text98,local,class=CODE,merge=1,delta=2
   119                           	psect	text99,local,class=CODE,merge=1,delta=2
   120                           	psect	text100,local,class=CODE,merge=1,delta=2
   121                           	psect	text101,local,class=CODE,merge=1,delta=2
   122                           	psect	text102,local,class=CODE,merge=1,delta=2
   123                           	psect	text103,local,class=CODE,merge=1,delta=2
   124                           	psect	text104,local,class=CODE,merge=1,delta=2
   125                           	psect	text105,local,class=CODE,merge=1,delta=2
   126                           	psect	text106,local,class=CODE,merge=1,delta=2
   127                           	psect	text107,local,class=CODE,merge=1,delta=2
   128                           	psect	text108,local,class=CODE,merge=1,delta=2
   129                           	psect	text109,local,class=CODE,merge=1,delta=2
   130                           	psect	text110,local,class=CODE,merge=1,inline,delta=2
   131                           	psect	text111,local,class=CODE,merge=1,delta=2
   132                           	psect	text112,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text113,local,class=CODE,merge=1,delta=2
   134                           	psect	text114,local,class=CODE,merge=1,delta=2
   135                           	psect	text115,local,class=CODE,merge=1,delta=2
   136                           	psect	text116,local,class=CODE,merge=1,delta=2
   137                           	psect	text117,local,class=CODE,merge=1,delta=2
   138                           	psect	text118,local,class=CODE,merge=1,delta=2
   139                           	psect	text119,local,class=CODE,merge=1,inline,delta=2
   140                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   141                           	psect	text121,local,class=CODE,merge=1,delta=2
   142                           	psect	text122,local,class=CODE,merge=1,delta=2
   143                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   145                           	psect	intentry,global,class=CODE,delta=2
   146                           	psect	text126,local,class=CODE,merge=1,inline,delta=2
   147                           	psect	text127,local,class=CODE,merge=1,inline,delta=2
   148                           	psect	text128,local,class=CODE,merge=1,inline,delta=2
   149                           	psect	text129,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text130,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text131,local,class=CODE,merge=1,inline,delta=2
   152                           	dabs	1,0x7E,2
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  011D                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  018E                     	;# 
   205  0191                     	;# 
   206  0191                     	;# 
   207  0192                     	;# 
   208  0193                     	;# 
   209  0193                     	;# 
   210  0194                     	;# 
   211  0195                     	;# 
   212  0196                     	;# 
   213  0197                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019D                     	;# 
   223  019E                     	;# 
   224  019F                     	;# 
   225  020D                     	;# 
   226  0210                     	;# 
   227  0211                     	;# 
   228  0211                     	;# 
   229  0212                     	;# 
   230  0212                     	;# 
   231  0213                     	;# 
   232  0213                     	;# 
   233  0214                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0216                     	;# 
   239  0216                     	;# 
   240  0217                     	;# 
   241  0217                     	;# 
   242  0291                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0298                     	;# 
   247  0298                     	;# 
   248  0299                     	;# 
   249  029A                     	;# 
   250  0394                     	;# 
   251  0395                     	;# 
   252  0396                     	;# 
   253  0FE4                     	;# 
   254  0FE5                     	;# 
   255  0FE6                     	;# 
   256  0FE7                     	;# 
   257  0FE8                     	;# 
   258  0FE9                     	;# 
   259  0FEA                     	;# 
   260  0FEB                     	;# 
   261  0FED                     	;# 
   262  0FEE                     	;# 
   263  0FEF                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  0010                     	;# 
   280  0011                     	;# 
   281  0012                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  008C                     	;# 
   292  008D                     	;# 
   293  008E                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  0116                     	;# 
   311  0117                     	;# 
   312  011D                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  018E                     	;# 
   316  0191                     	;# 
   317  0191                     	;# 
   318  0192                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0197                     	;# 
   325  0199                     	;# 
   326  019A                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019C                     	;# 
   332  019C                     	;# 
   333  019D                     	;# 
   334  019E                     	;# 
   335  019F                     	;# 
   336  020D                     	;# 
   337  0210                     	;# 
   338  0211                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0212                     	;# 
   342  0213                     	;# 
   343  0213                     	;# 
   344  0214                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0216                     	;# 
   350  0216                     	;# 
   351  0217                     	;# 
   352  0217                     	;# 
   353  0291                     	;# 
   354  0291                     	;# 
   355  0292                     	;# 
   356  0293                     	;# 
   357  0298                     	;# 
   358  0298                     	;# 
   359  0299                     	;# 
   360  029A                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  008C                     	;# 
   403  008D                     	;# 
   404  008E                     	;# 
   405  0090                     	;# 
   406  0091                     	;# 
   407  0092                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0099                     	;# 
   412  009A                     	;# 
   413  009B                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  0116                     	;# 
   422  0117                     	;# 
   423  011D                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  018E                     	;# 
   427  0191                     	;# 
   428  0191                     	;# 
   429  0192                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0194                     	;# 
   433  0195                     	;# 
   434  0196                     	;# 
   435  0197                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019C                     	;# 
   443  019C                     	;# 
   444  019D                     	;# 
   445  019E                     	;# 
   446  019F                     	;# 
   447  020D                     	;# 
   448  0210                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0216                     	;# 
   461  0216                     	;# 
   462  0217                     	;# 
   463  0217                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0298                     	;# 
   469  0298                     	;# 
   470  0299                     	;# 
   471  029A                     	;# 
   472  0394                     	;# 
   473  0395                     	;# 
   474  0396                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  0116                     	;# 
   533  0117                     	;# 
   534  011D                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  018E                     	;# 
   538  0191                     	;# 
   539  0191                     	;# 
   540  0192                     	;# 
   541  0193                     	;# 
   542  0193                     	;# 
   543  0194                     	;# 
   544  0195                     	;# 
   545  0196                     	;# 
   546  0197                     	;# 
   547  0199                     	;# 
   548  019A                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019B                     	;# 
   552  019B                     	;# 
   553  019C                     	;# 
   554  019C                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  020D                     	;# 
   559  0210                     	;# 
   560  0211                     	;# 
   561  0211                     	;# 
   562  0212                     	;# 
   563  0212                     	;# 
   564  0213                     	;# 
   565  0213                     	;# 
   566  0214                     	;# 
   567  0214                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0216                     	;# 
   572  0216                     	;# 
   573  0217                     	;# 
   574  0217                     	;# 
   575  0291                     	;# 
   576  0291                     	;# 
   577  0292                     	;# 
   578  0293                     	;# 
   579  0298                     	;# 
   580  0298                     	;# 
   581  0299                     	;# 
   582  029A                     	;# 
   583  0394                     	;# 
   584  0395                     	;# 
   585  0396                     	;# 
   586  0FE4                     	;# 
   587  0FE5                     	;# 
   588  0FE6                     	;# 
   589  0FE7                     	;# 
   590  0FE8                     	;# 
   591  0FE9                     	;# 
   592  0FEA                     	;# 
   593  0FEB                     	;# 
   594  0FED                     	;# 
   595  0FEE                     	;# 
   596  0FEF                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0008                     	;# 
   606  0009                     	;# 
   607  000A                     	;# 
   608  000B                     	;# 
   609  000C                     	;# 
   610  000D                     	;# 
   611  000E                     	;# 
   612  0010                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0015                     	;# 
   616  0016                     	;# 
   617  0016                     	;# 
   618  0017                     	;# 
   619  0018                     	;# 
   620  0019                     	;# 
   621  001A                     	;# 
   622  001B                     	;# 
   623  001C                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  0090                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0099                     	;# 
   634  009A                     	;# 
   635  009B                     	;# 
   636  009B                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  010C                     	;# 
   641  010D                     	;# 
   642  010E                     	;# 
   643  0116                     	;# 
   644  0117                     	;# 
   645  011D                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  018E                     	;# 
   649  0191                     	;# 
   650  0191                     	;# 
   651  0192                     	;# 
   652  0193                     	;# 
   653  0193                     	;# 
   654  0194                     	;# 
   655  0195                     	;# 
   656  0196                     	;# 
   657  0197                     	;# 
   658  0199                     	;# 
   659  019A                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019C                     	;# 
   665  019C                     	;# 
   666  019D                     	;# 
   667  019E                     	;# 
   668  019F                     	;# 
   669  020D                     	;# 
   670  0210                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0212                     	;# 
   675  0213                     	;# 
   676  0213                     	;# 
   677  0214                     	;# 
   678  0214                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0215                     	;# 
   682  0216                     	;# 
   683  0216                     	;# 
   684  0217                     	;# 
   685  0217                     	;# 
   686  0291                     	;# 
   687  0291                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0298                     	;# 
   691  0298                     	;# 
   692  0299                     	;# 
   693  029A                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  000E                     	;# 
   723  0010                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  008E                     	;# 
   738  0090                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  010E                     	;# 
   754  0116                     	;# 
   755  0117                     	;# 
   756  011D                     	;# 
   757  018C                     	;# 
   758  018D                     	;# 
   759  018E                     	;# 
   760  0191                     	;# 
   761  0191                     	;# 
   762  0192                     	;# 
   763  0193                     	;# 
   764  0193                     	;# 
   765  0194                     	;# 
   766  0195                     	;# 
   767  0196                     	;# 
   768  0197                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019C                     	;# 
   776  019C                     	;# 
   777  019D                     	;# 
   778  019E                     	;# 
   779  019F                     	;# 
   780  020D                     	;# 
   781  0210                     	;# 
   782  0211                     	;# 
   783  0211                     	;# 
   784  0212                     	;# 
   785  0212                     	;# 
   786  0213                     	;# 
   787  0213                     	;# 
   788  0214                     	;# 
   789  0214                     	;# 
   790  0215                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0216                     	;# 
   794  0216                     	;# 
   795  0217                     	;# 
   796  0217                     	;# 
   797  0291                     	;# 
   798  0291                     	;# 
   799  0292                     	;# 
   800  0293                     	;# 
   801  0298                     	;# 
   802  0298                     	;# 
   803  0299                     	;# 
   804  029A                     	;# 
   805  0394                     	;# 
   806  0395                     	;# 
   807  0396                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  000D                     	;# 
   833  000E                     	;# 
   834  0010                     	;# 
   835  0011                     	;# 
   836  0012                     	;# 
   837  0015                     	;# 
   838  0016                     	;# 
   839  0016                     	;# 
   840  0017                     	;# 
   841  0018                     	;# 
   842  0019                     	;# 
   843  001A                     	;# 
   844  001B                     	;# 
   845  001C                     	;# 
   846  008C                     	;# 
   847  008D                     	;# 
   848  008E                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0095                     	;# 
   853  0096                     	;# 
   854  0097                     	;# 
   855  0099                     	;# 
   856  009A                     	;# 
   857  009B                     	;# 
   858  009B                     	;# 
   859  009C                     	;# 
   860  009D                     	;# 
   861  009E                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  0116                     	;# 
   866  0117                     	;# 
   867  011D                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0194                     	;# 
   877  0195                     	;# 
   878  0196                     	;# 
   879  0197                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019C                     	;# 
   887  019C                     	;# 
   888  019D                     	;# 
   889  019E                     	;# 
   890  019F                     	;# 
   891  020D                     	;# 
   892  0210                     	;# 
   893  0211                     	;# 
   894  0211                     	;# 
   895  0212                     	;# 
   896  0212                     	;# 
   897  0213                     	;# 
   898  0213                     	;# 
   899  0214                     	;# 
   900  0214                     	;# 
   901  0215                     	;# 
   902  0215                     	;# 
   903  0215                     	;# 
   904  0216                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0217                     	;# 
   908  0291                     	;# 
   909  0291                     	;# 
   910  0292                     	;# 
   911  0293                     	;# 
   912  0298                     	;# 
   913  0298                     	;# 
   914  0299                     	;# 
   915  029A                     	;# 
   916  0394                     	;# 
   917  0395                     	;# 
   918  0396                     	;# 
   919  0FE4                     	;# 
   920  0FE5                     	;# 
   921  0FE6                     	;# 
   922  0FE7                     	;# 
   923  0FE8                     	;# 
   924  0FE9                     	;# 
   925  0FEA                     	;# 
   926  0FEB                     	;# 
   927  0FED                     	;# 
   928  0FEE                     	;# 
   929  0FEF                     	;# 
   930  0000                     	;# 
   931  0001                     	;# 
   932  0002                     	;# 
   933  0003                     	;# 
   934  0004                     	;# 
   935  0005                     	;# 
   936  0006                     	;# 
   937  0007                     	;# 
   938  0008                     	;# 
   939  0009                     	;# 
   940  000A                     	;# 
   941  000B                     	;# 
   942  000C                     	;# 
   943  000D                     	;# 
   944  000E                     	;# 
   945  0010                     	;# 
   946  0011                     	;# 
   947  0012                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  008C                     	;# 
   958  008D                     	;# 
   959  008E                     	;# 
   960  0090                     	;# 
   961  0091                     	;# 
   962  0092                     	;# 
   963  0095                     	;# 
   964  0096                     	;# 
   965  0097                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  010C                     	;# 
   974  010D                     	;# 
   975  010E                     	;# 
   976  0116                     	;# 
   977  0117                     	;# 
   978  011D                     	;# 
   979  018C                     	;# 
   980  018D                     	;# 
   981  018E                     	;# 
   982  0191                     	;# 
   983  0191                     	;# 
   984  0192                     	;# 
   985  0193                     	;# 
   986  0193                     	;# 
   987  0194                     	;# 
   988  0195                     	;# 
   989  0196                     	;# 
   990  0197                     	;# 
   991  0199                     	;# 
   992  019A                     	;# 
   993  019B                     	;# 
   994  019B                     	;# 
   995  019B                     	;# 
   996  019B                     	;# 
   997  019C                     	;# 
   998  019C                     	;# 
   999  019D                     	;# 
  1000  019E                     	;# 
  1001  019F                     	;# 
  1002  020D                     	;# 
  1003  0210                     	;# 
  1004  0211                     	;# 
  1005  0211                     	;# 
  1006  0212                     	;# 
  1007  0212                     	;# 
  1008  0213                     	;# 
  1009  0213                     	;# 
  1010  0214                     	;# 
  1011  0214                     	;# 
  1012  0215                     	;# 
  1013  0215                     	;# 
  1014  0215                     	;# 
  1015  0216                     	;# 
  1016  0216                     	;# 
  1017  0217                     	;# 
  1018  0217                     	;# 
  1019  0291                     	;# 
  1020  0291                     	;# 
  1021  0292                     	;# 
  1022  0293                     	;# 
  1023  0298                     	;# 
  1024  0298                     	;# 
  1025  0299                     	;# 
  1026  029A                     	;# 
  1027  0394                     	;# 
  1028  0395                     	;# 
  1029  0396                     	;# 
  1030  0FE4                     	;# 
  1031  0FE5                     	;# 
  1032  0FE6                     	;# 
  1033  0FE7                     	;# 
  1034  0FE8                     	;# 
  1035  0FE9                     	;# 
  1036  0FEA                     	;# 
  1037  0FEB                     	;# 
  1038  0FED                     	;# 
  1039  0FEE                     	;# 
  1040  0FEF                     	;# 
  1041  0000                     	;# 
  1042  0001                     	;# 
  1043  0002                     	;# 
  1044  0003                     	;# 
  1045  0004                     	;# 
  1046  0005                     	;# 
  1047  0006                     	;# 
  1048  0007                     	;# 
  1049  0008                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  0010                     	;# 
  1057  0011                     	;# 
  1058  0012                     	;# 
  1059  0015                     	;# 
  1060  0016                     	;# 
  1061  0016                     	;# 
  1062  0017                     	;# 
  1063  0018                     	;# 
  1064  0019                     	;# 
  1065  001A                     	;# 
  1066  001B                     	;# 
  1067  001C                     	;# 
  1068  008C                     	;# 
  1069  008D                     	;# 
  1070  008E                     	;# 
  1071  0090                     	;# 
  1072  0091                     	;# 
  1073  0092                     	;# 
  1074  0095                     	;# 
  1075  0096                     	;# 
  1076  0097                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  010E                     	;# 
  1087  0116                     	;# 
  1088  0117                     	;# 
  1089  011D                     	;# 
  1090  018C                     	;# 
  1091  018D                     	;# 
  1092  018E                     	;# 
  1093  0191                     	;# 
  1094  0191                     	;# 
  1095  0192                     	;# 
  1096  0193                     	;# 
  1097  0193                     	;# 
  1098  0194                     	;# 
  1099  0195                     	;# 
  1100  0196                     	;# 
  1101  0197                     	;# 
  1102  0199                     	;# 
  1103  019A                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019B                     	;# 
  1107  019B                     	;# 
  1108  019C                     	;# 
  1109  019C                     	;# 
  1110  019D                     	;# 
  1111  019E                     	;# 
  1112  019F                     	;# 
  1113  020D                     	;# 
  1114  0210                     	;# 
  1115  0211                     	;# 
  1116  0211                     	;# 
  1117  0212                     	;# 
  1118  0212                     	;# 
  1119  0213                     	;# 
  1120  0213                     	;# 
  1121  0214                     	;# 
  1122  0214                     	;# 
  1123  0215                     	;# 
  1124  0215                     	;# 
  1125  0215                     	;# 
  1126  0216                     	;# 
  1127  0216                     	;# 
  1128  0217                     	;# 
  1129  0217                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0298                     	;# 
  1135  0298                     	;# 
  1136  0299                     	;# 
  1137  029A                     	;# 
  1138  0394                     	;# 
  1139  0395                     	;# 
  1140  0396                     	;# 
  1141  0FE4                     	;# 
  1142  0FE5                     	;# 
  1143  0FE6                     	;# 
  1144  0FE7                     	;# 
  1145  0FE8                     	;# 
  1146  0FE9                     	;# 
  1147  0FEA                     	;# 
  1148  0FEB                     	;# 
  1149  0FED                     	;# 
  1150  0FEE                     	;# 
  1151  0FEF                     	;# 
  1152  0000                     	;# 
  1153  0001                     	;# 
  1154  0002                     	;# 
  1155  0003                     	;# 
  1156  0004                     	;# 
  1157  0005                     	;# 
  1158  0006                     	;# 
  1159  0007                     	;# 
  1160  0008                     	;# 
  1161  0009                     	;# 
  1162  000A                     	;# 
  1163  000B                     	;# 
  1164  000C                     	;# 
  1165  000D                     	;# 
  1166  000E                     	;# 
  1167  0010                     	;# 
  1168  0011                     	;# 
  1169  0012                     	;# 
  1170  0015                     	;# 
  1171  0016                     	;# 
  1172  0016                     	;# 
  1173  0017                     	;# 
  1174  0018                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001C                     	;# 
  1179  008C                     	;# 
  1180  008D                     	;# 
  1181  008E                     	;# 
  1182  0090                     	;# 
  1183  0091                     	;# 
  1184  0092                     	;# 
  1185  0095                     	;# 
  1186  0096                     	;# 
  1187  0097                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009B                     	;# 
  1192  009C                     	;# 
  1193  009D                     	;# 
  1194  009E                     	;# 
  1195  010C                     	;# 
  1196  010D                     	;# 
  1197  010E                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  011D                     	;# 
  1201  018C                     	;# 
  1202  018D                     	;# 
  1203  018E                     	;# 
  1204  0191                     	;# 
  1205  0191                     	;# 
  1206  0192                     	;# 
  1207  0193                     	;# 
  1208  0193                     	;# 
  1209  0194                     	;# 
  1210  0195                     	;# 
  1211  0196                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019C                     	;# 
  1220  019C                     	;# 
  1221  019D                     	;# 
  1222  019E                     	;# 
  1223  019F                     	;# 
  1224  020D                     	;# 
  1225  0210                     	;# 
  1226  0211                     	;# 
  1227  0211                     	;# 
  1228  0212                     	;# 
  1229  0212                     	;# 
  1230  0213                     	;# 
  1231  0213                     	;# 
  1232  0214                     	;# 
  1233  0214                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  0291                     	;# 
  1242  0291                     	;# 
  1243  0292                     	;# 
  1244  0293                     	;# 
  1245  0298                     	;# 
  1246  0298                     	;# 
  1247  0299                     	;# 
  1248  029A                     	;# 
  1249  0394                     	;# 
  1250  0395                     	;# 
  1251  0396                     	;# 
  1252  0FE4                     	;# 
  1253  0FE5                     	;# 
  1254  0FE6                     	;# 
  1255  0FE7                     	;# 
  1256  0FE8                     	;# 
  1257  0FE9                     	;# 
  1258  0FEA                     	;# 
  1259  0FEB                     	;# 
  1260  0FED                     	;# 
  1261  0FEE                     	;# 
  1262  0FEF                     	;# 
  1263  0000                     	;# 
  1264  0001                     	;# 
  1265  0002                     	;# 
  1266  0003                     	;# 
  1267  0004                     	;# 
  1268  0005                     	;# 
  1269  0006                     	;# 
  1270  0007                     	;# 
  1271  0008                     	;# 
  1272  0009                     	;# 
  1273  000A                     	;# 
  1274  000B                     	;# 
  1275  000C                     	;# 
  1276  000D                     	;# 
  1277  000E                     	;# 
  1278  0010                     	;# 
  1279  0011                     	;# 
  1280  0012                     	;# 
  1281  0015                     	;# 
  1282  0016                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001B                     	;# 
  1289  001C                     	;# 
  1290  008C                     	;# 
  1291  008D                     	;# 
  1292  008E                     	;# 
  1293  0090                     	;# 
  1294  0091                     	;# 
  1295  0092                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0097                     	;# 
  1299  0099                     	;# 
  1300  009A                     	;# 
  1301  009B                     	;# 
  1302  009B                     	;# 
  1303  009C                     	;# 
  1304  009D                     	;# 
  1305  009E                     	;# 
  1306  010C                     	;# 
  1307  010D                     	;# 
  1308  010E                     	;# 
  1309  0116                     	;# 
  1310  0117                     	;# 
  1311  011D                     	;# 
  1312  018C                     	;# 
  1313  018D                     	;# 
  1314  018E                     	;# 
  1315  0191                     	;# 
  1316  0191                     	;# 
  1317  0192                     	;# 
  1318  0193                     	;# 
  1319  0193                     	;# 
  1320  0194                     	;# 
  1321  0195                     	;# 
  1322  0196                     	;# 
  1323  0197                     	;# 
  1324  0199                     	;# 
  1325  019A                     	;# 
  1326  019B                     	;# 
  1327  019B                     	;# 
  1328  019B                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  019C                     	;# 
  1332  019D                     	;# 
  1333  019E                     	;# 
  1334  019F                     	;# 
  1335  020D                     	;# 
  1336  0210                     	;# 
  1337  0211                     	;# 
  1338  0211                     	;# 
  1339  0212                     	;# 
  1340  0212                     	;# 
  1341  0213                     	;# 
  1342  0213                     	;# 
  1343  0214                     	;# 
  1344  0214                     	;# 
  1345  0215                     	;# 
  1346  0215                     	;# 
  1347  0215                     	;# 
  1348  0216                     	;# 
  1349  0216                     	;# 
  1350  0217                     	;# 
  1351  0217                     	;# 
  1352  0291                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0293                     	;# 
  1356  0298                     	;# 
  1357  0298                     	;# 
  1358  0299                     	;# 
  1359  029A                     	;# 
  1360  0394                     	;# 
  1361  0395                     	;# 
  1362  0396                     	;# 
  1363  0FE4                     	;# 
  1364  0FE5                     	;# 
  1365  0FE6                     	;# 
  1366  0FE7                     	;# 
  1367  0FE8                     	;# 
  1368  0FE9                     	;# 
  1369  0FEA                     	;# 
  1370  0FEB                     	;# 
  1371  0FED                     	;# 
  1372  0FEE                     	;# 
  1373  0FEF                     	;# 
  1374  0000                     	;# 
  1375  0001                     	;# 
  1376  0002                     	;# 
  1377  0003                     	;# 
  1378  0004                     	;# 
  1379  0005                     	;# 
  1380  0006                     	;# 
  1381  0007                     	;# 
  1382  0008                     	;# 
  1383  0009                     	;# 
  1384  000A                     	;# 
  1385  000B                     	;# 
  1386  000C                     	;# 
  1387  000D                     	;# 
  1388  000E                     	;# 
  1389  0010                     	;# 
  1390  0011                     	;# 
  1391  0012                     	;# 
  1392  0015                     	;# 
  1393  0016                     	;# 
  1394  0016                     	;# 
  1395  0017                     	;# 
  1396  0018                     	;# 
  1397  0019                     	;# 
  1398  001A                     	;# 
  1399  001B                     	;# 
  1400  001C                     	;# 
  1401  008C                     	;# 
  1402  008D                     	;# 
  1403  008E                     	;# 
  1404  0090                     	;# 
  1405  0091                     	;# 
  1406  0092                     	;# 
  1407  0095                     	;# 
  1408  0096                     	;# 
  1409  0097                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  010C                     	;# 
  1418  010D                     	;# 
  1419  010E                     	;# 
  1420  0116                     	;# 
  1421  0117                     	;# 
  1422  011D                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  018E                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0194                     	;# 
  1432  0195                     	;# 
  1433  0196                     	;# 
  1434  0197                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019B                     	;# 
  1440  019B                     	;# 
  1441  019C                     	;# 
  1442  019C                     	;# 
  1443  019D                     	;# 
  1444  019E                     	;# 
  1445  019F                     	;# 
  1446  020D                     	;# 
  1447  0210                     	;# 
  1448  0211                     	;# 
  1449  0211                     	;# 
  1450  0212                     	;# 
  1451  0212                     	;# 
  1452  0213                     	;# 
  1453  0213                     	;# 
  1454  0214                     	;# 
  1455  0214                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  0291                     	;# 
  1464  0291                     	;# 
  1465  0292                     	;# 
  1466  0293                     	;# 
  1467  0298                     	;# 
  1468  0298                     	;# 
  1469  0299                     	;# 
  1470  029A                     	;# 
  1471  0394                     	;# 
  1472  0395                     	;# 
  1473  0396                     	;# 
  1474  0FE4                     	;# 
  1475  0FE5                     	;# 
  1476  0FE6                     	;# 
  1477  0FE7                     	;# 
  1478  0FE8                     	;# 
  1479  0FE9                     	;# 
  1480  0FEA                     	;# 
  1481  0FEB                     	;# 
  1482  0FED                     	;# 
  1483  0FEE                     	;# 
  1484  0FEF                     	;# 
  1485  0000                     	;# 
  1486  0001                     	;# 
  1487  0002                     	;# 
  1488  0003                     	;# 
  1489  0004                     	;# 
  1490  0005                     	;# 
  1491  0006                     	;# 
  1492  0007                     	;# 
  1493  0008                     	;# 
  1494  0009                     	;# 
  1495  000A                     	;# 
  1496  000B                     	;# 
  1497  000C                     	;# 
  1498  000D                     	;# 
  1499  000E                     	;# 
  1500  0010                     	;# 
  1501  0011                     	;# 
  1502  0012                     	;# 
  1503  0015                     	;# 
  1504  0016                     	;# 
  1505  0016                     	;# 
  1506  0017                     	;# 
  1507  0018                     	;# 
  1508  0019                     	;# 
  1509  001A                     	;# 
  1510  001B                     	;# 
  1511  001C                     	;# 
  1512  008C                     	;# 
  1513  008D                     	;# 
  1514  008E                     	;# 
  1515  0090                     	;# 
  1516  0091                     	;# 
  1517  0092                     	;# 
  1518  0095                     	;# 
  1519  0096                     	;# 
  1520  0097                     	;# 
  1521  0099                     	;# 
  1522  009A                     	;# 
  1523  009B                     	;# 
  1524  009B                     	;# 
  1525  009C                     	;# 
  1526  009D                     	;# 
  1527  009E                     	;# 
  1528  010C                     	;# 
  1529  010D                     	;# 
  1530  010E                     	;# 
  1531  0116                     	;# 
  1532  0117                     	;# 
  1533  011D                     	;# 
  1534  018C                     	;# 
  1535  018D                     	;# 
  1536  018E                     	;# 
  1537  0191                     	;# 
  1538  0191                     	;# 
  1539  0192                     	;# 
  1540  0193                     	;# 
  1541  0193                     	;# 
  1542  0194                     	;# 
  1543  0195                     	;# 
  1544  0196                     	;# 
  1545  0197                     	;# 
  1546  0199                     	;# 
  1547  019A                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019C                     	;# 
  1553  019C                     	;# 
  1554  019D                     	;# 
  1555  019E                     	;# 
  1556  019F                     	;# 
  1557  020D                     	;# 
  1558  0210                     	;# 
  1559  0211                     	;# 
  1560  0211                     	;# 
  1561  0212                     	;# 
  1562  0212                     	;# 
  1563  0213                     	;# 
  1564  0213                     	;# 
  1565  0214                     	;# 
  1566  0214                     	;# 
  1567  0215                     	;# 
  1568  0215                     	;# 
  1569  0215                     	;# 
  1570  0216                     	;# 
  1571  0216                     	;# 
  1572  0217                     	;# 
  1573  0217                     	;# 
  1574  0291                     	;# 
  1575  0291                     	;# 
  1576  0292                     	;# 
  1577  0293                     	;# 
  1578  0298                     	;# 
  1579  0298                     	;# 
  1580  0299                     	;# 
  1581  029A                     	;# 
  1582  0394                     	;# 
  1583  0395                     	;# 
  1584  0396                     	;# 
  1585  0FE4                     	;# 
  1586  0FE5                     	;# 
  1587  0FE6                     	;# 
  1588  0FE7                     	;# 
  1589  0FE8                     	;# 
  1590  0FE9                     	;# 
  1591  0FEA                     	;# 
  1592  0FEB                     	;# 
  1593  0FED                     	;# 
  1594  0FEE                     	;# 
  1595  0FEF                     	;# 
  1596  0000                     	;# 
  1597  0001                     	;# 
  1598  0002                     	;# 
  1599  0003                     	;# 
  1600  0004                     	;# 
  1601  0005                     	;# 
  1602  0006                     	;# 
  1603  0007                     	;# 
  1604  0008                     	;# 
  1605  0009                     	;# 
  1606  000A                     	;# 
  1607  000B                     	;# 
  1608  000C                     	;# 
  1609  000D                     	;# 
  1610  000E                     	;# 
  1611  0010                     	;# 
  1612  0011                     	;# 
  1613  0012                     	;# 
  1614  0015                     	;# 
  1615  0016                     	;# 
  1616  0016                     	;# 
  1617  0017                     	;# 
  1618  0018                     	;# 
  1619  0019                     	;# 
  1620  001A                     	;# 
  1621  001B                     	;# 
  1622  001C                     	;# 
  1623  008C                     	;# 
  1624  008D                     	;# 
  1625  008E                     	;# 
  1626  0090                     	;# 
  1627  0091                     	;# 
  1628  0092                     	;# 
  1629  0095                     	;# 
  1630  0096                     	;# 
  1631  0097                     	;# 
  1632  0099                     	;# 
  1633  009A                     	;# 
  1634  009B                     	;# 
  1635  009B                     	;# 
  1636  009C                     	;# 
  1637  009D                     	;# 
  1638  009E                     	;# 
  1639  010C                     	;# 
  1640  010D                     	;# 
  1641  010E                     	;# 
  1642  0116                     	;# 
  1643  0117                     	;# 
  1644  011D                     	;# 
  1645  018C                     	;# 
  1646  018D                     	;# 
  1647  018E                     	;# 
  1648  0191                     	;# 
  1649  0191                     	;# 
  1650  0192                     	;# 
  1651  0193                     	;# 
  1652  0193                     	;# 
  1653  0194                     	;# 
  1654  0195                     	;# 
  1655  0196                     	;# 
  1656  0197                     	;# 
  1657  0199                     	;# 
  1658  019A                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019C                     	;# 
  1664  019C                     	;# 
  1665  019D                     	;# 
  1666  019E                     	;# 
  1667  019F                     	;# 
  1668  020D                     	;# 
  1669  0210                     	;# 
  1670  0211                     	;# 
  1671  0211                     	;# 
  1672  0212                     	;# 
  1673  0212                     	;# 
  1674  0213                     	;# 
  1675  0213                     	;# 
  1676  0214                     	;# 
  1677  0214                     	;# 
  1678  0215                     	;# 
  1679  0215                     	;# 
  1680  0215                     	;# 
  1681  0216                     	;# 
  1682  0216                     	;# 
  1683  0217                     	;# 
  1684  0217                     	;# 
  1685  0291                     	;# 
  1686  0291                     	;# 
  1687  0292                     	;# 
  1688  0293                     	;# 
  1689  0298                     	;# 
  1690  0298                     	;# 
  1691  0299                     	;# 
  1692  029A                     	;# 
  1693  0394                     	;# 
  1694  0395                     	;# 
  1695  0396                     	;# 
  1696  0FE4                     	;# 
  1697  0FE5                     	;# 
  1698  0FE6                     	;# 
  1699  0FE7                     	;# 
  1700  0FE8                     	;# 
  1701  0FE9                     	;# 
  1702  0FEA                     	;# 
  1703  0FEB                     	;# 
  1704  0FED                     	;# 
  1705  0FEE                     	;# 
  1706  0FEF                     	;# 
  1707  0000                     	;# 
  1708  0001                     	;# 
  1709  0002                     	;# 
  1710  0003                     	;# 
  1711  0004                     	;# 
  1712  0005                     	;# 
  1713  0006                     	;# 
  1714  0007                     	;# 
  1715  0008                     	;# 
  1716  0009                     	;# 
  1717  000A                     	;# 
  1718  000B                     	;# 
  1719  000C                     	;# 
  1720  000D                     	;# 
  1721  000E                     	;# 
  1722  0010                     	;# 
  1723  0011                     	;# 
  1724  0012                     	;# 
  1725  0015                     	;# 
  1726  0016                     	;# 
  1727  0016                     	;# 
  1728  0017                     	;# 
  1729  0018                     	;# 
  1730  0019                     	;# 
  1731  001A                     	;# 
  1732  001B                     	;# 
  1733  001C                     	;# 
  1734  008C                     	;# 
  1735  008D                     	;# 
  1736  008E                     	;# 
  1737  0090                     	;# 
  1738  0091                     	;# 
  1739  0092                     	;# 
  1740  0095                     	;# 
  1741  0096                     	;# 
  1742  0097                     	;# 
  1743  0099                     	;# 
  1744  009A                     	;# 
  1745  009B                     	;# 
  1746  009B                     	;# 
  1747  009C                     	;# 
  1748  009D                     	;# 
  1749  009E                     	;# 
  1750  010C                     	;# 
  1751  010D                     	;# 
  1752  010E                     	;# 
  1753  0116                     	;# 
  1754  0117                     	;# 
  1755  011D                     	;# 
  1756  018C                     	;# 
  1757  018D                     	;# 
  1758  018E                     	;# 
  1759  0191                     	;# 
  1760  0191                     	;# 
  1761  0192                     	;# 
  1762  0193                     	;# 
  1763  0193                     	;# 
  1764  0194                     	;# 
  1765  0195                     	;# 
  1766  0196                     	;# 
  1767  0197                     	;# 
  1768  0199                     	;# 
  1769  019A                     	;# 
  1770  019B                     	;# 
  1771  019B                     	;# 
  1772  019B                     	;# 
  1773  019B                     	;# 
  1774  019C                     	;# 
  1775  019C                     	;# 
  1776  019D                     	;# 
  1777  019E                     	;# 
  1778  019F                     	;# 
  1779  020D                     	;# 
  1780  0210                     	;# 
  1781  0211                     	;# 
  1782  0211                     	;# 
  1783  0212                     	;# 
  1784  0212                     	;# 
  1785  0213                     	;# 
  1786  0213                     	;# 
  1787  0214                     	;# 
  1788  0214                     	;# 
  1789  0215                     	;# 
  1790  0215                     	;# 
  1791  0215                     	;# 
  1792  0216                     	;# 
  1793  0216                     	;# 
  1794  0217                     	;# 
  1795  0217                     	;# 
  1796  0291                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  029A                     	;# 
  1804  0394                     	;# 
  1805  0395                     	;# 
  1806  0396                     	;# 
  1807  0FE4                     	;# 
  1808  0FE5                     	;# 
  1809  0FE6                     	;# 
  1810  0FE7                     	;# 
  1811  0FE8                     	;# 
  1812  0FE9                     	;# 
  1813  0FEA                     	;# 
  1814  0FEB                     	;# 
  1815  0FED                     	;# 
  1816  0FEE                     	;# 
  1817  0FEF                     	;# 
  1818  0000                     	;# 
  1819  0001                     	;# 
  1820  0002                     	;# 
  1821  0003                     	;# 
  1822  0004                     	;# 
  1823  0005                     	;# 
  1824  0006                     	;# 
  1825  0007                     	;# 
  1826  0008                     	;# 
  1827  0009                     	;# 
  1828  000A                     	;# 
  1829  000B                     	;# 
  1830  000C                     	;# 
  1831  000D                     	;# 
  1832  000E                     	;# 
  1833  0010                     	;# 
  1834  0011                     	;# 
  1835  0012                     	;# 
  1836  0015                     	;# 
  1837  0016                     	;# 
  1838  0016                     	;# 
  1839  0017                     	;# 
  1840  0018                     	;# 
  1841  0019                     	;# 
  1842  001A                     	;# 
  1843  001B                     	;# 
  1844  001C                     	;# 
  1845  008C                     	;# 
  1846  008D                     	;# 
  1847  008E                     	;# 
  1848  0090                     	;# 
  1849  0091                     	;# 
  1850  0092                     	;# 
  1851  0095                     	;# 
  1852  0096                     	;# 
  1853  0097                     	;# 
  1854  0099                     	;# 
  1855  009A                     	;# 
  1856  009B                     	;# 
  1857  009B                     	;# 
  1858  009C                     	;# 
  1859  009D                     	;# 
  1860  009E                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  0116                     	;# 
  1865  0117                     	;# 
  1866  011D                     	;# 
  1867  018C                     	;# 
  1868  018D                     	;# 
  1869  018E                     	;# 
  1870  0191                     	;# 
  1871  0191                     	;# 
  1872  0192                     	;# 
  1873  0193                     	;# 
  1874  0193                     	;# 
  1875  0194                     	;# 
  1876  0195                     	;# 
  1877  0196                     	;# 
  1878  0197                     	;# 
  1879  0199                     	;# 
  1880  019A                     	;# 
  1881  019B                     	;# 
  1882  019B                     	;# 
  1883  019B                     	;# 
  1884  019B                     	;# 
  1885  019C                     	;# 
  1886  019C                     	;# 
  1887  019D                     	;# 
  1888  019E                     	;# 
  1889  019F                     	;# 
  1890  020D                     	;# 
  1891  0210                     	;# 
  1892  0211                     	;# 
  1893  0211                     	;# 
  1894  0212                     	;# 
  1895  0212                     	;# 
  1896  0213                     	;# 
  1897  0213                     	;# 
  1898  0214                     	;# 
  1899  0214                     	;# 
  1900  0215                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0216                     	;# 
  1904  0216                     	;# 
  1905  0217                     	;# 
  1906  0217                     	;# 
  1907  0291                     	;# 
  1908  0291                     	;# 
  1909  0292                     	;# 
  1910  0293                     	;# 
  1911  0298                     	;# 
  1912  0298                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  0394                     	;# 
  1916  0395                     	;# 
  1917  0396                     	;# 
  1918  0FE4                     	;# 
  1919  0FE5                     	;# 
  1920  0FE6                     	;# 
  1921  0FE7                     	;# 
  1922  0FE8                     	;# 
  1923  0FE9                     	;# 
  1924  0FEA                     	;# 
  1925  0FEB                     	;# 
  1926  0FED                     	;# 
  1927  0FEE                     	;# 
  1928  0FEF                     	;# 
  1929  0000                     	;# 
  1930  0001                     	;# 
  1931  0002                     	;# 
  1932  0003                     	;# 
  1933  0004                     	;# 
  1934  0005                     	;# 
  1935  0006                     	;# 
  1936  0007                     	;# 
  1937  0008                     	;# 
  1938  0009                     	;# 
  1939  000A                     	;# 
  1940  000B                     	;# 
  1941  000C                     	;# 
  1942  000D                     	;# 
  1943  000E                     	;# 
  1944  0010                     	;# 
  1945  0011                     	;# 
  1946  0012                     	;# 
  1947  0015                     	;# 
  1948  0016                     	;# 
  1949  0016                     	;# 
  1950  0017                     	;# 
  1951  0018                     	;# 
  1952  0019                     	;# 
  1953  001A                     	;# 
  1954  001B                     	;# 
  1955  001C                     	;# 
  1956  008C                     	;# 
  1957  008D                     	;# 
  1958  008E                     	;# 
  1959  0090                     	;# 
  1960  0091                     	;# 
  1961  0092                     	;# 
  1962  0095                     	;# 
  1963  0096                     	;# 
  1964  0097                     	;# 
  1965  0099                     	;# 
  1966  009A                     	;# 
  1967  009B                     	;# 
  1968  009B                     	;# 
  1969  009C                     	;# 
  1970  009D                     	;# 
  1971  009E                     	;# 
  1972  010C                     	;# 
  1973  010D                     	;# 
  1974  010E                     	;# 
  1975  0116                     	;# 
  1976  0117                     	;# 
  1977  011D                     	;# 
  1978  018C                     	;# 
  1979  018D                     	;# 
  1980  018E                     	;# 
  1981  0191                     	;# 
  1982  0191                     	;# 
  1983  0192                     	;# 
  1984  0193                     	;# 
  1985  0193                     	;# 
  1986  0194                     	;# 
  1987  0195                     	;# 
  1988  0196                     	;# 
  1989  0197                     	;# 
  1990  0199                     	;# 
  1991  019A                     	;# 
  1992  019B                     	;# 
  1993  019B                     	;# 
  1994  019B                     	;# 
  1995  019B                     	;# 
  1996  019C                     	;# 
  1997  019C                     	;# 
  1998  019D                     	;# 
  1999  019E                     	;# 
  2000  019F                     	;# 
  2001  020D                     	;# 
  2002  0210                     	;# 
  2003  0211                     	;# 
  2004  0211                     	;# 
  2005  0212                     	;# 
  2006  0212                     	;# 
  2007  0213                     	;# 
  2008  0213                     	;# 
  2009  0214                     	;# 
  2010  0214                     	;# 
  2011  0215                     	;# 
  2012  0215                     	;# 
  2013  0215                     	;# 
  2014  0216                     	;# 
  2015  0216                     	;# 
  2016  0217                     	;# 
  2017  0217                     	;# 
  2018  0291                     	;# 
  2019  0291                     	;# 
  2020  0292                     	;# 
  2021  0293                     	;# 
  2022  0298                     	;# 
  2023  0298                     	;# 
  2024  0299                     	;# 
  2025  029A                     	;# 
  2026  0394                     	;# 
  2027  0395                     	;# 
  2028  0396                     	;# 
  2029  0FE4                     	;# 
  2030  0FE5                     	;# 
  2031  0FE6                     	;# 
  2032  0FE7                     	;# 
  2033  0FE8                     	;# 
  2034  0FE9                     	;# 
  2035  0FEA                     	;# 
  2036  0FEB                     	;# 
  2037  0FED                     	;# 
  2038  0FEE                     	;# 
  2039  0FEF                     	;# 
  2040                           
  2041                           	psect	idataBANK4
  2042  1381                     __pidataBANK4:	
  2043                           
  2044                           ;initializer for __product
  2045  1381  3463               	retlw	99
  2046  1382  3402               	retlw	2
  2047  1383  3400               	retlw	0
  2048  1384  3400               	retlw	0
  2049  1385  3400               	retlw	0
  2050  1386  3400               	retlw	0
  2051  1387  3400               	retlw	0
  2052  1388  3400               	retlw	0
  2053  1389  3400               	retlw	0
  2054  138A  3400               	retlw	0
  2055  138B  3400               	retlw	0
  2056  138C  3400               	retlw	0
  2057  138D  34FF               	retlw	255
  2058  138E  34FF               	retlw	255
  2059  138F  34FF               	retlw	255
  2060  1390  3400               	retlw	0
  2061  1391  3400               	retlw	0
  2062  1392  3400               	retlw	0
  2063  1393  3400               	retlw	0
  2064  1394  3400               	retlw	0
  2065  1395  3400               	retlw	0
  2066  1396  3400               	retlw	0
  2067  1397  3400               	retlw	0
  2068  1398  3400               	retlw	0
  2069  1399  3400               	retlw	0
  2070  139A  3400               	retlw	0
  2071  139B  3400               	retlw	0
  2072  139C  3400               	retlw	0
  2073  139D  3400               	retlw	0
  2074  139E  3400               	retlw	0
  2075  139F  3400               	retlw	0
  2076  13A0  3400               	retlw	0
  2077                           
  2078                           	psect	stringtext
  2079  1000                     __pstringtext:	
  2080  1000                     _CC2500_registers_address:	
  2081  1000  3403               	retlw	3
  2082  1001  3416               	retlw	22
  2083  1002  3417               	retlw	23
  2084  1003  341E               	retlw	30
  2085  1004  341F               	retlw	31
  2086  1005  3420               	retlw	32
  2087  1006  342A               	retlw	42
  2088  1007  342B               	retlw	43
  2089  1008  340B               	retlw	11
  2090  1009  340C               	retlw	12
  2091  100A  340D               	retlw	13
  2092  100B  340E               	retlw	14
  2093  100C  340F               	retlw	15
  2094  100D  3410               	retlw	16
  2095  100E  3411               	retlw	17
  2096  100F  3412               	retlw	18
  2097  1010  3413               	retlw	19
  2098  1011  3414               	retlw	20
  2099  1012  340A               	retlw	10
  2100  1013  3415               	retlw	21
  2101  1014  3421               	retlw	33
  2102  1015  3422               	retlw	34
  2103  1016  3418               	retlw	24
  2104  1017  3419               	retlw	25
  2105  1018  341A               	retlw	26
  2106  1019  341B               	retlw	27
  2107  101A  341C               	retlw	28
  2108  101B  341D               	retlw	29
  2109  101C  3423               	retlw	35
  2110  101D  3424               	retlw	36
  2111  101E  3425               	retlw	37
  2112  101F  3426               	retlw	38
  2113  1020  3429               	retlw	41
  2114  1021  342C               	retlw	44
  2115  1022  342D               	retlw	45
  2116  1023  342E               	retlw	46
  2117  1024  3400               	retlw	0
  2118  1025  3401               	retlw	1
  2119  1026  3402               	retlw	2
  2120  1027  3407               	retlw	7
  2121  1028  3408               	retlw	8
  2122  1029  3409               	retlw	9
  2123  102A  3406               	retlw	6
  2124  102B  3404               	retlw	4
  2125  102C  3405               	retlw	5
  2126  102D  3427               	retlw	39
  2127  102E  3428               	retlw	40
  2128  102F                     __end_of_CC2500_registers_address:	
  2129  102F                     _CC2500_rfSettings:	
  2130  102F  3407               	retlw	7
  2131  1030  3407               	retlw	7
  2132  1031  3430               	retlw	48
  2133  1032  3487               	retlw	135
  2134  1033  346B               	retlw	107
  2135  1034  34F8               	retlw	248
  2136  1035  347F               	retlw	127
  2137  1036  343F               	retlw	63
  2138  1037  3409               	retlw	9
  2139  1038  3400               	retlw	0
  2140  1039  345C               	retlw	92
  2141  103A  34A7               	retlw	167
  2142  103B  3462               	retlw	98
  2143  103C  3486               	retlw	134
  2144  103D  3483               	retlw	131
  2145  103E  3403               	retlw	3
  2146  103F  3422               	retlw	34
  2147  1040  34F8               	retlw	248
  2148  1041  3400               	retlw	0
  2149  1042  3444               	retlw	68
  2150  1043  34B6               	retlw	182
  2151  1044  3410               	retlw	16
  2152  1045  3418               	retlw	24
  2153  1046  341D               	retlw	29
  2154  1047  341C               	retlw	28
  2155  1048  34C7               	retlw	199
  2156  1049  3400               	retlw	0
  2157  104A  34B2               	retlw	178
  2158  104B  34EA               	retlw	234
  2159  104C  340A               	retlw	10
  2160  104D  3400               	retlw	0
  2161  104E  3411               	retlw	17
  2162  104F  3459               	retlw	89
  2163  1050  3488               	retlw	136
  2164  1051  3431               	retlw	49
  2165  1052  340B               	retlw	11
  2166  1053  342F               	retlw	47
  2167  1054  342E               	retlw	46
  2168  1055  3406               	retlw	6
  2169  1056  3404               	retlw	4
  2170  1057  3405               	retlw	5
  2171  1058  3400               	retlw	0
  2172  1059  3430               	retlw	48
  2173  105A  34D3               	retlw	211
  2174  105B  3491               	retlw	145
  2175  105C  3441               	retlw	65
  2176  105D  3400               	retlw	0
  2177  105E                     __end_of_CC2500_rfSettings:	
  2178  105E                     _CC2500_patable_vaule:	
  2179  105E  34FE               	retlw	254
  2180  105F  34FE               	retlw	254
  2181  1060  34FE               	retlw	254
  2182  1061  34FE               	retlw	254
  2183  1062  34FE               	retlw	254
  2184  1063  34FE               	retlw	254
  2185  1064  34FE               	retlw	254
  2186  1065  34FE               	retlw	254
  2187  1066                     __end_of_CC2500_patable_vaule:	
  2188                           
  2189                           	psect	nvBANK0
  2190  006E                     __pnvBANK0:	
  2191  006E                     _product:	
  2192  006E                     	ds	1
  2193  000C                     _PORTA	set	12
  2194  000D                     _PORTB	set	13
  2195  000E                     _PORTC	set	14
  2196  0018                     _T1CON	set	24
  2197  0017                     _TMR1H	set	23
  2198  0016                     _TMR1L	set	22
  2199  005F                     _GIE	set	95
  2200  005B                     _IOCIE	set	91
  2201  0058                     _IOCIF	set	88
  2202  005E                     _PEIE	set	94
  2203  0060                     _RA0	set	96
  2204  0063                     _RA3	set	99
  2205  0064                     _RA4	set	100
  2206  0066                     _RA6	set	102
  2207  0067                     _RA7	set	103
  2208  0068                     _RB0	set	104
  2209  0069                     _RB1	set	105
  2210  006A                     _RB2	set	106
  2211  006B                     _RB3	set	107
  2212  006C                     _RB4	set	108
  2213  006D                     _RB5	set	109
  2214  0070                     _RC0	set	112
  2215  0071                     _RC1	set	113
  2216  0072                     _RC2	set	114
  2217  0074                     _RC4	set	116
  2218  0075                     _RC5	set	117
  2219  0077                     _RC7	set	119
  2220  0088                     _TMR1IF	set	136
  2221  009D                     _ADCON0	set	157
  2222  009E                     _ADCON1	set	158
  2223  009C                     _ADRESH	set	156
  2224  009B                     _ADRESL	set	155
  2225  0099                     _OSCCON	set	153
  2226  008C                     _TRISA	set	140
  2227  008D                     _TRISB	set	141
  2228  008E                     _TRISC	set	142
  2229  0097                     _WDTCON	set	151
  2230  04E9                     _GO_nDONE	set	1257
  2231  0488                     _TMR1IE	set	1160
  2232  0117                     _FVRCON	set	279
  2233  010C                     _LATA	set	268
  2234  010D                     _LATB	set	269
  2235  010E                     _LATC	set	270
  2236  018C                     _ANSELA	set	396
  2237  018D                     _ANSELB	set	397
  2238  018E                     _ANSELC	set	398
  2239  0192                     _PMADRH	set	402
  2240  0191                     _PMADRL	set	401
  2241  0196                     _PMCON2	set	406
  2242  0194                     _PMDATH	set	404
  2243  0193                     _PMDATL	set	403
  2244  0CAE                     _CFGS	set	3246
  2245  0CAC                     _FREE	set	3244
  2246  0CAD                     _LWLO	set	3245
  2247  0CA8                     _RD	set	3240
  2248  0CA9                     _WR	set	3241
  2249  0CAA                     _WREN	set	3242
  2250  020D                     _WPUB	set	525
  2251  0396                     _IOCBF	set	918
  2252  0395                     _IOCBN	set	917
  2253  0394                     _IOCBP	set	916
  2254  1CB2                     _IOCBF2	set	7346
  2255                           
  2256                           ; #config settings
  2257  0000                     
  2258                           	psect	cinit
  2259  0021                     start_initialization:	
  2260  0021                     __initialization:	
  2261                           
  2262                           ; Clear objects allocated to BITCOMMON
  2263  0021  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  2264                           
  2265                           ; Clear objects allocated to COMMON
  2266  0022  01FA               	clrf	__pbssCOMMON& (0+127)
  2267  0023  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2268                           
  2269                           ; Clear objects allocated to BANK0
  2270  0024  01E8               	clrf	__pbssBANK0& (0+127)
  2271  0025  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  2272  0026  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  2273  0027  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  2274  0028  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  2275  0029  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  2276                           
  2277                           ; Clear objects allocated to BANK1
  2278  002A  30A0               	movlw	low __pbssBANK1
  2279  002B  0084               	movwf	4
  2280  002C  3000               	movlw	high __pbssBANK1
  2281  002D  0085               	movwf	5
  2282  002E  3050               	movlw	80
  2283  002F  319E  26D4  3180   	fcall	clear_ram0
  2284                           
  2285                           ; Clear objects allocated to BANK2
  2286  0032  3020               	movlw	low __pbssBANK2
  2287  0033  0084               	movwf	4
  2288  0034  3001               	movlw	high __pbssBANK2
  2289  0035  0085               	movwf	5
  2290  0036  304E               	movlw	78
  2291  0037  319E  26D4  3180   	fcall	clear_ram0
  2292                           
  2293                           ; Clear objects allocated to BANK3
  2294  003A  30A0               	movlw	low __pbssBANK3
  2295  003B  0084               	movwf	4
  2296  003C  3001               	movlw	high __pbssBANK3
  2297  003D  0085               	movwf	5
  2298  003E  304C               	movlw	76
  2299  003F  319E  26D4  3180   	fcall	clear_ram0
  2300                           
  2301                           ; Initialize objects allocated to BANK4
  2302  0042  3081               	movlw	low __pidataBANK4
  2303  0043  0084               	movwf	4
  2304  0044  3093               	movlw	(high __pidataBANK4)| (0+128)
  2305  0045  0085               	movwf	5
  2306  0046  3020               	movlw	low __pdataBANK4
  2307  0047  0086               	movwf	6
  2308  0048  3002               	movlw	high __pdataBANK4
  2309  0049  0087               	movwf	7
  2310  004A  3020               	movlw	32
  2311  004B  319E  26CE         	fcall	init_ram
  2312  004D                     end_of_initialization:	
  2313                           ;End of C runtime variable initialization code
  2314                           
  2315  004D                     __end_of__initialization:	
  2316  004D  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  2317  004E  0020               	movlb	0
  2318  004F  3197  2FBC         	ljmp	_main	;jump to C main() function
  2319                           
  2320                           	psect	bitbssCOMMON
  2321  03C8                     __pbitbssCOMMON:	
  2322  03C8                     _Receive_OK:	
  2323  03C8                     	ds	1
  2324  03C9                     _Transceive_OK:	
  2325  03C9                     	ds	1
  2326                           
  2327                           	psect	bssCOMMON
  2328  007A                     __pbssCOMMON:	
  2329  007A                     _LED:	
  2330  007A                     	ds	2
  2331                           
  2332                           	psect	bssBANK0
  2333  0068                     __pbssBANK0:	
  2334  0068                     _Cmd:	
  2335  0068                     	ds	1
  2336  0069                     _DelayOff:	
  2337  0069                     	ds	1
  2338  006A                     _DimmerLights:	
  2339  006A                     	ds	1
  2340  006B                     _SPI0Buffer:	
  2341  006B                     	ds	1
  2342  006C                     _Sw:	
  2343  006C                     	ds	1
  2344  006D                     _Tx_Length:	
  2345  006D                     	ds	1
  2346                           
  2347                           	psect	bssBANK1
  2348  00A0                     __pbssBANK1:	
  2349  00A0                     _DimmerIntr1:	
  2350  00A0                     	ds	16
  2351  00B0                     _RF1:	
  2352  00B0                     	ds	15
  2353  00BF                     _myMain:	
  2354  00BF                     	ds	13
  2355  00CC                     _Buz1:	
  2356  00CC                     	ds	12
  2357  00D8                     _Timer1:	
  2358  00D8                     	ds	3
  2359  00DB                     _RF_Count:	
  2360  00DB                     	ds	2
  2361  00DD                     _WDT:	
  2362  00DD                     	ds	2
  2363  00DF                     _CRC:	
  2364  00DF                     	ds	1
  2365  00E0                     _DimmerIntr:	
  2366  00E0                     	ds	1
  2367  00E1                     _Light:	
  2368  00E1                     	ds	1
  2369  00E2                     _RSSI:	
  2370  00E2                     	ds	1
  2371  00E3                     _Rx_Length:	
  2372  00E3                     	ds	1
  2373  00E4                     _SwDetect:	
  2374  00E4                     	ds	1
  2375  00E5                     _r_address:	
  2376  00E5                     	ds	1
  2377  00E6                     _r_data:	
  2378  00E6                     	ds	1
  2379  00E7                     _s_data:	
  2380  00E7                     	ds	1
  2381  00E8                     _VarErrLED:	
  2382  00E8                     	ds	4
  2383  00EC                     _VarLED1:	
  2384  00EC                     	ds	4
  2385                           
  2386                           	psect	bssBANK2
  2387  0120                     __pbssBANK2:	
  2388  0120                     _RF_Data:	
  2389  0120                     	ds	30
  2390  013E                     _DimmerIntr2:	
  2391  013E                     	ds	16
  2392  014E                     _Dimmer:	
  2393  014E                     	ds	5
  2394  0153                     _DimmerLights1:	
  2395  0153                     	ds	9
  2396  015C                     _DimmerLights2:	
  2397  015C                     	ds	9
  2398  0165                     _DlySw1:	
  2399  0165                     	ds	5
  2400  016A                     _VarLED2:	
  2401  016A                     	ds	4
  2402                           
  2403                           	psect	bssBANK3
  2404  01A0                     __pbssBANK3:	
  2405  01A0                     _u1:	
  2406  01A0                     	ds	16
  2407  01B0                     _Memory:	
  2408  01B0                     	ds	37
  2409  01D5                     _Sw1:	
  2410  01D5                     	ds	9
  2411  01DE                     _Sw2:	
  2412  01DE                     	ds	9
  2413  01E7                     _DlySw2:	
  2414  01E7                     	ds	5
  2415                           
  2416                           	psect	dataBANK4
  2417  0220                     __pdataBANK4:	
  2418  0220                     __product:	
  2419  0220                     	ds	32
  2420                           
  2421                           	psect	clrtext
  2422  1ED4                     clear_ram0:	
  2423                           ;	Called with FSR0 containing the base address, and
  2424                           ;	WREG with the size to clear
  2425                           
  2426  1ED4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2427  1ED5                     clrloop0:	
  2428  1ED5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2429  1ED6  3101               	addfsr 0,1
  2430  1ED7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2431  1ED8  2ED5               	goto	clrloop0	;have we reached the end yet?
  2432  1ED9  3400               	retlw	0	;all done for this memory range, return
  2433                           
  2434                           	psect	inittext
  2435  1ECE                     init_ram:	
  2436  1ECE  00FE               	movwf	126
  2437  1ECF                     initloop:	
  2438  1ECF  0012               	moviw fsr0++
  2439  1ED0  001E               	movwi fsr1++
  2440  1ED1  0BFE               	decfsz	126,f
  2441  1ED2  2ECF               	goto	initloop
  2442  1ED3  3400               	retlw	0
  2443                           
  2444                           	psect	cstackBANK3
  2445  01EC                     __pcstackBANK3:	
  2446  01EC                     ?_main:	
  2447  01EC                     main@argc:	
  2448                           ; 2 bytes @ 0x0
  2449                           
  2450                           
  2451                           ; 2 bytes @ 0x0
  2452  01EC                     	ds	2
  2453  01EE                     main@argv:	
  2454                           
  2455                           ; 2 bytes @ 0x2
  2456  01EE                     	ds	2
  2457                           
  2458                           	psect	cstackCOMMON
  2459  0070                     __pcstackCOMMON:	
  2460  0070                     ?_CC2500_WriteCommand:	
  2461  0070                     ?_RF_Timeout_Counter:	
  2462                           ; 0 bytes @ 0x0
  2463                           
  2464  0070                     ?_setRF_TimeoutCleared:	
  2465                           ; 0 bytes @ 0x0
  2466                           
  2467  0070                     ?_CC2500_WriteByte:	
  2468                           ; 0 bytes @ 0x0
  2469                           
  2470  0070                     ?_CC2500_ReadStatus:	
  2471                           ; 0 bytes @ 0x0
  2472                           
  2473  0070                     ?_CC2500_ReadByte:	
  2474                           ; 0 bytes @ 0x0
  2475                           
  2476  0070                     ?_CC2500_PowerRST:	
  2477                           ; 0 bytes @ 0x0
  2478                           
  2479  0070                     ?_CC2500_InitSetREG:	
  2480                           ; 0 bytes @ 0x0
  2481                           
  2482  0070                     ?_CC2500_InitPATable:	
  2483                           ; 0 bytes @ 0x0
  2484                           
  2485  0070                     ?_CC2500_ClearTXFIFO:	
  2486                           ; 0 bytes @ 0x0
  2487                           
  2488  0070                     ?_CC2500_ClearRXFIFO:	
  2489                           ; 0 bytes @ 0x0
  2490                           
  2491  0070                     ?_CC2500_FrequencyCabr:	
  2492                           ; 0 bytes @ 0x0
  2493                           
  2494  0070                     ?_CC2500_SIDLEMode:	
  2495                           ; 0 bytes @ 0x0
  2496                           
  2497  0070                     ?_DlyOff_Initialization:	
  2498                           ; 0 bytes @ 0x0
  2499                           
  2500  0070                     ?_DlyOff_Main:	
  2501                           ; 0 bytes @ 0x0
  2502                           
  2503  0070                     ?_setDimmerLights_SwOn:	
  2504                           ; 0 bytes @ 0x0
  2505                           
  2506  0070                     ?_setDimmerLights_SwOff:	
  2507                           ; 0 bytes @ 0x0
  2508                           
  2509  0070                     ?_setMemory_Modify:	
  2510                           ; 0 bytes @ 0x0
  2511                           
  2512  0070                     ?_setDimmerLights_Initialization:	
  2513                           ; 0 bytes @ 0x0
  2514                           
  2515  0070                     ?_setDimmerLights_Main:	
  2516                           ; 0 bytes @ 0x0
  2517                           
  2518  0070                     ?_DimmerLights_DimmingFunction:	
  2519                           ; 0 bytes @ 0x0
  2520                           
  2521  0070                     ?_DimmerIntr_ValueCalculate:	
  2522                           ; 0 bytes @ 0x0
  2523                           
  2524  0070                     ?_setDimmerLights_DimmingClose:	
  2525                           ; 0 bytes @ 0x0
  2526                           
  2527  0070                     ?_setTxData:	
  2528                           ; 0 bytes @ 0x0
  2529                           
  2530  0070                     ?_setRF_TransceiveGO:	
  2531                           ; 0 bytes @ 0x0
  2532                           
  2533  0070                     ?_setLED_Initialization:	
  2534                           ; 0 bytes @ 0x0
  2535                           
  2536  0070                     ?_setLED_Main:	
  2537                           ; 0 bytes @ 0x0
  2538                           
  2539  0070                     ?_Fosc_Set:	
  2540                           ; 0 bytes @ 0x0
  2541                           
  2542  0070                     ?_IO_Set:	
  2543                           ; 0 bytes @ 0x0
  2544                           
  2545  0070                     ?_TMR1_Set:	
  2546                           ; 0 bytes @ 0x0
  2547                           
  2548  0070                     ?_ADC_Set:	
  2549                           ; 0 bytes @ 0x0
  2550                           
  2551  0070                     ?_IOC_Set:	
  2552                           ; 0 bytes @ 0x0
  2553                           
  2554  0070                     ?_WDT_Set:	
  2555                           ; 0 bytes @ 0x0
  2556                           
  2557  0070                     ?_TMR1_ISR:	
  2558                           ; 0 bytes @ 0x0
  2559                           
  2560  0070                     ?_IOC_ISR:	
  2561                           ; 0 bytes @ 0x0
  2562                           
  2563  0070                     ?_Timeout_Counter:	
  2564                           ; 0 bytes @ 0x0
  2565                           
  2566  0070                     ?_set_TimeoutCleared:	
  2567                           ; 0 bytes @ 0x0
  2568                           
  2569  0070                     ?_Flash_Memory_Write:	
  2570                           ; 0 bytes @ 0x0
  2571                           
  2572  0070                     ?_Flash_Memory_Modify:	
  2573                           ; 0 bytes @ 0x0
  2574                           
  2575  0070                     ?_WDT_Clearing:	
  2576                           ; 0 bytes @ 0x0
  2577                           
  2578  0070                     ?_myMain_Initialization:	
  2579                           ; 0 bytes @ 0x0
  2580                           
  2581  0070                     ?_Switch_Initialization:	
  2582                           ; 0 bytes @ 0x0
  2583                           
  2584  0070                     ?_RF_Initialization:	
  2585                           ; 0 bytes @ 0x0
  2586                           
  2587  0070                     ?_my_MainTimer:	
  2588                           ; 0 bytes @ 0x0
  2589                           
  2590  0070                     ?_Switch_Main:	
  2591                           ; 0 bytes @ 0x0
  2592                           
  2593  0070                     ?_RF_Main:	
  2594                           ; 0 bytes @ 0x0
  2595                           
  2596  0070                     ?_Exception_Main:	
  2597                           ; 0 bytes @ 0x0
  2598                           
  2599  0070                     ?_setRF_Initialization:	
  2600                           ; 0 bytes @ 0x0
  2601                           
  2602  0070                     ?_setRF_Main:	
  2603                           ; 0 bytes @ 0x0
  2604                           
  2605  0070                     ?_RF_RxDisable:	
  2606                           ; 0 bytes @ 0x0
  2607                           
  2608  0070                     ?_setData:	
  2609                           ; 0 bytes @ 0x0
  2610                           
  2611  0070                     ?_getRxData:	
  2612                           ; 0 bytes @ 0x0
  2613                           
  2614  0070                     ?_setLog_Code:	
  2615                           ; 0 bytes @ 0x0
  2616                           
  2617  0070                     ?_setControl_Lights_Table:	
  2618                           ; 0 bytes @ 0x0
  2619                           
  2620  0070                     ?_setRFSW_Control:	
  2621                           ; 0 bytes @ 0x0
  2622                           
  2623  0070                     ?_setRFSW_AdjControl:	
  2624                           ; 0 bytes @ 0x0
  2625                           
  2626  0070                     ?_setRF_AdjControl:	
  2627                           ; 0 bytes @ 0x0
  2628                           
  2629  0070                     ?_setSw_Initialization:	
  2630                           ; 0 bytes @ 0x0
  2631                           
  2632  0070                     ?_setSw_Main:	
  2633                           ; 0 bytes @ 0x0
  2634                           
  2635  0070                     ?_Buzzer_Initialization:	
  2636                           ; 0 bytes @ 0x0
  2637                           
  2638  0070                     ?_Buzzer_Main:	
  2639                           ; 0 bytes @ 0x0
  2640                           
  2641  0070                     ?_CC2500_TxData:	
  2642                           ; 0 bytes @ 0x0
  2643                           
  2644  0070                     ?_CC2500_RxData:	
  2645                           ; 0 bytes @ 0x0
  2646                           
  2647  0070                     ?_CC2500_PowerOnInitial:	
  2648                           ; 0 bytes @ 0x0
  2649                           
  2650  0070                     ?_DelayOffPointSelect:	
  2651                           ; 0 bytes @ 0x0
  2652                           
  2653  0070                     ?_DelayOff_Initialization:	
  2654                           ; 0 bytes @ 0x0
  2655                           
  2656  0070                     ?_DelayOff_Main:	
  2657                           ; 0 bytes @ 0x0
  2658                           
  2659  0070                     ?_DimmerIntr_Initialization:	
  2660                           ; 0 bytes @ 0x0
  2661                           
  2662  0070                     ?_DimmerLights_SelectPointer:	
  2663                           ; 0 bytes @ 0x0
  2664                           
  2665  0070                     ?_DimmerLights_Initialization:	
  2666                           ; 0 bytes @ 0x0
  2667                           
  2668  0070                     ?_setDimmerLights_DimmingOn:	
  2669                           ; 0 bytes @ 0x0
  2670                           
  2671  0070                     ?_DimmerLights_Main:	
  2672                           ; 0 bytes @ 0x0
  2673                           
  2674  0070                     ?_DimmerLights_IOC_1:	
  2675                           ; 0 bytes @ 0x0
  2676                           
  2677  0070                     ??_DimmerLights_IOC_1:	
  2678                           ; 0 bytes @ 0x0
  2679                           
  2680  0070                     ?_DimmerLights_TMR_1:	
  2681                           ; 0 bytes @ 0x0
  2682                           
  2683  0070                     ??_DimmerLights_TMR_1:	
  2684                           ; 0 bytes @ 0x0
  2685                           
  2686  0070                     ?_DimmerLights_IOC_2:	
  2687                           ; 0 bytes @ 0x0
  2688                           
  2689  0070                     ??_DimmerLights_IOC_2:	
  2690                           ; 0 bytes @ 0x0
  2691                           
  2692  0070                     ?_DimmerLights_TMR_2:	
  2693                           ; 0 bytes @ 0x0
  2694                           
  2695  0070                     ??_DimmerLights_TMR_2:	
  2696                           ; 0 bytes @ 0x0
  2697                           
  2698  0070                     ?_LedPointSelect:	
  2699                           ; 0 bytes @ 0x0
  2700                           
  2701  0070                     ?_LED_Initialization:	
  2702                           ; 0 bytes @ 0x0
  2703                           
  2704  0070                     ?_LED_Main:	
  2705                           ; 0 bytes @ 0x0
  2706                           
  2707  0070                     ?_Mcu_Initialization:	
  2708                           ; 0 bytes @ 0x0
  2709                           
  2710  0070                     ?_ISR:	
  2711                           ; 0 bytes @ 0x0
  2712                           
  2713  0070                     ?_Flash_Memory_Initialization:	
  2714                           ; 0 bytes @ 0x0
  2715                           
  2716  0070                     ?_Flash_Memory_Main:	
  2717                           ; 0 bytes @ 0x0
  2718                           
  2719  0070                     ?_Flash_Memory_Unlock:	
  2720                           ; 0 bytes @ 0x0
  2721                           
  2722  0070                     ?_Flash_Memory_Erasing:	
  2723                           ; 0 bytes @ 0x0
  2724                           
  2725  0070                     ?_setMemory_LoopSave:	
  2726                           ; 0 bytes @ 0x0
  2727                           
  2728  0070                     ?_WDT_Main:	
  2729                           ; 0 bytes @ 0x0
  2730                           
  2731  0070                     ?_setRF_Learn:	
  2732                           ; 0 bytes @ 0x0
  2733                           
  2734  0070                     ?_TouchPower:	
  2735                           ; 0 bytes @ 0x0
  2736                           
  2737  0070                     ?_SwPointSelect:	
  2738                           ; 0 bytes @ 0x0
  2739                           
  2740  0070                     ?_getDimmerLights_Status:	
  2741                           ; 0 bytes @ 0x0
  2742                           
  2743  0070                     ?_getDimmerLights_ValueToPercent:	
  2744                           ; 1 bytes @ 0x0
  2745                           
  2746  0070                     ?_getDimmerLights_PercentToValue:	
  2747                           ; 1 bytes @ 0x0
  2748                           
  2749  0070                     ?_getDimmerLights_Allow_Condition:	
  2750                           ; 1 bytes @ 0x0
  2751                           
  2752  0070                     ?_getMain_All_LightsStatus:	
  2753                           ; 1 bytes @ 0x0
  2754                           
  2755  0070                     ?_getCmd_Status:	
  2756                           ; 1 bytes @ 0x0
  2757                           
  2758  0070                     ?_Flash_Memory_Read:	
  2759                           ; 1 bytes @ 0x0
  2760                           
  2761  0070                     ?_getAll_Sw_KeyStatus:	
  2762                           ; 1 bytes @ 0x0
  2763                           
  2764  0070                     ?_getRF_KeyStatus:	
  2765                           ; 1 bytes @ 0x0
  2766                           
  2767  0070                     ?_getSw_KeyStatus:	
  2768                           ; 1 bytes @ 0x0
  2769                           
  2770  0070                     ?_getDelayOff_GO:	
  2771                           ; 1 bytes @ 0x0
  2772                           
  2773  0070                     ?_getDimmerIntr_DimmingValue:	
  2774                           ; 1 bytes @ 0x0
  2775                           
  2776  0070                     ?_getDimmerIntr_Dimming_Sw:	
  2777                           ; 1 bytes @ 0x0
  2778                           
  2779  0070                     ?_getMain_All_Error_Status:	
  2780                           ; 1 bytes @ 0x0
  2781                           
  2782  0070                     setDimmerLights_Initialization@lights:	
  2783                           ; 1 bytes @ 0x0
  2784                           
  2785  0070                     getMain_All_Error_Status@command:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788                           
  2789                           ; 1 bytes @ 0x0
  2790  0070                     	ds	1
  2791  0071                     ??_TMR1_ISR:	
  2792  0071                     ??_IOC_ISR:	
  2793                           ; 0 bytes @ 0x1
  2794                           
  2795  0071                     ??_ISR:	
  2796                           ; 0 bytes @ 0x1
  2797                           
  2798                           
  2799                           ; 0 bytes @ 0x1
  2800  0071                     	ds	1
  2801  0072                     ??_RF_Timeout_Counter:	
  2802  0072                     ??_setRF_TimeoutCleared:	
  2803                           ; 0 bytes @ 0x2
  2804                           
  2805  0072                     ??_CC2500_WriteByte:	
  2806                           ; 0 bytes @ 0x2
  2807                           
  2808  0072                     ??_CC2500_ReadByte:	
  2809                           ; 0 bytes @ 0x2
  2810                           
  2811  0072                     ?_DelayTime_1us:	
  2812                           ; 0 bytes @ 0x2
  2813                           
  2814  0072                     ??_setMemory_Modify:	
  2815                           ; 0 bytes @ 0x2
  2816                           
  2817  0072                     ??_setDimmerLights_Initialization:	
  2818                           ; 0 bytes @ 0x2
  2819                           
  2820  0072                     ??_getDimmerLights_Allow_Condition:	
  2821                           ; 0 bytes @ 0x2
  2822                           
  2823  0072                     ??_getMain_All_LightsStatus:	
  2824                           ; 0 bytes @ 0x2
  2825                           
  2826  0072                     ??_DimmerIntr_ValueCalculate:	
  2827                           ; 0 bytes @ 0x2
  2828                           
  2829  0072                     ??_getCmd_Status:	
  2830                           ; 0 bytes @ 0x2
  2831                           
  2832  0072                     ?_setCmd_Status:	
  2833                           ; 0 bytes @ 0x2
  2834                           
  2835  0072                     ??_setTxData:	
  2836                           ; 0 bytes @ 0x2
  2837                           
  2838  0072                     ??_setRF_TransceiveGO:	
  2839                           ; 0 bytes @ 0x2
  2840                           
  2841  0072                     ??_Fosc_Set:	
  2842                           ; 0 bytes @ 0x2
  2843                           
  2844  0072                     ??_IO_Set:	
  2845                           ; 0 bytes @ 0x2
  2846                           
  2847  0072                     ??_TMR1_Set:	
  2848                           ; 0 bytes @ 0x2
  2849                           
  2850  0072                     ??_ADC_Set:	
  2851                           ; 0 bytes @ 0x2
  2852                           
  2853  0072                     ??_IOC_Set:	
  2854                           ; 0 bytes @ 0x2
  2855                           
  2856  0072                     ??_WDT_Set:	
  2857                           ; 0 bytes @ 0x2
  2858                           
  2859  0072                     ??_Timeout_Counter:	
  2860                           ; 0 bytes @ 0x2
  2861                           
  2862  0072                     ??_set_TimeoutCleared:	
  2863                           ; 0 bytes @ 0x2
  2864                           
  2865  0072                     ??_Flash_Memory_Read:	
  2866                           ; 0 bytes @ 0x2
  2867                           
  2868  0072                     ?_setMemory_Data:	
  2869                           ; 0 bytes @ 0x2
  2870                           
  2871  0072                     ??_Flash_Memory_Write:	
  2872                           ; 0 bytes @ 0x2
  2873                           
  2874  0072                     ??_getAll_Sw_KeyStatus:	
  2875                           ; 0 bytes @ 0x2
  2876                           
  2877  0072                     ??_WDT_Clearing:	
  2878                           ; 0 bytes @ 0x2
  2879                           
  2880  0072                     ??_myMain_Initialization:	
  2881                           ; 0 bytes @ 0x2
  2882                           
  2883  0072                     ??_setRF_Initialization:	
  2884                           ; 0 bytes @ 0x2
  2885                           
  2886  0072                     ??_getRF_KeyStatus:	
  2887                           ; 0 bytes @ 0x2
  2888                           
  2889  0072                     ??_RF_RxDisable:	
  2890                           ; 0 bytes @ 0x2
  2891                           
  2892  0072                     ??_setData:	
  2893                           ; 0 bytes @ 0x2
  2894                           
  2895  0072                     ??_getSw_KeyStatus:	
  2896                           ; 0 bytes @ 0x2
  2897                           
  2898  0072                     ??_Buzzer_Initialization:	
  2899                           ; 0 bytes @ 0x2
  2900                           
  2901  0072                     ??_Buzzer_Main:	
  2902                           ; 0 bytes @ 0x2
  2903                           
  2904  0072                     ??_DelayOffPointSelect:	
  2905                           ; 0 bytes @ 0x2
  2906                           
  2907  0072                     ?_setDimmerIntr_ControlStatus:	
  2908                           ; 0 bytes @ 0x2
  2909                           
  2910  0072                     ??_getDimmerIntr_DimmingValue:	
  2911                           ; 0 bytes @ 0x2
  2912                           
  2913  0072                     ?_setDimmerIntr_Dimming_Sw:	
  2914                           ; 0 bytes @ 0x2
  2915                           
  2916  0072                     ??_getDimmerIntr_Dimming_Sw:	
  2917                           ; 0 bytes @ 0x2
  2918                           
  2919  0072                     ?_setDimmerIntr_Dimming_RF:	
  2920                           ; 0 bytes @ 0x2
  2921                           
  2922  0072                     ??_DimmerLights_SelectPointer:	
  2923                           ; 0 bytes @ 0x2
  2924                           
  2925  0072                     ??_LedPointSelect:	
  2926                           ; 0 bytes @ 0x2
  2927                           
  2928  0072                     ??_Flash_Memory_Unlock:	
  2929                           ; 0 bytes @ 0x2
  2930                           
  2931  0072                     ??_Flash_Memory_Erasing:	
  2932                           ; 0 bytes @ 0x2
  2933                           
  2934  0072                     ??_setMemory_LoopSave:	
  2935                           ; 0 bytes @ 0x2
  2936                           
  2937  0072                     ??_WDT_Main:	
  2938                           ; 0 bytes @ 0x2
  2939                           
  2940  0072                     ??_getMain_All_Error_Status:	
  2941                           ; 0 bytes @ 0x2
  2942                           
  2943  0072                     ??_setRF_Learn:	
  2944                           ; 0 bytes @ 0x2
  2945                           
  2946  0072                     ??_TouchPower:	
  2947                           ; 0 bytes @ 0x2
  2948                           
  2949  0072                     ??_SwPointSelect:	
  2950                           ; 0 bytes @ 0x2
  2951                           
  2952  0072                     ?___bmul:	
  2953                           ; 0 bytes @ 0x2
  2954                           
  2955  0072                     ?_getBuz_GO:	
  2956                           ; 1 bytes @ 0x2
  2957                           
  2958  0072                     ?___awdiv:	
  2959                           ; 2 bytes @ 0x2
  2960                           
  2961  0072                     ?___lwdiv:	
  2962                           ; 2 bytes @ 0x2
  2963                           
  2964  0072                     ?___ftpack:	
  2965                           ; 2 bytes @ 0x2
  2966                           
  2967  0072                     setDimmerIntr_ControlStatus@command:	
  2968                           ; 3 bytes @ 0x2
  2969                           
  2970  0072                     setDimmerIntr_Dimming_Sw@command:	
  2971                           ; 1 bytes @ 0x2
  2972                           
  2973  0072                     getDimmerIntr_Dimming_Sw@status:	
  2974                           ; 1 bytes @ 0x2
  2975                           
  2976  0072                     setDimmerIntr_Dimming_RF@command:	
  2977                           ; 1 bytes @ 0x2
  2978                           
  2979  0072                     LedPointSelect@led:	
  2980                           ; 1 bytes @ 0x2
  2981                           
  2982  0072                     setMemory_Data@data:	
  2983                           ; 1 bytes @ 0x2
  2984                           
  2985  0072                     getMain_All_LightsStatus@status:	
  2986                           ; 1 bytes @ 0x2
  2987                           
  2988  0072                     getMain_All_Error_Status@status:	
  2989                           ; 1 bytes @ 0x2
  2990                           
  2991  0072                     setCmd_Status@cmd:	
  2992                           ; 1 bytes @ 0x2
  2993                           
  2994  0072                     getCmd_Status@number:	
  2995                           ; 1 bytes @ 0x2
  2996                           
  2997  0072                     ___bmul@multiplicand:	
  2998                           ; 1 bytes @ 0x2
  2999                           
  3000  0072                     DelayTime_1us@count:	
  3001                           ; 1 bytes @ 0x2
  3002                           
  3003  0072                     ___awdiv@divisor:	
  3004                           ; 2 bytes @ 0x2
  3005                           
  3006  0072                     ___lwdiv@divisor:	
  3007                           ; 2 bytes @ 0x2
  3008                           
  3009  0072                     ___ftpack@arg:	
  3010                           ; 2 bytes @ 0x2
  3011                           
  3012                           
  3013                           ; 3 bytes @ 0x2
  3014  0072                     	ds	1
  3015  0073                     ?_setLED:	
  3016  0073                     ??_setCmd_Status:	
  3017                           ; 0 bytes @ 0x3
  3018                           
  3019  0073                     ??_setLED_Main:	
  3020                           ; 0 bytes @ 0x3
  3021                           
  3022  0073                     ??_setMemory_Data:	
  3023                           ; 0 bytes @ 0x3
  3024                           
  3025  0073                     ??_RF_Initialization:	
  3026                           ; 0 bytes @ 0x3
  3027                           
  3028  0073                     ??_setDimmerIntr_ControlStatus:	
  3029                           ; 0 bytes @ 0x3
  3030                           
  3031  0073                     ??_setDimmerIntr_Dimming_Sw:	
  3032                           ; 0 bytes @ 0x3
  3033                           
  3034  0073                     ??_setDimmerIntr_Dimming_RF:	
  3035                           ; 0 bytes @ 0x3
  3036                           
  3037  0073                     ??_Mcu_Initialization:	
  3038                           ; 0 bytes @ 0x3
  3039                           
  3040  0073                     ??___bmul:	
  3041                           ; 0 bytes @ 0x3
  3042                           
  3043  0073                     CC2500_WriteByte@loop_a:	
  3044                           ; 0 bytes @ 0x3
  3045                           
  3046  0073                     CC2500_ReadByte@loop_b:	
  3047                           ; 1 bytes @ 0x3
  3048                           
  3049  0073                     DelayOffPointSelect@sw:	
  3050                           ; 1 bytes @ 0x3
  3051                           
  3052  0073                     getDimmerIntr_DimmingValue@value:	
  3053                           ; 1 bytes @ 0x3
  3054                           
  3055  0073                     getDimmerIntr_Dimming_Sw@lights:	
  3056                           ; 1 bytes @ 0x3
  3057                           
  3058  0073                     DimmerLights_SelectPointer@lights:	
  3059                           ; 1 bytes @ 0x3
  3060                           
  3061  0073                     _getDimmerLights_Allow_Condition$2473:	
  3062                           ; 1 bytes @ 0x3
  3063                           
  3064  0073                     DimmerIntr_ValueCalculate@lights:	
  3065                           ; 1 bytes @ 0x3
  3066                           
  3067  0073                     setLED@command:	
  3068                           ; 1 bytes @ 0x3
  3069                           
  3070  0073                     Flash_Memory_Read@i:	
  3071                           ; 1 bytes @ 0x3
  3072                           
  3073  0073                     Flash_Memory_Write@i:	
  3074                           ; 1 bytes @ 0x3
  3075                           
  3076  0073                     setMemory_Modify@command:	
  3077                           ; 1 bytes @ 0x3
  3078                           
  3079  0073                     setMemory_LoopSave@command:	
  3080                           ; 1 bytes @ 0x3
  3081                           
  3082  0073                     getCmd_Status@cmd:	
  3083                           ; 1 bytes @ 0x3
  3084                           
  3085  0073                     setRF_Learn@command:	
  3086                           ; 1 bytes @ 0x3
  3087                           
  3088  0073                     getRF_KeyStatus@key:	
  3089                           ; 1 bytes @ 0x3
  3090                           
  3091  0073                     setRF_TransceiveGO@command:	
  3092                           ; 1 bytes @ 0x3
  3093                           
  3094  0073                     SwPointSelect@sw:	
  3095                           ; 1 bytes @ 0x3
  3096                           
  3097  0073                     _getSw_KeyStatus$6661:	
  3098                           ; 1 bytes @ 0x3
  3099                           
  3100  0073                     getAll_Sw_KeyStatus@status:	
  3101                           ; 1 bytes @ 0x3
  3102                           
  3103                           
  3104                           ; 1 bytes @ 0x3
  3105  0073                     	ds	1
  3106  0074                     ??_CC2500_WriteCommand:	
  3107  0074                     ??_CC2500_ReadStatus:	
  3108                           ; 0 bytes @ 0x4
  3109                           
  3110  0074                     ??_DelayTime_1us:	
  3111                           ; 0 bytes @ 0x4
  3112                           
  3113  0074                     ?_CC2500_WriteREG:	
  3114                           ; 0 bytes @ 0x4
  3115                           
  3116  0074                     ??_DlyOff_Initialization:	
  3117                           ; 0 bytes @ 0x4
  3118                           
  3119  0074                     ??_getDimmerLights_Status:	
  3120                           ; 0 bytes @ 0x4
  3121                           
  3122  0074                     ??_setDimmerLights_SwOff:	
  3123                           ; 0 bytes @ 0x4
  3124                           
  3125  0074                     ??_DimmerLights_DimmingFunction:	
  3126                           ; 0 bytes @ 0x4
  3127                           
  3128  0074                     ??_setLED:	
  3129                           ; 0 bytes @ 0x4
  3130                           
  3131  0074                     ??_getBuz_GO:	
  3132                           ; 0 bytes @ 0x4
  3133                           
  3134  0074                     ??_getDelayOff_GO:	
  3135                           ; 0 bytes @ 0x4
  3136                           
  3137  0074                     ??_setDimmerLights_DimmingOn:	
  3138                           ; 0 bytes @ 0x4
  3139                           
  3140  0074                     ?_setDimmerLights_DimmingRun:	
  3141                           ; 0 bytes @ 0x4
  3142                           
  3143  0074                     CC2500_WriteREG@value:	
  3144                           ; 0 bytes @ 0x4
  3145                           
  3146  0074                     DlyOff_Initialization@sw:	
  3147                           ; 1 bytes @ 0x4
  3148                           
  3149  0074                     getDelayOff_GO@sw:	
  3150                           ; 1 bytes @ 0x4
  3151                           
  3152  0074                     setDimmerIntr_ControlStatus@lights:	
  3153                           ; 1 bytes @ 0x4
  3154                           
  3155  0074                     getDimmerIntr_DimmingValue@lights:	
  3156                           ; 1 bytes @ 0x4
  3157                           
  3158  0074                     setDimmerIntr_Dimming_Sw@lights:	
  3159                           ; 1 bytes @ 0x4
  3160                           
  3161  0074                     setDimmerIntr_Dimming_RF@lights:	
  3162                           ; 1 bytes @ 0x4
  3163                           
  3164  0074                     setDimmerLights_SwOff@sw:	
  3165                           ; 1 bytes @ 0x4
  3166                           
  3167  0074                     setDimmerLights_DimmingOn@sw:	
  3168                           ; 1 bytes @ 0x4
  3169                           
  3170  0074                     _getDimmerLights_Allow_Condition$2474:	
  3171                           ; 1 bytes @ 0x4
  3172                           
  3173  0074                     getDimmerLights_Status@lights:	
  3174                           ; 1 bytes @ 0x4
  3175                           
  3176  0074                     setDimmerLights_DimmingRun@command:	
  3177                           ; 1 bytes @ 0x4
  3178                           
  3179  0074                     setLED@led:	
  3180                           ; 1 bytes @ 0x4
  3181                           
  3182  0074                     Flash_Memory_Read@address:	
  3183                           ; 1 bytes @ 0x4
  3184                           
  3185  0074                     setMemory_Data@address:	
  3186                           ; 1 bytes @ 0x4
  3187                           
  3188  0074                     setCmd_Status@number:	
  3189                           ; 1 bytes @ 0x4
  3190                           
  3191  0074                     _getRF_KeyStatus$5581:	
  3192                           ; 1 bytes @ 0x4
  3193                           
  3194  0074                     _getSw_KeyStatus$6662:	
  3195                           ; 1 bytes @ 0x4
  3196                           
  3197  0074                     _getAll_Sw_KeyStatus$6665:	
  3198                           ; 1 bytes @ 0x4
  3199                           
  3200  0074                     ___bmul@product:	
  3201                           ; 1 bytes @ 0x4
  3202                           
  3203  0074                     DelayTime_1us@i:	
  3204                           ; 1 bytes @ 0x4
  3205                           
  3206  0074                     ___awdiv@dividend:	
  3207                           ; 2 bytes @ 0x4
  3208                           
  3209  0074                     ___lwdiv@dividend:	
  3210                           ; 2 bytes @ 0x4
  3211                           
  3212                           
  3213                           ; 2 bytes @ 0x4
  3214  0074                     	ds	1
  3215  0075                     ??_CC2500_WriteREG:	
  3216  0075                     ??_setDimmerLights_DimmingClose:	
  3217                           ; 0 bytes @ 0x5
  3218                           
  3219  0075                     ??_setLED_Initialization:	
  3220                           ; 0 bytes @ 0x5
  3221                           
  3222  0075                     ??_Exception_Main:	
  3223                           ; 0 bytes @ 0x5
  3224                           
  3225  0075                     ??_setSw_Initialization:	
  3226                           ; 0 bytes @ 0x5
  3227                           
  3228  0075                     ??_DelayOff_Initialization:	
  3229                           ; 0 bytes @ 0x5
  3230                           
  3231  0075                     ??_setDimmerLights_DimmingRun:	
  3232                           ; 0 bytes @ 0x5
  3233                           
  3234  0075                     CC2500_WriteCommand@command:	
  3235                           ; 0 bytes @ 0x5
  3236                           
  3237  0075                     CC2500_ReadStatus@status_addr:	
  3238                           ; 1 bytes @ 0x5
  3239                           
  3240  0075                     getDelayOff_GO@go:	
  3241                           ; 1 bytes @ 0x5
  3242                           
  3243  0075                     getDimmerLights_Allow_Condition@lights:	
  3244                           ; 1 bytes @ 0x5
  3245                           
  3246  0075                     getDimmerLights_Status@status:	
  3247                           ; 1 bytes @ 0x5
  3248                           
  3249  0075                     DimmerLights_DimmingFunction@lights:	
  3250                           ; 1 bytes @ 0x5
  3251                           
  3252  0075                     setLED_Initialization@led:	
  3253                           ; 1 bytes @ 0x5
  3254                           
  3255  0075                     setLED_Main@led:	
  3256                           ; 1 bytes @ 0x5
  3257                           
  3258  0075                     Flash_Memory_Read@ret:	
  3259                           ; 1 bytes @ 0x5
  3260                           
  3261  0075                     setSw_Initialization@sw:	
  3262                           ; 1 bytes @ 0x5
  3263                           
  3264  0075                     getSw_KeyStatus@status:	
  3265                           ; 1 bytes @ 0x5
  3266                           
  3267  0075                     ___bmul@multiplier:	
  3268                           ; 1 bytes @ 0x5
  3269                           
  3270  0075                     ___ftpack@exp:	
  3271                           ; 1 bytes @ 0x5
  3272                           
  3273                           
  3274                           ; 1 bytes @ 0x5
  3275  0075                     	ds	1
  3276  0076                     ??_CC2500_ClearTXFIFO:	
  3277  0076                     ??_CC2500_ClearRXFIFO:	
  3278                           ; 0 bytes @ 0x6
  3279                           
  3280  0076                     ??_CC2500_SIDLEMode:	
  3281                           ; 0 bytes @ 0x6
  3282                           
  3283  0076                     ??_Flash_Memory_Modify:	
  3284                           ; 0 bytes @ 0x6
  3285                           
  3286  0076                     ??_Switch_Initialization:	
  3287                           ; 0 bytes @ 0x6
  3288                           
  3289  0076                     ??_setRF_AdjControl:	
  3290                           ; 0 bytes @ 0x6
  3291                           
  3292  0076                     ??_CC2500_TxData:	
  3293                           ; 0 bytes @ 0x6
  3294                           
  3295  0076                     ??_CC2500_RxData:	
  3296                           ; 0 bytes @ 0x6
  3297                           
  3298  0076                     ??_LED_Initialization:	
  3299                           ; 0 bytes @ 0x6
  3300                           
  3301  0076                     ??_LED_Main:	
  3302                           ; 0 bytes @ 0x6
  3303                           
  3304  0076                     ??_Flash_Memory_Initialization:	
  3305                           ; 0 bytes @ 0x6
  3306                           
  3307  0076                     ??___awdiv:	
  3308                           ; 0 bytes @ 0x6
  3309                           
  3310  0076                     ??___lwdiv:	
  3311                           ; 0 bytes @ 0x6
  3312                           
  3313  0076                     CC2500_WriteREG@w_addr:	
  3314                           ; 0 bytes @ 0x6
  3315                           
  3316  0076                     getDimmerLights_Allow_Condition@allow:	
  3317                           ; 1 bytes @ 0x6
  3318                           
  3319  0076                     setDimmerLights_DimmingRun@lights:	
  3320                           ; 1 bytes @ 0x6
  3321                           
  3322  0076                     getSw_KeyStatus@sw:	
  3323                           ; 1 bytes @ 0x6
  3324                           
  3325  0076                     ___ftpack@sign:	
  3326                           ; 1 bytes @ 0x6
  3327                           
  3328  0076                     getBuz_GO@i:	
  3329                           ; 1 bytes @ 0x6
  3330                           
  3331  0076                     DelayTime_1us@j:	
  3332                           ; 2 bytes @ 0x6
  3333                           
  3334                           
  3335                           ; 2 bytes @ 0x6
  3336  0076                     	ds	1
  3337  0077                     ??_CC2500_InitSetREG:	
  3338  0077                     ??_CC2500_InitPATable:	
  3339                           ; 0 bytes @ 0x7
  3340                           
  3341  0077                     ??_setBuz:	
  3342                           ; 0 bytes @ 0x7
  3343                           
  3344  0077                     ??___awtoft:	
  3345                           ; 0 bytes @ 0x7
  3346                           
  3347  0077                     CC2500_TxData@loop_e:	
  3348                           ; 0 bytes @ 0x7
  3349                           
  3350  0077                     CC2500_RxData@loop_f:	
  3351                           ; 1 bytes @ 0x7
  3352                           
  3353  0077                     Flash_Memory_Initialization@value:	
  3354                           ; 1 bytes @ 0x7
  3355                           
  3356  0077                     Flash_Memory_Modify@i:	
  3357                           ; 1 bytes @ 0x7
  3358                           
  3359                           
  3360                           ; 1 bytes @ 0x7
  3361  0077                     	ds	1
  3362  0078                     ??_CC2500_PowerRST:	
  3363  0078                     ??_CC2500_FrequencyCabr:	
  3364                           ; 0 bytes @ 0x8
  3365                           
  3366  0078                     ??_Flash_Memory_Main:	
  3367                           ; 0 bytes @ 0x8
  3368                           
  3369  0078                     setBuz@count:	
  3370                           ; 0 bytes @ 0x8
  3371                           
  3372                           
  3373                           ; 1 bytes @ 0x8
  3374  0078                     	ds	1
  3375  0079                     ??_getDimmerLights_ValueToPercent:	
  3376  0079                     ??_setDimmerLights_Main:	
  3377                           ; 0 bytes @ 0x9
  3378                           
  3379  0079                     ??_Switch_Main:	
  3380                           ; 0 bytes @ 0x9
  3381                           
  3382  0079                     ??_RF_Main:	
  3383                           ; 0 bytes @ 0x9
  3384                           
  3385  0079                     ??_setControl_Lights_Table:	
  3386                           ; 0 bytes @ 0x9
  3387                           
  3388  0079                     ??_CC2500_PowerOnInitial:	
  3389                           ; 0 bytes @ 0x9
  3390                           
  3391  0079                     ??_DelayOff_Main:	
  3392                           ; 0 bytes @ 0x9
  3393                           
  3394  0079                     ??_DimmerLights_Initialization:	
  3395                           ; 0 bytes @ 0x9
  3396                           
  3397  0079                     ??_DimmerLights_Main:	
  3398                           ; 0 bytes @ 0x9
  3399                           
  3400  0079                     ??_main:	
  3401                           ; 0 bytes @ 0x9
  3402                           
  3403                           
  3404                           	psect	cstackBANK0
  3405  0020                     __pcstackBANK0:	
  3406                           ; 0 bytes @ 0x9
  3407                           
  3408  0020                     ??___ftpack:	
  3409  0020                     CC2500_InitSetREG@temp1:	
  3410                           ; 0 bytes @ 0x0
  3411                           
  3412  0020                     CC2500_InitPATable@temp:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415  0020                     Flash_Memory_Main@key_Status:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418  0020                     Exception_Main@lights:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421  0020                     setRF_AdjControl@status:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424  0020                     ___awdiv@counter:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427  0020                     ___lwdiv@counter:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430                           
  3431                           ; 1 bytes @ 0x0
  3432  0020                     	ds	1
  3433  0021                     CC2500_InitSetREG@temp2:	
  3434  0021                     CC2500_InitPATable@loop_d:	
  3435                           ; 1 bytes @ 0x1
  3436                           
  3437  0021                     _Flash_Memory_Main$3384:	
  3438                           ; 1 bytes @ 0x1
  3439                           
  3440  0021                     Exception_Main@count:	
  3441                           ; 1 bytes @ 0x1
  3442                           
  3443  0021                     setRF_AdjControl@dimmingStatus:	
  3444                           ; 1 bytes @ 0x1
  3445                           
  3446  0021                     ___awdiv@sign:	
  3447                           ; 1 bytes @ 0x1
  3448                           
  3449  0021                     ___lwdiv@quotient:	
  3450                           ; 1 bytes @ 0x1
  3451                           
  3452                           
  3453                           ; 2 bytes @ 0x1
  3454  0021                     	ds	1
  3455  0022                     CC2500_InitSetREG@loop_c:	
  3456  0022                     Exception_Main@status:	
  3457                           ; 1 bytes @ 0x2
  3458                           
  3459  0022                     setRF_AdjControl@sw:	
  3460                           ; 1 bytes @ 0x2
  3461                           
  3462  0022                     ___awdiv@quotient:	
  3463                           ; 1 bytes @ 0x2
  3464                           
  3465                           
  3466                           ; 2 bytes @ 0x2
  3467  0022                     	ds	1
  3468  0023                     ?___awtoft:	
  3469  0023                     Exception_Main@error:	
  3470                           ; 3 bytes @ 0x3
  3471                           
  3472  0023                     ___awtoft@c:	
  3473                           ; 1 bytes @ 0x3
  3474                           
  3475                           
  3476                           ; 2 bytes @ 0x3
  3477  0023                     	ds	1
  3478  0024                     ?_setBuz:	
  3479  0024                     setBuz@time:	
  3480                           ; 0 bytes @ 0x4
  3481                           
  3482                           
  3483                           ; 2 bytes @ 0x4
  3484  0024                     	ds	2
  3485  0026                     ??_setDimmerLights_SwOn:	
  3486  0026                     ??_my_MainTimer:	
  3487                           ; 0 bytes @ 0x6
  3488                           
  3489  0026                     ___awtoft@sign:	
  3490                           ; 0 bytes @ 0x6
  3491                           
  3492                           
  3493                           ; 1 bytes @ 0x6
  3494  0026                     	ds	1
  3495  0027                     ?___ftdiv:	
  3496  0027                     ?___ftmul:	
  3497                           ; 3 bytes @ 0x7
  3498                           
  3499  0027                     setDimmerLights_SwOn@dimmingStatus:	
  3500                           ; 3 bytes @ 0x7
  3501                           
  3502  0027                     ___ftdiv@f2:	
  3503                           ; 1 bytes @ 0x7
  3504                           
  3505  0027                     ___ftmul@f1:	
  3506                           ; 3 bytes @ 0x7
  3507                           
  3508                           
  3509                           ; 3 bytes @ 0x7
  3510  0027                     	ds	1
  3511  0028                     _setDimmerLights_SwOn$2411:	
  3512                           
  3513                           ; 1 bytes @ 0x8
  3514  0028                     	ds	1
  3515  0029                     _setDimmerLights_SwOn$2420:	
  3516                           
  3517                           ; 1 bytes @ 0x9
  3518  0029                     	ds	1
  3519  002A                     setDimmerLights_SwOn@idle:	
  3520  002A                     ___ftdiv@f1:	
  3521                           ; 1 bytes @ 0xA
  3522                           
  3523  002A                     ___ftmul@f2:	
  3524                           ; 3 bytes @ 0xA
  3525                           
  3526                           
  3527                           ; 3 bytes @ 0xA
  3528  002A                     	ds	1
  3529  002B                     setDimmerLights_SwOn@sw:	
  3530                           
  3531                           ; 1 bytes @ 0xB
  3532  002B                     	ds	1
  3533  002C                     ??_setSw_Main:	
  3534                           
  3535                           ; 0 bytes @ 0xC
  3536  002C                     	ds	1
  3537  002D                     ??___ftdiv:	
  3538  002D                     ??___ftmul:	
  3539                           ; 0 bytes @ 0xD
  3540                           
  3541                           
  3542                           ; 0 bytes @ 0xD
  3543  002D                     	ds	1
  3544  002E                     setSw_Main@sw:	
  3545                           
  3546                           ; 1 bytes @ 0xE
  3547  002E                     	ds	3
  3548  0031                     ___ftdiv@cntr:	
  3549  0031                     ___ftmul@exp:	
  3550                           ; 1 bytes @ 0x11
  3551                           
  3552                           
  3553                           ; 1 bytes @ 0x11
  3554  0031                     	ds	1
  3555  0032                     ___ftdiv@f3:	
  3556  0032                     ___ftmul@f3_as_product:	
  3557                           ; 3 bytes @ 0x12
  3558                           
  3559                           
  3560                           ; 3 bytes @ 0x12
  3561  0032                     	ds	3
  3562  0035                     ___ftdiv@exp:	
  3563  0035                     ___ftmul@cntr:	
  3564                           ; 1 bytes @ 0x15
  3565                           
  3566                           
  3567                           ; 1 bytes @ 0x15
  3568  0035                     	ds	1
  3569  0036                     ___ftdiv@sign:	
  3570  0036                     ___ftmul@sign:	
  3571                           ; 1 bytes @ 0x16
  3572                           
  3573                           
  3574                           ; 1 bytes @ 0x16
  3575  0036                     	ds	1
  3576  0037                     ?___ftadd:	
  3577  0037                     ___ftadd@f1:	
  3578                           ; 3 bytes @ 0x17
  3579                           
  3580                           
  3581                           ; 3 bytes @ 0x17
  3582  0037                     	ds	3
  3583  003A                     ___ftadd@f2:	
  3584                           
  3585                           ; 3 bytes @ 0x1A
  3586  003A                     	ds	3
  3587  003D                     ??___ftadd:	
  3588                           
  3589                           ; 0 bytes @ 0x1D
  3590  003D                     	ds	4
  3591  0041                     ___ftadd@sign:	
  3592                           
  3593                           ; 1 bytes @ 0x21
  3594  0041                     	ds	1
  3595  0042                     ___ftadd@exp2:	
  3596                           
  3597                           ; 1 bytes @ 0x22
  3598  0042                     	ds	1
  3599  0043                     ___ftadd@exp1:	
  3600                           
  3601                           ; 1 bytes @ 0x23
  3602  0043                     	ds	1
  3603  0044                     ?___fttol:	
  3604  0044                     ___fttol@f1:	
  3605                           ; 4 bytes @ 0x24
  3606                           
  3607                           
  3608                           ; 3 bytes @ 0x24
  3609  0044                     	ds	4
  3610  0048                     ??___fttol:	
  3611                           
  3612                           ; 0 bytes @ 0x28
  3613  0048                     	ds	4
  3614  004C                     ___fttol@sign1:	
  3615                           
  3616                           ; 1 bytes @ 0x2C
  3617  004C                     	ds	1
  3618  004D                     ___fttol@lval:	
  3619                           
  3620                           ; 4 bytes @ 0x2D
  3621  004D                     	ds	4
  3622  0051                     ___fttol@exp1:	
  3623                           
  3624                           ; 1 bytes @ 0x31
  3625  0051                     	ds	1
  3626  0052                     ??_getDimmerLights_PercentToValue:	
  3627  0052                     getDimmerLights_ValueToPercent@value:	
  3628                           ; 0 bytes @ 0x32
  3629                           
  3630                           
  3631                           ; 1 bytes @ 0x32
  3632  0052                     	ds	1
  3633  0053                     getDimmerLights_ValueToPercent@i:	
  3634                           
  3635                           ; 3 bytes @ 0x33
  3636  0053                     	ds	1
  3637  0054                     getDimmerLights_PercentToValue@value:	
  3638                           
  3639                           ; 1 bytes @ 0x34
  3640  0054                     	ds	1
  3641  0055                     getDimmerLights_PercentToValue@i:	
  3642                           
  3643                           ; 3 bytes @ 0x35
  3644  0055                     	ds	1
  3645  0056                     ?_setProductData:	
  3646  0056                     setProductData@value:	
  3647                           ; 0 bytes @ 0x36
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x36
  3651  0056                     	ds	1
  3652  0057                     ??_setProductData:	
  3653                           
  3654                           ; 0 bytes @ 0x37
  3655  0057                     	ds	1
  3656  0058                     ??_DimmerIntr_Initialization:	
  3657  0058                     ?_setDimmerIntr_DimmingValue:	
  3658                           ; 0 bytes @ 0x38
  3659                           
  3660  0058                     ?_setDimmerIntr_MaxmumValue:	
  3661                           ; 0 bytes @ 0x38
  3662                           
  3663  0058                     setDimmerIntr_DimmingValue@value:	
  3664                           ; 0 bytes @ 0x38
  3665                           
  3666  0058                     setDimmerIntr_MaxmumValue@value:	
  3667                           ; 1 bytes @ 0x38
  3668                           
  3669  0058                     setProductData@address:	
  3670                           ; 1 bytes @ 0x38
  3671                           
  3672                           
  3673                           ; 1 bytes @ 0x38
  3674  0058                     	ds	1
  3675  0059                     ??_DlyOff_Main:	
  3676  0059                     ?_setRF_DimmerLights:	
  3677                           ; 0 bytes @ 0x39
  3678                           
  3679  0059                     ??_setLog_Code:	
  3680                           ; 0 bytes @ 0x39
  3681                           
  3682  0059                     ?_setDelayOff_GO:	
  3683                           ; 0 bytes @ 0x39
  3684                           
  3685  0059                     ??_setDimmerIntr_DimmingValue:	
  3686                           ; 0 bytes @ 0x39
  3687                           
  3688  0059                     ??_setDimmerIntr_MaxmumValue:	
  3689                           ; 0 bytes @ 0x39
  3690                           
  3691  0059                     setDelayOff_GO@command:	
  3692                           ; 0 bytes @ 0x39
  3693                           
  3694  0059                     setRF_DimmerLights@on:	
  3695                           ; 1 bytes @ 0x39
  3696                           
  3697                           
  3698                           ; 1 bytes @ 0x39
  3699  0059                     	ds	1
  3700  005A                     ??_setRF_DimmerLights:	
  3701  005A                     setDelayOff_GO@value:	
  3702                           ; 0 bytes @ 0x3A
  3703                           
  3704  005A                     setDimmerIntr_DimmingValue@lights:	
  3705                           ; 1 bytes @ 0x3A
  3706                           
  3707  005A                     setDimmerIntr_MaxmumValue@lights:	
  3708                           ; 1 bytes @ 0x3A
  3709                           
  3710                           
  3711                           ; 1 bytes @ 0x3A
  3712  005A                     	ds	1
  3713  005B                     ??_setRFSW_AdjControl:	
  3714  005B                     ??_setDelayOff_GO:	
  3715                           ; 0 bytes @ 0x3B
  3716                           
  3717  005B                     DlyOff_Main@sw:	
  3718                           ; 0 bytes @ 0x3B
  3719                           
  3720                           
  3721                           ; 1 bytes @ 0x3B
  3722  005B                     	ds	1
  3723  005C                     setRF_DimmerLights@status:	
  3724                           
  3725                           ; 1 bytes @ 0x3C
  3726  005C                     	ds	1
  3727  005D                     setDelayOff_GO@i:	
  3728  005D                     setRFSW_AdjControl@status:	
  3729                           ; 1 bytes @ 0x3D
  3730                           
  3731  005D                     setRF_DimmerLights@lights:	
  3732                           ; 1 bytes @ 0x3D
  3733                           
  3734                           
  3735                           ; 1 bytes @ 0x3D
  3736  005D                     	ds	1
  3737  005E                     ?_setDimmerLights_Dimming:	
  3738  005E                     setDelayOff_GO@j:	
  3739                           ; 0 bytes @ 0x3E
  3740                           
  3741  005E                     setDimmerLights_Dimming@status:	
  3742                           ; 1 bytes @ 0x3E
  3743                           
  3744  005E                     setRFSW_AdjControl@sw:	
  3745                           ; 1 bytes @ 0x3E
  3746                           
  3747                           
  3748                           ; 1 bytes @ 0x3E
  3749  005E                     	ds	1
  3750  005F                     ??_setDimmerLights_Dimming:	
  3751  005F                     setDelayOff_GO@k:	
  3752                           ; 0 bytes @ 0x3F
  3753                           
  3754                           
  3755                           ; 1 bytes @ 0x3F
  3756  005F                     	ds	1
  3757  0060                     setDelayOff_GO@sw:	
  3758  0060                     setDimmerLights_Dimming@value:	
  3759                           ; 1 bytes @ 0x40
  3760                           
  3761                           
  3762                           ; 1 bytes @ 0x40
  3763  0060                     	ds	1
  3764  0061                     ?_setDimmerLights_OnOff:	
  3765  0061                     ??_setRFSW_Control:	
  3766                           ; 0 bytes @ 0x41
  3767                           
  3768  0061                     setDimmerLights_OnOff@command:	
  3769                           ; 0 bytes @ 0x41
  3770                           
  3771  0061                     setDimmerLights_Dimming@lights:	
  3772                           ; 1 bytes @ 0x41
  3773                           
  3774                           
  3775                           ; 1 bytes @ 0x41
  3776  0061                     	ds	1
  3777  0062                     ??_setDimmerLights_OnOff:	
  3778  0062                     setRFSW_Control@status:	
  3779                           ; 0 bytes @ 0x42
  3780                           
  3781                           
  3782                           ; 1 bytes @ 0x42
  3783  0062                     	ds	1
  3784  0063                     setRFSW_Control@sw:	
  3785                           
  3786                           ; 1 bytes @ 0x43
  3787  0063                     	ds	1
  3788  0064                     ??_getRxData:	
  3789  0064                     setDimmerLights_OnOff@lights:	
  3790                           ; 0 bytes @ 0x44
  3791                           
  3792                           
  3793                           ; 1 bytes @ 0x44
  3794  0064                     	ds	1
  3795  0065                     setDimmerLights_Main@lights:	
  3796  0065                     getRxData@error:	
  3797                           ; 1 bytes @ 0x45
  3798                           
  3799                           
  3800                           ; 1 bytes @ 0x45
  3801  0065                     	ds	1
  3802  0066                     ??_setRF_Main:	
  3803                           
  3804                           ; 0 bytes @ 0x46
  3805  0066                     	ds	1
  3806  0067                     setRF_Main@error:	
  3807                           
  3808                           ; 1 bytes @ 0x47
  3809  0067                     	ds	1
  3810                           
  3811                           	psect	maintext
  3812  17BC                     __pmaintext:	
  3813 ;;
  3814 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3815 ;;
  3816 ;; *************** function _main *****************
  3817 ;; Defined at:
  3818 ;;		line 6 in file "../src/Main_B1.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  argc            2    0[BANK3 ] int 
  3821 ;;  argv            2    2[BANK3 ] PTR PTR unsigned char 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  2    0[BANK3 ] int 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 17F/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3833 ;;      Params:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Totals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0
  3837 ;;Total ram usage:        4 bytes
  3838 ;; Hardware stack levels required when called:   11
  3839 ;; This function calls:
  3840 ;;		_Buzzer_Initialization
  3841 ;;		_Buzzer_Main
  3842 ;;		_CC2500_PowerOnInitial
  3843 ;;		_DelayOff_Initialization
  3844 ;;		_DelayOff_Main
  3845 ;;		_DimmerLights_Initialization
  3846 ;;		_DimmerLights_Main
  3847 ;;		_Exception_Main
  3848 ;;		_Flash_Memory_Initialization
  3849 ;;		_Flash_Memory_Main
  3850 ;;		_LED_Initialization
  3851 ;;		_LED_Main
  3852 ;;		_Mcu_Initialization
  3853 ;;		_RF_Initialization
  3854 ;;		_RF_Main
  3855 ;;		_Switch_Initialization
  3856 ;;		_Switch_Main
  3857 ;;		_WDT_Main
  3858 ;;		_myMain_Initialization
  3859 ;;		_my_MainTimer
  3860 ;; This function is called by:
  3861 ;;		Startup code after reset
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function _main
  3867  17BC                     _main:	
  3868                           
  3869                           ;Main_B1.c: 7: myMain_Initialization();
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3873  17BC  319F  27F1  3197   	fcall	_myMain_Initialization
  3874                           
  3875                           ;Main_B1.c: 8: Mcu_Initialization();
  3876  17BF  3191  211E  3197   	fcall	_Mcu_Initialization
  3877                           
  3878                           ;Main_B1.c: 9: Flash_Memory_Initialization();
  3879  17C2  3182  22B8  3197   	fcall	_Flash_Memory_Initialization
  3880                           
  3881                           ;Main_B1.c: 10: LED_Initialization();
  3882  17C5  319F  2791  3197   	fcall	_LED_Initialization
  3883                           
  3884                           ;Main_B1.c: 11: Buzzer_Initialization();
  3885  17C8  319E  26A8  3197   	fcall	_Buzzer_Initialization
  3886                           
  3887                           ;Main_B1.c: 13: ;;
  3888                           ;Main_B1.c: 14: ;;
  3889                           ;Main_B1.c: 15: ;;
  3890                           ;Main_B1.c: 16: ;;
  3891                           ;Main_B1.c: 17: DelayOff_Initialization();
  3892  17CB  319E  26EF  3197   	fcall	_DelayOff_Initialization
  3893                           
  3894                           ;Main_B1.c: 19: DimmerLights_Initialization();
  3895  17CE  319F  272B  3197   	fcall	_DimmerLights_Initialization
  3896                           
  3897                           ;Main_B1.c: 20: ;;
  3898                           ;Main_B1.c: 21: ;;
  3899                           ;Main_B1.c: 22: ;;
  3900                           ;Main_B1.c: 23: Switch_Initialization();
  3901  17D1  319F  2707  3197   	fcall	_Switch_Initialization
  3902                           
  3903                           ;Main_B1.c: 24: RF_Initialization();
  3904  17D4  319E  26AE  3197   	fcall	_RF_Initialization
  3905                           
  3906                           ;Main_B1.c: 25: CC2500_PowerOnInitial();
  3907  17D7  3191  21C0  3197   	fcall	_CC2500_PowerOnInitial
  3908  17DA                     l1616:	
  3909                           ;Main_B1.c: 26: ;;
  3910                           ;Main_B1.c: 27: ;;
  3911                           ;Main_B1.c: 29: while (1) {
  3912                           
  3913                           
  3914                           ;Main_B1.c: 56: }
  3915                           ;Main_B1.c: 92: if (Timer1.Timeout == 1) {
  3916  17DA  0021               	movlb	1	; select bank1
  3917  17DB  1C58               	btfss	_Timer1^(0+128),0
  3918  17DC  2FDA               	goto	l1616
  3919                           
  3920                           ;Main_B1.c: 93: Timer1.Timeout = 0;
  3921  17DD  1058               	bcf	_Timer1^(0+128),0
  3922                           
  3923                           ;Main_B1.c: 95: my_MainTimer();
  3924  17DE  3196  2679  3197   	fcall	_my_MainTimer
  3925                           
  3926                           ;Main_B1.c: 96: WDT_Main();
  3927  17E1  3190  20CA  3197   	fcall	_WDT_Main
  3928                           
  3929                           ;Main_B1.c: 97: ;;
  3930                           ;Main_B1.c: 98: ;;
  3931                           ;Main_B1.c: 99: if (myMain.PowerON == 1) {
  3932  17E4  0021               	movlb	1	; select bank1
  3933  17E5  1C3F               	btfss	_myMain^(0+128),0
  3934  17E6  2FDA               	goto	l1616
  3935                           
  3936                           ;Main_B1.c: 100: Flash_Memory_Main();
  3937  17E7  3196  26F5  3197   	fcall	_Flash_Memory_Main
  3938                           
  3939                           ;Main_B1.c: 102: LED_Main();
  3940  17EA  319F  279D  3197   	fcall	_LED_Main
  3941                           
  3942                           ;Main_B1.c: 103: Buzzer_Main();
  3943  17ED  3188  2019  3197   	fcall	_Buzzer_Main
  3944                           
  3945                           ;Main_B1.c: 105: ;;
  3946                           ;Main_B1.c: 106: ;;
  3947                           ;Main_B1.c: 107: ;;
  3948                           ;Main_B1.c: 108: ;;
  3949                           ;Main_B1.c: 110: ;;
  3950                           ;Main_B1.c: 111: DimmerLights_Main();
  3951  17F0  3190  209A  3197   	fcall	_DimmerLights_Main
  3952                           
  3953                           ;Main_B1.c: 112: Switch_Main();
  3954  17F3  319F  2762  3197   	fcall	_Switch_Main
  3955                           
  3956                           ;Main_B1.c: 113: ;;
  3957                           ;Main_B1.c: 114: ;;
  3958                           ;Main_B1.c: 116: RF_Main();
  3959  17F6  319E  26B1  3197   	fcall	_RF_Main
  3960                           
  3961                           ;Main_B1.c: 117: DelayOff_Main();
  3962  17F9  319E  26F7  3197   	fcall	_DelayOff_Main
  3963                           
  3964                           ;Main_B1.c: 118: ;;
  3965                           ;Main_B1.c: 119: ;;
  3966                           ;Main_B1.c: 120: Exception_Main();
  3967  17FC  3196  263F  3197   	fcall	_Exception_Main
  3968  17FF  2FDA               	goto	l1616
  3969  1800                     __end_of_main:	
  3970                           ;Main_B1.c: 127: }
  3971                           ;Main_B1.c: 128: }
  3972                           ;Main_B1.c: 162: }
  3973                           ;Main_B1.c: 163: return (0);
  3974                           ;	Return value of _main is never used
  3975                           
  3976                           
  3977                           	psect	text1
  3978  1679                     __ptext1:	
  3979 ;; *************** function _my_MainTimer *****************
  3980 ;; Defined at:
  3981 ;;		line 184 in file "../src/Main_B1.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;		None               void
  3988 ;; Registers used:
  3989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;Total ram usage:        1 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    5
  4002 ;; This function calls:
  4003 ;;		_setBuz
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function _my_MainTimer
  4011  1679                     _my_MainTimer:	
  4012                           
  4013                           ;Main_B1.c: 186: if (myMain.PowerON == 0) {
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in _my_MainTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4017  1679  0021               	movlb	1	; select bank1
  4018  167A  183F               	btfsc	_myMain^(0+128),0
  4019  167B  2E93               	goto	l10536
  4020                           
  4021                           ;Main_B1.c: 187: myMain.PowerCount++;
  4022  167C  3001               	movlw	1
  4023  167D  0020               	movlb	0	; select bank0
  4024  167E  00A6               	movwf	??_my_MainTimer
  4025  167F  0826               	movf	??_my_MainTimer,w
  4026  1680  0021               	movlb	1	; select bank1
  4027  1681  07C0               	addwf	(_myMain^(0+128)+1),f
  4028                           
  4029                           ;Main_B1.c: 188: if (myMain.PowerCount == (1500 / 20)) {
  4030  1682  0840               	movf	(_myMain^(0+128)+1),w
  4031  1683  3A4B               	xorlw	75
  4032  1684  1D03               	skipz
  4033  1685  0008               	return
  4034                           
  4035                           ;Main_B1.c: 189: myMain.PowerCount = 0;
  4036  1686  01C0               	clrf	(_myMain^(0+128)+1)
  4037                           
  4038                           ;Main_B1.c: 190: myMain.PowerON = 1;
  4039  1687  143F               	bsf	_myMain^(0+128),0
  4040                           
  4041                           ;Main_B1.c: 195: setBuz(3, 50);
  4042  1688  3032               	movlw	50
  4043  1689  0020               	movlb	0	; select bank0
  4044  168A  00A4               	movwf	setBuz@time
  4045  168B  3000               	movlw	0
  4046  168C  00A5               	movwf	setBuz@time+1
  4047  168D  3003               	movlw	3
  4048  168E  3189  2141         	fcall	_setBuz
  4049                           
  4050                           ;Main_B1.c: 196: myMain.SelfTest = 1;
  4051  1690  0021               	movlb	1	; select bank1
  4052  1691  163F               	bsf	_myMain^(0+128),4
  4053                           
  4054                           ;Main_B1.c: 205: }
  4055                           ;Main_B1.c: 206: } else {
  4056  1692  0008               	return
  4057  1693                     l10536:	
  4058                           
  4059                           ;Main_B1.c: 207: myMain.PowerCount++;
  4060  1693  3001               	movlw	1
  4061  1694  0020               	movlb	0	; select bank0
  4062  1695  00A6               	movwf	??_my_MainTimer
  4063  1696  0826               	movf	??_my_MainTimer,w
  4064  1697  0021               	movlb	1	; select bank1
  4065  1698  07C0               	addwf	(_myMain^(0+128)+1),f
  4066                           
  4067                           ;Main_B1.c: 208: if (myMain.PowerCount == (1000 / 20)) {
  4068  1699  0840               	movf	(_myMain^(0+128)+1),w
  4069  169A  3A32               	xorlw	50
  4070  169B  1903               	btfsc	3,2
  4071                           
  4072                           ;Main_B1.c: 209: myMain.PowerCount = 0;
  4073  169C  01C0               	clrf	(_myMain^(0+128)+1)
  4074                           
  4075                           ;Main_B1.c: 231: }
  4076                           ;Main_B1.c: 233: myMain.Count1++;
  4077  169D  3001               	movlw	1
  4078  169E  07C3               	addwf	(_myMain^(0+128)+4),f
  4079  169F  3000               	movlw	0
  4080  16A0  3DC4               	addwfc	((_myMain+1)^(0+128)+4),f
  4081                           
  4082                           ;Main_B1.c: 234: if (myMain.Count1 == (1000 / 20)) {
  4083  16A1  3004               	movlw	4
  4084  16A2  3EBF               	addlw	_myMain& (0+255)
  4085  16A3  0086               	movwf	6
  4086  16A4  0187               	clrf	7
  4087  16A5  3F40               	moviw [0]fsr1
  4088  16A6  3A32               	xorlw	50
  4089  16A7  1D03               	skipz
  4090  16A8  2EAB               	goto	u12175
  4091  16A9  3F41               	moviw [1]fsr1
  4092  16AA  3A00               	xorlw	0
  4093  16AB                     u12175:	
  4094  16AB  1D03               	skipz
  4095  16AC  0008               	return
  4096                           
  4097                           ;Main_B1.c: 235: myMain.Count1 = 0;
  4098  16AD  01C3               	clrf	(_myMain^(0+128)+4)
  4099  16AE  01C4               	clrf	((_myMain+1)^(0+128)+4)
  4100                           
  4101                           ;Main_B1.c: 247: if (myMain.Flag) {
  4102  16AF  1CBF               	btfss	_myMain^(0+128),1
  4103  16B0  2EB3               	goto	l1632
  4104                           
  4105                           ;Main_B1.c: 248: myMain.Flag = 0;
  4106  16B1  10BF               	bcf	_myMain^(0+128),1
  4107                           
  4108                           ;Main_B1.c: 257: } else {
  4109  16B2  0008               	return
  4110  16B3                     l1632:	
  4111                           
  4112                           ;Main_B1.c: 258: myMain.Flag = 1;
  4113  16B3  14BF               	bsf	_myMain^(0+128),1
  4114  16B4  0008               	return
  4115  16B5                     __end_of_my_MainTimer:	
  4116                           
  4117                           	psect	text2
  4118  1FF1                     __ptext2:	
  4119 ;; *************** function _myMain_Initialization *****************
  4120 ;; Defined at:
  4121 ;;		line 169 in file "../src/Main_B1.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;		None               void
  4128 ;; Registers used:
  4129 ;;		wreg, fsr1l, fsr1h
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;Total ram usage:        1 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    3
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           
  4150                           ;psect for function _myMain_Initialization
  4151  1FF1                     _myMain_Initialization:	
  4152                           
  4153                           ;Main_B1.c: 172: product = &_product;
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _myMain_Initialization: [wregfsr1]
  4157  1FF1  3020               	movlw	__product& (0+255)
  4158  1FF2  00F2               	movwf	??_myMain_Initialization
  4159  1FF3  0872               	movf	??_myMain_Initialization,w
  4160  1FF4  0020               	movlb	0	; select bank0
  4161  1FF5  00EE               	movwf	_product
  4162                           
  4163                           ;Main_B1.c: 173: product->Data[20] = 210;
  4164  1FF6  30D2               	movlw	210
  4165  1FF7  00F2               	movwf	??_myMain_Initialization
  4166  1FF8  086E               	movf	_product,w
  4167  1FF9  3E14               	addlw	20
  4168  1FFA  0086               	movwf	6
  4169  1FFB  3002               	movlw	2	; select bank4/5
  4170  1FFC  0087               	movwf	7
  4171  1FFD  0872               	movf	??_myMain_Initialization,w
  4172  1FFE  0081               	movwf	1
  4173  1FFF  0008               	return
  4174  2000                     __end_of_myMain_Initialization:	
  4175                           
  4176                           	psect	text3
  4177  10CA                     __ptext3:	
  4178 ;; *************** function _WDT_Main *****************
  4179 ;; Defined at:
  4180 ;;		line 1121 in file "../src/MCU_B1.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;		None               void
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0, pclath, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4198 ;;Total ram usage:        1 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    4
  4201 ;; This function calls:
  4202 ;;		_WDT_Clearing
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _WDT_Main
  4210  10CA                     _WDT_Main:	
  4211                           
  4212                           ;MCU_B1.c: 1122: if (WDT.Enable == 1) {
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  4216  10CA  0021               	movlb	1	; select bank1
  4217  10CB  1C5D               	btfss	_WDT^(0+128),0
  4218  10CC  0008               	return
  4219                           
  4220                           ;MCU_B1.c: 1123: if (WDT.Timer-- > 0) {
  4221  10CD  3001               	movlw	1
  4222  10CE  02DE               	subwf	(_WDT^(0+128)+1),f
  4223  10CF  085E               	movf	(_WDT^(0+128)+1),w
  4224  10D0  3AFF               	xorlw	255
  4225  10D1  1903               	skipnz
  4226  10D2  0008               	return
  4227                           
  4228                           ;MCU_B1.c: 1124: WDT.Timer = 100;
  4229  10D3  3064               	movlw	100
  4230  10D4  00F2               	movwf	??_WDT_Main
  4231  10D5  0872               	movf	??_WDT_Main,w
  4232  10D6  00DE               	movwf	(_WDT^(0+128)+1)
  4233                           
  4234                           ;MCU_B1.c: 1125: WDT_Clearing();
  4235  10D7  3180  2002         	fcall	_WDT_Clearing
  4236  10D9  0008               	return
  4237  10DA                     __end_of_WDT_Main:	
  4238                           
  4239                           	psect	text4
  4240  0002                     __ptext4:	
  4241 ;; *************** function _WDT_Clearing *****************
  4242 ;; Defined at:
  4243 ;;		line 1131 in file "../src/MCU_B1.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;		None               void
  4250 ;; Registers used:
  4251 ;;		None
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    3
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_WDT_Main
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _WDT_Clearing
  4273  0002                     _WDT_Clearing:	
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in _WDT_Clearing: []
  4277  0002  0064               	clrwdt	;# 
  4278  0003  0008               	return
  4279  0004                     __end_of_WDT_Clearing:	
  4280                           
  4281                           	psect	text5
  4282  1F62                     __ptext5:	
  4283 ;; *************** function _Switch_Main *****************
  4284 ;; Defined at:
  4285 ;;		line 76 in file "../src/Switch_B1.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;		None               void
  4292 ;; Registers used:
  4293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    7
  4306 ;; This function calls:
  4307 ;;		_TouchPower
  4308 ;;		_setSw_Main
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _Switch_Main
  4316  1F62                     _Switch_Main:	
  4317                           
  4318                           ;Switch_B1.c: 79: setSw_Main(1);
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _Switch_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4322  1F62  3001               	movlw	1
  4323  1F63  3180  2051  319F   	fcall	_setSw_Main
  4324                           
  4325                           ;Switch_B1.c: 83: setSw_Main(2);
  4326  1F66  3002               	movlw	2
  4327  1F67  3180  2051  319F   	fcall	_setSw_Main
  4328                           
  4329                           ;Switch_B1.c: 91: TouchPower();
  4330  1F6A  3191  21EA         	fcall	_TouchPower
  4331  1F6C  0008               	return
  4332  1F6D                     __end_of_Switch_Main:	
  4333                           
  4334                           	psect	text6
  4335  0051                     __ptext6:	
  4336 ;; *************** function _setSw_Main *****************
  4337 ;; Defined at:
  4338 ;;		line 117 in file "../src/Switch_B1.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  sw              1    wreg     unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  sw              1   14[BANK0 ] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;		None               void
  4345 ;; Registers used:
  4346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;Total ram usage:        3 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    6
  4359 ;; This function calls:
  4360 ;;		_SwPointSelect
  4361 ;;		_getMain_All_Error_Status
  4362 ;;		_getSw_KeyStatus
  4363 ;;		_setBuz
  4364 ;;		_setDimmerLights_DimmingOn
  4365 ;;		_setDimmerLights_SwOff
  4366 ;;		_setDimmerLights_SwOn
  4367 ;;		_setRF_Learn
  4368 ;; This function is called by:
  4369 ;;		_Switch_Main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _setSw_Main
  4375  0051                     _setSw_Main:	
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _setSw_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4379                           ;setSw_Main@sw stored from wreg
  4380  0051  0020               	movlb	0	; select bank0
  4381  0052  00AE               	movwf	setSw_Main@sw
  4382                           
  4383                           ;Switch_B1.c: 118: SwPointSelect(sw);
  4384  0053  082E               	movf	setSw_Main@sw,w
  4385  0054  3191  21FF  3180   	fcall	_SwPointSelect
  4386                           
  4387                           ;Switch_B1.c: 119: if (Sw->Enable == 1) {
  4388  0057  0020               	movlb	0	; select bank0
  4389  0058  086C               	movf	_Sw,w
  4390  0059  0086               	movwf	6
  4391  005A  3001               	movlw	1	; select bank2/3
  4392  005B  0087               	movwf	7
  4393  005C  1C01               	btfss	1,0
  4394  005D  29B8               	goto	l2628
  4395                           
  4396                           ;Switch_B1.c: 121: if (getMain_All_Error_Status(0) == 0) {
  4397  005E  3000               	movlw	0
  4398  005F  319E  26AB  3180   	fcall	_getMain_All_Error_Status
  4399  0062  3800               	iorlw	0
  4400  0063  1D03               	skipz
  4401  0064  2880               	goto	l10426
  4402                           
  4403                           ;Switch_B1.c: 122: Sw->Detect = 0;
  4404  0065  0020               	movlb	0	; select bank0
  4405  0066  0A6C               	incf	_Sw,w
  4406  0067  0086               	movwf	6
  4407  0068  3001               	movlw	1	; select bank2/3
  4408  0069  0087               	movwf	7
  4409  006A  1081               	bcf	1,1
  4410                           
  4411                           ;Switch_B1.c: 123: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  4412  006B  082E               	movf	setSw_Main@sw,w
  4413  006C  3193  2361  3180   	fcall	_getSw_KeyStatus
  4414  006F  3A01               	xorlw	1
  4415  0070  3000               	movlw	0
  4416  0071  1903               	skipnz
  4417  0072  3001               	movlw	1
  4418  0073  0020               	movlb	0	; select bank0
  4419  0074  00AC               	movwf	??_setSw_Main
  4420  0075  086C               	movf	_Sw,w
  4421  0076  0086               	movwf	6
  4422  0077  3001               	movlw	1	; select bank2/3
  4423  0078  0087               	movwf	7
  4424  0079  0DAC               	rlf	??_setSw_Main,f
  4425  007A  0801               	movf	1,w
  4426  007B  062C               	xorwf	??_setSw_Main,w
  4427  007C  39FD               	andlw	-3
  4428  007D  062C               	xorwf	??_setSw_Main,w
  4429  007E  0081               	movwf	1
  4430                           
  4431                           ;Switch_B1.c: 124: } else {
  4432  007F  2896               	goto	l2630
  4433  0080                     l10426:	
  4434                           
  4435                           ;Switch_B1.c: 125: if (Sw->Detect == 0) {
  4436  0080  0020               	movlb	0	; select bank0
  4437  0081  0A6C               	incf	_Sw,w
  4438  0082  0086               	movwf	6
  4439  0083  3001               	movlw	1	; select bank2/3
  4440  0084  0087               	movwf	7
  4441  0085  1881               	btfsc	1,1
  4442  0086  2896               	goto	l2630
  4443                           
  4444                           ;Switch_B1.c: 126: Sw->Detect = 1;
  4445  0087  0A6C               	incf	_Sw,w
  4446  0088  0086               	movwf	6
  4447  0089  3001               	movlw	1	; select bank2/3
  4448  008A  0087               	movwf	7
  4449  008B  1481               	bsf	1,1
  4450                           
  4451                           ;Switch_B1.c: 128: Sw->Touch = 0;
  4452  008C  086C               	movf	_Sw,w
  4453  008D  0086               	movwf	6
  4454  008E  3001               	movlw	1	; select bank2/3
  4455  008F  0087               	movwf	7
  4456  0090  1081               	bcf	1,1
  4457                           
  4458                           ;Switch_B1.c: 129: Sw->Debounce = 1;
  4459  0091  086C               	movf	_Sw,w
  4460  0092  0086               	movwf	6
  4461  0093  3001               	movlw	1	; select bank2/3
  4462  0094  0087               	movwf	7
  4463  0095  1501               	bsf	1,2
  4464  0096                     l2630:	
  4465                           
  4466                           ;Switch_B1.c: 130: }
  4467                           ;Switch_B1.c: 131: }
  4468                           ;Switch_B1.c: 133: if (Sw->Touch == 1) {
  4469  0096  086C               	movf	_Sw,w
  4470  0097  0086               	movwf	6
  4471  0098  3001               	movlw	1	; select bank2/3
  4472  0099  0087               	movwf	7
  4473  009A  1C81               	btfss	1,1
  4474  009B  2965               	goto	l10476
  4475                           
  4476                           ;Switch_B1.c: 134: if (Sw->Debounce == 0) {
  4477  009C  086C               	movf	_Sw,w
  4478  009D  0086               	movwf	6
  4479  009E  3001               	movlw	1	; select bank2/3
  4480  009F  0087               	movwf	7
  4481  00A0  1901               	btfsc	1,2
  4482  00A1  28C3               	goto	l10442
  4483                           
  4484                           ;Switch_B1.c: 135: Sw->DebounceTime++;
  4485  00A2  3001               	movlw	1
  4486  00A3  00AC               	movwf	??_setSw_Main
  4487  00A4  086C               	movf	_Sw,w
  4488  00A5  3E02               	addlw	2
  4489  00A6  0086               	movwf	6
  4490  00A7  3001               	movlw	1	; select bank2/3
  4491  00A8  0087               	movwf	7
  4492  00A9  082C               	movf	??_setSw_Main,w
  4493  00AA  0781               	addwf	1,f
  4494                           
  4495                           ;Switch_B1.c: 136: if (Sw->DebounceTime >= (100 / 20)) {
  4496  00AB  086C               	movf	_Sw,w
  4497  00AC  3E02               	addlw	2
  4498  00AD  0086               	movwf	6
  4499  00AE  3001               	movlw	1	; select bank2/3
  4500  00AF  0087               	movwf	7
  4501  00B0  3005               	movlw	5
  4502  00B1  0201               	subwf	1,w
  4503  00B2  1C03               	skipc
  4504  00B3  0008               	return
  4505                           
  4506                           ;Switch_B1.c: 137: Sw->DebounceTime = 0;
  4507  00B4  086C               	movf	_Sw,w
  4508  00B5  3E02               	addlw	2
  4509  00B6  0086               	movwf	6
  4510  00B7  3001               	movlw	1	; select bank2/3
  4511  00B8  0087               	movwf	7
  4512  00B9  0181               	clrf	1
  4513                           
  4514                           ;Switch_B1.c: 138: Sw->Debounce = 1;
  4515  00BA  086C               	movf	_Sw,w
  4516  00BB  0086               	movwf	6
  4517  00BC  3001               	movlw	1	; select bank2/3
  4518  00BD  0087               	movwf	7
  4519  00BE  1501               	bsf	1,2
  4520                           
  4521                           ;Switch_B1.c: 144: setDimmerLights_SwOn(sw);
  4522  00BF  082E               	movf	setSw_Main@sw,w
  4523  00C0  3187  2791         	fcall	_setDimmerLights_SwOn
  4524                           
  4525                           ;Switch_B1.c: 147: }
  4526                           ;Switch_B1.c: 148: } else {
  4527  00C2  0008               	return
  4528  00C3                     l10442:	
  4529                           
  4530                           ;Switch_B1.c: 149: if (Sw->Hold1 == 0) {
  4531  00C3  0020               	movlb	0	; select bank0
  4532  00C4  086C               	movf	_Sw,w
  4533  00C5  0086               	movwf	6
  4534  00C6  3001               	movlw	1	; select bank2/3
  4535  00C7  0087               	movwf	7
  4536  00C8  1981               	btfsc	1,3
  4537  00C9  28F5               	goto	l10452
  4538                           
  4539                           ;Switch_B1.c: 150: Sw->Hold1Time++;
  4540  00CA  086C               	movf	_Sw,w
  4541  00CB  3E03               	addlw	3
  4542  00CC  0086               	movwf	6
  4543  00CD  3001               	movlw	1	; select bank2/3
  4544  00CE  0087               	movwf	7
  4545  00CF  3001               	movlw	1
  4546  00D0  0781               	addwf	1,f
  4547  00D1  3141               	addfsr 1,1
  4548  00D2  1803               	skipnc
  4549  00D3  0A81               	incf	1,f
  4550                           
  4551                           ;Switch_B1.c: 151: if (Sw->Hold1Time >= (1500 / 20)) {
  4552  00D4  086C               	movf	_Sw,w
  4553  00D5  3E03               	addlw	3
  4554  00D6  0086               	movwf	6
  4555  00D7  3001               	movlw	1	; select bank2/3
  4556  00D8  0087               	movwf	7
  4557  00D9  3F40               	moviw [0]fsr1
  4558  00DA  00AC               	movwf	??_setSw_Main
  4559  00DB  3F41               	moviw [1]fsr1
  4560  00DC  00AD               	movwf	??_setSw_Main+1
  4561  00DD  3000               	movlw	0
  4562  00DE  022D               	subwf	??_setSw_Main+1,w
  4563  00DF  304B               	movlw	75
  4564  00E0  1903               	skipnz
  4565  00E1  022C               	subwf	??_setSw_Main,w
  4566  00E2  1C03               	skipc
  4567  00E3  0008               	return
  4568                           
  4569                           ;Switch_B1.c: 152: Sw->Hold1Time = 0;
  4570  00E4  086C               	movf	_Sw,w
  4571  00E5  3E03               	addlw	3
  4572  00E6  0086               	movwf	6
  4573  00E7  3001               	movlw	1	; select bank2/3
  4574  00E8  0087               	movwf	7
  4575  00E9  3000               	movlw	0
  4576  00EA  3FC0               	movwi [0]fsr1
  4577  00EB  3FC1               	movwi [1]fsr1
  4578                           
  4579                           ;Switch_B1.c: 153: Sw->Hold1 = 1;
  4580  00EC  086C               	movf	_Sw,w
  4581  00ED  0086               	movwf	6
  4582  00EE  3001               	movlw	1	; select bank2/3
  4583  00EF  0087               	movwf	7
  4584  00F0  1581               	bsf	1,3
  4585                           
  4586                           ;Switch_B1.c: 159: setDimmerLights_DimmingOn(sw);
  4587  00F1  082E               	movf	setSw_Main@sw,w
  4588  00F2  3194  2496         	fcall	_setDimmerLights_DimmingOn
  4589                           
  4590                           ;Switch_B1.c: 162: }
  4591                           ;Switch_B1.c: 163: } else {
  4592  00F4  0008               	return
  4593  00F5                     l10452:	
  4594                           
  4595                           ;Switch_B1.c: 165: if (Sw->Hold2 == 0) {
  4596  00F5  0020               	movlb	0	; select bank0
  4597  00F6  086C               	movf	_Sw,w
  4598  00F7  0086               	movwf	6
  4599  00F8  3001               	movlw	1	; select bank2/3
  4600  00F9  0087               	movwf	7
  4601  00FA  1A01               	btfsc	1,4
  4602  00FB  2933               	goto	l10466
  4603                           
  4604                           ;Switch_B1.c: 166: Sw->Hold2Time++;
  4605  00FC  086C               	movf	_Sw,w
  4606  00FD  3E05               	addlw	5
  4607  00FE  0086               	movwf	6
  4608  00FF  3001               	movlw	1	; select bank2/3
  4609  0100  0087               	movwf	7
  4610  0101  3001               	movlw	1
  4611  0102  0781               	addwf	1,f
  4612  0103  3141               	addfsr 1,1
  4613  0104  1803               	skipnc
  4614  0105  0A81               	incf	1,f
  4615                           
  4616                           ;Switch_B1.c: 167: if (Sw->Hold2Time >= (1500 / 20)) {
  4617  0106  086C               	movf	_Sw,w
  4618  0107  3E05               	addlw	5
  4619  0108  0086               	movwf	6
  4620  0109  3001               	movlw	1	; select bank2/3
  4621  010A  0087               	movwf	7
  4622  010B  3F40               	moviw [0]fsr1
  4623  010C  00AC               	movwf	??_setSw_Main
  4624  010D  3F41               	moviw [1]fsr1
  4625  010E  00AD               	movwf	??_setSw_Main+1
  4626  010F  3000               	movlw	0
  4627  0110  022D               	subwf	??_setSw_Main+1,w
  4628  0111  304B               	movlw	75
  4629  0112  1903               	skipnz
  4630  0113  022C               	subwf	??_setSw_Main,w
  4631  0114  1C03               	skipc
  4632  0115  0008               	return
  4633                           
  4634                           ;Switch_B1.c: 168: Sw->Hold2Time = 0;
  4635  0116  086C               	movf	_Sw,w
  4636  0117  3E05               	addlw	5
  4637  0118  0086               	movwf	6
  4638  0119  3001               	movlw	1	; select bank2/3
  4639  011A  0087               	movwf	7
  4640  011B  3000               	movlw	0
  4641  011C  3FC0               	movwi [0]fsr1
  4642  011D  3FC1               	movwi [1]fsr1
  4643                           
  4644                           ;Switch_B1.c: 169: Sw->Hold2 = 1;
  4645  011E  086C               	movf	_Sw,w
  4646  011F  0086               	movwf	6
  4647  0120  3001               	movlw	1	; select bank2/3
  4648  0121  0087               	movwf	7
  4649  0122  1601               	bsf	1,4
  4650                           
  4651                           ;Switch_B1.c: 172: setRF_Learn(1);
  4652  0123  3001               	movlw	1
  4653  0124  3191  210D  3180   	fcall	_setRF_Learn
  4654                           
  4655                           ;Switch_B1.c: 173: if (myMain.First == 1) {
  4656  0127  0021               	movlb	1	; select bank1
  4657  0128  1EBF               	btfss	_myMain^(0+128),5
  4658  0129  0008               	return
  4659                           
  4660                           ;Switch_B1.c: 174: setBuz(2, 100);
  4661  012A  3064               	movlw	100
  4662  012B  0020               	movlb	0	; select bank0
  4663  012C  00A4               	movwf	setBuz@time
  4664  012D  3000               	movlw	0
  4665  012E  00A5               	movwf	setBuz@time+1
  4666  012F  3002               	movlw	2
  4667  0130  3189  2141         	fcall	_setBuz
  4668                           
  4669                           ;Switch_B1.c: 175: }
  4670                           ;Switch_B1.c: 179: }
  4671                           ;Switch_B1.c: 180: } else {
  4672  0132  0008               	return
  4673  0133                     l10466:	
  4674                           
  4675                           ;Switch_B1.c: 181: if (Sw->Hold3 == 0) {
  4676  0133  0020               	movlb	0	; select bank0
  4677  0134  086C               	movf	_Sw,w
  4678  0135  0086               	movwf	6
  4679  0136  3001               	movlw	1	; select bank2/3
  4680  0137  0087               	movwf	7
  4681  0138  1A81               	btfsc	1,5
  4682  0139  0008               	return
  4683                           
  4684                           ;Switch_B1.c: 182: Sw->Hold3Time++;
  4685  013A  086C               	movf	_Sw,w
  4686  013B  3E07               	addlw	7
  4687  013C  0086               	movwf	6
  4688  013D  3001               	movlw	1	; select bank2/3
  4689  013E  0087               	movwf	7
  4690  013F  3001               	movlw	1
  4691  0140  0781               	addwf	1,f
  4692  0141  3141               	addfsr 1,1
  4693  0142  1803               	skipnc
  4694  0143  0A81               	incf	1,f
  4695                           
  4696                           ;Switch_B1.c: 183: if (Sw->Hold3Time >= (3000 / 20)) {
  4697  0144  086C               	movf	_Sw,w
  4698  0145  3E07               	addlw	7
  4699  0146  0086               	movwf	6
  4700  0147  3001               	movlw	1	; select bank2/3
  4701  0148  0087               	movwf	7
  4702  0149  3F40               	moviw [0]fsr1
  4703  014A  00AC               	movwf	??_setSw_Main
  4704  014B  3F41               	moviw [1]fsr1
  4705  014C  00AD               	movwf	??_setSw_Main+1
  4706  014D  3000               	movlw	0
  4707  014E  022D               	subwf	??_setSw_Main+1,w
  4708  014F  3096               	movlw	150
  4709  0150  1903               	skipnz
  4710  0151  022C               	subwf	??_setSw_Main,w
  4711  0152  1C03               	skipc
  4712  0153  0008               	return
  4713                           
  4714                           ;Switch_B1.c: 184: Sw->Hold3Time = 0;
  4715  0154  086C               	movf	_Sw,w
  4716  0155  3E07               	addlw	7
  4717  0156  0086               	movwf	6
  4718  0157  3001               	movlw	1	; select bank2/3
  4719  0158  0087               	movwf	7
  4720  0159  3000               	movlw	0
  4721  015A  3FC0               	movwi [0]fsr1
  4722  015B  3FC1               	movwi [1]fsr1
  4723                           
  4724                           ;Switch_B1.c: 185: Sw->Hold3 = 1;
  4725  015C  086C               	movf	_Sw,w
  4726  015D  0086               	movwf	6
  4727  015E  3001               	movlw	1	; select bank2/3
  4728  015F  0087               	movwf	7
  4729  0160  1681               	bsf	1,5
  4730                           
  4731                           ;Switch_B1.c: 188: setRF_Learn(0);
  4732  0161  3000               	movlw	0
  4733  0162  3191  210D         	fcall	_setRF_Learn
  4734                           
  4735                           ;Switch_B1.c: 191: }
  4736                           ;Switch_B1.c: 192: }
  4737                           ;Switch_B1.c: 193: }
  4738                           ;Switch_B1.c: 195: }
  4739                           ;Switch_B1.c: 196: }
  4740                           ;Switch_B1.c: 197: } else {
  4741  0164  0008               	return
  4742  0165                     l10476:	
  4743                           
  4744                           ;Switch_B1.c: 198: if (Sw->Debounce == 1) {
  4745  0165  0020               	movlb	0	; select bank0
  4746  0166  086C               	movf	_Sw,w
  4747  0167  0086               	movwf	6
  4748  0168  3001               	movlw	1	; select bank2/3
  4749  0169  0087               	movwf	7
  4750  016A  1D01               	btfss	1,2
  4751  016B  0008               	return
  4752                           
  4753                           ;Switch_B1.c: 199: Sw->DebounceTime++;
  4754  016C  3001               	movlw	1
  4755  016D  00AC               	movwf	??_setSw_Main
  4756  016E  086C               	movf	_Sw,w
  4757  016F  3E02               	addlw	2
  4758  0170  0086               	movwf	6
  4759  0171  3001               	movlw	1	; select bank2/3
  4760  0172  0087               	movwf	7
  4761  0173  082C               	movf	??_setSw_Main,w
  4762  0174  0781               	addwf	1,f
  4763                           
  4764                           ;Switch_B1.c: 200: if (Sw->DebounceTime >= (100 / 20)) {
  4765  0175  086C               	movf	_Sw,w
  4766  0176  3E02               	addlw	2
  4767  0177  0086               	movwf	6
  4768  0178  3001               	movlw	1	; select bank2/3
  4769  0179  0087               	movwf	7
  4770  017A  3005               	movlw	5
  4771  017B  0201               	subwf	1,w
  4772  017C  1C03               	skipc
  4773  017D  0008               	return
  4774                           
  4775                           ;Switch_B1.c: 201: Sw->DebounceTime = 0;
  4776  017E  086C               	movf	_Sw,w
  4777  017F  3E02               	addlw	2
  4778  0180  0086               	movwf	6
  4779  0181  3001               	movlw	1	; select bank2/3
  4780  0182  0087               	movwf	7
  4781  0183  0181               	clrf	1
  4782                           
  4783                           ;Switch_B1.c: 202: Sw->Debounce = 0;
  4784  0184  086C               	movf	_Sw,w
  4785  0185  0086               	movwf	6
  4786  0186  3001               	movlw	1	; select bank2/3
  4787  0187  0087               	movwf	7
  4788  0188  1101               	bcf	1,2
  4789                           
  4790                           ;Switch_B1.c: 203: Sw->Hold1Time = 0;
  4791  0189  086C               	movf	_Sw,w
  4792  018A  3E03               	addlw	3
  4793  018B  0086               	movwf	6
  4794  018C  3001               	movlw	1	; select bank2/3
  4795  018D  0087               	movwf	7
  4796  018E  3000               	movlw	0
  4797  018F  3FC0               	movwi [0]fsr1
  4798  0190  3FC1               	movwi [1]fsr1
  4799                           
  4800                           ;Switch_B1.c: 204: Sw->Hold1 = 0;
  4801  0191  086C               	movf	_Sw,w
  4802  0192  0086               	movwf	6
  4803  0193  3001               	movlw	1	; select bank2/3
  4804  0194  0087               	movwf	7
  4805  0195  1181               	bcf	1,3
  4806                           
  4807                           ;Switch_B1.c: 206: Sw->Hold2 = 0;
  4808  0196  086C               	movf	_Sw,w
  4809  0197  0086               	movwf	6
  4810  0198  3001               	movlw	1	; select bank2/3
  4811  0199  0087               	movwf	7
  4812  019A  1201               	bcf	1,4
  4813                           
  4814                           ;Switch_B1.c: 207: Sw->Hold3 = 0;
  4815  019B  086C               	movf	_Sw,w
  4816  019C  0086               	movwf	6
  4817  019D  3001               	movlw	1	; select bank2/3
  4818  019E  0087               	movwf	7
  4819  019F  1281               	bcf	1,5
  4820                           
  4821                           ;Switch_B1.c: 208: Sw->Hold2Time = 0;
  4822  01A0  086C               	movf	_Sw,w
  4823  01A1  3E05               	addlw	5
  4824  01A2  0086               	movwf	6
  4825  01A3  3001               	movlw	1	; select bank2/3
  4826  01A4  0087               	movwf	7
  4827  01A5  3000               	movlw	0
  4828  01A6  3FC0               	movwi [0]fsr1
  4829  01A7  3FC1               	movwi [1]fsr1
  4830                           
  4831                           ;Switch_B1.c: 209: Sw->Hold3Time = 0;
  4832  01A8  086C               	movf	_Sw,w
  4833  01A9  3E07               	addlw	7
  4834  01AA  0086               	movwf	6
  4835  01AB  3001               	movlw	1	; select bank2/3
  4836  01AC  0087               	movwf	7
  4837  01AD  3000               	movlw	0
  4838  01AE  3FC0               	movwi [0]fsr1
  4839  01AF  3FC1               	movwi [1]fsr1
  4840                           
  4841                           ;Switch_B1.c: 216: setDimmerLights_SwOff(sw);
  4842  01B0  082E               	movf	setSw_Main@sw,w
  4843  01B1  3195  25CE  3180   	fcall	_setDimmerLights_SwOff
  4844                           
  4845                           ;Switch_B1.c: 220: setRF_Learn(0);
  4846  01B4  3000               	movlw	0
  4847  01B5  3191  210D         	fcall	_setRF_Learn
  4848                           
  4849                           ;Switch_B1.c: 222: }
  4850                           ;Switch_B1.c: 223: }
  4851                           ;Switch_B1.c: 224: }
  4852                           ;Switch_B1.c: 225: } else {
  4853  01B7  0008               	return
  4854  01B8                     l2628:	
  4855                           
  4856                           ;Switch_B1.c: 226: if (myMain.PowerON == 1) {
  4857  01B8  0021               	movlb	1	; select bank1
  4858  01B9  1C3F               	btfss	_myMain^(0+128),0
  4859  01BA  0008               	return
  4860                           
  4861                           ;Switch_B1.c: 227: Sw->Enable = 1;
  4862  01BB  0020               	movlb	0	; select bank0
  4863  01BC  086C               	movf	_Sw,w
  4864  01BD  0086               	movwf	6
  4865  01BE  3001               	movlw	1	; select bank2/3
  4866  01BF  0087               	movwf	7
  4867  01C0  1401               	bsf	1,0
  4868  01C1  0008               	return
  4869  01C2                     __end_of_setSw_Main:	
  4870                           
  4871                           	psect	text7
  4872  110D                     __ptext7:	
  4873 ;; *************** function _setRF_Learn *****************
  4874 ;; Defined at:
  4875 ;;		line 33 in file "../src/RF_Control_B1.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  command         1    wreg     unsigned char 
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;  command         1    3[COMMON] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;Total ram usage:        2 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    3
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_setSw_Main
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           
  4904                           ;psect for function _setRF_Learn
  4905  110D                     _setRF_Learn:	
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in _setRF_Learn: [wreg+status,2+status,0]
  4909                           ;setRF_Learn@command stored from wreg
  4910  110D  00F3               	movwf	setRF_Learn@command
  4911                           
  4912                           ;RF_Control_B1.c: 34: RF1.Learn = command == 1 ? 1 : 0;
  4913  110E  0873               	movf	setRF_Learn@command,w
  4914  110F  3A01               	xorlw	1
  4915  1110  3000               	movlw	0
  4916  1111  1903               	skipnz
  4917  1112  3001               	movlw	1
  4918  1113  00F2               	movwf	??_setRF_Learn
  4919  1114  0EF2               	swapf	??_setRF_Learn,f
  4920  1115  0DF2               	rlf	??_setRF_Learn,f
  4921  1116  0DF2               	rlf	??_setRF_Learn,f
  4922  1117  0021               	movlb	1	; select bank1
  4923  1118  0830               	movf	_RF1^(0+128),w
  4924  1119  0672               	xorwf	??_setRF_Learn,w
  4925  111A  39BF               	andlw	-65
  4926  111B  0672               	xorwf	??_setRF_Learn,w
  4927  111C  00B0               	movwf	_RF1^(0+128)
  4928  111D  0008               	return
  4929  111E                     __end_of_setRF_Learn:	
  4930                           
  4931                           	psect	text8
  4932  1496                     __ptext8:	
  4933 ;; *************** function _setDimmerLights_DimmingOn *****************
  4934 ;; Defined at:
  4935 ;;		line 846 in file "../src/Dimmer_B1.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  sw              1    wreg     unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  sw              1    4[COMMON] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;Total ram usage:        1 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    4
  4956 ;; This function calls:
  4957 ;;		_DimmerLights_SelectPointer
  4958 ;; This function is called by:
  4959 ;;		_setSw_Main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _setDimmerLights_DimmingOn
  4965  1496                     _setDimmerLights_DimmingOn:	
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in _setDimmerLights_DimmingOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  4969                           ;setDimmerLights_DimmingOn@sw stored from wreg
  4970  1496  00F4               	movwf	setDimmerLights_DimmingOn@sw
  4971                           
  4972                           ;Dimmer_B1.c: 852: DimmerLights_SelectPointer(sw);
  4973  1497  0874               	movf	setDimmerLights_DimmingOn@sw,w
  4974  1498  3191  2181  3194   	fcall	_DimmerLights_SelectPointer
  4975                           
  4976                           ;Dimmer_B1.c: 853: if (DimmerLights->Trigger == 0) {
  4977  149B  0020               	movlb	0	; select bank0
  4978  149C  086A               	movf	_DimmerLights,w
  4979  149D  0086               	movwf	6
  4980  149E  3001               	movlw	1	; select bank2/3
  4981  149F  0087               	movwf	7
  4982  14A0  1881               	btfsc	1,1
  4983  14A1  0008               	return
  4984                           
  4985                           ;Dimmer_B1.c: 854: if (DimmerLights->SwFlag == 1) {
  4986  14A2  086A               	movf	_DimmerLights,w
  4987  14A3  0086               	movwf	6
  4988  14A4  3001               	movlw	1	; select bank2/3
  4989  14A5  0087               	movwf	7
  4990  14A6  1C01               	btfss	1,0
  4991  14A7  0008               	return
  4992                           
  4993                           ;Dimmer_B1.c: 855: DimmerLights->Status = 1;
  4994  14A8  0A6A               	incf	_DimmerLights,w
  4995  14A9  0086               	movwf	6
  4996  14AA  3001               	movlw	1	; select bank2/3
  4997  14AB  0087               	movwf	7
  4998  14AC  1401               	bsf	1,0
  4999                           
  5000                           ;Dimmer_B1.c: 857: DimmerLights->DimmingSwFlag = 1;
  5001  14AD  086A               	movf	_DimmerLights,w
  5002  14AE  0086               	movwf	6
  5003  14AF  3001               	movlw	1	; select bank2/3
  5004  14B0  0087               	movwf	7
  5005  14B1  1581               	bsf	1,3
  5006                           
  5007                           ;Dimmer_B1.c: 858: DimmerLights->DimmingTrigger = 1;
  5008  14B2  086A               	movf	_DimmerLights,w
  5009  14B3  0086               	movwf	6
  5010  14B4  3001               	movlw	1	; select bank2/3
  5011  14B5  0087               	movwf	7
  5012  14B6  1601               	bsf	1,4
  5013                           
  5014                           ;Dimmer_B1.c: 859: DimmerLights->DimmingSwitch = 1;
  5015  14B7  086A               	movf	_DimmerLights,w
  5016  14B8  0086               	movwf	6
  5017  14B9  3001               	movlw	1	; select bank2/3
  5018  14BA  0087               	movwf	7
  5019  14BB  1681               	bsf	1,5
  5020  14BC  0008               	return
  5021  14BD                     __end_of_setDimmerLights_DimmingOn:	
  5022                           
  5023                           	psect	text9
  5024  1361                     __ptext9:	
  5025 ;; *************** function _getSw_KeyStatus *****************
  5026 ;; Defined at:
  5027 ;;		line 238 in file "../src/Switch_B1.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  sw              1    wreg     unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  sw              1    6[COMMON] unsigned char 
  5032 ;;  status          1    5[COMMON] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      unsigned char 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;Total ram usage:        5 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    3
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_setSw_Main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _getSw_KeyStatus
  5058  1361                     _getSw_KeyStatus:	
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  5062                           ;getSw_KeyStatus@sw stored from wreg
  5063  1361  00F6               	movwf	getSw_KeyStatus@sw
  5064                           
  5065                           ;Switch_B1.c: 239: char status = 0;
  5066  1362  01F5               	clrf	getSw_KeyStatus@status
  5067                           
  5068                           ;Switch_B1.c: 266: if (sw == 1) {
  5069  1363  0876               	movf	getSw_KeyStatus@sw,w
  5070  1364  3A01               	xorlw	1
  5071  1365  1D03               	skipz
  5072  1366  2B70               	goto	l7076
  5073                           
  5074                           ;Switch_B1.c: 267: status = RA6 == 1 || RA4 == 1 ? 1 : 0;
  5075  1367  01F3               	clrf	_getSw_KeyStatus$6661
  5076  1368  0AF3               	incf	_getSw_KeyStatus$6661,f
  5077  1369  0020               	movlb	0	; select bank0
  5078  136A  1F0C               	btfss	12,6	;volatile
  5079  136B  1A0C               	btfsc	12,4	;volatile
  5080  136C  2B6E               	goto	l7074
  5081  136D  01F3               	clrf	_getSw_KeyStatus$6661
  5082  136E                     l7074:	
  5083  136E  0873               	movf	_getSw_KeyStatus$6661,w
  5084  136F  2B7C               	goto	L1
  5085  1370                     l7076:	
  5086                           ;Switch_B1.c: 268: } else if (sw == 2) {
  5087                           
  5088  1370  0876               	movf	getSw_KeyStatus@sw,w
  5089  1371  3A02               	xorlw	2
  5090  1372  1D03               	skipz
  5091  1373  2B7F               	goto	l7086
  5092                           
  5093                           ;Switch_B1.c: 269: status = RA0 == 1 || RB1 == 1 ? 1 : 0;
  5094  1374  01F4               	clrf	_getSw_KeyStatus$6662
  5095  1375  0AF4               	incf	_getSw_KeyStatus$6662,f
  5096  1376  0020               	movlb	0	; select bank0
  5097  1377  1C0C               	btfss	12,0	;volatile
  5098  1378  188D               	btfsc	13,1	;volatile
  5099  1379  2B7B               	goto	l7084
  5100  137A  01F4               	clrf	_getSw_KeyStatus$6662
  5101  137B                     l7084:	
  5102  137B  0874               	movf	_getSw_KeyStatus$6662,w
  5103  137C                     L1:	
  5104  137C  00F2               	movwf	??_getSw_KeyStatus
  5105  137D  0872               	movf	??_getSw_KeyStatus,w
  5106  137E  00F5               	movwf	getSw_KeyStatus@status
  5107  137F                     l7086:	
  5108                           
  5109                           ;Switch_B1.c: 270: }
  5110                           ;Switch_B1.c: 283: return status;
  5111  137F  0875               	movf	getSw_KeyStatus@status,w
  5112  1380  0008               	return
  5113  1381                     __end_of_getSw_KeyStatus:	
  5114                           
  5115                           	psect	text10
  5116  11FF                     __ptext10:	
  5117 ;; *************** function _SwPointSelect *****************
  5118 ;; Defined at:
  5119 ;;		line 25 in file "../src/Switch_B1.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  sw              1    wreg     unsigned char 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  sw              1    3[COMMON] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;		None               void
  5126 ;; Registers used:
  5127 ;;		wreg
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;Total ram usage:        2 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    3
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_setSw_Main
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           
  5148                           ;psect for function _SwPointSelect
  5149  11FF                     _SwPointSelect:	
  5150                           
  5151                           ;incstack = 0
  5152                           ; Regs used in _SwPointSelect: [wreg]
  5153                           ;SwPointSelect@sw stored from wreg
  5154  11FF  00F3               	movwf	SwPointSelect@sw
  5155                           
  5156                           ;Switch_B1.c: 28: if (sw == 1) {
  5157  1200  0873               	movf	SwPointSelect@sw,w
  5158  1201  3A01               	xorlw	1
  5159  1202  1D03               	skipz
  5160  1203  2A0A               	goto	l7060
  5161                           
  5162                           ;Switch_B1.c: 29: Sw = &Sw1;
  5163  1204  30D5               	movlw	_Sw1& (0+255)
  5164  1205  00F2               	movwf	??_SwPointSelect
  5165  1206  0872               	movf	??_SwPointSelect,w
  5166  1207  0020               	movlb	0	; select bank0
  5167  1208  00EC               	movwf	_Sw
  5168                           
  5169                           ;Switch_B1.c: 30: }
  5170  1209  0008               	return
  5171  120A                     l7060:	
  5172                           
  5173                           ;Switch_B1.c: 33: else if (sw == 2) {
  5174  120A  0873               	movf	SwPointSelect@sw,w
  5175  120B  3A02               	xorlw	2
  5176  120C  1D03               	skipz
  5177  120D  0008               	return
  5178                           
  5179                           ;Switch_B1.c: 34: Sw = &Sw2;
  5180  120E  30DE               	movlw	_Sw2& (0+255)
  5181  120F  00F2               	movwf	??_SwPointSelect
  5182  1210  0872               	movf	??_SwPointSelect,w
  5183  1211  0020               	movlb	0	; select bank0
  5184  1212  00EC               	movwf	_Sw
  5185  1213  0008               	return
  5186  1214                     __end_of_SwPointSelect:	
  5187                           
  5188                           	psect	text11
  5189  11EA                     __ptext11:	
  5190 ;; *************** function _TouchPower *****************
  5191 ;; Defined at:
  5192 ;;		line 10 in file "../src/Switch_B1.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;		None               void
  5199 ;; Registers used:
  5200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    4
  5213 ;; This function calls:
  5214 ;;		_Timeout_Counter
  5215 ;;		_set_TimeoutCleared
  5216 ;; This function is called by:
  5217 ;;		_Switch_Main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function _TouchPower
  5223  11EA                     _TouchPower:	
  5224                           
  5225                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  5226                           
  5227                           ;incstack = 0
  5228                           ; Regs used in _TouchPower: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5229  11EA  0021               	movlb	1	; select bank1
  5230  11EB  1C3F               	btfss	_myMain^(0+128),0
  5231  11EC  0008               	return
  5232                           
  5233                           ;Switch_B1.c: 12: if (RC5 == 0) {
  5234  11ED  0020               	movlb	0	; select bank0
  5235  11EE  1A8E               	btfsc	14,5	;volatile
  5236  11EF  0008               	return
  5237  11F0  29F6               	goto	l7558
  5238  11F1                     l2606:	
  5239                           ;Switch_B1.c: 13: while (RC5 == 0 && myMain.Timeout == 0) {
  5240                           
  5241                           
  5242                           ;Switch_B1.c: 14: RC5 = 1;
  5243  11F1  0020               	movlb	0	; select bank0
  5244  11F2  168E               	bsf	14,5	;volatile
  5245                           
  5246                           ;Switch_B1.c: 15: Timeout_Counter();
  5247  11F3  3191  21D5  3191   	fcall	_Timeout_Counter
  5248  11F6                     l7558:	
  5249  11F6  0020               	movlb	0	; select bank0
  5250  11F7  1A8E               	btfsc	14,5	;volatile
  5251  11F8  29FC               	goto	l7562
  5252  11F9  0021               	movlb	1	; select bank1
  5253  11FA  1D49               	btfss	(_myMain^(0+128)+10),2
  5254  11FB  29F1               	goto	l2606
  5255  11FC                     l7562:	
  5256                           
  5257                           ;Switch_B1.c: 16: }
  5258                           ;Switch_B1.c: 17: set_TimeoutCleared();
  5259  11FC  319E  26C9         	fcall	_set_TimeoutCleared
  5260  11FE  0008               	return
  5261  11FF                     __end_of_TouchPower:	
  5262                           
  5263                           	psect	text12
  5264  1EC9                     __ptext12:	
  5265 ;; *************** function _set_TimeoutCleared *****************
  5266 ;; Defined at:
  5267 ;;		line 286 in file "../src/Main_B1.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;		None
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;		None               void
  5274 ;; Registers used:
  5275 ;;		status,2
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;Total ram usage:        0 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    3
  5288 ;; This function calls:
  5289 ;;		Nothing
  5290 ;; This function is called by:
  5291 ;;		_TouchPower
  5292 ;;		_getAD
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _set_TimeoutCleared
  5298  1EC9                     _set_TimeoutCleared:	
  5299                           
  5300                           ;Main_B1.c: 287: myMain.Timeout = 0;
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _set_TimeoutCleared: [status,2]
  5304  1EC9  0021               	movlb	1	; select bank1
  5305  1ECA  1149               	bcf	(_myMain^(0+128)+10),2
  5306                           
  5307                           ;Main_B1.c: 288: myMain.Timeout_Counter = 0;
  5308  1ECB  01CA               	clrf	(_myMain^(0+128)+11)
  5309  1ECC  01CB               	clrf	((_myMain+1)^(0+128)+11)
  5310  1ECD  0008               	return
  5311  1ECE                     __end_of_set_TimeoutCleared:	
  5312                           
  5313                           	psect	text13
  5314  11D5                     __ptext13:	
  5315 ;; *************** function _Timeout_Counter *****************
  5316 ;; Defined at:
  5317 ;;		line 277 in file "../src/Main_B1.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;		None               void
  5324 ;; Registers used:
  5325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    3
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_TouchPower
  5342 ;;		_getAD
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _Timeout_Counter
  5348  11D5                     _Timeout_Counter:	
  5349                           
  5350                           ;Main_B1.c: 278: myMain.Timeout_Counter++;
  5351                           
  5352                           ;incstack = 0
  5353                           ; Regs used in _Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  5354  11D5  3001               	movlw	1
  5355  11D6  0021               	movlb	1	; select bank1
  5356  11D7  07CA               	addwf	(_myMain^(0+128)+11),f
  5357  11D8  3000               	movlw	0
  5358  11D9  3DCB               	addwfc	((_myMain+1)^(0+128)+11),f
  5359                           
  5360                           ;Main_B1.c: 279: if (myMain.Timeout_Counter == 25000) {
  5361  11DA  300B               	movlw	11
  5362  11DB  3EBF               	addlw	_myMain& (0+255)
  5363  11DC  0086               	movwf	6
  5364  11DD  0187               	clrf	7
  5365  11DE  3F40               	moviw [0]fsr1
  5366  11DF  3AA8               	xorlw	168
  5367  11E0  1D03               	skipz
  5368  11E1  29E4               	goto	u6275
  5369  11E2  3F41               	moviw [1]fsr1
  5370  11E3  3A61               	xorlw	97
  5371  11E4                     u6275:	
  5372  11E4  1D03               	skipz
  5373  11E5  0008               	return
  5374                           
  5375                           ;Main_B1.c: 280: myMain.Timeout_Counter = 0;
  5376  11E6  01CA               	clrf	(_myMain^(0+128)+11)
  5377  11E7  01CB               	clrf	((_myMain+1)^(0+128)+11)
  5378                           
  5379                           ;Main_B1.c: 281: myMain.Timeout = 1;
  5380  11E8  1549               	bsf	(_myMain^(0+128)+10),2
  5381  11E9  0008               	return
  5382  11EA                     __end_of_Timeout_Counter:	
  5383                           
  5384                           	psect	text14
  5385  1F07                     __ptext14:	
  5386 ;; *************** function _Switch_Initialization *****************
  5387 ;; Defined at:
  5388 ;;		line 46 in file "../src/Switch_B1.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;		None               void
  5395 ;; Registers used:
  5396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;Total ram usage:        0 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    6
  5409 ;; This function calls:
  5410 ;;		_setSw_Initialization
  5411 ;; This function is called by:
  5412 ;;		_main
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function _Switch_Initialization
  5418  1F07                     _Switch_Initialization:	
  5419                           
  5420                           ;Switch_B1.c: 52: setSw_Initialization(1);
  5421                           
  5422                           ;incstack = 0
  5423                           ; Regs used in _Switch_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5424  1F07  3001               	movlw	1
  5425  1F08  319E  26E8  319F   	fcall	_setSw_Initialization
  5426                           
  5427                           ;Switch_B1.c: 56: setSw_Initialization(2);
  5428  1F0B  3002               	movlw	2
  5429  1F0C  319E  26E8         	fcall	_setSw_Initialization
  5430  1F0E  0008               	return
  5431  1F0F                     __end_of_Switch_Initialization:	
  5432                           
  5433                           	psect	text15
  5434  1EE8                     __ptext15:	
  5435 ;; *************** function _setSw_Initialization *****************
  5436 ;; Defined at:
  5437 ;;		line 66 in file "../src/Switch_B1.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  sw              1    wreg     unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  sw              1    5[COMMON] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;		None               void
  5444 ;; Registers used:
  5445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;Total ram usage:        1 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    5
  5458 ;; This function calls:
  5459 ;;		_setLED
  5460 ;; This function is called by:
  5461 ;;		_Switch_Initialization
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           
  5466                           ;psect for function _setSw_Initialization
  5467  1EE8                     _setSw_Initialization:	
  5468                           
  5469                           ;incstack = 0
  5470                           ; Regs used in _setSw_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5471                           ;setSw_Initialization@sw stored from wreg
  5472  1EE8  00F5               	movwf	setSw_Initialization@sw
  5473                           
  5474                           ;Switch_B1.c: 68: setLED(sw, 1);
  5475  1EE9  01F3               	clrf	setLED@command
  5476  1EEA  0AF3               	incf	setLED@command,f
  5477  1EEB  0875               	movf	setSw_Initialization@sw,w
  5478  1EEC  318A  2243         	fcall	_setLED
  5479  1EEE  0008               	return
  5480  1EEF                     __end_of_setSw_Initialization:	
  5481                           
  5482                           	psect	text16
  5483  1EB1                     __ptext16:	
  5484 ;; *************** function _RF_Main *****************
  5485 ;; Defined at:
  5486 ;;		line 26 in file "../src/RF_Control_B1.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;		None               void
  5493 ;; Registers used:
  5494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;Total ram usage:        0 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:   10
  5507 ;; This function calls:
  5508 ;;		_setRF_Main
  5509 ;; This function is called by:
  5510 ;;		_main
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _RF_Main
  5516  1EB1                     _RF_Main:	
  5517                           
  5518                           ;RF_Control_B1.c: 28: setRF_Main();
  5519                           
  5520                           ;incstack = 0
  5521                           ; Regs used in _RF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5522  1EB1  3183  2383         	fcall	_setRF_Main
  5523  1EB3  0008               	return
  5524  1EB4                     __end_of_RF_Main:	
  5525                           
  5526                           	psect	text17
  5527  0383                     __ptext17:	
  5528 ;; *************** function _setRF_Main *****************
  5529 ;; Defined at:
  5530 ;;		line 53 in file "../src/RF_Control_B1.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  error           1   71[BANK0 ] unsigned char 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;		None               void
  5537 ;; Registers used:
  5538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;Total ram usage:        2 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    9
  5551 ;; This function calls:
  5552 ;;		_CC2500_PowerOnInitial
  5553 ;;		_CC2500_RxData
  5554 ;;		_CC2500_TxData
  5555 ;;		_CC2500_WriteCommand
  5556 ;;		_RF_RxDisable
  5557 ;;		___lwdiv
  5558 ;;		_getBuz_GO
  5559 ;;		_getRF_KeyStatus
  5560 ;;		_getRxData
  5561 ;;		_setData
  5562 ;; This function is called by:
  5563 ;;		_RF_Main
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function _setRF_Main
  5569  0383                     _setRF_Main:	
  5570                           
  5571                           ;RF_Control_B1.c: 54: char error = 0;
  5572                           
  5573                           ;incstack = 0
  5574                           ; Regs used in _setRF_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5575  0383  0020               	movlb	0	; select bank0
  5576  0384  01E7               	clrf	setRF_Main@error
  5577                           
  5578                           ;RF_Control_B1.c: 55: if (RF1.Enable == 1) {
  5579  0385  0021               	movlb	1	; select bank1
  5580  0386  1C30               	btfss	_RF1^(0+128),0
  5581  0387  2C3E               	goto	l2196
  5582                           
  5583                           ;RF_Control_B1.c: 56: if (getBuz_GO() == 0) {
  5584  0388  3190  20AA  3183   	fcall	_getBuz_GO
  5585  038B  0873               	movf	?_getBuz_GO+1,w
  5586  038C  0472               	iorwf	?_getBuz_GO,w
  5587  038D  1D03               	skipz
  5588  038E  2C23               	goto	l10394
  5589                           
  5590                           ;RF_Control_B1.c: 59: RF1.Key = getRF_KeyStatus() == 1 ? 1 : 0;
  5591  038F  3190  20FC  3183   	fcall	_getRF_KeyStatus
  5592  0392  3A01               	xorlw	1
  5593  0393  3000               	movlw	0
  5594  0394  1903               	skipnz
  5595  0395  3001               	movlw	1
  5596  0396  0020               	movlb	0	; select bank0
  5597  0397  00E6               	movwf	??_setRF_Main
  5598  0398  0CE6               	rrf	??_setRF_Main,f
  5599  0399  0CE6               	rrf	??_setRF_Main,f
  5600  039A  0021               	movlb	1	; select bank1
  5601  039B  0830               	movf	_RF1^(0+128),w
  5602  039C  0020               	movlb	0	; select bank0
  5603  039D  0666               	xorwf	??_setRF_Main,w
  5604  039E  397F               	andlw	-129
  5605  039F  0666               	xorwf	??_setRF_Main,w
  5606  03A0  0021               	movlb	1	; select bank1
  5607  03A1  00B0               	movwf	_RF1^(0+128)
  5608                           
  5609                           ;RF_Control_B1.c: 64: if (RF1.Key == 0 || RF1.Learn == 1) {
  5610  03A2  1FB0               	btfss	_RF1^(0+128),7
  5611  03A3  2BA6               	goto	l2200
  5612  03A4  1F30               	btfss	_RF1^(0+128),6
  5613  03A5  2C23               	goto	l10394
  5614  03A6                     l2200:	
  5615                           
  5616                           ;RF_Control_B1.c: 66: if (RF1.TransceiveGO == 1) {
  5617  03A6  1D30               	btfss	_RF1^(0+128),2
  5618  03A7  2BEA               	goto	l2201
  5619                           
  5620                           ;RF_Control_B1.c: 67: if (RF1.Learn == 0) {
  5621  03A8  1B30               	btfsc	_RF1^(0+128),6
  5622  03A9  2BE5               	goto	l10366
  5623                           
  5624                           ;RF_Control_B1.c: 68: RF1.Count++;
  5625  03AA  3001               	movlw	1
  5626  03AB  07B3               	addwf	(_RF1^(0+128)+3),f
  5627  03AC  3000               	movlw	0
  5628  03AD  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  5629                           
  5630                           ;RF_Control_B1.c: 69: if (RF1.Count >= (RF1.RunTime / 20)) {
  5631  03AE  3014               	movlw	20
  5632  03AF  00F2               	movwf	___lwdiv@divisor
  5633  03B0  3000               	movlw	0
  5634  03B1  00F3               	movwf	___lwdiv@divisor+1
  5635  03B2  0839               	movf	((_RF1+1)^(0+128)+8),w
  5636  03B3  01F5               	clrf	___lwdiv@dividend+1
  5637  03B4  07F5               	addwf	___lwdiv@dividend+1,f
  5638  03B5  0838               	movf	(_RF1^(0+128)+8),w
  5639  03B6  01F4               	clrf	___lwdiv@dividend
  5640  03B7  07F4               	addwf	___lwdiv@dividend,f
  5641  03B8  3195  2597  3183   	fcall	___lwdiv
  5642  03BB  0873               	movf	?___lwdiv+1,w
  5643  03BC  0021               	movlb	1	; select bank1
  5644  03BD  0234               	subwf	((_RF1+1)^(0+128)+3),w
  5645  03BE  1D03               	skipz
  5646  03BF  2BC2               	goto	u11915
  5647  03C0  0872               	movf	?___lwdiv,w
  5648  03C1  0233               	subwf	(_RF1^(0+128)+3),w
  5649  03C2                     u11915:	
  5650  03C2  1C03               	skipc
  5651  03C3  2C23               	goto	l10394
  5652                           
  5653                           ;RF_Control_B1.c: 70: RF1.Count = (RF1.RunTime / 20);
  5654  03C4  3014               	movlw	20
  5655  03C5  00F2               	movwf	___lwdiv@divisor
  5656  03C6  3000               	movlw	0
  5657  03C7  00F3               	movwf	___lwdiv@divisor+1
  5658  03C8  0839               	movf	((_RF1+1)^(0+128)+8),w
  5659  03C9  01F5               	clrf	___lwdiv@dividend+1
  5660  03CA  07F5               	addwf	___lwdiv@dividend+1,f
  5661  03CB  0838               	movf	(_RF1^(0+128)+8),w
  5662  03CC  01F4               	clrf	___lwdiv@dividend
  5663  03CD  07F4               	addwf	___lwdiv@dividend,f
  5664  03CE  3195  2597  3183   	fcall	___lwdiv
  5665  03D1  0873               	movf	?___lwdiv+1,w
  5666  03D2  0021               	movlb	1	; select bank1
  5667  03D3  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5668  03D4  07B4               	addwf	((_RF1+1)^(0+128)+3),f
  5669  03D5  0872               	movf	?___lwdiv,w
  5670  03D6  01B3               	clrf	(_RF1^(0+128)+3)
  5671  03D7  07B3               	addwf	(_RF1^(0+128)+3),f
  5672                           
  5673                           ;RF_Control_B1.c: 72: RF1.TransceiveGO = 0;
  5674  03D8  1130               	bcf	_RF1^(0+128),2
  5675                           
  5676                           ;RF_Control_B1.c: 73: RF1.CorrectionCounter = 0;
  5677  03D9  01BB               	clrf	(_RF1^(0+128)+11)
  5678  03DA  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5679                           
  5680                           ;RF_Control_B1.c: 74: RF_RxDisable();
  5681  03DB  319E  26FF  3183   	fcall	_RF_RxDisable
  5682                           
  5683                           ;RF_Control_B1.c: 75: setData();
  5684  03DE  3188  20F1  3183   	fcall	_setData
  5685                           
  5686                           ;RF_Control_B1.c: 76: CC2500_TxData();
  5687  03E1  318C  2498  3183   	fcall	_CC2500_TxData
  5688                           
  5689                           ;RF_Control_B1.c: 78: }
  5690                           ;RF_Control_B1.c: 79: } else {
  5691  03E4  2C23               	goto	l10394
  5692  03E5                     l10366:	
  5693                           
  5694                           ;RF_Control_B1.c: 80: RF1.Count = 0;
  5695  03E5  0021               	movlb	1	; select bank1
  5696  03E6  01B3               	clrf	(_RF1^(0+128)+3)
  5697  03E7  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5698                           
  5699                           ;RF_Control_B1.c: 81: RF1.TransceiveGO = 0;
  5700  03E8  1130               	bcf	_RF1^(0+128),2
  5701                           
  5702                           ;RF_Control_B1.c: 82: }
  5703                           ;RF_Control_B1.c: 83: } else {
  5704  03E9  2C23               	goto	l10394
  5705  03EA                     l2201:	
  5706                           
  5707                           ;RF_Control_B1.c: 84: if (RF1.RxStatus == 1) {
  5708  03EA  1DB0               	btfss	_RF1^(0+128),3
  5709  03EB  2BF9               	goto	l10380
  5710                           
  5711                           ;RF_Control_B1.c: 86: CC2500_RxData();
  5712  03EC  318B  2304  3183   	fcall	_CC2500_RxData
  5713                           
  5714                           ;RF_Control_B1.c: 88: if (RF1.ReceiveGO == 1) {
  5715  03EF  0021               	movlb	1	; select bank1
  5716  03F0  1CB0               	btfss	_RF1^(0+128),1
  5717  03F1  2C23               	goto	l10394
  5718                           
  5719                           ;RF_Control_B1.c: 89: RF1.ReceiveGO = 0;
  5720  03F2  10B0               	bcf	_RF1^(0+128),1
  5721                           
  5722                           ;RF_Control_B1.c: 90: RF1.CorrectionCounter = 0;
  5723  03F3  01BB               	clrf	(_RF1^(0+128)+11)
  5724  03F4  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5725                           
  5726                           ;RF_Control_B1.c: 98: getRxData();
  5727  03F5  318B  23CD  3183   	fcall	_getRxData
  5728                           
  5729                           ;RF_Control_B1.c: 101: }
  5730                           ;RF_Control_B1.c: 102: } else {
  5731  03F8  2C23               	goto	l10394
  5732  03F9                     l10380:	
  5733                           
  5734                           ;RF_Control_B1.c: 103: RF1.Count++;
  5735  03F9  3001               	movlw	1
  5736  03FA  0021               	movlb	1	; select bank1
  5737  03FB  07B3               	addwf	(_RF1^(0+128)+3),f
  5738  03FC  3000               	movlw	0
  5739  03FD  3DB4               	addwfc	((_RF1+1)^(0+128)+3),f
  5740                           
  5741                           ;RF_Control_B1.c: 104: if (RF1.Count >= (RF1.RunTime / 20)) {
  5742  03FE  3014               	movlw	20
  5743  03FF  00F2               	movwf	___lwdiv@divisor
  5744  0400  3000               	movlw	0
  5745  0401  00F3               	movwf	___lwdiv@divisor+1
  5746  0402  0839               	movf	((_RF1+1)^(0+128)+8),w
  5747  0403  01F5               	clrf	___lwdiv@dividend+1
  5748  0404  07F5               	addwf	___lwdiv@dividend+1,f
  5749  0405  0838               	movf	(_RF1^(0+128)+8),w
  5750  0406  01F4               	clrf	___lwdiv@dividend
  5751  0407  07F4               	addwf	___lwdiv@dividend,f
  5752  0408  3195  2597  3183   	fcall	___lwdiv
  5753  040B  0873               	movf	?___lwdiv+1,w
  5754  040C  0021               	movlb	1	; select bank1
  5755  040D  0234               	subwf	((_RF1+1)^(0+128)+3),w
  5756  040E  1D03               	skipz
  5757  040F  2C12               	goto	u11945
  5758  0410  0872               	movf	?___lwdiv,w
  5759  0411  0233               	subwf	(_RF1^(0+128)+3),w
  5760  0412                     u11945:	
  5761  0412  1C03               	skipc
  5762  0413  2C23               	goto	l10394
  5763                           
  5764                           ;RF_Control_B1.c: 105: RF1.Count = 0;
  5765  0414  01B3               	clrf	(_RF1^(0+128)+3)
  5766  0415  01B4               	clrf	((_RF1+1)^(0+128)+3)
  5767                           
  5768                           ;RF_Control_B1.c: 107: RF1.RxStatus = 1;
  5769  0416  15B0               	bsf	_RF1^(0+128),3
  5770                           
  5771                           ;RF_Control_B1.c: 108: CC2500_WriteCommand(0x36);
  5772  0417  3036               	movlw	54
  5773  0418  3188  2000  3183   	fcall	_CC2500_WriteCommand
  5774                           
  5775                           ;RF_Control_B1.c: 109: CC2500_WriteCommand(0x3A);
  5776  041B  303A               	movlw	58
  5777  041C  3188  2000  3183   	fcall	_CC2500_WriteCommand
  5778                           
  5779                           ;RF_Control_B1.c: 110: CC2500_WriteCommand(0x34);
  5780  041F  3034               	movlw	52
  5781  0420  3188  2000  3183   	fcall	_CC2500_WriteCommand
  5782  0423                     l10394:	
  5783                           
  5784                           ;RF_Control_B1.c: 112: }
  5785                           ;RF_Control_B1.c: 113: }
  5786                           ;RF_Control_B1.c: 114: }
  5787                           ;RF_Control_B1.c: 115: }
  5788                           ;RF_Control_B1.c: 116: }
  5789                           ;RF_Control_B1.c: 118: RF1.CorrectionCounter++;
  5790  0423  3001               	movlw	1
  5791  0424  0021               	movlb	1	; select bank1
  5792  0425  07BB               	addwf	(_RF1^(0+128)+11),f
  5793  0426  3000               	movlw	0
  5794  0427  3DBC               	addwfc	((_RF1+1)^(0+128)+11),f
  5795                           
  5796                           ;RF_Control_B1.c: 119: if (RF1.CorrectionCounter > (60000 / 20)) {
  5797  0428  300B               	movlw	11
  5798  0429  023C               	subwf	((_RF1+1)^(0+128)+11),w
  5799  042A  30B9               	movlw	185
  5800  042B  1903               	skipnz
  5801  042C  023B               	subwf	(_RF1^(0+128)+11),w
  5802  042D  1C03               	skipc
  5803  042E  2C37               	goto	l10406
  5804                           
  5805                           ;RF_Control_B1.c: 120: RF1.CorrectionCounter = 0;
  5806  042F  01BB               	clrf	(_RF1^(0+128)+11)
  5807  0430  01BC               	clrf	((_RF1+1)^(0+128)+11)
  5808                           
  5809                           ;RF_Control_B1.c: 122: RF1.RxStatus = 0;
  5810  0431  11B0               	bcf	_RF1^(0+128),3
  5811                           
  5812                           ;RF_Control_B1.c: 123: RF1.ReceiveGO = 0;
  5813  0432  10B0               	bcf	_RF1^(0+128),1
  5814                           
  5815                           ;RF_Control_B1.c: 124: CC2500_WriteCommand(0x36);
  5816  0433  3036               	movlw	54
  5817  0434  3188  2000  3183   	fcall	_CC2500_WriteCommand
  5818  0437                     l10406:	
  5819                           
  5820                           ;RF_Control_B1.c: 126: }
  5821                           ;RF_Control_B1.c: 128: if (RF1.Timeout == 1) {
  5822  0437  0021               	movlb	1	; select bank1
  5823  0438  1F31               	btfss	(_RF1^(0+128)+1),6
  5824  0439  0008               	return
  5825                           
  5826                           ;RF_Control_B1.c: 129: RF1.Timeout = 0;
  5827  043A  1331               	bcf	(_RF1^(0+128)+1),6
  5828                           
  5829                           ;RF_Control_B1.c: 130: CC2500_PowerOnInitial();
  5830  043B  3191  21C0         	fcall	_CC2500_PowerOnInitial
  5831                           
  5832                           ;RF_Control_B1.c: 131: }
  5833                           ;RF_Control_B1.c: 133: } else {
  5834  043D  0008               	return
  5835  043E                     l2196:	
  5836                           
  5837                           ;RF_Control_B1.c: 134: if (myMain.PowerON == 1) {
  5838  043E  1C3F               	btfss	_myMain^(0+128),0
  5839  043F  0008               	return
  5840                           
  5841                           ;RF_Control_B1.c: 135: RF1.Enable = 1;
  5842  0440  1430               	bsf	_RF1^(0+128),0
  5843  0441  0008               	return
  5844  0442                     __end_of_setRF_Main:	
  5845                           
  5846                           	psect	text18
  5847  08F1                     __ptext18:	
  5848 ;; *************** function _setData *****************
  5849 ;; Defined at:
  5850 ;;		line 188 in file "../src/RF_Control_B1.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;		None               void
  5857 ;; Registers used:
  5858 ;;		wreg, fsr1l, fsr1h, status,2
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;Total ram usage:        1 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    3
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_setRF_Main
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function _setData
  5880  08F1                     _setData:	
  5881                           
  5882                           ;RF_Control_B1.c: 212: RF_Data[0] = 0x63;
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _setData: [wreg+fsr1l+fsr1h+status,2]
  5886  08F1  3063               	movlw	99
  5887  08F2  00F2               	movwf	??_setData
  5888  08F3  0872               	movf	??_setData,w
  5889  08F4  0022               	movlb	2	; select bank2
  5890  08F5  00A0               	movwf	_RF_Data^(0+256)
  5891                           
  5892                           ;RF_Control_B1.c: 213: RF_Data[1] = 0x02;
  5893  08F6  3002               	movlw	2
  5894  08F7  00F2               	movwf	??_setData
  5895  08F8  0872               	movf	??_setData,w
  5896  08F9  00A1               	movwf	(_RF_Data^(0+256)+1)
  5897                           
  5898                           ;RF_Control_B1.c: 215: RF_Data[2] = 0;
  5899  08FA  01A2               	clrf	(_RF_Data^(0+256)+2)
  5900                           
  5901                           ;RF_Control_B1.c: 216: RF_Data[3] = 0;
  5902  08FB  01A3               	clrf	(_RF_Data^(0+256)+3)
  5903                           
  5904                           ;RF_Control_B1.c: 217: RF_Data[4] = 0;
  5905  08FC  01A4               	clrf	(_RF_Data^(0+256)+4)
  5906                           
  5907                           ;RF_Control_B1.c: 218: RF_Data[5] = 0;
  5908  08FD  01A5               	clrf	(_RF_Data^(0+256)+5)
  5909                           
  5910                           ;RF_Control_B1.c: 219: RF_Data[6] = 0;
  5911  08FE  01A6               	clrf	(_RF_Data^(0+256)+6)
  5912                           
  5913                           ;RF_Control_B1.c: 220: RF_Data[7] = 0;
  5914  08FF  01A7               	clrf	(_RF_Data^(0+256)+7)
  5915                           
  5916                           ;RF_Control_B1.c: 221: RF_Data[8] = 0;
  5917  0900  01A8               	clrf	(_RF_Data^(0+256)+8)
  5918                           
  5919                           ;RF_Control_B1.c: 222: RF_Data[9] = product->Data[9];
  5920  0901  0020               	movlb	0	; select bank0
  5921  0902  086E               	movf	_product,w
  5922  0903  0086               	movwf	6
  5923  0904  3002               	movlw	2	; select bank4/5
  5924  0905  0087               	movwf	7
  5925  0906  3002               	movlw	2	; select bank4/5
  5926  0907  3F49               	moviw [9]fsr1
  5927  0908  0022               	movlb	2	; select bank2
  5928  0909  00A9               	movwf	(_RF_Data^(0+256)+9)
  5929                           
  5930                           ;RF_Control_B1.c: 223: RF_Data[10] = 0;
  5931  090A  01AA               	clrf	(_RF_Data^(0+256)+10)
  5932                           
  5933                           ;RF_Control_B1.c: 224: RF_Data[11] = product->Data[11];
  5934  090B  0020               	movlb	0	; select bank0
  5935  090C  086E               	movf	_product,w
  5936  090D  0086               	movwf	6
  5937  090E  3002               	movlw	2	; select bank4/5
  5938  090F  0087               	movwf	7
  5939  0910  3002               	movlw	2	; select bank4/5
  5940  0911  3F4B               	moviw [11]fsr1
  5941  0912  0022               	movlb	2	; select bank2
  5942  0913  00AB               	movwf	(_RF_Data^(0+256)+11)
  5943                           
  5944                           ;RF_Control_B1.c: 225: RF_Data[12] = product->Data[12];
  5945  0914  0020               	movlb	0	; select bank0
  5946  0915  086E               	movf	_product,w
  5947  0916  0086               	movwf	6
  5948  0917  3002               	movlw	2	; select bank4/5
  5949  0918  0087               	movwf	7
  5950  0919  3002               	movlw	2	; select bank4/5
  5951  091A  3F4C               	moviw [12]fsr1
  5952  091B  0022               	movlb	2	; select bank2
  5953  091C  00AC               	movwf	(_RF_Data^(0+256)+12)
  5954                           
  5955                           ;RF_Control_B1.c: 226: RF_Data[13] = product->Data[13];
  5956  091D  0020               	movlb	0	; select bank0
  5957  091E  086E               	movf	_product,w
  5958  091F  0086               	movwf	6
  5959  0920  3002               	movlw	2	; select bank4/5
  5960  0921  0087               	movwf	7
  5961  0922  3002               	movlw	2	; select bank4/5
  5962  0923  3F4D               	moviw [13]fsr1
  5963  0924  0022               	movlb	2	; select bank2
  5964  0925  00AD               	movwf	(_RF_Data^(0+256)+13)
  5965                           
  5966                           ;RF_Control_B1.c: 227: RF_Data[14] = product->Data[14];
  5967  0926  0020               	movlb	0	; select bank0
  5968  0927  086E               	movf	_product,w
  5969  0928  0086               	movwf	6
  5970  0929  3002               	movlw	2	; select bank4/5
  5971  092A  0087               	movwf	7
  5972  092B  3002               	movlw	2	; select bank4/5
  5973  092C  3F4E               	moviw [14]fsr1
  5974  092D  0022               	movlb	2	; select bank2
  5975  092E  00AE               	movwf	(_RF_Data^(0+256)+14)
  5976                           
  5977                           ;RF_Control_B1.c: 228: RF_Data[15] = product->Data[15];
  5978  092F  0020               	movlb	0	; select bank0
  5979  0930  086E               	movf	_product,w
  5980  0931  0086               	movwf	6
  5981  0932  3002               	movlw	2	; select bank4/5
  5982  0933  0087               	movwf	7
  5983  0934  3002               	movlw	2	; select bank4/5
  5984  0935  3F4F               	moviw [15]fsr1
  5985  0936  0022               	movlb	2	; select bank2
  5986  0937  00AF               	movwf	(_RF_Data^(0+256)+15)
  5987                           
  5988                           ;RF_Control_B1.c: 229: RF_Data[16] = 0;
  5989  0938  01B0               	clrf	(_RF_Data^(0+256)+16)
  5990                           
  5991                           ;RF_Control_B1.c: 230: RF_Data[17] = 0;
  5992  0939  01B1               	clrf	(_RF_Data^(0+256)+17)
  5993                           
  5994                           ;RF_Control_B1.c: 231: RF_Data[18] = 0;
  5995  093A  01B2               	clrf	(_RF_Data^(0+256)+18)
  5996                           
  5997                           ;RF_Control_B1.c: 232: RF_Data[19] = 0;
  5998  093B  01B3               	clrf	(_RF_Data^(0+256)+19)
  5999                           
  6000                           ;RF_Control_B1.c: 233: RF_Data[20] = 210;
  6001  093C  30D2               	movlw	210
  6002  093D  00F2               	movwf	??_setData
  6003  093E  0872               	movf	??_setData,w
  6004  093F  00B4               	movwf	(_RF_Data^(0+256)+20)
  6005  0940  0008               	return
  6006  0941                     __end_of_setData:	
  6007                           
  6008                           	psect	text19
  6009  0BCD                     __ptext19:	
  6010 ;; *************** function _getRxData *****************
  6011 ;; Defined at:
  6012 ;;		line 256 in file "../src/RF_Control_B1.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  error           1   69[BANK0 ] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;		None               void
  6019 ;; Registers used:
  6020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;Total ram usage:        2 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    8
  6033 ;; This function calls:
  6034 ;;		_getMain_All_Error_Status
  6035 ;;		_setControl_Lights_Table
  6036 ;;		_setLog_Code
  6037 ;;		_setTxData
  6038 ;; This function is called by:
  6039 ;;		_setRF_Main
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           
  6044                           ;psect for function _getRxData
  6045  0BCD                     _getRxData:	
  6046                           
  6047                           ;RF_Control_B1.c: 258: if (RF_Data[0] == 0xaa && RF_Data[1] == 0x01) {
  6048                           
  6049                           ;incstack = 0
  6050                           ; Regs used in _getRxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6051  0BCD  0022               	movlb	2	; select bank2
  6052  0BCE  0820               	movf	_RF_Data^(0+256),w
  6053  0BCF  3AAA               	xorlw	170
  6054  0BD0  1D03               	skipz
  6055  0BD1  2BE3               	goto	l10184
  6056  0BD2  0821               	movf	(_RF_Data^(0+256)+1),w
  6057  0BD3  3A01               	xorlw	1
  6058  0BD4  1D03               	skipz
  6059  0BD5  2BE3               	goto	l10184
  6060                           
  6061                           ;RF_Control_B1.c: 259: product->Data[2] = 0x55;
  6062  0BD6  3055               	movlw	85
  6063  0BD7  0020               	movlb	0	; select bank0
  6064  0BD8  00E4               	movwf	??_getRxData
  6065  0BD9  086E               	movf	_product,w
  6066  0BDA  3E02               	addlw	2
  6067  0BDB  0086               	movwf	6
  6068  0BDC  3002               	movlw	2	; select bank4/5
  6069  0BDD  0087               	movwf	7
  6070  0BDE  0864               	movf	??_getRxData,w
  6071  0BDF  0081               	movwf	1
  6072                           
  6073                           ;RF_Control_B1.c: 260: setTxData();
  6074  0BE0  319E  26DA         	fcall	_setTxData
  6075                           
  6076                           ;RF_Control_B1.c: 264: } else {
  6077  0BE2  0008               	return
  6078  0BE3                     l10184:	
  6079                           
  6080                           ;RF_Control_B1.c: 265: char error = getMain_All_Error_Status(0);
  6081  0BE3  3000               	movlw	0
  6082  0BE4  319E  26AB  318B   	fcall	_getMain_All_Error_Status
  6083  0BE7  0020               	movlb	0	; select bank0
  6084  0BE8  00E4               	movwf	??_getRxData
  6085  0BE9  0864               	movf	??_getRxData,w
  6086  0BEA  00E5               	movwf	getRxData@error
  6087                           
  6088                           ;RF_Control_B1.c: 266: if (error == 0) {
  6089  0BEB  08E5               	movf	getRxData@error,f
  6090  0BEC  1D03               	skipz
  6091  0BED  2C30               	goto	l2244
  6092                           
  6093                           ;RF_Control_B1.c: 267: if (RF1.Learn == 1) {
  6094  0BEE  0021               	movlb	1	; select bank1
  6095  0BEF  1F30               	btfss	_RF1^(0+128),6
  6096  0BF0  2BFC               	goto	l10196
  6097                           
  6098                           ;RF_Control_B1.c: 269: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x64) {
  6099  0BF1  0022               	movlb	2	; select bank2
  6100  0BF2  08A0               	movf	_RF_Data^(0+256),f
  6101  0BF3  1D03               	skipz
  6102  0BF4  0008               	return
  6103  0BF5  0821               	movf	(_RF_Data^(0+256)+1),w
  6104  0BF6  3A64               	xorlw	100
  6105  0BF7  1D03               	skipz
  6106  0BF8  0008               	return
  6107                           
  6108                           ;RF_Control_B1.c: 270: setLog_Code();
  6109  0BF9  3195  2563         	fcall	_setLog_Code
  6110                           
  6111                           ;RF_Control_B1.c: 271: }
  6112                           ;RF_Control_B1.c: 289: } else {
  6113  0BFB  0008               	return
  6114  0BFC                     l10196:	
  6115                           
  6116                           ;RF_Control_B1.c: 290: if (RF_Data[20] == 210 || RF_Data[20] == 0x0a) {
  6117  0BFC  0022               	movlb	2	; select bank2
  6118  0BFD  0834               	movf	(_RF_Data^(0+256)+20),w
  6119  0BFE  3AD2               	xorlw	210
  6120  0BFF  1903               	skipnz
  6121  0C00  2C05               	goto	l10200
  6122  0C01  0834               	movf	(_RF_Data^(0+256)+20),w
  6123  0C02  3A0A               	xorlw	10
  6124  0C03  1D03               	skipz
  6125  0C04  0008               	return
  6126  0C05                     l10200:	
  6127                           
  6128                           ;RF_Control_B1.c: 292: if (RF_Data[0] == 0x00 && RF_Data[1] == 0x02) {
  6129  0C05  08A0               	movf	_RF_Data^(0+256),f
  6130  0C06  1D03               	skipz
  6131  0C07  0008               	return
  6132  0C08  0821               	movf	(_RF_Data^(0+256)+1),w
  6133  0C09  3A02               	xorlw	2
  6134  0C0A  1D03               	skipz
  6135  0C0B  0008               	return
  6136                           
  6137                           ;RF_Control_B1.c: 294: if (RF_Data[12] == product->Data[12] && RF_Data[13] == product->D
      +                          ata[13] && RF_Data[14] == product->Data[14]) {
  6138  0C0C  0020               	movlb	0	; select bank0
  6139  0C0D  086E               	movf	_product,w
  6140  0C0E  3E0C               	addlw	12
  6141  0C0F  0086               	movwf	6
  6142  0C10  3002               	movlw	2	; select bank4/5
  6143  0C11  0087               	movwf	7
  6144  0C12  0022               	movlb	2	; select bank2
  6145  0C13  082C               	movf	(_RF_Data^(0+256)+12),w
  6146  0C14  0601               	xorwf	1,w
  6147  0C15  1D03               	skipz
  6148  0C16  0008               	return
  6149  0C17  0020               	movlb	0	; select bank0
  6150  0C18  086E               	movf	_product,w
  6151  0C19  3E0D               	addlw	13
  6152  0C1A  0086               	movwf	6
  6153  0C1B  3002               	movlw	2	; select bank4/5
  6154  0C1C  0087               	movwf	7
  6155  0C1D  0022               	movlb	2	; select bank2
  6156  0C1E  082D               	movf	(_RF_Data^(0+256)+13),w
  6157  0C1F  0601               	xorwf	1,w
  6158  0C20  1D03               	skipz
  6159  0C21  0008               	return
  6160  0C22  0020               	movlb	0	; select bank0
  6161  0C23  086E               	movf	_product,w
  6162  0C24  3E0E               	addlw	14
  6163  0C25  0086               	movwf	6
  6164  0C26  3002               	movlw	2	; select bank4/5
  6165  0C27  0087               	movwf	7
  6166  0C28  0022               	movlb	2	; select bank2
  6167  0C29  082E               	movf	(_RF_Data^(0+256)+14),w
  6168  0C2A  0601               	xorwf	1,w
  6169  0C2B  1D03               	skipz
  6170  0C2C  0008               	return
  6171                           
  6172                           ;RF_Control_B1.c: 295: setControl_Lights_Table();
  6173  0C2D  3186  265C         	fcall	_setControl_Lights_Table
  6174                           
  6175                           ;RF_Control_B1.c: 296: }
  6176                           ;RF_Control_B1.c: 299: }
  6177                           ;RF_Control_B1.c: 310: }
  6178                           ;RF_Control_B1.c: 311: }
  6179                           ;RF_Control_B1.c: 312: } else {
  6180  0C2F  0008               	return
  6181  0C30                     l2244:	
  6182                           
  6183                           ;RF_Control_B1.c: 313: __nop();
  6184  0C30  0000               	nop
  6185  0C31  0008               	return
  6186  0C32                     __end_of_getRxData:	
  6187                           
  6188                           	psect	text20
  6189  1563                     __ptext20:	
  6190 ;; *************** function _setLog_Code *****************
  6191 ;; Defined at:
  6192 ;;		line 319 in file "../src/RF_Control_B1.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;		None               void
  6199 ;; Registers used:
  6200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6210 ;;Total ram usage:        1 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    5
  6213 ;; This function calls:
  6214 ;;		_setBuz
  6215 ;;		_setMemory_LoopSave
  6216 ;;		_setMemory_Modify
  6217 ;;		_setProductData
  6218 ;; This function is called by:
  6219 ;;		_getRxData
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function _setLog_Code
  6225  1563                     _setLog_Code:	
  6226                           
  6227                           ;RF_Control_B1.c: 320: RF1.Learn = 0;
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _setLog_Code: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6231  1563  0021               	movlb	1	; select bank1
  6232  1564  1330               	bcf	_RF1^(0+128),6
  6233                           
  6234                           ;RF_Control_B1.c: 321: setProductData(12, RF_Data[12]);
  6235  1565  0022               	movlb	2	; select bank2
  6236  1566  082C               	movf	(_RF_Data^(0+256)+12),w
  6237  1567  0020               	movlb	0	; select bank0
  6238  1568  00D9               	movwf	??_setLog_Code
  6239  1569  0859               	movf	??_setLog_Code,w
  6240  156A  00D6               	movwf	setProductData@value
  6241  156B  300C               	movlw	12
  6242  156C  319F  2779  3195   	fcall	_setProductData
  6243                           
  6244                           ;RF_Control_B1.c: 322: setProductData(13, RF_Data[13]);
  6245  156F  0022               	movlb	2	; select bank2
  6246  1570  082D               	movf	(_RF_Data^(0+256)+13),w
  6247  1571  0020               	movlb	0	; select bank0
  6248  1572  00D9               	movwf	??_setLog_Code
  6249  1573  0859               	movf	??_setLog_Code,w
  6250  1574  00D6               	movwf	setProductData@value
  6251  1575  300D               	movlw	13
  6252  1576  319F  2779  3195   	fcall	_setProductData
  6253                           
  6254                           ;RF_Control_B1.c: 323: setProductData(14, RF_Data[14]);
  6255  1579  0022               	movlb	2	; select bank2
  6256  157A  082E               	movf	(_RF_Data^(0+256)+14),w
  6257  157B  0020               	movlb	0	; select bank0
  6258  157C  00D9               	movwf	??_setLog_Code
  6259  157D  0859               	movf	??_setLog_Code,w
  6260  157E  00D6               	movwf	setProductData@value
  6261  157F  300E               	movlw	14
  6262  1580  319F  2779  3195   	fcall	_setProductData
  6263                           
  6264                           ;RF_Control_B1.c: 324: setBuz(1, 100);
  6265  1583  3064               	movlw	100
  6266  1584  0020               	movlb	0	; select bank0
  6267  1585  00A4               	movwf	setBuz@time
  6268  1586  3000               	movlw	0
  6269  1587  00A5               	movwf	setBuz@time+1
  6270  1588  3001               	movlw	1
  6271  1589  3189  2141  3195   	fcall	_setBuz
  6272                           
  6273                           ;RF_Control_B1.c: 325: if (myMain.First == 1) {
  6274  158C  0021               	movlb	1	; select bank1
  6275  158D  1EBF               	btfss	_myMain^(0+128),5
  6276  158E  2D93               	goto	l2257
  6277                           
  6278                           ;RF_Control_B1.c: 326: setMemory_LoopSave(1);
  6279  158F  3001               	movlw	1
  6280  1590  3190  20BA  3195   	fcall	_setMemory_LoopSave
  6281  1593                     l2257:	
  6282                           
  6283                           ;RF_Control_B1.c: 327: }
  6284                           ;RF_Control_B1.c: 328: setMemory_Modify(1);
  6285  1593  3001               	movlw	1
  6286  1594  3190  206A         	fcall	_setMemory_Modify
  6287  1596  0008               	return
  6288  1597                     __end_of_setLog_Code:	
  6289                           
  6290                           	psect	text21
  6291  10BA                     __ptext21:	
  6292 ;; *************** function _setMemory_LoopSave *****************
  6293 ;; Defined at:
  6294 ;;		line 1094 in file "../src/MCU_B1.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  command         1    wreg     unsigned char 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  command         1    3[COMMON] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;		None               void
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;Total ram usage:        2 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    3
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_setLog_Code
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function _setMemory_LoopSave
  6324  10BA                     _setMemory_LoopSave:	
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in _setMemory_LoopSave: [wreg+status,2+status,0]
  6328                           ;setMemory_LoopSave@command stored from wreg
  6329  10BA  00F3               	movwf	setMemory_LoopSave@command
  6330                           
  6331                           ;MCU_B1.c: 1095: Memory.LoopSave = command == 1 ? 1 : 0;
  6332  10BB  0873               	movf	setMemory_LoopSave@command,w
  6333  10BC  3A01               	xorlw	1
  6334  10BD  3000               	movlw	0
  6335  10BE  1903               	skipnz
  6336  10BF  3001               	movlw	1
  6337  10C0  00F2               	movwf	??_setMemory_LoopSave
  6338  10C1  0DF2               	rlf	??_setMemory_LoopSave,f
  6339  10C2  0DF2               	rlf	??_setMemory_LoopSave,f
  6340  10C3  0023               	movlb	3	; select bank3
  6341  10C4  0854               	movf	(_Memory^(0+384)+36),w
  6342  10C5  0672               	xorwf	??_setMemory_LoopSave,w
  6343  10C6  39FB               	andlw	-5
  6344  10C7  0672               	xorwf	??_setMemory_LoopSave,w
  6345  10C8  00D4               	movwf	(_Memory^(0+384)+36)
  6346  10C9  0008               	return
  6347  10CA                     __end_of_setMemory_LoopSave:	
  6348                           
  6349                           	psect	text22
  6350  065C                     __ptext22:	
  6351 ;; *************** function _setControl_Lights_Table *****************
  6352 ;; Defined at:
  6353 ;;		line 332 in file "../src/RF_Control_B1.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;		None
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;		None               void
  6360 ;; Registers used:
  6361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;Total ram usage:        0 bytes
  6372 ;; Hardware stack levels used:    1
  6373 ;; Hardware stack levels required when called:    7
  6374 ;; This function calls:
  6375 ;;		_getDimmerLights_Status
  6376 ;;		_getMain_All_LightsStatus
  6377 ;;		_setCmd_Status
  6378 ;;		_setDimmerLights_SwOff
  6379 ;;		_setDimmerLights_SwOn
  6380 ;;		_setProductData
  6381 ;;		_setRFSW_AdjControl
  6382 ;;		_setRFSW_Control
  6383 ;;		_setRF_AdjControl
  6384 ;;		_setTxData
  6385 ;; This function is called by:
  6386 ;;		_getRxData
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           
  6391                           ;psect for function _setControl_Lights_Table
  6392  065C                     _setControl_Lights_Table:	
  6393                           
  6394                           ;RF_Control_B1.c: 334: switch (RF_Data[15]) {
  6395                           
  6396                           ;incstack = 0
  6397                           ; Regs used in _setControl_Lights_Table: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6398  065C  2EDB               	goto	l9982
  6399  065D                     l9950:	
  6400                           ;RF_Control_B1.c: 336: case 0x00:
  6401                           
  6402                           
  6403                           ;RF_Control_B1.c: 337: if (getMain_All_LightsStatus() == 1) {
  6404  065D  319F  27D3  3186   	fcall	_getMain_All_LightsStatus
  6405  0660  3A01               	xorlw	1
  6406  0661  1D03               	skipz
  6407  0662  2E87               	goto	l9960
  6408                           
  6409                           ;RF_Control_B1.c: 340: if (getDimmerLights_Status(1) == 1) {
  6410  0663  3001               	movlw	1
  6411  0664  319F  27B5  3186   	fcall	_getDimmerLights_Status
  6412  0667  3A01               	xorlw	1
  6413  0668  1D03               	skipz
  6414  0669  2E72               	goto	l2264
  6415                           
  6416                           ;RF_Control_B1.c: 341: setDimmerLights_SwOn(1);
  6417  066A  3001               	movlw	1
  6418  066B  3187  2791  3186   	fcall	_setDimmerLights_SwOn
  6419                           
  6420                           ;RF_Control_B1.c: 342: setDimmerLights_SwOff(1);
  6421  066E  3001               	movlw	1
  6422  066F  3195  25CE  3186   	fcall	_setDimmerLights_SwOff
  6423  0672                     l2264:	
  6424                           
  6425                           ;RF_Control_B1.c: 343: }
  6426                           ;RF_Control_B1.c: 346: if (getDimmerLights_Status(2) == 1) {
  6427  0672  3002               	movlw	2
  6428  0673  319F  27B5  3186   	fcall	_getDimmerLights_Status
  6429  0676  3A01               	xorlw	1
  6430  0677  1D03               	skipz
  6431  0678  2E81               	goto	l9958
  6432                           
  6433                           ;RF_Control_B1.c: 347: setDimmerLights_SwOn(2);
  6434  0679  3002               	movlw	2
  6435  067A  3187  2791  3186   	fcall	_setDimmerLights_SwOn
  6436                           
  6437                           ;RF_Control_B1.c: 348: setDimmerLights_SwOff(2);
  6438  067D  3002               	movlw	2
  6439  067E  3195  25CE  3186   	fcall	_setDimmerLights_SwOff
  6440  0681                     l9958:	
  6441                           
  6442                           ;RF_Control_B1.c: 349: }
  6443                           ;RF_Control_B1.c: 358: setCmd_Status(1, 1);
  6444  0681  01F2               	clrf	setCmd_Status@cmd
  6445  0682  0AF2               	incf	setCmd_Status@cmd,f
  6446  0683  3001               	movlw	1
  6447  0684  3191  2196         	fcall	_setCmd_Status
  6448                           
  6449                           ;RF_Control_B1.c: 359: } else {
  6450  0686  0008               	return
  6451  0687                     l9960:	
  6452                           
  6453                           ;RF_Control_B1.c: 360: setProductData(9, 0);
  6454  0687  0020               	movlb	0	; select bank0
  6455  0688  01D6               	clrf	setProductData@value
  6456  0689  3009               	movlw	9
  6457  068A  319F  2779  3186   	fcall	_setProductData
  6458                           
  6459                           ;RF_Control_B1.c: 361: setProductData(11, 0);
  6460  068D  0020               	movlb	0	; select bank0
  6461  068E  01D6               	clrf	setProductData@value
  6462  068F  300B               	movlw	11
  6463  0690  319F  2779  3186   	fcall	_setProductData
  6464                           
  6465                           ;RF_Control_B1.c: 362: setProductData(15, 0);
  6466  0693  0020               	movlb	0	; select bank0
  6467  0694  01D6               	clrf	setProductData@value
  6468  0695  300F               	movlw	15
  6469  0696  319F  2779  3186   	fcall	_setProductData
  6470                           
  6471                           ;RF_Control_B1.c: 363: setProductData(17, 0);
  6472  0699  0020               	movlb	0	; select bank0
  6473  069A  01D6               	clrf	setProductData@value
  6474  069B  3011               	movlw	17
  6475  069C  319F  2779  3186   	fcall	_setProductData
  6476                           
  6477                           ;RF_Control_B1.c: 364: setTxData();
  6478  069F  319E  26DA         	fcall	_setTxData
  6479                           
  6480                           ;RF_Control_B1.c: 365: }
  6481                           ;RF_Control_B1.c: 366: break;
  6482  06A1  0008               	return
  6483  06A2                     l9964:	
  6484                           ;RF_Control_B1.c: 368: case 0x20:
  6485                           
  6486                           
  6487                           ;RF_Control_B1.c: 369: setProductData(9, 0);
  6488  06A2  0020               	movlb	0	; select bank0
  6489  06A3  01D6               	clrf	setProductData@value
  6490  06A4  3009               	movlw	9
  6491  06A5  319F  2779  3186   	fcall	_setProductData
  6492                           
  6493                           ;RF_Control_B1.c: 370: setProductData(11, 0);
  6494  06A8  0020               	movlb	0	; select bank0
  6495  06A9  01D6               	clrf	setProductData@value
  6496  06AA  300B               	movlw	11
  6497  06AB  319F  2779  3186   	fcall	_setProductData
  6498                           
  6499                           ;RF_Control_B1.c: 371: setProductData(15, product->Data[15]);
  6500  06AE  0020               	movlb	0	; select bank0
  6501  06AF  086E               	movf	_product,w
  6502  06B0  0086               	movwf	6
  6503  06B1  3002               	movlw	2	; select bank4/5
  6504  06B2  0087               	movwf	7
  6505  06B3  3002               	movlw	2	; select bank4/5
  6506  06B4  3F4F               	moviw [15]fsr1
  6507  06B5  00D6               	movwf	setProductData@value
  6508  06B6  300F               	movlw	15
  6509  06B7  319F  2779  3186   	fcall	_setProductData
  6510                           
  6511                           ;RF_Control_B1.c: 372: setProductData(17, 0);
  6512  06BA  0020               	movlb	0	; select bank0
  6513  06BB  01D6               	clrf	setProductData@value
  6514  06BC  3011               	movlw	17
  6515  06BD  319F  2779  3186   	fcall	_setProductData
  6516                           
  6517                           ;RF_Control_B1.c: 373: setTxData();
  6518  06C0  319E  26DA         	fcall	_setTxData
  6519                           
  6520                           ;RF_Control_B1.c: 374: break;
  6521  06C2  0008               	return
  6522  06C3                     l9968:	
  6523                           ;RF_Control_B1.c: 377: case 0x01:
  6524                           
  6525                           
  6526                           ;RF_Control_B1.c: 378: setRFSW_Control(1);
  6527  06C3  3001               	movlw	1
  6528  06C4  3196  26B5         	fcall	_setRFSW_Control
  6529                           
  6530                           ;RF_Control_B1.c: 379: break;
  6531  06C6  0008               	return
  6532  06C7                     l9970:	
  6533                           ;RF_Control_B1.c: 383: case 0x11:
  6534                           
  6535                           
  6536                           ;RF_Control_B1.c: 384: setRFSW_AdjControl(1);
  6537  06C7  3001               	movlw	1
  6538  06C8  318E  26F0         	fcall	_setRFSW_AdjControl
  6539                           
  6540                           ;RF_Control_B1.c: 385: break;
  6541  06CA  0008               	return
  6542  06CB                     l9972:	
  6543                           ;RF_Control_B1.c: 387: case 0xd1:
  6544                           
  6545                           
  6546                           ;RF_Control_B1.c: 388: setRF_AdjControl(1);
  6547  06CB  3001               	movlw	1
  6548  06CC  3196  2606         	fcall	_setRF_AdjControl
  6549                           
  6550                           ;RF_Control_B1.c: 389: break;
  6551  06CE  0008               	return
  6552  06CF                     l9974:	
  6553                           ;RF_Control_B1.c: 394: case 0x02:
  6554                           
  6555                           
  6556                           ;RF_Control_B1.c: 395: setRFSW_Control(2);
  6557  06CF  3002               	movlw	2
  6558  06D0  3196  26B5         	fcall	_setRFSW_Control
  6559                           
  6560                           ;RF_Control_B1.c: 396: break;
  6561  06D2  0008               	return
  6562  06D3                     l9976:	
  6563                           ;RF_Control_B1.c: 399: case 0x21:
  6564                           
  6565                           
  6566                           ;RF_Control_B1.c: 400: setRFSW_AdjControl(2);
  6567  06D3  3002               	movlw	2
  6568  06D4  318E  26F0         	fcall	_setRFSW_AdjControl
  6569                           
  6570                           ;RF_Control_B1.c: 401: break;
  6571  06D6  0008               	return
  6572  06D7                     l9978:	
  6573                           ;RF_Control_B1.c: 403: case 0xd2:
  6574                           
  6575                           
  6576                           ;RF_Control_B1.c: 404: setRF_AdjControl(2);
  6577  06D7  3002               	movlw	2
  6578  06D8  3196  2606         	fcall	_setRF_AdjControl
  6579                           
  6580                           ;RF_Control_B1.c: 422: }
  6581                           
  6582                           ;RF_Control_B1.c: 405: break;
  6583  06DA  0008               	return
  6584  06DB                     l9982:	
  6585  06DB  0022               	movlb	2	; select bank2
  6586  06DC  082F               	movf	(_RF_Data^(0+256)+15),w
  6587                           
  6588                           ; Switch size 1, requested type "space"
  6589                           ; Number of cases is 8, Range of values is 0 to 210
  6590                           ; switch strategies available:
  6591                           ; Name         Instructions Cycles
  6592                           ; simple_byte           25    13 (average)
  6593                           ; jumptable            260     6 (fixed)
  6594                           ;	Chosen strategy is simple_byte
  6595  06DD  3A00               	xorlw	0	; case 0
  6596  06DE  1903               	skipnz
  6597  06DF  2E5D               	goto	l9950
  6598  06E0  3A01               	xorlw	1	; case 1
  6599  06E1  1903               	skipnz
  6600  06E2  2EC3               	goto	l9968
  6601  06E3  3A03               	xorlw	3	; case 2
  6602  06E4  1903               	skipnz
  6603  06E5  2ECF               	goto	l9974
  6604  06E6  3A13               	xorlw	19	; case 17
  6605  06E7  1903               	skipnz
  6606  06E8  2EC7               	goto	l9970
  6607  06E9  3A31               	xorlw	49	; case 32
  6608  06EA  1903               	skipnz
  6609  06EB  2EA2               	goto	l9964
  6610  06EC  3A01               	xorlw	1	; case 33
  6611  06ED  1903               	skipnz
  6612  06EE  2ED3               	goto	l9976
  6613  06EF  3AF0               	xorlw	240	; case 209
  6614  06F0  1903               	skipnz
  6615  06F1  2ECB               	goto	l9972
  6616  06F2  3A03               	xorlw	3	; case 210
  6617  06F3  1903               	skipnz
  6618  06F4  2ED7               	goto	l9978
  6619  06F5  2EF6               	goto	l2275
  6620  06F6                     l2275:	
  6621  06F6  0008               	return
  6622  06F7                     __end_of_setControl_Lights_Table:	
  6623                           
  6624                           	psect	text23
  6625  1606                     __ptext23:	
  6626 ;; *************** function _setRF_AdjControl *****************
  6627 ;; Defined at:
  6628 ;;		line 501 in file "../src/RF_Control_B1.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  sw              1    wreg     unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  sw              1    2[BANK0 ] unsigned char 
  6633 ;;  dimmingStatu    1    1[BANK0 ] unsigned char 
  6634 ;;  status          1    0[BANK0 ] unsigned char 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;		None               void
  6637 ;; Registers used:
  6638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;Total ram usage:        4 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    5
  6651 ;; This function calls:
  6652 ;;		_DimmerLights_SelectPointer
  6653 ;;		_getDimmerIntr_Dimming_Sw
  6654 ;;		_getDimmerLights_Status
  6655 ;; This function is called by:
  6656 ;;		_setControl_Lights_Table
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           
  6661                           ;psect for function _setRF_AdjControl
  6662  1606                     _setRF_AdjControl:	
  6663                           
  6664                           ;incstack = 0
  6665                           ; Regs used in _setRF_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6666                           ;setRF_AdjControl@sw stored from wreg
  6667  1606  0020               	movlb	0	; select bank0
  6668  1607  00A2               	movwf	setRF_AdjControl@sw
  6669                           
  6670                           ;RF_Control_B1.c: 502: char status = 0;
  6671  1608  01A0               	clrf	setRF_AdjControl@status
  6672                           
  6673                           ;RF_Control_B1.c: 504: status = getDimmerLights_Status(sw);
  6674  1609  0822               	movf	setRF_AdjControl@sw,w
  6675  160A  319F  27B5  3196   	fcall	_getDimmerLights_Status
  6676  160D  00F6               	movwf	??_setRF_AdjControl
  6677  160E  0876               	movf	??_setRF_AdjControl,w
  6678  160F  0020               	movlb	0	; select bank0
  6679  1610  00A0               	movwf	setRF_AdjControl@status
  6680                           
  6681                           ;RF_Control_B1.c: 505: char dimmingStatus = 0;
  6682  1611  01A1               	clrf	setRF_AdjControl@dimmingStatus
  6683                           
  6684                           ;RF_Control_B1.c: 506: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
  6685  1612  0822               	movf	setRF_AdjControl@sw,w
  6686  1613  3192  2214  3196   	fcall	_getDimmerIntr_Dimming_Sw
  6687  1616  00F6               	movwf	??_setRF_AdjControl
  6688  1617  0876               	movf	??_setRF_AdjControl,w
  6689  1618  0020               	movlb	0	; select bank0
  6690  1619  00A1               	movwf	setRF_AdjControl@dimmingStatus
  6691                           
  6692                           ;RF_Control_B1.c: 508: if (status == 1) {
  6693  161A  0820               	movf	setRF_AdjControl@status,w
  6694  161B  3A01               	xorlw	1
  6695  161C  1D03               	skipz
  6696  161D  0008               	return
  6697                           
  6698                           ;RF_Control_B1.c: 509: if (dimmingStatus == 0) {
  6699  161E  08A1               	movf	setRF_AdjControl@dimmingStatus,f
  6700  161F  1D03               	skipz
  6701  1620  2E30               	goto	l9786
  6702                           
  6703                           ;RF_Control_B1.c: 510: DimmerLights_SelectPointer(sw);
  6704  1621  0822               	movf	setRF_AdjControl@sw,w
  6705  1622  3191  2181         	fcall	_DimmerLights_SelectPointer
  6706                           
  6707                           ;RF_Control_B1.c: 511: DimmerLights->DimmingTrigger = 1;
  6708  1624  0020               	movlb	0	; select bank0
  6709  1625  086A               	movf	_DimmerLights,w
  6710  1626  0086               	movwf	6
  6711  1627  3001               	movlw	1	; select bank2/3
  6712  1628  0087               	movwf	7
  6713  1629  1601               	bsf	1,4
  6714                           
  6715                           ;RF_Control_B1.c: 512: DimmerLights->DimmingSwitch = 1;
  6716  162A  086A               	movf	_DimmerLights,w
  6717  162B  0086               	movwf	6
  6718  162C  3001               	movlw	1	; select bank2/3
  6719  162D  0087               	movwf	7
  6720  162E  1681               	bsf	1,5
  6721                           
  6722                           ;RF_Control_B1.c: 514: } else {
  6723  162F  0008               	return
  6724  1630                     l9786:	
  6725                           
  6726                           ;RF_Control_B1.c: 515: DimmerLights_SelectPointer(sw);
  6727  1630  0822               	movf	setRF_AdjControl@sw,w
  6728  1631  3191  2181         	fcall	_DimmerLights_SelectPointer
  6729                           
  6730                           ;RF_Control_B1.c: 516: DimmerLights->DimmingTrigger = 1;
  6731  1633  0020               	movlb	0	; select bank0
  6732  1634  086A               	movf	_DimmerLights,w
  6733  1635  0086               	movwf	6
  6734  1636  3001               	movlw	1	; select bank2/3
  6735  1637  0087               	movwf	7
  6736  1638  1601               	bsf	1,4
  6737                           
  6738                           ;RF_Control_B1.c: 517: DimmerLights->DimmingSwitch = 0;
  6739  1639  086A               	movf	_DimmerLights,w
  6740  163A  0086               	movwf	6
  6741  163B  3001               	movlw	1	; select bank2/3
  6742  163C  0087               	movwf	7
  6743  163D  1281               	bcf	1,5
  6744  163E  0008               	return
  6745  163F                     __end_of_setRF_AdjControl:	
  6746                           
  6747                           	psect	text24
  6748  16B5                     __ptext24:	
  6749 ;; *************** function _setRFSW_Control *****************
  6750 ;; Defined at:
  6751 ;;		line 430 in file "../src/RF_Control_B1.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;  sw              1    wreg     unsigned char 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  sw              1   67[BANK0 ] unsigned char 
  6756 ;;  status          1   66[BANK0 ] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;		None               void
  6759 ;; Registers used:
  6760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;Total ram usage:        3 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    6
  6773 ;; This function calls:
  6774 ;;		_getDimmerLights_Status
  6775 ;;		_setBuz
  6776 ;;		_setDelayOff_GO
  6777 ;;		_setDimmerLights_SwOff
  6778 ;;		_setDimmerLights_SwOn
  6779 ;;		_setRF_DimmerLights
  6780 ;;		_setTxData
  6781 ;; This function is called by:
  6782 ;;		_setControl_Lights_Table
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function _setRFSW_Control
  6788  16B5                     _setRFSW_Control:	
  6789                           
  6790                           ;incstack = 0
  6791                           ; Regs used in _setRFSW_Control: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6792                           ;setRFSW_Control@sw stored from wreg
  6793  16B5  0020               	movlb	0	; select bank0
  6794  16B6  00E3               	movwf	setRFSW_Control@sw
  6795                           
  6796                           ;RF_Control_B1.c: 431: char status = 0;
  6797  16B7  01E2               	clrf	setRFSW_Control@status
  6798                           
  6799                           ;RF_Control_B1.c: 433: if (RF_Data[16] == 0x80) {
  6800  16B8  0022               	movlb	2	; select bank2
  6801  16B9  0830               	movf	(_RF_Data^(0+256)+16),w
  6802  16BA  3A80               	xorlw	128
  6803  16BB  1D03               	skipz
  6804  16BC  2EE8               	goto	l9736
  6805                           
  6806                           ;RF_Control_B1.c: 434: setDelayOff_GO(sw, 1, RF_Data[17]);
  6807  16BD  0020               	movlb	0	; select bank0
  6808  16BE  01D9               	clrf	setDelayOff_GO@command
  6809  16BF  0AD9               	incf	setDelayOff_GO@command,f
  6810  16C0  0022               	movlb	2	; select bank2
  6811  16C1  0831               	movf	(_RF_Data^(0+256)+17),w
  6812  16C2  0020               	movlb	0	; select bank0
  6813  16C3  00E1               	movwf	??_setRFSW_Control
  6814  16C4  0861               	movf	??_setRFSW_Control,w
  6815  16C5  00DA               	movwf	setDelayOff_GO@value
  6816  16C6  0863               	movf	setRFSW_Control@sw,w
  6817  16C7  318D  25E5  3196   	fcall	_setDelayOff_GO
  6818                           
  6819                           ;RF_Control_B1.c: 435: if (getDimmerLights_Status(sw) == 1) {
  6820  16CA  0020               	movlb	0	; select bank0
  6821  16CB  0863               	movf	setRFSW_Control@sw,w
  6822  16CC  319F  27B5  3196   	fcall	_getDimmerLights_Status
  6823  16CF  3A01               	xorlw	1
  6824  16D0  1D03               	skipz
  6825  16D1  2EE8               	goto	l9736
  6826                           
  6827                           ;RF_Control_B1.c: 436: setBuz(1, 100);
  6828  16D2  3064               	movlw	100
  6829  16D3  0020               	movlb	0	; select bank0
  6830  16D4  00A4               	movwf	setBuz@time
  6831  16D5  3000               	movlw	0
  6832  16D6  00A5               	movwf	setBuz@time+1
  6833  16D7  3001               	movlw	1
  6834  16D8  3189  2141  3196   	fcall	_setBuz
  6835                           
  6836                           ;RF_Control_B1.c: 437: setRF_DimmerLights(sw, 1);
  6837  16DB  0020               	movlb	0	; select bank0
  6838  16DC  01D9               	clrf	setRF_DimmerLights@on
  6839  16DD  0AD9               	incf	setRF_DimmerLights@on,f
  6840  16DE  0863               	movf	setRFSW_Control@sw,w
  6841  16DF  318C  2432  3196   	fcall	_setRF_DimmerLights
  6842                           
  6843                           ;RF_Control_B1.c: 438: setTxData();
  6844  16E2  319E  26DA  3196   	fcall	_setTxData
  6845                           
  6846                           ;RF_Control_B1.c: 439: status = 1;
  6847  16E5  0020               	movlb	0	; select bank0
  6848  16E6  01E2               	clrf	setRFSW_Control@status
  6849  16E7  0AE2               	incf	setRFSW_Control@status,f
  6850  16E8                     l9736:	
  6851                           
  6852                           ;RF_Control_B1.c: 440: }
  6853                           ;RF_Control_B1.c: 441: }
  6854                           ;RF_Control_B1.c: 443: if (status == 0) {
  6855  16E8  0020               	movlb	0	; select bank0
  6856  16E9  08E2               	movf	setRFSW_Control@status,f
  6857  16EA  1D03               	skipz
  6858  16EB  0008               	return
  6859                           
  6860                           ;RF_Control_B1.c: 445: setDimmerLights_SwOn(sw);
  6861  16EC  0863               	movf	setRFSW_Control@sw,w
  6862  16ED  3187  2791  3196   	fcall	_setDimmerLights_SwOn
  6863                           
  6864                           ;RF_Control_B1.c: 446: setDimmerLights_SwOff(sw);
  6865  16F0  0020               	movlb	0	; select bank0
  6866  16F1  0863               	movf	setRFSW_Control@sw,w
  6867  16F2  3195  25CE         	fcall	_setDimmerLights_SwOff
  6868  16F4  0008               	return
  6869  16F5                     __end_of_setRFSW_Control:	
  6870                           
  6871                           	psect	text25
  6872  0EF0                     __ptext25:	
  6873 ;; *************** function _setRFSW_AdjControl *****************
  6874 ;; Defined at:
  6875 ;;		line 453 in file "../src/RF_Control_B1.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  sw              1    wreg     unsigned char 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;  sw              1   62[BANK0 ] unsigned char 
  6880 ;;  status          1   61[BANK0 ] unsigned char 
  6881 ;; Return value:  Size  Location     Type
  6882 ;;		None               void
  6883 ;; Registers used:
  6884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;Total ram usage:        4 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    6
  6897 ;; This function calls:
  6898 ;;		_getDimmerLights_PercentToValue
  6899 ;;		_getDimmerLights_Status
  6900 ;;		_setBuz
  6901 ;;		_setDimmerIntr_Dimming_RF
  6902 ;;		_setDimmerIntr_MaxmumValue
  6903 ;;		_setDimmerLights_DimmingRun
  6904 ;;		_setDimmerLights_SwOff
  6905 ;;		_setDimmerLights_SwOn
  6906 ;;		_setMemory_Modify
  6907 ;;		_setProductData
  6908 ;;		_setTxData
  6909 ;; This function is called by:
  6910 ;;		_setControl_Lights_Table
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           
  6915                           ;psect for function _setRFSW_AdjControl
  6916  0EF0                     _setRFSW_AdjControl:	
  6917                           
  6918                           ;incstack = 0
  6919                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6920                           ;setRFSW_AdjControl@sw stored from wreg
  6921  0EF0  0020               	movlb	0	; select bank0
  6922  0EF1  00DE               	movwf	setRFSW_AdjControl@sw
  6923                           
  6924                           ;RF_Control_B1.c: 454: char status = 0;
  6925  0EF2  01DD               	clrf	setRFSW_AdjControl@status
  6926                           
  6927                           ;RF_Control_B1.c: 456: status = getDimmerLights_Status(sw);
  6928  0EF3  085E               	movf	setRFSW_AdjControl@sw,w
  6929  0EF4  319F  27B5  318E   	fcall	_getDimmerLights_Status
  6930  0EF7  0020               	movlb	0	; select bank0
  6931  0EF8  00DB               	movwf	??_setRFSW_AdjControl
  6932  0EF9  085B               	movf	??_setRFSW_AdjControl,w
  6933  0EFA  00DD               	movwf	setRFSW_AdjControl@status
  6934                           
  6935                           ;RF_Control_B1.c: 458: if (RF_Data[9] > 0x64) {
  6936  0EFB  3065               	movlw	101
  6937  0EFC  0022               	movlb	2	; select bank2
  6938  0EFD  0229               	subwf	(_RF_Data^(0+256)+9),w
  6939  0EFE  1C03               	skipc
  6940  0EFF  2F07               	goto	l9748
  6941                           
  6942                           ;RF_Control_B1.c: 459: RF_Data[9] = 0x64;
  6943  0F00  3064               	movlw	100
  6944  0F01  0020               	movlb	0	; select bank0
  6945  0F02  00DB               	movwf	??_setRFSW_AdjControl
  6946  0F03  085B               	movf	??_setRFSW_AdjControl,w
  6947  0F04  0022               	movlb	2	; select bank2
  6948  0F05  00A9               	movwf	(_RF_Data^(0+256)+9)
  6949                           
  6950                           ;RF_Control_B1.c: 460: } else if (RF_Data[9] < 0x01) {
  6951  0F06  2F0C               	goto	l9752
  6952  0F07                     l9748:	
  6953  0F07  08A9               	movf	(_RF_Data^(0+256)+9),f
  6954  0F08  1D03               	skipz
  6955  0F09  2F0C               	goto	l9752
  6956                           
  6957                           ;RF_Control_B1.c: 461: RF_Data[9] = 0x01;
  6958  0F0A  01A9               	clrf	(_RF_Data^(0+256)+9)
  6959  0F0B  0AA9               	incf	(_RF_Data^(0+256)+9),f
  6960  0F0C                     l9752:	
  6961                           
  6962                           ;RF_Control_B1.c: 462: }
  6963                           ;RF_Control_B1.c: 463: setProductData(9, RF_Data[9]);
  6964  0F0C  0829               	movf	(_RF_Data^(0+256)+9),w
  6965  0F0D  0020               	movlb	0	; select bank0
  6966  0F0E  00DB               	movwf	??_setRFSW_AdjControl
  6967  0F0F  085B               	movf	??_setRFSW_AdjControl,w
  6968  0F10  00D6               	movwf	setProductData@value
  6969  0F11  3009               	movlw	9
  6970  0F12  319F  2779  318E   	fcall	_setProductData
  6971                           
  6972                           ;RF_Control_B1.c: 464: setProductData(11, sw);
  6973  0F15  0020               	movlb	0	; select bank0
  6974  0F16  085E               	movf	setRFSW_AdjControl@sw,w
  6975  0F17  00DB               	movwf	??_setRFSW_AdjControl
  6976  0F18  085B               	movf	??_setRFSW_AdjControl,w
  6977  0F19  00D6               	movwf	setProductData@value
  6978  0F1A  300B               	movlw	11
  6979  0F1B  319F  2779  318E   	fcall	_setProductData
  6980                           
  6981                           ;RF_Control_B1.c: 465: setProductData(17, product->Data[26 + sw]);
  6982  0F1E  0020               	movlb	0	; select bank0
  6983  0F1F  085E               	movf	setRFSW_AdjControl@sw,w
  6984  0F20  3E1A               	addlw	26
  6985  0F21  076E               	addwf	_product,w
  6986  0F22  00DB               	movwf	??_setRFSW_AdjControl
  6987  0F23  085B               	movf	??_setRFSW_AdjControl,w
  6988  0F24  0086               	movwf	6
  6989  0F25  3002               	movlw	2	; select bank4/5
  6990  0F26  0087               	movwf	7
  6991  0F27  0801               	movf	1,w
  6992  0F28  00DC               	movwf	??_setRFSW_AdjControl+1
  6993  0F29  085C               	movf	??_setRFSW_AdjControl+1,w
  6994  0F2A  00D6               	movwf	setProductData@value
  6995  0F2B  3011               	movlw	17
  6996  0F2C  319F  2779  318E   	fcall	_setProductData
  6997                           
  6998                           ;RF_Control_B1.c: 466: setProductData((20 + sw), RF_Data[9]);
  6999  0F2F  0022               	movlb	2	; select bank2
  7000  0F30  0829               	movf	(_RF_Data^(0+256)+9),w
  7001  0F31  0020               	movlb	0	; select bank0
  7002  0F32  00DB               	movwf	??_setRFSW_AdjControl
  7003  0F33  085B               	movf	??_setRFSW_AdjControl,w
  7004  0F34  00D6               	movwf	setProductData@value
  7005  0F35  085E               	movf	setRFSW_AdjControl@sw,w
  7006  0F36  3E14               	addlw	20
  7007  0F37  319F  2779  318E   	fcall	_setProductData
  7008                           
  7009                           ;RF_Control_B1.c: 474: setMemory_Modify(1);
  7010  0F3A  3001               	movlw	1
  7011  0F3B  3190  206A  318E   	fcall	_setMemory_Modify
  7012                           
  7013                           ;RF_Control_B1.c: 478: if (status == 1) {
  7014  0F3E  0020               	movlb	0	; select bank0
  7015  0F3F  085D               	movf	setRFSW_AdjControl@status,w
  7016  0F40  3A01               	xorlw	1
  7017  0F41  1D03               	skipz
  7018  0F42  2F63               	goto	l9764
  7019                           
  7020                           ;RF_Control_B1.c: 480: setDimmerIntr_MaxmumValue(sw, getDimmerLights_PercentToValue(RF_D
      +                          ata[9]));
  7021  0F43  0022               	movlb	2	; select bank2
  7022  0F44  0829               	movf	(_RF_Data^(0+256)+9),w
  7023  0F45  3189  21E8  318E   	fcall	_getDimmerLights_PercentToValue
  7024  0F48  0020               	movlb	0	; select bank0
  7025  0F49  00DB               	movwf	??_setRFSW_AdjControl
  7026  0F4A  085B               	movf	??_setRFSW_AdjControl,w
  7027  0F4B  00D8               	movwf	setDimmerIntr_MaxmumValue@value
  7028  0F4C  085E               	movf	setRFSW_AdjControl@sw,w
  7029  0F4D  3192  222A  318E   	fcall	_setDimmerIntr_MaxmumValue
  7030                           
  7031                           ;RF_Control_B1.c: 481: setDimmerIntr_Dimming_RF(sw, 1);
  7032  0F50  01F2               	clrf	setDimmerIntr_Dimming_RF@command
  7033  0F51  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
  7034  0F52  0020               	movlb	0	; select bank0
  7035  0F53  085E               	movf	setRFSW_AdjControl@sw,w
  7036  0F54  3194  24E6  318E   	fcall	_setDimmerIntr_Dimming_RF
  7037                           
  7038                           ;RF_Control_B1.c: 483: setTxData();
  7039  0F57  319E  26DA  318E   	fcall	_setTxData
  7040                           
  7041                           ;RF_Control_B1.c: 485: setBuz(1, 100);
  7042  0F5A  3064               	movlw	100
  7043  0F5B  0020               	movlb	0	; select bank0
  7044  0F5C  00A4               	movwf	setBuz@time
  7045  0F5D  3000               	movlw	0
  7046  0F5E  00A5               	movwf	setBuz@time+1
  7047  0F5F  3001               	movlw	1
  7048  0F60  3189  2141         	fcall	_setBuz
  7049                           
  7050                           ;RF_Control_B1.c: 486: } else if (status == 0) {
  7051  0F62  0008               	return
  7052  0F63                     l9764:	
  7053  0F63  0020               	movlb	0	; select bank0
  7054  0F64  08DD               	movf	setRFSW_AdjControl@status,f
  7055  0F65  1D03               	skipz
  7056  0F66  0008               	return
  7057                           
  7058                           ;RF_Control_B1.c: 490: setDimmerLights_DimmingRun(sw, 1);
  7059  0F67  01F4               	clrf	setDimmerLights_DimmingRun@command
  7060  0F68  0AF4               	incf	setDimmerLights_DimmingRun@command,f
  7061  0F69  085E               	movf	setRFSW_AdjControl@sw,w
  7062  0F6A  3192  226F  318E   	fcall	_setDimmerLights_DimmingRun
  7063                           
  7064                           ;RF_Control_B1.c: 491: setDimmerLights_SwOn(sw);
  7065  0F6D  0020               	movlb	0	; select bank0
  7066  0F6E  085E               	movf	setRFSW_AdjControl@sw,w
  7067  0F6F  3187  2791  318E   	fcall	_setDimmerLights_SwOn
  7068                           
  7069                           ;RF_Control_B1.c: 492: setDimmerLights_SwOff(sw);
  7070  0F72  0020               	movlb	0	; select bank0
  7071  0F73  085E               	movf	setRFSW_AdjControl@sw,w
  7072  0F74  3195  25CE         	fcall	_setDimmerLights_SwOff
  7073  0F76  0008               	return
  7074  0F77                     __end_of_setRFSW_AdjControl:	
  7075                           
  7076                           	psect	text26
  7077  126F                     __ptext26:	
  7078 ;; *************** function _setDimmerLights_DimmingRun *****************
  7079 ;; Defined at:
  7080 ;;		line 1272 in file "../src/Dimmer_B1.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  lights          1    wreg     unsigned char 
  7083 ;;  command         1    4[COMMON] unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  lights          1    6[COMMON] unsigned char 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;Total ram usage:        3 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    4
  7102 ;; This function calls:
  7103 ;;		_DimmerLights_SelectPointer
  7104 ;; This function is called by:
  7105 ;;		_setRFSW_AdjControl
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function _setDimmerLights_DimmingRun
  7111  126F                     _setDimmerLights_DimmingRun:	
  7112                           
  7113                           ;incstack = 0
  7114                           ; Regs used in _setDimmerLights_DimmingRun: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  7115                           ;setDimmerLights_DimmingRun@lights stored from wreg
  7116  126F  00F6               	movwf	setDimmerLights_DimmingRun@lights
  7117                           
  7118                           ;Dimmer_B1.c: 1273: DimmerLights_SelectPointer(lights);
  7119  1270  0876               	movf	setDimmerLights_DimmingRun@lights,w
  7120  1271  3191  2181         	fcall	_DimmerLights_SelectPointer
  7121                           
  7122                           ;Dimmer_B1.c: 1274: DimmerLights->DimmingRun = command == 1 ? 1 : 0;
  7123  1273  0874               	movf	setDimmerLights_DimmingRun@command,w
  7124  1274  3A01               	xorlw	1
  7125  1275  3000               	movlw	0
  7126  1276  1903               	skipnz
  7127  1277  3001               	movlw	1
  7128  1278  00F5               	movwf	??_setDimmerLights_DimmingRun
  7129  1279  0020               	movlb	0	; select bank0
  7130  127A  0A6A               	incf	_DimmerLights,w
  7131  127B  0086               	movwf	6
  7132  127C  3001               	movlw	1	; select bank2/3
  7133  127D  0087               	movwf	7
  7134  127E  0EF5               	swapf	??_setDimmerLights_DimmingRun,f
  7135  127F  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  7136  1280  0DF5               	rlf	??_setDimmerLights_DimmingRun,f
  7137  1281  0801               	movf	1,w
  7138  1282  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  7139  1283  39BF               	andlw	-65
  7140  1284  0675               	xorwf	??_setDimmerLights_DimmingRun,w
  7141  1285  0081               	movwf	1
  7142  1286  0008               	return
  7143  1287                     __end_of_setDimmerLights_DimmingRun:	
  7144                           
  7145                           	psect	text27
  7146  10FC                     __ptext27:	
  7147 ;; *************** function _getRF_KeyStatus *****************
  7148 ;; Defined at:
  7149 ;;		line 167 in file "../src/RF_Control_B1.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  key             1    3[COMMON] unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      unsigned char 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;Total ram usage:        3 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    3
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_setRF_Main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           
  7178                           ;psect for function _getRF_KeyStatus
  7179  10FC                     _getRF_KeyStatus:	
  7180                           
  7181                           ;RF_Control_B1.c: 168: char key = 0;
  7182                           
  7183                           ;incstack = 0
  7184                           ; Regs used in _getRF_KeyStatus: [wreg+status,2]
  7185  10FC  01F3               	clrf	getRF_KeyStatus@key
  7186                           
  7187                           ;RF_Control_B1.c: 177: key = (RA6 == 1 || RA4 == 1 || RA0 == 1 || RB1 == 1) ? 1 : 0;
  7188  10FD  01F4               	clrf	_getRF_KeyStatus$5581
  7189  10FE  0AF4               	incf	_getRF_KeyStatus$5581,f
  7190  10FF  0020               	movlb	0	; select bank0
  7191  1100  1F0C               	btfss	12,6	;volatile
  7192  1101  1A0C               	btfsc	12,4	;volatile
  7193  1102  2907               	goto	l6972
  7194  1103  1C0C               	btfss	12,0	;volatile
  7195  1104  188D               	btfsc	13,1	;volatile
  7196  1105  2907               	goto	l6972
  7197  1106  01F4               	clrf	_getRF_KeyStatus$5581
  7198  1107                     l6972:	
  7199  1107  0874               	movf	_getRF_KeyStatus$5581,w
  7200  1108  00F2               	movwf	??_getRF_KeyStatus
  7201  1109  0872               	movf	??_getRF_KeyStatus,w
  7202  110A  00F3               	movwf	getRF_KeyStatus@key
  7203                           
  7204                           ;RF_Control_B1.c: 184: return key;
  7205  110B  0873               	movf	getRF_KeyStatus@key,w
  7206  110C  0008               	return
  7207  110D                     __end_of_getRF_KeyStatus:	
  7208                           
  7209                           	psect	text28
  7210  10AA                     __ptext28:	
  7211 ;; *************** function _getBuz_GO *****************
  7212 ;; Defined at:
  7213 ;;		line 82 in file "../src/Buzzer_B1.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;		None
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  i               2    6[COMMON] int 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  2    2[COMMON] int 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;Total ram usage:        6 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    3
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_setRF_Main
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function _getBuz_GO
  7243  10AA                     _getBuz_GO:	
  7244                           
  7245                           ;Buzzer_B1.c: 83: int i = Buz1.GO;
  7246                           
  7247                           ;incstack = 0
  7248                           ; Regs used in _getBuz_GO: [wreg+status,2+status,0]
  7249  10AA  0021               	movlb	1	; select bank1
  7250  10AB  0C4C               	rrf	_Buz1^(0+128),w
  7251  10AC  3901               	andlw	1
  7252  10AD  00F4               	movwf	??_getBuz_GO
  7253  10AE  01F5               	clrf	??_getBuz_GO+1
  7254  10AF  0874               	movf	??_getBuz_GO,w
  7255  10B0  00F6               	movwf	getBuz_GO@i
  7256  10B1  0875               	movf	??_getBuz_GO+1,w
  7257  10B2  00F7               	movwf	getBuz_GO@i+1
  7258                           
  7259                           ;Buzzer_B1.c: 84: return i;
  7260  10B3  0877               	movf	getBuz_GO@i+1,w
  7261  10B4  01F3               	clrf	?_getBuz_GO+1
  7262  10B5  07F3               	addwf	?_getBuz_GO+1,f
  7263  10B6  0876               	movf	getBuz_GO@i,w
  7264  10B7  01F2               	clrf	?_getBuz_GO
  7265  10B8  07F2               	addwf	?_getBuz_GO,f
  7266  10B9  0008               	return
  7267  10BA                     __end_of_getBuz_GO:	
  7268                           
  7269                           	psect	text29
  7270  1597                     __ptext29:	
  7271 ;; *************** function ___lwdiv *****************
  7272 ;; Defined at:
  7273 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  divisor         2    2[COMMON] unsigned int 
  7276 ;;  dividend        2    4[COMMON] unsigned int 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  quotient        2    1[BANK0 ] unsigned int 
  7279 ;;  counter         1    0[BANK0 ] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  2    2[COMMON] unsigned int 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;Total ram usage:        8 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    3
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_setRF_Main
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function ___lwdiv
  7305  1597                     ___lwdiv:	
  7306                           
  7307                           ;incstack = 0
  7308                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7309  1597  0020               	movlb	0	; select bank0
  7310  1598  01A1               	clrf	___lwdiv@quotient
  7311  1599  01A2               	clrf	___lwdiv@quotient+1
  7312  159A  0873               	movf	___lwdiv@divisor+1,w
  7313  159B  0472               	iorwf	___lwdiv@divisor,w
  7314  159C  1903               	skipnz
  7315  159D  2DC7               	goto	l10234
  7316  159E  01A0               	clrf	___lwdiv@counter
  7317  159F  0AA0               	incf	___lwdiv@counter,f
  7318  15A0                     l10222:	
  7319  15A0  1BF3               	btfsc	___lwdiv@divisor+1,7
  7320  15A1  2DAC               	goto	l10224
  7321  15A2  3001               	movlw	1
  7322  15A3                     u11615:	
  7323  15A3  35F2               	lslf	___lwdiv@divisor,f
  7324  15A4  0DF3               	rlf	___lwdiv@divisor+1,f
  7325  15A5  0B89               	decfsz	9,f
  7326  15A6  2DA3               	goto	u11615
  7327  15A7  3001               	movlw	1
  7328  15A8  00F6               	movwf	??___lwdiv
  7329  15A9  0876               	movf	??___lwdiv,w
  7330  15AA  07A0               	addwf	___lwdiv@counter,f
  7331  15AB  2DA0               	goto	l10222
  7332  15AC                     l10224:	
  7333  15AC  3001               	movlw	1
  7334  15AD                     u11635:	
  7335  15AD  35A1               	lslf	___lwdiv@quotient,f
  7336  15AE  0DA2               	rlf	___lwdiv@quotient+1,f
  7337  15AF  0B89               	decfsz	9,f
  7338  15B0  2DAD               	goto	u11635
  7339  15B1  0873               	movf	___lwdiv@divisor+1,w
  7340  15B2  0275               	subwf	___lwdiv@dividend+1,w
  7341  15B3  1D03               	skipz
  7342  15B4  2DB7               	goto	u11645
  7343  15B5  0872               	movf	___lwdiv@divisor,w
  7344  15B6  0274               	subwf	___lwdiv@dividend,w
  7345  15B7                     u11645:	
  7346  15B7  1C03               	skipc
  7347  15B8  2DBE               	goto	l10230
  7348  15B9  0872               	movf	___lwdiv@divisor,w
  7349  15BA  02F4               	subwf	___lwdiv@dividend,f
  7350  15BB  0873               	movf	___lwdiv@divisor+1,w
  7351  15BC  3BF5               	subwfb	___lwdiv@dividend+1,f
  7352  15BD  1421               	bsf	___lwdiv@quotient,0
  7353  15BE                     l10230:	
  7354  15BE  3001               	movlw	1
  7355  15BF                     u11655:	
  7356  15BF  36F3               	lsrf	___lwdiv@divisor+1,f
  7357  15C0  0CF2               	rrf	___lwdiv@divisor,f
  7358  15C1  0B89               	decfsz	9,f
  7359  15C2  2DBF               	goto	u11655
  7360  15C3  3001               	movlw	1
  7361  15C4  02A0               	subwf	___lwdiv@counter,f
  7362  15C5  1D03               	btfss	3,2
  7363  15C6  2DAC               	goto	l10224
  7364  15C7                     l10234:	
  7365  15C7  0822               	movf	___lwdiv@quotient+1,w
  7366  15C8  01F3               	clrf	?___lwdiv+1
  7367  15C9  07F3               	addwf	?___lwdiv+1,f
  7368  15CA  0821               	movf	___lwdiv@quotient,w
  7369  15CB  01F2               	clrf	?___lwdiv
  7370  15CC  07F2               	addwf	?___lwdiv,f
  7371  15CD  0008               	return
  7372  15CE                     __end_of___lwdiv:	
  7373                           
  7374                           	psect	text30
  7375  1EFF                     __ptext30:	
  7376 ;; *************** function _RF_RxDisable *****************
  7377 ;; Defined at:
  7378 ;;		line 155 in file "../src/RF_Control_B1.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;		None               void
  7385 ;; Registers used:
  7386 ;;		None
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:        0 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    3
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_setRF_Main
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           
  7407                           ;psect for function _RF_RxDisable
  7408  1EFF                     _RF_RxDisable:	
  7409                           
  7410                           ;RF_Control_B1.c: 156: if (RF1.ReceiveGO == 1 || RF1.RxStatus == 1) {
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in _RF_RxDisable: []
  7414  1EFF  0021               	movlb	1	; select bank1
  7415  1F00  18B0               	btfsc	_RF1^(0+128),1
  7416  1F01  2F04               	goto	l2226
  7417  1F02  1DB0               	btfss	_RF1^(0+128),3
  7418  1F03  0008               	return
  7419  1F04                     l2226:	
  7420                           
  7421                           ;RF_Control_B1.c: 157: RF1.RxStatus = 0;
  7422  1F04  11B0               	bcf	_RF1^(0+128),3
  7423                           
  7424                           ;RF_Control_B1.c: 158: RF1.ReceiveGO = 0;
  7425  1F05  10B0               	bcf	_RF1^(0+128),1
  7426  1F06  0008               	return
  7427  1F07                     __end_of_RF_RxDisable:	
  7428                           
  7429                           	psect	text31
  7430  0C98                     __ptext31:	
  7431 ;; *************** function _CC2500_TxData *****************
  7432 ;; Defined at:
  7433 ;;		line 32 in file "../src/CC2500_B1.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  loop_e          1    7[COMMON] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;		None               void
  7440 ;; Registers used:
  7441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;Total ram usage:        2 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    5
  7454 ;; This function calls:
  7455 ;;		_CC2500_WriteByte
  7456 ;;		_CC2500_WriteCommand
  7457 ;;		_RF_Timeout_Counter
  7458 ;;		_setRF_TimeoutCleared
  7459 ;; This function is called by:
  7460 ;;		_setRF_Main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           
  7465                           ;psect for function _CC2500_TxData
  7466  0C98                     _CC2500_TxData:	
  7467                           
  7468                           ;CC2500_B1.c: 33: unsigned char loop_e;
  7469                           ;CC2500_B1.c: 35: CC2500_WriteCommand(0x36);
  7470                           
  7471                           ;incstack = 0
  7472                           ; Regs used in _CC2500_TxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7473  0C98  3036               	movlw	54
  7474  0C99  3188  2000  318C   	fcall	_CC2500_WriteCommand
  7475                           
  7476                           ;CC2500_B1.c: 36: CC2500_WriteCommand(0x3B);
  7477  0C9C  303B               	movlw	59
  7478  0C9D  3188  2000  318C   	fcall	_CC2500_WriteCommand
  7479                           
  7480                           ;CC2500_B1.c: 38: RC4 = 0;
  7481  0CA0  0020               	movlb	0	; select bank0
  7482  0CA1  120E               	bcf	14,4	;volatile
  7483                           
  7484                           ;CC2500_B1.c: 39: SPI0Buffer = 0x3F + 0x40;
  7485  0CA2  307F               	movlw	127
  7486  0CA3  00F6               	movwf	??_CC2500_TxData
  7487  0CA4  0876               	movf	??_CC2500_TxData,w
  7488  0CA5  00EB               	movwf	_SPI0Buffer
  7489                           
  7490                           ;CC2500_B1.c: 40: while (RC2 == 1 && RF1.Timeout == 0) {
  7491  0CA6  2CAA               	goto	l9992
  7492  0CA7                     l9990:	
  7493                           
  7494                           ;CC2500_B1.c: 41: RF_Timeout_Counter();
  7495  0CA7  3191  21AB  318C   	fcall	_RF_Timeout_Counter
  7496  0CAA                     l9992:	
  7497  0CAA  0020               	movlb	0	; select bank0
  7498  0CAB  1D0E               	btfss	14,2	;volatile
  7499  0CAC  2CB0               	goto	l9996
  7500  0CAD  0021               	movlb	1	; select bank1
  7501  0CAE  1F31               	btfss	(_RF1^(0+128)+1),6
  7502  0CAF  2CA7               	goto	l9990
  7503  0CB0                     l9996:	
  7504                           
  7505                           ;CC2500_B1.c: 42: };
  7506                           ;CC2500_B1.c: 43: setRF_TimeoutCleared();
  7507  0CB0  319E  26B8  318C   	fcall	_setRF_TimeoutCleared
  7508                           
  7509                           ;CC2500_B1.c: 45: CC2500_WriteByte();
  7510  0CB3  3191  2158  318C   	fcall	_CC2500_WriteByte
  7511                           
  7512                           ;CC2500_B1.c: 46: SPI0Buffer = Tx_Length;
  7513  0CB6  0020               	movlb	0	; select bank0
  7514  0CB7  086D               	movf	_Tx_Length,w
  7515  0CB8  00F6               	movwf	??_CC2500_TxData
  7516  0CB9  0876               	movf	??_CC2500_TxData,w
  7517  0CBA  00EB               	movwf	_SPI0Buffer
  7518                           
  7519                           ;CC2500_B1.c: 47: CC2500_WriteByte();
  7520  0CBB  3191  2158  318C   	fcall	_CC2500_WriteByte
  7521                           
  7522                           ;CC2500_B1.c: 48: for (loop_e = 0; loop_e < Tx_Length; loop_e++) {
  7523  0CBE  01F7               	clrf	CC2500_TxData@loop_e
  7524  0CBF                     l10010:	
  7525  0CBF  0020               	movlb	0	; select bank0
  7526  0CC0  086D               	movf	_Tx_Length,w
  7527  0CC1  0277               	subwf	CC2500_TxData@loop_e,w
  7528  0CC2  1803               	btfsc	3,0
  7529  0CC3  2CD6               	goto	l255
  7530                           
  7531                           ;CC2500_B1.c: 49: SPI0Buffer = RF_Data[loop_e];
  7532  0CC4  0877               	movf	CC2500_TxData@loop_e,w
  7533  0CC5  3E20               	addlw	_RF_Data& (0+255)
  7534  0CC6  0086               	movwf	6
  7535  0CC7  3001               	movlw	1	; select bank2/3
  7536  0CC8  0087               	movwf	7
  7537  0CC9  0801               	movf	1,w
  7538  0CCA  00F6               	movwf	??_CC2500_TxData
  7539  0CCB  0876               	movf	??_CC2500_TxData,w
  7540  0CCC  0020               	movlb	0	; select bank0
  7541  0CCD  00EB               	movwf	_SPI0Buffer
  7542                           
  7543                           ;CC2500_B1.c: 50: CC2500_WriteByte();
  7544  0CCE  3191  2158  318C   	fcall	_CC2500_WriteByte
  7545  0CD1  3001               	movlw	1
  7546  0CD2  00F6               	movwf	??_CC2500_TxData
  7547  0CD3  0876               	movf	??_CC2500_TxData,w
  7548  0CD4  07F7               	addwf	CC2500_TxData@loop_e,f
  7549  0CD5  2CBF               	goto	l10010
  7550  0CD6                     l255:	
  7551                           
  7552                           ;CC2500_B1.c: 51: }
  7553                           ;CC2500_B1.c: 52: RC4 = 1;
  7554  0CD6  160E               	bsf	14,4	;volatile
  7555                           
  7556                           ;CC2500_B1.c: 53: CC2500_WriteCommand(0x35);
  7557  0CD7  3035               	movlw	53
  7558  0CD8  3188  2000  318C   	fcall	_CC2500_WriteCommand
  7559                           
  7560                           ;CC2500_B1.c: 54: while (RB0 == 0 && RF1.Timeout == 0) {
  7561  0CDB  2CDF               	goto	l10016
  7562  0CDC                     l10014:	
  7563                           
  7564                           ;CC2500_B1.c: 55: RF_Timeout_Counter();
  7565  0CDC  3191  21AB  318C   	fcall	_RF_Timeout_Counter
  7566  0CDF                     l10016:	
  7567  0CDF  0020               	movlb	0	; select bank0
  7568  0CE0  180D               	btfsc	13,0	;volatile
  7569  0CE1  2CE5               	goto	l10020
  7570  0CE2  0021               	movlb	1	; select bank1
  7571  0CE3  1F31               	btfss	(_RF1^(0+128)+1),6
  7572  0CE4  2CDC               	goto	l10014
  7573  0CE5                     l10020:	
  7574                           
  7575                           ;CC2500_B1.c: 56: };
  7576                           ;CC2500_B1.c: 57: setRF_TimeoutCleared();
  7577  0CE5  319E  26B8  318C   	fcall	_setRF_TimeoutCleared
  7578                           
  7579                           ;CC2500_B1.c: 59: while (RB0 == 1 && RF1.Timeout == 0) {
  7580  0CE8  2CEC               	goto	l10024
  7581  0CE9                     l10022:	
  7582                           
  7583                           ;CC2500_B1.c: 60: RF_Timeout_Counter();
  7584  0CE9  3191  21AB  318C   	fcall	_RF_Timeout_Counter
  7585  0CEC                     l10024:	
  7586  0CEC  0020               	movlb	0	; select bank0
  7587  0CED  1C0D               	btfss	13,0	;volatile
  7588  0CEE  2CF2               	goto	l10028
  7589  0CEF  0021               	movlb	1	; select bank1
  7590  0CF0  1F31               	btfss	(_RF1^(0+128)+1),6
  7591  0CF1  2CE9               	goto	l10022
  7592  0CF2                     l10028:	
  7593                           
  7594                           ;CC2500_B1.c: 61: };
  7595                           ;CC2500_B1.c: 62: setRF_TimeoutCleared();
  7596  0CF2  319E  26B8  318C   	fcall	_setRF_TimeoutCleared
  7597                           
  7598                           ;CC2500_B1.c: 64: CC2500_WriteCommand(0x36);
  7599  0CF5  3036               	movlw	54
  7600  0CF6  3188  2000  318C   	fcall	_CC2500_WriteCommand
  7601                           
  7602                           ;CC2500_B1.c: 65: CC2500_WriteCommand(0x3B);
  7603  0CF9  303B               	movlw	59
  7604  0CFA  3188  2000         	fcall	_CC2500_WriteCommand
  7605                           
  7606                           ;CC2500_B1.c: 67: Transceive_OK = 1;
  7607  0CFC  14F9               	bsf	_Transceive_OK/(0+8),_Transceive_OK& (0+7)
  7608  0CFD  0008               	return
  7609  0CFE                     __end_of_CC2500_TxData:	
  7610                           
  7611                           	psect	text32
  7612  0B04                     __ptext32:	
  7613 ;; *************** function _CC2500_RxData *****************
  7614 ;; Defined at:
  7615 ;;		line 73 in file "../src/CC2500_B1.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  loop_f          1    7[COMMON] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;		None               void
  7622 ;; Registers used:
  7623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:        2 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    5
  7636 ;; This function calls:
  7637 ;;		_CC2500_ReadByte
  7638 ;;		_CC2500_ReadStatus
  7639 ;;		_CC2500_WriteByte
  7640 ;;		_CC2500_WriteCommand
  7641 ;;		_RF_Timeout_Counter
  7642 ;;		_setRF_TimeoutCleared
  7643 ;; This function is called by:
  7644 ;;		_setRF_Main
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           
  7649                           ;psect for function _CC2500_RxData
  7650  0B04                     _CC2500_RxData:	
  7651                           
  7652                           ;CC2500_B1.c: 74: unsigned char loop_f;
  7653                           ;CC2500_B1.c: 78: if (RB0 == 0) {
  7654                           
  7655                           ;incstack = 0
  7656                           ; Regs used in _CC2500_RxData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7657  0B04  0020               	movlb	0	; select bank0
  7658  0B05  180D               	btfsc	13,0	;volatile
  7659  0B06  0008               	return
  7660                           
  7661                           ;CC2500_B1.c: 87: CC2500_ReadStatus(0x3B);
  7662  0B07  303B               	movlw	59
  7663  0B08  3194  2405  318B   	fcall	_CC2500_ReadStatus
  7664                           
  7665                           ;CC2500_B1.c: 89: if (s_data != 0) {
  7666  0B0B  0021               	movlb	1	; select bank1
  7667  0B0C  0867               	movf	_s_data^(0+128),w
  7668  0B0D  1903               	btfsc	3,2
  7669  0B0E  0008               	return
  7670                           
  7671                           ;CC2500_B1.c: 90: RC4 = 0;
  7672  0B0F  0020               	movlb	0	; select bank0
  7673  0B10  120E               	bcf	14,4	;volatile
  7674                           
  7675                           ;CC2500_B1.c: 91: SPI0Buffer = 0x3F + 0xC0;
  7676  0B11  30FF               	movlw	255
  7677  0B12  00F6               	movwf	??_CC2500_RxData
  7678  0B13  0876               	movf	??_CC2500_RxData,w
  7679  0B14  00EB               	movwf	_SPI0Buffer
  7680                           
  7681                           ;CC2500_B1.c: 93: while (RC2 == 1 && RF1.Timeout == 0) {
  7682  0B15  2B19               	goto	l10048
  7683  0B16                     l10046:	
  7684                           
  7685                           ;CC2500_B1.c: 94: RF_Timeout_Counter();
  7686  0B16  3191  21AB  318B   	fcall	_RF_Timeout_Counter
  7687  0B19                     l10048:	
  7688  0B19  0020               	movlb	0	; select bank0
  7689  0B1A  1D0E               	btfss	14,2	;volatile
  7690  0B1B  2B1F               	goto	l10052
  7691  0B1C  0021               	movlb	1	; select bank1
  7692  0B1D  1F31               	btfss	(_RF1^(0+128)+1),6
  7693  0B1E  2B16               	goto	l10046
  7694  0B1F                     l10052:	
  7695                           
  7696                           ;CC2500_B1.c: 95: };
  7697                           ;CC2500_B1.c: 96: setRF_TimeoutCleared();
  7698  0B1F  319E  26B8  318B   	fcall	_setRF_TimeoutCleared
  7699                           
  7700                           ;CC2500_B1.c: 98: CC2500_WriteByte();
  7701  0B22  3191  2158  318B   	fcall	_CC2500_WriteByte
  7702                           
  7703                           ;CC2500_B1.c: 99: CC2500_ReadByte();
  7704  0B25  3192  2258  318B   	fcall	_CC2500_ReadByte
  7705                           
  7706                           ;CC2500_B1.c: 100: Rx_Length = SPI0Buffer;
  7707  0B28  0020               	movlb	0	; select bank0
  7708  0B29  086B               	movf	_SPI0Buffer,w
  7709  0B2A  00F6               	movwf	??_CC2500_RxData
  7710  0B2B  0876               	movf	??_CC2500_RxData,w
  7711  0B2C  0021               	movlb	1	; select bank1
  7712  0B2D  00E3               	movwf	_Rx_Length^(0+128)
  7713                           
  7714                           ;CC2500_B1.c: 101: for (loop_f = 0; loop_f < Rx_Length; loop_f++) {
  7715  0B2E  01F7               	clrf	CC2500_RxData@loop_f
  7716  0B2F                     l10068:	
  7717  0B2F  0021               	movlb	1	; select bank1
  7718  0B30  0863               	movf	_Rx_Length^(0+128),w
  7719  0B31  0277               	subwf	CC2500_RxData@loop_f,w
  7720  0B32  1803               	btfsc	3,0
  7721  0B33  2B46               	goto	l10070
  7722                           
  7723                           ;CC2500_B1.c: 102: CC2500_ReadByte();
  7724  0B34  3192  2258  318B   	fcall	_CC2500_ReadByte
  7725                           
  7726                           ;CC2500_B1.c: 103: RF_Data[loop_f] = SPI0Buffer;
  7727  0B37  0020               	movlb	0	; select bank0
  7728  0B38  086B               	movf	_SPI0Buffer,w
  7729  0B39  00F6               	movwf	??_CC2500_RxData
  7730  0B3A  0877               	movf	CC2500_RxData@loop_f,w
  7731  0B3B  3E20               	addlw	_RF_Data& (0+255)
  7732  0B3C  0086               	movwf	6
  7733  0B3D  3001               	movlw	1	; select bank2/3
  7734  0B3E  0087               	movwf	7
  7735  0B3F  0876               	movf	??_CC2500_RxData,w
  7736  0B40  0081               	movwf	1
  7737  0B41  3001               	movlw	1
  7738  0B42  00F6               	movwf	??_CC2500_RxData
  7739  0B43  0876               	movf	??_CC2500_RxData,w
  7740  0B44  07F7               	addwf	CC2500_RxData@loop_f,f
  7741  0B45  2B2F               	goto	l10068
  7742  0B46                     l10070:	
  7743                           
  7744                           ;CC2500_B1.c: 104: }
  7745                           ;CC2500_B1.c: 105: CC2500_ReadByte();
  7746  0B46  3192  2258  318B   	fcall	_CC2500_ReadByte
  7747                           
  7748                           ;CC2500_B1.c: 106: RSSI = SPI0Buffer;
  7749  0B49  0020               	movlb	0	; select bank0
  7750  0B4A  086B               	movf	_SPI0Buffer,w
  7751  0B4B  00F6               	movwf	??_CC2500_RxData
  7752  0B4C  0876               	movf	??_CC2500_RxData,w
  7753  0B4D  0021               	movlb	1	; select bank1
  7754  0B4E  00E2               	movwf	_RSSI^(0+128)
  7755                           
  7756                           ;CC2500_B1.c: 107: CC2500_ReadByte();
  7757  0B4F  3192  2258  318B   	fcall	_CC2500_ReadByte
  7758                           
  7759                           ;CC2500_B1.c: 108: CRC = SPI0Buffer;
  7760  0B52  0020               	movlb	0	; select bank0
  7761  0B53  086B               	movf	_SPI0Buffer,w
  7762  0B54  00F6               	movwf	??_CC2500_RxData
  7763  0B55  0876               	movf	??_CC2500_RxData,w
  7764  0B56  0021               	movlb	1	; select bank1
  7765  0B57  00DF               	movwf	_CRC^(0+128)
  7766                           
  7767                           ;CC2500_B1.c: 109: RC4 = 1;
  7768  0B58  0020               	movlb	0	; select bank0
  7769  0B59  160E               	bsf	14,4	;volatile
  7770                           
  7771                           ;CC2500_B1.c: 110: if (CRC & 0x80)
  7772  0B5A  0021               	movlb	1	; select bank1
  7773  0B5B  1BDF               	btfsc	_CRC^(0+128),7
  7774                           
  7775                           ;CC2500_B1.c: 111: Receive_OK = 1;
  7776  0B5C  1479               	bsf	_Receive_OK/(0+8),_Receive_OK& (0+7)
  7777                           
  7778                           ;CC2500_B1.c: 113: RF1.RxStatus = 0;
  7779  0B5D  11B0               	bcf	_RF1^(0+128),3
  7780                           
  7781                           ;CC2500_B1.c: 114: RF1.ReceiveGO = 1;
  7782  0B5E  14B0               	bsf	_RF1^(0+128),1
  7783                           
  7784                           ;CC2500_B1.c: 115: CC2500_WriteCommand(0x36);
  7785  0B5F  3036               	movlw	54
  7786  0B60  3188  2000  318B   	fcall	_CC2500_WriteCommand
  7787                           
  7788                           ;CC2500_B1.c: 116: CC2500_WriteCommand(0x3A);
  7789  0B63  303A               	movlw	58
  7790  0B64  3188  2000         	fcall	_CC2500_WriteCommand
  7791  0B66  0021               	movlb	1	; select bank1
  7792  0B67  0008               	return
  7793  0B68                     __end_of_CC2500_RxData:	
  7794                           
  7795                           	psect	text33
  7796  1405                     __ptext33:	
  7797 ;; *************** function _CC2500_ReadStatus *****************
  7798 ;; Defined at:
  7799 ;;		line 308 in file "../src/CC2500_B1.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  status_addr     1    wreg     unsigned char 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  status_addr     1    5[COMMON] unsigned char 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;		None               void
  7806 ;; Registers used:
  7807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;Total ram usage:        2 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    4
  7820 ;; This function calls:
  7821 ;;		_CC2500_ReadByte
  7822 ;;		_CC2500_WriteByte
  7823 ;;		_RF_Timeout_Counter
  7824 ;;		_setRF_TimeoutCleared
  7825 ;; This function is called by:
  7826 ;;		_CC2500_RxData
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           
  7831                           ;psect for function _CC2500_ReadStatus
  7832  1405                     _CC2500_ReadStatus:	
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in _CC2500_ReadStatus: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7836                           ;CC2500_ReadStatus@status_addr stored from wreg
  7837  1405  00F5               	movwf	CC2500_ReadStatus@status_addr
  7838                           
  7839                           ;CC2500_B1.c: 309: RC4 = 0;
  7840  1406  0020               	movlb	0	; select bank0
  7841  1407  120E               	bcf	14,4	;volatile
  7842                           
  7843                           ;CC2500_B1.c: 310: SPI0Buffer = status_addr + 0xC0;
  7844  1408  0875               	movf	CC2500_ReadStatus@status_addr,w
  7845  1409  3EC0               	addlw	192
  7846  140A  00F4               	movwf	??_CC2500_ReadStatus
  7847  140B  0874               	movf	??_CC2500_ReadStatus,w
  7848  140C  00EB               	movwf	_SPI0Buffer
  7849                           
  7850                           ;CC2500_B1.c: 312: while (RC2 == 1 && RF1.Timeout == 0) {
  7851  140D  2C11               	goto	l9798
  7852  140E                     l9796:	
  7853                           
  7854                           ;CC2500_B1.c: 313: RF_Timeout_Counter();
  7855  140E  3191  21AB  3194   	fcall	_RF_Timeout_Counter
  7856  1411                     l9798:	
  7857  1411  0020               	movlb	0	; select bank0
  7858  1412  1D0E               	btfss	14,2	;volatile
  7859  1413  2C17               	goto	l9802
  7860  1414  0021               	movlb	1	; select bank1
  7861  1415  1F31               	btfss	(_RF1^(0+128)+1),6
  7862  1416  2C0E               	goto	l9796
  7863  1417                     l9802:	
  7864                           
  7865                           ;CC2500_B1.c: 314: };
  7866                           ;CC2500_B1.c: 315: setRF_TimeoutCleared();
  7867  1417  319E  26B8  3194   	fcall	_setRF_TimeoutCleared
  7868                           
  7869                           ;CC2500_B1.c: 317: CC2500_WriteByte();
  7870  141A  3191  2158  3194   	fcall	_CC2500_WriteByte
  7871                           
  7872                           ;CC2500_B1.c: 318: CC2500_ReadByte();
  7873  141D  3192  2258         	fcall	_CC2500_ReadByte
  7874                           
  7875                           ;CC2500_B1.c: 319: RC4 = 1;
  7876  141F  0020               	movlb	0	; select bank0
  7877  1420  160E               	bsf	14,4	;volatile
  7878                           
  7879                           ;CC2500_B1.c: 321: s_data = SPI0Buffer;
  7880  1421  086B               	movf	_SPI0Buffer,w
  7881  1422  00F4               	movwf	??_CC2500_ReadStatus
  7882  1423  0874               	movf	??_CC2500_ReadStatus,w
  7883  1424  0021               	movlb	1	; select bank1
  7884  1425  00E7               	movwf	_s_data^(0+128)
  7885  1426  0008               	return
  7886  1427                     __end_of_CC2500_ReadStatus:	
  7887                           
  7888                           	psect	text34
  7889  1258                     __ptext34:	
  7890 ;; *************** function _CC2500_ReadByte *****************
  7891 ;; Defined at:
  7892 ;;		line 242 in file "../src/CC2500_B1.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  loop_b          1    3[COMMON] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;		None               void
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;Total ram usage:        2 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    3
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_CC2500_RxData
  7917 ;;		_CC2500_ReadStatus
  7918 ;;		_CC2500_ReadREG
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           
  7923                           ;psect for function _CC2500_ReadByte
  7924  1258                     _CC2500_ReadByte:	
  7925                           
  7926                           ;CC2500_B1.c: 243: unsigned char loop_b;
  7927                           ;CC2500_B1.c: 244: for (loop_b = 0; loop_b < 8; loop_b++) {
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
  7931  1258  01F3               	clrf	CC2500_ReadByte@loop_b
  7932  1259                     L2:	
  7933  1259  3008               	movlw	8
  7934  125A  0273               	subwf	CC2500_ReadByte@loop_b,w
  7935  125B  1803               	btfsc	3,0
  7936  125C  0008               	return
  7937                           
  7938                           ;CC2500_B1.c: 245: RC1 = 1;
  7939  125D  0020               	movlb	0	; select bank0
  7940  125E  148E               	bsf	14,1	;volatile
  7941                           
  7942                           ;CC2500_B1.c: 246: SPI0Buffer <<= 1;
  7943  125F  1003               	clrc
  7944  1260  0DEB               	rlf	_SPI0Buffer,f
  7945                           
  7946                           ;CC2500_B1.c: 247: if (RC2 == 1)
  7947  1261  1D0E               	btfss	14,2	;volatile
  7948  1262  2A65               	goto	l6232
  7949                           
  7950                           ;CC2500_B1.c: 248: SPI0Buffer |= 0x01;
  7951  1263  146B               	bsf	_SPI0Buffer,0
  7952  1264  2A69               	goto	l6234
  7953  1265                     l6232:	
  7954                           
  7955                           ;CC2500_B1.c: 249: else
  7956                           ;CC2500_B1.c: 250: SPI0Buffer &= 0xFE;
  7957  1265  30FE               	movlw	254
  7958  1266  00F2               	movwf	??_CC2500_ReadByte
  7959  1267  0872               	movf	??_CC2500_ReadByte,w
  7960  1268  05EB               	andwf	_SPI0Buffer,f
  7961  1269                     l6234:	
  7962                           
  7963                           ;CC2500_B1.c: 251: RC1 = 0;
  7964  1269  108E               	bcf	14,1	;volatile
  7965  126A  3001               	movlw	1
  7966  126B  00F2               	movwf	??_CC2500_ReadByte
  7967  126C  0872               	movf	??_CC2500_ReadByte,w
  7968  126D  07F3               	addwf	CC2500_ReadByte@loop_b,f
  7969  126E  2A59               	goto	L2
  7970  126F                     __end_of_CC2500_ReadByte:	
  7971                           
  7972                           	psect	text35
  7973  11C0                     __ptext35:	
  7974 ;; *************** function _CC2500_PowerOnInitial *****************
  7975 ;; Defined at:
  7976 ;;		line 126 in file "../src/CC2500_B1.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;		None
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;		None
  7981 ;; Return value:  Size  Location     Type
  7982 ;;		None               void
  7983 ;; Registers used:
  7984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7994 ;;Total ram usage:        0 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:    6
  7997 ;; This function calls:
  7998 ;;		_CC2500_ClearRXFIFO
  7999 ;;		_CC2500_ClearTXFIFO
  8000 ;;		_CC2500_FrequencyCabr
  8001 ;;		_CC2500_InitPATable
  8002 ;;		_CC2500_InitSetREG
  8003 ;;		_CC2500_PowerRST
  8004 ;;		_CC2500_SIDLEMode
  8005 ;; This function is called by:
  8006 ;;		_main
  8007 ;;		_setRF_Main
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _CC2500_PowerOnInitial
  8013  11C0                     _CC2500_PowerOnInitial:	
  8014                           
  8015                           ;CC2500_B1.c: 127: CC2500_PowerRST();
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in _CC2500_PowerOnInitial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8019  11C0  3197  2779  3191   	fcall	_CC2500_PowerRST
  8020                           
  8021                           ;CC2500_B1.c: 128: CC2500_InitSetREG();
  8022  11C3  3195  2539  3191   	fcall	_CC2500_InitSetREG
  8023                           
  8024                           ;CC2500_B1.c: 129: CC2500_InitPATable();
  8025  11C6  3193  2342  3191   	fcall	_CC2500_InitPATable
  8026                           
  8027                           ;CC2500_B1.c: 130: CC2500_ClearTXFIFO();
  8028  11C9  319E  26C0  3191   	fcall	_CC2500_ClearTXFIFO
  8029                           
  8030                           ;CC2500_B1.c: 131: CC2500_ClearRXFIFO();
  8031  11CC  319E  26BC  3191   	fcall	_CC2500_ClearRXFIFO
  8032                           
  8033                           ;CC2500_B1.c: 132: CC2500_FrequencyCabr();
  8034  11CF  319F  2757  3191   	fcall	_CC2500_FrequencyCabr
  8035                           
  8036                           ;CC2500_B1.c: 133: CC2500_SIDLEMode();
  8037  11D2  3190  2066         	fcall	_CC2500_SIDLEMode
  8038  11D4  0008               	return
  8039  11D5                     __end_of_CC2500_PowerOnInitial:	
  8040                           
  8041                           	psect	text36
  8042  1066                     __ptext36:	
  8043 ;; *************** function _CC2500_SIDLEMode *****************
  8044 ;; Defined at:
  8045 ;;		line 216 in file "../src/CC2500_B1.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;		None               void
  8052 ;; Registers used:
  8053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    5
  8066 ;; This function calls:
  8067 ;;		_CC2500_WriteCommand
  8068 ;; This function is called by:
  8069 ;;		_CC2500_PowerOnInitial
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function _CC2500_SIDLEMode
  8075  1066                     _CC2500_SIDLEMode:	
  8076                           
  8077                           ;CC2500_B1.c: 217: CC2500_WriteCommand(0x36);
  8078                           
  8079                           ;incstack = 0
  8080                           ; Regs used in _CC2500_SIDLEMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8081  1066  3036               	movlw	54
  8082  1067  3188  2000         	fcall	_CC2500_WriteCommand
  8083  1069  0008               	return
  8084  106A                     __end_of_CC2500_SIDLEMode:	
  8085                           
  8086                           	psect	text37
  8087  1779                     __ptext37:	
  8088 ;; *************** function _CC2500_PowerRST *****************
  8089 ;; Defined at:
  8090 ;;		line 139 in file "../src/CC2500_B1.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;		None
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;		None               void
  8097 ;; Registers used:
  8098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8108 ;;Total ram usage:        1 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    4
  8111 ;; This function calls:
  8112 ;;		_CC2500_WriteByte
  8113 ;;		_DelayTime_1us
  8114 ;;		_RF_Timeout_Counter
  8115 ;;		_setRF_TimeoutCleared
  8116 ;; This function is called by:
  8117 ;;		_CC2500_PowerOnInitial
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           
  8122                           ;psect for function _CC2500_PowerRST
  8123  1779                     _CC2500_PowerRST:	
  8124                           
  8125                           ;CC2500_B1.c: 140: RC1 = 0;
  8126                           
  8127                           ;incstack = 0
  8128                           ; Regs used in _CC2500_PowerRST: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8129  1779  0020               	movlb	0	; select bank0
  8130  177A  108E               	bcf	14,1	;volatile
  8131                           
  8132                           ;CC2500_B1.c: 141: RC0 = 0;
  8133  177B  100E               	bcf	14,0	;volatile
  8134                           
  8135                           ;CC2500_B1.c: 142: RC4 = 1;
  8136  177C  160E               	bsf	14,4	;volatile
  8137                           
  8138                           ;CC2500_B1.c: 143: DelayTime_1us(10);
  8139  177D  300A               	movlw	10
  8140  177E  00F2               	movwf	DelayTime_1us@count
  8141  177F  3000               	movlw	0
  8142  1780  00F3               	movwf	DelayTime_1us@count+1
  8143  1781  3194  2471  3197   	fcall	_DelayTime_1us
  8144                           
  8145                           ;CC2500_B1.c: 144: RC4 = 0;
  8146  1784  0020               	movlb	0	; select bank0
  8147  1785  120E               	bcf	14,4	;volatile
  8148                           
  8149                           ;CC2500_B1.c: 145: DelayTime_1us(10);
  8150  1786  300A               	movlw	10
  8151  1787  00F2               	movwf	DelayTime_1us@count
  8152  1788  3000               	movlw	0
  8153  1789  00F3               	movwf	DelayTime_1us@count+1
  8154  178A  3194  2471  3197   	fcall	_DelayTime_1us
  8155                           
  8156                           ;CC2500_B1.c: 146: RC4 = 1;
  8157  178D  0020               	movlb	0	; select bank0
  8158  178E  160E               	bsf	14,4	;volatile
  8159                           
  8160                           ;CC2500_B1.c: 147: DelayTime_1us(40);
  8161  178F  3028               	movlw	40
  8162  1790  00F2               	movwf	DelayTime_1us@count
  8163  1791  3000               	movlw	0
  8164  1792  00F3               	movwf	DelayTime_1us@count+1
  8165  1793  3194  2471  3197   	fcall	_DelayTime_1us
  8166                           
  8167                           ;CC2500_B1.c: 148: RC4 = 0;
  8168  1796  0020               	movlb	0	; select bank0
  8169  1797  120E               	bcf	14,4	;volatile
  8170                           
  8171                           ;CC2500_B1.c: 149: SPI0Buffer = 0x30;
  8172  1798  3030               	movlw	48
  8173  1799  00F8               	movwf	??_CC2500_PowerRST
  8174  179A  0878               	movf	??_CC2500_PowerRST,w
  8175  179B  00EB               	movwf	_SPI0Buffer
  8176                           
  8177                           ;CC2500_B1.c: 150: while (RC2 == 1 && RF1.Timeout == 0) {
  8178  179C  2FA0               	goto	l9826
  8179  179D                     l9824:	
  8180                           
  8181                           ;CC2500_B1.c: 151: RF_Timeout_Counter();
  8182  179D  3191  21AB  3197   	fcall	_RF_Timeout_Counter
  8183  17A0                     l9826:	
  8184  17A0  0020               	movlb	0	; select bank0
  8185  17A1  1D0E               	btfss	14,2	;volatile
  8186  17A2  2FA6               	goto	l9830
  8187  17A3  0021               	movlb	1	; select bank1
  8188  17A4  1F31               	btfss	(_RF1^(0+128)+1),6
  8189  17A5  2F9D               	goto	l9824
  8190  17A6                     l9830:	
  8191                           
  8192                           ;CC2500_B1.c: 152: };
  8193                           ;CC2500_B1.c: 153: setRF_TimeoutCleared();
  8194  17A6  319E  26B8  3197   	fcall	_setRF_TimeoutCleared
  8195                           
  8196                           ;CC2500_B1.c: 154: CC2500_WriteByte();
  8197  17A9  3191  2158  3197   	fcall	_CC2500_WriteByte
  8198                           
  8199                           ;CC2500_B1.c: 155: while (RC2 == 1 && RF1.Timeout == 0) {
  8200  17AC  2FB0               	goto	l9836
  8201  17AD                     l9834:	
  8202                           
  8203                           ;CC2500_B1.c: 156: RF_Timeout_Counter();
  8204  17AD  3191  21AB  3197   	fcall	_RF_Timeout_Counter
  8205  17B0                     l9836:	
  8206  17B0  0020               	movlb	0	; select bank0
  8207  17B1  1D0E               	btfss	14,2	;volatile
  8208  17B2  2FB6               	goto	l9840
  8209  17B3  0021               	movlb	1	; select bank1
  8210  17B4  1F31               	btfss	(_RF1^(0+128)+1),6
  8211  17B5  2FAD               	goto	l9834
  8212  17B6                     l9840:	
  8213                           
  8214                           ;CC2500_B1.c: 157: };
  8215                           ;CC2500_B1.c: 158: setRF_TimeoutCleared();
  8216  17B6  319E  26B8         	fcall	_setRF_TimeoutCleared
  8217                           
  8218                           ;CC2500_B1.c: 159: RC0 = 0;
  8219  17B8  0020               	movlb	0	; select bank0
  8220  17B9  100E               	bcf	14,0	;volatile
  8221                           
  8222                           ;CC2500_B1.c: 160: RC4 = 1;
  8223  17BA  160E               	bsf	14,4	;volatile
  8224  17BB  0008               	return
  8225  17BC                     __end_of_CC2500_PowerRST:	
  8226                           
  8227                           	psect	text38
  8228  1539                     __ptext38:	
  8229 ;; *************** function _CC2500_InitSetREG *****************
  8230 ;; Defined at:
  8231 ;;		line 166 in file "../src/CC2500_B1.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  loop_c          1    2[BANK0 ] unsigned char 
  8236 ;;  temp2           1    1[BANK0 ] unsigned char 
  8237 ;;  temp1           1    0[BANK0 ] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;		None               void
  8240 ;; Registers used:
  8241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;Total ram usage:        4 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    5
  8254 ;; This function calls:
  8255 ;;		_CC2500_WriteREG
  8256 ;; This function is called by:
  8257 ;;		_CC2500_PowerOnInitial
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           
  8262                           ;psect for function _CC2500_InitSetREG
  8263  1539                     _CC2500_InitSetREG:	
  8264                           
  8265                           ;CC2500_B1.c: 167: unsigned char loop_c;
  8266                           ;CC2500_B1.c: 168: unsigned char temp1, temp2;
  8267                           ;CC2500_B1.c: 170: for (loop_c = 0; loop_c < 47; loop_c++) {
  8268                           
  8269                           ;incstack = 0
  8270                           ; Regs used in _CC2500_InitSetREG: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8271  1539  0020               	movlb	0	; select bank0
  8272  153A  01A2               	clrf	CC2500_InitSetREG@loop_c
  8273  153B                     L3:	
  8274  153B  302F               	movlw	47
  8275  153C  0222               	subwf	CC2500_InitSetREG@loop_c,w
  8276  153D  1803               	btfsc	3,0
  8277  153E  0008               	return
  8278                           
  8279                           ;CC2500_B1.c: 171: temp1 = CC2500_registers_address[loop_c];
  8280  153F  0822               	movf	CC2500_InitSetREG@loop_c,w
  8281  1540  3E00               	addlw	low (_CC2500_registers_address| (0+32768))
  8282  1541  0084               	movwf	4
  8283  1542  3090               	movlw	high (_CC2500_registers_address| (0+32768))
  8284  1543  1803               	skipnc
  8285  1544  3E01               	addlw	1
  8286  1545  0085               	movwf	5
  8287  1546  0800               	movf	0,w	;code access
  8288  1547  00F7               	movwf	??_CC2500_InitSetREG
  8289  1548  0877               	movf	??_CC2500_InitSetREG,w
  8290  1549  00A0               	movwf	CC2500_InitSetREG@temp1
  8291                           
  8292                           ;CC2500_B1.c: 172: temp2 = CC2500_rfSettings[loop_c];
  8293  154A  0822               	movf	CC2500_InitSetREG@loop_c,w
  8294  154B  3E2F               	addlw	low (_CC2500_rfSettings| (0+32768))
  8295  154C  0084               	movwf	4
  8296  154D  3090               	movlw	high (_CC2500_rfSettings| (0+32768))
  8297  154E  1803               	skipnc
  8298  154F  3E01               	addlw	1
  8299  1550  0085               	movwf	5
  8300  1551  0800               	movf	0,w	;code access
  8301  1552  00F7               	movwf	??_CC2500_InitSetREG
  8302  1553  0877               	movf	??_CC2500_InitSetREG,w
  8303  1554  00A1               	movwf	CC2500_InitSetREG@temp2
  8304                           
  8305                           ;CC2500_B1.c: 174: CC2500_WriteREG(temp1, temp2);
  8306  1555  0821               	movf	CC2500_InitSetREG@temp2,w
  8307  1556  00F7               	movwf	??_CC2500_InitSetREG
  8308  1557  0877               	movf	??_CC2500_InitSetREG,w
  8309  1558  00F4               	movwf	CC2500_WriteREG@value
  8310  1559  0820               	movf	CC2500_InitSetREG@temp1,w
  8311  155A  3193  23C2  3195   	fcall	_CC2500_WriteREG
  8312  155D  3001               	movlw	1
  8313  155E  00F7               	movwf	??_CC2500_InitSetREG
  8314  155F  0877               	movf	??_CC2500_InitSetREG,w
  8315  1560  0020               	movlb	0	; select bank0
  8316  1561  07A2               	addwf	CC2500_InitSetREG@loop_c,f
  8317  1562  2D3B               	goto	L3
  8318  1563                     __end_of_CC2500_InitSetREG:	
  8319                           
  8320                           	psect	text39
  8321  1342                     __ptext39:	
  8322 ;; *************** function _CC2500_InitPATable *****************
  8323 ;; Defined at:
  8324 ;;		line 181 in file "../src/CC2500_B1.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;		None
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  loop_d          1    1[BANK0 ] unsigned char 
  8329 ;;  temp            1    0[BANK0 ] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;		None               void
  8332 ;; Registers used:
  8333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;Total ram usage:        3 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    5
  8346 ;; This function calls:
  8347 ;;		_CC2500_WriteREG
  8348 ;; This function is called by:
  8349 ;;		_CC2500_PowerOnInitial
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           
  8354                           ;psect for function _CC2500_InitPATable
  8355  1342                     _CC2500_InitPATable:	
  8356                           
  8357                           ;CC2500_B1.c: 182: unsigned char loop_d;
  8358                           ;CC2500_B1.c: 183: unsigned char temp;
  8359                           ;CC2500_B1.c: 185: for (loop_d = 0; loop_d < 8; loop_d++) {
  8360                           
  8361                           ;incstack = 0
  8362                           ; Regs used in _CC2500_InitPATable: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8363  1342  0020               	movlb	0	; select bank0
  8364  1343  01A1               	clrf	CC2500_InitPATable@loop_d
  8365  1344                     L4:	
  8366  1344  3008               	movlw	8
  8367  1345  0221               	subwf	CC2500_InitPATable@loop_d,w
  8368  1346  1803               	btfsc	3,0
  8369  1347  0008               	return
  8370                           
  8371                           ;CC2500_B1.c: 186: temp = CC2500_patable_vaule[loop_d];
  8372  1348  0821               	movf	CC2500_InitPATable@loop_d,w
  8373  1349  3E5E               	addlw	low (_CC2500_patable_vaule| (0+32768))
  8374  134A  0084               	movwf	4
  8375  134B  3090               	movlw	high (_CC2500_patable_vaule| (0+32768))
  8376  134C  1803               	skipnc
  8377  134D  3E01               	addlw	1
  8378  134E  0085               	movwf	5
  8379  134F  0800               	movf	0,w	;code access
  8380  1350  00F7               	movwf	??_CC2500_InitPATable
  8381  1351  0877               	movf	??_CC2500_InitPATable,w
  8382  1352  00A0               	movwf	CC2500_InitPATable@temp
  8383                           
  8384                           ;CC2500_B1.c: 187: CC2500_WriteREG(0x3E, temp);
  8385  1353  0820               	movf	CC2500_InitPATable@temp,w
  8386  1354  00F7               	movwf	??_CC2500_InitPATable
  8387  1355  0877               	movf	??_CC2500_InitPATable,w
  8388  1356  00F4               	movwf	CC2500_WriteREG@value
  8389  1357  303E               	movlw	62
  8390  1358  3193  23C2  3193   	fcall	_CC2500_WriteREG
  8391  135B  3001               	movlw	1
  8392  135C  00F7               	movwf	??_CC2500_InitPATable
  8393  135D  0877               	movf	??_CC2500_InitPATable,w
  8394  135E  0020               	movlb	0	; select bank0
  8395  135F  07A1               	addwf	CC2500_InitPATable@loop_d,f
  8396  1360  2B44               	goto	L4
  8397  1361                     __end_of_CC2500_InitPATable:	
  8398                           
  8399                           	psect	text40
  8400  13C2                     __ptext40:	
  8401 ;; *************** function _CC2500_WriteREG *****************
  8402 ;; Defined at:
  8403 ;;		line 258 in file "../src/CC2500_B1.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  w_addr          1    wreg     unsigned char 
  8406 ;;  value           1    4[COMMON] unsigned char 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  w_addr          1    6[COMMON] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;		None               void
  8411 ;; Registers used:
  8412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8418 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;Total ram usage:        3 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:    4
  8425 ;; This function calls:
  8426 ;;		_CC2500_WriteByte
  8427 ;;		_RF_Timeout_Counter
  8428 ;;		_setRF_TimeoutCleared
  8429 ;; This function is called by:
  8430 ;;		_CC2500_InitSetREG
  8431 ;;		_CC2500_InitPATable
  8432 ;; This function uses a non-reentrant model
  8433 ;;
  8434                           
  8435                           
  8436                           ;psect for function _CC2500_WriteREG
  8437  13C2                     _CC2500_WriteREG:	
  8438                           
  8439                           ;incstack = 0
  8440                           ; Regs used in _CC2500_WriteREG: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8441                           ;CC2500_WriteREG@w_addr stored from wreg
  8442  13C2  00F6               	movwf	CC2500_WriteREG@w_addr
  8443                           
  8444                           ;CC2500_B1.c: 259: RC4 = 0;
  8445  13C3  0020               	movlb	0	; select bank0
  8446  13C4  120E               	bcf	14,4	;volatile
  8447                           
  8448                           ;CC2500_B1.c: 260: SPI0Buffer = w_addr;
  8449  13C5  0876               	movf	CC2500_WriteREG@w_addr,w
  8450  13C6  00F5               	movwf	??_CC2500_WriteREG
  8451  13C7  0875               	movf	??_CC2500_WriteREG,w
  8452  13C8  00EB               	movwf	_SPI0Buffer
  8453                           
  8454                           ;CC2500_B1.c: 261: while (RC2 == 1 && RF1.Timeout == 0) {
  8455  13C9  2BCD               	goto	l9698
  8456  13CA                     l9696:	
  8457                           
  8458                           ;CC2500_B1.c: 262: RF_Timeout_Counter();
  8459  13CA  3191  21AB  3193   	fcall	_RF_Timeout_Counter
  8460  13CD                     l9698:	
  8461  13CD  0020               	movlb	0	; select bank0
  8462  13CE  1D0E               	btfss	14,2	;volatile
  8463  13CF  2BD3               	goto	l9702
  8464  13D0  0021               	movlb	1	; select bank1
  8465  13D1  1F31               	btfss	(_RF1^(0+128)+1),6
  8466  13D2  2BCA               	goto	l9696
  8467  13D3                     l9702:	
  8468                           
  8469                           ;CC2500_B1.c: 263: };
  8470                           ;CC2500_B1.c: 264: setRF_TimeoutCleared();
  8471  13D3  319E  26B8  3193   	fcall	_setRF_TimeoutCleared
  8472                           
  8473                           ;CC2500_B1.c: 266: CC2500_WriteByte();
  8474  13D6  3191  2158  3193   	fcall	_CC2500_WriteByte
  8475                           
  8476                           ;CC2500_B1.c: 267: SPI0Buffer = value;
  8477  13D9  0874               	movf	CC2500_WriteREG@value,w
  8478  13DA  00F5               	movwf	??_CC2500_WriteREG
  8479  13DB  0875               	movf	??_CC2500_WriteREG,w
  8480  13DC  0020               	movlb	0	; select bank0
  8481  13DD  00EB               	movwf	_SPI0Buffer
  8482                           
  8483                           ;CC2500_B1.c: 268: CC2500_WriteByte();
  8484  13DE  3191  2158         	fcall	_CC2500_WriteByte
  8485                           
  8486                           ;CC2500_B1.c: 269: RC4 = 1;
  8487  13E0  0020               	movlb	0	; select bank0
  8488  13E1  160E               	bsf	14,4	;volatile
  8489  13E2  0008               	return
  8490  13E3                     __end_of_CC2500_WriteREG:	
  8491                           
  8492                           	psect	text41
  8493  1F57                     __ptext41:	
  8494 ;; *************** function _CC2500_FrequencyCabr *****************
  8495 ;; Defined at:
  8496 ;;		line 208 in file "../src/CC2500_B1.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;		None
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;		None
  8501 ;; Return value:  Size  Location     Type
  8502 ;;		None               void
  8503 ;; Registers used:
  8504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;Total ram usage:        0 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; Hardware stack levels required when called:    5
  8517 ;; This function calls:
  8518 ;;		_CC2500_WriteCommand
  8519 ;;		_DelayTime_1us
  8520 ;; This function is called by:
  8521 ;;		_CC2500_PowerOnInitial
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           
  8526                           ;psect for function _CC2500_FrequencyCabr
  8527  1F57                     _CC2500_FrequencyCabr:	
  8528                           
  8529                           ;CC2500_B1.c: 209: CC2500_WriteCommand(0x33);
  8530                           
  8531                           ;incstack = 0
  8532                           ; Regs used in _CC2500_FrequencyCabr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8533  1F57  3033               	movlw	51
  8534  1F58  3188  2000  319F   	fcall	_CC2500_WriteCommand
  8535                           
  8536                           ;CC2500_B1.c: 210: DelayTime_1us(1000);
  8537  1F5B  30E8               	movlw	232
  8538  1F5C  00F2               	movwf	DelayTime_1us@count
  8539  1F5D  3003               	movlw	3
  8540  1F5E  00F3               	movwf	DelayTime_1us@count+1
  8541  1F5F  3194  2471         	fcall	_DelayTime_1us
  8542  1F61  0008               	return
  8543  1F62                     __end_of_CC2500_FrequencyCabr:	
  8544                           
  8545                           	psect	text42
  8546  1471                     __ptext42:	
  8547 ;; *************** function _DelayTime_1us *****************
  8548 ;; Defined at:
  8549 ;;		line 327 in file "../src/CC2500_B1.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  count           2    2[COMMON] int 
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;  j               2    6[COMMON] unsigned int 
  8554 ;;  i               2    4[COMMON] unsigned int 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;		None               void
  8557 ;; Registers used:
  8558 ;;		wreg, status,2
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;Total ram usage:        6 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; Hardware stack levels required when called:    3
  8571 ;; This function calls:
  8572 ;;		Nothing
  8573 ;; This function is called by:
  8574 ;;		_CC2500_PowerRST
  8575 ;;		_CC2500_FrequencyCabr
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           
  8580                           ;psect for function _DelayTime_1us
  8581  1471                     _DelayTime_1us:	
  8582                           
  8583                           ;CC2500_B1.c: 328: unsigned int i, j;
  8584                           ;CC2500_B1.c: 329: for (i = 1; i < count; i++)
  8585                           
  8586                           ;incstack = 0
  8587                           ; Regs used in _DelayTime_1us: [wreg+status,2]
  8588  1471  3001               	movlw	1
  8589  1472  00F4               	movwf	DelayTime_1us@i
  8590  1473  3000               	movlw	0
  8591  1474  00F5               	movwf	DelayTime_1us@i+1
  8592  1475                     l367:	
  8593  1475  0873               	movf	DelayTime_1us@count+1,w
  8594  1476  0275               	subwf	DelayTime_1us@i+1,w
  8595  1477  1D03               	skipz
  8596  1478  2C7B               	goto	u5405
  8597  1479  0872               	movf	DelayTime_1us@count,w
  8598  147A  0274               	subwf	DelayTime_1us@i,w
  8599  147B                     u5405:	
  8600  147B  1803               	btfsc	3,0
  8601  147C  0008               	return
  8602                           
  8603                           ;CC2500_B1.c: 330: for (j = 0; j <= 1; j++);
  8604  147D  01F6               	clrf	DelayTime_1us@j
  8605  147E  01F7               	clrf	DelayTime_1us@j+1
  8606  147F  3000               	movlw	0
  8607  1480  0277               	subwf	DelayTime_1us@j+1,w
  8608  1481  3002               	movlw	2
  8609  1482  1903               	skipnz
  8610  1483  0276               	subwf	DelayTime_1us@j,w
  8611  1484  1803               	btfsc	3,0
  8612  1485  2C91               	goto	l6248
  8613  1486                     l6246:	
  8614  1486  3001               	movlw	1
  8615  1487  07F6               	addwf	DelayTime_1us@j,f
  8616  1488  3000               	movlw	0
  8617  1489  3DF7               	addwfc	DelayTime_1us@j+1,f
  8618  148A  3000               	movlw	0
  8619  148B  0277               	subwf	DelayTime_1us@j+1,w
  8620  148C  3002               	movlw	2
  8621  148D  1903               	skipnz
  8622  148E  0276               	subwf	DelayTime_1us@j,w
  8623  148F  1C03               	skipc
  8624  1490  2C86               	goto	l6246
  8625  1491                     l6248:	
  8626  1491  3001               	movlw	1
  8627  1492  07F4               	addwf	DelayTime_1us@i,f
  8628  1493  3000               	movlw	0
  8629  1494  3DF5               	addwfc	DelayTime_1us@i+1,f
  8630  1495  2C75               	goto	l367
  8631  1496                     __end_of_DelayTime_1us:	
  8632                           
  8633                           	psect	text43
  8634  1EC0                     __ptext43:	
  8635 ;; *************** function _CC2500_ClearTXFIFO *****************
  8636 ;; Defined at:
  8637 ;;		line 194 in file "../src/CC2500_B1.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;		None               void
  8644 ;; Registers used:
  8645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    5
  8658 ;; This function calls:
  8659 ;;		_CC2500_WriteCommand
  8660 ;; This function is called by:
  8661 ;;		_CC2500_PowerOnInitial
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           
  8666                           ;psect for function _CC2500_ClearTXFIFO
  8667  1EC0                     _CC2500_ClearTXFIFO:	
  8668                           
  8669                           ;CC2500_B1.c: 195: CC2500_WriteCommand(0x3B);
  8670                           
  8671                           ;incstack = 0
  8672                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8673  1EC0  303B               	movlw	59
  8674  1EC1  3188  2000         	fcall	_CC2500_WriteCommand
  8675  1EC3  0008               	return
  8676  1EC4                     __end_of_CC2500_ClearTXFIFO:	
  8677                           
  8678                           	psect	text44
  8679  1EBC                     __ptext44:	
  8680 ;; *************** function _CC2500_ClearRXFIFO *****************
  8681 ;; Defined at:
  8682 ;;		line 201 in file "../src/CC2500_B1.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;		None               void
  8689 ;; Registers used:
  8690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;Total ram usage:        0 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    5
  8703 ;; This function calls:
  8704 ;;		_CC2500_WriteCommand
  8705 ;; This function is called by:
  8706 ;;		_CC2500_PowerOnInitial
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           
  8711                           ;psect for function _CC2500_ClearRXFIFO
  8712  1EBC                     _CC2500_ClearRXFIFO:	
  8713                           
  8714                           ;CC2500_B1.c: 202: CC2500_WriteCommand(0x3A);
  8715                           
  8716                           ;incstack = 0
  8717                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8718  1EBC  303A               	movlw	58
  8719  1EBD  3188  2000         	fcall	_CC2500_WriteCommand
  8720  1EBF  0008               	return
  8721  1EC0                     __end_of_CC2500_ClearRXFIFO:	
  8722                           
  8723                           	psect	text45
  8724  0800                     __ptext45:	
  8725 ;; *************** function _CC2500_WriteCommand *****************
  8726 ;; Defined at:
  8727 ;;		line 292 in file "../src/CC2500_B1.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  command         1    wreg     unsigned char 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  command         1    5[COMMON] unsigned char 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;		None               void
  8734 ;; Registers used:
  8735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;Total ram usage:        2 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    4
  8748 ;; This function calls:
  8749 ;;		_CC2500_WriteByte
  8750 ;;		_RF_Timeout_Counter
  8751 ;;		_setRF_TimeoutCleared
  8752 ;; This function is called by:
  8753 ;;		_CC2500_TxData
  8754 ;;		_CC2500_RxData
  8755 ;;		_CC2500_ClearTXFIFO
  8756 ;;		_CC2500_ClearRXFIFO
  8757 ;;		_CC2500_FrequencyCabr
  8758 ;;		_CC2500_SIDLEMode
  8759 ;;		_setRF_Main
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _CC2500_WriteCommand
  8765  0800                     _CC2500_WriteCommand:	
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in _CC2500_WriteCommand: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8769                           ;CC2500_WriteCommand@command stored from wreg
  8770  0800  00F5               	movwf	CC2500_WriteCommand@command
  8771                           
  8772                           ;CC2500_B1.c: 293: RC4 = 0;
  8773  0801  0020               	movlb	0	; select bank0
  8774  0802  120E               	bcf	14,4	;volatile
  8775                           
  8776                           ;CC2500_B1.c: 294: SPI0Buffer = command;
  8777  0803  0875               	movf	CC2500_WriteCommand@command,w
  8778  0804  00F4               	movwf	??_CC2500_WriteCommand
  8779  0805  0874               	movf	??_CC2500_WriteCommand,w
  8780  0806  00EB               	movwf	_SPI0Buffer
  8781                           
  8782                           ;CC2500_B1.c: 296: while (RC2 == 1 && RF1.Timeout == 0) {
  8783  0807  280B               	goto	l9682
  8784  0808                     l9680:	
  8785                           
  8786                           ;CC2500_B1.c: 297: RF_Timeout_Counter();
  8787  0808  3191  21AB  3188   	fcall	_RF_Timeout_Counter
  8788  080B                     l9682:	
  8789  080B  0020               	movlb	0	; select bank0
  8790  080C  1D0E               	btfss	14,2	;volatile
  8791  080D  2811               	goto	l9686
  8792  080E  0021               	movlb	1	; select bank1
  8793  080F  1F31               	btfss	(_RF1^(0+128)+1),6
  8794  0810  2808               	goto	l9680
  8795  0811                     l9686:	
  8796                           
  8797                           ;CC2500_B1.c: 298: };
  8798                           ;CC2500_B1.c: 299: setRF_TimeoutCleared();
  8799  0811  319E  26B8  3188   	fcall	_setRF_TimeoutCleared
  8800                           
  8801                           ;CC2500_B1.c: 301: CC2500_WriteByte();
  8802  0814  3191  2158         	fcall	_CC2500_WriteByte
  8803                           
  8804                           ;CC2500_B1.c: 302: RC4 = 1;
  8805  0816  0020               	movlb	0	; select bank0
  8806  0817  160E               	bsf	14,4	;volatile
  8807  0818  0008               	return
  8808  0819                     __end_of_CC2500_WriteCommand:	
  8809                           
  8810                           	psect	text46
  8811  1EB8                     __ptext46:	
  8812 ;; *************** function _setRF_TimeoutCleared *****************
  8813 ;; Defined at:
  8814 ;;		line 150 in file "../src/RF_Control_B1.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;		None
  8817 ;; Auto vars:     Size  Location     Type
  8818 ;;		None
  8819 ;; Return value:  Size  Location     Type
  8820 ;;		None               void
  8821 ;; Registers used:
  8822 ;;		status,2
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;Total ram usage:        0 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    3
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_CC2500_TxData
  8839 ;;		_CC2500_RxData
  8840 ;;		_CC2500_PowerRST
  8841 ;;		_CC2500_WriteREG
  8842 ;;		_CC2500_WriteCommand
  8843 ;;		_CC2500_ReadStatus
  8844 ;;		_CC2500_ReadREG
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           
  8849                           ;psect for function _setRF_TimeoutCleared
  8850  1EB8                     _setRF_TimeoutCleared:	
  8851                           
  8852                           ;RF_Control_B1.c: 151: RF1.TimeoutCount = 0;
  8853                           
  8854                           ;incstack = 0
  8855                           ; Regs used in _setRF_TimeoutCleared: [status,2]
  8856  1EB8  0021               	movlb	1	; select bank1
  8857  1EB9  01BD               	clrf	(_RF1^(0+128)+13)
  8858  1EBA  01BE               	clrf	((_RF1+1)^(0+128)+13)
  8859  1EBB  0008               	return
  8860  1EBC                     __end_of_setRF_TimeoutCleared:	
  8861                           
  8862                           	psect	text47
  8863  11AB                     __ptext47:	
  8864 ;; *************** function _RF_Timeout_Counter *****************
  8865 ;; Defined at:
  8866 ;;		line 142 in file "../src/RF_Control_B1.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;		None               void
  8873 ;; Registers used:
  8874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:    3
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_CC2500_TxData
  8891 ;;		_CC2500_RxData
  8892 ;;		_CC2500_PowerRST
  8893 ;;		_CC2500_WriteREG
  8894 ;;		_CC2500_WriteCommand
  8895 ;;		_CC2500_ReadStatus
  8896 ;;		_CC2500_ReadREG
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           
  8901                           ;psect for function _RF_Timeout_Counter
  8902  11AB                     _RF_Timeout_Counter:	
  8903                           
  8904                           ;RF_Control_B1.c: 143: RF1.TimeoutCount++;
  8905                           
  8906                           ;incstack = 0
  8907                           ; Regs used in _RF_Timeout_Counter: [wreg+fsr1l+fsr1h+status,2+status,0]
  8908  11AB  3001               	movlw	1
  8909  11AC  0021               	movlb	1	; select bank1
  8910  11AD  07BD               	addwf	(_RF1^(0+128)+13),f
  8911  11AE  3000               	movlw	0
  8912  11AF  3DBE               	addwfc	((_RF1+1)^(0+128)+13),f
  8913                           
  8914                           ;RF_Control_B1.c: 144: if (RF1.TimeoutCount == 25000) {
  8915  11B0  300D               	movlw	13
  8916  11B1  3EB0               	addlw	_RF1& (0+255)
  8917  11B2  0086               	movwf	6
  8918  11B3  0187               	clrf	7
  8919  11B4  3F40               	moviw [0]fsr1
  8920  11B5  3AA8               	xorlw	168
  8921  11B6  1D03               	skipz
  8922  11B7  29BA               	goto	u10615
  8923  11B8  3F41               	moviw [1]fsr1
  8924  11B9  3A61               	xorlw	97
  8925  11BA                     u10615:	
  8926  11BA  1D03               	skipz
  8927  11BB  0008               	return
  8928                           
  8929                           ;RF_Control_B1.c: 145: RF1.TimeoutCount = 0;
  8930  11BC  01BD               	clrf	(_RF1^(0+128)+13)
  8931  11BD  01BE               	clrf	((_RF1+1)^(0+128)+13)
  8932                           
  8933                           ;RF_Control_B1.c: 146: RF1.Timeout = 1;
  8934  11BE  1731               	bsf	(_RF1^(0+128)+1),6
  8935  11BF  0008               	return
  8936  11C0                     __end_of_RF_Timeout_Counter:	
  8937                           
  8938                           	psect	text48
  8939  1158                     __ptext48:	
  8940 ;; *************** function _CC2500_WriteByte *****************
  8941 ;; Defined at:
  8942 ;;		line 226 in file "../src/CC2500_B1.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  loop_a          1    3[COMMON] unsigned char 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;		None               void
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;Total ram usage:        2 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:    3
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_CC2500_TxData
  8967 ;;		_CC2500_RxData
  8968 ;;		_CC2500_PowerRST
  8969 ;;		_CC2500_WriteREG
  8970 ;;		_CC2500_WriteCommand
  8971 ;;		_CC2500_ReadStatus
  8972 ;;		_CC2500_ReadREG
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           
  8977                           ;psect for function _CC2500_WriteByte
  8978  1158                     _CC2500_WriteByte:	
  8979                           
  8980                           ;CC2500_B1.c: 227: unsigned char loop_a;
  8981                           ;CC2500_B1.c: 228: for (loop_a = 0; loop_a < 8; loop_a++) {
  8982                           
  8983                           ;incstack = 0
  8984                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
  8985  1158  01F3               	clrf	CC2500_WriteByte@loop_a
  8986  1159                     L5:	
  8987  1159  3008               	movlw	8
  8988  115A  0273               	subwf	CC2500_WriteByte@loop_a,w
  8989  115B  1803               	btfsc	3,0
  8990  115C  0008               	return
  8991                           
  8992                           ;CC2500_B1.c: 229: if (SPI0Buffer & 0x80)
  8993  115D  0020               	movlb	0	; select bank0
  8994  115E  1FEB               	btfss	_SPI0Buffer,7
  8995  115F  2962               	goto	l323
  8996                           
  8997                           ;CC2500_B1.c: 230: RC0 = 1;
  8998  1160  140E               	bsf	14,0	;volatile
  8999  1161  2963               	goto	l324
  9000  1162                     l323:	
  9001                           
  9002                           ;CC2500_B1.c: 231: else
  9003                           ;CC2500_B1.c: 232: RC0 = 0;
  9004  1162  100E               	bcf	14,0	;volatile
  9005  1163                     l324:	
  9006                           
  9007                           ;CC2500_B1.c: 233: RC1 = 1;
  9008  1163  148E               	bsf	14,1	;volatile
  9009                           
  9010                           ;CC2500_B1.c: 234: SPI0Buffer <<= 1;
  9011  1164  1003               	clrc
  9012  1165  0DEB               	rlf	_SPI0Buffer,f
  9013                           
  9014                           ;CC2500_B1.c: 235: RC1 = 0;
  9015  1166  108E               	bcf	14,1	;volatile
  9016  1167  3001               	movlw	1
  9017  1168  00F2               	movwf	??_CC2500_WriteByte
  9018  1169  0872               	movf	??_CC2500_WriteByte,w
  9019  116A  07F3               	addwf	CC2500_WriteByte@loop_a,f
  9020  116B  2959               	goto	L5
  9021  116C                     __end_of_CC2500_WriteByte:	
  9022                           
  9023                           	psect	text49
  9024  1EAE                     __ptext49:	
  9025 ;; *************** function _RF_Initialization *****************
  9026 ;; Defined at:
  9027 ;;		line 9 in file "../src/RF_Control_B1.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;		None
  9032 ;; Return value:  Size  Location     Type
  9033 ;;		None               void
  9034 ;; Registers used:
  9035 ;;		wreg, status,2, status,0, pclath, cstack
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;Total ram usage:        0 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    4
  9048 ;; This function calls:
  9049 ;;		_setRF_Initialization
  9050 ;; This function is called by:
  9051 ;;		_main
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function _RF_Initialization
  9057  1EAE                     _RF_Initialization:	
  9058                           
  9059                           ;RF_Control_B1.c: 11: setRF_Initialization();
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9063  1EAE  319F  274C         	fcall	_setRF_Initialization
  9064  1EB0  0008               	return
  9065  1EB1                     __end_of_RF_Initialization:	
  9066                           
  9067                           	psect	text50
  9068  1F4C                     __ptext50:	
  9069 ;; *************** function _setRF_Initialization *****************
  9070 ;; Defined at:
  9071 ;;		line 17 in file "../src/RF_Control_B1.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;		None
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;		None               void
  9078 ;; Registers used:
  9079 ;;		wreg
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;Total ram usage:        1 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    3
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_RF_Initialization
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _setRF_Initialization
  9101  1F4C                     _setRF_Initialization:	
  9102                           
  9103                           ;RF_Control_B1.c: 19: Tx_Length = 21;
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _setRF_Initialization: [wreg]
  9107  1F4C  3015               	movlw	21
  9108  1F4D  00F2               	movwf	??_setRF_Initialization
  9109  1F4E  0872               	movf	??_setRF_Initialization,w
  9110  1F4F  0020               	movlb	0	; select bank0
  9111  1F50  00ED               	movwf	_Tx_Length
  9112                           
  9113                           ;RF_Control_B1.c: 20: RF1.RunTime = 200;
  9114  1F51  30C8               	movlw	200
  9115  1F52  0021               	movlb	1	; select bank1
  9116  1F53  00B8               	movwf	(_RF1^(0+128)+8)
  9117  1F54  3000               	movlw	0
  9118  1F55  00B9               	movwf	(_RF1^(0+128)+9)
  9119  1F56  0008               	return
  9120  1F57                     __end_of_setRF_Initialization:	
  9121                           
  9122                           	psect	text51
  9123  111E                     __ptext51:	
  9124 ;; *************** function _Mcu_Initialization *****************
  9125 ;; Defined at:
  9126 ;;		line 30 in file "../src/MCU_B1.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;		None               void
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0, pclath, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    4
  9147 ;; This function calls:
  9148 ;;		_ADC_Set
  9149 ;;		_Fosc_Set
  9150 ;;		_IOC_Set
  9151 ;;		_IO_Set
  9152 ;;		_TMR1_Set
  9153 ;;		_WDT_Set
  9154 ;; This function is called by:
  9155 ;;		_main
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           
  9160                           ;psect for function _Mcu_Initialization
  9161  111E                     _Mcu_Initialization:	
  9162                           
  9163                           ;MCU_B1.c: 32: Fosc_Set();
  9164                           
  9165                           ;incstack = 0
  9166                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  9167  111E  319E  26B4  3191   	fcall	_Fosc_Set
  9168                           
  9169                           ;MCU_B1.c: 34: IO_Set();
  9170  1121  3193  2309  3191   	fcall	_IO_Set
  9171                           
  9172                           ;MCU_B1.c: 36: ;;
  9173                           ;MCU_B1.c: 38: TMR1_Set();
  9174  1124  319F  27A9  3191   	fcall	_TMR1_Set
  9175                           
  9176                           ;MCU_B1.c: 40: ADC_Set();
  9177  1127  319E  26E1  3191   	fcall	_ADC_Set
  9178                           
  9179                           ;MCU_B1.c: 42: ;;
  9180                           ;MCU_B1.c: 44: ;;
  9181                           ;MCU_B1.c: 46: IOC_Set();
  9182  112A  319F  2741  3191   	fcall	_IOC_Set
  9183                           
  9184                           ;MCU_B1.c: 48: ;;
  9185                           ;MCU_B1.c: 50: ;;
  9186                           ;MCU_B1.c: 52: WDT_Set();
  9187  112D  319F  2718         	fcall	_WDT_Set
  9188  112F  0008               	return
  9189  1130                     __end_of_Mcu_Initialization:	
  9190                           
  9191                           	psect	text52
  9192  1F18                     __ptext52:	
  9193 ;; *************** function _WDT_Set *****************
  9194 ;; Defined at:
  9195 ;;		line 1107 in file "../src/MCU_B1.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;		None               void
  9202 ;; Registers used:
  9203 ;;		wreg
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;Total ram usage:        1 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    3
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_Mcu_Initialization
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           
  9224                           ;psect for function _WDT_Set
  9225  1F18                     _WDT_Set:	
  9226                           
  9227                           ;MCU_B1.c: 1114: WDTCON = 0b00010111;;
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in _WDT_Set: [wreg]
  9231  1F18  3017               	movlw	23
  9232  1F19  0021               	movlb	1	; select bank1
  9233  1F1A  0097               	movwf	23	;volatile
  9234                           
  9235                           ;MCU_B1.c: 1116: WDT.Enable = 1;
  9236  1F1B  145D               	bsf	_WDT^(0+128),0
  9237                           
  9238                           ;MCU_B1.c: 1117: WDT.Timer = 10;
  9239  1F1C  300A               	movlw	10
  9240  1F1D  00F2               	movwf	??_WDT_Set
  9241  1F1E  0872               	movf	??_WDT_Set,w
  9242  1F1F  00DE               	movwf	(_WDT^(0+128)+1)
  9243  1F20  0008               	return
  9244  1F21                     __end_of_WDT_Set:	
  9245                           
  9246                           	psect	text53
  9247  1FA9                     __ptext53:	
  9248 ;; *************** function _TMR1_Set *****************
  9249 ;; Defined at:
  9250 ;;		line 226 in file "../src/MCU_B1.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;		None               void
  9257 ;; Registers used:
  9258 ;;		wreg
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    3
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_Mcu_Initialization
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _TMR1_Set
  9280  1FA9                     _TMR1_Set:	
  9281                           
  9282                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  9283                           
  9284                           ;incstack = 0
  9285                           ; Regs used in _TMR1_Set: [wreg]
  9286  1FA9  3041               	movlw	65
  9287  1FAA  0020               	movlb	0	; select bank0
  9288  1FAB  0098               	movwf	24	;volatile
  9289                           
  9290                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  9291  1FAC  30FA               	movlw	250
  9292  1FAD  0097               	movwf	23	;volatile
  9293                           
  9294                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  9295  1FAE  3038               	movlw	56
  9296  1FAF  0096               	movwf	22	;volatile
  9297                           
  9298                           ;MCU_B1.c: 230: TMR1IE = 1;
  9299  1FB0  0021               	movlb	1	; select bank1
  9300  1FB1  1411               	bsf	17,0	;volatile
  9301                           
  9302                           ;MCU_B1.c: 231: PEIE = 1;
  9303  1FB2  170B               	bsf	11,6	;volatile
  9304                           
  9305                           ;MCU_B1.c: 232: GIE = 1;
  9306  1FB3  178B               	bsf	11,7	;volatile
  9307  1FB4  0008               	return
  9308  1FB5                     __end_of_TMR1_Set:	
  9309                           
  9310                           	psect	text54
  9311  1309                     __ptext54:	
  9312 ;; *************** function _IO_Set *****************
  9313 ;; Defined at:
  9314 ;;		line 60 in file "../src/MCU_B1.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;		None               void
  9321 ;; Registers used:
  9322 ;;		wreg, status,2
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;Total ram usage:        0 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    3
  9335 ;; This function calls:
  9336 ;;		Nothing
  9337 ;; This function is called by:
  9338 ;;		_Mcu_Initialization
  9339 ;; This function uses a non-reentrant model
  9340 ;;
  9341                           
  9342                           
  9343                           ;psect for function _IO_Set
  9344  1309                     _IO_Set:	
  9345                           
  9346                           ;MCU_B1.c: 92: TRISA = 0b01110111;;
  9347                           
  9348                           ;incstack = 0
  9349                           ; Regs used in _IO_Set: [wreg+status,2]
  9350  1309  3077               	movlw	119
  9351  130A  0021               	movlb	1	; select bank1
  9352  130B  008C               	movwf	12	;volatile
  9353                           
  9354                           ;MCU_B1.c: 93: TRISB = 0b00000111;;
  9355  130C  3007               	movlw	7
  9356  130D  008D               	movwf	13	;volatile
  9357                           
  9358                           ;MCU_B1.c: 94: TRISC = 0b00001100;;
  9359  130E  300C               	movlw	12
  9360  130F  008E               	movwf	14	;volatile
  9361                           
  9362                           ;MCU_B1.c: 96: LATA = 0b00000000;;
  9363  1310  0022               	movlb	2	; select bank2
  9364  1311  018C               	clrf	12	;volatile
  9365                           
  9366                           ;MCU_B1.c: 97: LATB = 0b00000010;;
  9367  1312  3002               	movlw	2
  9368  1313  008D               	movwf	13	;volatile
  9369                           
  9370                           ;MCU_B1.c: 98: LATC = 0b00000000;;
  9371  1314  018E               	clrf	14	;volatile
  9372                           
  9373                           ;MCU_B1.c: 100: ANSELA = 0b00100010;;
  9374  1315  3022               	movlw	34
  9375  1316  0023               	movlb	3	; select bank3
  9376  1317  008C               	movwf	12	;volatile
  9377                           
  9378                           ;MCU_B1.c: 101: ANSELB = 0b00000000;;
  9379  1318  018D               	clrf	13	;volatile
  9380                           
  9381                           ;MCU_B1.c: 102: ANSELC = 0b00000000;;
  9382  1319  018E               	clrf	14	;volatile
  9383                           
  9384                           ;MCU_B1.c: 104: PORTA = 0b01110111;;
  9385  131A  3077               	movlw	119
  9386  131B  0020               	movlb	0	; select bank0
  9387  131C  008C               	movwf	12	;volatile
  9388                           
  9389                           ;MCU_B1.c: 105: PORTB = 0b00000111;;
  9390  131D  3007               	movlw	7
  9391  131E  008D               	movwf	13	;volatile
  9392                           
  9393                           ;MCU_B1.c: 106: PORTC = 0b00001100;;
  9394  131F  300C               	movlw	12
  9395  1320  008E               	movwf	14	;volatile
  9396                           
  9397                           ;MCU_B1.c: 108: WPUB = 0b00000000;;
  9398  1321  0024               	movlb	4	; select bank4
  9399  1322  018D               	clrf	13	;volatile
  9400  1323  0008               	return
  9401  1324                     __end_of_IO_Set:	
  9402                           
  9403                           	psect	text55
  9404  1F41                     __ptext55:	
  9405 ;; *************** function _IOC_Set *****************
  9406 ;; Defined at:
  9407 ;;		line 381 in file "../src/MCU_B1.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;		None
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;		None
  9412 ;; Return value:  Size  Location     Type
  9413 ;;		None               void
  9414 ;; Registers used:
  9415 ;;		wreg, status,2
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9425 ;;Total ram usage:        0 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:    3
  9428 ;; This function calls:
  9429 ;;		Nothing
  9430 ;; This function is called by:
  9431 ;;		_Mcu_Initialization
  9432 ;; This function uses a non-reentrant model
  9433 ;;
  9434                           
  9435                           
  9436                           ;psect for function _IOC_Set
  9437  1F41                     _IOC_Set:	
  9438                           
  9439                           ;MCU_B1.c: 383: IOCBP = 0b00000100;;
  9440                           
  9441                           ;incstack = 0
  9442                           ; Regs used in _IOC_Set: [wreg+status,2]
  9443  1F41  3004               	movlw	4
  9444  1F42  0027               	movlb	7	; select bank7
  9445  1F43  0094               	movwf	20	;volatile
  9446                           
  9447                           ;MCU_B1.c: 384: IOCBN = 0b00000100;;
  9448  1F44  3004               	movlw	4
  9449  1F45  0095               	movwf	21	;volatile
  9450                           
  9451                           ;MCU_B1.c: 386: IOCBF = 0b00000000;
  9452  1F46  0196               	clrf	22	;volatile
  9453                           
  9454                           ;MCU_B1.c: 388: IOCIE = 1;
  9455  1F47  158B               	bsf	11,3	;volatile
  9456                           
  9457                           ;MCU_B1.c: 389: IOCIF = 0;
  9458  1F48  100B               	bcf	11,0	;volatile
  9459                           
  9460                           ;MCU_B1.c: 390: PEIE = 1;
  9461  1F49  170B               	bsf	11,6	;volatile
  9462                           
  9463                           ;MCU_B1.c: 391: GIE = 1;
  9464  1F4A  178B               	bsf	11,7	;volatile
  9465  1F4B  0008               	return
  9466  1F4C                     __end_of_IOC_Set:	
  9467                           
  9468                           	psect	text56
  9469  1EB4                     __ptext56:	
  9470 ;; *************** function _Fosc_Set *****************
  9471 ;; Defined at:
  9472 ;;		line 56 in file "../src/MCU_B1.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;		None
  9477 ;; Return value:  Size  Location     Type
  9478 ;;		None               void
  9479 ;; Registers used:
  9480 ;;		wreg
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9490 ;;Total ram usage:        0 bytes
  9491 ;; Hardware stack levels used:    1
  9492 ;; Hardware stack levels required when called:    3
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_Mcu_Initialization
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           
  9501                           ;psect for function _Fosc_Set
  9502  1EB4                     _Fosc_Set:	
  9503                           
  9504                           ;MCU_B1.c: 57: OSCCON = 0x78;
  9505                           
  9506                           ;incstack = 0
  9507                           ; Regs used in _Fosc_Set: [wreg]
  9508  1EB4  3078               	movlw	120
  9509  1EB5  0021               	movlb	1	; select bank1
  9510  1EB6  0099               	movwf	25	;volatile
  9511  1EB7  0008               	return
  9512  1EB8                     __end_of_Fosc_Set:	
  9513                           
  9514                           	psect	text57
  9515  1EE1                     __ptext57:	
  9516 ;; *************** function _ADC_Set *****************
  9517 ;; Defined at:
  9518 ;;		line 429 in file "../src/MCU_B1.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;		None
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;		None
  9523 ;; Return value:  Size  Location     Type
  9524 ;;		None               void
  9525 ;; Registers used:
  9526 ;;		wreg
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;Total ram usage:        0 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; Hardware stack levels required when called:    3
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_Mcu_Initialization
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           
  9547                           ;psect for function _ADC_Set
  9548  1EE1                     _ADC_Set:	
  9549                           
  9550                           ;MCU_B1.c: 430: ADCON1 = 0xf3;
  9551                           
  9552                           ;incstack = 0
  9553                           ; Regs used in _ADC_Set: [wreg]
  9554  1EE1  30F3               	movlw	243
  9555  1EE2  0021               	movlb	1	; select bank1
  9556  1EE3  009E               	movwf	30	;volatile
  9557                           
  9558                           ;MCU_B1.c: 431: FVRCON = 0xc1;
  9559  1EE4  30C1               	movlw	193
  9560  1EE5  0022               	movlb	2	; select bank2
  9561  1EE6  0097               	movwf	23	;volatile
  9562  1EE7  0008               	return
  9563  1EE8                     __end_of_ADC_Set:	
  9564                           
  9565                           	psect	text58
  9566  1F9D                     __ptext58:	
  9567 ;; *************** function _LED_Main *****************
  9568 ;; Defined at:
  9569 ;;		line 47 in file "../src/LED_B1.c"
  9570 ;; Parameters:    Size  Location     Type
  9571 ;;		None
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;		None               void
  9576 ;; Registers used:
  9577 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;Total ram usage:        0 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:    5
  9590 ;; This function calls:
  9591 ;;		_setLED_Main
  9592 ;; This function is called by:
  9593 ;;		_main
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           
  9598                           ;psect for function _LED_Main
  9599  1F9D                     _LED_Main:	
  9600                           
  9601                           ;LED_B1.c: 58: setLED_Main(1);
  9602                           
  9603                           ;incstack = 0
  9604                           ; Regs used in _LED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9605  1F9D  3001               	movlw	1
  9606  1F9E  3197  2736  319F   	fcall	_setLED_Main
  9607                           
  9608                           ;LED_B1.c: 61: setLED_Main(2);
  9609  1FA1  3002               	movlw	2
  9610  1FA2  3197  2736  319F   	fcall	_setLED_Main
  9611                           
  9612                           ;LED_B1.c: 67: setLED_Main(99);
  9613  1FA5  3063               	movlw	99
  9614  1FA6  3197  2736         	fcall	_setLED_Main
  9615  1FA8  0008               	return
  9616  1FA9                     __end_of_LED_Main:	
  9617                           
  9618                           	psect	text59
  9619  1736                     __ptext59:	
  9620 ;; *************** function _setLED_Main *****************
  9621 ;; Defined at:
  9622 ;;		line 229 in file "../src/LED_B1.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  led             1    wreg     unsigned char 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  led             1    5[COMMON] unsigned char 
  9627 ;; Return value:  Size  Location     Type
  9628 ;;		None               void
  9629 ;; Registers used:
  9630 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9631 ;; Tracked objects:
  9632 ;;		On entry : 0/0
  9633 ;;		On exit  : 0/0
  9634 ;;		Unchanged: 0/0
  9635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9640 ;;Total ram usage:        3 bytes
  9641 ;; Hardware stack levels used:    1
  9642 ;; Hardware stack levels required when called:    4
  9643 ;; This function calls:
  9644 ;;		_LedPointSelect
  9645 ;; This function is called by:
  9646 ;;		_LED_Main
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           
  9651                           ;psect for function _setLED_Main
  9652  1736                     _setLED_Main:	
  9653                           
  9654                           ;incstack = 0
  9655                           ; Regs used in _setLED_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9656                           ;setLED_Main@led stored from wreg
  9657  1736  00F5               	movwf	setLED_Main@led
  9658                           
  9659                           ;LED_B1.c: 230: LedPointSelect(led);
  9660  1737  0875               	movf	setLED_Main@led,w
  9661  1738  3192  22EF  3197   	fcall	_LedPointSelect
  9662                           
  9663                           ;LED_B1.c: 231: if (LED->GO == 1) {
  9664  173B  087A               	movf	_LED,w
  9665  173C  0086               	movwf	6
  9666  173D  087B               	movf	_LED+1,w
  9667  173E  0087               	movwf	7
  9668  173F  1C81               	btfss	1,1
  9669  1740  0008               	return
  9670                           
  9671                           ;LED_B1.c: 232: LED->Time++;
  9672  1741  087A               	movf	_LED,w
  9673  1742  0086               	movwf	6
  9674  1743  087B               	movf	_LED+1,w
  9675  1744  0087               	movwf	7
  9676  1745  3141               	addfsr 1,1
  9677  1746  3001               	movlw	1
  9678  1747  0781               	addwf	1,f
  9679  1748  3141               	addfsr 1,1
  9680  1749  1803               	skipnc
  9681  174A  0A81               	incf	1,f
  9682                           
  9683                           ;LED_B1.c: 233: if (LED->Time >= (500 / 20)) {
  9684  174B  087A               	movf	_LED,w
  9685  174C  0086               	movwf	6
  9686  174D  087B               	movf	_LED+1,w
  9687  174E  0087               	movwf	7
  9688  174F  3141               	addfsr 1,1
  9689  1750  3F40               	moviw [0]fsr1
  9690  1751  00F3               	movwf	??_setLED_Main
  9691  1752  3F41               	moviw [1]fsr1
  9692  1753  00F4               	movwf	??_setLED_Main+1
  9693  1754  3000               	movlw	0
  9694  1755  0274               	subwf	??_setLED_Main+1,w
  9695  1756  3019               	movlw	25
  9696  1757  1903               	skipnz
  9697  1758  0273               	subwf	??_setLED_Main,w
  9698  1759  1C03               	skipc
  9699  175A  0008               	return
  9700                           
  9701                           ;LED_B1.c: 234: LED->Time = 0;
  9702  175B  087A               	movf	_LED,w
  9703  175C  0086               	movwf	6
  9704  175D  087B               	movf	_LED+1,w
  9705  175E  0087               	movwf	7
  9706  175F  3141               	addfsr 1,1
  9707  1760  3000               	movlw	0
  9708  1761  3FC0               	movwi [0]fsr1
  9709  1762  3FC1               	movwi [1]fsr1
  9710                           
  9711                           ;LED_B1.c: 237: if (led == 1) {
  9712  1763  0875               	movf	setLED_Main@led,w
  9713  1764  3A01               	xorlw	1
  9714  1765  1D03               	skipz
  9715  1766  2F6A               	goto	l1167
  9716                           
  9717                           ;LED_B1.c: 238: RA3 = RA3 == 1 ? 0 : 1;
  9718  1767  3008               	movlw	8
  9719  1768  0020               	movlb	0	; select bank0
  9720  1769  068C               	xorwf	12,f
  9721  176A                     l1167:	
  9722                           
  9723                           ;LED_B1.c: 239: }
  9724                           ;LED_B1.c: 242: if (led == 2) {
  9725  176A  0875               	movf	setLED_Main@led,w
  9726  176B  3A02               	xorlw	2
  9727  176C  1D03               	skipz
  9728  176D  2F71               	goto	l1168
  9729                           
  9730                           ;LED_B1.c: 243: RC7 = RC7 == 1 ? 0 : 1;
  9731  176E  3080               	movlw	128
  9732  176F  0020               	movlb	0	; select bank0
  9733  1770  068E               	xorwf	14,f
  9734  1771                     l1168:	
  9735                           
  9736                           ;LED_B1.c: 244: }
  9737                           ;LED_B1.c: 252: if (led == 99) {
  9738  1771  0875               	movf	setLED_Main@led,w
  9739  1772  3A63               	xorlw	99
  9740  1773  1D03               	skipz
  9741  1774  0008               	return
  9742                           
  9743                           ;LED_B1.c: 253: RB5 = RB5 == 1 ? 0 : 1;
  9744  1775  3020               	movlw	32
  9745  1776  0020               	movlb	0	; select bank0
  9746  1777  068D               	xorwf	13,f
  9747  1778  0008               	return
  9748  1779                     __end_of_setLED_Main:	
  9749                           
  9750                           	psect	text60
  9751  1F91                     __ptext60:	
  9752 ;; *************** function _LED_Initialization *****************
  9753 ;; Defined at:
  9754 ;;		line 31 in file "../src/LED_B1.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;		None               void
  9761 ;; Registers used:
  9762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9772 ;;Total ram usage:        0 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; Hardware stack levels required when called:    6
  9775 ;; This function calls:
  9776 ;;		_setLED_Initialization
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           
  9783                           ;psect for function _LED_Initialization
  9784  1F91                     _LED_Initialization:	
  9785                           
  9786                           ;LED_B1.c: 33: setLED_Initialization(1);
  9787                           
  9788                           ;incstack = 0
  9789                           ; Regs used in _LED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9790  1F91  3001               	movlw	1
  9791  1F92  319F  27E2  319F   	fcall	_setLED_Initialization
  9792                           
  9793                           ;LED_B1.c: 36: setLED_Initialization(2);
  9794  1F95  3002               	movlw	2
  9795  1F96  319F  27E2  319F   	fcall	_setLED_Initialization
  9796                           
  9797                           ;LED_B1.c: 42: setLED_Initialization(99);
  9798  1F99  3063               	movlw	99
  9799  1F9A  319F  27E2         	fcall	_setLED_Initialization
  9800  1F9C  0008               	return
  9801  1F9D                     __end_of_LED_Initialization:	
  9802                           
  9803                           	psect	text61
  9804  1FE2                     __ptext61:	
  9805 ;; *************** function _setLED_Initialization *****************
  9806 ;; Defined at:
  9807 ;;		line 74 in file "../src/LED_B1.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  led             1    wreg     unsigned char 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  led             1    5[COMMON] unsigned char 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;		None               void
  9814 ;; Registers used:
  9815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;Total ram usage:        1 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; Hardware stack levels required when called:    5
  9828 ;; This function calls:
  9829 ;;		_LedPointSelect
  9830 ;;		_setLED
  9831 ;; This function is called by:
  9832 ;;		_LED_Initialization
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _setLED_Initialization
  9838  1FE2                     _setLED_Initialization:	
  9839                           
  9840                           ;incstack = 0
  9841                           ; Regs used in _setLED_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9842                           ;setLED_Initialization@led stored from wreg
  9843  1FE2  00F5               	movwf	setLED_Initialization@led
  9844                           
  9845                           ;LED_B1.c: 75: LedPointSelect(led);
  9846  1FE3  0875               	movf	setLED_Initialization@led,w
  9847  1FE4  3192  22EF  319F   	fcall	_LedPointSelect
  9848                           
  9849                           ;LED_B1.c: 76: LED->Enable = 1;
  9850  1FE7  087A               	movf	_LED,w
  9851  1FE8  0086               	movwf	6
  9852  1FE9  087B               	movf	_LED+1,w
  9853  1FEA  0087               	movwf	7
  9854  1FEB  1401               	bsf	1,0
  9855                           
  9856                           ;LED_B1.c: 77: setLED(led, 0);
  9857  1FEC  01F3               	clrf	setLED@command
  9858  1FED  0875               	movf	setLED_Initialization@led,w
  9859  1FEE  318A  2243         	fcall	_setLED
  9860  1FF0  0008               	return
  9861  1FF1                     __end_of_setLED_Initialization:	
  9862                           
  9863                           	psect	text62
  9864  16F5                     __ptext62:	
  9865 ;; *************** function _Flash_Memory_Main *****************
  9866 ;; Defined at:
  9867 ;;		line 980 in file "../src/MCU_B1.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  key_Status      1    0[BANK0 ] unsigned char 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;		None               void
  9874 ;; Registers used:
  9875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;Total ram usage:        3 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    6
  9888 ;; This function calls:
  9889 ;;		_Flash_Memory_Modify
  9890 ;;		_getAll_Sw_KeyStatus
  9891 ;;		_getMain_All_LightsStatus
  9892 ;; This function is called by:
  9893 ;;		_main
  9894 ;; This function uses a non-reentrant model
  9895 ;;
  9896                           
  9897                           
  9898                           ;psect for function _Flash_Memory_Main
  9899  16F5                     _Flash_Memory_Main:	
  9900                           
  9901                           ;MCU_B1.c: 981: char key_Status = 0;
  9902                           
  9903                           ;incstack = 0
  9904                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9905  16F5  0020               	movlb	0	; select bank0
  9906  16F6  01A0               	clrf	Flash_Memory_Main@key_Status
  9907                           
  9908                           ;MCU_B1.c: 983: key_Status = getAll_Sw_KeyStatus();
  9909  16F7  3190  20EB  3196   	fcall	_getAll_Sw_KeyStatus
  9910  16FA  00F8               	movwf	??_Flash_Memory_Main
  9911  16FB  0878               	movf	??_Flash_Memory_Main,w
  9912  16FC  0020               	movlb	0	; select bank0
  9913  16FD  00A0               	movwf	Flash_Memory_Main@key_Status
  9914                           
  9915                           ;MCU_B1.c: 985: if (Memory.Modify == 1) {
  9916  16FE  0023               	movlb	3	; select bank3
  9917  16FF  1C54               	btfss	(_Memory^(0+384)+36),0
  9918  1700  0008               	return
  9919                           
  9920                           ;MCU_B1.c: 986: Memory.GO = getMain_All_LightsStatus() == 0 && key_Status == 0 ? 1 : 0;
  9921  1701  0020               	movlb	0	; select bank0
  9922  1702  01A1               	clrf	_Flash_Memory_Main$3384
  9923  1703  319F  27D3  3196   	fcall	_getMain_All_LightsStatus
  9924  1706  3800               	iorlw	0
  9925  1707  1D03               	skipz
  9926  1708  2F0F               	goto	l9198
  9927  1709  0020               	movlb	0	; select bank0
  9928  170A  08A0               	movf	Flash_Memory_Main@key_Status,f
  9929  170B  1D03               	skipz
  9930  170C  2F0F               	goto	l9198
  9931  170D  01A1               	clrf	_Flash_Memory_Main$3384
  9932  170E  0AA1               	incf	_Flash_Memory_Main$3384,f
  9933  170F                     l9198:	
  9934  170F  0020               	movlb	0	; select bank0
  9935  1710  0821               	movf	_Flash_Memory_Main$3384,w
  9936  1711  0023               	movlb	3	; select bank3
  9937  1712  10D4               	bcf	(_Memory^(0+384)+36),1
  9938  1713  1D03               	skipz
  9939  1714  14D4               	bsf	(_Memory^(0+384)+36),1
  9940                           
  9941                           ;MCU_B1.c: 987: if (Memory.GO == 1) {
  9942  1715  1CD4               	btfss	(_Memory^(0+384)+36),1
  9943  1716  2F30               	goto	l1439
  9944                           
  9945                           ;MCU_B1.c: 988: Memory.Runtime = 1;
  9946  1717  15D4               	bsf	(_Memory^(0+384)+36),3
  9947                           
  9948                           ;MCU_B1.c: 989: Memory.Time++;
  9949  1718  3001               	movlw	1
  9950  1719  07D2               	addwf	(_Memory^(0+384)+34),f
  9951  171A  3000               	movlw	0
  9952  171B  3DD3               	addwfc	((_Memory+1)^(0+384)+34),f
  9953                           
  9954                           ;MCU_B1.c: 990: if (Memory.Time == (200 / 20)) {
  9955  171C  3022               	movlw	34
  9956  171D  3EB0               	addlw	_Memory& (0+255)
  9957  171E  0086               	movwf	6
  9958  171F  3001               	movlw	1	; select bank3/4
  9959  1720  0087               	movwf	7
  9960  1721  3F40               	moviw [0]fsr1
  9961  1722  3A0A               	xorlw	10
  9962  1723  1D03               	skipz
  9963  1724  2F27               	goto	u9865
  9964  1725  3F41               	moviw [1]fsr1
  9965  1726  3A00               	xorlw	0
  9966  1727                     u9865:	
  9967  1727  1D03               	skipz
  9968  1728  0008               	return
  9969                           
  9970                           ;MCU_B1.c: 991: Memory.Time = 0;
  9971  1729  01D2               	clrf	(_Memory^(0+384)+34)
  9972  172A  01D3               	clrf	((_Memory+1)^(0+384)+34)
  9973                           
  9974                           ;MCU_B1.c: 992: Memory.Modify = 0;
  9975  172B  1054               	bcf	(_Memory^(0+384)+36),0
  9976                           
  9977                           ;MCU_B1.c: 993: Memory.GO = 0;
  9978  172C  10D4               	bcf	(_Memory^(0+384)+36),1
  9979                           
  9980                           ;MCU_B1.c: 994: Flash_Memory_Modify();
  9981  172D  318F  2777         	fcall	_Flash_Memory_Modify
  9982                           
  9983                           ;MCU_B1.c: 995: }
  9984                           ;MCU_B1.c: 996: } else {
  9985  172F  0008               	return
  9986  1730                     l1439:	
  9987                           
  9988                           ;MCU_B1.c: 997: if (Memory.Runtime == 1) {
  9989  1730  1DD4               	btfss	(_Memory^(0+384)+36),3
  9990  1731  0008               	return
  9991                           
  9992                           ;MCU_B1.c: 998: Memory.Runtime = 0;
  9993  1732  11D4               	bcf	(_Memory^(0+384)+36),3
  9994                           
  9995                           ;MCU_B1.c: 999: Memory.Time = 0;
  9996  1733  01D2               	clrf	(_Memory^(0+384)+34)
  9997  1734  01D3               	clrf	((_Memory+1)^(0+384)+34)
  9998  1735  0008               	return
  9999  1736                     __end_of_Flash_Memory_Main:	
 10000                           
 10001                           	psect	text63
 10002  10EB                     __ptext63:	
 10003 ;; *************** function _getAll_Sw_KeyStatus *****************
 10004 ;; Defined at:
 10005 ;;		line 286 in file "../src/Switch_B1.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  status          1    3[COMMON] unsigned char 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      unsigned char 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        3 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    3
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_Flash_Memory_Main
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function _getAll_Sw_KeyStatus
 10035  10EB                     _getAll_Sw_KeyStatus:	
 10036                           
 10037                           ;Switch_B1.c: 287: char status = 0;
 10038                           
 10039                           ;incstack = 0
 10040                           ; Regs used in _getAll_Sw_KeyStatus: [wreg+status,2]
 10041  10EB  01F3               	clrf	getAll_Sw_KeyStatus@status
 10042                           
 10043                           ;Switch_B1.c: 301: status = RA6 == 1 || RA4 == 1 || RA0 == 1 || RB1 == 1 ? 1 : 0;
 10044  10EC  01F4               	clrf	_getAll_Sw_KeyStatus$6665
 10045  10ED  0AF4               	incf	_getAll_Sw_KeyStatus$6665,f
 10046  10EE  0020               	movlb	0	; select bank0
 10047  10EF  1F0C               	btfss	12,6	;volatile
 10048  10F0  1A0C               	btfsc	12,4	;volatile
 10049  10F1  28F6               	goto	l8944
 10050  10F2  1C0C               	btfss	12,0	;volatile
 10051  10F3  188D               	btfsc	13,1	;volatile
 10052  10F4  28F6               	goto	l8944
 10053  10F5  01F4               	clrf	_getAll_Sw_KeyStatus$6665
 10054  10F6                     l8944:	
 10055  10F6  0874               	movf	_getAll_Sw_KeyStatus$6665,w
 10056  10F7  00F2               	movwf	??_getAll_Sw_KeyStatus
 10057  10F8  0872               	movf	??_getAll_Sw_KeyStatus,w
 10058  10F9  00F3               	movwf	getAll_Sw_KeyStatus@status
 10059                           
 10060                           ;Switch_B1.c: 315: return status;
 10061  10FA  0873               	movf	getAll_Sw_KeyStatus@status,w
 10062  10FB  0008               	return
 10063  10FC                     __end_of_getAll_Sw_KeyStatus:	
 10064                           
 10065                           	psect	text64
 10066  0F77                     __ptext64:	
 10067 ;; *************** function _Flash_Memory_Modify *****************
 10068 ;; Defined at:
 10069 ;;		line 1057 in file "../src/MCU_B1.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  i               1    7[COMMON] unsigned char 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;		None               void
 10076 ;; Registers used:
 10077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;Total ram usage:        2 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    5
 10090 ;; This function calls:
 10091 ;;		_Flash_Memory_Erasing
 10092 ;;		_Flash_Memory_Read
 10093 ;;		_Flash_Memory_Write
 10094 ;;		_setMemory_Data
 10095 ;; This function is called by:
 10096 ;;		_Flash_Memory_Main
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           
 10101                           ;psect for function _Flash_Memory_Modify
 10102  0F77                     _Flash_Memory_Modify:	
 10103                           
 10104                           ;MCU_B1.c: 1058: char i = 0;
 10105                           
 10106                           ;incstack = 0
 10107                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10108  0F77  01F7               	clrf	Flash_Memory_Modify@i
 10109                           
 10110                           ;MCU_B1.c: 1059: for (i = 0; i < 32; i++) {
 10111  0F78  01F7               	clrf	Flash_Memory_Modify@i
 10112  0F79  3020               	movlw	32
 10113  0F7A  0277               	subwf	Flash_Memory_Modify@i,w
 10114  0F7B  1803               	btfsc	3,0
 10115  0F7C  2F91               	goto	l8962
 10116  0F7D                     l8956:	
 10117                           
 10118                           ;MCU_B1.c: 1060: Memory.Data[i] = Flash_Memory_Read(i);
 10119  0F7D  0877               	movf	Flash_Memory_Modify@i,w
 10120  0F7E  3191  2144  318F   	fcall	_Flash_Memory_Read
 10121  0F81  00F6               	movwf	??_Flash_Memory_Modify
 10122  0F82  0877               	movf	Flash_Memory_Modify@i,w
 10123  0F83  3EB0               	addlw	_Memory& (0+255)
 10124  0F84  0086               	movwf	6
 10125  0F85  3001               	movlw	1	; select bank3/4
 10126  0F86  0087               	movwf	7
 10127  0F87  0876               	movf	??_Flash_Memory_Modify,w
 10128  0F88  0081               	movwf	1
 10129  0F89  3001               	movlw	1
 10130  0F8A  00F6               	movwf	??_Flash_Memory_Modify
 10131  0F8B  0876               	movf	??_Flash_Memory_Modify,w
 10132  0F8C  07F7               	addwf	Flash_Memory_Modify@i,f
 10133  0F8D  3020               	movlw	32
 10134  0F8E  0277               	subwf	Flash_Memory_Modify@i,w
 10135  0F8F  1C03               	skipc
 10136  0F90  2F7D               	goto	l8956
 10137  0F91                     l8962:	
 10138                           
 10139                           ;MCU_B1.c: 1061: }
 10140                           ;MCU_B1.c: 1062: setMemory_Data(6, product->Data[11]);
 10141  0F91  0020               	movlb	0	; select bank0
 10142  0F92  086E               	movf	_product,w
 10143  0F93  0086               	movwf	6
 10144  0F94  3002               	movlw	2	; select bank4/5
 10145  0F95  0087               	movwf	7
 10146  0F96  3002               	movlw	2	; select bank4/5
 10147  0F97  3F4B               	moviw [11]fsr1
 10148  0F98  00F2               	movwf	setMemory_Data@data
 10149  0F99  3006               	movlw	6
 10150  0F9A  319F  2736  318F   	fcall	_setMemory_Data
 10151                           
 10152                           ;MCU_B1.c: 1063: setMemory_Data(0, product->Data[12]);
 10153  0F9D  0020               	movlb	0	; select bank0
 10154  0F9E  086E               	movf	_product,w
 10155  0F9F  0086               	movwf	6
 10156  0FA0  3002               	movlw	2	; select bank4/5
 10157  0FA1  0087               	movwf	7
 10158  0FA2  3002               	movlw	2	; select bank4/5
 10159  0FA3  3F4C               	moviw [12]fsr1
 10160  0FA4  00F2               	movwf	setMemory_Data@data
 10161  0FA5  3000               	movlw	0
 10162  0FA6  319F  2736  318F   	fcall	_setMemory_Data
 10163                           
 10164                           ;MCU_B1.c: 1064: setMemory_Data(1, product->Data[13]);
 10165  0FA9  0020               	movlb	0	; select bank0
 10166  0FAA  086E               	movf	_product,w
 10167  0FAB  0086               	movwf	6
 10168  0FAC  3002               	movlw	2	; select bank4/5
 10169  0FAD  0087               	movwf	7
 10170  0FAE  3002               	movlw	2	; select bank4/5
 10171  0FAF  3F4D               	moviw [13]fsr1
 10172  0FB0  00F2               	movwf	setMemory_Data@data
 10173  0FB1  3001               	movlw	1
 10174  0FB2  319F  2736  318F   	fcall	_setMemory_Data
 10175                           
 10176                           ;MCU_B1.c: 1065: setMemory_Data(2, product->Data[14]);
 10177  0FB5  0020               	movlb	0	; select bank0
 10178  0FB6  086E               	movf	_product,w
 10179  0FB7  0086               	movwf	6
 10180  0FB8  3002               	movlw	2	; select bank4/5
 10181  0FB9  0087               	movwf	7
 10182  0FBA  3002               	movlw	2	; select bank4/5
 10183  0FBB  3F4E               	moviw [14]fsr1
 10184  0FBC  00F2               	movwf	setMemory_Data@data
 10185  0FBD  3002               	movlw	2
 10186  0FBE  319F  2736  318F   	fcall	_setMemory_Data
 10187                           
 10188                           ;MCU_B1.c: 1067: setMemory_Data(3, product->Data[21]);
 10189  0FC1  0020               	movlb	0	; select bank0
 10190  0FC2  086E               	movf	_product,w
 10191  0FC3  0086               	movwf	6
 10192  0FC4  3002               	movlw	2	; select bank4/5
 10193  0FC5  0087               	movwf	7
 10194  0FC6  3002               	movlw	2	; select bank4/5
 10195  0FC7  3F55               	moviw [21]fsr1
 10196  0FC8  00F2               	movwf	setMemory_Data@data
 10197  0FC9  3003               	movlw	3
 10198  0FCA  319F  2736  318F   	fcall	_setMemory_Data
 10199                           
 10200                           ;MCU_B1.c: 1068: setMemory_Data(4, product->Data[22]);
 10201  0FCD  0020               	movlb	0	; select bank0
 10202  0FCE  086E               	movf	_product,w
 10203  0FCF  0086               	movwf	6
 10204  0FD0  3002               	movlw	2	; select bank4/5
 10205  0FD1  0087               	movwf	7
 10206  0FD2  3002               	movlw	2	; select bank4/5
 10207  0FD3  3F56               	moviw [22]fsr1
 10208  0FD4  00F2               	movwf	setMemory_Data@data
 10209  0FD5  3004               	movlw	4
 10210  0FD6  319F  2736  318F   	fcall	_setMemory_Data
 10211                           
 10212                           ;MCU_B1.c: 1069: setMemory_Data(5, product->Data[23]);
 10213  0FD9  0020               	movlb	0	; select bank0
 10214  0FDA  086E               	movf	_product,w
 10215  0FDB  0086               	movwf	6
 10216  0FDC  3002               	movlw	2	; select bank4/5
 10217  0FDD  0087               	movwf	7
 10218  0FDE  3002               	movlw	2	; select bank4/5
 10219  0FDF  3F57               	moviw [23]fsr1
 10220  0FE0  00F2               	movwf	setMemory_Data@data
 10221  0FE1  3005               	movlw	5
 10222  0FE2  319F  2736  318F   	fcall	_setMemory_Data
 10223                           
 10224                           ;MCU_B1.c: 1070: if (myMain.SaveDimmer == 1) {
 10225  0FE5  0021               	movlb	1	; select bank1
 10226  0FE6  1EC9               	btfss	(_myMain^(0+128)+10),5
 10227  0FE7  2FF1               	goto	l8970
 10228                           
 10229                           ;MCU_B1.c: 1071: myMain.SaveDimmer = 0;
 10230  0FE8  12C9               	bcf	(_myMain^(0+128)+10),5
 10231                           
 10232                           ;MCU_B1.c: 1072: setMemory_Data(30, 0xaa);
 10233  0FE9  30AA               	movlw	170
 10234  0FEA  00F6               	movwf	??_Flash_Memory_Modify
 10235  0FEB  0876               	movf	??_Flash_Memory_Modify,w
 10236  0FEC  00F2               	movwf	setMemory_Data@data
 10237  0FED  301E               	movlw	30
 10238  0FEE  319F  2736  318F   	fcall	_setMemory_Data
 10239  0FF1                     l8970:	
 10240                           
 10241                           ;MCU_B1.c: 1073: }
 10242                           ;MCU_B1.c: 1075: if (Memory.LoopSave == 1) {
 10243  0FF1  0023               	movlb	3	; select bank3
 10244  0FF2  1D54               	btfss	(_Memory^(0+384)+36),2
 10245  0FF3  2FF8               	goto	l1463
 10246                           
 10247                           ;MCU_B1.c: 1076: Memory.LoopSave = 0;
 10248  0FF4  1154               	bcf	(_Memory^(0+384)+36),2
 10249                           
 10250                           ;MCU_B1.c: 1077: myMain.FirstOpen = 0;
 10251  0FF5  0021               	movlb	1	; select bank1
 10252  0FF6  11BF               	bcf	_myMain^(0+128),3
 10253                           
 10254                           ;MCU_B1.c: 1078: myMain.First = 0;
 10255  0FF7  12BF               	bcf	_myMain^(0+128),5
 10256  0FF8                     l1463:	
 10257                           
 10258                           ;MCU_B1.c: 1080: }
 10259                           ;MCU_B1.c: 1081: GIE = 0;
 10260  0FF8  138B               	bcf	11,7	;volatile
 10261                           
 10262                           ;MCU_B1.c: 1082: Flash_Memory_Erasing();
 10263  0FF9  319F  2785  318F   	fcall	_Flash_Memory_Erasing
 10264                           
 10265                           ;MCU_B1.c: 1083: Flash_Memory_Write();
 10266  0FFC  3195  250F         	fcall	_Flash_Memory_Write
 10267                           
 10268                           ;MCU_B1.c: 1084: GIE = 1;
 10269  0FFE  178B               	bsf	11,7	;volatile
 10270  0FFF  0008               	return
 10271  1000                     __end_of_Flash_Memory_Modify:	
 10272                           
 10273                           	psect	text65
 10274  1F85                     __ptext65:	
 10275 ;; *************** function _Flash_Memory_Erasing *****************
 10276 ;; Defined at:
 10277 ;;		line 1046 in file "../src/MCU_B1.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;		None
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;		None               void
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0, pclath, cstack
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;Total ram usage:        0 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    4
 10298 ;; This function calls:
 10299 ;;		_Flash_Memory_Unlock
 10300 ;; This function is called by:
 10301 ;;		_Flash_Memory_Modify
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           
 10306                           ;psect for function _Flash_Memory_Erasing
 10307  1F85                     _Flash_Memory_Erasing:	
 10308                           
 10309                           ;MCU_B1.c: 1047: CFGS = 0;
 10310                           
 10311                           ;incstack = 0
 10312                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 10313  1F85  0023               	movlb	3	; select bank3
 10314  1F86  1315               	bcf	21,6	;volatile
 10315                           
 10316                           ;MCU_B1.c: 1048: PMADRH = 0x30;
 10317  1F87  3030               	movlw	48
 10318  1F88  0092               	movwf	18	;volatile
 10319                           
 10320                           ;MCU_B1.c: 1049: PMADRL = 0x00;
 10321  1F89  0191               	clrf	17	;volatile
 10322                           
 10323                           ;MCU_B1.c: 1050: FREE = 1;
 10324  1F8A  1615               	bsf	21,4	;volatile
 10325                           
 10326                           ;MCU_B1.c: 1051: WREN = 1;
 10327  1F8B  1515               	bsf	21,2	;volatile
 10328                           
 10329                           ;MCU_B1.c: 1052: Flash_Memory_Unlock();
 10330  1F8C  319F  270F         	fcall	_Flash_Memory_Unlock
 10331                           
 10332                           ;MCU_B1.c: 1053: WREN = 0;
 10333  1F8E  0023               	movlb	3	; select bank3
 10334  1F8F  1115               	bcf	21,2	;volatile
 10335  1F90  0008               	return
 10336  1F91                     __end_of_Flash_Memory_Erasing:	
 10337                           
 10338                           	psect	text66
 10339  02B8                     __ptext66:	
 10340 ;; *************** function _Flash_Memory_Initialization *****************
 10341 ;; Defined at:
 10342 ;;		line 934 in file "../src/MCU_B1.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;		None
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;  value           1    7[COMMON] unsigned char 
 10347 ;; Return value:  Size  Location     Type
 10348 ;;		None               void
 10349 ;; Registers used:
 10350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;Total ram usage:        2 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; Hardware stack levels required when called:    5
 10363 ;; This function calls:
 10364 ;;		_Flash_Memory_Read
 10365 ;;		_Flash_Memory_Write
 10366 ;;		_setMemory_Data
 10367 ;; This function is called by:
 10368 ;;		_main
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           
 10373                           ;psect for function _Flash_Memory_Initialization
 10374  02B8                     _Flash_Memory_Initialization:	
 10375                           
 10376                           ;MCU_B1.c: 935: char value = 0;
 10377                           
 10378                           ;incstack = 0
 10379                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 10380  02B8  01F7               	clrf	Flash_Memory_Initialization@value
 10381                           
 10382                           ;MCU_B1.c: 936: if (Flash_Memory_Read(31) == 0xaa) {
 10383  02B9  301F               	movlw	31
 10384  02BA  3191  2144  3182   	fcall	_Flash_Memory_Read
 10385  02BD  3AAA               	xorlw	170
 10386  02BE  1D03               	skipz
 10387  02BF  2B3A               	goto	l9172
 10388                           
 10389                           ;MCU_B1.c: 937: product->Data[11] = Flash_Memory_Read(6);
 10390  02C0  3006               	movlw	6
 10391  02C1  3191  2144  3182   	fcall	_Flash_Memory_Read
 10392  02C4  00F6               	movwf	??_Flash_Memory_Initialization
 10393  02C5  0020               	movlb	0	; select bank0
 10394  02C6  086E               	movf	_product,w
 10395  02C7  3E0B               	addlw	11
 10396  02C8  0086               	movwf	6
 10397  02C9  3002               	movlw	2	; select bank4/5
 10398  02CA  0087               	movwf	7
 10399  02CB  0876               	movf	??_Flash_Memory_Initialization,w
 10400  02CC  0081               	movwf	1
 10401                           
 10402                           ;MCU_B1.c: 938: product->Data[12] = Flash_Memory_Read(0);
 10403  02CD  3000               	movlw	0
 10404  02CE  3191  2144  3182   	fcall	_Flash_Memory_Read
 10405  02D1  00F6               	movwf	??_Flash_Memory_Initialization
 10406  02D2  0020               	movlb	0	; select bank0
 10407  02D3  086E               	movf	_product,w
 10408  02D4  3E0C               	addlw	12
 10409  02D5  0086               	movwf	6
 10410  02D6  3002               	movlw	2	; select bank4/5
 10411  02D7  0087               	movwf	7
 10412  02D8  0876               	movf	??_Flash_Memory_Initialization,w
 10413  02D9  0081               	movwf	1
 10414                           
 10415                           ;MCU_B1.c: 939: product->Data[13] = Flash_Memory_Read(1);
 10416  02DA  3001               	movlw	1
 10417  02DB  3191  2144  3182   	fcall	_Flash_Memory_Read
 10418  02DE  00F6               	movwf	??_Flash_Memory_Initialization
 10419  02DF  0020               	movlb	0	; select bank0
 10420  02E0  086E               	movf	_product,w
 10421  02E1  3E0D               	addlw	13
 10422  02E2  0086               	movwf	6
 10423  02E3  3002               	movlw	2	; select bank4/5
 10424  02E4  0087               	movwf	7
 10425  02E5  0876               	movf	??_Flash_Memory_Initialization,w
 10426  02E6  0081               	movwf	1
 10427                           
 10428                           ;MCU_B1.c: 940: product->Data[14] = Flash_Memory_Read(2);
 10429  02E7  3002               	movlw	2
 10430  02E8  3191  2144  3182   	fcall	_Flash_Memory_Read
 10431  02EB  00F6               	movwf	??_Flash_Memory_Initialization
 10432  02EC  0020               	movlb	0	; select bank0
 10433  02ED  086E               	movf	_product,w
 10434  02EE  3E0E               	addlw	14
 10435  02EF  0086               	movwf	6
 10436  02F0  3002               	movlw	2	; select bank4/5
 10437  02F1  0087               	movwf	7
 10438  02F2  0876               	movf	??_Flash_Memory_Initialization,w
 10439  02F3  0081               	movwf	1
 10440                           
 10441                           ;MCU_B1.c: 943: product->Data[21] = Flash_Memory_Read(3);
 10442  02F4  3003               	movlw	3
 10443  02F5  3191  2144  3182   	fcall	_Flash_Memory_Read
 10444  02F8  00F6               	movwf	??_Flash_Memory_Initialization
 10445  02F9  0020               	movlb	0	; select bank0
 10446  02FA  086E               	movf	_product,w
 10447  02FB  3E15               	addlw	21
 10448  02FC  0086               	movwf	6
 10449  02FD  3002               	movlw	2	; select bank4/5
 10450  02FE  0087               	movwf	7
 10451  02FF  0876               	movf	??_Flash_Memory_Initialization,w
 10452  0300  0081               	movwf	1
 10453                           
 10454                           ;MCU_B1.c: 944: product->Data[22] = Flash_Memory_Read(4);
 10455  0301  3004               	movlw	4
 10456  0302  3191  2144  3182   	fcall	_Flash_Memory_Read
 10457  0305  00F6               	movwf	??_Flash_Memory_Initialization
 10458  0306  0020               	movlb	0	; select bank0
 10459  0307  086E               	movf	_product,w
 10460  0308  3E16               	addlw	22
 10461  0309  0086               	movwf	6
 10462  030A  3002               	movlw	2	; select bank4/5
 10463  030B  0087               	movwf	7
 10464  030C  0876               	movf	??_Flash_Memory_Initialization,w
 10465  030D  0081               	movwf	1
 10466                           
 10467                           ;MCU_B1.c: 945: product->Data[23] = Flash_Memory_Read(5);
 10468  030E  3005               	movlw	5
 10469  030F  3191  2144  3182   	fcall	_Flash_Memory_Read
 10470  0312  00F6               	movwf	??_Flash_Memory_Initialization
 10471  0313  0020               	movlb	0	; select bank0
 10472  0314  086E               	movf	_product,w
 10473  0315  3E17               	addlw	23
 10474  0316  0086               	movwf	6
 10475  0317  3002               	movlw	2	; select bank4/5
 10476  0318  0087               	movwf	7
 10477  0319  0876               	movf	??_Flash_Memory_Initialization,w
 10478  031A  0081               	movwf	1
 10479                           
 10480                           ;MCU_B1.c: 952: if (product->Data[12] == 0xff && product->Data[13] == 0xff && product->D
      +                          ata[14] == 0xff) {
 10481  031B  086E               	movf	_product,w
 10482  031C  3E0C               	addlw	12
 10483  031D  0086               	movwf	6
 10484  031E  3002               	movlw	2	; select bank4/5
 10485  031F  0087               	movwf	7
 10486  0320  0801               	movf	1,w
 10487  0321  3AFF               	xorlw	255
 10488  0322  1D03               	skipz
 10489  0323  0008               	return
 10490  0324  086E               	movf	_product,w
 10491  0325  3E0D               	addlw	13
 10492  0326  0086               	movwf	6
 10493  0327  3002               	movlw	2	; select bank4/5
 10494  0328  0087               	movwf	7
 10495  0329  0801               	movf	1,w
 10496  032A  3AFF               	xorlw	255
 10497  032B  1D03               	skipz
 10498  032C  0008               	return
 10499  032D  086E               	movf	_product,w
 10500  032E  3E0E               	addlw	14
 10501  032F  0086               	movwf	6
 10502  0330  3002               	movlw	2	; select bank4/5
 10503  0331  0087               	movwf	7
 10504  0332  0801               	movf	1,w
 10505  0333  3AFF               	xorlw	255
 10506  0334  1D03               	skipz
 10507  0335  0008               	return
 10508                           
 10509                           ;MCU_B1.c: 953: myMain.FirstOpen = 1;
 10510  0336  0021               	movlb	1	; select bank1
 10511  0337  15BF               	bsf	_myMain^(0+128),3
 10512                           
 10513                           ;MCU_B1.c: 954: myMain.First = 1;
 10514  0338  16BF               	bsf	_myMain^(0+128),5
 10515                           
 10516                           ;MCU_B1.c: 955: }
 10517                           ;MCU_B1.c: 956: } else {
 10518  0339  0008               	return
 10519  033A                     l9172:	
 10520                           
 10521                           ;MCU_B1.c: 958: setMemory_Data(0, 0xff);
 10522  033A  30FF               	movlw	255
 10523  033B  00F6               	movwf	??_Flash_Memory_Initialization
 10524  033C  0876               	movf	??_Flash_Memory_Initialization,w
 10525  033D  00F2               	movwf	setMemory_Data@data
 10526  033E  3000               	movlw	0
 10527  033F  319F  2736  3182   	fcall	_setMemory_Data
 10528                           
 10529                           ;MCU_B1.c: 959: setMemory_Data(1, 0xff);
 10530  0342  30FF               	movlw	255
 10531  0343  00F6               	movwf	??_Flash_Memory_Initialization
 10532  0344  0876               	movf	??_Flash_Memory_Initialization,w
 10533  0345  00F2               	movwf	setMemory_Data@data
 10534  0346  3001               	movlw	1
 10535  0347  319F  2736  3182   	fcall	_setMemory_Data
 10536                           
 10537                           ;MCU_B1.c: 960: setMemory_Data(2, 0xff);
 10538  034A  30FF               	movlw	255
 10539  034B  00F6               	movwf	??_Flash_Memory_Initialization
 10540  034C  0876               	movf	??_Flash_Memory_Initialization,w
 10541  034D  00F2               	movwf	setMemory_Data@data
 10542  034E  3002               	movlw	2
 10543  034F  319F  2736  3182   	fcall	_setMemory_Data
 10544                           
 10545                           ;MCU_B1.c: 961: setMemory_Data(3, 0xff);
 10546  0352  30FF               	movlw	255
 10547  0353  00F6               	movwf	??_Flash_Memory_Initialization
 10548  0354  0876               	movf	??_Flash_Memory_Initialization,w
 10549  0355  00F2               	movwf	setMemory_Data@data
 10550  0356  3003               	movlw	3
 10551  0357  319F  2736  3182   	fcall	_setMemory_Data
 10552                           
 10553                           ;MCU_B1.c: 962: setMemory_Data(4, 0xff);
 10554  035A  30FF               	movlw	255
 10555  035B  00F6               	movwf	??_Flash_Memory_Initialization
 10556  035C  0876               	movf	??_Flash_Memory_Initialization,w
 10557  035D  00F2               	movwf	setMemory_Data@data
 10558  035E  3004               	movlw	4
 10559  035F  319F  2736  3182   	fcall	_setMemory_Data
 10560                           
 10561                           ;MCU_B1.c: 963: setMemory_Data(5, 0xff);
 10562  0362  30FF               	movlw	255
 10563  0363  00F6               	movwf	??_Flash_Memory_Initialization
 10564  0364  0876               	movf	??_Flash_Memory_Initialization,w
 10565  0365  00F2               	movwf	setMemory_Data@data
 10566  0366  3005               	movlw	5
 10567  0367  319F  2736  3182   	fcall	_setMemory_Data
 10568                           
 10569                           ;MCU_B1.c: 964: setMemory_Data(6, 0xff);
 10570  036A  30FF               	movlw	255
 10571  036B  00F6               	movwf	??_Flash_Memory_Initialization
 10572  036C  0876               	movf	??_Flash_Memory_Initialization,w
 10573  036D  00F2               	movwf	setMemory_Data@data
 10574  036E  3006               	movlw	6
 10575  036F  319F  2736  3182   	fcall	_setMemory_Data
 10576                           
 10577                           ;MCU_B1.c: 965: setMemory_Data(31, 0xaa);
 10578  0372  30AA               	movlw	170
 10579  0373  00F6               	movwf	??_Flash_Memory_Initialization
 10580  0374  0876               	movf	??_Flash_Memory_Initialization,w
 10581  0375  00F2               	movwf	setMemory_Data@data
 10582  0376  301F               	movlw	31
 10583  0377  319F  2736  3182   	fcall	_setMemory_Data
 10584                           
 10585                           ;MCU_B1.c: 970: GIE = 0;
 10586  037A  138B               	bcf	11,7	;volatile
 10587                           
 10588                           ;MCU_B1.c: 971: Flash_Memory_Write();
 10589  037B  3195  250F         	fcall	_Flash_Memory_Write
 10590                           
 10591                           ;MCU_B1.c: 972: GIE = 1;
 10592  037D  178B               	bsf	11,7	;volatile
 10593                           
 10594                           ;MCU_B1.c: 973: myMain.FirstOpen = 1;
 10595  037E  0021               	movlb	1	; select bank1
 10596  037F  15BF               	bsf	_myMain^(0+128),3
 10597                           
 10598                           ;MCU_B1.c: 974: myMain.First = 1;
 10599  0380  16BF               	bsf	_myMain^(0+128),5
 10600                           
 10601                           ;MCU_B1.c: 975: myMain.InitDimmer = 1;
 10602  0381  1649               	bsf	(_myMain^(0+128)+10),4
 10603  0382  0008               	return
 10604  0383                     __end_of_Flash_Memory_Initialization:	
 10605                           
 10606                           	psect	text67
 10607  1F36                     __ptext67:	
 10608 ;; *************** function _setMemory_Data *****************
 10609 ;; Defined at:
 10610 ;;		line 1099 in file "../src/MCU_B1.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  address         1    wreg     unsigned char 
 10613 ;;  data            1    2[COMMON] unsigned char 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  address         1    4[COMMON] unsigned char 
 10616 ;; Return value:  Size  Location     Type
 10617 ;;		None               void
 10618 ;; Registers used:
 10619 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;Total ram usage:        3 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; Hardware stack levels required when called:    3
 10632 ;; This function calls:
 10633 ;;		Nothing
 10634 ;; This function is called by:
 10635 ;;		_Flash_Memory_Initialization
 10636 ;;		_Flash_Memory_Modify
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           
 10641                           ;psect for function _setMemory_Data
 10642  1F36                     _setMemory_Data:	
 10643                           
 10644                           ;incstack = 0
 10645                           ; Regs used in _setMemory_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
 10646                           ;setMemory_Data@address stored from wreg
 10647  1F36  00F4               	movwf	setMemory_Data@address
 10648                           
 10649                           ;MCU_B1.c: 1100: Memory.Data[address] = data;
 10650  1F37  0872               	movf	setMemory_Data@data,w
 10651  1F38  00F3               	movwf	??_setMemory_Data
 10652  1F39  0874               	movf	setMemory_Data@address,w
 10653  1F3A  3EB0               	addlw	_Memory& (0+255)
 10654  1F3B  0086               	movwf	6
 10655  1F3C  3001               	movlw	1	; select bank3/4
 10656  1F3D  0087               	movwf	7
 10657  1F3E  0873               	movf	??_setMemory_Data,w
 10658  1F3F  0081               	movwf	1
 10659  1F40  0008               	return
 10660  1F41                     __end_of_setMemory_Data:	
 10661                           
 10662                           	psect	text68
 10663  150F                     __ptext68:	
 10664 ;; *************** function _Flash_Memory_Write *****************
 10665 ;; Defined at:
 10666 ;;		line 1027 in file "../src/MCU_B1.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;		None
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  i               1    3[COMMON] unsigned char 
 10671 ;; Return value:  Size  Location     Type
 10672 ;;		None               void
 10673 ;; Registers used:
 10674 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10675 ;; Tracked objects:
 10676 ;;		On entry : 0/0
 10677 ;;		On exit  : 0/0
 10678 ;;		Unchanged: 0/0
 10679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;Total ram usage:        2 bytes
 10685 ;; Hardware stack levels used:    1
 10686 ;; Hardware stack levels required when called:    4
 10687 ;; This function calls:
 10688 ;;		_Flash_Memory_Unlock
 10689 ;; This function is called by:
 10690 ;;		_Flash_Memory_Initialization
 10691 ;;		_Flash_Memory_Modify
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           
 10696                           ;psect for function _Flash_Memory_Write
 10697  150F                     _Flash_Memory_Write:	
 10698                           
 10699                           ;MCU_B1.c: 1028: char i = 0;
 10700                           
 10701                           ;incstack = 0
 10702                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10703  150F  01F3               	clrf	Flash_Memory_Write@i
 10704                           
 10705                           ;MCU_B1.c: 1029: CFGS = 0;
 10706  1510  0023               	movlb	3	; select bank3
 10707  1511  1315               	bcf	21,6	;volatile
 10708                           
 10709                           ;MCU_B1.c: 1030: PMADRH = 0x30;
 10710  1512  3030               	movlw	48
 10711  1513  0092               	movwf	18	;volatile
 10712                           
 10713                           ;MCU_B1.c: 1031: PMDATH = 0;
 10714  1514  0194               	clrf	20	;volatile
 10715                           
 10716                           ;MCU_B1.c: 1032: FREE = 0;
 10717  1515  1215               	bcf	21,4	;volatile
 10718                           
 10719                           ;MCU_B1.c: 1033: LWLO = 1;
 10720  1516  1695               	bsf	21,5	;volatile
 10721                           
 10722                           ;MCU_B1.c: 1034: WREN = 1;
 10723  1517  1515               	bsf	21,2	;volatile
 10724                           
 10725                           ;MCU_B1.c: 1035: for (i = 0; i < 32; i++) {
 10726  1518  01F3               	clrf	Flash_Memory_Write@i
 10727  1519  3020               	movlw	32
 10728  151A  0273               	subwf	Flash_Memory_Write@i,w
 10729  151B  1803               	btfsc	3,0
 10730  151C  2D32               	goto	l1453
 10731  151D                     l8792:	
 10732                           
 10733                           ;MCU_B1.c: 1036: PMADRL = i;
 10734  151D  0873               	movf	Flash_Memory_Write@i,w
 10735  151E  0023               	movlb	3	; select bank3
 10736  151F  0091               	movwf	17	;volatile
 10737                           
 10738                           ;MCU_B1.c: 1037: PMDATL = Memory.Data[i];
 10739  1520  0873               	movf	Flash_Memory_Write@i,w
 10740  1521  3EB0               	addlw	_Memory& (0+255)
 10741  1522  0086               	movwf	6
 10742  1523  3001               	movlw	1	; select bank3/4
 10743  1524  0087               	movwf	7
 10744  1525  0801               	movf	1,w
 10745  1526  0093               	movwf	19	;volatile
 10746                           
 10747                           ;MCU_B1.c: 1038: Flash_Memory_Unlock();
 10748  1527  319F  270F  3195   	fcall	_Flash_Memory_Unlock
 10749  152A  3001               	movlw	1
 10750  152B  00F2               	movwf	??_Flash_Memory_Write
 10751  152C  0872               	movf	??_Flash_Memory_Write,w
 10752  152D  07F3               	addwf	Flash_Memory_Write@i,f
 10753  152E  3020               	movlw	32
 10754  152F  0273               	subwf	Flash_Memory_Write@i,w
 10755  1530  1C03               	skipc
 10756  1531  2D1D               	goto	l8792
 10757  1532                     l1453:	
 10758                           
 10759                           ;MCU_B1.c: 1039: }
 10760                           ;MCU_B1.c: 1040: LWLO = 0;
 10761  1532  0023               	movlb	3	; select bank3
 10762  1533  1295               	bcf	21,5	;volatile
 10763                           
 10764                           ;MCU_B1.c: 1041: Flash_Memory_Unlock();
 10765  1534  319F  270F         	fcall	_Flash_Memory_Unlock
 10766                           
 10767                           ;MCU_B1.c: 1042: WREN = 0;
 10768  1536  0023               	movlb	3	; select bank3
 10769  1537  1115               	bcf	21,2	;volatile
 10770  1538  0008               	return
 10771  1539                     __end_of_Flash_Memory_Write:	
 10772                           
 10773                           	psect	text69
 10774  1F0F                     __ptext69:	
 10775 ;; *************** function _Flash_Memory_Unlock *****************
 10776 ;; Defined at:
 10777 ;;		line 1006 in file "../src/MCU_B1.c"
 10778 ;; Parameters:    Size  Location     Type
 10779 ;;		None
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;		None
 10782 ;; Return value:  Size  Location     Type
 10783 ;;		None               void
 10784 ;; Registers used:
 10785 ;;		wreg
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;Total ram usage:        0 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:    3
 10798 ;; This function calls:
 10799 ;;		Nothing
 10800 ;; This function is called by:
 10801 ;;		_Flash_Memory_Write
 10802 ;;		_Flash_Memory_Erasing
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function _Flash_Memory_Unlock
 10808  1F0F                     _Flash_Memory_Unlock:	
 10809                           
 10810                           ;MCU_B1.c: 1007: PMCON2 = 0x55;
 10811                           
 10812                           ;incstack = 0
 10813                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 10814  1F0F  3055               	movlw	85
 10815  1F10  0023               	movlb	3	; select bank3
 10816  1F11  0096               	movwf	22	;volatile
 10817                           
 10818                           ;MCU_B1.c: 1008: PMCON2 = 0xaa;
 10819  1F12  30AA               	movlw	170
 10820  1F13  0096               	movwf	22	;volatile
 10821                           
 10822                           ;MCU_B1.c: 1009: WR = 1;
 10823  1F14  1495               	bsf	21,1	;volatile
 10824                           
 10825                           ;MCU_B1.c: 1010: __nop();
 10826  1F15  0000               	nop
 10827                           
 10828                           ;MCU_B1.c: 1011: __nop();
 10829  1F16  0000               	nop
 10830  1F17  0008               	return
 10831  1F18                     __end_of_Flash_Memory_Unlock:	
 10832                           
 10833                           	psect	text70
 10834  1144                     __ptext70:	
 10835 ;; *************** function _Flash_Memory_Read *****************
 10836 ;; Defined at:
 10837 ;;		line 1015 in file "../src/MCU_B1.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;  address         1    wreg     unsigned char 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  address         1    4[COMMON] unsigned char 
 10842 ;;  ret             1    5[COMMON] unsigned char 
 10843 ;;  i               1    3[COMMON] unsigned char 
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      unsigned char 
 10846 ;; Registers used:
 10847 ;;		wreg, status,2
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;Total ram usage:        4 bytes
 10858 ;; Hardware stack levels used:    1
 10859 ;; Hardware stack levels required when called:    3
 10860 ;; This function calls:
 10861 ;;		Nothing
 10862 ;; This function is called by:
 10863 ;;		_Flash_Memory_Initialization
 10864 ;;		_Flash_Memory_Modify
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           
 10869                           ;psect for function _Flash_Memory_Read
 10870  1144                     _Flash_Memory_Read:	
 10871                           
 10872                           ;incstack = 0
 10873                           ; Regs used in _Flash_Memory_Read: [wreg+status,2]
 10874                           ;Flash_Memory_Read@address stored from wreg
 10875  1144  00F4               	movwf	Flash_Memory_Read@address
 10876                           
 10877                           ;MCU_B1.c: 1016: char i = 0, ret = 0;
 10878  1145  01F3               	clrf	Flash_Memory_Read@i
 10879  1146  01F5               	clrf	Flash_Memory_Read@ret
 10880                           
 10881                           ;MCU_B1.c: 1017: PMADRH = 0x30;
 10882  1147  3030               	movlw	48
 10883  1148  0023               	movlb	3	; select bank3
 10884  1149  0092               	movwf	18	;volatile
 10885                           
 10886                           ;MCU_B1.c: 1018: PMADRL = address;
 10887  114A  0874               	movf	Flash_Memory_Read@address,w
 10888  114B  0091               	movwf	17	;volatile
 10889                           
 10890                           ;MCU_B1.c: 1019: CFGS = 0;
 10891  114C  1315               	bcf	21,6	;volatile
 10892                           
 10893                           ;MCU_B1.c: 1020: RD = 1;
 10894  114D  1415               	bsf	21,0	;volatile
 10895                           
 10896                           ;MCU_B1.c: 1021: i = PMDATH;
 10897  114E  0814               	movf	20,w	;volatile
 10898  114F  00F2               	movwf	??_Flash_Memory_Read
 10899  1150  0872               	movf	??_Flash_Memory_Read,w
 10900  1151  00F3               	movwf	Flash_Memory_Read@i
 10901                           
 10902                           ;MCU_B1.c: 1022: ret = PMDATL;
 10903  1152  0813               	movf	19,w	;volatile
 10904  1153  00F2               	movwf	??_Flash_Memory_Read
 10905  1154  0872               	movf	??_Flash_Memory_Read,w
 10906  1155  00F5               	movwf	Flash_Memory_Read@ret
 10907                           
 10908                           ;MCU_B1.c: 1023: return ret;
 10909  1156  0875               	movf	Flash_Memory_Read@ret,w
 10910  1157  0008               	return
 10911  1158                     __end_of_Flash_Memory_Read:	
 10912                           
 10913                           	psect	text71
 10914  163F                     __ptext71:	
 10915 ;; *************** function _Exception_Main *****************
 10916 ;; Defined at:
 10917 ;;		line 504 in file "../src/Main_B1.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;		None
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;  error           1    3[BANK0 ] unsigned char 
 10922 ;;  status          1    2[BANK0 ] unsigned char 
 10923 ;;  count           1    1[BANK0 ] unsigned char 
 10924 ;;  lights          1    0[BANK0 ] unsigned char 
 10925 ;; Return value:  Size  Location     Type
 10926 ;;		None               void
 10927 ;; Registers used:
 10928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10937 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10938 ;;Total ram usage:        5 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    5
 10941 ;; This function calls:
 10942 ;;		_getMain_All_Error_Status
 10943 ;;		_setLED
 10944 ;; This function is called by:
 10945 ;;		_main
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           
 10950                           ;psect for function _Exception_Main
 10951  163F                     _Exception_Main:	
 10952                           
 10953                           ;Main_B1.c: 505: char error = getMain_All_Error_Status(0);
 10954                           
 10955                           ;incstack = 0
 10956                           ; Regs used in _Exception_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10957  163F  3000               	movlw	0
 10958  1640  319E  26AB  3196   	fcall	_getMain_All_Error_Status
 10959  1643  00F5               	movwf	??_Exception_Main
 10960  1644  0875               	movf	??_Exception_Main,w
 10961  1645  0020               	movlb	0	; select bank0
 10962  1646  00A3               	movwf	Exception_Main@error
 10963                           
 10964                           ;Main_B1.c: 506: char lights = 0, count = 2;
 10965  1647  01A0               	clrf	Exception_Main@lights
 10966  1648  3002               	movlw	2
 10967  1649  00F5               	movwf	??_Exception_Main
 10968  164A  0875               	movf	??_Exception_Main,w
 10969  164B  00A1               	movwf	Exception_Main@count
 10970                           
 10971                           ;Main_B1.c: 507: char status = 0;
 10972  164C  01A2               	clrf	Exception_Main@status
 10973                           
 10974                           ;Main_B1.c: 509: if (myMain.Error_Run == 1) {
 10975  164D  0021               	movlb	1	; select bank1
 10976  164E  1DC9               	btfss	(_myMain^(0+128)+10),3
 10977  164F  2E5F               	goto	l10572
 10978                           
 10979                           ;Main_B1.c: 510: if (error == 0) {
 10980  1650  0020               	movlb	0	; select bank0
 10981  1651  08A3               	movf	Exception_Main@error,f
 10982  1652  1D03               	skipz
 10983  1653  0008               	return
 10984                           
 10985                           ;Main_B1.c: 511: myMain.Error_Run = 0;
 10986  1654  0021               	movlb	1	; select bank1
 10987  1655  11C9               	bcf	(_myMain^(0+128)+10),3
 10988                           
 10989                           ;Main_B1.c: 516: setLED(error, 110);
 10990  1656  306E               	movlw	110
 10991  1657  00F5               	movwf	??_Exception_Main
 10992  1658  0875               	movf	??_Exception_Main,w
 10993  1659  00F3               	movwf	setLED@command
 10994  165A  0020               	movlb	0	; select bank0
 10995  165B  0823               	movf	Exception_Main@error,w
 10996  165C  318A  2243         	fcall	_setLED
 10997                           
 10998                           ;Main_B1.c: 527: }
 10999                           ;Main_B1.c: 528: } else {
 11000  165E  0008               	return
 11001  165F                     l10572:	
 11002                           
 11003                           ;Main_B1.c: 529: if (error != 0) {
 11004  165F  0020               	movlb	0	; select bank0
 11005  1660  0823               	movf	Exception_Main@error,w
 11006  1661  1903               	btfsc	3,2
 11007  1662  0008               	return
 11008                           
 11009                           ;Main_B1.c: 530: myMain.Error_Run = 1;
 11010  1663  0021               	movlb	1	; select bank1
 11011  1664  15C9               	bsf	(_myMain^(0+128)+10),3
 11012                           
 11013                           ;Main_B1.c: 534: setLED(error, 111);
 11014  1665  306F               	movlw	111
 11015  1666  00F5               	movwf	??_Exception_Main
 11016  1667  0875               	movf	??_Exception_Main,w
 11017  1668  00F3               	movwf	setLED@command
 11018  1669  0020               	movlb	0	; select bank0
 11019  166A  0823               	movf	Exception_Main@error,w
 11020  166B  318A  2243  3196   	fcall	_setLED
 11021                           
 11022                           ;Main_B1.c: 591: }
 11023                           
 11024                           ;Main_B1.c: 590: break;
 11025                           
 11026                           ;Main_B1.c: 566: case 3:
 11027                           
 11028                           ;Main_B1.c: 565: break;
 11029                           
 11030                           ;Main_B1.c: 544: case 2:
 11031                           
 11032                           ;Main_B1.c: 543: switch (error) {
 11033  166E  0020               	movlb	0	; select bank0
 11034  166F  0823               	movf	Exception_Main@error,w
 11035                           
 11036                           ; Switch size 1, requested type "space"
 11037                           ; Number of cases is 2, Range of values is 2 to 3
 11038                           ; switch strategies available:
 11039                           ; Name         Instructions Cycles
 11040                           ; simple_byte            7     4 (average)
 11041                           ; direct_byte           13     9 (fixed)
 11042                           ; jumptable            263     9 (fixed)
 11043                           ;	Chosen strategy is simple_byte
 11044  1670  3A02               	xorlw	2	; case 2
 11045  1671  1903               	skipnz
 11046  1672  2E78               	goto	l1665
 11047  1673  3A01               	xorlw	1	; case 3
 11048  1674  1903               	skipnz
 11049  1675  2E78               	goto	l1665
 11050  1676  2E78               	goto	l1665
 11051  1677  0008               	return
 11052  1678                     l1665:	
 11053  1678  0008               	return
 11054  1679                     __end_of_Exception_Main:	
 11055                           
 11056                           	psect	text72
 11057  1EAB                     __ptext72:	
 11058 ;; *************** function _getMain_All_Error_Status *****************
 11059 ;; Defined at:
 11060 ;;		line 429 in file "../src/Main_B1.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  command         1    wreg     unsigned char 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;  command         1    0[COMMON] unsigned char 
 11065 ;;  status          1    2[COMMON] unsigned char 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      unsigned char 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;Total ram usage:        1 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    3
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		_Exception_Main
 11086 ;;		_getRxData
 11087 ;;		_setSw_Main
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           
 11092                           ;psect for function _getMain_All_Error_Status
 11093  1EAB                     _getMain_All_Error_Status:	
 11094                           
 11095                           ;Main_B1.c: 430: char status = 0;
 11096                           
 11097                           ;incstack = 0
 11098                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
 11099  1EAB  01F2               	clrf	getMain_All_Error_Status@status
 11100                           
 11101                           ;Main_B1.c: 460: return status;
 11102  1EAC  0872               	movf	getMain_All_Error_Status@status,w
 11103  1EAD  0008               	return
 11104  1EAE                     __end_of_getMain_All_Error_Status:	
 11105                           
 11106                           	psect	text73
 11107  109A                     __ptext73:	
 11108 ;; *************** function _DimmerLights_Main *****************
 11109 ;; Defined at:
 11110 ;;		line 867 in file "../src/Dimmer_B1.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;		None
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;		None
 11115 ;; Return value:  Size  Location     Type
 11116 ;;		None               void
 11117 ;; Registers used:
 11118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;Total ram usage:        0 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    8
 11131 ;; This function calls:
 11132 ;;		_DimmerLights_DimmingFunction
 11133 ;;		_setDimmerLights_Main
 11134 ;; This function is called by:
 11135 ;;		_main
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           
 11140                           ;psect for function _DimmerLights_Main
 11141  109A                     _DimmerLights_Main:	
 11142                           
 11143                           ;Dimmer_B1.c: 879: setDimmerLights_Main(1);
 11144                           
 11145                           ;incstack = 0
 11146                           ; Regs used in _DimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11147  109A  3001               	movlw	1
 11148  109B  318B  2368  3190   	fcall	_setDimmerLights_Main
 11149                           
 11150                           ;Dimmer_B1.c: 882: DimmerLights_DimmingFunction(1);
 11151  109E  3001               	movlw	1
 11152  109F  3186  26F7  3190   	fcall	_DimmerLights_DimmingFunction
 11153                           
 11154                           ;Dimmer_B1.c: 892: setDimmerLights_Main(2);
 11155  10A2  3002               	movlw	2
 11156  10A3  318B  2368  3190   	fcall	_setDimmerLights_Main
 11157                           
 11158                           ;Dimmer_B1.c: 894: DimmerLights_DimmingFunction(2);
 11159  10A6  3002               	movlw	2
 11160  10A7  3186  26F7         	fcall	_DimmerLights_DimmingFunction
 11161  10A9  0008               	return
 11162  10AA                     __end_of_DimmerLights_Main:	
 11163                           
 11164                           	psect	text74
 11165  0B68                     __ptext74:	
 11166 ;; *************** function _setDimmerLights_Main *****************
 11167 ;; Defined at:
 11168 ;;		line 924 in file "../src/Dimmer_B1.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  lights          1    wreg     unsigned char 
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;  lights          1   69[BANK0 ] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;		None               void
 11175 ;; Registers used:
 11176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11186 ;;Total ram usage:        1 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    7
 11189 ;; This function calls:
 11190 ;;		_DimmerLights_SelectPointer
 11191 ;;		_getDimmerLights_Allow_Condition
 11192 ;;		_getMain_All_LightsStatus
 11193 ;;		_setDimmerLights_Dimming
 11194 ;;		_setDimmerLights_OnOff
 11195 ;; This function is called by:
 11196 ;;		_DimmerLights_Main
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _setDimmerLights_Main
 11202  0B68                     _setDimmerLights_Main:	
 11203                           
 11204                           ;incstack = 0
 11205                           ; Regs used in _setDimmerLights_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11206                           ;setDimmerLights_Main@lights stored from wreg
 11207  0B68  0020               	movlb	0	; select bank0
 11208  0B69  00E5               	movwf	setDimmerLights_Main@lights
 11209                           
 11210                           ;Dimmer_B1.c: 926: DimmerLights_SelectPointer(lights);
 11211  0B6A  0865               	movf	setDimmerLights_Main@lights,w
 11212  0B6B  3191  2181  318B   	fcall	_DimmerLights_SelectPointer
 11213                           
 11214                           ;Dimmer_B1.c: 927: if (DimmerLights->Trigger == 1) {
 11215  0B6E  0020               	movlb	0	; select bank0
 11216  0B6F  086A               	movf	_DimmerLights,w
 11217  0B70  0086               	movwf	6
 11218  0B71  3001               	movlw	1	; select bank2/3
 11219  0B72  0087               	movwf	7
 11220  0B73  1C81               	btfss	1,1
 11221  0B74  2B94               	goto	l10296
 11222                           
 11223                           ;Dimmer_B1.c: 928: if (getDimmerLights_Allow_Condition(lights) == 0) {
 11224  0B75  0865               	movf	setDimmerLights_Main@lights,w
 11225  0B76  3194  2427  318B   	fcall	_getDimmerLights_Allow_Condition
 11226  0B79  3800               	iorlw	0
 11227  0B7A  1D03               	skipz
 11228  0B7B  0008               	return
 11229                           
 11230                           ;Dimmer_B1.c: 929: DimmerLights->Trigger = 0;
 11231  0B7C  0020               	movlb	0	; select bank0
 11232  0B7D  086A               	movf	_DimmerLights,w
 11233  0B7E  0086               	movwf	6
 11234  0B7F  3001               	movlw	1	; select bank2/3
 11235  0B80  0087               	movwf	7
 11236  0B81  1081               	bcf	1,1
 11237                           
 11238                           ;Dimmer_B1.c: 930: if (DimmerLights->Switch == 1) {
 11239  0B82  086A               	movf	_DimmerLights,w
 11240  0B83  0086               	movwf	6
 11241  0B84  3001               	movlw	1	; select bank2/3
 11242  0B85  0087               	movwf	7
 11243  0B86  1D01               	btfss	1,2
 11244  0B87  2B8E               	goto	l10294
 11245                           
 11246                           ;Dimmer_B1.c: 931: setDimmerLights_OnOff(lights, 1);
 11247  0B88  01E1               	clrf	setDimmerLights_OnOff@command
 11248  0B89  0AE1               	incf	setDimmerLights_OnOff@command,f
 11249  0B8A  0865               	movf	setDimmerLights_Main@lights,w
 11250  0B8B  3184  2442         	fcall	_setDimmerLights_OnOff
 11251                           
 11252                           ;Dimmer_B1.c: 932: } else {
 11253  0B8D  0008               	return
 11254  0B8E                     l10294:	
 11255                           
 11256                           ;Dimmer_B1.c: 933: setDimmerLights_OnOff(lights, 0);
 11257  0B8E  0020               	movlb	0	; select bank0
 11258  0B8F  01E1               	clrf	setDimmerLights_OnOff@command
 11259  0B90  0865               	movf	setDimmerLights_Main@lights,w
 11260  0B91  3184  2442         	fcall	_setDimmerLights_OnOff
 11261                           
 11262                           ;Dimmer_B1.c: 934: }
 11263                           ;Dimmer_B1.c: 935: }
 11264                           ;Dimmer_B1.c: 936: } else {
 11265  0B93  0008               	return
 11266  0B94                     l10296:	
 11267                           
 11268                           ;Dimmer_B1.c: 937: if (getMain_All_LightsStatus() == 1) {
 11269  0B94  319F  27D3  318B   	fcall	_getMain_All_LightsStatus
 11270  0B97  3A01               	xorlw	1
 11271  0B98  1D03               	skipz
 11272  0B99  2BC0               	goto	l10308
 11273                           
 11274                           ;Dimmer_B1.c: 938: if (DimmerLights->DimmingTrigger == 1) {
 11275  0B9A  0020               	movlb	0	; select bank0
 11276  0B9B  086A               	movf	_DimmerLights,w
 11277  0B9C  0086               	movwf	6
 11278  0B9D  3001               	movlw	1	; select bank2/3
 11279  0B9E  0087               	movwf	7
 11280  0B9F  1E01               	btfss	1,4
 11281  0BA0  0008               	return
 11282                           
 11283                           ;Dimmer_B1.c: 939: if (getDimmerLights_Allow_Condition(lights) == 0) {
 11284  0BA1  0865               	movf	setDimmerLights_Main@lights,w
 11285  0BA2  3194  2427  318B   	fcall	_getDimmerLights_Allow_Condition
 11286  0BA5  3800               	iorlw	0
 11287  0BA6  1D03               	skipz
 11288  0BA7  0008               	return
 11289                           
 11290                           ;Dimmer_B1.c: 940: DimmerLights->DimmingTrigger = 0;
 11291  0BA8  0020               	movlb	0	; select bank0
 11292  0BA9  086A               	movf	_DimmerLights,w
 11293  0BAA  0086               	movwf	6
 11294  0BAB  3001               	movlw	1	; select bank2/3
 11295  0BAC  0087               	movwf	7
 11296  0BAD  1201               	bcf	1,4
 11297                           
 11298                           ;Dimmer_B1.c: 941: if (DimmerLights->DimmingSwitch == 1) {
 11299  0BAE  086A               	movf	_DimmerLights,w
 11300  0BAF  0086               	movwf	6
 11301  0BB0  3001               	movlw	1	; select bank2/3
 11302  0BB1  0087               	movwf	7
 11303  0BB2  1E81               	btfss	1,5
 11304  0BB3  2BBA               	goto	l10306
 11305                           
 11306                           ;Dimmer_B1.c: 942: setDimmerLights_Dimming(lights, 1);
 11307  0BB4  01DE               	clrf	setDimmerLights_Dimming@status
 11308  0BB5  0ADE               	incf	setDimmerLights_Dimming@status,f
 11309  0BB6  0865               	movf	setDimmerLights_Main@lights,w
 11310  0BB7  3188  20A5         	fcall	_setDimmerLights_Dimming
 11311                           
 11312                           ;Dimmer_B1.c: 943: } else {
 11313  0BB9  0008               	return
 11314  0BBA                     l10306:	
 11315                           
 11316                           ;Dimmer_B1.c: 944: setDimmerLights_Dimming(lights, 0);
 11317  0BBA  0020               	movlb	0	; select bank0
 11318  0BBB  01DE               	clrf	setDimmerLights_Dimming@status
 11319  0BBC  0865               	movf	setDimmerLights_Main@lights,w
 11320  0BBD  3188  20A5         	fcall	_setDimmerLights_Dimming
 11321                           
 11322                           ;Dimmer_B1.c: 945: }
 11323                           ;Dimmer_B1.c: 946: }
 11324                           ;Dimmer_B1.c: 947: }
 11325                           ;Dimmer_B1.c: 948: } else {
 11326  0BBF  0008               	return
 11327  0BC0                     l10308:	
 11328                           
 11329                           ;Dimmer_B1.c: 949: if (DimmerLights->DimmingTrigger == 1) {
 11330  0BC0  0020               	movlb	0	; select bank0
 11331  0BC1  086A               	movf	_DimmerLights,w
 11332  0BC2  0086               	movwf	6
 11333  0BC3  3001               	movlw	1	; select bank2/3
 11334  0BC4  0087               	movwf	7
 11335  0BC5  1E01               	btfss	1,4
 11336  0BC6  0008               	return
 11337                           
 11338                           ;Dimmer_B1.c: 950: DimmerLights->DimmingTrigger = 0;
 11339  0BC7  086A               	movf	_DimmerLights,w
 11340  0BC8  0086               	movwf	6
 11341  0BC9  3001               	movlw	1	; select bank2/3
 11342  0BCA  0087               	movwf	7
 11343  0BCB  1201               	bcf	1,4
 11344  0BCC  0008               	return
 11345  0BCD                     __end_of_setDimmerLights_Main:	
 11346                           
 11347                           	psect	text75
 11348  0442                     __ptext75:	
 11349 ;; *************** function _setDimmerLights_OnOff *****************
 11350 ;; Defined at:
 11351 ;;		line 1001 in file "../src/Dimmer_B1.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  lights          1    wreg     unsigned char 
 11354 ;;  command         1   65[BANK0 ] unsigned char 
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;  lights          1   68[BANK0 ] unsigned char 
 11357 ;; Return value:  Size  Location     Type
 11358 ;;		None               void
 11359 ;; Registers used:
 11360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11366 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;Total ram usage:        4 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:    6
 11373 ;; This function calls:
 11374 ;;		_DimmerIntr_ValueCalculate
 11375 ;;		_getCmd_Status
 11376 ;;		_getDelayOff_GO
 11377 ;;		_getDimmerLights_PercentToValue
 11378 ;;		_getMain_All_LightsStatus
 11379 ;;		_setCmd_Status
 11380 ;;		_setDelayOff_GO
 11381 ;;		_setDimmerIntr_ControlStatus
 11382 ;;		_setDimmerIntr_DimmingValue
 11383 ;;		_setDimmerIntr_Dimming_RF
 11384 ;;		_setDimmerIntr_MaxmumValue
 11385 ;;		_setDimmerLights_DimmingClose
 11386 ;;		_setLED
 11387 ;;		_setProductData
 11388 ;;		_setRF_DimmerLights
 11389 ;;		_setTxData
 11390 ;; This function is called by:
 11391 ;;		_setDimmerLights_Main
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395                           
 11396                           ;psect for function _setDimmerLights_OnOff
 11397  0442                     _setDimmerLights_OnOff:	
 11398                           
 11399                           ;incstack = 0
 11400                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11401                           ;setDimmerLights_OnOff@lights stored from wreg
 11402  0442  0020               	movlb	0	; select bank0
 11403  0443  00E4               	movwf	setDimmerLights_OnOff@lights
 11404                           
 11405                           ;Dimmer_B1.c: 1003: if (command == 1) {
 11406  0444  0861               	movf	setDimmerLights_OnOff@command,w
 11407  0445  3A01               	xorlw	1
 11408  0446  1D03               	skipz
 11409  0447  2CA5               	goto	l10122
 11410                           
 11411                           ;Dimmer_B1.c: 1005: setDimmerIntr_ControlStatus(lights, 1);
 11412  0448  01F2               	clrf	setDimmerIntr_ControlStatus@command
 11413  0449  0AF2               	incf	setDimmerIntr_ControlStatus@command,f
 11414  044A  0864               	movf	setDimmerLights_OnOff@lights,w
 11415  044B  3194  24BD  3184   	fcall	_setDimmerIntr_ControlStatus
 11416                           
 11417                           ;Dimmer_B1.c: 1015: setLED(lights, 0);
 11418  044E  01F3               	clrf	setLED@command
 11419  044F  0020               	movlb	0	; select bank0
 11420  0450  0864               	movf	setDimmerLights_OnOff@lights,w
 11421  0451  318A  2243  3184   	fcall	_setLED
 11422                           
 11423                           ;Dimmer_B1.c: 1036: if (DimmerLights->DimmingRun == 1) {
 11424  0454  0020               	movlb	0	; select bank0
 11425  0455  0A6A               	incf	_DimmerLights,w
 11426  0456  0086               	movwf	6
 11427  0457  3001               	movlw	1	; select bank2/3
 11428  0458  0087               	movwf	7
 11429  0459  1F01               	btfss	1,6
 11430  045A  2C7C               	goto	l10112
 11431                           
 11432                           ;Dimmer_B1.c: 1037: DimmerLights->DimmingRun = 0;
 11433  045B  0A6A               	incf	_DimmerLights,w
 11434  045C  0086               	movwf	6
 11435  045D  3001               	movlw	1	; select bank2/3
 11436  045E  0087               	movwf	7
 11437  045F  1301               	bcf	1,6
 11438                           
 11439                           ;Dimmer_B1.c: 1038: setDimmerIntr_MaxmumValue(lights, getDimmerLights_PercentToValue(pro
      +                          duct->Data[20 + lights]));
 11440  0460  0864               	movf	setDimmerLights_OnOff@lights,w
 11441  0461  3E14               	addlw	20
 11442  0462  076E               	addwf	_product,w
 11443  0463  00E2               	movwf	??_setDimmerLights_OnOff
 11444  0464  0862               	movf	??_setDimmerLights_OnOff,w
 11445  0465  0086               	movwf	6
 11446  0466  3002               	movlw	2	; select bank4/5
 11447  0467  0087               	movwf	7
 11448  0468  0801               	movf	1,w
 11449  0469  3189  21E8  3184   	fcall	_getDimmerLights_PercentToValue
 11450  046C  0020               	movlb	0	; select bank0
 11451  046D  00E3               	movwf	??_setDimmerLights_OnOff+1
 11452  046E  0863               	movf	??_setDimmerLights_OnOff+1,w
 11453  046F  00D8               	movwf	setDimmerIntr_MaxmumValue@value
 11454  0470  0864               	movf	setDimmerLights_OnOff@lights,w
 11455  0471  3192  222A  3184   	fcall	_setDimmerIntr_MaxmumValue
 11456                           
 11457                           ;Dimmer_B1.c: 1039: setDimmerIntr_Dimming_RF(lights, 1);
 11458  0474  01F2               	clrf	setDimmerIntr_Dimming_RF@command
 11459  0475  0AF2               	incf	setDimmerIntr_Dimming_RF@command,f
 11460  0476  0020               	movlb	0	; select bank0
 11461  0477  0864               	movf	setDimmerLights_OnOff@lights,w
 11462  0478  3194  24E6  3184   	fcall	_setDimmerIntr_Dimming_RF
 11463                           
 11464                           ;Dimmer_B1.c: 1040: } else {
 11465  047B  2C91               	goto	l10114
 11466  047C                     l10112:	
 11467                           
 11468                           ;Dimmer_B1.c: 1043: setDimmerIntr_DimmingValue(lights, getDimmerLights_PercentToValue(pr
      +                          oduct->Data[20 + lights]));
 11469  047C  0020               	movlb	0	; select bank0
 11470  047D  0864               	movf	setDimmerLights_OnOff@lights,w
 11471  047E  3E14               	addlw	20
 11472  047F  076E               	addwf	_product,w
 11473  0480  00E2               	movwf	??_setDimmerLights_OnOff
 11474  0481  0862               	movf	??_setDimmerLights_OnOff,w
 11475  0482  0086               	movwf	6
 11476  0483  3002               	movlw	2	; select bank4/5
 11477  0484  0087               	movwf	7
 11478  0485  0801               	movf	1,w
 11479  0486  3189  21E8  3184   	fcall	_getDimmerLights_PercentToValue
 11480  0489  0020               	movlb	0	; select bank0
 11481  048A  00E3               	movwf	??_setDimmerLights_OnOff+1
 11482  048B  0863               	movf	??_setDimmerLights_OnOff+1,w
 11483  048C  00D8               	movwf	setDimmerIntr_DimmingValue@value
 11484  048D  0864               	movf	setDimmerLights_OnOff@lights,w
 11485  048E  3192  2241  3184   	fcall	_setDimmerIntr_DimmingValue
 11486  0491                     l10114:	
 11487                           
 11488                           ;Dimmer_B1.c: 1049: }
 11489                           ;Dimmer_B1.c: 1051: if (lights == 1) {
 11490  0491  0020               	movlb	0	; select bank0
 11491  0492  0864               	movf	setDimmerLights_OnOff@lights,w
 11492  0493  3A01               	xorlw	1
 11493  0494  1D03               	skipz
 11494  0495  2C9B               	goto	l10118
 11495                           
 11496                           ;Dimmer_B1.c: 1054: DimmerIntr_ValueCalculate(1);
 11497  0496  3001               	movlw	1
 11498  0497  3193  2324  3184   	fcall	_DimmerIntr_ValueCalculate
 11499                           
 11500                           ;Dimmer_B1.c: 1056: } else if (lights == 2) {
 11501  049A  2CCF               	goto	l10138
 11502  049B                     l10118:	
 11503  049B  0020               	movlb	0	; select bank0
 11504  049C  0864               	movf	setDimmerLights_OnOff@lights,w
 11505  049D  3A02               	xorlw	2
 11506  049E  1D03               	skipz
 11507  049F  2CCF               	goto	l10138
 11508                           
 11509                           ;Dimmer_B1.c: 1059: DimmerIntr_ValueCalculate(2);
 11510  04A0  3002               	movlw	2
 11511  04A1  3193  2324  3184   	fcall	_DimmerIntr_ValueCalculate
 11512                           
 11513                           ;Dimmer_B1.c: 1061: }
 11514                           ;Dimmer_B1.c: 1067: } else if (command == 0) {
 11515  04A4  2CCF               	goto	l10138
 11516  04A5                     l10122:	
 11517  04A5  0020               	movlb	0	; select bank0
 11518  04A6  08E1               	movf	setDimmerLights_OnOff@command,f
 11519  04A7  1D03               	skipz
 11520  04A8  2CCF               	goto	l10138
 11521                           
 11522                           ;Dimmer_B1.c: 1069: setDimmerIntr_ControlStatus(lights, 0);
 11523  04A9  01F2               	clrf	setDimmerIntr_ControlStatus@command
 11524  04AA  0864               	movf	setDimmerLights_OnOff@lights,w
 11525  04AB  3194  24BD  3184   	fcall	_setDimmerIntr_ControlStatus
 11526                           
 11527                           ;Dimmer_B1.c: 1076: if (getDelayOff_GO(lights) == 1) {
 11528  04AE  0020               	movlb	0	; select bank0
 11529  04AF  0864               	movf	setDimmerLights_OnOff@lights,w
 11530  04B0  319F  27C4  3184   	fcall	_getDelayOff_GO
 11531  04B3  3A01               	xorlw	1
 11532  04B4  1D03               	skipz
 11533  04B5  2CBD               	goto	l892
 11534                           
 11535                           ;Dimmer_B1.c: 1077: setDelayOff_GO(lights, 0, 0);
 11536  04B6  0020               	movlb	0	; select bank0
 11537  04B7  01D9               	clrf	setDelayOff_GO@command
 11538  04B8  01DA               	clrf	setDelayOff_GO@value
 11539  04B9  0864               	movf	setDimmerLights_OnOff@lights,w
 11540  04BA  318D  25E5  3184   	fcall	_setDelayOff_GO
 11541  04BD                     l892:	
 11542                           
 11543                           ;Dimmer_B1.c: 1078: }
 11544                           ;Dimmer_B1.c: 1083: setLED(lights, 1);
 11545  04BD  01F3               	clrf	setLED@command
 11546  04BE  0AF3               	incf	setLED@command,f
 11547  04BF  0020               	movlb	0	; select bank0
 11548  04C0  0864               	movf	setDimmerLights_OnOff@lights,w
 11549  04C1  318A  2243  3184   	fcall	_setLED
 11550                           
 11551                           ;Dimmer_B1.c: 1088: if (lights == 1) {
 11552  04C4  0020               	movlb	0	; select bank0
 11553  04C5  0864               	movf	setDimmerLights_OnOff@lights,w
 11554  04C6  3A01               	xorlw	1
 11555  04C7  1D03               	skipz
 11556  04C8  2CCB               	goto	l10134
 11557                           
 11558                           ;Dimmer_B1.c: 1094: RA7 = 0;
 11559  04C9  138C               	bcf	12,7	;volatile
 11560                           
 11561                           ;Dimmer_B1.c: 1096: }
 11562  04CA  2CCF               	goto	l10138
 11563  04CB                     l10134:	
 11564                           
 11565                           ;Dimmer_B1.c: 1099: else if (lights == 2) {
 11566  04CB  0864               	movf	setDimmerLights_OnOff@lights,w
 11567  04CC  3A02               	xorlw	2
 11568  04CD  1903               	btfsc	3,2
 11569                           
 11570                           ;Dimmer_B1.c: 1104: RB4 = 0;
 11571  04CE  120D               	bcf	13,4	;volatile
 11572  04CF                     l10138:	
 11573                           
 11574                           ;Dimmer_B1.c: 1106: }
 11575                           ;Dimmer_B1.c: 1122: }
 11576                           ;Dimmer_B1.c: 1124: setDimmerLights_DimmingClose();
 11577  04CF  319F  2721  3184   	fcall	_setDimmerLights_DimmingClose
 11578                           
 11579                           ;Dimmer_B1.c: 1126: setRF_DimmerLights(lights, command);
 11580  04D2  0020               	movlb	0	; select bank0
 11581  04D3  0861               	movf	setDimmerLights_OnOff@command,w
 11582  04D4  00E2               	movwf	??_setDimmerLights_OnOff
 11583  04D5  0862               	movf	??_setDimmerLights_OnOff,w
 11584  04D6  00D9               	movwf	setRF_DimmerLights@on
 11585  04D7  0864               	movf	setDimmerLights_OnOff@lights,w
 11586  04D8  318C  2432  3184   	fcall	_setRF_DimmerLights
 11587                           
 11588                           ;Dimmer_B1.c: 1128: if (getCmd_Status(1) == 1) {
 11589  04DB  3001               	movlw	1
 11590  04DC  3190  208A  3184   	fcall	_getCmd_Status
 11591  04DF  3A01               	xorlw	1
 11592  04E0  1D03               	skipz
 11593  04E1  2CFC               	goto	l10154
 11594                           
 11595                           ;Dimmer_B1.c: 1129: if (getMain_All_LightsStatus() == 0) {
 11596  04E2  319F  27D3  3184   	fcall	_getMain_All_LightsStatus
 11597  04E5  3800               	iorlw	0
 11598  04E6  1D03               	skipz
 11599  04E7  0008               	return
 11600                           
 11601                           ;Dimmer_B1.c: 1130: setCmd_Status(1, 0);
 11602  04E8  01F2               	clrf	setCmd_Status@cmd
 11603  04E9  3001               	movlw	1
 11604  04EA  3191  2196  3184   	fcall	_setCmd_Status
 11605                           
 11606                           ;Dimmer_B1.c: 1131: setProductData(11, 0);
 11607  04ED  0020               	movlb	0	; select bank0
 11608  04EE  01D6               	clrf	setProductData@value
 11609  04EF  300B               	movlw	11
 11610  04F0  319F  2779  3184   	fcall	_setProductData
 11611                           
 11612                           ;Dimmer_B1.c: 1132: setProductData(17, 0);
 11613  04F3  0020               	movlb	0	; select bank0
 11614  04F4  01D6               	clrf	setProductData@value
 11615  04F5  3011               	movlw	17
 11616  04F6  319F  2779  3184   	fcall	_setProductData
 11617                           
 11618                           ;Dimmer_B1.c: 1133: setTxData();
 11619  04F9  319E  26DA         	fcall	_setTxData
 11620                           
 11621                           ;Dimmer_B1.c: 1134: }
 11622                           ;Dimmer_B1.c: 1135: } else {
 11623  04FB  0008               	return
 11624  04FC                     l10154:	
 11625                           
 11626                           ;Dimmer_B1.c: 1136: setTxData();
 11627  04FC  319E  26DA         	fcall	_setTxData
 11628  04FE  0008               	return
 11629  04FF                     __end_of_setDimmerLights_OnOff:	
 11630                           
 11631                           	psect	text76
 11632  0A43                     __ptext76:	
 11633 ;; *************** function _setLED *****************
 11634 ;; Defined at:
 11635 ;;		line 81 in file "../src/LED_B1.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;  led             1    wreg     unsigned char 
 11638 ;;  command         1    3[COMMON] unsigned char 
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;  led             1    4[COMMON] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;		None               void
 11643 ;; Registers used:
 11644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;Total ram usage:        2 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    4
 11657 ;; This function calls:
 11658 ;;		_LedPointSelect
 11659 ;; This function is called by:
 11660 ;;		_setDimmerLights_OnOff
 11661 ;;		_setLED_Initialization
 11662 ;;		_Exception_Main
 11663 ;;		_setSw_Initialization
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667                           
 11668                           ;psect for function _setLED
 11669  0A43                     _setLED:	
 11670                           
 11671                           ;incstack = 0
 11672                           ; Regs used in _setLED: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11673                           ;setLED@led stored from wreg
 11674  0A43  00F4               	movwf	setLED@led
 11675                           
 11676                           ;LED_B1.c: 82: LedPointSelect(led);
 11677  0A44  0874               	movf	setLED@led,w
 11678  0A45  3192  22EF  318A   	fcall	_LedPointSelect
 11679                           
 11680                           ;LED_B1.c: 83: if (command == 0) {
 11681  0A48  08F3               	movf	setLED@command,f
 11682  0A49  1D03               	skipz
 11683  0A4A  2A5D               	goto	l9908
 11684                           
 11685                           ;LED_B1.c: 85: if (led == 1) {
 11686  0A4B  0874               	movf	setLED@led,w
 11687  0A4C  3A01               	xorlw	1
 11688  0A4D  1D03               	skipz
 11689  0A4E  2A51               	goto	l9900
 11690                           
 11691                           ;LED_B1.c: 89: RA3 = 1;
 11692  0A4F  0020               	movlb	0	; select bank0
 11693  0A50  158C               	bsf	12,3	;volatile
 11694  0A51                     l9900:	
 11695                           
 11696                           ;LED_B1.c: 91: }
 11697                           ;LED_B1.c: 94: if (led == 2) {
 11698  0A51  0874               	movf	setLED@led,w
 11699  0A52  3A02               	xorlw	2
 11700  0A53  1D03               	skipz
 11701  0A54  2A57               	goto	l9904
 11702                           
 11703                           ;LED_B1.c: 98: RC7 = 1;
 11704  0A55  0020               	movlb	0	; select bank0
 11705  0A56  178E               	bsf	14,7	;volatile
 11706  0A57                     l9904:	
 11707                           
 11708                           ;LED_B1.c: 100: }
 11709                           ;LED_B1.c: 112: if (led == 99) {
 11710  0A57  0874               	movf	setLED@led,w
 11711  0A58  3A63               	xorlw	99
 11712  0A59  1D03               	skipz
 11713  0A5A  2A5D               	goto	l9908
 11714                           
 11715                           ;LED_B1.c: 116: RB5 = 1;
 11716  0A5B  0020               	movlb	0	; select bank0
 11717  0A5C  168D               	bsf	13,5	;volatile
 11718  0A5D                     l9908:	
 11719                           
 11720                           ;LED_B1.c: 118: }
 11721                           ;LED_B1.c: 120: }
 11722                           ;LED_B1.c: 121: if (command == 1) {
 11723  0A5D  0873               	movf	setLED@command,w
 11724  0A5E  3A01               	xorlw	1
 11725  0A5F  1D03               	skipz
 11726  0A60  2A73               	goto	l9922
 11727                           
 11728                           ;LED_B1.c: 123: if (led == 1) {
 11729  0A61  0874               	movf	setLED@led,w
 11730  0A62  3A01               	xorlw	1
 11731  0A63  1D03               	skipz
 11732  0A64  2A67               	goto	l9914
 11733                           
 11734                           ;LED_B1.c: 127: RA3 = 0;
 11735  0A65  0020               	movlb	0	; select bank0
 11736  0A66  118C               	bcf	12,3	;volatile
 11737  0A67                     l9914:	
 11738                           
 11739                           ;LED_B1.c: 129: }
 11740                           ;LED_B1.c: 132: if (led == 2) {
 11741  0A67  0874               	movf	setLED@led,w
 11742  0A68  3A02               	xorlw	2
 11743  0A69  1D03               	skipz
 11744  0A6A  2A6D               	goto	l9918
 11745                           
 11746                           ;LED_B1.c: 136: RC7 = 0;
 11747  0A6B  0020               	movlb	0	; select bank0
 11748  0A6C  138E               	bcf	14,7	;volatile
 11749  0A6D                     l9918:	
 11750                           
 11751                           ;LED_B1.c: 138: }
 11752                           ;LED_B1.c: 150: if (led == 99) {
 11753  0A6D  0874               	movf	setLED@led,w
 11754  0A6E  3A63               	xorlw	99
 11755  0A6F  1D03               	skipz
 11756  0A70  2A73               	goto	l9922
 11757                           
 11758                           ;LED_B1.c: 154: RB5 = 0;
 11759  0A71  0020               	movlb	0	; select bank0
 11760  0A72  128D               	bcf	13,5	;volatile
 11761  0A73                     l9922:	
 11762                           
 11763                           ;LED_B1.c: 156: }
 11764                           ;LED_B1.c: 158: }
 11765                           ;LED_B1.c: 159: if (command == 10) {
 11766  0A73  0873               	movf	setLED@command,w
 11767  0A74  3A0A               	xorlw	10
 11768  0A75  1D03               	skipz
 11769  0A76  2A97               	goto	l9938
 11770                           
 11771                           ;LED_B1.c: 160: LED->GO = 0;
 11772  0A77  087A               	movf	_LED,w
 11773  0A78  0086               	movwf	6
 11774  0A79  087B               	movf	_LED+1,w
 11775  0A7A  0087               	movwf	7
 11776  0A7B  1081               	bcf	1,1
 11777                           
 11778                           ;LED_B1.c: 161: LED->Time = 0;
 11779  0A7C  087A               	movf	_LED,w
 11780  0A7D  0086               	movwf	6
 11781  0A7E  087B               	movf	_LED+1,w
 11782  0A7F  0087               	movwf	7
 11783  0A80  3141               	addfsr 1,1
 11784  0A81  3000               	movlw	0
 11785  0A82  3FC0               	movwi [0]fsr1
 11786  0A83  3FC1               	movwi [1]fsr1
 11787                           
 11788                           ;LED_B1.c: 163: if (led == 1) {
 11789  0A84  0874               	movf	setLED@led,w
 11790  0A85  3A01               	xorlw	1
 11791  0A86  1D03               	skipz
 11792  0A87  2A8B               	goto	l9930
 11793                           
 11794                           ;LED_B1.c: 167: RA3 = 1;
 11795  0A88  0020               	movlb	0	; select bank0
 11796  0A89  158C               	bsf	12,3	;volatile
 11797                           
 11798                           ;LED_B1.c: 169: }
 11799  0A8A  2A91               	goto	l9934
 11800  0A8B                     l9930:	
 11801                           
 11802                           ;LED_B1.c: 172: else if (led == 2) {
 11803  0A8B  0874               	movf	setLED@led,w
 11804  0A8C  3A02               	xorlw	2
 11805  0A8D  1D03               	skipz
 11806  0A8E  2A91               	goto	l9934
 11807                           
 11808                           ;LED_B1.c: 176: RC7 = 1;
 11809  0A8F  0020               	movlb	0	; select bank0
 11810  0A90  178E               	bsf	14,7	;volatile
 11811  0A91                     l9934:	
 11812                           
 11813                           ;LED_B1.c: 178: }
 11814                           ;LED_B1.c: 190: if (led == 99) {
 11815  0A91  0874               	movf	setLED@led,w
 11816  0A92  3A63               	xorlw	99
 11817  0A93  1D03               	skipz
 11818  0A94  2A97               	goto	l9938
 11819                           
 11820                           ;LED_B1.c: 194: RB5 = 1;
 11821  0A95  0020               	movlb	0	; select bank0
 11822  0A96  168D               	bsf	13,5	;volatile
 11823  0A97                     l9938:	
 11824                           
 11825                           ;LED_B1.c: 196: }
 11826                           ;LED_B1.c: 198: }
 11827                           ;LED_B1.c: 199: if (command == 11) {
 11828  0A97  0873               	movf	setLED@command,w
 11829  0A98  3A0B               	xorlw	11
 11830  0A99  1D03               	skipz
 11831  0A9A  0008               	return
 11832                           
 11833                           ;LED_B1.c: 200: LED->GO = 1;
 11834  0A9B  087A               	movf	_LED,w
 11835  0A9C  0086               	movwf	6
 11836  0A9D  087B               	movf	_LED+1,w
 11837  0A9E  0087               	movwf	7
 11838  0A9F  1481               	bsf	1,1
 11839  0AA0  0008               	return
 11840  0AA1                     __end_of_setLED:	
 11841                           
 11842                           	psect	text77
 11843  12EF                     __ptext77:	
 11844 ;; *************** function _LedPointSelect *****************
 11845 ;; Defined at:
 11846 ;;		line 7 in file "../src/LED_B1.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;  led             1    wreg     unsigned char 
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  led             1    2[COMMON] unsigned char 
 11851 ;; Return value:  Size  Location     Type
 11852 ;;		None               void
 11853 ;; Registers used:
 11854 ;;		wreg, status,2, status,0
 11855 ;; Tracked objects:
 11856 ;;		On entry : 0/0
 11857 ;;		On exit  : 0/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;Total ram usage:        1 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:    3
 11867 ;; This function calls:
 11868 ;;		Nothing
 11869 ;; This function is called by:
 11870 ;;		_setLED_Initialization
 11871 ;;		_setLED
 11872 ;;		_setLED_Main
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876                           
 11877                           ;psect for function _LedPointSelect
 11878  12EF                     _LedPointSelect:	
 11879                           
 11880                           ;incstack = 0
 11881                           ; Regs used in _LedPointSelect: [wreg+status,2+status,0]
 11882                           ;LedPointSelect@led stored from wreg
 11883  12EF  00F2               	movwf	LedPointSelect@led
 11884                           
 11885                           ;LED_B1.c: 9: if (led == 1) {
 11886  12F0  0872               	movf	LedPointSelect@led,w
 11887  12F1  3A01               	xorlw	1
 11888  12F2  1D03               	skipz
 11889  12F3  2AF8               	goto	l9714
 11890                           
 11891                           ;LED_B1.c: 10: LED = &VarLED1;
 11892  12F4  30EC               	movlw	low _VarLED1
 11893  12F5  00FA               	movwf	_LED
 11894  12F6  3000               	movlw	high _VarLED1
 11895  12F7  00FB               	movwf	_LED+1
 11896  12F8                     l9714:	
 11897                           
 11898                           ;LED_B1.c: 11: }
 11899                           ;LED_B1.c: 14: if (led == 2) {
 11900  12F8  0872               	movf	LedPointSelect@led,w
 11901  12F9  3A02               	xorlw	2
 11902  12FA  1D03               	skipz
 11903  12FB  2B00               	goto	l9718
 11904                           
 11905                           ;LED_B1.c: 15: LED = &VarLED2;
 11906  12FC  306A               	movlw	low _VarLED2
 11907  12FD  00FA               	movwf	_LED
 11908  12FE  3001               	movlw	high _VarLED2
 11909  12FF  00FB               	movwf	_LED+1
 11910  1300                     l9718:	
 11911                           
 11912                           ;LED_B1.c: 16: }
 11913                           ;LED_B1.c: 24: if (led == 99) {
 11914  1300  0872               	movf	LedPointSelect@led,w
 11915  1301  3A63               	xorlw	99
 11916  1302  1D03               	skipz
 11917  1303  0008               	return
 11918                           
 11919                           ;LED_B1.c: 25: LED = &VarErrLED;
 11920  1304  30E8               	movlw	low _VarErrLED
 11921  1305  00FA               	movwf	_LED
 11922  1306  3000               	movlw	high _VarErrLED
 11923  1307  00FB               	movwf	_LED+1
 11924  1308  0008               	return
 11925  1309                     __end_of_LedPointSelect:	
 11926                           
 11927                           	psect	text78
 11928  1F21                     __ptext78:	
 11929 ;; *************** function _setDimmerLights_DimmingClose *****************
 11930 ;; Defined at:
 11931 ;;		line 2046 in file "../src/Dimmer_B1.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;		None
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;		None               void
 11938 ;; Registers used:
 11939 ;;		wreg, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        0 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    4
 11952 ;; This function calls:
 11953 ;;		_setDimmerIntr_Dimming_Sw
 11954 ;; This function is called by:
 11955 ;;		_setDimmerLights_OnOff
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           
 11960                           ;psect for function _setDimmerLights_DimmingClose
 11961  1F21                     _setDimmerLights_DimmingClose:	
 11962                           
 11963                           ;Dimmer_B1.c: 2048: setDimmerIntr_Dimming_Sw(1, 0);
 11964                           
 11965                           ;incstack = 0
 11966                           ; Regs used in _setDimmerLights_DimmingClose: [wreg+status,2+status,0+pclath+cstack]
 11967  1F21  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 11968  1F22  3001               	movlw	1
 11969  1F23  3194  244C  319F   	fcall	_setDimmerIntr_Dimming_Sw
 11970                           
 11971                           ;Dimmer_B1.c: 2052: setDimmerIntr_Dimming_Sw(2, 0);
 11972  1F26  01F2               	clrf	setDimmerIntr_Dimming_Sw@command
 11973  1F27  3002               	movlw	2
 11974  1F28  3194  244C         	fcall	_setDimmerIntr_Dimming_Sw
 11975  1F2A  0008               	return
 11976  1F2B                     __end_of_setDimmerLights_DimmingClose:	
 11977                           
 11978                           	psect	text79
 11979  14E6                     __ptext79:	
 11980 ;; *************** function _setDimmerIntr_Dimming_RF *****************
 11981 ;; Defined at:
 11982 ;;		line 290 in file "../src/Dimmer_B1.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;  lights          1    wreg     unsigned char 
 11985 ;;  command         1    2[COMMON] unsigned char 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;  lights          1    4[COMMON] unsigned char 
 11988 ;; Return value:  Size  Location     Type
 11989 ;;		None               void
 11990 ;; Registers used:
 11991 ;;		wreg, status,2, status,0
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;Total ram usage:        3 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; Hardware stack levels required when called:    3
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_setDimmerLights_OnOff
 12008 ;;		_setRFSW_AdjControl
 12009 ;;		_DimmerLights_AssignationDimming
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           
 12014                           ;psect for function _setDimmerIntr_Dimming_RF
 12015  14E6                     _setDimmerIntr_Dimming_RF:	
 12016                           
 12017                           ;incstack = 0
 12018                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
 12019                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
 12020  14E6  00F4               	movwf	setDimmerIntr_Dimming_RF@lights
 12021                           
 12022                           ;Dimmer_B1.c: 292: if (lights == 1) {
 12023  14E7  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12024  14E8  3A01               	xorlw	1
 12025  14E9  1D03               	skipz
 12026  14EA  2CFB               	goto	l6172
 12027                           
 12028                           ;Dimmer_B1.c: 293: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
 12029  14EB  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12030  14EC  3A01               	xorlw	1
 12031  14ED  3000               	movlw	0
 12032  14EE  1903               	skipnz
 12033  14EF  3001               	movlw	1
 12034  14F0  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12035  14F1  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12036  14F2  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12037  14F3  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12038  14F4  0021               	movlb	1	; select bank1
 12039  14F5  0820               	movf	_DimmerIntr1^(0+128),w
 12040  14F6  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12041  14F7  39BF               	andlw	-65
 12042  14F8  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12043  14F9  00A0               	movwf	_DimmerIntr1^(0+128)
 12044                           
 12045                           ;Dimmer_B1.c: 294: }
 12046  14FA  0008               	return
 12047  14FB                     l6172:	
 12048                           
 12049                           ;Dimmer_B1.c: 297: else if (lights == 2) {
 12050  14FB  0874               	movf	setDimmerIntr_Dimming_RF@lights,w
 12051  14FC  3A02               	xorlw	2
 12052  14FD  1D03               	skipz
 12053  14FE  0008               	return
 12054                           
 12055                           ;Dimmer_B1.c: 298: DimmerIntr2.Dimming_RF = command == 1 ? 1 : 0;
 12056  14FF  0872               	movf	setDimmerIntr_Dimming_RF@command,w
 12057  1500  3A01               	xorlw	1
 12058  1501  3000               	movlw	0
 12059  1502  1903               	skipnz
 12060  1503  3001               	movlw	1
 12061  1504  00F3               	movwf	??_setDimmerIntr_Dimming_RF
 12062  1505  0EF3               	swapf	??_setDimmerIntr_Dimming_RF,f
 12063  1506  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12064  1507  0DF3               	rlf	??_setDimmerIntr_Dimming_RF,f
 12065  1508  0022               	movlb	2	; select bank2
 12066  1509  083E               	movf	_DimmerIntr2^(0+256),w
 12067  150A  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12068  150B  39BF               	andlw	-65
 12069  150C  0673               	xorwf	??_setDimmerIntr_Dimming_RF,w
 12070  150D  00BE               	movwf	_DimmerIntr2^(0+256)
 12071  150E  0008               	return
 12072  150F                     __end_of_setDimmerIntr_Dimming_RF:	
 12073                           
 12074                           	psect	text80
 12075  1241                     __ptext80:	
 12076 ;; *************** function _setDimmerIntr_DimmingValue *****************
 12077 ;; Defined at:
 12078 ;;		line 137 in file "../src/Dimmer_B1.c"
 12079 ;; Parameters:    Size  Location     Type
 12080 ;;  lights          1    wreg     unsigned char 
 12081 ;;  value           1   56[BANK0 ] unsigned char 
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;  lights          1   58[BANK0 ] unsigned char 
 12084 ;; Return value:  Size  Location     Type
 12085 ;;		None               void
 12086 ;; Registers used:
 12087 ;;		wreg
 12088 ;; Tracked objects:
 12089 ;;		On entry : 0/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12093 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;Total ram usage:        3 bytes
 12098 ;; Hardware stack levels used:    1
 12099 ;; Hardware stack levels required when called:    3
 12100 ;; This function calls:
 12101 ;;		Nothing
 12102 ;; This function is called by:
 12103 ;;		_setDimmerLights_OnOff
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           
 12108                           ;psect for function _setDimmerIntr_DimmingValue
 12109  1241                     _setDimmerIntr_DimmingValue:	
 12110                           
 12111                           ;incstack = 0
 12112                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
 12113                           ;setDimmerIntr_DimmingValue@lights stored from wreg
 12114  1241  0020               	movlb	0	; select bank0
 12115  1242  00DA               	movwf	setDimmerIntr_DimmingValue@lights
 12116                           
 12117                           ;Dimmer_B1.c: 139: if (lights == 1) {
 12118  1243  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12119  1244  3A01               	xorlw	1
 12120  1245  1D03               	skipz
 12121  1246  2A4D               	goto	l6500
 12122                           
 12123                           ;Dimmer_B1.c: 140: DimmerIntr1.DimmingValue = value;
 12124  1247  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12125  1248  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12126  1249  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12127  124A  0021               	movlb	1	; select bank1
 12128  124B  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 12129                           
 12130                           ;Dimmer_B1.c: 141: }
 12131  124C  0008               	return
 12132  124D                     l6500:	
 12133                           
 12134                           ;Dimmer_B1.c: 144: else if (lights == 2) {
 12135  124D  0020               	movlb	0	; select bank0
 12136  124E  085A               	movf	setDimmerIntr_DimmingValue@lights,w
 12137  124F  3A02               	xorlw	2
 12138  1250  1D03               	skipz
 12139  1251  0008               	return
 12140                           
 12141                           ;Dimmer_B1.c: 145: DimmerIntr2.DimmingValue = value;
 12142  1252  0858               	movf	setDimmerIntr_DimmingValue@value,w
 12143  1253  00D9               	movwf	??_setDimmerIntr_DimmingValue
 12144  1254  0859               	movf	??_setDimmerIntr_DimmingValue,w
 12145  1255  0022               	movlb	2	; select bank2
 12146  1256  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 12147  1257  0008               	return
 12148  1258                     __end_of_setDimmerIntr_DimmingValue:	
 12149                           
 12150                           	psect	text81
 12151  14BD                     __ptext81:	
 12152 ;; *************** function _setDimmerIntr_ControlStatus *****************
 12153 ;; Defined at:
 12154 ;;		line 119 in file "../src/Dimmer_B1.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  lights          1    wreg     unsigned char 
 12157 ;;  command         1    2[COMMON] unsigned char 
 12158 ;; Auto vars:     Size  Location     Type
 12159 ;;  lights          1    4[COMMON] unsigned char 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;		None               void
 12162 ;; Registers used:
 12163 ;;		wreg, status,2, status,0
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12169 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12172 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12173 ;;Total ram usage:        3 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    3
 12176 ;; This function calls:
 12177 ;;		Nothing
 12178 ;; This function is called by:
 12179 ;;		_setDimmerLights_OnOff
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           
 12184                           ;psect for function _setDimmerIntr_ControlStatus
 12185  14BD                     _setDimmerIntr_ControlStatus:	
 12186                           
 12187                           ;incstack = 0
 12188                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
 12189                           ;setDimmerIntr_ControlStatus@lights stored from wreg
 12190  14BD  00F4               	movwf	setDimmerIntr_ControlStatus@lights
 12191                           
 12192                           ;Dimmer_B1.c: 121: if (lights == 1) {
 12193  14BE  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12194  14BF  3A01               	xorlw	1
 12195  14C0  1D03               	skipz
 12196  14C1  2CD2               	goto	l6492
 12197                           
 12198                           ;Dimmer_B1.c: 122: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
 12199  14C2  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12200  14C3  3A01               	xorlw	1
 12201  14C4  3000               	movlw	0
 12202  14C5  1903               	skipnz
 12203  14C6  3001               	movlw	1
 12204  14C7  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12205  14C8  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12206  14C9  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12207  14CA  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12208  14CB  0021               	movlb	1	; select bank1
 12209  14CC  0820               	movf	_DimmerIntr1^(0+128),w
 12210  14CD  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12211  14CE  39F7               	andlw	-9
 12212  14CF  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12213  14D0  00A0               	movwf	_DimmerIntr1^(0+128)
 12214                           
 12215                           ;Dimmer_B1.c: 123: }
 12216  14D1  0008               	return
 12217  14D2                     l6492:	
 12218                           
 12219                           ;Dimmer_B1.c: 126: else if (lights == 2) {
 12220  14D2  0874               	movf	setDimmerIntr_ControlStatus@lights,w
 12221  14D3  3A02               	xorlw	2
 12222  14D4  1D03               	skipz
 12223  14D5  0008               	return
 12224                           
 12225                           ;Dimmer_B1.c: 127: DimmerIntr2.ControlStatus = command == 1 ? 1 : 0;
 12226  14D6  0872               	movf	setDimmerIntr_ControlStatus@command,w
 12227  14D7  3A01               	xorlw	1
 12228  14D8  3000               	movlw	0
 12229  14D9  1903               	skipnz
 12230  14DA  3001               	movlw	1
 12231  14DB  00F3               	movwf	??_setDimmerIntr_ControlStatus
 12232  14DC  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12233  14DD  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12234  14DE  0DF3               	rlf	??_setDimmerIntr_ControlStatus,f
 12235  14DF  0022               	movlb	2	; select bank2
 12236  14E0  083E               	movf	_DimmerIntr2^(0+256),w
 12237  14E1  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12238  14E2  39F7               	andlw	-9
 12239  14E3  0673               	xorwf	??_setDimmerIntr_ControlStatus,w
 12240  14E4  00BE               	movwf	_DimmerIntr2^(0+256)
 12241  14E5  0008               	return
 12242  14E6                     __end_of_setDimmerIntr_ControlStatus:	
 12243                           
 12244                           	psect	text82
 12245  0DE5                     __ptext82:	
 12246 ;; *************** function _setDelayOff_GO *****************
 12247 ;; Defined at:
 12248 ;;		line 87 in file "../src/DelayOff_B1.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;  sw              1    wreg     unsigned char 
 12251 ;;  command         1   57[BANK0 ] unsigned char 
 12252 ;;  value           1   58[BANK0 ] unsigned char 
 12253 ;; Auto vars:     Size  Location     Type
 12254 ;;  sw              1   64[BANK0 ] unsigned char 
 12255 ;;  k               1   63[BANK0 ] unsigned char 
 12256 ;;  j               1   62[BANK0 ] unsigned char 
 12257 ;;  i               1   61[BANK0 ] unsigned char 
 12258 ;; Return value:  Size  Location     Type
 12259 ;;		None               void
 12260 ;; Registers used:
 12261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;Total ram usage:        8 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; Hardware stack levels required when called:    4
 12274 ;; This function calls:
 12275 ;;		_DelayOffPointSelect
 12276 ;;		___bmul
 12277 ;;		_setProductData
 12278 ;; This function is called by:
 12279 ;;		_setDimmerLights_OnOff
 12280 ;;		_setRFSW_Control
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           
 12285                           ;psect for function _setDelayOff_GO
 12286  0DE5                     _setDelayOff_GO:	
 12287                           
 12288                           ;incstack = 0
 12289                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12290                           ;setDelayOff_GO@sw stored from wreg
 12291  0DE5  0020               	movlb	0	; select bank0
 12292  0DE6  00E0               	movwf	setDelayOff_GO@sw
 12293                           
 12294                           ;DelayOff_B1.c: 89: DelayOffPointSelect(sw);
 12295  0DE7  0860               	movf	setDelayOff_GO@sw,w
 12296  0DE8  3191  216C  318D   	fcall	_DelayOffPointSelect
 12297                           
 12298                           ;DelayOff_B1.c: 90: DelayOff->GO = command == 1 ? 1 : 0;
 12299  0DEB  0020               	movlb	0	; select bank0
 12300  0DEC  0859               	movf	setDelayOff_GO@command,w
 12301  0DED  3A01               	xorlw	1
 12302  0DEE  3000               	movlw	0
 12303  0DEF  1903               	skipnz
 12304  0DF0  3001               	movlw	1
 12305  0DF1  00DB               	movwf	??_setDelayOff_GO
 12306  0DF2  0869               	movf	_DelayOff,w
 12307  0DF3  0086               	movwf	6
 12308  0DF4  3001               	movlw	1	; select bank2/3
 12309  0DF5  0087               	movwf	7
 12310  0DF6  0DDB               	rlf	??_setDelayOff_GO,f
 12311  0DF7  0801               	movf	1,w
 12312  0DF8  065B               	xorwf	??_setDelayOff_GO,w
 12313  0DF9  39FD               	andlw	-3
 12314  0DFA  065B               	xorwf	??_setDelayOff_GO,w
 12315  0DFB  0081               	movwf	1
 12316                           
 12317                           ;DelayOff_B1.c: 91: DelayOff->SecondTime = 0;
 12318  0DFC  0869               	movf	_DelayOff,w
 12319  0DFD  3E02               	addlw	2
 12320  0DFE  0086               	movwf	6
 12321  0DFF  3001               	movlw	1	; select bank2/3
 12322  0E00  0087               	movwf	7
 12323  0E01  3000               	movlw	0
 12324  0E02  3FC0               	movwi [0]fsr1
 12325  0E03  3FC1               	movwi [1]fsr1
 12326                           
 12327                           ;DelayOff_B1.c: 92: DelayOff->MinuteTime = 0;
 12328  0E04  0869               	movf	_DelayOff,w
 12329  0E05  3E04               	addlw	4
 12330  0E06  0086               	movwf	6
 12331  0E07  3001               	movlw	1	; select bank2/3
 12332  0E08  0087               	movwf	7
 12333  0E09  0181               	clrf	1
 12334                           
 12335                           ;DelayOff_B1.c: 94: if (command == 1) {
 12336  0E0A  0859               	movf	setDelayOff_GO@command,w
 12337  0E0B  3A01               	xorlw	1
 12338  0E0C  1D03               	skipz
 12339  0E0D  2E5F               	goto	l6144
 12340                           
 12341                           ;DelayOff_B1.c: 96: char i = 5, j = 0, k = 0;
 12342  0E0E  3005               	movlw	5
 12343  0E0F  00DB               	movwf	??_setDelayOff_GO
 12344  0E10  085B               	movf	??_setDelayOff_GO,w
 12345  0E11  00DD               	movwf	setDelayOff_GO@i
 12346  0E12  01DE               	clrf	setDelayOff_GO@j
 12347  0E13  01DF               	clrf	setDelayOff_GO@k
 12348                           
 12349                           ;DelayOff_B1.c: 97: if (((value % 16) == 5 || (value % 16) == 0) && value <= 0x30) {
 12350  0E14  300F               	movlw	15
 12351  0E15  055A               	andwf	setDelayOff_GO@value,w
 12352  0E16  00DB               	movwf	??_setDelayOff_GO
 12353  0E17  085B               	movf	??_setDelayOff_GO,w
 12354  0E18  3A05               	xorlw	5
 12355  0E19  1903               	skipnz
 12356  0E1A  2E1F               	goto	l6130
 12357  0E1B  085A               	movf	setDelayOff_GO@value,w
 12358  0E1C  390F               	andlw	15
 12359  0E1D  1D03               	btfss	3,2
 12360  0E1E  2E4D               	goto	l6140
 12361  0E1F                     l6130:	
 12362  0E1F  3031               	movlw	49
 12363  0E20  025A               	subwf	setDelayOff_GO@value,w
 12364  0E21  1803               	skipnc
 12365  0E22  2E4D               	goto	l6140
 12366                           
 12367                           ;DelayOff_B1.c: 98: j = value & 0x0f;
 12368  0E23  085A               	movf	setDelayOff_GO@value,w
 12369  0E24  390F               	andlw	15
 12370  0E25  00DB               	movwf	??_setDelayOff_GO
 12371  0E26  085B               	movf	??_setDelayOff_GO,w
 12372  0E27  00DE               	movwf	setDelayOff_GO@j
 12373                           
 12374                           ;DelayOff_B1.c: 99: k = (value >> 4) & 0x0f;
 12375  0E28  085A               	movf	setDelayOff_GO@value,w
 12376  0E29  00DB               	movwf	??_setDelayOff_GO
 12377  0E2A  3004               	movlw	4
 12378  0E2B                     u5255:	
 12379  0E2B  36DB               	lsrf	??_setDelayOff_GO,f
 12380  0E2C  0B89               	decfsz	9,f
 12381  0E2D  2E2B               	goto	u5255
 12382  0E2E  085B               	movf	??_setDelayOff_GO,w
 12383  0E2F  390F               	andlw	15
 12384  0E30  00DC               	movwf	??_setDelayOff_GO+1
 12385  0E31  085C               	movf	??_setDelayOff_GO+1,w
 12386  0E32  00DF               	movwf	setDelayOff_GO@k
 12387                           
 12388                           ;DelayOff_B1.c: 100: DelayOff->Value = j + (k * 10);
 12389  0E33  300A               	movlw	10
 12390  0E34  00DB               	movwf	??_setDelayOff_GO
 12391  0E35  085B               	movf	??_setDelayOff_GO,w
 12392  0E36  00F2               	movwf	___bmul@multiplicand
 12393  0E37  085F               	movf	setDelayOff_GO@k,w
 12394  0E38  3190  20DA  318D   	fcall	___bmul
 12395  0E3B  0020               	movlb	0	; select bank0
 12396  0E3C  075E               	addwf	setDelayOff_GO@j,w
 12397  0E3D  00DC               	movwf	??_setDelayOff_GO+1
 12398  0E3E  0A69               	incf	_DelayOff,w
 12399  0E3F  0086               	movwf	6
 12400  0E40  3001               	movlw	1	; select bank2/3
 12401  0E41  0087               	movwf	7
 12402  0E42  085C               	movf	??_setDelayOff_GO+1,w
 12403  0E43  0081               	movwf	1
 12404                           
 12405                           ;DelayOff_B1.c: 102: setProductData(26 + sw, value);
 12406  0E44  085A               	movf	setDelayOff_GO@value,w
 12407  0E45  00DB               	movwf	??_setDelayOff_GO
 12408  0E46  085B               	movf	??_setDelayOff_GO,w
 12409  0E47  00D6               	movwf	setProductData@value
 12410  0E48  0860               	movf	setDelayOff_GO@sw,w
 12411  0E49  3E1A               	addlw	26
 12412  0E4A  319F  2779         	fcall	_setProductData
 12413                           
 12414                           ;DelayOff_B1.c: 103: } else {
 12415  0E4C  0008               	return
 12416  0E4D                     l6140:	
 12417                           
 12418                           ;DelayOff_B1.c: 104: DelayOff->Value = 0x05;
 12419  0E4D  3005               	movlw	5
 12420  0E4E  0020               	movlb	0	; select bank0
 12421  0E4F  00DB               	movwf	??_setDelayOff_GO
 12422  0E50  0A69               	incf	_DelayOff,w
 12423  0E51  0086               	movwf	6
 12424  0E52  3001               	movlw	1	; select bank2/3
 12425  0E53  0087               	movwf	7
 12426  0E54  085B               	movf	??_setDelayOff_GO,w
 12427  0E55  0081               	movwf	1
 12428                           
 12429                           ;DelayOff_B1.c: 105: setProductData(26 + sw, 0x05);
 12430  0E56  3005               	movlw	5
 12431  0E57  00DB               	movwf	??_setDelayOff_GO
 12432  0E58  085B               	movf	??_setDelayOff_GO,w
 12433  0E59  00D6               	movwf	setProductData@value
 12434  0E5A  0860               	movf	setDelayOff_GO@sw,w
 12435  0E5B  3E1A               	addlw	26
 12436  0E5C  319F  2779         	fcall	_setProductData
 12437                           
 12438                           ;DelayOff_B1.c: 106: }
 12439                           ;DelayOff_B1.c: 108: } else if (command == 0) {
 12440  0E5E  0008               	return
 12441  0E5F                     l6144:	
 12442  0E5F  0020               	movlb	0	; select bank0
 12443  0E60  08D9               	movf	setDelayOff_GO@command,f
 12444  0E61  1D03               	skipz
 12445  0E62  0008               	return
 12446                           
 12447                           ;DelayOff_B1.c: 109: setProductData(26 + sw, 0);
 12448  0E63  01D6               	clrf	setProductData@value
 12449  0E64  0860               	movf	setDelayOff_GO@sw,w
 12450  0E65  3E1A               	addlw	26
 12451  0E66  319F  2779         	fcall	_setProductData
 12452  0E68  0008               	return
 12453  0E69                     __end_of_setDelayOff_GO:	
 12454                           
 12455                           	psect	text83
 12456  10DA                     __ptext83:	
 12457 ;; *************** function ___bmul *****************
 12458 ;; Defined at:
 12459 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;  multiplier      1    wreg     unsigned char 
 12462 ;;  multiplicand    1    2[COMMON] unsigned char 
 12463 ;; Auto vars:     Size  Location     Type
 12464 ;;  multiplier      1    5[COMMON] unsigned char 
 12465 ;;  product         1    4[COMMON] unsigned char 
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  1    wreg      unsigned char 
 12468 ;; Registers used:
 12469 ;;		wreg, status,2, status,0
 12470 ;; Tracked objects:
 12471 ;;		On entry : 0/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;Total ram usage:        4 bytes
 12480 ;; Hardware stack levels used:    1
 12481 ;; Hardware stack levels required when called:    3
 12482 ;; This function calls:
 12483 ;;		Nothing
 12484 ;; This function is called by:
 12485 ;;		_setDelayOff_GO
 12486 ;;		_DelayTimejudge
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           
 12491                           ;psect for function ___bmul
 12492  10DA                     ___bmul:	
 12493                           
 12494                           ;incstack = 0
 12495                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12496                           ;___bmul@multiplier stored from wreg
 12497  10DA  00F5               	movwf	___bmul@multiplier
 12498  10DB  01F4               	clrf	___bmul@product
 12499  10DC                     l5788:	
 12500  10DC  1C75               	btfss	___bmul@multiplier,0
 12501  10DD  28E2               	goto	l5792
 12502  10DE  0872               	movf	___bmul@multiplicand,w
 12503  10DF  00F3               	movwf	??___bmul
 12504  10E0  0873               	movf	??___bmul,w
 12505  10E1  07F4               	addwf	___bmul@product,f
 12506  10E2                     l5792:	
 12507  10E2  1003               	clrc
 12508  10E3  0DF2               	rlf	___bmul@multiplicand,f
 12509  10E4  1003               	clrc
 12510  10E5  0CF5               	rrf	___bmul@multiplier,f
 12511  10E6  08F5               	movf	___bmul@multiplier,f
 12512  10E7  1D03               	skipz
 12513  10E8  28DC               	goto	l5788
 12514  10E9  0874               	movf	___bmul@product,w
 12515  10EA  0008               	return
 12516  10EB                     __end_of___bmul:	
 12517                           
 12518                           	psect	text84
 12519  1196                     __ptext84:	
 12520 ;; *************** function _setCmd_Status *****************
 12521 ;; Defined at:
 12522 ;;		line 656 in file "../src/Main_B1.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  number          1    wreg     unsigned char 
 12525 ;;  cmd             1    2[COMMON] unsigned char 
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;  number          1    4[COMMON] unsigned char 
 12528 ;; Return value:  Size  Location     Type
 12529 ;;		None               void
 12530 ;; Registers used:
 12531 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;Total ram usage:        3 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; Hardware stack levels required when called:    3
 12544 ;; This function calls:
 12545 ;;		Nothing
 12546 ;; This function is called by:
 12547 ;;		_setDimmerLights_OnOff
 12548 ;;		_setControl_Lights_Table
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           
 12553                           ;psect for function _setCmd_Status
 12554  1196                     _setCmd_Status:	
 12555                           
 12556                           ;incstack = 0
 12557                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
 12558                           ;setCmd_Status@number stored from wreg
 12559  1196  00F4               	movwf	setCmd_Status@number
 12560                           
 12561                           ;Main_B1.c: 657: switch (number) {
 12562  1197  29A5               	goto	l6294
 12563  1198                     l6290:	
 12564                           ;Main_B1.c: 658: case 1:
 12565                           
 12566                           
 12567                           ;Main_B1.c: 659: Cmd.all_off = cmd == 1 ? 1 : 0;
 12568  1198  0872               	movf	setCmd_Status@cmd,w
 12569  1199  3A01               	xorlw	1
 12570  119A  3000               	movlw	0
 12571  119B  1903               	skipnz
 12572  119C  3001               	movlw	1
 12573  119D  00F3               	movwf	??_setCmd_Status
 12574  119E  0020               	movlb	0	; select bank0
 12575  119F  0868               	movf	_Cmd,w
 12576  11A0  0673               	xorwf	??_setCmd_Status,w
 12577  11A1  39FE               	andlw	-2
 12578  11A2  0673               	xorwf	??_setCmd_Status,w
 12579  11A3  00E8               	movwf	_Cmd
 12580                           
 12581                           ;Main_B1.c: 661: }
 12582                           
 12583                           ;Main_B1.c: 660: break;
 12584  11A4  0008               	return
 12585  11A5                     l6294:	
 12586  11A5  0874               	movf	setCmd_Status@number,w
 12587                           
 12588                           ; Switch size 1, requested type "space"
 12589                           ; Number of cases is 1, Range of values is 1 to 1
 12590                           ; switch strategies available:
 12591                           ; Name         Instructions Cycles
 12592                           ; simple_byte            4     3 (average)
 12593                           ; direct_byte           11     9 (fixed)
 12594                           ; jumptable            263     9 (fixed)
 12595                           ;	Chosen strategy is simple_byte
 12596  11A6  3A01               	xorlw	1	; case 1
 12597  11A7  1903               	skipnz
 12598  11A8  2998               	goto	l6290
 12599  11A9  29AA               	goto	l1674
 12600  11AA                     l1674:	
 12601  11AA  0008               	return
 12602  11AB                     __end_of_setCmd_Status:	
 12603                           
 12604                           	psect	text85
 12605  1FD3                     __ptext85:	
 12606 ;; *************** function _getMain_All_LightsStatus *****************
 12607 ;; Defined at:
 12608 ;;		line 378 in file "../src/Main_B1.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  status          1    2[COMMON] unsigned char 
 12613 ;; Return value:  Size  Location     Type
 12614 ;;                  1    wreg      unsigned char 
 12615 ;; Registers used:
 12616 ;;		wreg, status,2, status,0
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;Total ram usage:        1 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    3
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_setDimmerLights_Main
 12633 ;;		_setDimmerLights_OnOff
 12634 ;;		_Flash_Memory_Main
 12635 ;;		_setControl_Lights_Table
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           
 12640                           ;psect for function _getMain_All_LightsStatus
 12641  1FD3                     _getMain_All_LightsStatus:	
 12642                           
 12643                           ;Main_B1.c: 379: char status = 0;
 12644                           
 12645                           ;incstack = 0
 12646                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2+status,0]
 12647  1FD3  01F2               	clrf	getMain_All_LightsStatus@status
 12648                           
 12649                           ;Main_B1.c: 398: status = DimmerLights1.Status == 1 ? 1 : 0;
 12650  1FD4  3000               	movlw	0
 12651  1FD5  0022               	movlb	2	; select bank2
 12652  1FD6  1854               	btfsc	(_DimmerLights1^(0+256)+1),0
 12653  1FD7  3001               	movlw	1
 12654  1FD8  00F2               	movwf	getMain_All_LightsStatus@status
 12655                           
 12656                           ;Main_B1.c: 399: if (status == 0) {
 12657  1FD9  08F2               	movf	getMain_All_LightsStatus@status,f
 12658  1FDA  1D03               	skipz
 12659  1FDB  2FE0               	goto	l8364
 12660                           
 12661                           ;Main_B1.c: 400: status = DimmerLights2.Status == 1 ? 1 : 0;
 12662  1FDC  3000               	movlw	0
 12663  1FDD  185D               	btfsc	(_DimmerLights2^(0+256)+1),0
 12664  1FDE  3001               	movlw	1
 12665  1FDF  00F2               	movwf	getMain_All_LightsStatus@status
 12666  1FE0                     l8364:	
 12667                           
 12668                           ;Main_B1.c: 401: }
 12669                           ;Main_B1.c: 425: return status;
 12670  1FE0  0872               	movf	getMain_All_LightsStatus@status,w
 12671  1FE1  0008               	return
 12672  1FE2                     __end_of_getMain_All_LightsStatus:	
 12673                           
 12674                           	psect	text86
 12675  1FC4                     __ptext86:	
 12676 ;; *************** function _getDelayOff_GO *****************
 12677 ;; Defined at:
 12678 ;;		line 114 in file "../src/DelayOff_B1.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  sw              1    wreg     unsigned char 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  sw              1    4[COMMON] unsigned char 
 12683 ;;  go              1    5[COMMON] unsigned char 
 12684 ;; Return value:  Size  Location     Type
 12685 ;;                  1    wreg      unsigned char 
 12686 ;; Registers used:
 12687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12697 ;;Total ram usage:        2 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:    4
 12700 ;; This function calls:
 12701 ;;		_DelayOffPointSelect
 12702 ;; This function is called by:
 12703 ;;		_setDimmerLights_OnOff
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           
 12708                           ;psect for function _getDelayOff_GO
 12709  1FC4                     _getDelayOff_GO:	
 12710                           
 12711                           ;incstack = 0
 12712                           ; Regs used in _getDelayOff_GO: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12713                           ;getDelayOff_GO@sw stored from wreg
 12714  1FC4  00F4               	movwf	getDelayOff_GO@sw
 12715                           
 12716                           ;DelayOff_B1.c: 115: DelayOffPointSelect(sw);
 12717  1FC5  0874               	movf	getDelayOff_GO@sw,w
 12718  1FC6  3191  216C         	fcall	_DelayOffPointSelect
 12719                           
 12720                           ;DelayOff_B1.c: 116: char go = DelayOff->GO == 1 ? 1 : 0;
 12721  1FC8  0020               	movlb	0	; select bank0
 12722  1FC9  0869               	movf	_DelayOff,w
 12723  1FCA  0086               	movwf	6
 12724  1FCB  3001               	movlw	1	; select bank2/3
 12725  1FCC  0087               	movwf	7
 12726  1FCD  3000               	movlw	0
 12727  1FCE  1881               	btfsc	1,1
 12728  1FCF  3001               	movlw	1
 12729  1FD0  00F5               	movwf	getDelayOff_GO@go
 12730                           
 12731                           ;DelayOff_B1.c: 117: return go;
 12732  1FD1  0875               	movf	getDelayOff_GO@go,w
 12733  1FD2  0008               	return
 12734  1FD3                     __end_of_getDelayOff_GO:	
 12735                           
 12736                           	psect	text87
 12737  108A                     __ptext87:	
 12738 ;; *************** function _getCmd_Status *****************
 12739 ;; Defined at:
 12740 ;;		line 664 in file "../src/Main_B1.c"
 12741 ;; Parameters:    Size  Location     Type
 12742 ;;  number          1    wreg     unsigned char 
 12743 ;; Auto vars:     Size  Location     Type
 12744 ;;  number          1    2[COMMON] unsigned char 
 12745 ;;  cmd             1    3[COMMON] unsigned char 
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  1    wreg      unsigned char 
 12748 ;; Registers used:
 12749 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;Total ram usage:        2 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    3
 12762 ;; This function calls:
 12763 ;;		Nothing
 12764 ;; This function is called by:
 12765 ;;		_setDimmerLights_OnOff
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           
 12770                           ;psect for function _getCmd_Status
 12771  108A                     _getCmd_Status:	
 12772                           
 12773                           ;incstack = 0
 12774                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
 12775                           ;getCmd_Status@number stored from wreg
 12776  108A  00F2               	movwf	getCmd_Status@number
 12777                           
 12778                           ;Main_B1.c: 665: char cmd = 0;
 12779  108B  01F3               	clrf	getCmd_Status@cmd
 12780                           
 12781                           ;Main_B1.c: 666: switch (number) {
 12782  108C  2893               	goto	l6584
 12783  108D                     l6580:	
 12784                           ;Main_B1.c: 667: case 1:
 12785                           
 12786                           
 12787                           ;Main_B1.c: 668: cmd = Cmd.all_off == 1 ? 1 : 0;
 12788  108D  3000               	movlw	0
 12789  108E  0020               	movlb	0	; select bank0
 12790  108F  1868               	btfsc	_Cmd,0
 12791  1090  3001               	movlw	1
 12792  1091  00F3               	movwf	getCmd_Status@cmd
 12793                           
 12794                           ;Main_B1.c: 670: }
 12795                           
 12796                           ;Main_B1.c: 669: break;
 12797  1092  2898               	goto	l6586
 12798  1093                     l6584:	
 12799  1093  0872               	movf	getCmd_Status@number,w
 12800                           
 12801                           ; Switch size 1, requested type "space"
 12802                           ; Number of cases is 1, Range of values is 1 to 1
 12803                           ; switch strategies available:
 12804                           ; Name         Instructions Cycles
 12805                           ; simple_byte            4     3 (average)
 12806                           ; direct_byte           11     9 (fixed)
 12807                           ; jumptable            263     9 (fixed)
 12808                           ;	Chosen strategy is simple_byte
 12809  1094  3A01               	xorlw	1	; case 1
 12810  1095  1903               	skipnz
 12811  1096  288D               	goto	l6580
 12812  1097  2898               	goto	l6586
 12813  1098                     l6586:	
 12814                           
 12815                           ;Main_B1.c: 671: return cmd;
 12816  1098  0873               	movf	getCmd_Status@cmd,w
 12817  1099  0008               	return
 12818  109A                     __end_of_getCmd_Status:	
 12819                           
 12820                           	psect	text88
 12821  08A5                     __ptext88:	
 12822 ;; *************** function _setDimmerLights_Dimming *****************
 12823 ;; Defined at:
 12824 ;;		line 1142 in file "../src/Dimmer_B1.c"
 12825 ;; Parameters:    Size  Location     Type
 12826 ;;  lights          1    wreg     unsigned char 
 12827 ;;  status          1   62[BANK0 ] unsigned char 
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;  lights          1   65[BANK0 ] unsigned char 
 12830 ;;  value           1   64[BANK0 ] unsigned char 
 12831 ;; Return value:  Size  Location     Type
 12832 ;;		None               void
 12833 ;; Registers used:
 12834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12835 ;; Tracked objects:
 12836 ;;		On entry : 0/0
 12837 ;;		On exit  : 0/0
 12838 ;;		Unchanged: 0/0
 12839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12840 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12841 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12842 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12843 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12844 ;;Total ram usage:        4 bytes
 12845 ;; Hardware stack levels used:    1
 12846 ;; Hardware stack levels required when called:    6
 12847 ;; This function calls:
 12848 ;;		_getDimmerIntr_DimmingValue
 12849 ;;		_getDimmerLights_ValueToPercent
 12850 ;;		_setBuz
 12851 ;;		_setDimmerIntr_Dimming_Sw
 12852 ;;		_setDimmerIntr_MaxmumValue
 12853 ;;		_setMemory_Modify
 12854 ;;		_setProductData
 12855 ;;		_setRF_DimmerLights
 12856 ;;		_setRF_TransceiveGO
 12857 ;;		_setTxData
 12858 ;; This function is called by:
 12859 ;;		_setDimmerLights_Main
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           
 12864                           ;psect for function _setDimmerLights_Dimming
 12865  08A5                     _setDimmerLights_Dimming:	
 12866                           
 12867                           ;incstack = 0
 12868                           ; Regs used in _setDimmerLights_Dimming: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12869                           ;setDimmerLights_Dimming@lights stored from wreg
 12870  08A5  0020               	movlb	0	; select bank0
 12871  08A6  00E1               	movwf	setDimmerLights_Dimming@lights
 12872                           
 12873                           ;Dimmer_B1.c: 1143: setDimmerIntr_Dimming_Sw(lights, status);
 12874  08A7  085E               	movf	setDimmerLights_Dimming@status,w
 12875  08A8  00DF               	movwf	??_setDimmerLights_Dimming
 12876  08A9  085F               	movf	??_setDimmerLights_Dimming,w
 12877  08AA  00F2               	movwf	setDimmerIntr_Dimming_Sw@command
 12878  08AB  0861               	movf	setDimmerLights_Dimming@lights,w
 12879  08AC  3194  244C  3188   	fcall	_setDimmerIntr_Dimming_Sw
 12880                           
 12881                           ;Dimmer_B1.c: 1144: if (status == 1) {
 12882  08AF  0020               	movlb	0	; select bank0
 12883  08B0  085E               	movf	setDimmerLights_Dimming@status,w
 12884  08B1  3A01               	xorlw	1
 12885  08B2  1D03               	skipz
 12886  08B3  28C1               	goto	l10162
 12887                           
 12888                           ;Dimmer_B1.c: 1146: setRF_TransceiveGO(0);
 12889  08B4  3000               	movlw	0
 12890  08B5  3190  207A  3188   	fcall	_setRF_TransceiveGO
 12891                           
 12892                           ;Dimmer_B1.c: 1148: setBuz(1, 100);
 12893  08B8  3064               	movlw	100
 12894  08B9  0020               	movlb	0	; select bank0
 12895  08BA  00A4               	movwf	setBuz@time
 12896  08BB  3000               	movlw	0
 12897  08BC  00A5               	movwf	setBuz@time+1
 12898  08BD  3001               	movlw	1
 12899  08BE  3189  2141         	fcall	_setBuz
 12900                           
 12901                           ;Dimmer_B1.c: 1149: } else if (status == 0) {
 12902  08C0  0008               	return
 12903  08C1                     l10162:	
 12904  08C1  0020               	movlb	0	; select bank0
 12905  08C2  08DE               	movf	setDimmerLights_Dimming@status,f
 12906  08C3  1D03               	skipz
 12907  08C4  0008               	return
 12908                           
 12909                           ;Dimmer_B1.c: 1155: char value = getDimmerIntr_DimmingValue(lights);
 12910  08C5  0861               	movf	setDimmerLights_Dimming@lights,w
 12911  08C6  3191  2130  3188   	fcall	_getDimmerIntr_DimmingValue
 12912  08C9  0020               	movlb	0	; select bank0
 12913  08CA  00DF               	movwf	??_setDimmerLights_Dimming
 12914  08CB  085F               	movf	??_setDimmerLights_Dimming,w
 12915  08CC  00E0               	movwf	setDimmerLights_Dimming@value
 12916                           
 12917                           ;Dimmer_B1.c: 1156: setDimmerIntr_MaxmumValue(lights, value);
 12918  08CD  0860               	movf	setDimmerLights_Dimming@value,w
 12919  08CE  00DF               	movwf	??_setDimmerLights_Dimming
 12920  08CF  085F               	movf	??_setDimmerLights_Dimming,w
 12921  08D0  00D8               	movwf	setDimmerIntr_MaxmumValue@value
 12922  08D1  0861               	movf	setDimmerLights_Dimming@lights,w
 12923  08D2  3192  222A  3188   	fcall	_setDimmerIntr_MaxmumValue
 12924                           
 12925                           ;Dimmer_B1.c: 1157: setProductData((20 + lights), getDimmerLights_ValueToPercent(value))
      +                          ;
 12926  08D5  0020               	movlb	0	; select bank0
 12927  08D6  0860               	movf	setDimmerLights_Dimming@value,w
 12928  08D7  3188  205F  3188   	fcall	_getDimmerLights_ValueToPercent
 12929  08DA  0020               	movlb	0	; select bank0
 12930  08DB  00DF               	movwf	??_setDimmerLights_Dimming
 12931  08DC  085F               	movf	??_setDimmerLights_Dimming,w
 12932  08DD  00D6               	movwf	setProductData@value
 12933  08DE  0861               	movf	setDimmerLights_Dimming@lights,w
 12934  08DF  3E14               	addlw	20
 12935  08E0  319F  2779  3188   	fcall	_setProductData
 12936                           
 12937                           ;Dimmer_B1.c: 1164: setMemory_Modify(1);
 12938  08E3  3001               	movlw	1
 12939  08E4  3190  206A  3188   	fcall	_setMemory_Modify
 12940                           
 12941                           ;Dimmer_B1.c: 1168: setRF_DimmerLights(lights, 1);
 12942  08E7  0020               	movlb	0	; select bank0
 12943  08E8  01D9               	clrf	setRF_DimmerLights@on
 12944  08E9  0AD9               	incf	setRF_DimmerLights@on,f
 12945  08EA  0861               	movf	setDimmerLights_Dimming@lights,w
 12946  08EB  318C  2432  3188   	fcall	_setRF_DimmerLights
 12947                           
 12948                           ;Dimmer_B1.c: 1169: setTxData();
 12949  08EE  319E  26DA         	fcall	_setTxData
 12950  08F0  0008               	return
 12951  08F1                     __end_of_setDimmerLights_Dimming:	
 12952                           
 12953                           	psect	text89
 12954  1EDA                     __ptext89:	
 12955 ;; *************** function _setTxData *****************
 12956 ;; Defined at:
 12957 ;;		line 237 in file "../src/RF_Control_B1.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;		None
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;  i               1    0        unsigned char 
 12962 ;; Return value:  Size  Location     Type
 12963 ;;		None               void
 12964 ;; Registers used:
 12965 ;;		status,2
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;Total ram usage:        0 bytes
 12976 ;; Hardware stack levels used:    1
 12977 ;; Hardware stack levels required when called:    3
 12978 ;; This function calls:
 12979 ;;		Nothing
 12980 ;; This function is called by:
 12981 ;;		_setDimmerLights_OnOff
 12982 ;;		_setDimmerLights_Dimming
 12983 ;;		_getRxData
 12984 ;;		_setControl_Lights_Table
 12985 ;;		_setRFSW_Control
 12986 ;;		_setRFSW_AdjControl
 12987 ;; This function uses a non-reentrant model
 12988 ;;
 12989                           
 12990                           
 12991                           ;psect for function _setTxData
 12992  1EDA                     _setTxData:	
 12993                           
 12994                           ;RF_Control_B1.c: 238: char i;
 12995                           ;RF_Control_B1.c: 239: if (RF1.Enable == 1) {
 12996                           
 12997                           ;incstack = 0
 12998                           ; Regs used in _setTxData: [status,2]
 12999  1EDA  0021               	movlb	1	; select bank1
 13000  1EDB  1C30               	btfss	_RF1^(0+128),0
 13001  1EDC  0008               	return
 13002                           
 13003                           ;RF_Control_B1.c: 241: RF1.TransceiveGO = 1;
 13004  1EDD  1530               	bsf	_RF1^(0+128),2
 13005                           
 13006                           ;RF_Control_B1.c: 242: RF1.Count = 0;
 13007  1EDE  01B3               	clrf	(_RF1^(0+128)+3)
 13008  1EDF  01B4               	clrf	((_RF1+1)^(0+128)+3)
 13009  1EE0  0008               	return
 13010  1EE1                     __end_of_setTxData:	
 13011                           
 13012                           	psect	text90
 13013  107A                     __ptext90:	
 13014 ;; *************** function _setRF_TransceiveGO *****************
 13015 ;; Defined at:
 13016 ;;		line 575 in file "../src/RF_Control_B1.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;  command         1    wreg     unsigned char 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  command         1    3[COMMON] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;		None               void
 13023 ;; Registers used:
 13024 ;;		wreg, status,2, status,0
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;Total ram usage:        2 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:    3
 13037 ;; This function calls:
 13038 ;;		Nothing
 13039 ;; This function is called by:
 13040 ;;		_setDimmerLights_Dimming
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           
 13045                           ;psect for function _setRF_TransceiveGO
 13046  107A                     _setRF_TransceiveGO:	
 13047                           
 13048                           ;incstack = 0
 13049                           ; Regs used in _setRF_TransceiveGO: [wreg+status,2+status,0]
 13050                           ;setRF_TransceiveGO@command stored from wreg
 13051  107A  00F3               	movwf	setRF_TransceiveGO@command
 13052                           
 13053                           ;RF_Control_B1.c: 576: RF1.TransceiveGO = command == 1 ? 1 : 0;
 13054  107B  0873               	movf	setRF_TransceiveGO@command,w
 13055  107C  3A01               	xorlw	1
 13056  107D  3000               	movlw	0
 13057  107E  1903               	skipnz
 13058  107F  3001               	movlw	1
 13059  1080  00F2               	movwf	??_setRF_TransceiveGO
 13060  1081  0DF2               	rlf	??_setRF_TransceiveGO,f
 13061  1082  0DF2               	rlf	??_setRF_TransceiveGO,f
 13062  1083  0021               	movlb	1	; select bank1
 13063  1084  0830               	movf	_RF1^(0+128),w
 13064  1085  0672               	xorwf	??_setRF_TransceiveGO,w
 13065  1086  39FB               	andlw	-5
 13066  1087  0672               	xorwf	??_setRF_TransceiveGO,w
 13067  1088  00B0               	movwf	_RF1^(0+128)
 13068  1089  0008               	return
 13069  108A                     __end_of_setRF_TransceiveGO:	
 13070                           
 13071                           	psect	text91
 13072  0C32                     __ptext91:	
 13073 ;; *************** function _setRF_DimmerLights *****************
 13074 ;; Defined at:
 13075 ;;		line 550 in file "../src/RF_Control_B1.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;  lights          1    wreg     unsigned char 
 13078 ;;  on              1   57[BANK0 ] unsigned char 
 13079 ;; Auto vars:     Size  Location     Type
 13080 ;;  lights          1   61[BANK0 ] unsigned char 
 13081 ;;  status          1   60[BANK0 ] unsigned char 
 13082 ;; Return value:  Size  Location     Type
 13083 ;;		None               void
 13084 ;; Registers used:
 13085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13086 ;; Tracked objects:
 13087 ;;		On entry : 0/0
 13088 ;;		On exit  : 0/0
 13089 ;;		Unchanged: 0/0
 13090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13094 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;Total ram usage:        5 bytes
 13096 ;; Hardware stack levels used:    1
 13097 ;; Hardware stack levels required when called:    4
 13098 ;; This function calls:
 13099 ;;		_setProductData
 13100 ;; This function is called by:
 13101 ;;		_setDimmerLights_OnOff
 13102 ;;		_setDimmerLights_Dimming
 13103 ;;		_setRFSW_Control
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           
 13108                           ;psect for function _setRF_DimmerLights
 13109  0C32                     _setRF_DimmerLights:	
 13110                           
 13111                           ;incstack = 0
 13112                           ; Regs used in _setRF_DimmerLights: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13113                           ;setRF_DimmerLights@lights stored from wreg
 13114  0C32  0020               	movlb	0	; select bank0
 13115  0C33  00DD               	movwf	setRF_DimmerLights@lights
 13116                           
 13117                           ;RF_Control_B1.c: 551: char status = 1;
 13118  0C34  01DC               	clrf	setRF_DimmerLights@status
 13119  0C35  0ADC               	incf	setRF_DimmerLights@status,f
 13120                           
 13121                           ;RF_Control_B1.c: 552: switch (lights) {
 13122  0C36  2C3D               	goto	l6184
 13123  0C37                     l6178:	
 13124                           ;RF_Control_B1.c: 553: case 2:
 13125                           
 13126  0C37  2C3A               	goto	L6
 13127  0C38                     l6180:	
 13128                           ;RF_Control_B1.c: 556: case 3:
 13129                           
 13130                           ;RF_Control_B1.c: 555: break;
 13131                           
 13132                           ;RF_Control_B1.c: 554: status <<= 1;
 13133                           
 13134                           
 13135                           ;RF_Control_B1.c: 557: status <<= 2;
 13136  0C38  1003               	clrc
 13137  0C39  0DDC               	rlf	setRF_DimmerLights@status,f
 13138  0C3A                     L6:	
 13139  0C3A  1003               	clrc
 13140  0C3B  0DDC               	rlf	setRF_DimmerLights@status,f
 13141                           
 13142                           ;RF_Control_B1.c: 559: }
 13143                           
 13144                           ;RF_Control_B1.c: 558: break;
 13145  0C3C  2C45               	goto	l2307
 13146  0C3D                     l6184:	
 13147  0C3D  085D               	movf	setRF_DimmerLights@lights,w
 13148                           
 13149                           ; Switch size 1, requested type "space"
 13150                           ; Number of cases is 2, Range of values is 2 to 3
 13151                           ; switch strategies available:
 13152                           ; Name         Instructions Cycles
 13153                           ; simple_byte            7     4 (average)
 13154                           ; direct_byte           13     9 (fixed)
 13155                           ; jumptable            263     9 (fixed)
 13156                           ;	Chosen strategy is simple_byte
 13157  0C3E  3A02               	xorlw	2	; case 2
 13158  0C3F  1903               	skipnz
 13159  0C40  2C37               	goto	l6178
 13160  0C41  3A01               	xorlw	1	; case 3
 13161  0C42  1903               	skipnz
 13162  0C43  2C38               	goto	l6180
 13163  0C44  2C45               	goto	l2307
 13164  0C45                     l2307:	
 13165                           
 13166                           ;RF_Control_B1.c: 560: status = ~status;
 13167  0C45  09DC               	comf	setRF_DimmerLights@status,f
 13168                           
 13169                           ;RF_Control_B1.c: 562: setProductData(11, lights);
 13170  0C46  085D               	movf	setRF_DimmerLights@lights,w
 13171  0C47  00DA               	movwf	??_setRF_DimmerLights
 13172  0C48  085A               	movf	??_setRF_DimmerLights,w
 13173  0C49  00D6               	movwf	setProductData@value
 13174  0C4A  300B               	movlw	11
 13175  0C4B  319F  2779  318C   	fcall	_setProductData
 13176                           
 13177                           ;RF_Control_B1.c: 563: setProductData(17, product->Data[26 + lights]);
 13178  0C4E  0020               	movlb	0	; select bank0
 13179  0C4F  085D               	movf	setRF_DimmerLights@lights,w
 13180  0C50  3E1A               	addlw	26
 13181  0C51  076E               	addwf	_product,w
 13182  0C52  00DA               	movwf	??_setRF_DimmerLights
 13183  0C53  085A               	movf	??_setRF_DimmerLights,w
 13184  0C54  0086               	movwf	6
 13185  0C55  3002               	movlw	2	; select bank4/5
 13186  0C56  0087               	movwf	7
 13187  0C57  0801               	movf	1,w
 13188  0C58  00DB               	movwf	??_setRF_DimmerLights+1
 13189  0C59  085B               	movf	??_setRF_DimmerLights+1,w
 13190  0C5A  00D6               	movwf	setProductData@value
 13191  0C5B  3011               	movlw	17
 13192  0C5C  319F  2779  318C   	fcall	_setProductData
 13193                           
 13194                           ;RF_Control_B1.c: 564: if (on == 1) {
 13195  0C5F  0020               	movlb	0	; select bank0
 13196  0C60  0859               	movf	setRF_DimmerLights@on,w
 13197  0C61  3A01               	xorlw	1
 13198  0C62  1D03               	skipz
 13199  0C63  2C83               	goto	l6192
 13200                           
 13201                           ;RF_Control_B1.c: 565: setProductData(9, product->Data[20 + lights]);
 13202  0C64  085D               	movf	setRF_DimmerLights@lights,w
 13203  0C65  3E14               	addlw	20
 13204  0C66  076E               	addwf	_product,w
 13205  0C67  00DA               	movwf	??_setRF_DimmerLights
 13206  0C68  085A               	movf	??_setRF_DimmerLights,w
 13207  0C69  0086               	movwf	6
 13208  0C6A  3002               	movlw	2	; select bank4/5
 13209  0C6B  0087               	movwf	7
 13210  0C6C  0801               	movf	1,w
 13211  0C6D  00DB               	movwf	??_setRF_DimmerLights+1
 13212  0C6E  085B               	movf	??_setRF_DimmerLights+1,w
 13213  0C6F  00D6               	movwf	setProductData@value
 13214  0C70  3009               	movlw	9
 13215  0C71  319F  2779  318C   	fcall	_setProductData
 13216                           
 13217                           ;RF_Control_B1.c: 566: setProductData(15, (product->Data[15] | lights));
 13218  0C74  0020               	movlb	0	; select bank0
 13219  0C75  086E               	movf	_product,w
 13220  0C76  3E0F               	addlw	15
 13221  0C77  0086               	movwf	6
 13222  0C78  3002               	movlw	2	; select bank4/5
 13223  0C79  0087               	movwf	7
 13224  0C7A  0801               	movf	1,w
 13225  0C7B  045D               	iorwf	setRF_DimmerLights@lights,w
 13226  0C7C  00DA               	movwf	??_setRF_DimmerLights
 13227  0C7D  085A               	movf	??_setRF_DimmerLights,w
 13228  0C7E  00D6               	movwf	setProductData@value
 13229  0C7F  300F               	movlw	15
 13230  0C80  319F  2779         	fcall	_setProductData
 13231                           
 13232                           ;RF_Control_B1.c: 567: } else {
 13233  0C82  0008               	return
 13234  0C83                     l6192:	
 13235                           
 13236                           ;RF_Control_B1.c: 568: setProductData(9, 0x00);
 13237  0C83  0020               	movlb	0	; select bank0
 13238  0C84  01D6               	clrf	setProductData@value
 13239  0C85  3009               	movlw	9
 13240  0C86  319F  2779  318C   	fcall	_setProductData
 13241                           
 13242                           ;RF_Control_B1.c: 569: setProductData(15, (product->Data[15] & status));
 13243  0C89  0020               	movlb	0	; select bank0
 13244  0C8A  086E               	movf	_product,w
 13245  0C8B  3E0F               	addlw	15
 13246  0C8C  0086               	movwf	6
 13247  0C8D  3002               	movlw	2	; select bank4/5
 13248  0C8E  0087               	movwf	7
 13249  0C8F  0801               	movf	1,w
 13250  0C90  055C               	andwf	setRF_DimmerLights@status,w
 13251  0C91  00DA               	movwf	??_setRF_DimmerLights
 13252  0C92  085A               	movf	??_setRF_DimmerLights,w
 13253  0C93  00D6               	movwf	setProductData@value
 13254  0C94  300F               	movlw	15
 13255  0C95  319F  2779         	fcall	_setProductData
 13256  0C97  0008               	return
 13257  0C98                     __end_of_setRF_DimmerLights:	
 13258                           
 13259                           	psect	text92
 13260  122A                     __ptext92:	
 13261 ;; *************** function _setDimmerIntr_MaxmumValue *****************
 13262 ;; Defined at:
 13263 ;;		line 175 in file "../src/Dimmer_B1.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  lights          1    wreg     unsigned char 
 13266 ;;  value           1   56[BANK0 ] unsigned char 
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;  lights          1   58[BANK0 ] unsigned char 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;		None               void
 13271 ;; Registers used:
 13272 ;;		wreg
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13278 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;Total ram usage:        3 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    3
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_setDimmerLights_OnOff
 13289 ;;		_setDimmerLights_Dimming
 13290 ;;		_setRFSW_AdjControl
 13291 ;;		_DimmerLights_AssignationDimming
 13292 ;; This function uses a non-reentrant model
 13293 ;;
 13294                           
 13295                           
 13296                           ;psect for function _setDimmerIntr_MaxmumValue
 13297  122A                     _setDimmerIntr_MaxmumValue:	
 13298                           
 13299                           ;incstack = 0
 13300                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
 13301                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
 13302  122A  0020               	movlb	0	; select bank0
 13303  122B  00DA               	movwf	setDimmerIntr_MaxmumValue@lights
 13304                           
 13305                           ;Dimmer_B1.c: 177: if (lights == 1) {
 13306  122C  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13307  122D  3A01               	xorlw	1
 13308  122E  1D03               	skipz
 13309  122F  2A36               	goto	l6164
 13310                           
 13311                           ;Dimmer_B1.c: 178: DimmerIntr1.MaxmumValue = value;
 13312  1230  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13313  1231  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13314  1232  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13315  1233  0021               	movlb	1	; select bank1
 13316  1234  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 13317                           
 13318                           ;Dimmer_B1.c: 179: }
 13319  1235  0008               	return
 13320  1236                     l6164:	
 13321                           
 13322                           ;Dimmer_B1.c: 182: else if (lights == 2) {
 13323  1236  0020               	movlb	0	; select bank0
 13324  1237  085A               	movf	setDimmerIntr_MaxmumValue@lights,w
 13325  1238  3A02               	xorlw	2
 13326  1239  1D03               	skipz
 13327  123A  0008               	return
 13328                           
 13329                           ;Dimmer_B1.c: 183: DimmerIntr2.MaxmumValue = value;
 13330  123B  0858               	movf	setDimmerIntr_MaxmumValue@value,w
 13331  123C  00D9               	movwf	??_setDimmerIntr_MaxmumValue
 13332  123D  0859               	movf	??_setDimmerIntr_MaxmumValue,w
 13333  123E  0022               	movlb	2	; select bank2
 13334  123F  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 13335  1240  0008               	return
 13336  1241                     __end_of_setDimmerIntr_MaxmumValue:	
 13337                           
 13338                           	psect	text93
 13339  144C                     __ptext93:	
 13340 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
 13341 ;; Defined at:
 13342 ;;		line 251 in file "../src/Dimmer_B1.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;  lights          1    wreg     unsigned char 
 13345 ;;  command         1    2[COMMON] unsigned char 
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;  lights          1    4[COMMON] unsigned char 
 13348 ;; Return value:  Size  Location     Type
 13349 ;;		None               void
 13350 ;; Registers used:
 13351 ;;		wreg, status,2, status,0
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13357 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;Total ram usage:        3 bytes
 13362 ;; Hardware stack levels used:    1
 13363 ;; Hardware stack levels required when called:    3
 13364 ;; This function calls:
 13365 ;;		Nothing
 13366 ;; This function is called by:
 13367 ;;		_setDimmerLights_Dimming
 13368 ;;		_setDimmerLights_DimmingClose
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           
 13372                           
 13373                           ;psect for function _setDimmerIntr_Dimming_Sw
 13374  144C                     _setDimmerIntr_Dimming_Sw:	
 13375                           
 13376                           ;incstack = 0
 13377                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
 13378                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
 13379  144C  00F4               	movwf	setDimmerIntr_Dimming_Sw@lights
 13380                           
 13381                           ;Dimmer_B1.c: 253: if (lights == 1) {
 13382  144D  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13383  144E  3A01               	xorlw	1
 13384  144F  1D03               	skipz
 13385  1450  2C5F               	goto	l6272
 13386                           
 13387                           ;Dimmer_B1.c: 254: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
 13388  1451  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13389  1452  3A01               	xorlw	1
 13390  1453  3000               	movlw	0
 13391  1454  1903               	skipnz
 13392  1455  3001               	movlw	1
 13393  1456  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13394  1457  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13395  1458  0021               	movlb	1	; select bank1
 13396  1459  0820               	movf	_DimmerIntr1^(0+128),w
 13397  145A  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13398  145B  39EF               	andlw	-17
 13399  145C  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13400  145D  00A0               	movwf	_DimmerIntr1^(0+128)
 13401                           
 13402                           ;Dimmer_B1.c: 255: }
 13403  145E  0008               	return
 13404  145F                     l6272:	
 13405                           
 13406                           ;Dimmer_B1.c: 258: else if (lights == 2) {
 13407  145F  0874               	movf	setDimmerIntr_Dimming_Sw@lights,w
 13408  1460  3A02               	xorlw	2
 13409  1461  1D03               	skipz
 13410  1462  0008               	return
 13411                           
 13412                           ;Dimmer_B1.c: 259: DimmerIntr2.Dimming_Sw = command == 1 ? 1 : 0;
 13413  1463  0872               	movf	setDimmerIntr_Dimming_Sw@command,w
 13414  1464  3A01               	xorlw	1
 13415  1465  3000               	movlw	0
 13416  1466  1903               	skipnz
 13417  1467  3001               	movlw	1
 13418  1468  00F3               	movwf	??_setDimmerIntr_Dimming_Sw
 13419  1469  0EF3               	swapf	??_setDimmerIntr_Dimming_Sw,f
 13420  146A  0022               	movlb	2	; select bank2
 13421  146B  083E               	movf	_DimmerIntr2^(0+256),w
 13422  146C  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13423  146D  39EF               	andlw	-17
 13424  146E  0673               	xorwf	??_setDimmerIntr_Dimming_Sw,w
 13425  146F  00BE               	movwf	_DimmerIntr2^(0+256)
 13426  1470  0008               	return
 13427  1471                     __end_of_setDimmerIntr_Dimming_Sw:	
 13428                           
 13429                           	psect	text94
 13430  1130                     __ptext94:	
 13431 ;; *************** function _getDimmerIntr_DimmingValue *****************
 13432 ;; Defined at:
 13433 ;;		line 155 in file "../src/Dimmer_B1.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  lights          1    wreg     unsigned char 
 13436 ;; Auto vars:     Size  Location     Type
 13437 ;;  lights          1    4[COMMON] unsigned char 
 13438 ;;  value           1    3[COMMON] unsigned char 
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      unsigned char 
 13441 ;; Registers used:
 13442 ;;		wreg, status,2
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;Total ram usage:        3 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; Hardware stack levels required when called:    3
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_setDimmerLights_Dimming
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           
 13463                           ;psect for function _getDimmerIntr_DimmingValue
 13464  1130                     _getDimmerIntr_DimmingValue:	
 13465                           
 13466                           ;incstack = 0
 13467                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
 13468                           ;getDimmerIntr_DimmingValue@lights stored from wreg
 13469  1130  00F4               	movwf	getDimmerIntr_DimmingValue@lights
 13470                           
 13471                           ;Dimmer_B1.c: 156: char value = 0;
 13472  1131  01F3               	clrf	getDimmerIntr_DimmingValue@value
 13473                           
 13474                           ;Dimmer_B1.c: 158: if (lights == 1) {
 13475  1132  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13476  1133  3A01               	xorlw	1
 13477  1134  1D03               	skipz
 13478  1135  2939               	goto	l6510
 13479                           
 13480                           ;Dimmer_B1.c: 159: value = DimmerIntr1.DimmingValue;
 13481  1136  0021               	movlb	1	; select bank1
 13482  1137  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 13483  1138  293F               	goto	L7
 13484  1139                     l6510:	
 13485                           ;Dimmer_B1.c: 160: }
 13486                           
 13487                           
 13488                           ;Dimmer_B1.c: 163: else if (lights == 2) {
 13489  1139  0874               	movf	getDimmerIntr_DimmingValue@lights,w
 13490  113A  3A02               	xorlw	2
 13491  113B  1D03               	skipz
 13492  113C  2942               	goto	l749
 13493                           
 13494                           ;Dimmer_B1.c: 164: value = DimmerIntr2.DimmingValue;
 13495  113D  0022               	movlb	2	; select bank2
 13496  113E  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 13497  113F                     L7:	
 13498  113F  00F2               	movwf	??_getDimmerIntr_DimmingValue
 13499  1140  0872               	movf	??_getDimmerIntr_DimmingValue,w
 13500  1141  00F3               	movwf	getDimmerIntr_DimmingValue@value
 13501  1142                     l749:	
 13502                           
 13503                           ;Dimmer_B1.c: 165: }
 13504                           ;Dimmer_B1.c: 172: return value;
 13505  1142  0873               	movf	getDimmerIntr_DimmingValue@value,w
 13506  1143  0008               	return
 13507  1144                     __end_of_getDimmerIntr_DimmingValue:	
 13508                           
 13509                           	psect	text95
 13510  1427                     __ptext95:	
 13511 ;; *************** function _getDimmerLights_Allow_Condition *****************
 13512 ;; Defined at:
 13513 ;;		line 1175 in file "../src/Dimmer_B1.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  lights          1    wreg     unsigned char 
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;  lights          1    5[COMMON] unsigned char 
 13518 ;;  allow           1    6[COMMON] unsigned char 
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      unsigned char 
 13521 ;; Registers used:
 13522 ;;		wreg, status,2, status,0
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;Total ram usage:        5 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:    3
 13535 ;; This function calls:
 13536 ;;		Nothing
 13537 ;; This function is called by:
 13538 ;;		_setDimmerLights_Main
 13539 ;; This function uses a non-reentrant model
 13540 ;;
 13541                           
 13542                           
 13543                           ;psect for function _getDimmerLights_Allow_Condition
 13544  1427                     _getDimmerLights_Allow_Condition:	
 13545                           
 13546                           ;incstack = 0
 13547                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2+status,0]
 13548                           ;getDimmerLights_Allow_Condition@lights stored from wreg
 13549  1427  00F5               	movwf	getDimmerLights_Allow_Condition@lights
 13550                           
 13551                           ;Dimmer_B1.c: 1176: char allow = 0;
 13552  1428  01F6               	clrf	getDimmerLights_Allow_Condition@allow
 13553                           
 13554                           ;Dimmer_B1.c: 1186: if (allow == 0) {
 13555  1429  08F6               	movf	getDimmerLights_Allow_Condition@allow,f
 13556  142A  1D03               	skipz
 13557  142B  2C4A               	goto	l6794
 13558                           
 13559                           ;Dimmer_B1.c: 1187: if (lights == 1) {
 13560  142C  0875               	movf	getDimmerLights_Allow_Condition@lights,w
 13561  142D  3A01               	xorlw	1
 13562  142E  1D03               	skipz
 13563  142F  2C39               	goto	l6784
 13564                           
 13565                           ;Dimmer_B1.c: 1188: allow = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw 
      +                          == 1 ? 1 : 0;
 13566  1430  01F3               	clrf	_getDimmerLights_Allow_Condition$2473
 13567  1431  0AF3               	incf	_getDimmerLights_Allow_Condition$2473,f
 13568  1432  0022               	movlb	2	; select bank2
 13569  1433  1E5C               	btfss	_DimmerLights2^(0+256),4
 13570  1434  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 13571  1435  2C37               	goto	l6782
 13572  1436  01F3               	clrf	_getDimmerLights_Allow_Condition$2473
 13573  1437                     l6782:	
 13574  1437  0873               	movf	_getDimmerLights_Allow_Condition$2473,w
 13575  1438  2C47               	goto	L8
 13576  1439                     l6784:	
 13577                           ;Dimmer_B1.c: 1189: } else if (lights == 2) {
 13578                           
 13579  1439  0875               	movf	getDimmerLights_Allow_Condition@lights,w
 13580  143A  3A02               	xorlw	2
 13581  143B  1D03               	skipz
 13582  143C  2C4A               	goto	l6794
 13583                           
 13584                           ;Dimmer_B1.c: 1190: allow = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw 
      +                          == 1 ? 1 : 0;
 13585  143D  01F4               	clrf	_getDimmerLights_Allow_Condition$2474
 13586  143E  0AF4               	incf	_getDimmerLights_Allow_Condition$2474,f
 13587  143F  0022               	movlb	2	; select bank2
 13588  1440  1A53               	btfsc	_DimmerLights1^(0+256),4
 13589  1441  2C46               	goto	l6792
 13590  1442  0021               	movlb	1	; select bank1
 13591  1443  1A20               	btfsc	_DimmerIntr1^(0+128),4
 13592  1444  2C46               	goto	l6792
 13593  1445  01F4               	clrf	_getDimmerLights_Allow_Condition$2474
 13594  1446                     l6792:	
 13595  1446  0874               	movf	_getDimmerLights_Allow_Condition$2474,w
 13596  1447                     L8:	
 13597  1447  00F2               	movwf	??_getDimmerLights_Allow_Condition
 13598  1448  0872               	movf	??_getDimmerLights_Allow_Condition,w
 13599  1449  00F6               	movwf	getDimmerLights_Allow_Condition@allow
 13600  144A                     l6794:	
 13601                           
 13602                           ;Dimmer_B1.c: 1191: }
 13603                           ;Dimmer_B1.c: 1192: }
 13604                           ;Dimmer_B1.c: 1210: return allow;
 13605  144A  0876               	movf	getDimmerLights_Allow_Condition@allow,w
 13606  144B  0008               	return
 13607  144C                     __end_of_getDimmerLights_Allow_Condition:	
 13608                           
 13609                           	psect	text96
 13610  06F7                     __ptext96:	
 13611 ;; *************** function _DimmerLights_DimmingFunction *****************
 13612 ;; Defined at:
 13613 ;;		line 2130 in file "../src/Dimmer_B1.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;  lights          1    wreg     unsigned char 
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;  lights          1    5[COMMON] unsigned char 
 13618 ;; Return value:  Size  Location     Type
 13619 ;;		None               void
 13620 ;; Registers used:
 13621 ;;		wreg, status,2, status,0, pclath, cstack
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;Total ram usage:        2 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:    4
 13634 ;; This function calls:
 13635 ;;		_DimmerIntr_ValueCalculate
 13636 ;; This function is called by:
 13637 ;;		_DimmerLights_Main
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           
 13642                           ;psect for function _DimmerLights_DimmingFunction
 13643  06F7                     _DimmerLights_DimmingFunction:	
 13644                           
 13645                           ;incstack = 0
 13646                           ; Regs used in _DimmerLights_DimmingFunction: [wreg+status,2+status,0+pclath+cstack]
 13647                           ;DimmerLights_DimmingFunction@lights stored from wreg
 13648  06F7  00F5               	movwf	DimmerLights_DimmingFunction@lights
 13649                           
 13650                           ;Dimmer_B1.c: 2132: if (lights == 1) {
 13651  06F8  0875               	movf	DimmerLights_DimmingFunction@lights,w
 13652  06F9  3A01               	xorlw	1
 13653  06FA  1D03               	skipz
 13654  06FB  2F46               	goto	l7234
 13655                           
 13656                           ;Dimmer_B1.c: 2133: if (DimmerIntr1.Tune == 1) {
 13657  06FC  0021               	movlb	1	; select bank1
 13658  06FD  1CA0               	btfss	_DimmerIntr1^(0+128),1
 13659  06FE  2F46               	goto	l7234
 13660                           
 13661                           ;Dimmer_B1.c: 2134: DimmerIntr1.Tune = 0;
 13662  06FF  10A0               	bcf	_DimmerIntr1^(0+128),1
 13663                           
 13664                           ;Dimmer_B1.c: 2135: DimmerIntr1.TuneTime++;
 13665  0700  3001               	movlw	1
 13666  0701  00F4               	movwf	??_DimmerLights_DimmingFunction
 13667  0702  0874               	movf	??_DimmerLights_DimmingFunction,w
 13668  0703  07A3               	addwf	(_DimmerIntr1^(0+128)+3),f
 13669                           
 13670                           ;Dimmer_B1.c: 2136: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
 13671  0704  0824               	movf	(_DimmerIntr1^(0+128)+4),w
 13672  0705  0223               	subwf	(_DimmerIntr1^(0+128)+3),w
 13673  0706  1C03               	skipc
 13674  0707  2F46               	goto	l7234
 13675                           
 13676                           ;Dimmer_B1.c: 2137: DimmerIntr1.TuneTime = 0;
 13677  0708  01A3               	clrf	(_DimmerIntr1^(0+128)+3)
 13678                           
 13679                           ;Dimmer_B1.c: 2138: DimmerIntr1.TuneGO = 1;
 13680  0709  1721               	bsf	(_DimmerIntr1^(0+128)+1),6
 13681                           
 13682                           ;Dimmer_B1.c: 2139: if (DimmerIntr1.Dimming_Sw == 1) {
 13683  070A  1E20               	btfss	_DimmerIntr1^(0+128),4
 13684  070B  2F2A               	goto	l1002
 13685                           
 13686                           ;Dimmer_B1.c: 2158: if (DimmerIntr1.Dimming_Status == 0) {
 13687  070C  1AA0               	btfsc	_DimmerIntr1^(0+128),5
 13688  070D  2F1B               	goto	l7216
 13689                           
 13690                           ;Dimmer_B1.c: 2159: if (DimmerIntr1.DimmingValue > ((char)((100-67)*0.6))) {
 13691  070E  3014               	movlw	20
 13692  070F  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 13693  0710  1C03               	skipc
 13694  0711  2F19               	goto	l1004
 13695                           
 13696                           ;Dimmer_B1.c: 2160: DimmerIntr1.DimmingValue--;
 13697  0712  3001               	movlw	1
 13698  0713  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 13699                           
 13700                           ;Dimmer_B1.c: 2161: DimmerIntr_ValueCalculate(1);
 13701  0714  3001               	movlw	1
 13702  0715  3193  2324  3186   	fcall	_DimmerIntr_ValueCalculate
 13703                           
 13704                           ;Dimmer_B1.c: 2162: } else {
 13705  0718  2F46               	goto	l7234
 13706  0719                     l1004:	
 13707                           
 13708                           ;Dimmer_B1.c: 2163: DimmerIntr1.Dimming_Status = 1;
 13709  0719  16A0               	bsf	_DimmerIntr1^(0+128),5
 13710                           
 13711                           ;Dimmer_B1.c: 2164: }
 13712                           ;Dimmer_B1.c: 2165: } else {
 13713  071A  2F46               	goto	l7234
 13714  071B                     l7216:	
 13715                           
 13716                           ;Dimmer_B1.c: 2166: if (DimmerIntr1.DimmingValue < ((char)((100-5)*0.6))) {
 13717  071B  3039               	movlw	57
 13718  071C  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 13719  071D  1803               	skipnc
 13720  071E  2F28               	goto	l1007
 13721                           
 13722                           ;Dimmer_B1.c: 2167: DimmerIntr1.DimmingValue++;
 13723  071F  3001               	movlw	1
 13724  0720  00F4               	movwf	??_DimmerLights_DimmingFunction
 13725  0721  0874               	movf	??_DimmerLights_DimmingFunction,w
 13726  0722  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 13727                           
 13728                           ;Dimmer_B1.c: 2168: DimmerIntr_ValueCalculate(1);
 13729  0723  3001               	movlw	1
 13730  0724  3193  2324  3186   	fcall	_DimmerIntr_ValueCalculate
 13731                           
 13732                           ;Dimmer_B1.c: 2169: } else {
 13733  0727  2F46               	goto	l7234
 13734  0728                     l1007:	
 13735                           
 13736                           ;Dimmer_B1.c: 2170: DimmerIntr1.Dimming_Status = 0;
 13737  0728  12A0               	bcf	_DimmerIntr1^(0+128),5
 13738                           
 13739                           ;Dimmer_B1.c: 2171: }
 13740                           ;Dimmer_B1.c: 2172: }
 13741                           ;Dimmer_B1.c: 2174: } else if (DimmerIntr1.Dimming_RF == 1) {
 13742  0729  2F46               	goto	l7234
 13743  072A                     l1002:	
 13744  072A  1F20               	btfss	_DimmerIntr1^(0+128),6
 13745  072B  2F46               	goto	l7234
 13746                           
 13747                           ;Dimmer_B1.c: 2187: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
 13748  072C  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 13749  072D  0226               	subwf	(_DimmerIntr1^(0+128)+6),w
 13750  072E  1803               	skipnc
 13751  072F  2F37               	goto	l7228
 13752                           
 13753                           ;Dimmer_B1.c: 2188: DimmerIntr1.DimmingValue--;
 13754  0730  3001               	movlw	1
 13755  0731  02A5               	subwf	(_DimmerIntr1^(0+128)+5),f
 13756                           
 13757                           ;Dimmer_B1.c: 2189: DimmerIntr_ValueCalculate(1);
 13758  0732  3001               	movlw	1
 13759  0733  3193  2324  3186   	fcall	_DimmerIntr_ValueCalculate
 13760                           
 13761                           ;Dimmer_B1.c: 2190: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
 13762  0736  2F46               	goto	l7234
 13763  0737                     l7228:	
 13764  0737  0021               	movlb	1	; select bank1
 13765  0738  0826               	movf	(_DimmerIntr1^(0+128)+6),w
 13766  0739  0225               	subwf	(_DimmerIntr1^(0+128)+5),w
 13767  073A  1803               	skipnc
 13768  073B  2F45               	goto	l1013
 13769                           
 13770                           ;Dimmer_B1.c: 2191: DimmerIntr1.DimmingValue++;
 13771  073C  3001               	movlw	1
 13772  073D  00F4               	movwf	??_DimmerLights_DimmingFunction
 13773  073E  0874               	movf	??_DimmerLights_DimmingFunction,w
 13774  073F  07A5               	addwf	(_DimmerIntr1^(0+128)+5),f
 13775                           
 13776                           ;Dimmer_B1.c: 2192: DimmerIntr_ValueCalculate(1);
 13777  0740  3001               	movlw	1
 13778  0741  3193  2324  3186   	fcall	_DimmerIntr_ValueCalculate
 13779                           
 13780                           ;Dimmer_B1.c: 2193: } else {
 13781  0744  2F46               	goto	l7234
 13782  0745                     l1013:	
 13783                           
 13784                           ;Dimmer_B1.c: 2194: DimmerIntr1.Dimming_RF = 0;
 13785  0745  1320               	bcf	_DimmerIntr1^(0+128),6
 13786  0746                     l7234:	
 13787                           
 13788                           ;Dimmer_B1.c: 2195: }
 13789                           ;Dimmer_B1.c: 2197: }
 13790                           ;Dimmer_B1.c: 2198: }
 13791                           ;Dimmer_B1.c: 2199: }
 13792                           ;Dimmer_B1.c: 2200: }
 13793                           ;Dimmer_B1.c: 2204: if (lights == 2) {
 13794  0746  0875               	movf	DimmerLights_DimmingFunction@lights,w
 13795  0747  3A02               	xorlw	2
 13796  0748  1D03               	skipz
 13797  0749  0008               	return
 13798                           
 13799                           ;Dimmer_B1.c: 2205: if (DimmerIntr2.Tune == 1) {
 13800  074A  0022               	movlb	2	; select bank2
 13801  074B  1CBE               	btfss	_DimmerIntr2^(0+256),1
 13802  074C  0008               	return
 13803                           
 13804                           ;Dimmer_B1.c: 2206: DimmerIntr2.Tune = 0;
 13805  074D  10BE               	bcf	_DimmerIntr2^(0+256),1
 13806                           
 13807                           ;Dimmer_B1.c: 2207: DimmerIntr2.TuneTime++;
 13808  074E  3001               	movlw	1
 13809  074F  00F4               	movwf	??_DimmerLights_DimmingFunction
 13810  0750  0874               	movf	??_DimmerLights_DimmingFunction,w
 13811  0751  07C1               	addwf	(_DimmerIntr2^(0+256)+3),f
 13812                           
 13813                           ;Dimmer_B1.c: 2208: if (DimmerIntr2.TuneTime >= DimmerIntr2.TuneTimeValue) {
 13814  0752  0842               	movf	(_DimmerIntr2^(0+256)+4),w
 13815  0753  0241               	subwf	(_DimmerIntr2^(0+256)+3),w
 13816  0754  1C03               	skipc
 13817  0755  0008               	return
 13818                           
 13819                           ;Dimmer_B1.c: 2209: DimmerIntr2.TuneTime = 0;
 13820  0756  01C1               	clrf	(_DimmerIntr2^(0+256)+3)
 13821                           
 13822                           ;Dimmer_B1.c: 2210: DimmerIntr2.TuneGO = 1;
 13823  0757  173F               	bsf	(_DimmerIntr2^(0+256)+1),6
 13824                           
 13825                           ;Dimmer_B1.c: 2211: if (DimmerIntr2.Dimming_Sw == 1) {
 13826  0758  1E3E               	btfss	_DimmerIntr2^(0+256),4
 13827  0759  2F76               	goto	l1018
 13828                           
 13829                           ;Dimmer_B1.c: 2230: if (DimmerIntr2.Dimming_Status == 0) {
 13830  075A  1ABE               	btfsc	_DimmerIntr2^(0+256),5
 13831  075B  2F68               	goto	l7258
 13832                           
 13833                           ;Dimmer_B1.c: 2231: if (DimmerIntr2.DimmingValue > ((char)((100-67)*0.6))) {
 13834  075C  3014               	movlw	20
 13835  075D  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 13836  075E  1C03               	skipc
 13837  075F  2F66               	goto	l1020
 13838                           
 13839                           ;Dimmer_B1.c: 2232: DimmerIntr2.DimmingValue--;
 13840  0760  3001               	movlw	1
 13841  0761  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 13842                           
 13843                           ;Dimmer_B1.c: 2233: DimmerIntr_ValueCalculate(2);
 13844  0762  3002               	movlw	2
 13845  0763  3193  2324         	fcall	_DimmerIntr_ValueCalculate
 13846                           
 13847                           ;Dimmer_B1.c: 2234: } else {
 13848  0765  0008               	return
 13849  0766                     l1020:	
 13850                           
 13851                           ;Dimmer_B1.c: 2235: DimmerIntr2.Dimming_Status = 1;
 13852  0766  16BE               	bsf	_DimmerIntr2^(0+256),5
 13853                           
 13854                           ;Dimmer_B1.c: 2236: }
 13855                           ;Dimmer_B1.c: 2237: } else {
 13856  0767  0008               	return
 13857  0768                     l7258:	
 13858                           
 13859                           ;Dimmer_B1.c: 2238: if (DimmerIntr2.DimmingValue < ((char)((100-5)*0.6))) {
 13860  0768  3039               	movlw	57
 13861  0769  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 13862  076A  1803               	skipnc
 13863  076B  2F74               	goto	l1023
 13864                           
 13865                           ;Dimmer_B1.c: 2239: DimmerIntr2.DimmingValue++;
 13866  076C  3001               	movlw	1
 13867  076D  00F4               	movwf	??_DimmerLights_DimmingFunction
 13868  076E  0874               	movf	??_DimmerLights_DimmingFunction,w
 13869  076F  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 13870                           
 13871                           ;Dimmer_B1.c: 2240: DimmerIntr_ValueCalculate(2);
 13872  0770  3002               	movlw	2
 13873  0771  3193  2324         	fcall	_DimmerIntr_ValueCalculate
 13874                           
 13875                           ;Dimmer_B1.c: 2241: } else {
 13876  0773  0008               	return
 13877  0774                     l1023:	
 13878                           
 13879                           ;Dimmer_B1.c: 2242: DimmerIntr2.Dimming_Status = 0;
 13880  0774  12BE               	bcf	_DimmerIntr2^(0+256),5
 13881                           
 13882                           ;Dimmer_B1.c: 2243: }
 13883                           ;Dimmer_B1.c: 2244: }
 13884                           ;Dimmer_B1.c: 2246: } else if (DimmerIntr2.Dimming_RF == 1) {
 13885  0775  0008               	return
 13886  0776                     l1018:	
 13887  0776  1F3E               	btfss	_DimmerIntr2^(0+256),6
 13888  0777  0008               	return
 13889                           
 13890                           ;Dimmer_B1.c: 2259: if (DimmerIntr2.DimmingValue > DimmerIntr2.MaxmumValue) {
 13891  0778  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 13892  0779  0244               	subwf	(_DimmerIntr2^(0+256)+6),w
 13893  077A  1803               	skipnc
 13894  077B  2F82               	goto	l7270
 13895                           
 13896                           ;Dimmer_B1.c: 2260: DimmerIntr2.DimmingValue--;
 13897  077C  3001               	movlw	1
 13898  077D  02C3               	subwf	(_DimmerIntr2^(0+256)+5),f
 13899                           
 13900                           ;Dimmer_B1.c: 2261: DimmerIntr_ValueCalculate(2);
 13901  077E  3002               	movlw	2
 13902  077F  3193  2324         	fcall	_DimmerIntr_ValueCalculate
 13903                           
 13904                           ;Dimmer_B1.c: 2262: } else if (DimmerIntr2.DimmingValue < DimmerIntr2.MaxmumValue) {
 13905  0781  0008               	return
 13906  0782                     l7270:	
 13907  0782  0022               	movlb	2	; select bank2
 13908  0783  0844               	movf	(_DimmerIntr2^(0+256)+6),w
 13909  0784  0243               	subwf	(_DimmerIntr2^(0+256)+5),w
 13910  0785  1803               	skipnc
 13911  0786  2F8F               	goto	l1029
 13912                           
 13913                           ;Dimmer_B1.c: 2263: DimmerIntr2.DimmingValue++;
 13914  0787  3001               	movlw	1
 13915  0788  00F4               	movwf	??_DimmerLights_DimmingFunction
 13916  0789  0874               	movf	??_DimmerLights_DimmingFunction,w
 13917  078A  07C3               	addwf	(_DimmerIntr2^(0+256)+5),f
 13918                           
 13919                           ;Dimmer_B1.c: 2264: DimmerIntr_ValueCalculate(2);
 13920  078B  3002               	movlw	2
 13921  078C  3193  2324         	fcall	_DimmerIntr_ValueCalculate
 13922                           
 13923                           ;Dimmer_B1.c: 2265: } else {
 13924  078E  0008               	return
 13925  078F                     l1029:	
 13926                           
 13927                           ;Dimmer_B1.c: 2266: DimmerIntr2.Dimming_RF = 0;
 13928  078F  133E               	bcf	_DimmerIntr2^(0+256),6
 13929  0790  0008               	return
 13930  0791                     __end_of_DimmerLights_DimmingFunction:	
 13931                           
 13932                           	psect	text97
 13933  1324                     __ptext97:	
 13934 ;; *************** function _DimmerIntr_ValueCalculate *****************
 13935 ;; Defined at:
 13936 ;;		line 2061 in file "../src/Dimmer_B1.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;  lights          1    wreg     unsigned char 
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;  lights          1    3[COMMON] unsigned char 
 13941 ;; Return value:  Size  Location     Type
 13942 ;;		None               void
 13943 ;; Registers used:
 13944 ;;		wreg
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;Total ram usage:        2 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; Hardware stack levels required when called:    3
 13957 ;; This function calls:
 13958 ;;		Nothing
 13959 ;; This function is called by:
 13960 ;;		_setDimmerLights_OnOff
 13961 ;;		_DimmerLights_DimmingFunction
 13962 ;; This function uses a non-reentrant model
 13963 ;;
 13964                           
 13965                           
 13966                           ;psect for function _DimmerIntr_ValueCalculate
 13967  1324                     _DimmerIntr_ValueCalculate:	
 13968                           
 13969                           ;incstack = 0
 13970                           ; Regs used in _DimmerIntr_ValueCalculate: [wreg]
 13971                           ;DimmerIntr_ValueCalculate@lights stored from wreg
 13972  1324  00F3               	movwf	DimmerIntr_ValueCalculate@lights
 13973                           
 13974                           ;Dimmer_B1.c: 2063: if (lights == 1) {
 13975  1325  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 13976  1326  3A01               	xorlw	1
 13977  1327  1D03               	skipz
 13978  1328  2B33               	goto	l994
 13979                           
 13980                           ;Dimmer_B1.c: 2065: DimmerIntr1.TuneValue2 = DimmerIntr1.DimmingValue;
 13981  1329  0021               	movlb	1	; select bank1
 13982  132A  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 13983  132B  00F2               	movwf	??_DimmerIntr_ValueCalculate
 13984  132C  0872               	movf	??_DimmerIntr_ValueCalculate,w
 13985  132D  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 13986                           
 13987                           ;Dimmer_B1.c: 2066: DimmerIntr1.TuneEnd = 60;
 13988  132E  303C               	movlw	60
 13989  132F  00F2               	movwf	??_DimmerIntr_ValueCalculate
 13990  1330  0872               	movf	??_DimmerIntr_ValueCalculate,w
 13991  1331  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 13992                           
 13993                           ;Dimmer_B1.c: 2067: DimmerIntr1.Calculate = 1;
 13994  1332  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 13995  1333                     l994:	
 13996                           
 13997                           ;Dimmer_B1.c: 2081: }
 13998                           ;Dimmer_B1.c: 2086: if (lights == 2) {
 13999  1333  0873               	movf	DimmerIntr_ValueCalculate@lights,w
 14000  1334  3A02               	xorlw	2
 14001  1335  1D03               	skipz
 14002  1336  0008               	return
 14003                           
 14004                           ;Dimmer_B1.c: 2088: DimmerIntr2.TuneValue2 = DimmerIntr2.DimmingValue;
 14005  1337  0022               	movlb	2	; select bank2
 14006  1338  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14007  1339  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14008  133A  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14009  133B  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 14010                           
 14011                           ;Dimmer_B1.c: 2089: DimmerIntr2.TuneEnd = 60;
 14012  133C  303C               	movlw	60
 14013  133D  00F2               	movwf	??_DimmerIntr_ValueCalculate
 14014  133E  0872               	movf	??_DimmerIntr_ValueCalculate,w
 14015  133F  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 14016                           
 14017                           ;Dimmer_B1.c: 2090: DimmerIntr2.Calculate = 1;
 14018  1340  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 14019  1341  0008               	return
 14020  1342                     __end_of_DimmerIntr_ValueCalculate:	
 14021                           
 14022                           	psect	text98
 14023  1F2B                     __ptext98:	
 14024 ;; *************** function _DimmerLights_Initialization *****************
 14025 ;; Defined at:
 14026 ;;		line 703 in file "../src/Dimmer_B1.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;		None
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;		None
 14031 ;; Return value:  Size  Location     Type
 14032 ;;		None               void
 14033 ;; Registers used:
 14034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14035 ;; Tracked objects:
 14036 ;;		On entry : 0/0
 14037 ;;		On exit  : 0/0
 14038 ;;		Unchanged: 0/0
 14039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14044 ;;Total ram usage:        0 bytes
 14045 ;; Hardware stack levels used:    1
 14046 ;; Hardware stack levels required when called:    7
 14047 ;; This function calls:
 14048 ;;		_DimmerIntr_Initialization
 14049 ;;		_setDimmerLights_Initialization
 14050 ;; This function is called by:
 14051 ;;		_main
 14052 ;; This function uses a non-reentrant model
 14053 ;;
 14054                           
 14055                           
 14056                           ;psect for function _DimmerLights_Initialization
 14057  1F2B                     _DimmerLights_Initialization:	
 14058                           
 14059                           ;Dimmer_B1.c: 705: setDimmerLights_Initialization(1);
 14060                           
 14061                           ;incstack = 0
 14062                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14063  1F2B  3001               	movlw	1
 14064  1F2C  319E  26A7  319F   	fcall	_setDimmerLights_Initialization
 14065                           
 14066                           ;Dimmer_B1.c: 709: setDimmerLights_Initialization(2);
 14067  1F2F  3002               	movlw	2
 14068  1F30  319E  26A7  319F   	fcall	_setDimmerLights_Initialization
 14069                           
 14070                           ;Dimmer_B1.c: 715: DimmerIntr_Initialization();
 14071  1F33  318D  2566         	fcall	_DimmerIntr_Initialization
 14072  1F35  0008               	return
 14073  1F36                     __end_of_DimmerLights_Initialization:	
 14074                           
 14075                           	psect	text99
 14076  1EA7                     __ptext99:	
 14077 ;; *************** function _setDimmerLights_Initialization *****************
 14078 ;; Defined at:
 14079 ;;		line 719 in file "../src/Dimmer_B1.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;  lights          1    wreg     unsigned char 
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;  lights          1    0[COMMON] unsigned char 
 14084 ;; Return value:  Size  Location     Type
 14085 ;;		None               void
 14086 ;; Registers used:
 14087 ;;		wreg
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;Total ram usage:        0 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    3
 14100 ;; This function calls:
 14101 ;;		Nothing
 14102 ;; This function is called by:
 14103 ;;		_DimmerLights_Initialization
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           
 14108                           ;psect for function _setDimmerLights_Initialization
 14109  1EA7                     _setDimmerLights_Initialization:	
 14110                           
 14111                           ;incstack = 0
 14112                           ; Regs used in _setDimmerLights_Initialization: [wreg]
 14113  1EA7  0008               	return
 14114  1EA8                     __end_of_setDimmerLights_Initialization:	
 14115                           
 14116                           	psect	text100
 14117  0D66                     __ptext100:	
 14118 ;; *************** function _DimmerIntr_Initialization *****************
 14119 ;; Defined at:
 14120 ;;		line 7 in file "../src/Dimmer_B1.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;		None
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;		None
 14125 ;; Return value:  Size  Location     Type
 14126 ;;		None               void
 14127 ;; Registers used:
 14128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14137 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;Total ram usage:        1 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    6
 14141 ;; This function calls:
 14142 ;;		_getDimmerLights_PercentToValue
 14143 ;;		_getDimmerLights_ValueToPercent
 14144 ;;		_setMemory_Modify
 14145 ;; This function is called by:
 14146 ;;		_DimmerLights_Initialization
 14147 ;; This function uses a non-reentrant model
 14148 ;;
 14149                           
 14150                           
 14151                           ;psect for function _DimmerIntr_Initialization
 14152  0D66                     _DimmerIntr_Initialization:	
 14153                           
 14154                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 3;
 14155                           
 14156                           ;incstack = 0
 14157                           ; Regs used in _DimmerIntr_Initialization: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14158  0D66  3003               	movlw	3
 14159  0D67  0020               	movlb	0	; select bank0
 14160  0D68  00D8               	movwf	??_DimmerIntr_Initialization
 14161  0D69  0858               	movf	??_DimmerIntr_Initialization,w
 14162  0D6A  0021               	movlb	1	; select bank1
 14163  0D6B  00A4               	movwf	(_DimmerIntr1^(0+128)+4)
 14164                           
 14165                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-67)*0.6));
 14166  0D6C  3013               	movlw	19
 14167  0D6D  0020               	movlb	0	; select bank0
 14168  0D6E  00D8               	movwf	??_DimmerIntr_Initialization
 14169  0D6F  0858               	movf	??_DimmerIntr_Initialization,w
 14170  0D70  0021               	movlb	1	; select bank1
 14171  0D71  00A6               	movwf	(_DimmerIntr1^(0+128)+6)
 14172                           
 14173                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-5)*0.6));
 14174  0D72  3039               	movlw	57
 14175  0D73  0020               	movlb	0	; select bank0
 14176  0D74  00D8               	movwf	??_DimmerIntr_Initialization
 14177  0D75  0858               	movf	??_DimmerIntr_Initialization,w
 14178  0D76  0021               	movlb	1	; select bank1
 14179  0D77  00A7               	movwf	(_DimmerIntr1^(0+128)+7)
 14180                           
 14181                           ;Dimmer_B1.c: 13: DimmerIntr1.Tune = 0;
 14182  0D78  10A0               	bcf	_DimmerIntr1^(0+128),1
 14183                           
 14184                           ;Dimmer_B1.c: 18: product->Data[21] = getDimmerLights_ValueToPercent(((char)((100-67)*0.
      +                          6)));
 14185  0D79  3013               	movlw	19
 14186  0D7A  3188  205F  318D   	fcall	_getDimmerLights_ValueToPercent
 14187  0D7D  0020               	movlb	0	; select bank0
 14188  0D7E  00D8               	movwf	??_DimmerIntr_Initialization
 14189  0D7F  086E               	movf	_product,w
 14190  0D80  3E15               	addlw	21
 14191  0D81  0086               	movwf	6
 14192  0D82  3002               	movlw	2	; select bank4/5
 14193  0D83  0087               	movwf	7
 14194  0D84  0858               	movf	??_DimmerIntr_Initialization,w
 14195  0D85  0081               	movwf	1
 14196                           
 14197                           ;Dimmer_B1.c: 21: DimmerIntr1.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[21]);
 14198  0D86  086E               	movf	_product,w
 14199  0D87  3E15               	addlw	21
 14200  0D88  0086               	movwf	6
 14201  0D89  3002               	movlw	2	; select bank4/5
 14202  0D8A  0087               	movwf	7
 14203  0D8B  0801               	movf	1,w
 14204  0D8C  3189  21E8  318D   	fcall	_getDimmerLights_PercentToValue
 14205  0D8F  0020               	movlb	0	; select bank0
 14206  0D90  00D8               	movwf	??_DimmerIntr_Initialization
 14207  0D91  0858               	movf	??_DimmerIntr_Initialization,w
 14208  0D92  0021               	movlb	1	; select bank1
 14209  0D93  00A5               	movwf	(_DimmerIntr1^(0+128)+5)
 14210                           
 14211                           ;Dimmer_B1.c: 30: DimmerIntr1.TuneValue2 = DimmerIntr1.DimmingValue;
 14212  0D94  0825               	movf	(_DimmerIntr1^(0+128)+5),w
 14213  0D95  0020               	movlb	0	; select bank0
 14214  0D96  00D8               	movwf	??_DimmerIntr_Initialization
 14215  0D97  0858               	movf	??_DimmerIntr_Initialization,w
 14216  0D98  0021               	movlb	1	; select bank1
 14217  0D99  00A8               	movwf	(_DimmerIntr1^(0+128)+8)
 14218                           
 14219                           ;Dimmer_B1.c: 31: DimmerIntr1.TuneEnd = 60;
 14220  0D9A  303C               	movlw	60
 14221  0D9B  0020               	movlb	0	; select bank0
 14222  0D9C  00D8               	movwf	??_DimmerIntr_Initialization
 14223  0D9D  0858               	movf	??_DimmerIntr_Initialization,w
 14224  0D9E  0021               	movlb	1	; select bank1
 14225  0D9F  00AB               	movwf	(_DimmerIntr1^(0+128)+11)
 14226                           
 14227                           ;Dimmer_B1.c: 32: DimmerIntr1.Calculate = 1;
 14228  0DA0  17A1               	bsf	(_DimmerIntr1^(0+128)+1),7
 14229                           
 14230                           ;Dimmer_B1.c: 51: DimmerIntr2.TuneTimeValue = 3;
 14231  0DA1  3003               	movlw	3
 14232  0DA2  0020               	movlb	0	; select bank0
 14233  0DA3  00D8               	movwf	??_DimmerIntr_Initialization
 14234  0DA4  0858               	movf	??_DimmerIntr_Initialization,w
 14235  0DA5  0022               	movlb	2	; select bank2
 14236  0DA6  00C2               	movwf	(_DimmerIntr2^(0+256)+4)
 14237                           
 14238                           ;Dimmer_B1.c: 52: DimmerIntr2.MaxmumValue = ((char)((100-67)*0.6));
 14239  0DA7  3013               	movlw	19
 14240  0DA8  0020               	movlb	0	; select bank0
 14241  0DA9  00D8               	movwf	??_DimmerIntr_Initialization
 14242  0DAA  0858               	movf	??_DimmerIntr_Initialization,w
 14243  0DAB  0022               	movlb	2	; select bank2
 14244  0DAC  00C4               	movwf	(_DimmerIntr2^(0+256)+6)
 14245                           
 14246                           ;Dimmer_B1.c: 53: DimmerIntr2.MinimumValue = ((char)((100-5)*0.6));
 14247  0DAD  3039               	movlw	57
 14248  0DAE  0020               	movlb	0	; select bank0
 14249  0DAF  00D8               	movwf	??_DimmerIntr_Initialization
 14250  0DB0  0858               	movf	??_DimmerIntr_Initialization,w
 14251  0DB1  0022               	movlb	2	; select bank2
 14252  0DB2  00C5               	movwf	(_DimmerIntr2^(0+256)+7)
 14253                           
 14254                           ;Dimmer_B1.c: 54: DimmerIntr2.Tune = 0;
 14255  0DB3  10BE               	bcf	_DimmerIntr2^(0+256),1
 14256                           
 14257                           ;Dimmer_B1.c: 59: product->Data[22] = getDimmerLights_ValueToPercent(((char)((100-67)*0.
      +                          6)));
 14258  0DB4  3013               	movlw	19
 14259  0DB5  3188  205F  318D   	fcall	_getDimmerLights_ValueToPercent
 14260  0DB8  0020               	movlb	0	; select bank0
 14261  0DB9  00D8               	movwf	??_DimmerIntr_Initialization
 14262  0DBA  086E               	movf	_product,w
 14263  0DBB  3E16               	addlw	22
 14264  0DBC  0086               	movwf	6
 14265  0DBD  3002               	movlw	2	; select bank4/5
 14266  0DBE  0087               	movwf	7
 14267  0DBF  0858               	movf	??_DimmerIntr_Initialization,w
 14268  0DC0  0081               	movwf	1
 14269                           
 14270                           ;Dimmer_B1.c: 62: DimmerIntr2.DimmingValue = getDimmerLights_PercentToValue(product->Dat
      +                          a[22]);
 14271  0DC1  086E               	movf	_product,w
 14272  0DC2  3E16               	addlw	22
 14273  0DC3  0086               	movwf	6
 14274  0DC4  3002               	movlw	2	; select bank4/5
 14275  0DC5  0087               	movwf	7
 14276  0DC6  0801               	movf	1,w
 14277  0DC7  3189  21E8  318D   	fcall	_getDimmerLights_PercentToValue
 14278  0DCA  0020               	movlb	0	; select bank0
 14279  0DCB  00D8               	movwf	??_DimmerIntr_Initialization
 14280  0DCC  0858               	movf	??_DimmerIntr_Initialization,w
 14281  0DCD  0022               	movlb	2	; select bank2
 14282  0DCE  00C3               	movwf	(_DimmerIntr2^(0+256)+5)
 14283                           
 14284                           ;Dimmer_B1.c: 71: DimmerIntr2.TuneValue2 = DimmerIntr2.DimmingValue;
 14285  0DCF  0843               	movf	(_DimmerIntr2^(0+256)+5),w
 14286  0DD0  0020               	movlb	0	; select bank0
 14287  0DD1  00D8               	movwf	??_DimmerIntr_Initialization
 14288  0DD2  0858               	movf	??_DimmerIntr_Initialization,w
 14289  0DD3  0022               	movlb	2	; select bank2
 14290  0DD4  00C6               	movwf	(_DimmerIntr2^(0+256)+8)
 14291                           
 14292                           ;Dimmer_B1.c: 72: DimmerIntr2.TuneEnd = 60;
 14293  0DD5  303C               	movlw	60
 14294  0DD6  0020               	movlb	0	; select bank0
 14295  0DD7  00D8               	movwf	??_DimmerIntr_Initialization
 14296  0DD8  0858               	movf	??_DimmerIntr_Initialization,w
 14297  0DD9  0022               	movlb	2	; select bank2
 14298  0DDA  00C9               	movwf	(_DimmerIntr2^(0+256)+11)
 14299                           
 14300                           ;Dimmer_B1.c: 73: DimmerIntr2.Calculate = 1;
 14301  0DDB  17BF               	bsf	(_DimmerIntr2^(0+256)+1),7
 14302                           
 14303                           ;Dimmer_B1.c: 111: if (myMain.InitDimmer == 1) {
 14304  0DDC  0021               	movlb	1	; select bank1
 14305  0DDD  1E49               	btfss	(_myMain^(0+128)+10),4
 14306  0DDE  0008               	return
 14307                           
 14308                           ;Dimmer_B1.c: 112: myMain.InitDimmer = 0;
 14309  0DDF  1249               	bcf	(_myMain^(0+128)+10),4
 14310                           
 14311                           ;Dimmer_B1.c: 113: myMain.SaveDimmer = 1;
 14312  0DE0  16C9               	bsf	(_myMain^(0+128)+10),5
 14313                           
 14314                           ;Dimmer_B1.c: 114: setMemory_Modify(1);
 14315  0DE1  3001               	movlw	1
 14316  0DE2  3190  206A         	fcall	_setMemory_Modify
 14317  0DE4  0008               	return
 14318  0DE5                     __end_of_DimmerIntr_Initialization:	
 14319                           
 14320                           	psect	text101
 14321  106A                     __ptext101:	
 14322 ;; *************** function _setMemory_Modify *****************
 14323 ;; Defined at:
 14324 ;;		line 1088 in file "../src/MCU_B1.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;  command         1    wreg     unsigned char 
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;  command         1    3[COMMON] unsigned char 
 14329 ;; Return value:  Size  Location     Type
 14330 ;;		None               void
 14331 ;; Registers used:
 14332 ;;		wreg, status,2, status,0
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;Total ram usage:        2 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; Hardware stack levels required when called:    3
 14345 ;; This function calls:
 14346 ;;		Nothing
 14347 ;; This function is called by:
 14348 ;;		_DimmerIntr_Initialization
 14349 ;;		_setDimmerLights_Dimming
 14350 ;;		_setLog_Code
 14351 ;;		_setRFSW_AdjControl
 14352 ;;		_DimmerLights_AssignationDimming
 14353 ;; This function uses a non-reentrant model
 14354 ;;
 14355                           
 14356                           
 14357                           ;psect for function _setMemory_Modify
 14358  106A                     _setMemory_Modify:	
 14359                           
 14360                           ;incstack = 0
 14361                           ; Regs used in _setMemory_Modify: [wreg+status,2+status,0]
 14362                           ;setMemory_Modify@command stored from wreg
 14363  106A  00F3               	movwf	setMemory_Modify@command
 14364                           
 14365                           ;MCU_B1.c: 1089: Memory.Modify = command == 1 ? 1 : 0;
 14366  106B  0873               	movf	setMemory_Modify@command,w
 14367  106C  3A01               	xorlw	1
 14368  106D  3000               	movlw	0
 14369  106E  1903               	skipnz
 14370  106F  3001               	movlw	1
 14371  1070  00F2               	movwf	??_setMemory_Modify
 14372  1071  0023               	movlb	3	; select bank3
 14373  1072  0854               	movf	(_Memory^(0+384)+36),w
 14374  1073  0672               	xorwf	??_setMemory_Modify,w
 14375  1074  39FE               	andlw	-2
 14376  1075  0672               	xorwf	??_setMemory_Modify,w
 14377  1076  00D4               	movwf	(_Memory^(0+384)+36)
 14378                           
 14379                           ;MCU_B1.c: 1090: Memory.Time = 0;
 14380  1077  01D2               	clrf	(_Memory^(0+384)+34)
 14381  1078  01D3               	clrf	((_Memory+1)^(0+384)+34)
 14382  1079  0008               	return
 14383  107A                     __end_of_setMemory_Modify:	
 14384                           
 14385                           	psect	text102
 14386  085F                     __ptext102:	
 14387 ;; *************** function _getDimmerLights_ValueToPercent *****************
 14388 ;; Defined at:
 14389 ;;		line 1315 in file "../src/Dimmer_B1.c"
 14390 ;; Parameters:    Size  Location     Type
 14391 ;;  value           1    wreg     unsigned char 
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;  value           1   50[BANK0 ] unsigned char 
 14394 ;;  i               3   51[BANK0 ] float 
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  1    wreg      unsigned char 
 14397 ;; Registers used:
 14398 ;;		wreg, status,2, status,0, pclath, cstack
 14399 ;; Tracked objects:
 14400 ;;		On entry : 0/0
 14401 ;;		On exit  : 0/0
 14402 ;;		Unchanged: 0/0
 14403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;Total ram usage:        4 bytes
 14409 ;; Hardware stack levels used:    1
 14410 ;; Hardware stack levels required when called:    5
 14411 ;; This function calls:
 14412 ;;		___awtoft
 14413 ;;		___ftdiv
 14414 ;;		___fttol
 14415 ;; This function is called by:
 14416 ;;		_DimmerIntr_Initialization
 14417 ;;		_setDimmerLights_Dimming
 14418 ;; This function uses a non-reentrant model
 14419 ;;
 14420                           
 14421                           
 14422                           ;psect for function _getDimmerLights_ValueToPercent
 14423  085F                     _getDimmerLights_ValueToPercent:	
 14424                           
 14425                           ;incstack = 0
 14426                           ; Regs used in _getDimmerLights_ValueToPercent: [wreg+status,2+status,0+pclath+cstack]
 14427                           ;getDimmerLights_ValueToPercent@value stored from wreg
 14428  085F  0020               	movlb	0	; select bank0
 14429  0860  00D2               	movwf	getDimmerLights_ValueToPercent@value
 14430                           
 14431                           ;Dimmer_B1.c: 1317: float i = ((char)((100-5)*0.6)) - ((char)((100-67)*0.6));
 14432  0861  3000               	movlw	0
 14433  0862  00D3               	movwf	getDimmerLights_ValueToPercent@i
 14434  0863  3018               	movlw	24
 14435  0864  00D4               	movwf	getDimmerLights_ValueToPercent@i+1
 14436  0865  3042               	movlw	66
 14437  0866  00D5               	movwf	getDimmerLights_ValueToPercent@i+2
 14438                           
 14439                           ;Dimmer_B1.c: 1318: i /= 100;
 14440  0867  3000               	movlw	0
 14441  0868  00A7               	movwf	___ftdiv@f2
 14442  0869  30C8               	movlw	200
 14443  086A  00A8               	movwf	___ftdiv@f2+1
 14444  086B  3042               	movlw	66
 14445  086C  00A9               	movwf	___ftdiv@f2+2
 14446  086D  0853               	movf	getDimmerLights_ValueToPercent@i,w
 14447  086E  00AA               	movwf	___ftdiv@f1
 14448  086F  0854               	movf	getDimmerLights_ValueToPercent@i+1,w
 14449  0870  00AB               	movwf	___ftdiv@f1+1
 14450  0871  0855               	movf	getDimmerLights_ValueToPercent@i+2,w
 14451  0872  00AC               	movwf	___ftdiv@f1+2
 14452  0873  3185  25B3  3188   	fcall	___ftdiv
 14453  0876  0020               	movlb	0	; select bank0
 14454  0877  0827               	movf	?___ftdiv,w
 14455  0878  00D3               	movwf	getDimmerLights_ValueToPercent@i
 14456  0879  0828               	movf	?___ftdiv+1,w
 14457  087A  00D4               	movwf	getDimmerLights_ValueToPercent@i+1
 14458  087B  0829               	movf	?___ftdiv+2,w
 14459  087C  00D5               	movwf	getDimmerLights_ValueToPercent@i+2
 14460                           
 14461                           ;Dimmer_B1.c: 1319: return (100 - (char) ((value - ((char)((100-67)*0.6))) / i));
 14462  087D  0852               	movf	getDimmerLights_ValueToPercent@value,w
 14463  087E  3EED               	addlw	237
 14464  087F  00A3               	movwf	___awtoft@c
 14465  0880  30FF               	movlw	255
 14466  0881  1803               	skipnc
 14467  0882  3000               	movlw	0
 14468  0883  00A4               	movwf	___awtoft@c+1
 14469  0884  3193  23E3  3188   	fcall	___awtoft
 14470  0887  0020               	movlb	0	; select bank0
 14471  0888  0823               	movf	?___awtoft,w
 14472  0889  00AA               	movwf	___ftdiv@f1
 14473  088A  0824               	movf	?___awtoft+1,w
 14474  088B  00AB               	movwf	___ftdiv@f1+1
 14475  088C  0825               	movf	?___awtoft+2,w
 14476  088D  00AC               	movwf	___ftdiv@f1+2
 14477  088E  0853               	movf	getDimmerLights_ValueToPercent@i,w
 14478  088F  00A7               	movwf	___ftdiv@f2
 14479  0890  0854               	movf	getDimmerLights_ValueToPercent@i+1,w
 14480  0891  00A8               	movwf	___ftdiv@f2+1
 14481  0892  0855               	movf	getDimmerLights_ValueToPercent@i+2,w
 14482  0893  00A9               	movwf	___ftdiv@f2+2
 14483  0894  3185  25B3  3188   	fcall	___ftdiv
 14484  0897  0020               	movlb	0	; select bank0
 14485  0898  0827               	movf	?___ftdiv,w
 14486  0899  00C4               	movwf	___fttol@f1
 14487  089A  0828               	movf	?___ftdiv+1,w
 14488  089B  00C5               	movwf	___fttol@f1+1
 14489  089C  0829               	movf	?___ftdiv+2,w
 14490  089D  00C6               	movwf	___fttol@f1+2
 14491  089E  318E  2669         	fcall	___fttol
 14492  08A0  0020               	movlb	0	; select bank0
 14493  08A1  0344               	decf	?___fttol,w
 14494  08A2  3AFF               	xorlw	255
 14495  08A3  3E64               	addlw	100
 14496  08A4  0008               	return
 14497  08A5                     __end_of_getDimmerLights_ValueToPercent:	
 14498                           
 14499                           	psect	text103
 14500  09E8                     __ptext103:	
 14501 ;; *************** function _getDimmerLights_PercentToValue *****************
 14502 ;; Defined at:
 14503 ;;		line 1299 in file "../src/Dimmer_B1.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  value           1    wreg     unsigned char 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;  value           1   52[BANK0 ] unsigned char 
 14508 ;;  i               3   53[BANK0 ] float 
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  1    wreg      unsigned char 
 14511 ;; Registers used:
 14512 ;;		wreg, status,2, status,0, pclath, cstack
 14513 ;; Tracked objects:
 14514 ;;		On entry : 0/0
 14515 ;;		On exit  : 0/0
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14522 ;;Total ram usage:        6 bytes
 14523 ;; Hardware stack levels used:    1
 14524 ;; Hardware stack levels required when called:    5
 14525 ;; This function calls:
 14526 ;;		___awtoft
 14527 ;;		___ftadd
 14528 ;;		___ftdiv
 14529 ;;		___ftmul
 14530 ;;		___fttol
 14531 ;; This function is called by:
 14532 ;;		_DimmerIntr_Initialization
 14533 ;;		_setDimmerLights_OnOff
 14534 ;;		_setRFSW_AdjControl
 14535 ;;		_DimmerLights_AssignationDimming
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           
 14540                           ;psect for function _getDimmerLights_PercentToValue
 14541  09E8                     _getDimmerLights_PercentToValue:	
 14542                           
 14543                           ;incstack = 0
 14544                           ; Regs used in _getDimmerLights_PercentToValue: [wreg+status,2+status,0+pclath+cstack]
 14545                           ;getDimmerLights_PercentToValue@value stored from wreg
 14546  09E8  0020               	movlb	0	; select bank0
 14547  09E9  00D4               	movwf	getDimmerLights_PercentToValue@value
 14548                           
 14549                           ;Dimmer_B1.c: 1301: float i = ((char)((100-5)*0.6)) - ((char)((100-67)*0.6));
 14550  09EA  3000               	movlw	0
 14551  09EB  00D5               	movwf	getDimmerLights_PercentToValue@i
 14552  09EC  3018               	movlw	24
 14553  09ED  00D6               	movwf	getDimmerLights_PercentToValue@i+1
 14554  09EE  3042               	movlw	66
 14555  09EF  00D7               	movwf	getDimmerLights_PercentToValue@i+2
 14556                           
 14557                           ;Dimmer_B1.c: 1302: i /= 100;
 14558  09F0  3000               	movlw	0
 14559  09F1  00A7               	movwf	___ftdiv@f2
 14560  09F2  30C8               	movlw	200
 14561  09F3  00A8               	movwf	___ftdiv@f2+1
 14562  09F4  3042               	movlw	66
 14563  09F5  00A9               	movwf	___ftdiv@f2+2
 14564  09F6  0855               	movf	getDimmerLights_PercentToValue@i,w
 14565  09F7  00AA               	movwf	___ftdiv@f1
 14566  09F8  0856               	movf	getDimmerLights_PercentToValue@i+1,w
 14567  09F9  00AB               	movwf	___ftdiv@f1+1
 14568  09FA  0857               	movf	getDimmerLights_PercentToValue@i+2,w
 14569  09FB  00AC               	movwf	___ftdiv@f1+2
 14570  09FC  3185  25B3  3189   	fcall	___ftdiv
 14571  09FF  0020               	movlb	0	; select bank0
 14572  0A00  0827               	movf	?___ftdiv,w
 14573  0A01  00D5               	movwf	getDimmerLights_PercentToValue@i
 14574  0A02  0828               	movf	?___ftdiv+1,w
 14575  0A03  00D6               	movwf	getDimmerLights_PercentToValue@i+1
 14576  0A04  0829               	movf	?___ftdiv+2,w
 14577  0A05  00D7               	movwf	getDimmerLights_PercentToValue@i+2
 14578                           
 14579                           ;Dimmer_B1.c: 1303: return (char) (((100 - value) * i) + ((char)((100-67)*0.6)));
 14580  0A06  0854               	movf	getDimmerLights_PercentToValue@value,w
 14581  0A07  00D2               	movwf	??_getDimmerLights_PercentToValue
 14582  0A08  01D3               	clrf	??_getDimmerLights_PercentToValue+1
 14583  0A09  09D2               	comf	??_getDimmerLights_PercentToValue,f
 14584  0A0A  09D3               	comf	??_getDimmerLights_PercentToValue+1,f
 14585  0A0B  0AD2               	incf	??_getDimmerLights_PercentToValue,f
 14586  0A0C  1903               	skipnz
 14587  0A0D  0AD3               	incf	??_getDimmerLights_PercentToValue+1,f
 14588  0A0E  0852               	movf	??_getDimmerLights_PercentToValue,w
 14589  0A0F  3E64               	addlw	100
 14590  0A10  00A3               	movwf	___awtoft@c
 14591  0A11  3000               	movlw	0
 14592  0A12  3D53               	addwfc	??_getDimmerLights_PercentToValue+1,w
 14593  0A13  00A4               	movwf	___awtoft@c+1
 14594  0A14  3193  23E3  3189   	fcall	___awtoft
 14595  0A17  0020               	movlb	0	; select bank0
 14596  0A18  0823               	movf	?___awtoft,w
 14597  0A19  00AA               	movwf	___ftmul@f2
 14598  0A1A  0824               	movf	?___awtoft+1,w
 14599  0A1B  00AB               	movwf	___ftmul@f2+1
 14600  0A1C  0825               	movf	?___awtoft+2,w
 14601  0A1D  00AC               	movwf	___ftmul@f2+2
 14602  0A1E  0855               	movf	getDimmerLights_PercentToValue@i,w
 14603  0A1F  00A7               	movwf	___ftmul@f1
 14604  0A20  0856               	movf	getDimmerLights_PercentToValue@i+1,w
 14605  0A21  00A8               	movwf	___ftmul@f1+1
 14606  0A22  0857               	movf	getDimmerLights_PercentToValue@i+2,w
 14607  0A23  00A9               	movwf	___ftmul@f1+2
 14608  0A24  3184  24FF  3189   	fcall	___ftmul
 14609  0A27  0020               	movlb	0	; select bank0
 14610  0A28  0827               	movf	?___ftmul,w
 14611  0A29  00BA               	movwf	___ftadd@f2
 14612  0A2A  0828               	movf	?___ftmul+1,w
 14613  0A2B  00BB               	movwf	___ftadd@f2+1
 14614  0A2C  0829               	movf	?___ftmul+2,w
 14615  0A2D  00BC               	movwf	___ftadd@f2+2
 14616  0A2E  3000               	movlw	0
 14617  0A2F  00B7               	movwf	___ftadd@f1
 14618  0A30  3098               	movlw	152
 14619  0A31  00B8               	movwf	___ftadd@f1+1
 14620  0A32  3041               	movlw	65
 14621  0A33  00B9               	movwf	___ftadd@f1+2
 14622  0A34  3181  21C2  3189   	fcall	___ftadd
 14623  0A37  0020               	movlb	0	; select bank0
 14624  0A38  0837               	movf	?___ftadd,w
 14625  0A39  00C4               	movwf	___fttol@f1
 14626  0A3A  0838               	movf	?___ftadd+1,w
 14627  0A3B  00C5               	movwf	___fttol@f1+1
 14628  0A3C  0839               	movf	?___ftadd+2,w
 14629  0A3D  00C6               	movwf	___fttol@f1+2
 14630  0A3E  318E  2669         	fcall	___fttol
 14631  0A40  0020               	movlb	0	; select bank0
 14632  0A41  0844               	movf	?___fttol,w
 14633  0A42  0008               	return
 14634  0A43                     __end_of_getDimmerLights_PercentToValue:	
 14635                           
 14636                           	psect	text104
 14637  0E69                     __ptext104:	
 14638 ;; *************** function ___fttol *****************
 14639 ;; Defined at:
 14640 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  f1              3   36[BANK0 ] float 
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;  lval            4   45[BANK0 ] unsigned long 
 14645 ;;  exp1            1   49[BANK0 ] unsigned char 
 14646 ;;  sign1           1   44[BANK0 ] unsigned char 
 14647 ;; Return value:  Size  Location     Type
 14648 ;;                  4   36[BANK0 ] long 
 14649 ;; Registers used:
 14650 ;;		wreg, status,2, status,0
 14651 ;; Tracked objects:
 14652 ;;		On entry : 0/0
 14653 ;;		On exit  : 0/0
 14654 ;;		Unchanged: 0/0
 14655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;Total ram usage:       14 bytes
 14661 ;; Hardware stack levels used:    1
 14662 ;; Hardware stack levels required when called:    3
 14663 ;; This function calls:
 14664 ;;		Nothing
 14665 ;; This function is called by:
 14666 ;;		_getDimmerLights_PercentToValue
 14667 ;;		_getDimmerLights_ValueToPercent
 14668 ;; This function uses a non-reentrant model
 14669 ;;
 14670                           
 14671                           
 14672                           ;psect for function ___fttol
 14673  0E69                     ___fttol:	
 14674                           
 14675                           ;incstack = 0
 14676                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 14677  0E69  0020               	movlb	0	; select bank0
 14678  0E6A  0844               	movf	___fttol@f1,w
 14679  0E6B  00C8               	movwf	??___fttol
 14680  0E6C  0845               	movf	___fttol@f1+1,w
 14681  0E6D  00C9               	movwf	??___fttol+1
 14682  0E6E  0846               	movf	___fttol@f1+2,w
 14683  0E6F  00CA               	movwf	??___fttol+2
 14684  0E70  1003               	clrc
 14685  0E71  0D49               	rlf	??___fttol+1,w
 14686  0E72  0D4A               	rlf	??___fttol+2,w
 14687  0E73  00CB               	movwf	??___fttol+3
 14688  0E74  084B               	movf	??___fttol+3,w
 14689  0E75  00D1               	movwf	___fttol@exp1
 14690  0E76  08D1               	movf	___fttol@exp1,f
 14691  0E77  1D03               	skipz
 14692  0E78  2E82               	goto	l5984
 14693  0E79  3000               	movlw	0
 14694  0E7A  00C7               	movwf	?___fttol+3
 14695  0E7B  3000               	movlw	0
 14696  0E7C  00C6               	movwf	?___fttol+2
 14697  0E7D  3000               	movlw	0
 14698  0E7E  00C5               	movwf	?___fttol+1
 14699  0E7F  3000               	movlw	0
 14700  0E80  00C4               	movwf	?___fttol
 14701  0E81  0008               	return
 14702  0E82                     l5984:	
 14703  0E82  0844               	movf	___fttol@f1,w
 14704  0E83  00C8               	movwf	??___fttol
 14705  0E84  0845               	movf	___fttol@f1+1,w
 14706  0E85  00C9               	movwf	??___fttol+1
 14707  0E86  0846               	movf	___fttol@f1+2,w
 14708  0E87  00CA               	movwf	??___fttol+2
 14709  0E88  3017               	movlw	23
 14710  0E89                     u4955:	
 14711  0E89  36CA               	lsrf	??___fttol+2,f
 14712  0E8A  0CC9               	rrf	??___fttol+1,f
 14713  0E8B  0CC8               	rrf	??___fttol,f
 14714  0E8C  0B89               	decfsz	9,f
 14715  0E8D  2E89               	goto	u4955
 14716  0E8E  0848               	movf	??___fttol,w
 14717  0E8F  00CB               	movwf	??___fttol+3
 14718  0E90  084B               	movf	??___fttol+3,w
 14719  0E91  00CC               	movwf	___fttol@sign1
 14720  0E92  17C5               	bsf	___fttol@f1+1,7
 14721  0E93  30FF               	movlw	255
 14722  0E94  05C4               	andwf	___fttol@f1,f
 14723  0E95  30FF               	movlw	255
 14724  0E96  05C5               	andwf	___fttol@f1+1,f
 14725  0E97  3000               	movlw	0
 14726  0E98  05C6               	andwf	___fttol@f1+2,f
 14727  0E99  0844               	movf	___fttol@f1,w
 14728  0E9A  00CD               	movwf	___fttol@lval
 14729  0E9B  0845               	movf	___fttol@f1+1,w
 14730  0E9C  00CE               	movwf	___fttol@lval+1
 14731  0E9D  0846               	movf	___fttol@f1+2,w
 14732  0E9E  00CF               	movwf	___fttol@lval+2
 14733  0E9F  01D0               	clrf	___fttol@lval+3
 14734  0EA0  308E               	movlw	142
 14735  0EA1  02D1               	subwf	___fttol@exp1,f
 14736  0EA2  1FD1               	btfss	___fttol@exp1,7
 14737  0EA3  2EC0               	goto	l6004
 14738  0EA4  0851               	movf	___fttol@exp1,w
 14739  0EA5  3A80               	xorlw	128
 14740  0EA6  3E8F               	addlw	143
 14741  0EA7  1803               	skipnc
 14742  0EA8  2EB2               	goto	l6002
 14743  0EA9  3000               	movlw	0
 14744  0EAA  00C7               	movwf	?___fttol+3
 14745  0EAB  3000               	movlw	0
 14746  0EAC  00C6               	movwf	?___fttol+2
 14747  0EAD  3000               	movlw	0
 14748  0EAE  00C5               	movwf	?___fttol+1
 14749  0EAF  3000               	movlw	0
 14750  0EB0  00C4               	movwf	?___fttol
 14751  0EB1  0008               	return
 14752  0EB2                     l6002:	
 14753  0EB2  3001               	movlw	1
 14754  0EB3                     u4985:	
 14755  0EB3  36D0               	lsrf	___fttol@lval+3,f
 14756  0EB4  0CCF               	rrf	___fttol@lval+2,f
 14757  0EB5  0CCE               	rrf	___fttol@lval+1,f
 14758  0EB6  0CCD               	rrf	___fttol@lval,f
 14759  0EB7  0B89               	decfsz	9,f
 14760  0EB8  2EB3               	goto	u4985
 14761  0EB9  3001               	movlw	1
 14762  0EBA  00C8               	movwf	??___fttol
 14763  0EBB  0848               	movf	??___fttol,w
 14764  0EBC  07D1               	addwf	___fttol@exp1,f
 14765  0EBD  1903               	btfsc	3,2
 14766  0EBE  2ED9               	goto	l6014
 14767  0EBF  2EB2               	goto	l6002
 14768  0EC0                     l6004:	
 14769  0EC0  3018               	movlw	24
 14770  0EC1  0251               	subwf	___fttol@exp1,w
 14771  0EC2  1C03               	skipc
 14772  0EC3  2ED6               	goto	l6012
 14773  0EC4  3000               	movlw	0
 14774  0EC5  00C7               	movwf	?___fttol+3
 14775  0EC6  3000               	movlw	0
 14776  0EC7  00C6               	movwf	?___fttol+2
 14777  0EC8  3000               	movlw	0
 14778  0EC9  00C5               	movwf	?___fttol+1
 14779  0ECA  3000               	movlw	0
 14780  0ECB  00C4               	movwf	?___fttol
 14781  0ECC  0008               	return
 14782  0ECD                     l6010:	
 14783  0ECD  3001               	movlw	1
 14784  0ECE                     u5015:	
 14785  0ECE  35CD               	lslf	___fttol@lval,f
 14786  0ECF  0DCE               	rlf	___fttol@lval+1,f
 14787  0ED0  0DCF               	rlf	___fttol@lval+2,f
 14788  0ED1  0DD0               	rlf	___fttol@lval+3,f
 14789  0ED2  0B89               	decfsz	9,f
 14790  0ED3  2ECE               	goto	u5015
 14791  0ED4  3001               	movlw	1
 14792  0ED5  02D1               	subwf	___fttol@exp1,f
 14793  0ED6                     l6012:	
 14794  0ED6  08D1               	movf	___fttol@exp1,f
 14795  0ED7  1D03               	skipz
 14796  0ED8  2ECD               	goto	l6010
 14797  0ED9                     l6014:	
 14798  0ED9  084C               	movf	___fttol@sign1,w
 14799  0EDA  1903               	btfsc	3,2
 14800  0EDB  2EE7               	goto	l6018
 14801  0EDC  09CD               	comf	___fttol@lval,f
 14802  0EDD  09CE               	comf	___fttol@lval+1,f
 14803  0EDE  09CF               	comf	___fttol@lval+2,f
 14804  0EDF  09D0               	comf	___fttol@lval+3,f
 14805  0EE0  0ACD               	incf	___fttol@lval,f
 14806  0EE1  1903               	skipnz
 14807  0EE2  0ACE               	incf	___fttol@lval+1,f
 14808  0EE3  1903               	skipnz
 14809  0EE4  0ACF               	incf	___fttol@lval+2,f
 14810  0EE5  1903               	skipnz
 14811  0EE6  0AD0               	incf	___fttol@lval+3,f
 14812  0EE7                     l6018:	
 14813  0EE7  0850               	movf	___fttol@lval+3,w
 14814  0EE8  00C7               	movwf	?___fttol+3
 14815  0EE9  084F               	movf	___fttol@lval+2,w
 14816  0EEA  00C6               	movwf	?___fttol+2
 14817  0EEB  084E               	movf	___fttol@lval+1,w
 14818  0EEC  00C5               	movwf	?___fttol+1
 14819  0EED  084D               	movf	___fttol@lval,w
 14820  0EEE  00C4               	movwf	?___fttol
 14821  0EEF  0008               	return
 14822  0EF0                     __end_of___fttol:	
 14823                           
 14824                           	psect	text105
 14825  04FF                     __ptext105:	
 14826 ;; *************** function ___ftmul *****************
 14827 ;; Defined at:
 14828 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 14829 ;; Parameters:    Size  Location     Type
 14830 ;;  f1              3    7[BANK0 ] float 
 14831 ;;  f2              3   10[BANK0 ] float 
 14832 ;; Auto vars:     Size  Location     Type
 14833 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
 14834 ;;  sign            1   22[BANK0 ] unsigned char 
 14835 ;;  cntr            1   21[BANK0 ] unsigned char 
 14836 ;;  exp             1   17[BANK0 ] unsigned char 
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  3    7[BANK0 ] float 
 14839 ;; Registers used:
 14840 ;;		wreg, status,2, status,0, pclath, cstack
 14841 ;; Tracked objects:
 14842 ;;		On entry : 0/0
 14843 ;;		On exit  : 0/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14846 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14847 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14850 ;;Total ram usage:       16 bytes
 14851 ;; Hardware stack levels used:    1
 14852 ;; Hardware stack levels required when called:    4
 14853 ;; This function calls:
 14854 ;;		___ftpack
 14855 ;; This function is called by:
 14856 ;;		_getDimmerLights_PercentToValue
 14857 ;; This function uses a non-reentrant model
 14858 ;;
 14859                           
 14860                           
 14861                           ;psect for function ___ftmul
 14862  04FF                     ___ftmul:	
 14863                           
 14864                           ;incstack = 0
 14865                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 14866  04FF  0020               	movlb	0	; select bank0
 14867  0500  0827               	movf	___ftmul@f1,w
 14868  0501  00AD               	movwf	??___ftmul
 14869  0502  0828               	movf	___ftmul@f1+1,w
 14870  0503  00AE               	movwf	??___ftmul+1
 14871  0504  0829               	movf	___ftmul@f1+2,w
 14872  0505  00AF               	movwf	??___ftmul+2
 14873  0506  1003               	clrc
 14874  0507  0D2E               	rlf	??___ftmul+1,w
 14875  0508  0D2F               	rlf	??___ftmul+2,w
 14876  0509  00B0               	movwf	??___ftmul+3
 14877  050A  0830               	movf	??___ftmul+3,w
 14878  050B  00B1               	movwf	___ftmul@exp
 14879  050C  08B1               	movf	___ftmul@exp,f
 14880  050D  1D03               	skipz
 14881  050E  2D16               	goto	l9532
 14882  050F  3000               	movlw	0
 14883  0510  00A7               	movwf	?___ftmul
 14884  0511  3000               	movlw	0
 14885  0512  00A8               	movwf	?___ftmul+1
 14886  0513  3000               	movlw	0
 14887  0514  00A9               	movwf	?___ftmul+2
 14888  0515  0008               	return
 14889  0516                     l9532:	
 14890  0516  082A               	movf	___ftmul@f2,w
 14891  0517  00AD               	movwf	??___ftmul
 14892  0518  082B               	movf	___ftmul@f2+1,w
 14893  0519  00AE               	movwf	??___ftmul+1
 14894  051A  082C               	movf	___ftmul@f2+2,w
 14895  051B  00AF               	movwf	??___ftmul+2
 14896  051C  1003               	clrc
 14897  051D  0D2E               	rlf	??___ftmul+1,w
 14898  051E  0D2F               	rlf	??___ftmul+2,w
 14899  051F  00B0               	movwf	??___ftmul+3
 14900  0520  0830               	movf	??___ftmul+3,w
 14901  0521  00B6               	movwf	___ftmul@sign
 14902  0522  08B6               	movf	___ftmul@sign,f
 14903  0523  1D03               	skipz
 14904  0524  2D2C               	goto	l9538
 14905  0525  3000               	movlw	0
 14906  0526  00A7               	movwf	?___ftmul
 14907  0527  3000               	movlw	0
 14908  0528  00A8               	movwf	?___ftmul+1
 14909  0529  3000               	movlw	0
 14910  052A  00A9               	movwf	?___ftmul+2
 14911  052B  0008               	return
 14912  052C                     l9538:	
 14913  052C  0836               	movf	___ftmul@sign,w
 14914  052D  3E7B               	addlw	123
 14915  052E  00AD               	movwf	??___ftmul
 14916  052F  082D               	movf	??___ftmul,w
 14917  0530  07B1               	addwf	___ftmul@exp,f
 14918  0531  0827               	movf	___ftmul@f1,w
 14919  0532  00AD               	movwf	??___ftmul
 14920  0533  0828               	movf	___ftmul@f1+1,w
 14921  0534  00AE               	movwf	??___ftmul+1
 14922  0535  0829               	movf	___ftmul@f1+2,w
 14923  0536  00AF               	movwf	??___ftmul+2
 14924  0537  3010               	movlw	16
 14925  0538                     u10515:	
 14926  0538  36AF               	lsrf	??___ftmul+2,f
 14927  0539  0CAE               	rrf	??___ftmul+1,f
 14928  053A  0CAD               	rrf	??___ftmul,f
 14929  053B  0B89               	decfsz	9,f
 14930  053C  2D38               	goto	u10515
 14931  053D  082D               	movf	??___ftmul,w
 14932  053E  00B0               	movwf	??___ftmul+3
 14933  053F  0830               	movf	??___ftmul+3,w
 14934  0540  00B6               	movwf	___ftmul@sign
 14935  0541  082A               	movf	___ftmul@f2,w
 14936  0542  00AD               	movwf	??___ftmul
 14937  0543  082B               	movf	___ftmul@f2+1,w
 14938  0544  00AE               	movwf	??___ftmul+1
 14939  0545  082C               	movf	___ftmul@f2+2,w
 14940  0546  00AF               	movwf	??___ftmul+2
 14941  0547  3010               	movlw	16
 14942  0548                     u10525:	
 14943  0548  36AF               	lsrf	??___ftmul+2,f
 14944  0549  0CAE               	rrf	??___ftmul+1,f
 14945  054A  0CAD               	rrf	??___ftmul,f
 14946  054B  0B89               	decfsz	9,f
 14947  054C  2D48               	goto	u10525
 14948  054D  082D               	movf	??___ftmul,w
 14949  054E  00B0               	movwf	??___ftmul+3
 14950  054F  0830               	movf	??___ftmul+3,w
 14951  0550  06B6               	xorwf	___ftmul@sign,f
 14952  0551  3080               	movlw	128
 14953  0552  00AD               	movwf	??___ftmul
 14954  0553  082D               	movf	??___ftmul,w
 14955  0554  05B6               	andwf	___ftmul@sign,f
 14956  0555  17A8               	bsf	___ftmul@f1+1,7
 14957  0556  17AB               	bsf	___ftmul@f2+1,7
 14958  0557  30FF               	movlw	255
 14959  0558  05AA               	andwf	___ftmul@f2,f
 14960  0559  30FF               	movlw	255
 14961  055A  05AB               	andwf	___ftmul@f2+1,f
 14962  055B  3000               	movlw	0
 14963  055C  05AC               	andwf	___ftmul@f2+2,f
 14964  055D  3000               	movlw	0
 14965  055E  00B2               	movwf	___ftmul@f3_as_product
 14966  055F  3000               	movlw	0
 14967  0560  00B3               	movwf	___ftmul@f3_as_product+1
 14968  0561  3000               	movlw	0
 14969  0562  00B4               	movwf	___ftmul@f3_as_product+2
 14970  0563  3007               	movlw	7
 14971  0564  00AD               	movwf	??___ftmul
 14972  0565  082D               	movf	??___ftmul,w
 14973  0566  00B5               	movwf	___ftmul@cntr
 14974  0567                     l9550:	
 14975  0567  1C27               	btfss	___ftmul@f1,0
 14976  0568  2D6F               	goto	l9554
 14977  0569  082A               	movf	___ftmul@f2,w
 14978  056A  07B2               	addwf	___ftmul@f3_as_product,f
 14979  056B  082B               	movf	___ftmul@f2+1,w
 14980  056C  3DB3               	addwfc	___ftmul@f3_as_product+1,f
 14981  056D  082C               	movf	___ftmul@f2+2,w
 14982  056E  3DB4               	addwfc	___ftmul@f3_as_product+2,f
 14983  056F                     l9554:	
 14984  056F  3001               	movlw	1
 14985  0570                     u10545:	
 14986  0570  36A9               	lsrf	___ftmul@f1+2,f
 14987  0571  0CA8               	rrf	___ftmul@f1+1,f
 14988  0572  0CA7               	rrf	___ftmul@f1,f
 14989  0573  0B89               	decfsz	9,f
 14990  0574  2D70               	goto	u10545
 14991  0575  3001               	movlw	1
 14992  0576                     u10555:	
 14993  0576  35AA               	lslf	___ftmul@f2,f
 14994  0577  0DAB               	rlf	___ftmul@f2+1,f
 14995  0578  0DAC               	rlf	___ftmul@f2+2,f
 14996  0579  0B89               	decfsz	9,f
 14997  057A  2D76               	goto	u10555
 14998  057B  3001               	movlw	1
 14999  057C  02B5               	subwf	___ftmul@cntr,f
 15000  057D  1D03               	btfss	3,2
 15001  057E  2D67               	goto	l9550
 15002  057F  3009               	movlw	9
 15003  0580  00AD               	movwf	??___ftmul
 15004  0581  082D               	movf	??___ftmul,w
 15005  0582  00B5               	movwf	___ftmul@cntr
 15006  0583                     l9562:	
 15007  0583  1C27               	btfss	___ftmul@f1,0
 15008  0584  2D8B               	goto	l9566
 15009  0585  082A               	movf	___ftmul@f2,w
 15010  0586  07B2               	addwf	___ftmul@f3_as_product,f
 15011  0587  082B               	movf	___ftmul@f2+1,w
 15012  0588  3DB3               	addwfc	___ftmul@f3_as_product+1,f
 15013  0589  082C               	movf	___ftmul@f2+2,w
 15014  058A  3DB4               	addwfc	___ftmul@f3_as_product+2,f
 15015  058B                     l9566:	
 15016  058B  3001               	movlw	1
 15017  058C                     u10585:	
 15018  058C  36A9               	lsrf	___ftmul@f1+2,f
 15019  058D  0CA8               	rrf	___ftmul@f1+1,f
 15020  058E  0CA7               	rrf	___ftmul@f1,f
 15021  058F  0B89               	decfsz	9,f
 15022  0590  2D8C               	goto	u10585
 15023  0591  3001               	movlw	1
 15024  0592                     u10595:	
 15025  0592  36B4               	lsrf	___ftmul@f3_as_product+2,f
 15026  0593  0CB3               	rrf	___ftmul@f3_as_product+1,f
 15027  0594  0CB2               	rrf	___ftmul@f3_as_product,f
 15028  0595  0B89               	decfsz	9,f
 15029  0596  2D92               	goto	u10595
 15030  0597  3001               	movlw	1
 15031  0598  02B5               	subwf	___ftmul@cntr,f
 15032  0599  1D03               	btfss	3,2
 15033  059A  2D83               	goto	l9562
 15034  059B  0832               	movf	___ftmul@f3_as_product,w
 15035  059C  00F2               	movwf	___ftpack@arg
 15036  059D  0833               	movf	___ftmul@f3_as_product+1,w
 15037  059E  00F3               	movwf	___ftpack@arg+1
 15038  059F  0834               	movf	___ftmul@f3_as_product+2,w
 15039  05A0  00F4               	movwf	___ftpack@arg+2
 15040  05A1  0831               	movf	___ftmul@exp,w
 15041  05A2  00AD               	movwf	??___ftmul
 15042  05A3  082D               	movf	??___ftmul,w
 15043  05A4  00F5               	movwf	___ftpack@exp
 15044  05A5  0836               	movf	___ftmul@sign,w
 15045  05A6  00AE               	movwf	??___ftmul+1
 15046  05A7  082E               	movf	??___ftmul+1,w
 15047  05A8  00F6               	movwf	___ftpack@sign
 15048  05A9  318A  22A1         	fcall	___ftpack
 15049  05AB  0872               	movf	?___ftpack,w
 15050  05AC  0020               	movlb	0	; select bank0
 15051  05AD  00A7               	movwf	?___ftmul
 15052  05AE  0873               	movf	?___ftpack+1,w
 15053  05AF  00A8               	movwf	?___ftmul+1
 15054  05B0  0874               	movf	?___ftpack+2,w
 15055  05B1  00A9               	movwf	?___ftmul+2
 15056  05B2  0008               	return
 15057  05B3                     __end_of___ftmul:	
 15058                           
 15059                           	psect	text106
 15060  05B3                     __ptext106:	
 15061 ;; *************** function ___ftdiv *****************
 15062 ;; Defined at:
 15063 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 15064 ;; Parameters:    Size  Location     Type
 15065 ;;  f2              3    7[BANK0 ] float 
 15066 ;;  f1              3   10[BANK0 ] float 
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;  f3              3   18[BANK0 ] float 
 15069 ;;  sign            1   22[BANK0 ] unsigned char 
 15070 ;;  exp             1   21[BANK0 ] unsigned char 
 15071 ;;  cntr            1   17[BANK0 ] unsigned char 
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  3    7[BANK0 ] float 
 15074 ;; Registers used:
 15075 ;;		wreg, status,2, status,0, pclath, cstack
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15081 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15084 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;Total ram usage:       16 bytes
 15086 ;; Hardware stack levels used:    1
 15087 ;; Hardware stack levels required when called:    4
 15088 ;; This function calls:
 15089 ;;		___ftpack
 15090 ;; This function is called by:
 15091 ;;		_getDimmerLights_PercentToValue
 15092 ;;		_getDimmerLights_ValueToPercent
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           
 15097                           ;psect for function ___ftdiv
 15098  05B3                     ___ftdiv:	
 15099                           
 15100                           ;incstack = 0
 15101                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 15102  05B3  0020               	movlb	0	; select bank0
 15103  05B4  082A               	movf	___ftdiv@f1,w
 15104  05B5  00AD               	movwf	??___ftdiv
 15105  05B6  082B               	movf	___ftdiv@f1+1,w
 15106  05B7  00AE               	movwf	??___ftdiv+1
 15107  05B8  082C               	movf	___ftdiv@f1+2,w
 15108  05B9  00AF               	movwf	??___ftdiv+2
 15109  05BA  1003               	clrc
 15110  05BB  0D2E               	rlf	??___ftdiv+1,w
 15111  05BC  0D2F               	rlf	??___ftdiv+2,w
 15112  05BD  00B0               	movwf	??___ftdiv+3
 15113  05BE  0830               	movf	??___ftdiv+3,w
 15114  05BF  00B5               	movwf	___ftdiv@exp
 15115  05C0  08B5               	movf	___ftdiv@exp,f
 15116  05C1  1D03               	skipz
 15117  05C2  2DCA               	goto	l9490
 15118  05C3  3000               	movlw	0
 15119  05C4  00A7               	movwf	?___ftdiv
 15120  05C5  3000               	movlw	0
 15121  05C6  00A8               	movwf	?___ftdiv+1
 15122  05C7  3000               	movlw	0
 15123  05C8  00A9               	movwf	?___ftdiv+2
 15124  05C9  0008               	return
 15125  05CA                     l9490:	
 15126  05CA  0827               	movf	___ftdiv@f2,w
 15127  05CB  00AD               	movwf	??___ftdiv
 15128  05CC  0828               	movf	___ftdiv@f2+1,w
 15129  05CD  00AE               	movwf	??___ftdiv+1
 15130  05CE  0829               	movf	___ftdiv@f2+2,w
 15131  05CF  00AF               	movwf	??___ftdiv+2
 15132  05D0  1003               	clrc
 15133  05D1  0D2E               	rlf	??___ftdiv+1,w
 15134  05D2  0D2F               	rlf	??___ftdiv+2,w
 15135  05D3  00B0               	movwf	??___ftdiv+3
 15136  05D4  0830               	movf	??___ftdiv+3,w
 15137  05D5  00B6               	movwf	___ftdiv@sign
 15138  05D6  08B6               	movf	___ftdiv@sign,f
 15139  05D7  1D03               	skipz
 15140  05D8  2DE0               	goto	l9496
 15141  05D9  3000               	movlw	0
 15142  05DA  00A7               	movwf	?___ftdiv
 15143  05DB  3000               	movlw	0
 15144  05DC  00A8               	movwf	?___ftdiv+1
 15145  05DD  3000               	movlw	0
 15146  05DE  00A9               	movwf	?___ftdiv+2
 15147  05DF  0008               	return
 15148  05E0                     l9496:	
 15149  05E0  3000               	movlw	0
 15150  05E1  00B2               	movwf	___ftdiv@f3
 15151  05E2  3000               	movlw	0
 15152  05E3  00B3               	movwf	___ftdiv@f3+1
 15153  05E4  3000               	movlw	0
 15154  05E5  00B4               	movwf	___ftdiv@f3+2
 15155  05E6  3089               	movlw	137
 15156  05E7  0736               	addwf	___ftdiv@sign,w
 15157  05E8  00AD               	movwf	??___ftdiv
 15158  05E9  082D               	movf	??___ftdiv,w
 15159  05EA  02B5               	subwf	___ftdiv@exp,f
 15160  05EB  082A               	movf	___ftdiv@f1,w
 15161  05EC  00AD               	movwf	??___ftdiv
 15162  05ED  082B               	movf	___ftdiv@f1+1,w
 15163  05EE  00AE               	movwf	??___ftdiv+1
 15164  05EF  082C               	movf	___ftdiv@f1+2,w
 15165  05F0  00AF               	movwf	??___ftdiv+2
 15166  05F1  3010               	movlw	16
 15167  05F2                     u10435:	
 15168  05F2  36AF               	lsrf	??___ftdiv+2,f
 15169  05F3  0CAE               	rrf	??___ftdiv+1,f
 15170  05F4  0CAD               	rrf	??___ftdiv,f
 15171  05F5  0B89               	decfsz	9,f
 15172  05F6  2DF2               	goto	u10435
 15173  05F7  082D               	movf	??___ftdiv,w
 15174  05F8  00B0               	movwf	??___ftdiv+3
 15175  05F9  0830               	movf	??___ftdiv+3,w
 15176  05FA  00B6               	movwf	___ftdiv@sign
 15177  05FB  0827               	movf	___ftdiv@f2,w
 15178  05FC  00AD               	movwf	??___ftdiv
 15179  05FD  0828               	movf	___ftdiv@f2+1,w
 15180  05FE  00AE               	movwf	??___ftdiv+1
 15181  05FF  0829               	movf	___ftdiv@f2+2,w
 15182  0600  00AF               	movwf	??___ftdiv+2
 15183  0601  3010               	movlw	16
 15184  0602                     u10445:	
 15185  0602  36AF               	lsrf	??___ftdiv+2,f
 15186  0603  0CAE               	rrf	??___ftdiv+1,f
 15187  0604  0CAD               	rrf	??___ftdiv,f
 15188  0605  0B89               	decfsz	9,f
 15189  0606  2E02               	goto	u10445
 15190  0607  082D               	movf	??___ftdiv,w
 15191  0608  00B0               	movwf	??___ftdiv+3
 15192  0609  0830               	movf	??___ftdiv+3,w
 15193  060A  06B6               	xorwf	___ftdiv@sign,f
 15194  060B  3080               	movlw	128
 15195  060C  00AD               	movwf	??___ftdiv
 15196  060D  082D               	movf	??___ftdiv,w
 15197  060E  05B6               	andwf	___ftdiv@sign,f
 15198  060F  17AB               	bsf	___ftdiv@f1+1,7
 15199  0610  30FF               	movlw	255
 15200  0611  05AA               	andwf	___ftdiv@f1,f
 15201  0612  30FF               	movlw	255
 15202  0613  05AB               	andwf	___ftdiv@f1+1,f
 15203  0614  3000               	movlw	0
 15204  0615  05AC               	andwf	___ftdiv@f1+2,f
 15205  0616  17A8               	bsf	___ftdiv@f2+1,7
 15206  0617  30FF               	movlw	255
 15207  0618  05A7               	andwf	___ftdiv@f2,f
 15208  0619  30FF               	movlw	255
 15209  061A  05A8               	andwf	___ftdiv@f2+1,f
 15210  061B  3000               	movlw	0
 15211  061C  05A9               	andwf	___ftdiv@f2+2,f
 15212  061D  3018               	movlw	24
 15213  061E  00AD               	movwf	??___ftdiv
 15214  061F  082D               	movf	??___ftdiv,w
 15215  0620  00B1               	movwf	___ftdiv@cntr
 15216  0621                     l9510:	
 15217  0621  3001               	movlw	1
 15218  0622                     u10455:	
 15219  0622  35B2               	lslf	___ftdiv@f3,f
 15220  0623  0DB3               	rlf	___ftdiv@f3+1,f
 15221  0624  0DB4               	rlf	___ftdiv@f3+2,f
 15222  0625  0B89               	decfsz	9,f
 15223  0626  2E22               	goto	u10455
 15224  0627  0829               	movf	___ftdiv@f2+2,w
 15225  0628  022C               	subwf	___ftdiv@f1+2,w
 15226  0629  1D03               	skipz
 15227  062A  2E31               	goto	u10465
 15228  062B  0828               	movf	___ftdiv@f2+1,w
 15229  062C  022B               	subwf	___ftdiv@f1+1,w
 15230  062D  1D03               	skipz
 15231  062E  2E31               	goto	u10465
 15232  062F  0827               	movf	___ftdiv@f2,w
 15233  0630  022A               	subwf	___ftdiv@f1,w
 15234  0631                     u10465:	
 15235  0631  1C03               	skipc
 15236  0632  2E3A               	goto	l9518
 15237  0633  0827               	movf	___ftdiv@f2,w
 15238  0634  02AA               	subwf	___ftdiv@f1,f
 15239  0635  0828               	movf	___ftdiv@f2+1,w
 15240  0636  3BAB               	subwfb	___ftdiv@f1+1,f
 15241  0637  0829               	movf	___ftdiv@f2+2,w
 15242  0638  3BAC               	subwfb	___ftdiv@f1+2,f
 15243  0639  1432               	bsf	___ftdiv@f3,0
 15244  063A                     l9518:	
 15245  063A  3001               	movlw	1
 15246  063B                     u10475:	
 15247  063B  35AA               	lslf	___ftdiv@f1,f
 15248  063C  0DAB               	rlf	___ftdiv@f1+1,f
 15249  063D  0DAC               	rlf	___ftdiv@f1+2,f
 15250  063E  0B89               	decfsz	9,f
 15251  063F  2E3B               	goto	u10475
 15252  0640  3001               	movlw	1
 15253  0641  02B1               	subwf	___ftdiv@cntr,f
 15254  0642  1D03               	btfss	3,2
 15255  0643  2E21               	goto	l9510
 15256  0644  0832               	movf	___ftdiv@f3,w
 15257  0645  00F2               	movwf	___ftpack@arg
 15258  0646  0833               	movf	___ftdiv@f3+1,w
 15259  0647  00F3               	movwf	___ftpack@arg+1
 15260  0648  0834               	movf	___ftdiv@f3+2,w
 15261  0649  00F4               	movwf	___ftpack@arg+2
 15262  064A  0835               	movf	___ftdiv@exp,w
 15263  064B  00AD               	movwf	??___ftdiv
 15264  064C  082D               	movf	??___ftdiv,w
 15265  064D  00F5               	movwf	___ftpack@exp
 15266  064E  0836               	movf	___ftdiv@sign,w
 15267  064F  00AE               	movwf	??___ftdiv+1
 15268  0650  082E               	movf	??___ftdiv+1,w
 15269  0651  00F6               	movwf	___ftpack@sign
 15270  0652  318A  22A1         	fcall	___ftpack
 15271  0654  0872               	movf	?___ftpack,w
 15272  0655  0020               	movlb	0	; select bank0
 15273  0656  00A7               	movwf	?___ftdiv
 15274  0657  0873               	movf	?___ftpack+1,w
 15275  0658  00A8               	movwf	?___ftdiv+1
 15276  0659  0874               	movf	?___ftpack+2,w
 15277  065A  00A9               	movwf	?___ftdiv+2
 15278  065B  0008               	return
 15279  065C                     __end_of___ftdiv:	
 15280                           
 15281                           	psect	text107
 15282  01C2                     __ptext107:	
 15283 ;; *************** function ___ftadd *****************
 15284 ;; Defined at:
 15285 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;  f1              3   23[BANK0 ] float 
 15288 ;;  f2              3   26[BANK0 ] float 
 15289 ;; Auto vars:     Size  Location     Type
 15290 ;;  exp1            1   35[BANK0 ] unsigned char 
 15291 ;;  exp2            1   34[BANK0 ] unsigned char 
 15292 ;;  sign            1   33[BANK0 ] unsigned char 
 15293 ;; Return value:  Size  Location     Type
 15294 ;;                  3   23[BANK0 ] float 
 15295 ;; Registers used:
 15296 ;;		wreg, status,2, status,0, pclath, cstack
 15297 ;; Tracked objects:
 15298 ;;		On entry : 0/0
 15299 ;;		On exit  : 0/0
 15300 ;;		Unchanged: 0/0
 15301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15302 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15303 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15305 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15306 ;;Total ram usage:       13 bytes
 15307 ;; Hardware stack levels used:    1
 15308 ;; Hardware stack levels required when called:    4
 15309 ;; This function calls:
 15310 ;;		___ftpack
 15311 ;; This function is called by:
 15312 ;;		_getDimmerLights_PercentToValue
 15313 ;; This function uses a non-reentrant model
 15314 ;;
 15315                           
 15316                           
 15317                           ;psect for function ___ftadd
 15318  01C2                     ___ftadd:	
 15319                           
 15320                           ;incstack = 0
 15321                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 15322  01C2  0020               	movlb	0	; select bank0
 15323  01C3  0837               	movf	___ftadd@f1,w
 15324  01C4  00BD               	movwf	??___ftadd
 15325  01C5  0838               	movf	___ftadd@f1+1,w
 15326  01C6  00BE               	movwf	??___ftadd+1
 15327  01C7  0839               	movf	___ftadd@f1+2,w
 15328  01C8  00BF               	movwf	??___ftadd+2
 15329  01C9  1003               	clrc
 15330  01CA  0D3E               	rlf	??___ftadd+1,w
 15331  01CB  0D3F               	rlf	??___ftadd+2,w
 15332  01CC  00C0               	movwf	??___ftadd+3
 15333  01CD  0840               	movf	??___ftadd+3,w
 15334  01CE  00C3               	movwf	___ftadd@exp1
 15335  01CF  083A               	movf	___ftadd@f2,w
 15336  01D0  00BD               	movwf	??___ftadd
 15337  01D1  083B               	movf	___ftadd@f2+1,w
 15338  01D2  00BE               	movwf	??___ftadd+1
 15339  01D3  083C               	movf	___ftadd@f2+2,w
 15340  01D4  00BF               	movwf	??___ftadd+2
 15341  01D5  1003               	clrc
 15342  01D6  0D3E               	rlf	??___ftadd+1,w
 15343  01D7  0D3F               	rlf	??___ftadd+2,w
 15344  01D8  00C0               	movwf	??___ftadd+3
 15345  01D9  0840               	movf	??___ftadd+3,w
 15346  01DA  00C2               	movwf	___ftadd@exp2
 15347  01DB  0843               	movf	___ftadd@exp1,w
 15348  01DC  1903               	btfsc	3,2
 15349  01DD  29EA               	goto	l9420
 15350  01DE  0842               	movf	___ftadd@exp2,w
 15351  01DF  0243               	subwf	___ftadd@exp1,w
 15352  01E0  1803               	skipnc
 15353  01E1  29F1               	goto	l9424
 15354  01E2  0343               	decf	___ftadd@exp1,w
 15355  01E3  3AFF               	xorlw	255
 15356  01E4  0742               	addwf	___ftadd@exp2,w
 15357  01E5  00BD               	movwf	??___ftadd
 15358  01E6  3019               	movlw	25
 15359  01E7  023D               	subwf	??___ftadd,w
 15360  01E8  1C03               	skipc
 15361  01E9  29F1               	goto	l9424
 15362  01EA                     l9420:	
 15363  01EA  083A               	movf	___ftadd@f2,w
 15364  01EB  00B7               	movwf	?___ftadd
 15365  01EC  083B               	movf	___ftadd@f2+1,w
 15366  01ED  00B8               	movwf	?___ftadd+1
 15367  01EE  083C               	movf	___ftadd@f2+2,w
 15368  01EF  00B9               	movwf	?___ftadd+2
 15369  01F0  0008               	return
 15370  01F1                     l9424:	
 15371  01F1  0842               	movf	___ftadd@exp2,w
 15372  01F2  1903               	btfsc	3,2
 15373  01F3  0008               	return
 15374  01F4  0843               	movf	___ftadd@exp1,w
 15375  01F5  0242               	subwf	___ftadd@exp2,w
 15376  01F6  1803               	skipnc
 15377  01F7  2A00               	goto	l9430
 15378  01F8  0342               	decf	___ftadd@exp2,w
 15379  01F9  3AFF               	xorlw	255
 15380  01FA  0743               	addwf	___ftadd@exp1,w
 15381  01FB  00BD               	movwf	??___ftadd
 15382  01FC  3019               	movlw	25
 15383  01FD  023D               	subwf	??___ftadd,w
 15384  01FE  1803               	btfsc	3,0
 15385  01FF  0008               	return
 15386  0200                     l9430:	
 15387  0200  3006               	movlw	6
 15388  0201  00BD               	movwf	??___ftadd
 15389  0202  083D               	movf	??___ftadd,w
 15390  0203  00C1               	movwf	___ftadd@sign
 15391  0204  1BB9               	btfsc	___ftadd@f1+2,7
 15392  0205  17C1               	bsf	___ftadd@sign,7
 15393  0206  1BBC               	btfsc	___ftadd@f2+2,7
 15394  0207  1741               	bsf	___ftadd@sign,6
 15395  0208  17B8               	bsf	___ftadd@f1+1,7
 15396  0209  30FF               	movlw	255
 15397  020A  05B7               	andwf	___ftadd@f1,f
 15398  020B  30FF               	movlw	255
 15399  020C  05B8               	andwf	___ftadd@f1+1,f
 15400  020D  3000               	movlw	0
 15401  020E  05B9               	andwf	___ftadd@f1+2,f
 15402  020F  17BB               	bsf	___ftadd@f2+1,7
 15403  0210  30FF               	movlw	255
 15404  0211  05BA               	andwf	___ftadd@f2,f
 15405  0212  30FF               	movlw	255
 15406  0213  05BB               	andwf	___ftadd@f2+1,f
 15407  0214  3000               	movlw	0
 15408  0215  05BC               	andwf	___ftadd@f2+2,f
 15409  0216  0842               	movf	___ftadd@exp2,w
 15410  0217  0243               	subwf	___ftadd@exp1,w
 15411  0218  1803               	skipnc
 15412  0219  2A3C               	goto	l9452
 15413  021A                     l9442:	
 15414  021A  3001               	movlw	1
 15415  021B                     u10275:	
 15416  021B  35BA               	lslf	___ftadd@f2,f
 15417  021C  0DBB               	rlf	___ftadd@f2+1,f
 15418  021D  0DBC               	rlf	___ftadd@f2+2,f
 15419  021E  0B89               	decfsz	9,f
 15420  021F  2A1B               	goto	u10275
 15421  0220  3001               	movlw	1
 15422  0221  02C2               	subwf	___ftadd@exp2,f
 15423  0222  0842               	movf	___ftadd@exp2,w
 15424  0223  0643               	xorwf	___ftadd@exp1,w
 15425  0224  1903               	skipnz
 15426  0225  2A37               	goto	l9450
 15427  0226  3001               	movlw	1
 15428  0227  02C1               	subwf	___ftadd@sign,f
 15429  0228  0841               	movf	___ftadd@sign,w
 15430  0229  3907               	andlw	7
 15431  022A  1903               	btfsc	3,2
 15432  022B  2A37               	goto	l9450
 15433  022C  2A1A               	goto	l9442
 15434  022D                     l9448:	
 15435  022D  3001               	movlw	1
 15436  022E                     u10305:	
 15437  022E  36B9               	lsrf	___ftadd@f1+2,f
 15438  022F  0CB8               	rrf	___ftadd@f1+1,f
 15439  0230  0CB7               	rrf	___ftadd@f1,f
 15440  0231  0B89               	decfsz	9,f
 15441  0232  2A2E               	goto	u10305
 15442  0233  3001               	movlw	1
 15443  0234  00BD               	movwf	??___ftadd
 15444  0235  083D               	movf	??___ftadd,w
 15445  0236  07C3               	addwf	___ftadd@exp1,f
 15446  0237                     l9450:	
 15447  0237  0843               	movf	___ftadd@exp1,w
 15448  0238  0642               	xorwf	___ftadd@exp2,w
 15449  0239  1903               	btfsc	3,2
 15450  023A  2A61               	goto	l2943
 15451  023B  2A2D               	goto	l9448
 15452  023C                     l9452:	
 15453  023C  0843               	movf	___ftadd@exp1,w
 15454  023D  0242               	subwf	___ftadd@exp2,w
 15455  023E  1803               	skipnc
 15456  023F  2A61               	goto	l2943
 15457  0240                     l9454:	
 15458  0240  3001               	movlw	1
 15459  0241                     u10335:	
 15460  0241  35B7               	lslf	___ftadd@f1,f
 15461  0242  0DB8               	rlf	___ftadd@f1+1,f
 15462  0243  0DB9               	rlf	___ftadd@f1+2,f
 15463  0244  0B89               	decfsz	9,f
 15464  0245  2A41               	goto	u10335
 15465  0246  3001               	movlw	1
 15466  0247  02C3               	subwf	___ftadd@exp1,f
 15467  0248  0842               	movf	___ftadd@exp2,w
 15468  0249  0643               	xorwf	___ftadd@exp1,w
 15469  024A  1903               	skipnz
 15470  024B  2A5D               	goto	l9462
 15471  024C  3001               	movlw	1
 15472  024D  02C1               	subwf	___ftadd@sign,f
 15473  024E  0841               	movf	___ftadd@sign,w
 15474  024F  3907               	andlw	7
 15475  0250  1903               	btfsc	3,2
 15476  0251  2A5D               	goto	l9462
 15477  0252  2A40               	goto	l9454
 15478  0253                     l9460:	
 15479  0253  3001               	movlw	1
 15480  0254                     u10365:	
 15481  0254  36BC               	lsrf	___ftadd@f2+2,f
 15482  0255  0CBB               	rrf	___ftadd@f2+1,f
 15483  0256  0CBA               	rrf	___ftadd@f2,f
 15484  0257  0B89               	decfsz	9,f
 15485  0258  2A54               	goto	u10365
 15486  0259  3001               	movlw	1
 15487  025A  00BD               	movwf	??___ftadd
 15488  025B  083D               	movf	??___ftadd,w
 15489  025C  07C2               	addwf	___ftadd@exp2,f
 15490  025D                     l9462:	
 15491  025D  0843               	movf	___ftadd@exp1,w
 15492  025E  0642               	xorwf	___ftadd@exp2,w
 15493  025F  1D03               	skipz
 15494  0260  2A53               	goto	l9460
 15495  0261                     l2943:	
 15496  0261  1FC1               	btfss	___ftadd@sign,7
 15497  0262  2A73               	goto	l9466
 15498  0263  30FF               	movlw	255
 15499  0264  06B7               	xorwf	___ftadd@f1,f
 15500  0265  30FF               	movlw	255
 15501  0266  06B8               	xorwf	___ftadd@f1+1,f
 15502  0267  30FF               	movlw	255
 15503  0268  06B9               	xorwf	___ftadd@f1+2,f
 15504  0269  3001               	movlw	1
 15505  026A  07B7               	addwf	___ftadd@f1,f
 15506  026B  3000               	movlw	0
 15507  026C  1803               	skipnc
 15508  026D  3001               	movlw	1
 15509  026E  07B8               	addwf	___ftadd@f1+1,f
 15510  026F  3000               	movlw	0
 15511  0270  1803               	skipnc
 15512  0271  3001               	movlw	1
 15513  0272  07B9               	addwf	___ftadd@f1+2,f
 15514  0273                     l9466:	
 15515  0273  1F41               	btfss	___ftadd@sign,6
 15516  0274  2A85               	goto	l9470
 15517  0275  30FF               	movlw	255
 15518  0276  06BA               	xorwf	___ftadd@f2,f
 15519  0277  30FF               	movlw	255
 15520  0278  06BB               	xorwf	___ftadd@f2+1,f
 15521  0279  30FF               	movlw	255
 15522  027A  06BC               	xorwf	___ftadd@f2+2,f
 15523  027B  3001               	movlw	1
 15524  027C  07BA               	addwf	___ftadd@f2,f
 15525  027D  3000               	movlw	0
 15526  027E  1803               	skipnc
 15527  027F  3001               	movlw	1
 15528  0280  07BB               	addwf	___ftadd@f2+1,f
 15529  0281  3000               	movlw	0
 15530  0282  1803               	skipnc
 15531  0283  3001               	movlw	1
 15532  0284  07BC               	addwf	___ftadd@f2+2,f
 15533  0285                     l9470:	
 15534  0285  01C1               	clrf	___ftadd@sign
 15535  0286  0837               	movf	___ftadd@f1,w
 15536  0287  07BA               	addwf	___ftadd@f2,f
 15537  0288  0838               	movf	___ftadd@f1+1,w
 15538  0289  3DBB               	addwfc	___ftadd@f2+1,f
 15539  028A  0839               	movf	___ftadd@f1+2,w
 15540  028B  3DBC               	addwfc	___ftadd@f2+2,f
 15541  028C  1FBC               	btfss	___ftadd@f2+2,7
 15542  028D  2AA0               	goto	l9480
 15543  028E  30FF               	movlw	255
 15544  028F  06BA               	xorwf	___ftadd@f2,f
 15545  0290  30FF               	movlw	255
 15546  0291  06BB               	xorwf	___ftadd@f2+1,f
 15547  0292  30FF               	movlw	255
 15548  0293  06BC               	xorwf	___ftadd@f2+2,f
 15549  0294  3001               	movlw	1
 15550  0295  07BA               	addwf	___ftadd@f2,f
 15551  0296  3000               	movlw	0
 15552  0297  1803               	skipnc
 15553  0298  3001               	movlw	1
 15554  0299  07BB               	addwf	___ftadd@f2+1,f
 15555  029A  3000               	movlw	0
 15556  029B  1803               	skipnc
 15557  029C  3001               	movlw	1
 15558  029D  07BC               	addwf	___ftadd@f2+2,f
 15559  029E  01C1               	clrf	___ftadd@sign
 15560  029F  0AC1               	incf	___ftadd@sign,f
 15561  02A0                     l9480:	
 15562  02A0  083A               	movf	___ftadd@f2,w
 15563  02A1  00F2               	movwf	___ftpack@arg
 15564  02A2  083B               	movf	___ftadd@f2+1,w
 15565  02A3  00F3               	movwf	___ftpack@arg+1
 15566  02A4  083C               	movf	___ftadd@f2+2,w
 15567  02A5  00F4               	movwf	___ftpack@arg+2
 15568  02A6  0843               	movf	___ftadd@exp1,w
 15569  02A7  00BD               	movwf	??___ftadd
 15570  02A8  083D               	movf	??___ftadd,w
 15571  02A9  00F5               	movwf	___ftpack@exp
 15572  02AA  0841               	movf	___ftadd@sign,w
 15573  02AB  00BE               	movwf	??___ftadd+1
 15574  02AC  083E               	movf	??___ftadd+1,w
 15575  02AD  00F6               	movwf	___ftpack@sign
 15576  02AE  318A  22A1         	fcall	___ftpack
 15577  02B0  0872               	movf	?___ftpack,w
 15578  02B1  0020               	movlb	0	; select bank0
 15579  02B2  00B7               	movwf	?___ftadd
 15580  02B3  0873               	movf	?___ftpack+1,w
 15581  02B4  00B8               	movwf	?___ftadd+1
 15582  02B5  0874               	movf	?___ftpack+2,w
 15583  02B6  00B9               	movwf	?___ftadd+2
 15584  02B7  0008               	return
 15585  02B8                     __end_of___ftadd:	
 15586                           
 15587                           	psect	text108
 15588  13E3                     __ptext108:	
 15589 ;; *************** function ___awtoft *****************
 15590 ;; Defined at:
 15591 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;  c               2    3[BANK0 ] int 
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;  sign            1    6[BANK0 ] unsigned char 
 15596 ;; Return value:  Size  Location     Type
 15597 ;;                  3    3[BANK0 ] float 
 15598 ;; Registers used:
 15599 ;;		wreg, status,2, status,0, pclath, cstack
 15600 ;; Tracked objects:
 15601 ;;		On entry : 0/0
 15602 ;;		On exit  : 0/0
 15603 ;;		Unchanged: 0/0
 15604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15605 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15609 ;;Total ram usage:        6 bytes
 15610 ;; Hardware stack levels used:    1
 15611 ;; Hardware stack levels required when called:    4
 15612 ;; This function calls:
 15613 ;;		___ftpack
 15614 ;; This function is called by:
 15615 ;;		_getDimmerLights_PercentToValue
 15616 ;;		_getDimmerLights_ValueToPercent
 15617 ;; This function uses a non-reentrant model
 15618 ;;
 15619                           
 15620                           
 15621                           ;psect for function ___awtoft
 15622  13E3                     ___awtoft:	
 15623                           
 15624                           ;incstack = 0
 15625                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 15626  13E3  0020               	movlb	0	; select bank0
 15627  13E4  01A6               	clrf	___awtoft@sign
 15628  13E5  1FA4               	btfss	___awtoft@c+1,7
 15629  13E6  2BEE               	goto	l9408
 15630  13E7  09A3               	comf	___awtoft@c,f
 15631  13E8  09A4               	comf	___awtoft@c+1,f
 15632  13E9  0AA3               	incf	___awtoft@c,f
 15633  13EA  1903               	skipnz
 15634  13EB  0AA4               	incf	___awtoft@c+1,f
 15635  13EC  01A6               	clrf	___awtoft@sign
 15636  13ED  0AA6               	incf	___awtoft@sign,f
 15637  13EE                     l9408:	
 15638  13EE  0823               	movf	___awtoft@c,w
 15639  13EF  00F2               	movwf	___ftpack@arg
 15640  13F0  0824               	movf	___awtoft@c+1,w
 15641  13F1  00F3               	movwf	___ftpack@arg+1
 15642  13F2  01F4               	clrf	___ftpack@arg+2
 15643  13F3  308E               	movlw	142
 15644  13F4  00F7               	movwf	??___awtoft
 15645  13F5  0877               	movf	??___awtoft,w
 15646  13F6  00F5               	movwf	___ftpack@exp
 15647  13F7  0826               	movf	___awtoft@sign,w
 15648  13F8  00F8               	movwf	??___awtoft+1
 15649  13F9  0878               	movf	??___awtoft+1,w
 15650  13FA  00F6               	movwf	___ftpack@sign
 15651  13FB  318A  22A1         	fcall	___ftpack
 15652  13FD  0872               	movf	?___ftpack,w
 15653  13FE  0020               	movlb	0	; select bank0
 15654  13FF  00A3               	movwf	?___awtoft
 15655  1400  0873               	movf	?___ftpack+1,w
 15656  1401  00A4               	movwf	?___awtoft+1
 15657  1402  0874               	movf	?___ftpack+2,w
 15658  1403  00A5               	movwf	?___awtoft+2
 15659  1404  0008               	return
 15660  1405                     __end_of___awtoft:	
 15661                           
 15662                           	psect	text109
 15663  0AA1                     __ptext109:	
 15664 ;; *************** function ___ftpack *****************
 15665 ;; Defined at:
 15666 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;  arg             3    2[COMMON] unsigned um
 15669 ;;  exp             1    5[COMMON] unsigned char 
 15670 ;;  sign            1    6[COMMON] unsigned char 
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;		None
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  3    2[COMMON] float 
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15682 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15685 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;Total ram usage:        8 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:    3
 15689 ;; This function calls:
 15690 ;;		Nothing
 15691 ;; This function is called by:
 15692 ;;		___awtoft
 15693 ;;		___ftadd
 15694 ;;		___ftdiv
 15695 ;;		___ftmul
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           
 15700                           ;psect for function ___ftpack
 15701  0AA1                     ___ftpack:	
 15702                           
 15703                           ;incstack = 0
 15704                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 15705  0AA1  0875               	movf	___ftpack@exp,w
 15706  0AA2  1903               	btfsc	3,2
 15707  0AA3  2AA9               	goto	l9352
 15708  0AA4  0874               	movf	___ftpack@arg+2,w
 15709  0AA5  0473               	iorwf	___ftpack@arg+1,w
 15710  0AA6  0472               	iorwf	___ftpack@arg,w
 15711  0AA7  1D03               	skipz
 15712  0AA8  2ABB               	goto	l9358
 15713  0AA9                     l9352:	
 15714  0AA9  3000               	movlw	0
 15715  0AAA  00F2               	movwf	?___ftpack
 15716  0AAB  3000               	movlw	0
 15717  0AAC  00F3               	movwf	?___ftpack+1
 15718  0AAD  3000               	movlw	0
 15719  0AAE  00F4               	movwf	?___ftpack+2
 15720  0AAF  0008               	return
 15721  0AB0                     l9356:	
 15722  0AB0  3001               	movlw	1
 15723  0AB1  0020               	movlb	0	; select bank0
 15724  0AB2  00A0               	movwf	??___ftpack
 15725  0AB3  0820               	movf	??___ftpack,w
 15726  0AB4  07F5               	addwf	___ftpack@exp,f
 15727  0AB5  3001               	movlw	1
 15728  0AB6                     u10045:	
 15729  0AB6  36F4               	lsrf	___ftpack@arg+2,f
 15730  0AB7  0CF3               	rrf	___ftpack@arg+1,f
 15731  0AB8  0CF2               	rrf	___ftpack@arg,f
 15732  0AB9  0B89               	decfsz	9,f
 15733  0ABA  2AB6               	goto	u10045
 15734  0ABB                     l9358:	
 15735  0ABB  30FE               	movlw	254
 15736  0ABC  0574               	andwf	___ftpack@arg+2,w
 15737  0ABD  1903               	btfsc	3,2
 15738  0ABE  2AD5               	goto	l2914
 15739  0ABF  2AB0               	goto	l9356
 15740  0AC0                     l9360:	
 15741  0AC0  3001               	movlw	1
 15742  0AC1  0020               	movlb	0	; select bank0
 15743  0AC2  00A0               	movwf	??___ftpack
 15744  0AC3  0820               	movf	??___ftpack,w
 15745  0AC4  07F5               	addwf	___ftpack@exp,f
 15746  0AC5  3001               	movlw	1
 15747  0AC6  07F2               	addwf	___ftpack@arg,f
 15748  0AC7  3000               	movlw	0
 15749  0AC8  1803               	skipnc
 15750  0AC9  3001               	movlw	1
 15751  0ACA  07F3               	addwf	___ftpack@arg+1,f
 15752  0ACB  3000               	movlw	0
 15753  0ACC  1803               	skipnc
 15754  0ACD  3001               	movlw	1
 15755  0ACE  07F4               	addwf	___ftpack@arg+2,f
 15756  0ACF  3001               	movlw	1
 15757  0AD0                     u10065:	
 15758  0AD0  36F4               	lsrf	___ftpack@arg+2,f
 15759  0AD1  0CF3               	rrf	___ftpack@arg+1,f
 15760  0AD2  0CF2               	rrf	___ftpack@arg,f
 15761  0AD3  0B89               	decfsz	9,f
 15762  0AD4  2AD0               	goto	u10065
 15763  0AD5                     l2914:	
 15764  0AD5  30FF               	movlw	255
 15765  0AD6  0574               	andwf	___ftpack@arg+2,w
 15766  0AD7  1903               	btfsc	3,2
 15767  0AD8  2AE2               	goto	l9368
 15768  0AD9  2AC0               	goto	l9360
 15769  0ADA                     l9366:	
 15770  0ADA  3001               	movlw	1
 15771  0ADB  02F5               	subwf	___ftpack@exp,f
 15772  0ADC  3001               	movlw	1
 15773  0ADD                     u10085:	
 15774  0ADD  35F2               	lslf	___ftpack@arg,f
 15775  0ADE  0DF3               	rlf	___ftpack@arg+1,f
 15776  0ADF  0DF4               	rlf	___ftpack@arg+2,f
 15777  0AE0  0B89               	decfsz	9,f
 15778  0AE1  2ADD               	goto	u10085
 15779  0AE2                     l9368:	
 15780  0AE2  1FF3               	btfss	___ftpack@arg+1,7
 15781  0AE3  2ADA               	goto	l9366
 15782  0AE4  1875               	btfsc	___ftpack@exp,0
 15783  0AE5  2AEC               	goto	l2920
 15784  0AE6  30FF               	movlw	255
 15785  0AE7  05F2               	andwf	___ftpack@arg,f
 15786  0AE8  307F               	movlw	127
 15787  0AE9  05F3               	andwf	___ftpack@arg+1,f
 15788  0AEA  30FF               	movlw	255
 15789  0AEB  05F4               	andwf	___ftpack@arg+2,f
 15790  0AEC                     l2920:	
 15791  0AEC  1003               	clrc
 15792  0AED  0CF5               	rrf	___ftpack@exp,f
 15793  0AEE  0875               	movf	___ftpack@exp,w
 15794  0AEF  0020               	movlb	0	; select bank0
 15795  0AF0  00A0               	movwf	??___ftpack
 15796  0AF1  01A1               	clrf	??___ftpack+1
 15797  0AF2  01A2               	clrf	??___ftpack+2
 15798  0AF3  3010               	movlw	16
 15799  0AF4                     u10115:	
 15800  0AF4  35A0               	lslf	??___ftpack,f
 15801  0AF5  0DA1               	rlf	??___ftpack+1,f
 15802  0AF6  0DA2               	rlf	??___ftpack+2,f
 15803  0AF7  0B89               	decfsz	9,f
 15804  0AF8  2AF4               	goto	u10115
 15805  0AF9  0820               	movf	??___ftpack,w
 15806  0AFA  04F2               	iorwf	___ftpack@arg,f
 15807  0AFB  0821               	movf	??___ftpack+1,w
 15808  0AFC  04F3               	iorwf	___ftpack@arg+1,f
 15809  0AFD  0822               	movf	??___ftpack+2,w
 15810  0AFE  04F4               	iorwf	___ftpack@arg+2,f
 15811  0AFF  0876               	movf	___ftpack@sign,w
 15812  0B00  1903               	btfsc	3,2
 15813  0B01  0008               	return
 15814  0B02  17F4               	bsf	___ftpack@arg+2,7
 15815  0B03  0008               	return
 15816  0B04                     __end_of___ftpack:	
 15817                           
 15818                           	psect	text110
 15819  1EF7                     __ptext110:	
 15820 ;; *************** function _DelayOff_Main *****************
 15821 ;; Defined at:
 15822 ;;		line 41 in file "../src/DelayOff_B1.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;		None
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;		None
 15827 ;; Return value:  Size  Location     Type
 15828 ;;		None               void
 15829 ;; Registers used:
 15830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;Total ram usage:        0 bytes
 15841 ;; Hardware stack levels used:    1
 15842 ;; Hardware stack levels required when called:    7
 15843 ;; This function calls:
 15844 ;;		_DlyOff_Main
 15845 ;; This function is called by:
 15846 ;;		_main
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850                           
 15851                           ;psect for function _DelayOff_Main
 15852  1EF7                     _DelayOff_Main:	
 15853                           
 15854                           ;DelayOff_B1.c: 43: DlyOff_Main(1);
 15855                           
 15856                           ;incstack = 0
 15857                           ; Regs used in _DelayOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15858  1EF7  3001               	movlw	1
 15859  1EF8  318C  24FE  319E   	fcall	_DlyOff_Main
 15860                           
 15861                           ;DelayOff_B1.c: 47: DlyOff_Main(2);
 15862  1EFB  3002               	movlw	2
 15863  1EFC  318C  24FE         	fcall	_DlyOff_Main
 15864  1EFE  0008               	return
 15865  1EFF                     __end_of_DelayOff_Main:	
 15866                           
 15867                           	psect	text111
 15868  0CFE                     __ptext111:	
 15869 ;; *************** function _DlyOff_Main *****************
 15870 ;; Defined at:
 15871 ;;		line 61 in file "../src/DelayOff_B1.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;  sw              1    wreg     unsigned char 
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;  sw              1   59[BANK0 ] unsigned char 
 15876 ;; Return value:  Size  Location     Type
 15877 ;;		None               void
 15878 ;; Registers used:
 15879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15880 ;; Tracked objects:
 15881 ;;		On entry : 0/0
 15882 ;;		On exit  : 0/0
 15883 ;;		Unchanged: 0/0
 15884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;Total ram usage:        3 bytes
 15890 ;; Hardware stack levels used:    1
 15891 ;; Hardware stack levels required when called:    6
 15892 ;; This function calls:
 15893 ;;		_DelayOffPointSelect
 15894 ;;		_getDimmerLights_Status
 15895 ;;		_setDimmerLights_SwOff
 15896 ;;		_setDimmerLights_SwOn
 15897 ;;		_setProductData
 15898 ;; This function is called by:
 15899 ;;		_DelayOff_Main
 15900 ;; This function uses a non-reentrant model
 15901 ;;
 15902                           
 15903                           
 15904                           ;psect for function _DlyOff_Main
 15905  0CFE                     _DlyOff_Main:	
 15906                           
 15907                           ;incstack = 0
 15908                           ; Regs used in _DlyOff_Main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15909                           ;DlyOff_Main@sw stored from wreg
 15910  0CFE  0020               	movlb	0	; select bank0
 15911  0CFF  00DB               	movwf	DlyOff_Main@sw
 15912                           
 15913                           ;DelayOff_B1.c: 63: DelayOffPointSelect(sw);
 15914  0D00  085B               	movf	DlyOff_Main@sw,w
 15915  0D01  3191  216C  318C   	fcall	_DelayOffPointSelect
 15916                           
 15917                           ;DelayOff_B1.c: 64: if (DelayOff->GO == 1) {
 15918  0D04  0020               	movlb	0	; select bank0
 15919  0D05  0869               	movf	_DelayOff,w
 15920  0D06  0086               	movwf	6
 15921  0D07  3001               	movlw	1	; select bank2/3
 15922  0D08  0087               	movwf	7
 15923  0D09  1C81               	btfss	1,1
 15924  0D0A  0008               	return
 15925                           
 15926                           ;DelayOff_B1.c: 65: DelayOff->SecondTime++;
 15927  0D0B  0869               	movf	_DelayOff,w
 15928  0D0C  3E02               	addlw	2
 15929  0D0D  0086               	movwf	6
 15930  0D0E  3001               	movlw	1	; select bank2/3
 15931  0D0F  0087               	movwf	7
 15932  0D10  3001               	movlw	1
 15933  0D11  0781               	addwf	1,f
 15934  0D12  3141               	addfsr 1,1
 15935  0D13  1803               	skipnc
 15936  0D14  0A81               	incf	1,f
 15937                           
 15938                           ;DelayOff_B1.c: 66: if (DelayOff->SecondTime >= (60000-10000)/20) {
 15939  0D15  0869               	movf	_DelayOff,w
 15940  0D16  3E02               	addlw	2
 15941  0D17  0086               	movwf	6
 15942  0D18  3001               	movlw	1	; select bank2/3
 15943  0D19  0087               	movwf	7
 15944  0D1A  3F40               	moviw [0]fsr1
 15945  0D1B  00D9               	movwf	??_DlyOff_Main
 15946  0D1C  3F41               	moviw [1]fsr1
 15947  0D1D  00DA               	movwf	??_DlyOff_Main+1
 15948  0D1E  3009               	movlw	9
 15949  0D1F  025A               	subwf	??_DlyOff_Main+1,w
 15950  0D20  30C4               	movlw	196
 15951  0D21  1903               	skipnz
 15952  0D22  0259               	subwf	??_DlyOff_Main,w
 15953  0D23  1C03               	skipc
 15954  0D24  0008               	return
 15955                           
 15956                           ;DelayOff_B1.c: 67: DelayOff->SecondTime = 0;
 15957  0D25  0869               	movf	_DelayOff,w
 15958  0D26  3E02               	addlw	2
 15959  0D27  0086               	movwf	6
 15960  0D28  3001               	movlw	1	; select bank2/3
 15961  0D29  0087               	movwf	7
 15962  0D2A  3000               	movlw	0
 15963  0D2B  3FC0               	movwi [0]fsr1
 15964  0D2C  3FC1               	movwi [1]fsr1
 15965                           
 15966                           ;DelayOff_B1.c: 68: DelayOff->MinuteTime++;
 15967  0D2D  3001               	movlw	1
 15968  0D2E  00D9               	movwf	??_DlyOff_Main
 15969  0D2F  0869               	movf	_DelayOff,w
 15970  0D30  3E04               	addlw	4
 15971  0D31  0086               	movwf	6
 15972  0D32  3001               	movlw	1	; select bank2/3
 15973  0D33  0087               	movwf	7
 15974  0D34  0859               	movf	??_DlyOff_Main,w
 15975  0D35  0781               	addwf	1,f
 15976                           
 15977                           ;DelayOff_B1.c: 69: if (DelayOff->MinuteTime >= DelayOff->Value) {
 15978  0D36  0869               	movf	_DelayOff,w
 15979  0D37  3E04               	addlw	4
 15980  0D38  0086               	movwf	6
 15981  0D39  3001               	movlw	1	; select bank2/3
 15982  0D3A  0087               	movwf	7
 15983  0D3B  0A69               	incf	_DelayOff,w
 15984  0D3C  0084               	movwf	4
 15985  0D3D  3001               	movlw	1	; select bank2/3
 15986  0D3E  0085               	movwf	5
 15987  0D3F  0800               	movf	0,w
 15988  0D40  0201               	subwf	1,w
 15989  0D41  1C03               	skipc
 15990  0D42  0008               	return
 15991                           
 15992                           ;DelayOff_B1.c: 70: DelayOff->MinuteTime = 0;
 15993  0D43  0869               	movf	_DelayOff,w
 15994  0D44  3E04               	addlw	4
 15995  0D45  0086               	movwf	6
 15996  0D46  3001               	movlw	1	; select bank2/3
 15997  0D47  0087               	movwf	7
 15998  0D48  0181               	clrf	1
 15999                           
 16000                           ;DelayOff_B1.c: 71: DelayOff->GO = 0;
 16001  0D49  0869               	movf	_DelayOff,w
 16002  0D4A  0086               	movwf	6
 16003  0D4B  3001               	movlw	1	; select bank2/3
 16004  0D4C  0087               	movwf	7
 16005  0D4D  1081               	bcf	1,1
 16006                           
 16007                           ;DelayOff_B1.c: 75: if (getDimmerLights_Status(sw) == 1) {
 16008  0D4E  085B               	movf	DlyOff_Main@sw,w
 16009  0D4F  319F  27B5  318C   	fcall	_getDimmerLights_Status
 16010  0D52  3A01               	xorlw	1
 16011  0D53  1D03               	skipz
 16012  0D54  2D5F               	goto	l573
 16013                           
 16014                           ;DelayOff_B1.c: 76: setDimmerLights_SwOn(sw);
 16015  0D55  0020               	movlb	0	; select bank0
 16016  0D56  085B               	movf	DlyOff_Main@sw,w
 16017  0D57  3187  2791  318C   	fcall	_setDimmerLights_SwOn
 16018                           
 16019                           ;DelayOff_B1.c: 77: setDimmerLights_SwOff(sw);
 16020  0D5A  0020               	movlb	0	; select bank0
 16021  0D5B  085B               	movf	DlyOff_Main@sw,w
 16022  0D5C  3195  25CE  318C   	fcall	_setDimmerLights_SwOff
 16023  0D5F                     l573:	
 16024                           
 16025                           ;DelayOff_B1.c: 78: }
 16026                           ;DelayOff_B1.c: 80: setProductData(26 + sw, 0);
 16027  0D5F  0020               	movlb	0	; select bank0
 16028  0D60  01D6               	clrf	setProductData@value
 16029  0D61  085B               	movf	DlyOff_Main@sw,w
 16030  0D62  3E1A               	addlw	26
 16031  0D63  319F  2779         	fcall	_setProductData
 16032  0D65  0008               	return
 16033  0D66                     __end_of_DlyOff_Main:	
 16034                           
 16035                           	psect	text112
 16036  1F79                     __ptext112:	
 16037 ;; *************** function _setProductData *****************
 16038 ;; Defined at:
 16039 ;;		line 650 in file "../src/Main_B1.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  address         1    wreg     unsigned char 
 16042 ;;  value           1   54[BANK0 ] unsigned char 
 16043 ;; Auto vars:     Size  Location     Type
 16044 ;;  address         1   56[BANK0 ] unsigned char 
 16045 ;; Return value:  Size  Location     Type
 16046 ;;		None               void
 16047 ;; Registers used:
 16048 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/0
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16054 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16057 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16058 ;;Total ram usage:        3 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; Hardware stack levels required when called:    3
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		_DlyOff_Main
 16065 ;;		_setDelayOff_GO
 16066 ;;		_setDimmerLights_OnOff
 16067 ;;		_setDimmerLights_Dimming
 16068 ;;		_setLog_Code
 16069 ;;		_setControl_Lights_Table
 16070 ;;		_setRFSW_AdjControl
 16071 ;;		_setRF_DimmerLights
 16072 ;; This function uses a non-reentrant model
 16073 ;;
 16074                           
 16075                           
 16076                           ;psect for function _setProductData
 16077  1F79                     _setProductData:	
 16078                           
 16079                           ;incstack = 0
 16080                           ; Regs used in _setProductData: [wreg+fsr1l+fsr1h+status,2+status,0]
 16081                           ;setProductData@address stored from wreg
 16082  1F79  0020               	movlb	0	; select bank0
 16083  1F7A  00D8               	movwf	setProductData@address
 16084                           
 16085                           ;Main_B1.c: 651: _product.Data[address] = value;
 16086  1F7B  0856               	movf	setProductData@value,w
 16087  1F7C  00D7               	movwf	??_setProductData
 16088  1F7D  0858               	movf	setProductData@address,w
 16089  1F7E  3E20               	addlw	__product& (0+255)
 16090  1F7F  0086               	movwf	6
 16091  1F80  3002               	movlw	2	; select bank4/5
 16092  1F81  0087               	movwf	7
 16093  1F82  0857               	movf	??_setProductData,w
 16094  1F83  0081               	movwf	1
 16095  1F84  0008               	return
 16096  1F85                     __end_of_setProductData:	
 16097                           
 16098                           	psect	text113
 16099  0791                     __ptext113:	
 16100 ;; *************** function _setDimmerLights_SwOn *****************
 16101 ;; Defined at:
 16102 ;;		line 759 in file "../src/Dimmer_B1.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;  sw              1    wreg     unsigned char 
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;  sw              1   11[BANK0 ] unsigned char 
 16107 ;;  idle            1   10[BANK0 ] unsigned char 
 16108 ;;  dimmingStatu    1    7[BANK0 ] unsigned char 
 16109 ;; Return value:  Size  Location     Type
 16110 ;;		None               void
 16111 ;; Registers used:
 16112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16119 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16120 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16121 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16122 ;;Total ram usage:        6 bytes
 16123 ;; Hardware stack levels used:    1
 16124 ;; Hardware stack levels required when called:    5
 16125 ;; This function calls:
 16126 ;;		_DimmerLights_SelectPointer
 16127 ;;		_getDimmerIntr_Dimming_Sw
 16128 ;;		_setBuz
 16129 ;; This function is called by:
 16130 ;;		_DlyOff_Main
 16131 ;;		_setControl_Lights_Table
 16132 ;;		_setRFSW_Control
 16133 ;;		_setRFSW_AdjControl
 16134 ;;		_setSw_Main
 16135 ;; This function uses a non-reentrant model
 16136 ;;
 16137                           
 16138                           
 16139                           ;psect for function _setDimmerLights_SwOn
 16140  0791                     _setDimmerLights_SwOn:	
 16141                           
 16142                           ;incstack = 0
 16143                           ; Regs used in _setDimmerLights_SwOn: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16144                           ;setDimmerLights_SwOn@sw stored from wreg
 16145  0791  0020               	movlb	0	; select bank0
 16146  0792  00AB               	movwf	setDimmerLights_SwOn@sw
 16147                           
 16148                           ;Dimmer_B1.c: 760: char idle = 0;
 16149  0793  01AA               	clrf	setDimmerLights_SwOn@idle
 16150                           
 16151                           ;Dimmer_B1.c: 762: char dimmingStatus = 0;
 16152  0794  01A7               	clrf	setDimmerLights_SwOn@dimmingStatus
 16153                           
 16154                           ;Dimmer_B1.c: 763: dimmingStatus = getDimmerIntr_Dimming_Sw(sw);
 16155  0795  082B               	movf	setDimmerLights_SwOn@sw,w
 16156  0796  3192  2214  3187   	fcall	_getDimmerIntr_Dimming_Sw
 16157  0799  0020               	movlb	0	; select bank0
 16158  079A  00A6               	movwf	??_setDimmerLights_SwOn
 16159  079B  0826               	movf	??_setDimmerLights_SwOn,w
 16160  079C  00A7               	movwf	setDimmerLights_SwOn@dimmingStatus
 16161                           
 16162                           ;Dimmer_B1.c: 767: if (idle == 0) {
 16163  079D  08AA               	movf	setDimmerLights_SwOn@idle,f
 16164  079E  1D03               	skipz
 16165  079F  2FC2               	goto	l9636
 16166                           
 16167                           ;Dimmer_B1.c: 768: if (sw == 1) {
 16168  07A0  082B               	movf	setDimmerLights_SwOn@sw,w
 16169  07A1  3A01               	xorlw	1
 16170  07A2  1D03               	skipz
 16171  07A3  2FAF               	goto	l9626
 16172                           
 16173                           ;Dimmer_B1.c: 769: idle = DimmerLights2.DimmingTrigger == 1 || DimmerIntr2.Dimming_Sw ==
      +                           1 ? 1 : 0;
 16174  07A4  01A8               	clrf	_setDimmerLights_SwOn$2411
 16175  07A5  0AA8               	incf	_setDimmerLights_SwOn$2411,f
 16176  07A6  0022               	movlb	2	; select bank2
 16177  07A7  1E5C               	btfss	_DimmerLights2^(0+256),4
 16178  07A8  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 16179  07A9  2FAC               	goto	l9624
 16180  07AA  0020               	movlb	0	; select bank0
 16181  07AB  01A8               	clrf	_setDimmerLights_SwOn$2411
 16182  07AC                     l9624:	
 16183  07AC  0020               	movlb	0	; select bank0
 16184  07AD  0828               	movf	_setDimmerLights_SwOn$2411,w
 16185  07AE  2FBF               	goto	L9
 16186  07AF                     l9626:	
 16187                           ;Dimmer_B1.c: 770: } else if (sw == 2) {
 16188                           
 16189  07AF  082B               	movf	setDimmerLights_SwOn@sw,w
 16190  07B0  3A02               	xorlw	2
 16191  07B1  1D03               	skipz
 16192  07B2  2FC2               	goto	l9636
 16193                           
 16194                           ;Dimmer_B1.c: 771: idle = DimmerLights1.DimmingTrigger == 1 || DimmerIntr1.Dimming_Sw ==
      +                           1 ? 1 : 0;
 16195  07B3  01A9               	clrf	_setDimmerLights_SwOn$2420
 16196  07B4  0AA9               	incf	_setDimmerLights_SwOn$2420,f
 16197  07B5  0022               	movlb	2	; select bank2
 16198  07B6  1A53               	btfsc	_DimmerLights1^(0+256),4
 16199  07B7  2FBD               	goto	l9634
 16200  07B8  0021               	movlb	1	; select bank1
 16201  07B9  1A20               	btfsc	_DimmerIntr1^(0+128),4
 16202  07BA  2FBD               	goto	l9634
 16203  07BB  0020               	movlb	0	; select bank0
 16204  07BC  01A9               	clrf	_setDimmerLights_SwOn$2420
 16205  07BD                     l9634:	
 16206  07BD  0020               	movlb	0	; select bank0
 16207  07BE  0829               	movf	_setDimmerLights_SwOn$2420,w
 16208  07BF                     L9:	
 16209  07BF  00A6               	movwf	??_setDimmerLights_SwOn
 16210  07C0  0826               	movf	??_setDimmerLights_SwOn,w
 16211  07C1  00AA               	movwf	setDimmerLights_SwOn@idle
 16212  07C2                     l9636:	
 16213                           
 16214                           ;Dimmer_B1.c: 772: }
 16215                           ;Dimmer_B1.c: 773: }
 16216                           ;Dimmer_B1.c: 790: DimmerLights_SelectPointer(sw);
 16217  07C2  082B               	movf	setDimmerLights_SwOn@sw,w
 16218  07C3  3191  2181  3187   	fcall	_DimmerLights_SelectPointer
 16219                           
 16220                           ;Dimmer_B1.c: 791: if (idle == 0) {
 16221  07C6  0020               	movlb	0	; select bank0
 16222  07C7  08AA               	movf	setDimmerLights_SwOn@idle,f
 16223  07C8  1D03               	skipz
 16224  07C9  0008               	return
 16225                           
 16226                           ;Dimmer_B1.c: 793: if (dimmingStatus == 0) {
 16227  07CA  08A7               	movf	setDimmerLights_SwOn@dimmingStatus,f
 16228  07CB  1D03               	skipz
 16229  07CC  2FEE               	goto	l9648
 16230                           
 16231                           ;Dimmer_B1.c: 794: DimmerLights->SwFlag = 1;
 16232  07CD  086A               	movf	_DimmerLights,w
 16233  07CE  0086               	movwf	6
 16234  07CF  3001               	movlw	1	; select bank2/3
 16235  07D0  0087               	movwf	7
 16236  07D1  1401               	bsf	1,0
 16237                           
 16238                           ;Dimmer_B1.c: 795: if (DimmerLights->Status == 0) {
 16239  07D2  0A6A               	incf	_DimmerLights,w
 16240  07D3  0086               	movwf	6
 16241  07D4  3001               	movlw	1	; select bank2/3
 16242  07D5  0087               	movwf	7
 16243  07D6  1801               	btfsc	1,0
 16244  07D7  2FE8               	goto	l9646
 16245                           
 16246                           ;Dimmer_B1.c: 796: DimmerLights->Status = 1;
 16247  07D8  0A6A               	incf	_DimmerLights,w
 16248  07D9  0086               	movwf	6
 16249  07DA  3001               	movlw	1	; select bank2/3
 16250  07DB  0087               	movwf	7
 16251  07DC  1401               	bsf	1,0
 16252                           
 16253                           ;Dimmer_B1.c: 799: DimmerLights->Trigger = 1;
 16254  07DD  086A               	movf	_DimmerLights,w
 16255  07DE  0086               	movwf	6
 16256  07DF  3001               	movlw	1	; select bank2/3
 16257  07E0  0087               	movwf	7
 16258  07E1  1481               	bsf	1,1
 16259                           
 16260                           ;Dimmer_B1.c: 800: DimmerLights->Switch = 1;
 16261  07E2  086A               	movf	_DimmerLights,w
 16262  07E3  0086               	movwf	6
 16263  07E4  3001               	movlw	1	; select bank2/3
 16264  07E5  0087               	movwf	7
 16265  07E6  1501               	bsf	1,2
 16266                           
 16267                           ;Dimmer_B1.c: 807: } else {
 16268  07E7  2FF8               	goto	l9650
 16269  07E8                     l9646:	
 16270                           
 16271                           ;Dimmer_B1.c: 808: DimmerLights->Status = 0;
 16272  07E8  0A6A               	incf	_DimmerLights,w
 16273  07E9  0086               	movwf	6
 16274  07EA  3001               	movlw	1	; select bank2/3
 16275  07EB  0087               	movwf	7
 16276  07EC  1001               	bcf	1,0
 16277                           
 16278                           ;Dimmer_B1.c: 809: }
 16279                           ;Dimmer_B1.c: 810: } else {
 16280  07ED  2FF8               	goto	l9650
 16281  07EE                     l9648:	
 16282                           
 16283                           ;Dimmer_B1.c: 811: DimmerLights->DimmingTrigger = 1;
 16284  07EE  086A               	movf	_DimmerLights,w
 16285  07EF  0086               	movwf	6
 16286  07F0  3001               	movlw	1	; select bank2/3
 16287  07F1  0087               	movwf	7
 16288  07F2  1601               	bsf	1,4
 16289                           
 16290                           ;Dimmer_B1.c: 812: DimmerLights->DimmingSwitch = 0;
 16291  07F3  086A               	movf	_DimmerLights,w
 16292  07F4  0086               	movwf	6
 16293  07F5  3001               	movlw	1	; select bank2/3
 16294  07F6  0087               	movwf	7
 16295  07F7  1281               	bcf	1,5
 16296  07F8                     l9650:	
 16297                           
 16298                           ;Dimmer_B1.c: 813: }
 16299                           ;Dimmer_B1.c: 814: setBuz(1, 100);
 16300  07F8  3064               	movlw	100
 16301  07F9  00A4               	movwf	setBuz@time
 16302  07FA  3000               	movlw	0
 16303  07FB  00A5               	movwf	setBuz@time+1
 16304  07FC  3001               	movlw	1
 16305  07FD  3189  2141         	fcall	_setBuz
 16306  07FF  0008               	return
 16307  0800                     __end_of_setDimmerLights_SwOn:	
 16308                           
 16309                           	psect	text114
 16310  0941                     __ptext114:	
 16311 ;; *************** function _setBuz *****************
 16312 ;; Defined at:
 16313 ;;		line 22 in file "../src/Buzzer_B1.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;  count           1    wreg     unsigned char 
 16316 ;;  time            2    4[BANK0 ] int 
 16317 ;; Auto vars:     Size  Location     Type
 16318 ;;  count           1    8[COMMON] unsigned char 
 16319 ;; Return value:  Size  Location     Type
 16320 ;;		None               void
 16321 ;; Registers used:
 16322 ;;		wreg, status,2, status,0, pclath, cstack
 16323 ;; Tracked objects:
 16324 ;;		On entry : 0/0
 16325 ;;		On exit  : 0/0
 16326 ;;		Unchanged: 0/0
 16327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16331 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16332 ;;Total ram usage:        4 bytes
 16333 ;; Hardware stack levels used:    1
 16334 ;; Hardware stack levels required when called:    4
 16335 ;; This function calls:
 16336 ;;		___awdiv
 16337 ;; This function is called by:
 16338 ;;		_setDimmerLights_SwOn
 16339 ;;		_setDimmerLights_Dimming
 16340 ;;		_my_MainTimer
 16341 ;;		_setLog_Code
 16342 ;;		_setRFSW_Control
 16343 ;;		_setRFSW_AdjControl
 16344 ;;		_setSw_Main
 16345 ;; This function uses a non-reentrant model
 16346 ;;
 16347                           
 16348                           
 16349                           ;psect for function _setBuz
 16350  0941                     _setBuz:	
 16351                           
 16352                           ;incstack = 0
 16353                           ; Regs used in _setBuz: [wreg+status,2+status,0+pclath+cstack]
 16354                           ;setBuz@count stored from wreg
 16355  0941  00F8               	movwf	setBuz@count
 16356                           
 16357                           ;Buzzer_B1.c: 23: time /= 20;
 16358  0942  3014               	movlw	20
 16359  0943  00F2               	movwf	___awdiv@divisor
 16360  0944  3000               	movlw	0
 16361  0945  00F3               	movwf	___awdiv@divisor+1
 16362  0946  0020               	movlb	0	; select bank0
 16363  0947  0825               	movf	setBuz@time+1,w
 16364  0948  01F5               	clrf	___awdiv@dividend+1
 16365  0949  07F5               	addwf	___awdiv@dividend+1,f
 16366  094A  0824               	movf	setBuz@time,w
 16367  094B  01F4               	clrf	___awdiv@dividend
 16368  094C  07F4               	addwf	___awdiv@dividend,f
 16369  094D  3189  2194  3189   	fcall	___awdiv
 16370  0950  0873               	movf	?___awdiv+1,w
 16371  0951  0020               	movlb	0	; select bank0
 16372  0952  01A5               	clrf	setBuz@time+1
 16373  0953  07A5               	addwf	setBuz@time+1,f
 16374  0954  0872               	movf	?___awdiv,w
 16375  0955  01A4               	clrf	setBuz@time
 16376  0956  07A4               	addwf	setBuz@time,f
 16377                           
 16378                           ;Buzzer_B1.c: 24: if (Buz1.Enable == 1) {
 16379  0957  0021               	movlb	1	; select bank1
 16380  0958  1C4C               	btfss	_Buz1^(0+128),0
 16381  0959  0008               	return
 16382                           
 16383                           ;Buzzer_B1.c: 25: if (Buz1.GO == 0) {
 16384  095A  18CC               	btfsc	_Buz1^(0+128),1
 16385  095B  2970               	goto	l96
 16386                           
 16387                           ;Buzzer_B1.c: 26: Buz1.GO = 1;
 16388  095C  14CC               	bsf	_Buz1^(0+128),1
 16389                           
 16390                           ;Buzzer_B1.c: 27: Buz1.Counter = 0;
 16391  095D  01CD               	clrf	(_Buz1^(0+128)+1)
 16392  095E  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 16393                           
 16394                           ;Buzzer_B1.c: 28: Buz1.Count = count;
 16395  095F  0878               	movf	setBuz@count,w
 16396  0960  00F7               	movwf	??_setBuz
 16397  0961  0877               	movf	??_setBuz,w
 16398  0962  00CF               	movwf	(_Buz1^(0+128)+3)
 16399                           
 16400                           ;Buzzer_B1.c: 29: Buz1.TimeValue = time;
 16401  0963  0020               	movlb	0	; select bank0
 16402  0964  0825               	movf	setBuz@time+1,w
 16403  0965  0021               	movlb	1	; select bank1
 16404  0966  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 16405  0967  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 16406  0968  0020               	movlb	0	; select bank0
 16407  0969  0824               	movf	setBuz@time,w
 16408  096A  0021               	movlb	1	; select bank1
 16409  096B  01D2               	clrf	(_Buz1^(0+128)+6)
 16410  096C  07D2               	addwf	(_Buz1^(0+128)+6),f
 16411                           
 16412                           ;Buzzer_B1.c: 30: RB3 = 1;
 16413  096D  0020               	movlb	0	; select bank0
 16414  096E  158D               	bsf	13,3	;volatile
 16415                           
 16416                           ;Buzzer_B1.c: 31: } else {
 16417  096F  0008               	return
 16418  0970                     l96:	
 16419                           
 16420                           ;Buzzer_B1.c: 32: if (Buz1.BufferStatus1 == 0) {
 16421  0970  19CC               	btfsc	_Buz1^(0+128),3
 16422  0971  2982               	goto	l98
 16423                           
 16424                           ;Buzzer_B1.c: 33: Buz1.BufferStatus1 = 1;
 16425  0972  15CC               	bsf	_Buz1^(0+128),3
 16426                           
 16427                           ;Buzzer_B1.c: 34: Buz1.CountBuffer1 = count;
 16428  0973  0878               	movf	setBuz@count,w
 16429  0974  00F7               	movwf	??_setBuz
 16430  0975  0877               	movf	??_setBuz,w
 16431  0976  00D0               	movwf	(_Buz1^(0+128)+4)
 16432                           
 16433                           ;Buzzer_B1.c: 35: Buz1.TimeValueBuffer1 = time;
 16434  0977  0020               	movlb	0	; select bank0
 16435  0978  0825               	movf	setBuz@time+1,w
 16436  0979  0021               	movlb	1	; select bank1
 16437  097A  01D5               	clrf	((_Buz1+1)^(0+128)+8)
 16438  097B  07D5               	addwf	((_Buz1+1)^(0+128)+8),f
 16439  097C  0020               	movlb	0	; select bank0
 16440  097D  0824               	movf	setBuz@time,w
 16441  097E  0021               	movlb	1	; select bank1
 16442  097F  01D4               	clrf	(_Buz1^(0+128)+8)
 16443  0980  07D4               	addwf	(_Buz1^(0+128)+8),f
 16444                           
 16445                           ;Buzzer_B1.c: 36: } else if (Buz1.BufferStatus2 == 0) {
 16446  0981  0008               	return
 16447  0982                     l98:	
 16448  0982  1A4C               	btfsc	_Buz1^(0+128),4
 16449  0983  0008               	return
 16450                           
 16451                           ;Buzzer_B1.c: 37: Buz1.BufferStatus2 = 1;
 16452  0984  164C               	bsf	_Buz1^(0+128),4
 16453                           
 16454                           ;Buzzer_B1.c: 38: Buz1.CountBuffer2 = count;
 16455  0985  0878               	movf	setBuz@count,w
 16456  0986  00F7               	movwf	??_setBuz
 16457  0987  0877               	movf	??_setBuz,w
 16458  0988  00D1               	movwf	(_Buz1^(0+128)+5)
 16459                           
 16460                           ;Buzzer_B1.c: 39: Buz1.TimeValueBuffer2 = time;
 16461  0989  0020               	movlb	0	; select bank0
 16462  098A  0825               	movf	setBuz@time+1,w
 16463  098B  0021               	movlb	1	; select bank1
 16464  098C  01D7               	clrf	((_Buz1+1)^(0+128)+10)
 16465  098D  07D7               	addwf	((_Buz1+1)^(0+128)+10),f
 16466  098E  0020               	movlb	0	; select bank0
 16467  098F  0824               	movf	setBuz@time,w
 16468  0990  0021               	movlb	1	; select bank1
 16469  0991  01D6               	clrf	(_Buz1^(0+128)+10)
 16470  0992  07D6               	addwf	(_Buz1^(0+128)+10),f
 16471  0993  0008               	return
 16472  0994                     __end_of_setBuz:	
 16473                           
 16474                           	psect	text115
 16475  0994                     __ptext115:	
 16476 ;; *************** function ___awdiv *****************
 16477 ;; Defined at:
 16478 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
 16479 ;; Parameters:    Size  Location     Type
 16480 ;;  divisor         2    2[COMMON] int 
 16481 ;;  dividend        2    4[COMMON] int 
 16482 ;; Auto vars:     Size  Location     Type
 16483 ;;  quotient        2    2[BANK0 ] int 
 16484 ;;  sign            1    1[BANK0 ] unsigned char 
 16485 ;;  counter         1    0[BANK0 ] unsigned char 
 16486 ;; Return value:  Size  Location     Type
 16487 ;;                  2    2[COMMON] int 
 16488 ;; Registers used:
 16489 ;;		wreg, status,2, status,0
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16499 ;;Total ram usage:        9 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:    3
 16502 ;; This function calls:
 16503 ;;		Nothing
 16504 ;; This function is called by:
 16505 ;;		_setBuz
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           
 16510                           ;psect for function ___awdiv
 16511  0994                     ___awdiv:	
 16512                           
 16513                           ;incstack = 0
 16514                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16515  0994  0020               	movlb	0	; select bank0
 16516  0995  01A1               	clrf	___awdiv@sign
 16517  0996  1FF3               	btfss	___awdiv@divisor+1,7
 16518  0997  299F               	goto	l8170
 16519  0998  09F2               	comf	___awdiv@divisor,f
 16520  0999  09F3               	comf	___awdiv@divisor+1,f
 16521  099A  0AF2               	incf	___awdiv@divisor,f
 16522  099B  1903               	skipnz
 16523  099C  0AF3               	incf	___awdiv@divisor+1,f
 16524  099D  01A1               	clrf	___awdiv@sign
 16525  099E  0AA1               	incf	___awdiv@sign,f
 16526  099F                     l8170:	
 16527  099F  1FF5               	btfss	___awdiv@dividend+1,7
 16528  09A0  29AA               	goto	l8176
 16529  09A1  09F4               	comf	___awdiv@dividend,f
 16530  09A2  09F5               	comf	___awdiv@dividend+1,f
 16531  09A3  0AF4               	incf	___awdiv@dividend,f
 16532  09A4  1903               	skipnz
 16533  09A5  0AF5               	incf	___awdiv@dividend+1,f
 16534  09A6  3001               	movlw	1
 16535  09A7  00F6               	movwf	??___awdiv
 16536  09A8  0876               	movf	??___awdiv,w
 16537  09A9  06A1               	xorwf	___awdiv@sign,f
 16538  09AA                     l8176:	
 16539  09AA  01A2               	clrf	___awdiv@quotient
 16540  09AB  01A3               	clrf	___awdiv@quotient+1
 16541  09AC  0873               	movf	___awdiv@divisor+1,w
 16542  09AD  0472               	iorwf	___awdiv@divisor,w
 16543  09AE  1903               	skipnz
 16544  09AF  29D9               	goto	l8198
 16545  09B0  01A0               	clrf	___awdiv@counter
 16546  09B1  0AA0               	incf	___awdiv@counter,f
 16547  09B2                     l8186:	
 16548  09B2  1BF3               	btfsc	___awdiv@divisor+1,7
 16549  09B3  29BE               	goto	l8188
 16550  09B4  3001               	movlw	1
 16551  09B5                     u8365:	
 16552  09B5  35F2               	lslf	___awdiv@divisor,f
 16553  09B6  0DF3               	rlf	___awdiv@divisor+1,f
 16554  09B7  0B89               	decfsz	9,f
 16555  09B8  29B5               	goto	u8365
 16556  09B9  3001               	movlw	1
 16557  09BA  00F6               	movwf	??___awdiv
 16558  09BB  0876               	movf	??___awdiv,w
 16559  09BC  07A0               	addwf	___awdiv@counter,f
 16560  09BD  29B2               	goto	l8186
 16561  09BE                     l8188:	
 16562  09BE  3001               	movlw	1
 16563  09BF                     u8385:	
 16564  09BF  35A2               	lslf	___awdiv@quotient,f
 16565  09C0  0DA3               	rlf	___awdiv@quotient+1,f
 16566  09C1  0B89               	decfsz	9,f
 16567  09C2  29BF               	goto	u8385
 16568  09C3  0873               	movf	___awdiv@divisor+1,w
 16569  09C4  0275               	subwf	___awdiv@dividend+1,w
 16570  09C5  1D03               	skipz
 16571  09C6  29C9               	goto	u8395
 16572  09C7  0872               	movf	___awdiv@divisor,w
 16573  09C8  0274               	subwf	___awdiv@dividend,w
 16574  09C9                     u8395:	
 16575  09C9  1C03               	skipc
 16576  09CA  29D0               	goto	l8194
 16577  09CB  0872               	movf	___awdiv@divisor,w
 16578  09CC  02F4               	subwf	___awdiv@dividend,f
 16579  09CD  0873               	movf	___awdiv@divisor+1,w
 16580  09CE  3BF5               	subwfb	___awdiv@dividend+1,f
 16581  09CF  1422               	bsf	___awdiv@quotient,0
 16582  09D0                     l8194:	
 16583  09D0  3001               	movlw	1
 16584  09D1                     u8405:	
 16585  09D1  36F3               	lsrf	___awdiv@divisor+1,f
 16586  09D2  0CF2               	rrf	___awdiv@divisor,f
 16587  09D3  0B89               	decfsz	9,f
 16588  09D4  29D1               	goto	u8405
 16589  09D5  3001               	movlw	1
 16590  09D6  02A0               	subwf	___awdiv@counter,f
 16591  09D7  1D03               	btfss	3,2
 16592  09D8  29BE               	goto	l8188
 16593  09D9                     l8198:	
 16594  09D9  0821               	movf	___awdiv@sign,w
 16595  09DA  1903               	btfsc	3,2
 16596  09DB  29E1               	goto	l8202
 16597  09DC  09A2               	comf	___awdiv@quotient,f
 16598  09DD  09A3               	comf	___awdiv@quotient+1,f
 16599  09DE  0AA2               	incf	___awdiv@quotient,f
 16600  09DF  1903               	skipnz
 16601  09E0  0AA3               	incf	___awdiv@quotient+1,f
 16602  09E1                     l8202:	
 16603  09E1  0823               	movf	___awdiv@quotient+1,w
 16604  09E2  01F3               	clrf	?___awdiv+1
 16605  09E3  07F3               	addwf	?___awdiv+1,f
 16606  09E4  0822               	movf	___awdiv@quotient,w
 16607  09E5  01F2               	clrf	?___awdiv
 16608  09E6  07F2               	addwf	?___awdiv,f
 16609  09E7  0008               	return
 16610  09E8                     __end_of___awdiv:	
 16611                           
 16612                           	psect	text116
 16613  1214                     __ptext116:	
 16614 ;; *************** function _getDimmerIntr_Dimming_Sw *****************
 16615 ;; Defined at:
 16616 ;;		line 269 in file "../src/Dimmer_B1.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  lights          1    wreg     unsigned char 
 16619 ;; Auto vars:     Size  Location     Type
 16620 ;;  lights          1    3[COMMON] unsigned char 
 16621 ;;  status          1    2[COMMON] unsigned char 
 16622 ;; Return value:  Size  Location     Type
 16623 ;;                  1    wreg      unsigned char 
 16624 ;; Registers used:
 16625 ;;		wreg, status,2
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;Total ram usage:        2 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:    3
 16638 ;; This function calls:
 16639 ;;		Nothing
 16640 ;; This function is called by:
 16641 ;;		_setDimmerLights_SwOn
 16642 ;;		_setRF_AdjControl
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           
 16647                           ;psect for function _getDimmerIntr_Dimming_Sw
 16648  1214                     _getDimmerIntr_Dimming_Sw:	
 16649                           
 16650                           ;incstack = 0
 16651                           ; Regs used in _getDimmerIntr_Dimming_Sw: [wreg+status,2]
 16652                           ;getDimmerIntr_Dimming_Sw@lights stored from wreg
 16653  1214  00F3               	movwf	getDimmerIntr_Dimming_Sw@lights
 16654                           
 16655                           ;Dimmer_B1.c: 270: char status = 0;
 16656  1215  01F2               	clrf	getDimmerIntr_Dimming_Sw@status
 16657                           
 16658                           ;Dimmer_B1.c: 272: if (lights == 1) {
 16659  1216  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 16660  1217  3A01               	xorlw	1
 16661  1218  1D03               	skipz
 16662  1219  2A1F               	goto	l9384
 16663                           
 16664                           ;Dimmer_B1.c: 273: status = DimmerIntr1.Dimming_Sw == 1 ? 1 : 0;
 16665  121A  3000               	movlw	0
 16666  121B  0021               	movlb	1	; select bank1
 16667  121C  1A20               	btfsc	_DimmerIntr1^(0+128),4
 16668  121D  3001               	movlw	1
 16669  121E  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 16670  121F                     l9384:	
 16671                           
 16672                           ;Dimmer_B1.c: 274: }
 16673                           ;Dimmer_B1.c: 277: if (lights == 2) {
 16674  121F  0873               	movf	getDimmerIntr_Dimming_Sw@lights,w
 16675  1220  3A02               	xorlw	2
 16676  1221  1D03               	skipz
 16677  1222  2A28               	goto	l9388
 16678                           
 16679                           ;Dimmer_B1.c: 278: status = DimmerIntr2.Dimming_Sw == 1 ? 1 : 0;
 16680  1223  3000               	movlw	0
 16681  1224  0022               	movlb	2	; select bank2
 16682  1225  1A3E               	btfsc	_DimmerIntr2^(0+256),4
 16683  1226  3001               	movlw	1
 16684  1227  00F2               	movwf	getDimmerIntr_Dimming_Sw@status
 16685  1228                     l9388:	
 16686                           
 16687                           ;Dimmer_B1.c: 279: }
 16688                           ;Dimmer_B1.c: 287: return status;
 16689  1228  0872               	movf	getDimmerIntr_Dimming_Sw@status,w
 16690  1229  0008               	return
 16691  122A                     __end_of_getDimmerIntr_Dimming_Sw:	
 16692                           
 16693                           	psect	text117
 16694  15CE                     __ptext117:	
 16695 ;; *************** function _setDimmerLights_SwOff *****************
 16696 ;; Defined at:
 16697 ;;		line 819 in file "../src/Dimmer_B1.c"
 16698 ;; Parameters:    Size  Location     Type
 16699 ;;  sw              1    wreg     unsigned char 
 16700 ;; Auto vars:     Size  Location     Type
 16701 ;;  sw              1    4[COMMON] unsigned char 
 16702 ;; Return value:  Size  Location     Type
 16703 ;;		None               void
 16704 ;; Registers used:
 16705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16706 ;; Tracked objects:
 16707 ;;		On entry : 0/0
 16708 ;;		On exit  : 0/0
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16715 ;;Total ram usage:        1 bytes
 16716 ;; Hardware stack levels used:    1
 16717 ;; Hardware stack levels required when called:    4
 16718 ;; This function calls:
 16719 ;;		_DimmerLights_SelectPointer
 16720 ;; This function is called by:
 16721 ;;		_DlyOff_Main
 16722 ;;		_setControl_Lights_Table
 16723 ;;		_setRFSW_Control
 16724 ;;		_setRFSW_AdjControl
 16725 ;;		_setSw_Main
 16726 ;; This function uses a non-reentrant model
 16727 ;;
 16728                           
 16729                           
 16730                           ;psect for function _setDimmerLights_SwOff
 16731  15CE                     _setDimmerLights_SwOff:	
 16732                           
 16733                           ;incstack = 0
 16734                           ; Regs used in _setDimmerLights_SwOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16735                           ;setDimmerLights_SwOff@sw stored from wreg
 16736  15CE  00F4               	movwf	setDimmerLights_SwOff@sw
 16737                           
 16738                           ;Dimmer_B1.c: 821: DimmerLights_SelectPointer(sw);
 16739  15CF  0874               	movf	setDimmerLights_SwOff@sw,w
 16740  15D0  3191  2181  3195   	fcall	_DimmerLights_SelectPointer
 16741                           
 16742                           ;Dimmer_B1.c: 823: if (DimmerLights->SwFlag == 1) {
 16743  15D3  0020               	movlb	0	; select bank0
 16744  15D4  086A               	movf	_DimmerLights,w
 16745  15D5  0086               	movwf	6
 16746  15D6  3001               	movlw	1	; select bank2/3
 16747  15D7  0087               	movwf	7
 16748  15D8  1C01               	btfss	1,0
 16749  15D9  0008               	return
 16750                           
 16751                           ;Dimmer_B1.c: 824: DimmerLights->SwFlag = 0;
 16752  15DA  086A               	movf	_DimmerLights,w
 16753  15DB  0086               	movwf	6
 16754  15DC  3001               	movlw	1	; select bank2/3
 16755  15DD  0087               	movwf	7
 16756  15DE  1001               	bcf	1,0
 16757                           
 16758                           ;Dimmer_B1.c: 825: if (DimmerLights->Status == 1) {
 16759  15DF  0A6A               	incf	_DimmerLights,w
 16760  15E0  0086               	movwf	6
 16761  15E1  3001               	movlw	1	; select bank2/3
 16762  15E2  0087               	movwf	7
 16763  15E3  1C01               	btfss	1,0
 16764  15E4  2DFB               	goto	l9662
 16765                           
 16766                           ;Dimmer_B1.c: 826: if (DimmerLights->DimmingSwFlag == 1) {
 16767  15E5  086A               	movf	_DimmerLights,w
 16768  15E6  0086               	movwf	6
 16769  15E7  3001               	movlw	1	; select bank2/3
 16770  15E8  0087               	movwf	7
 16771  15E9  1D81               	btfss	1,3
 16772  15EA  0008               	return
 16773                           
 16774                           ;Dimmer_B1.c: 827: DimmerLights->DimmingSwFlag = 0;
 16775  15EB  086A               	movf	_DimmerLights,w
 16776  15EC  0086               	movwf	6
 16777  15ED  3001               	movlw	1	; select bank2/3
 16778  15EE  0087               	movwf	7
 16779  15EF  1181               	bcf	1,3
 16780                           
 16781                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 1;
 16782  15F0  086A               	movf	_DimmerLights,w
 16783  15F1  0086               	movwf	6
 16784  15F2  3001               	movlw	1	; select bank2/3
 16785  15F3  0087               	movwf	7
 16786  15F4  1601               	bsf	1,4
 16787                           
 16788                           ;Dimmer_B1.c: 830: DimmerLights->DimmingSwitch = 0;
 16789  15F5  086A               	movf	_DimmerLights,w
 16790  15F6  0086               	movwf	6
 16791  15F7  3001               	movlw	1	; select bank2/3
 16792  15F8  0087               	movwf	7
 16793  15F9  1281               	bcf	1,5
 16794                           
 16795                           ;Dimmer_B1.c: 831: }
 16796                           ;Dimmer_B1.c: 832: } else {
 16797  15FA  0008               	return
 16798  15FB                     l9662:	
 16799                           
 16800                           ;Dimmer_B1.c: 835: DimmerLights->Trigger = 1;
 16801  15FB  086A               	movf	_DimmerLights,w
 16802  15FC  0086               	movwf	6
 16803  15FD  3001               	movlw	1	; select bank2/3
 16804  15FE  0087               	movwf	7
 16805  15FF  1481               	bsf	1,1
 16806                           
 16807                           ;Dimmer_B1.c: 836: DimmerLights->Switch = 0;
 16808  1600  086A               	movf	_DimmerLights,w
 16809  1601  0086               	movwf	6
 16810  1602  3001               	movlw	1	; select bank2/3
 16811  1603  0087               	movwf	7
 16812  1604  1101               	bcf	1,2
 16813  1605  0008               	return
 16814  1606                     __end_of_setDimmerLights_SwOff:	
 16815                           
 16816                           	psect	text118
 16817  1FB5                     __ptext118:	
 16818 ;; *************** function _getDimmerLights_Status *****************
 16819 ;; Defined at:
 16820 ;;		line 1266 in file "../src/Dimmer_B1.c"
 16821 ;; Parameters:    Size  Location     Type
 16822 ;;  lights          1    wreg     unsigned char 
 16823 ;; Auto vars:     Size  Location     Type
 16824 ;;  lights          1    4[COMMON] unsigned char 
 16825 ;;  status          1    5[COMMON] unsigned char 
 16826 ;; Return value:  Size  Location     Type
 16827 ;;                  1    wreg      unsigned char 
 16828 ;; Registers used:
 16829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16830 ;; Tracked objects:
 16831 ;;		On entry : 0/0
 16832 ;;		On exit  : 0/0
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16839 ;;Total ram usage:        2 bytes
 16840 ;; Hardware stack levels used:    1
 16841 ;; Hardware stack levels required when called:    4
 16842 ;; This function calls:
 16843 ;;		_DimmerLights_SelectPointer
 16844 ;; This function is called by:
 16845 ;;		_DlyOff_Main
 16846 ;;		_setControl_Lights_Table
 16847 ;;		_setRFSW_Control
 16848 ;;		_setRFSW_AdjControl
 16849 ;;		_setRF_AdjControl
 16850 ;;		_DimmerLights_AssignationDimming
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           
 16855                           ;psect for function _getDimmerLights_Status
 16856  1FB5                     _getDimmerLights_Status:	
 16857                           
 16858                           ;incstack = 0
 16859                           ; Regs used in _getDimmerLights_Status: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16860                           ;getDimmerLights_Status@lights stored from wreg
 16861  1FB5  00F4               	movwf	getDimmerLights_Status@lights
 16862                           
 16863                           ;Dimmer_B1.c: 1267: DimmerLights_SelectPointer(lights);
 16864  1FB6  0874               	movf	getDimmerLights_Status@lights,w
 16865  1FB7  3191  2181         	fcall	_DimmerLights_SelectPointer
 16866                           
 16867                           ;Dimmer_B1.c: 1268: char status = DimmerLights->Status == 1 ? 1 : 0;
 16868  1FB9  0020               	movlb	0	; select bank0
 16869  1FBA  0A6A               	incf	_DimmerLights,w
 16870  1FBB  0086               	movwf	6
 16871  1FBC  3001               	movlw	1	; select bank2/3
 16872  1FBD  0087               	movwf	7
 16873  1FBE  3000               	movlw	0
 16874  1FBF  1801               	btfsc	1,0
 16875  1FC0  3001               	movlw	1
 16876  1FC1  00F5               	movwf	getDimmerLights_Status@status
 16877                           
 16878                           ;Dimmer_B1.c: 1269: return status;
 16879  1FC2  0875               	movf	getDimmerLights_Status@status,w
 16880  1FC3  0008               	return
 16881  1FC4                     __end_of_getDimmerLights_Status:	
 16882                           
 16883                           	psect	text119
 16884  1181                     __ptext119:	
 16885 ;; *************** function _DimmerLights_SelectPointer *****************
 16886 ;; Defined at:
 16887 ;;		line 682 in file "../src/Dimmer_B1.c"
 16888 ;; Parameters:    Size  Location     Type
 16889 ;;  lights          1    wreg     unsigned char 
 16890 ;; Auto vars:     Size  Location     Type
 16891 ;;  lights          1    3[COMMON] unsigned char 
 16892 ;; Return value:  Size  Location     Type
 16893 ;;		None               void
 16894 ;; Registers used:
 16895 ;;		wreg
 16896 ;; Tracked objects:
 16897 ;;		On entry : 0/0
 16898 ;;		On exit  : 0/0
 16899 ;;		Unchanged: 0/0
 16900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16905 ;;Total ram usage:        2 bytes
 16906 ;; Hardware stack levels used:    1
 16907 ;; Hardware stack levels required when called:    3
 16908 ;; This function calls:
 16909 ;;		Nothing
 16910 ;; This function is called by:
 16911 ;;		_setDimmerLights_SwOn
 16912 ;;		_setDimmerLights_SwOff
 16913 ;;		_setDimmerLights_DimmingOn
 16914 ;;		_setDimmerLights_Main
 16915 ;;		_getDimmerLights_Status
 16916 ;;		_setDimmerLights_DimmingRun
 16917 ;;		_setRF_AdjControl
 16918 ;;		_DimmerLights_TwoPhase_Main
 16919 ;;		_setDimmerLights_Status
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           
 16924                           ;psect for function _DimmerLights_SelectPointer
 16925  1181                     _DimmerLights_SelectPointer:	
 16926                           
 16927                           ;incstack = 0
 16928                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
 16929                           ;DimmerLights_SelectPointer@lights stored from wreg
 16930  1181  00F3               	movwf	DimmerLights_SelectPointer@lights
 16931                           
 16932                           ;Dimmer_B1.c: 684: if (lights == 1) {
 16933  1182  0873               	movf	DimmerLights_SelectPointer@lights,w
 16934  1183  3A01               	xorlw	1
 16935  1184  1D03               	skipz
 16936  1185  298C               	goto	l9396
 16937                           
 16938                           ;Dimmer_B1.c: 685: DimmerLights = &DimmerLights1;
 16939  1186  3053               	movlw	_DimmerLights1& (0+255)
 16940  1187  00F2               	movwf	??_DimmerLights_SelectPointer
 16941  1188  0872               	movf	??_DimmerLights_SelectPointer,w
 16942  1189  0020               	movlb	0	; select bank0
 16943  118A  00EA               	movwf	_DimmerLights
 16944                           
 16945                           ;Dimmer_B1.c: 686: }
 16946  118B  0008               	return
 16947  118C                     l9396:	
 16948                           
 16949                           ;Dimmer_B1.c: 689: else if (lights == 2) {
 16950  118C  0873               	movf	DimmerLights_SelectPointer@lights,w
 16951  118D  3A02               	xorlw	2
 16952  118E  1D03               	skipz
 16953  118F  0008               	return
 16954                           
 16955                           ;Dimmer_B1.c: 690: DimmerLights = &DimmerLights2;
 16956  1190  305C               	movlw	_DimmerLights2& (0+255)
 16957  1191  00F2               	movwf	??_DimmerLights_SelectPointer
 16958  1192  0872               	movf	??_DimmerLights_SelectPointer,w
 16959  1193  0020               	movlb	0	; select bank0
 16960  1194  00EA               	movwf	_DimmerLights
 16961  1195  0008               	return
 16962  1196                     __end_of_DimmerLights_SelectPointer:	
 16963                           
 16964                           	psect	text120
 16965  1EEF                     __ptext120:	
 16966 ;; *************** function _DelayOff_Initialization *****************
 16967 ;; Defined at:
 16968 ;;		line 26 in file "../src/DelayOff_B1.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;		None
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;		None
 16973 ;; Return value:  Size  Location     Type
 16974 ;;		None               void
 16975 ;; Registers used:
 16976 ;;		wreg, status,2, status,0, pclath, cstack
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16986 ;;Total ram usage:        0 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; Hardware stack levels required when called:    5
 16989 ;; This function calls:
 16990 ;;		_DlyOff_Initialization
 16991 ;; This function is called by:
 16992 ;;		_main
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           
 16997                           ;psect for function _DelayOff_Initialization
 16998  1EEF                     _DelayOff_Initialization:	
 16999                           
 17000                           ;DelayOff_B1.c: 28: DlyOff_Initialization(1);
 17001                           
 17002                           ;incstack = 0
 17003                           ; Regs used in _DelayOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17004  1EEF  3001               	movlw	1
 17005  1EF0  319E  26C4  319E   	fcall	_DlyOff_Initialization
 17006                           
 17007                           ;DelayOff_B1.c: 32: DlyOff_Initialization(2);
 17008  1EF3  3002               	movlw	2
 17009  1EF4  319E  26C4         	fcall	_DlyOff_Initialization
 17010  1EF6  0008               	return
 17011  1EF7                     __end_of_DelayOff_Initialization:	
 17012                           
 17013                           	psect	text121
 17014  1EC4                     __ptext121:	
 17015 ;; *************** function _DlyOff_Initialization *****************
 17016 ;; Defined at:
 17017 ;;		line 56 in file "../src/DelayOff_B1.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  sw              1    wreg     unsigned char 
 17020 ;; Auto vars:     Size  Location     Type
 17021 ;;  sw              1    4[COMMON] unsigned char 
 17022 ;; Return value:  Size  Location     Type
 17023 ;;		None               void
 17024 ;; Registers used:
 17025 ;;		wreg, status,2, status,0, pclath, cstack
 17026 ;; Tracked objects:
 17027 ;;		On entry : 0/0
 17028 ;;		On exit  : 0/0
 17029 ;;		Unchanged: 0/0
 17030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17035 ;;Total ram usage:        1 bytes
 17036 ;; Hardware stack levels used:    1
 17037 ;; Hardware stack levels required when called:    4
 17038 ;; This function calls:
 17039 ;;		_DelayOffPointSelect
 17040 ;; This function is called by:
 17041 ;;		_DelayOff_Initialization
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           
 17046                           ;psect for function _DlyOff_Initialization
 17047  1EC4                     _DlyOff_Initialization:	
 17048                           
 17049                           ;incstack = 0
 17050                           ; Regs used in _DlyOff_Initialization: [wreg+status,2+status,0+pclath+cstack]
 17051                           ;DlyOff_Initialization@sw stored from wreg
 17052  1EC4  00F4               	movwf	DlyOff_Initialization@sw
 17053                           
 17054                           ;DelayOff_B1.c: 57: DelayOffPointSelect(sw);
 17055  1EC5  0874               	movf	DlyOff_Initialization@sw,w
 17056  1EC6  3191  216C         	fcall	_DelayOffPointSelect
 17057  1EC8  0008               	return
 17058  1EC9                     __end_of_DlyOff_Initialization:	
 17059                           
 17060                           	psect	text122
 17061  116C                     __ptext122:	
 17062 ;; *************** function _DelayOffPointSelect *****************
 17063 ;; Defined at:
 17064 ;;		line 7 in file "../src/DelayOff_B1.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;  sw              1    wreg     unsigned char 
 17067 ;; Auto vars:     Size  Location     Type
 17068 ;;  sw              1    3[COMMON] unsigned char 
 17069 ;; Return value:  Size  Location     Type
 17070 ;;		None               void
 17071 ;; Registers used:
 17072 ;;		wreg
 17073 ;; Tracked objects:
 17074 ;;		On entry : 0/0
 17075 ;;		On exit  : 0/0
 17076 ;;		Unchanged: 0/0
 17077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17082 ;;Total ram usage:        2 bytes
 17083 ;; Hardware stack levels used:    1
 17084 ;; Hardware stack levels required when called:    3
 17085 ;; This function calls:
 17086 ;;		Nothing
 17087 ;; This function is called by:
 17088 ;;		_DlyOff_Initialization
 17089 ;;		_DlyOff_Main
 17090 ;;		_setDelayOff_GO
 17091 ;;		_getDelayOff_GO
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           
 17096                           ;psect for function _DelayOffPointSelect
 17097  116C                     _DelayOffPointSelect:	
 17098                           
 17099                           ;incstack = 0
 17100                           ; Regs used in _DelayOffPointSelect: [wreg]
 17101                           ;DelayOffPointSelect@sw stored from wreg
 17102  116C  00F3               	movwf	DelayOffPointSelect@sw
 17103                           
 17104                           ;DelayOff_B1.c: 9: if (sw == 1) {
 17105  116D  0873               	movf	DelayOffPointSelect@sw,w
 17106  116E  3A01               	xorlw	1
 17107  116F  1D03               	skipz
 17108  1170  2977               	goto	l5758
 17109                           
 17110                           ;DelayOff_B1.c: 10: DelayOff = &DlySw1;
 17111  1171  3065               	movlw	_DlySw1& (0+255)
 17112  1172  00F2               	movwf	??_DelayOffPointSelect
 17113  1173  0872               	movf	??_DelayOffPointSelect,w
 17114  1174  0020               	movlb	0	; select bank0
 17115  1175  00E9               	movwf	_DelayOff
 17116                           
 17117                           ;DelayOff_B1.c: 11: }
 17118  1176  0008               	return
 17119  1177                     l5758:	
 17120                           
 17121                           ;DelayOff_B1.c: 14: else if (sw == 2) {
 17122  1177  0873               	movf	DelayOffPointSelect@sw,w
 17123  1178  3A02               	xorlw	2
 17124  1179  1D03               	skipz
 17125  117A  0008               	return
 17126                           
 17127                           ;DelayOff_B1.c: 15: DelayOff = &DlySw2;
 17128  117B  30E7               	movlw	_DlySw2& (0+255)
 17129  117C  00F2               	movwf	??_DelayOffPointSelect
 17130  117D  0872               	movf	??_DelayOffPointSelect,w
 17131  117E  0020               	movlb	0	; select bank0
 17132  117F  00E9               	movwf	_DelayOff
 17133  1180  0008               	return
 17134  1181                     __end_of_DelayOffPointSelect:	
 17135                           
 17136                           	psect	text123
 17137  0819                     __ptext123:	
 17138 ;; *************** function _Buzzer_Main *****************
 17139 ;; Defined at:
 17140 ;;		line 46 in file "../src/Buzzer_B1.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;		None
 17143 ;; Auto vars:     Size  Location     Type
 17144 ;;		None
 17145 ;; Return value:  Size  Location     Type
 17146 ;;		None               void
 17147 ;; Registers used:
 17148 ;;		wreg, status,2, status,0
 17149 ;; Tracked objects:
 17150 ;;		On entry : 0/0
 17151 ;;		On exit  : 0/0
 17152 ;;		Unchanged: 0/0
 17153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;Total ram usage:        1 bytes
 17159 ;; Hardware stack levels used:    1
 17160 ;; Hardware stack levels required when called:    3
 17161 ;; This function calls:
 17162 ;;		Nothing
 17163 ;; This function is called by:
 17164 ;;		_main
 17165 ;; This function uses a non-reentrant model
 17166 ;;
 17167                           
 17168                           
 17169                           ;psect for function _Buzzer_Main
 17170  0819                     _Buzzer_Main:	
 17171                           
 17172                           ;Buzzer_B1.c: 47: if (Buz1.GO == 1) {
 17173                           
 17174                           ;incstack = 0
 17175                           ; Regs used in _Buzzer_Main: [wreg+status,2+status,0]
 17176  0819  0021               	movlb	1	; select bank1
 17177  081A  1CCC               	btfss	_Buz1^(0+128),1
 17178  081B  0008               	return
 17179                           
 17180                           ;Buzzer_B1.c: 48: Buz1.Counter++;
 17181  081C  3001               	movlw	1
 17182  081D  07CD               	addwf	(_Buz1^(0+128)+1),f
 17183  081E  3000               	movlw	0
 17184  081F  3DCE               	addwfc	((_Buz1+1)^(0+128)+1),f
 17185                           
 17186                           ;Buzzer_B1.c: 49: if (Buz1.Counter >= Buz1.TimeValue) {
 17187  0820  0853               	movf	((_Buz1+1)^(0+128)+6),w
 17188  0821  024E               	subwf	((_Buz1+1)^(0+128)+1),w
 17189  0822  1D03               	skipz
 17190  0823  2826               	goto	u7645
 17191  0824  0852               	movf	(_Buz1^(0+128)+6),w
 17192  0825  024D               	subwf	(_Buz1^(0+128)+1),w
 17193  0826                     u7645:	
 17194  0826  1C03               	skipc
 17195  0827  0008               	return
 17196                           
 17197                           ;Buzzer_B1.c: 50: Buz1.Counter = 0;
 17198  0828  01CD               	clrf	(_Buz1^(0+128)+1)
 17199  0829  01CE               	clrf	((_Buz1+1)^(0+128)+1)
 17200                           
 17201                           ;Buzzer_B1.c: 51: Buz1.Switch = (RB3 == 1) ? 1 : 0;
 17202  082A  12CC               	bcf	_Buz1^(0+128),5
 17203  082B  0020               	movlb	0	; select bank0
 17204  082C  1D8D               	btfss	13,3	;volatile
 17205  082D  2830               	goto	l7664
 17206  082E  0021               	movlb	1	; select bank1
 17207  082F  16CC               	bsf	_Buz1^(0+128),5
 17208  0830                     l7664:	
 17209                           
 17210                           ;Buzzer_B1.c: 52: if (Buz1.Switch == 0) {
 17211  0830  0021               	movlb	1	; select bank1
 17212  0831  1ACC               	btfsc	_Buz1^(0+128),5
 17213  0832  2858               	goto	l106
 17214                           
 17215                           ;Buzzer_B1.c: 53: if (Buz1.Count == 0) {
 17216  0833  08CF               	movf	(_Buz1^(0+128)+3),f
 17217  0834  1D03               	skipz
 17218  0835  2854               	goto	l107
 17219                           
 17220                           ;Buzzer_B1.c: 54: if (Buz1.BufferStatus1 == 1) {
 17221  0836  1DCC               	btfss	_Buz1^(0+128),3
 17222  0837  2844               	goto	l108
 17223                           
 17224                           ;Buzzer_B1.c: 55: Buz1.BufferStatus1 = 0;
 17225  0838  11CC               	bcf	_Buz1^(0+128),3
 17226                           
 17227                           ;Buzzer_B1.c: 56: Buz1.Count = Buz1.CountBuffer1;
 17228  0839  0850               	movf	(_Buz1^(0+128)+4),w
 17229  083A  00F2               	movwf	??_Buzzer_Main
 17230  083B  0872               	movf	??_Buzzer_Main,w
 17231  083C  00CF               	movwf	(_Buz1^(0+128)+3)
 17232                           
 17233                           ;Buzzer_B1.c: 57: Buz1.TimeValue = Buz1.TimeValueBuffer1;
 17234  083D  0855               	movf	((_Buz1+1)^(0+128)+8),w
 17235  083E  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 17236  083F  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 17237  0840  0854               	movf	(_Buz1^(0+128)+8),w
 17238  0841  01D2               	clrf	(_Buz1^(0+128)+6)
 17239  0842  07D2               	addwf	(_Buz1^(0+128)+6),f
 17240                           
 17241                           ;Buzzer_B1.c: 58: } else if (Buz1.BufferStatus2 == 1) {
 17242  0843  0008               	return
 17243  0844                     l108:	
 17244  0844  1E4C               	btfss	_Buz1^(0+128),4
 17245  0845  2852               	goto	l110
 17246                           
 17247                           ;Buzzer_B1.c: 59: Buz1.BufferStatus2 = 0;
 17248  0846  124C               	bcf	_Buz1^(0+128),4
 17249                           
 17250                           ;Buzzer_B1.c: 60: Buz1.Count = Buz1.CountBuffer2;
 17251  0847  0851               	movf	(_Buz1^(0+128)+5),w
 17252  0848  00F2               	movwf	??_Buzzer_Main
 17253  0849  0872               	movf	??_Buzzer_Main,w
 17254  084A  00CF               	movwf	(_Buz1^(0+128)+3)
 17255                           
 17256                           ;Buzzer_B1.c: 61: Buz1.TimeValue = Buz1.TimeValueBuffer2;
 17257  084B  0857               	movf	((_Buz1+1)^(0+128)+10),w
 17258  084C  01D3               	clrf	((_Buz1+1)^(0+128)+6)
 17259  084D  07D3               	addwf	((_Buz1+1)^(0+128)+6),f
 17260  084E  0856               	movf	(_Buz1^(0+128)+10),w
 17261  084F  01D2               	clrf	(_Buz1^(0+128)+6)
 17262  0850  07D2               	addwf	(_Buz1^(0+128)+6),f
 17263                           
 17264                           ;Buzzer_B1.c: 62: } else {
 17265  0851  0008               	return
 17266  0852                     l110:	
 17267                           
 17268                           ;Buzzer_B1.c: 63: Buz1.GO = 0;
 17269  0852  10CC               	bcf	_Buz1^(0+128),1
 17270                           
 17271                           ;Buzzer_B1.c: 64: }
 17272                           ;Buzzer_B1.c: 65: } else {
 17273  0853  0008               	return
 17274  0854                     l107:	
 17275                           
 17276                           ;Buzzer_B1.c: 66: Buz1.Switch = 1;
 17277  0854  16CC               	bsf	_Buz1^(0+128),5
 17278                           
 17279                           ;Buzzer_B1.c: 68: RB3 = 1;
 17280  0855  0020               	movlb	0	; select bank0
 17281  0856  158D               	bsf	13,3	;volatile
 17282                           
 17283                           ;Buzzer_B1.c: 69: }
 17284                           ;Buzzer_B1.c: 70: } else {
 17285  0857  0008               	return
 17286  0858                     l106:	
 17287                           
 17288                           ;Buzzer_B1.c: 71: Buz1.Switch = 0;
 17289  0858  12CC               	bcf	_Buz1^(0+128),5
 17290                           
 17291                           ;Buzzer_B1.c: 73: RB3 = 0;
 17292  0859  0020               	movlb	0	; select bank0
 17293  085A  118D               	bcf	13,3	;volatile
 17294                           
 17295                           ;Buzzer_B1.c: 75: Buz1.Count--;
 17296  085B  3001               	movlw	1
 17297  085C  0021               	movlb	1	; select bank1
 17298  085D  02CF               	subwf	(_Buz1^(0+128)+3),f
 17299  085E  0008               	return
 17300  085F                     __end_of_Buzzer_Main:	
 17301                           
 17302                           	psect	text124
 17303  1EA8                     __ptext124:	
 17304 ;; *************** function _Buzzer_Initialization *****************
 17305 ;; Defined at:
 17306 ;;		line 11 in file "../src/Buzzer_B1.c"
 17307 ;; Parameters:    Size  Location     Type
 17308 ;;		None
 17309 ;; Auto vars:     Size  Location     Type
 17310 ;;		None
 17311 ;; Return value:  Size  Location     Type
 17312 ;;		None               void
 17313 ;; Registers used:
 17314 ;;		None
 17315 ;; Tracked objects:
 17316 ;;		On entry : 0/0
 17317 ;;		On exit  : 0/0
 17318 ;;		Unchanged: 0/0
 17319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17324 ;;Total ram usage:        0 bytes
 17325 ;; Hardware stack levels used:    1
 17326 ;; Hardware stack levels required when called:    3
 17327 ;; This function calls:
 17328 ;;		Nothing
 17329 ;; This function is called by:
 17330 ;;		_main
 17331 ;; This function uses a non-reentrant model
 17332 ;;
 17333                           
 17334                           
 17335                           ;psect for function _Buzzer_Initialization
 17336  1EA8                     _Buzzer_Initialization:	
 17337                           
 17338                           ;Buzzer_B1.c: 13: Buz1.Enable = 1;
 17339                           
 17340                           ;incstack = 0
 17341                           ; Regs used in _Buzzer_Initialization: []
 17342  1EA8  0021               	movlb	1	; select bank1
 17343  1EA9  144C               	bsf	_Buz1^(0+128),0
 17344  1EAA  0008               	return
 17345  1EAB                     __end_of_Buzzer_Initialization:	
 17346                           
 17347                           	psect	intentry
 17348  0004                     __pintentry:	
 17349 ;; *************** function _ISR *****************
 17350 ;; Defined at:
 17351 ;;		line 116 in file "../src/MCU_B1.c"
 17352 ;; Parameters:    Size  Location     Type
 17353 ;;		None
 17354 ;; Auto vars:     Size  Location     Type
 17355 ;;		None
 17356 ;; Return value:  Size  Location     Type
 17357 ;;		None               void
 17358 ;; Registers used:
 17359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17360 ;; Tracked objects:
 17361 ;;		On entry : 0/0
 17362 ;;		On exit  : 0/0
 17363 ;;		Unchanged: 0/0
 17364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17369 ;;Total ram usage:        1 bytes
 17370 ;; Hardware stack levels used:    1
 17371 ;; Hardware stack levels required when called:    2
 17372 ;; This function calls:
 17373 ;;		_IOC_ISR
 17374 ;;		_TMR1_ISR
 17375 ;; This function is called by:
 17376 ;;		Interrupt level 1
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380  0004                     _ISR:	
 17381                           
 17382                           ;incstack = 0
 17383                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17384  0004  147E               	bsf	126,0	;set compiler interrupt flag
 17385  0005  3180               	pagesel	$
 17386  0006  0020               	movlb	0	; select bank0
 17387  0007  087F               	movf	127,w
 17388  0008  00F1               	movwf	??_ISR
 17389                           
 17390                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
 17391  0009  0021               	movlb	1	; select bank1
 17392  000A  1C11               	btfss	17,0	;volatile
 17393  000B  2812               	goto	i1l8072
 17394  000C  0020               	movlb	0	; select bank0
 17395  000D  1C11               	btfss	17,0	;volatile
 17396  000E  2812               	goto	i1l8072
 17397                           
 17398                           ;MCU_B1.c: 126: TMR1_ISR();
 17399  000F  3193  23A1  3180   	fcall	_TMR1_ISR
 17400  0012                     i1l8072:	
 17401                           
 17402                           ;MCU_B1.c: 127: }
 17403                           ;MCU_B1.c: 138: if (IOCIE == 1 && IOCIF == 1 && IOCBF2 == 1) {
 17404  0012  198B               	btfsc	11,3	;volatile
 17405  0013  1C0B               	btfss	11,0	;volatile
 17406  0014  281A               	goto	i1l1402
 17407  0015  0027               	movlb	7	; select bank7
 17408  0016  1D16               	btfss	22,2	;volatile
 17409  0017  281A               	goto	i1l1402
 17410                           
 17411                           ;MCU_B1.c: 139: IOC_ISR();
 17412  0018  319F  276D         	fcall	_IOC_ISR
 17413  001A                     i1l1402:	
 17414                           ;MCU_B1.c: 140: }
 17415                           ;MCU_B1.c: 148: return;
 17416                           
 17417  001A  0871               	movf	??_ISR,w
 17418  001B  0020               	movlb	0	; select bank0
 17419  001C  00FF               	movwf	127
 17420  001D  107E               	bcf	126,0	;clear compiler interrupt flag
 17421  001E  0009               	retfie
 17422  001F                     __end_of_ISR:	
 17423                           
 17424                           	psect	text126
 17425  13A1                     __ptext126:	
 17426 ;; *************** function _TMR1_ISR *****************
 17427 ;; Defined at:
 17428 ;;		line 236 in file "../src/MCU_B1.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;		None               void
 17435 ;; Registers used:
 17436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;Total ram usage:        0 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    1
 17449 ;; This function calls:
 17450 ;;		_DimmerLights_TMR_1
 17451 ;;		_DimmerLights_TMR_2
 17452 ;; This function is called by:
 17453 ;;		_ISR
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           
 17458                           ;psect for function _TMR1_ISR
 17459  13A1                     _TMR1_ISR:	
 17460                           
 17461                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
 17462                           
 17463                           ;incstack = 0
 17464                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17465  13A1  3192  22BB  3193   	fcall	_DimmerLights_TMR_1
 17466                           
 17467                           ;MCU_B1.c: 259: DimmerLights_TMR_2();
 17468  13A4  3192  22D5  3193   	fcall	_DimmerLights_TMR_2
 17469                           
 17470                           ;MCU_B1.c: 269: Timer1.Count++;
 17471  13A7  3001               	movlw	1
 17472  13A8  0021               	movlb	1	; select bank1
 17473  13A9  07D9               	addwf	(_Timer1^(0+128)+1),f
 17474  13AA  3000               	movlw	0
 17475  13AB  3DDA               	addwfc	((_Timer1+1)^(0+128)+1),f
 17476                           
 17477                           ;MCU_B1.c: 270: if (Timer1.Count == (int)(20*10)) {
 17478  13AC  3001               	movlw	1
 17479  13AD  3ED8               	addlw	_Timer1& (0+255)
 17480  13AE  0086               	movwf	6
 17481  13AF  0187               	clrf	7
 17482  13B0  3F40               	moviw [0]fsr1
 17483  13B1  3AC8               	xorlw	200
 17484  13B2  1D03               	skipz
 17485  13B3  2BB6               	goto	u770_25
 17486  13B4  3F41               	moviw [1]fsr1
 17487  13B5  3A00               	xorlw	0
 17488  13B6                     u770_25:	
 17489  13B6  1D03               	skipz
 17490  13B7  2BBB               	goto	i1l7714
 17491                           
 17492                           ;MCU_B1.c: 271: Timer1.Count = 0;
 17493  13B8  01D9               	clrf	(_Timer1^(0+128)+1)
 17494  13B9  01DA               	clrf	((_Timer1+1)^(0+128)+1)
 17495                           
 17496                           ;MCU_B1.c: 272: Timer1.Timeout = 1;
 17497  13BA  1458               	bsf	_Timer1^(0+128),0
 17498  13BB                     i1l7714:	
 17499                           
 17500                           ;MCU_B1.c: 273: }
 17501                           ;MCU_B1.c: 275: TMR1H = (int)((65536-1480)/256);
 17502  13BB  30FA               	movlw	250
 17503  13BC  0020               	movlb	0	; select bank0
 17504  13BD  0097               	movwf	23	;volatile
 17505                           
 17506                           ;MCU_B1.c: 276: TMR1L = (int)((65536-1480)%256);
 17507  13BE  3038               	movlw	56
 17508  13BF  0096               	movwf	22	;volatile
 17509                           
 17510                           ;MCU_B1.c: 277: TMR1IF = 0;
 17511  13C0  1011               	bcf	17,0	;volatile
 17512  13C1  0008               	return
 17513  13C2                     __end_of_TMR1_ISR:	
 17514                           
 17515                           	psect	text127
 17516  12D5                     __ptext127:	
 17517 ;; *************** function _DimmerLights_TMR_2 *****************
 17518 ;; Defined at:
 17519 ;;		line 1643 in file "../src/Dimmer_B1.c"
 17520 ;; Parameters:    Size  Location     Type
 17521 ;;		None
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;		None
 17524 ;; Return value:  Size  Location     Type
 17525 ;;		None               void
 17526 ;; Registers used:
 17527 ;;		wreg, status,2, status,0
 17528 ;; Tracked objects:
 17529 ;;		On entry : 0/0
 17530 ;;		On exit  : 0/0
 17531 ;;		Unchanged: 0/0
 17532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17537 ;;Total ram usage:        1 bytes
 17538 ;; Hardware stack levels used:    1
 17539 ;; This function calls:
 17540 ;;		Nothing
 17541 ;; This function is called by:
 17542 ;;		_TMR1_ISR
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           
 17547                           ;psect for function _DimmerLights_TMR_2
 17548  12D5                     _DimmerLights_TMR_2:	
 17549                           
 17550                           ;Dimmer_B1.c: 1644: if (DimmerIntr2.GO == 1) {
 17551                           
 17552                           ;incstack = 0
 17553                           ; Regs used in _DimmerLights_TMR_2: [wreg+status,2+status,0]
 17554  12D5  0022               	movlb	2	; select bank2
 17555  12D6  1C3E               	btfss	_DimmerIntr2^(0+256),0
 17556  12D7  0008               	return
 17557                           
 17558                           ;Dimmer_B1.c: 1645: DimmerIntr2.Count++;
 17559  12D8  3001               	movlw	1
 17560  12D9  00F0               	movwf	??_DimmerLights_TMR_2
 17561  12DA  0870               	movf	??_DimmerLights_TMR_2,w
 17562  12DB  07C0               	addwf	(_DimmerIntr2^(0+256)+2),f
 17563                           
 17564                           ;Dimmer_B1.c: 1648: if (DimmerIntr2.Count == DimmerIntr2.TuneValue2_Value) {
 17565  12DC  0840               	movf	(_DimmerIntr2^(0+256)+2),w
 17566  12DD  064A               	xorwf	(_DimmerIntr2^(0+256)+12),w
 17567  12DE  1903               	btfsc	3,2
 17568                           
 17569                           ;Dimmer_B1.c: 1649: if (DimmerIntr2.ControlStatus == 1) {
 17570  12DF  1DBE               	btfss	_DimmerIntr2^(0+256),3
 17571  12E0  2AE3               	goto	i1l7338
 17572                           
 17573                           ;Dimmer_B1.c: 1650: RB4 = 1;
 17574  12E1  0020               	movlb	0	; select bank0
 17575  12E2  160D               	bsf	13,4	;volatile
 17576  12E3                     i1l7338:	
 17577                           
 17578                           ;Dimmer_B1.c: 1651: }
 17579                           ;Dimmer_B1.c: 1652: }
 17580                           ;Dimmer_B1.c: 1654: if (DimmerIntr2.Count == 60) {
 17581  12E3  0022               	movlb	2	; select bank2
 17582  12E4  0840               	movf	(_DimmerIntr2^(0+256)+2),w
 17583  12E5  3A3C               	xorlw	60
 17584  12E6  1D03               	skipz
 17585  12E7  0008               	return
 17586                           
 17587                           ;Dimmer_B1.c: 1655: DimmerIntr2.GO = 0;
 17588  12E8  103E               	bcf	_DimmerIntr2^(0+256),0
 17589                           
 17590                           ;Dimmer_B1.c: 1656: DimmerIntr2.Count = 0;
 17591  12E9  01C0               	clrf	(_DimmerIntr2^(0+256)+2)
 17592                           
 17593                           ;Dimmer_B1.c: 1659: if (DimmerIntr2.ControlStatus == 1) {
 17594  12EA  1DBE               	btfss	_DimmerIntr2^(0+256),3
 17595  12EB  0008               	return
 17596                           
 17597                           ;Dimmer_B1.c: 1660: RB4 = 0;
 17598  12EC  0020               	movlb	0	; select bank0
 17599  12ED  120D               	bcf	13,4	;volatile
 17600  12EE  0008               	return
 17601  12EF                     __end_of_DimmerLights_TMR_2:	
 17602                           
 17603                           	psect	text128
 17604  12BB                     __ptext128:	
 17605 ;; *************** function _DimmerLights_TMR_1 *****************
 17606 ;; Defined at:
 17607 ;;		line 1522 in file "../src/Dimmer_B1.c"
 17608 ;; Parameters:    Size  Location     Type
 17609 ;;		None
 17610 ;; Auto vars:     Size  Location     Type
 17611 ;;		None
 17612 ;; Return value:  Size  Location     Type
 17613 ;;		None               void
 17614 ;; Registers used:
 17615 ;;		wreg, status,2, status,0
 17616 ;; Tracked objects:
 17617 ;;		On entry : 0/0
 17618 ;;		On exit  : 0/0
 17619 ;;		Unchanged: 0/0
 17620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17625 ;;Total ram usage:        1 bytes
 17626 ;; Hardware stack levels used:    1
 17627 ;; This function calls:
 17628 ;;		Nothing
 17629 ;; This function is called by:
 17630 ;;		_TMR1_ISR
 17631 ;; This function uses a non-reentrant model
 17632 ;;
 17633                           
 17634                           
 17635                           ;psect for function _DimmerLights_TMR_1
 17636  12BB                     _DimmerLights_TMR_1:	
 17637                           
 17638                           ;Dimmer_B1.c: 1523: if (DimmerIntr1.GO == 1) {
 17639                           
 17640                           ;incstack = 0
 17641                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
 17642  12BB  0021               	movlb	1	; select bank1
 17643  12BC  1C20               	btfss	_DimmerIntr1^(0+128),0
 17644  12BD  0008               	return
 17645                           
 17646                           ;Dimmer_B1.c: 1524: DimmerIntr1.Count++;
 17647  12BE  3001               	movlw	1
 17648  12BF  00F0               	movwf	??_DimmerLights_TMR_1
 17649  12C0  0870               	movf	??_DimmerLights_TMR_1,w
 17650  12C1  07A2               	addwf	(_DimmerIntr1^(0+128)+2),f
 17651                           
 17652                           ;Dimmer_B1.c: 1527: if (DimmerIntr1.Count == DimmerIntr1.TuneValue2_Value) {
 17653  12C2  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 17654  12C3  062C               	xorwf	(_DimmerIntr1^(0+128)+12),w
 17655  12C4  1903               	btfsc	3,2
 17656                           
 17657                           ;Dimmer_B1.c: 1528: if (DimmerIntr1.ControlStatus == 1) {
 17658  12C5  1DA0               	btfss	_DimmerIntr1^(0+128),3
 17659  12C6  2AC9               	goto	i1l7302
 17660                           
 17661                           ;Dimmer_B1.c: 1529: RA7 = 1;
 17662  12C7  0020               	movlb	0	; select bank0
 17663  12C8  178C               	bsf	12,7	;volatile
 17664  12C9                     i1l7302:	
 17665                           
 17666                           ;Dimmer_B1.c: 1530: }
 17667                           ;Dimmer_B1.c: 1531: }
 17668                           ;Dimmer_B1.c: 1533: if (DimmerIntr1.Count == 60) {
 17669  12C9  0021               	movlb	1	; select bank1
 17670  12CA  0822               	movf	(_DimmerIntr1^(0+128)+2),w
 17671  12CB  3A3C               	xorlw	60
 17672  12CC  1D03               	skipz
 17673  12CD  0008               	return
 17674                           
 17675                           ;Dimmer_B1.c: 1534: DimmerIntr1.GO = 0;
 17676  12CE  1020               	bcf	_DimmerIntr1^(0+128),0
 17677                           
 17678                           ;Dimmer_B1.c: 1535: DimmerIntr1.Count = 0;
 17679  12CF  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 17680                           
 17681                           ;Dimmer_B1.c: 1537: if (DimmerIntr1.ControlStatus == 1) {
 17682  12D0  1DA0               	btfss	_DimmerIntr1^(0+128),3
 17683  12D1  0008               	return
 17684                           
 17685                           ;Dimmer_B1.c: 1538: RA7 = 0;
 17686  12D2  0020               	movlb	0	; select bank0
 17687  12D3  138C               	bcf	12,7	;volatile
 17688  12D4  0008               	return
 17689  12D5                     __end_of_DimmerLights_TMR_1:	
 17690                           
 17691                           	psect	text129
 17692  1F6D                     __ptext129:	
 17693 ;; *************** function _IOC_ISR *****************
 17694 ;; Defined at:
 17695 ;;		line 396 in file "../src/MCU_B1.c"
 17696 ;; Parameters:    Size  Location     Type
 17697 ;;		None
 17698 ;; Auto vars:     Size  Location     Type
 17699 ;;		None
 17700 ;; Return value:  Size  Location     Type
 17701 ;;		None               void
 17702 ;; Registers used:
 17703 ;;		wreg, status,2, status,0, pclath, cstack
 17704 ;; Tracked objects:
 17705 ;;		On entry : 0/0
 17706 ;;		On exit  : 0/0
 17707 ;;		Unchanged: 0/0
 17708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17713 ;;Total ram usage:        0 bytes
 17714 ;; Hardware stack levels used:    1
 17715 ;; Hardware stack levels required when called:    1
 17716 ;; This function calls:
 17717 ;;		_DimmerLights_IOC_1
 17718 ;;		_DimmerLights_IOC_2
 17719 ;; This function is called by:
 17720 ;;		_ISR
 17721 ;; This function uses a non-reentrant model
 17722 ;;
 17723                           
 17724                           
 17725                           ;psect for function _IOC_ISR
 17726  1F6D                     _IOC_ISR:	
 17727                           
 17728                           ;MCU_B1.c: 398: if (myMain.PowerON == 1) {
 17729                           
 17730                           ;incstack = 0
 17731                           ; Regs used in _IOC_ISR: [wreg+status,2+status,0+pclath+cstack]
 17732  1F6D  0021               	movlb	1	; select bank1
 17733  1F6E  1C3F               	btfss	_myMain^(0+128),0
 17734  1F6F  2F75               	goto	i1l7724
 17735                           
 17736                           ;MCU_B1.c: 404: DimmerLights_IOC_1();
 17737  1F70  3192  2287  319F   	fcall	_DimmerLights_IOC_1
 17738                           
 17739                           ;MCU_B1.c: 409: DimmerLights_IOC_2();
 17740  1F73  3192  22A1         	fcall	_DimmerLights_IOC_2
 17741  1F75                     i1l7724:	
 17742                           
 17743                           ;MCU_B1.c: 418: }
 17744                           ;MCU_B1.c: 420: IOCBF2 = 0;
 17745  1F75  0027               	movlb	7	; select bank7
 17746  1F76  1116               	bcf	22,2	;volatile
 17747                           
 17748                           ;MCU_B1.c: 421: IOCIF = 0;
 17749  1F77  100B               	bcf	11,0	;volatile
 17750  1F78  0008               	return
 17751  1F79                     __end_of_IOC_ISR:	
 17752                           
 17753                           	psect	text130
 17754  12A1                     __ptext130:	
 17755 ;; *************** function _DimmerLights_IOC_2 *****************
 17756 ;; Defined at:
 17757 ;;		line 1606 in file "../src/Dimmer_B1.c"
 17758 ;; Parameters:    Size  Location     Type
 17759 ;;		None
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;		None
 17762 ;; Return value:  Size  Location     Type
 17763 ;;		None               void
 17764 ;; Registers used:
 17765 ;;		wreg, status,2
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17774 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17775 ;;Total ram usage:        1 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; This function calls:
 17778 ;;		Nothing
 17779 ;; This function is called by:
 17780 ;;		_IOC_ISR
 17781 ;; This function uses a non-reentrant model
 17782 ;;
 17783                           
 17784                           
 17785                           ;psect for function _DimmerLights_IOC_2
 17786  12A1                     _DimmerLights_IOC_2:	
 17787                           
 17788                           ;Dimmer_B1.c: 1609: if (DimmerIntr2.GO == 0) {
 17789                           
 17790                           ;incstack = 0
 17791                           ; Regs used in _DimmerLights_IOC_2: [wreg+status,2]
 17792  12A1  0022               	movlb	2	; select bank2
 17793  12A2  183E               	btfsc	_DimmerIntr2^(0+256),0
 17794  12A3  0008               	return
 17795                           
 17796                           ;Dimmer_B1.c: 1613: DimmerIntr2.Count = 0;
 17797  12A4  01C0               	clrf	(_DimmerIntr2^(0+256)+2)
 17798                           
 17799                           ;Dimmer_B1.c: 1614: DimmerIntr2.GO = 1;
 17800  12A5  143E               	bsf	_DimmerIntr2^(0+256),0
 17801                           
 17802                           ;Dimmer_B1.c: 1616: if (DimmerIntr2.Dimming_Sw == 1 || DimmerIntr2.Dimming_RF == 1) {
 17803  12A6  1E3E               	btfss	_DimmerIntr2^(0+256),4
 17804  12A7  1B3E               	btfsc	_DimmerIntr2^(0+256),6
 17805                           
 17806                           ;Dimmer_B1.c: 1617: DimmerIntr2.Tune = 1;
 17807  12A8  14BE               	bsf	_DimmerIntr2^(0+256),1
 17808                           
 17809                           ;Dimmer_B1.c: 1618: }
 17810                           ;Dimmer_B1.c: 1620: if (DimmerIntr2.Calculate == 1) {
 17811  12A9  1FBF               	btfss	(_DimmerIntr2^(0+256)+1),7
 17812  12AA  2AB4               	goto	i1l7326
 17813                           
 17814                           ;Dimmer_B1.c: 1621: DimmerIntr2.Calculate = 0;
 17815  12AB  13BF               	bcf	(_DimmerIntr2^(0+256)+1),7
 17816                           
 17817                           ;Dimmer_B1.c: 1622: DimmerIntr2.TuneEnd_Value = DimmerIntr2.TuneEnd;
 17818  12AC  0849               	movf	(_DimmerIntr2^(0+256)+11),w
 17819  12AD  00F0               	movwf	??_DimmerLights_IOC_2
 17820  12AE  0870               	movf	??_DimmerLights_IOC_2,w
 17821  12AF  00CD               	movwf	(_DimmerIntr2^(0+256)+15)
 17822                           
 17823                           ;Dimmer_B1.c: 1623: DimmerIntr2.TuneValue2_Value = DimmerIntr2.TuneValue2;
 17824  12B0  0846               	movf	(_DimmerIntr2^(0+256)+8),w
 17825  12B1  00F0               	movwf	??_DimmerLights_IOC_2
 17826  12B2  0870               	movf	??_DimmerLights_IOC_2,w
 17827  12B3  00CA               	movwf	(_DimmerIntr2^(0+256)+12)
 17828  12B4                     i1l7326:	
 17829                           
 17830                           ;Dimmer_B1.c: 1624: }
 17831                           ;Dimmer_B1.c: 1633: DimmerIntr2.Status = RB2 == 1 ? 1 : 0;
 17832  12B4  12BF               	bcf	(_DimmerIntr2^(0+256)+1),5
 17833  12B5  0020               	movlb	0	; select bank0
 17834  12B6  1D0D               	btfss	13,2	;volatile
 17835  12B7  0008               	return
 17836  12B8  0022               	movlb	2	; select bank2
 17837  12B9  16BF               	bsf	(_DimmerIntr2^(0+256)+1),5
 17838  12BA  0008               	return
 17839  12BB                     __end_of_DimmerLights_IOC_2:	
 17840                           
 17841                           	psect	text131
 17842  1287                     __ptext131:	
 17843 ;; *************** function _DimmerLights_IOC_1 *****************
 17844 ;; Defined at:
 17845 ;;		line 1463 in file "../src/Dimmer_B1.c"
 17846 ;; Parameters:    Size  Location     Type
 17847 ;;		None
 17848 ;; Auto vars:     Size  Location     Type
 17849 ;;		None
 17850 ;; Return value:  Size  Location     Type
 17851 ;;		None               void
 17852 ;; Registers used:
 17853 ;;		wreg, status,2
 17854 ;; Tracked objects:
 17855 ;;		On entry : 0/0
 17856 ;;		On exit  : 0/0
 17857 ;;		Unchanged: 0/0
 17858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17863 ;;Total ram usage:        1 bytes
 17864 ;; Hardware stack levels used:    1
 17865 ;; This function calls:
 17866 ;;		Nothing
 17867 ;; This function is called by:
 17868 ;;		_IOC_ISR
 17869 ;; This function uses a non-reentrant model
 17870 ;;
 17871                           
 17872                           
 17873                           ;psect for function _DimmerLights_IOC_1
 17874  1287                     _DimmerLights_IOC_1:	
 17875                           
 17876                           ;Dimmer_B1.c: 1482: if (DimmerIntr1.GO == 0) {
 17877                           
 17878                           ;incstack = 0
 17879                           ; Regs used in _DimmerLights_IOC_1: [wreg+status,2]
 17880  1287  0021               	movlb	1	; select bank1
 17881  1288  1820               	btfsc	_DimmerIntr1^(0+128),0
 17882  1289  0008               	return
 17883                           
 17884                           ;Dimmer_B1.c: 1486: DimmerIntr1.Count = 0;
 17885  128A  01A2               	clrf	(_DimmerIntr1^(0+128)+2)
 17886                           
 17887                           ;Dimmer_B1.c: 1487: DimmerIntr1.GO = 1;
 17888  128B  1420               	bsf	_DimmerIntr1^(0+128),0
 17889                           
 17890                           ;Dimmer_B1.c: 1489: if (DimmerIntr1.Dimming_Sw == 1 || DimmerIntr1.Dimming_RF == 1) {
 17891  128C  1E20               	btfss	_DimmerIntr1^(0+128),4
 17892  128D  1B20               	btfsc	_DimmerIntr1^(0+128),6
 17893                           
 17894                           ;Dimmer_B1.c: 1490: DimmerIntr1.Tune = 1;
 17895  128E  14A0               	bsf	_DimmerIntr1^(0+128),1
 17896                           
 17897                           ;Dimmer_B1.c: 1491: }
 17898                           ;Dimmer_B1.c: 1493: if (DimmerIntr1.Calculate == 1) {
 17899  128F  1FA1               	btfss	(_DimmerIntr1^(0+128)+1),7
 17900  1290  2A9A               	goto	i1l7290
 17901                           
 17902                           ;Dimmer_B1.c: 1494: DimmerIntr1.Calculate = 0;
 17903  1291  13A1               	bcf	(_DimmerIntr1^(0+128)+1),7
 17904                           
 17905                           ;Dimmer_B1.c: 1495: DimmerIntr1.TuneEnd_Value = DimmerIntr1.TuneEnd;
 17906  1292  082B               	movf	(_DimmerIntr1^(0+128)+11),w
 17907  1293  00F0               	movwf	??_DimmerLights_IOC_1
 17908  1294  0870               	movf	??_DimmerLights_IOC_1,w
 17909  1295  00AF               	movwf	(_DimmerIntr1^(0+128)+15)
 17910                           
 17911                           ;Dimmer_B1.c: 1496: DimmerIntr1.TuneValue2_Value = DimmerIntr1.TuneValue2;
 17912  1296  0828               	movf	(_DimmerIntr1^(0+128)+8),w
 17913  1297  00F0               	movwf	??_DimmerLights_IOC_1
 17914  1298  0870               	movf	??_DimmerLights_IOC_1,w
 17915  1299  00AC               	movwf	(_DimmerIntr1^(0+128)+12)
 17916  129A                     i1l7290:	
 17917                           
 17918                           ;Dimmer_B1.c: 1497: }
 17919                           ;Dimmer_B1.c: 1506: DimmerIntr1.Status = RB2 == 1 ? 1 : 0;
 17920  129A  12A1               	bcf	(_DimmerIntr1^(0+128)+1),5
 17921  129B  0020               	movlb	0	; select bank0
 17922  129C  1D0D               	btfss	13,2	;volatile
 17923  129D  0008               	return
 17924  129E  0021               	movlb	1	; select bank1
 17925  129F  16A1               	bsf	(_DimmerIntr1^(0+128)+1),5
 17926  12A0  0008               	return
 17927  12A1                     __end_of_DimmerLights_IOC_1:	
 17928  007E                     btemp	set	126	;btemp
 17929  007E                     pic14e$flags	set	126
 17930  007E                     wtemp	set	126
 17931  007E                     wtemp0	set	126
 17932  0080                     wtemp1	set	128
 17933  0082                     wtemp2	set	130
 17934  0084                     wtemp3	set	132
 17935  0086                     wtemp4	set	134
 17936  0088                     wtemp5	set	136
 17937  007F                     wtemp6	set	127
 17938  007E                     ttemp	set	126
 17939  007E                     ttemp0	set	126
 17940  0081                     ttemp1	set	129
 17941  0084                     ttemp2	set	132
 17942  0087                     ttemp3	set	135
 17943  007F                     ttemp4	set	127
 17944  007E                     ltemp	set	126
 17945  007E                     ltemp0	set	126
 17946  0082                     ltemp1	set	130
 17947  0086                     ltemp2	set	134
 17948  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    102
    Data        32
    BSS         242
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     72      79
    BANK1            80      0      80
    BANK2            80      0      78
    BANK3            80      4      80
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw2(BANK3[9]), Sw1(BANK3[9]), 

    LED	PTR struct LED size(2) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK2[4]), VarLED1(BANK1[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 9
		 -> NULL(NULL[0]), DimmerLights2(BANK2[9]), DimmerLights1(BANK2[9]), 

    product	PTR struct Product size(1) Largest target is 32
		 -> NULL(NULL[0]), _product(BANK4[32]), 

    DelayOff	PTR struct DelayOff size(1) Largest target is 5
		 -> NULL(NULL[0]), DlySw2(BANK3[5]), DlySw1(BANK2[5]), 


Critical Paths under _main in COMMON

    _main->_Flash_Memory_Main
    _my_MainTimer->_setBuz
    _setSw_Main->_setBuz
    _setDimmerLights_DimmingOn->_DimmerLights_SelectPointer
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _setLog_Code->_setBuz
    _setRF_AdjControl->_getDimmerLights_Status
    _setRFSW_Control->_setBuz
    _setRFSW_AdjControl->_setBuz
    _setDimmerLights_DimmingRun->_DimmerLights_SelectPointer
    _CC2500_TxData->_CC2500_WriteCommand
    _CC2500_RxData->_CC2500_ReadStatus
    _CC2500_RxData->_CC2500_WriteCommand
    _CC2500_ReadStatus->_CC2500_ReadByte
    _CC2500_ReadStatus->_CC2500_WriteByte
    _CC2500_PowerOnInitial->_CC2500_PowerRST
    _CC2500_SIDLEMode->_CC2500_WriteCommand
    _CC2500_PowerRST->_DelayTime_1us
    _CC2500_InitSetREG->_CC2500_WriteREG
    _CC2500_InitPATable->_CC2500_WriteREG
    _CC2500_WriteREG->_CC2500_WriteByte
    _CC2500_FrequencyCabr->_DelayTime_1us
    _CC2500_ClearTXFIFO->_CC2500_WriteCommand
    _CC2500_ClearRXFIFO->_CC2500_WriteCommand
    _CC2500_WriteCommand->_CC2500_WriteByte
    _RF_Initialization->_setRF_Initialization
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setLED_Main
    _setLED_Main->_LedPointSelect
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Flash_Memory_Main->_Flash_Memory_Modify
    _Flash_Memory_Modify->_Flash_Memory_Read
    _Flash_Memory_Initialization->_Flash_Memory_Read
    _Exception_Main->_setLED
    _setLED->_LedPointSelect
    _setDimmerLights_DimmingClose->_setDimmerIntr_Dimming_Sw
    _getDelayOff_GO->_DelayOffPointSelect
    _setDimmerLights_Dimming->_setBuz
    _DimmerLights_DimmingFunction->_DimmerIntr_ValueCalculate
    _getDimmerLights_ValueToPercent->___awtoft
    _getDimmerLights_PercentToValue->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___awtoft
    ___awtoft->___ftpack
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DelayOff_Initialization->_DlyOff_Initialization
    _DlyOff_Initialization->_DelayOffPointSelect

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1
    _TMR1_ISR->_DimmerLights_TMR_2
    _IOC_ISR->_DimmerLights_IOC_1
    _IOC_ISR->_DimmerLights_IOC_2

Critical Paths under _main in BANK0

    _my_MainTimer->_setBuz
    _Switch_Main->_setSw_Main
    _setSw_Main->_setDimmerLights_SwOn
    _RF_Main->_setRF_Main
    _setRF_Main->_getRxData
    _setLog_Code->_setProductData
    _setControl_Lights_Table->_setRFSW_Control
    _setRFSW_Control->_setDelayOff_GO
    _setRFSW_AdjControl->_setDimmerIntr_MaxmumValue
    _CC2500_PowerOnInitial->_CC2500_InitSetREG
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setDelayOff_GO
    _setDimmerIntr_DimmingValue->_getDimmerLights_PercentToValue
    _setDelayOff_GO->_setProductData
    _setDimmerLights_Dimming->_setRF_DimmerLights
    _setRF_DimmerLights->_setProductData
    _setDimmerIntr_MaxmumValue->_getDimmerLights_PercentToValue
    _DimmerLights_Initialization->_DimmerIntr_Initialization
    _DimmerIntr_Initialization->_getDimmerLights_PercentToValue
    _getDimmerLights_ValueToPercent->___fttol
    _getDimmerLights_PercentToValue->___fttol
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _DelayOff_Main->_DlyOff_Main
    _DlyOff_Main->_setProductData
    _setProductData->_getDimmerLights_ValueToPercent
    _setDimmerLights_SwOn->_setBuz
    _setBuz->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4  149295
                                              0 BANK3      4     0      4
              _Buzzer_Initialization
                        _Buzzer_Main
              _CC2500_PowerOnInitial
            _DelayOff_Initialization
                      _DelayOff_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
        _Flash_Memory_Initialization
                  _Flash_Memory_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                  _RF_Initialization
                            _RF_Main
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0    1601
                                              6 BANK0      1     1      0
                             _setBuz
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              2 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0    4411
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0    4411
                                             12 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
                             _setBuz
          _setDimmerLights_DimmingOn
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                        _setRF_Learn
 ---------------------------------------------------------------------------------
 (3) _setRF_Learn                                          2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_DimmingOn                            1     1      0      93
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      5     5      0     117
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    1186
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    1186
                                              5 COMMON     1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _RF_Main                                              0     0      0   51392
                         _setRF_Main
 ---------------------------------------------------------------------------------
 (2) _setRF_Main                                           2     2      0   51392
                                             70 BANK0      2     2      0
              _CC2500_PowerOnInitial
                      _CC2500_RxData
                      _CC2500_TxData
                _CC2500_WriteCommand
                       _RF_RxDisable
                            ___lwdiv
                          _getBuz_GO
                    _getRF_KeyStatus
                          _getRxData
                            _setData
 ---------------------------------------------------------------------------------
 (3) _setData                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _getRxData                                            2     2      0   46560
                                             68 BANK0      2     2      0
           _getMain_All_Error_Status
            _setControl_Lights_Table
                        _setLog_Code
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setLog_Code                                          1     1      0    4181
                                             57 BANK0      1     1      0
                             _setBuz
                 _setMemory_LoopSave
                   _setMemory_Modify
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setMemory_LoopSave                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _setControl_Lights_Table                              0     0      0   42297
             _getDimmerLights_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
                 _setRFSW_AdjControl
                    _setRFSW_Control
                   _setRF_AdjControl
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRF_AdjControl                                     4     4      0     489
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
 ---------------------------------------------------------------------------------
 (5) _setRFSW_Control                                      3     3      0   10806
                                             65 BANK0      3     3      0
             _getDimmerLights_Status
                             _setBuz
                     _setDelayOff_GO
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (5) _setRFSW_AdjControl                                   4     4      0   25756
                                             59 BANK0      4     4      0
     _getDimmerLights_PercentToValue
             _getDimmerLights_Status
                             _setBuz
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
         _setDimmerLights_DimmingRun
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                   _setMemory_Modify
                     _setProductData
                          _setTxData
 ---------------------------------------------------------------------------------
 (6) _setDimmerLights_DimmingRun                           3     2      1     230
                                              4 COMMON     3     2      1
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _getRF_KeyStatus                                      3     3      0      48
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getBuz_GO                                            6     4      2      23
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     877
                                              2 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _RF_RxDisable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CC2500_TxData                                        2     2      0     330
                                              6 COMMON     2     2      0
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _CC2500_RxData                                        2     2      0     560
                                              6 COMMON     2     2      0
                    _CC2500_ReadByte
                  _CC2500_ReadStatus
                   _CC2500_WriteByte
                _CC2500_WriteCommand
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_ReadStatus                                    2     2      0     184
                                              4 COMMON     2     2      0
                    _CC2500_ReadByte
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (5) _CC2500_ReadByte                                      2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _CC2500_PowerOnInitial                                0     0      0    2850
                 _CC2500_ClearRXFIFO
                 _CC2500_ClearTXFIFO
               _CC2500_FrequencyCabr
                 _CC2500_InitPATable
                  _CC2500_InitSetREG
                    _CC2500_PowerRST
                   _CC2500_SIDLEMode
 ---------------------------------------------------------------------------------
 (4) _CC2500_SIDLEMode                                     0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_PowerRST                                      1     1      0     544
                                              8 COMMON     1     1      0
                   _CC2500_WriteByte
                      _DelayTime_1us
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitSetREG                                    4     4      0     698
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (4) _CC2500_InitPATable                                   3     3      0     608
                                              7 COMMON     1     1      0
                                              0 BANK0      2     2      0
                    _CC2500_WriteREG
 ---------------------------------------------------------------------------------
 (5) _CC2500_WriteREG                                      3     2      1     422
                                              4 COMMON     3     2      1
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _CC2500_FrequencyCabr                                 0     0      0     586
                _CC2500_WriteCommand
                      _DelayTime_1us
 ---------------------------------------------------------------------------------
 (5) _DelayTime_1us                                        6     4      2     448
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearTXFIFO                                   0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (4) _CC2500_ClearRXFIFO                                   0     0      0     138
                _CC2500_WriteCommand
 ---------------------------------------------------------------------------------
 (3) _CC2500_WriteCommand                                  2     2      0     138
                                              4 COMMON     2     2      0
                   _CC2500_WriteByte
                 _RF_Timeout_Counter
               _setRF_TimeoutCleared
 ---------------------------------------------------------------------------------
 (4) _setRF_TimeoutCleared                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RF_Timeout_Counter                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CC2500_WriteByte                                     2     2      0      96
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _RF_Initialization                                    0     0      0       0
               _setRF_Initialization
 ---------------------------------------------------------------------------------
 (2) _setRF_Initialization                                 1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                            _IOC_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IOC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0     217
                        _setLED_Main
 ---------------------------------------------------------------------------------
 (2) _setLED_Main                                          3     3      0     217
                                              3 COMMON     3     3      0
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    1310
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    1310
                                              5 COMMON     1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Main                                    3     3      0    2285
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                _Flash_Memory_Modify
                _getAll_Sw_KeyStatus
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) _getAll_Sw_KeyStatus                                  3     3      0      74
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Flash_Memory_Modify                                  2     2      0    2066
                                              6 COMMON     2     2      0
               _Flash_Memory_Erasing
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Erasing                                 0     0      0       0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (1) _Flash_Memory_Initialization                          2     2      0    1936
                                              6 COMMON     2     2      0
                  _Flash_Memory_Read
                 _Flash_Memory_Write
                     _setMemory_Data
 ---------------------------------------------------------------------------------
 (3) _setMemory_Data                                       3     2      1    1726
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Write                                   2     2      0     133
                                              2 COMMON     2     2      0
                _Flash_Memory_Unlock
 ---------------------------------------------------------------------------------
 (4) _Flash_Memory_Unlock                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Flash_Memory_Read                                    4     4      0      74
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    1356
                                              5 COMMON     1     1      0
                                              0 BANK0      4     4      0
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             2     2      0      34
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0   49067
       _DimmerLights_DimmingFunction
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0   48979
                                             69 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                4     3      1   31001
                                             65 BANK0      4     3      1
          _DimmerIntr_ValueCalculate
                      _getCmd_Status
                     _getDelayOff_GO
     _getDimmerLights_PercentToValue
           _getMain_All_LightsStatus
                      _setCmd_Status
                     _setDelayOff_GO
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
       _setDimmerLights_DimmingClose
                             _setLED
                     _setProductData
                 _setRF_DimmerLights
                          _setTxData
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    1155
                                              3 COMMON     2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       1     1      0      93
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerLights_DimmingClose                         0     0      0     355
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_Dimming_RF                             3     2      1     355
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     177
                                             56 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     266
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _setDelayOff_GO                                       8     6      2    3541
                                             57 BANK0      8     6      2
                _DelayOffPointSelect
                             ___bmul
                     _setProductData
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     270
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _setCmd_Status                                        3     2      1     222
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _getMain_All_LightsStatus                             1     1      0      71
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _getDelayOff_GO                                       2     2      0      89
                                              4 COMMON     2     2      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      46
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1   17412
                                             62 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
     _getDimmerLights_ValueToPercent
                             _setBuz
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
                   _setMemory_Modify
                     _setProductData
                 _setRF_DimmerLights
                 _setRF_TransceiveGO
                          _setTxData
 ---------------------------------------------------------------------------------
 (4) _setTxData                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _setRF_TransceiveGO                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _setRF_DimmerLights                                   5     4      1    2983
                                             57 BANK0      5     4      1
                     _setProductData
 ---------------------------------------------------------------------------------
 (6) _setDimmerIntr_MaxmumValue                            3     2      1     444
                                             56 BANK0      3     2      1
     _getDimmerLights_PercentToValue (ARG)
 ---------------------------------------------------------------------------------
 (5) _setDimmerIntr_Dimming_Sw                             3     2      1     355
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      69
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      5     5      0     139
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_DimmingFunction                         2     2      0      88
                                              4 COMMON     2     2      0
          _DimmerIntr_ValueCalculate
 ---------------------------------------------------------------------------------
 (4) _DimmerIntr_ValueCalculate                            2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0   26411
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0   26411
                                             56 BANK0      1     1      0
     _getDimmerLights_PercentToValue
     _getDimmerLights_ValueToPercent
                   _setMemory_Modify
 ---------------------------------------------------------------------------------
 (5) _setMemory_Modify                                     2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerLights_ValueToPercent                       4     4      0    8712
                                             50 BANK0      4     4      0
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_PercentToValue                       6     6      0   17677
                                             50 BANK0      6     6      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     430
                                             36 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             16    10      6    4030
                                              7 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             16    10      6    4386
                                              7 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftadd                                             13     7      6    4935
                                             23 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             6     3      3    3758
                                              7 COMMON     2     2      0
                                              3 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    3330
                                              2 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Main                                        0     0      0    5207
                        _DlyOff_Main
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Main                                          3     3      0    5207
                                             57 BANK0      3     3      0
                _DelayOffPointSelect
             _getDimmerLights_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                     _setProductData
 ---------------------------------------------------------------------------------
 (5) _setProductData                                       3     2      1    2536
                                             54 BANK0      3     2      1
     _getDimmerLights_ValueToPercent (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 6     6      0    2197
                                              6 BANK0      6     6      0
         _DimmerLights_SelectPointer
           _getDimmerIntr_Dimming_Sw
                             _setBuz
 ---------------------------------------------------------------------------------
 (2) _setBuz                                               4     2      2    1601
                                              7 COMMON     2     2      0
                                              4 BANK0      2     0      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     653
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_Dimming_Sw                             2     2      0     102
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      93
                                              4 COMMON     1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (6) _getDimmerLights_Status                               2     2      0     127
                                              4 COMMON     2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _DimmerLights_SelectPointer                           2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DelayOff_Initialization                              0     0      0      66
              _DlyOff_Initialization
 ---------------------------------------------------------------------------------
 (2) _DlyOff_Initialization                                1     1      0      66
                                              4 COMMON     1     1      0
                _DelayOffPointSelect
 ---------------------------------------------------------------------------------
 (7) _DelayOffPointSelect                                  2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Main                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  1     1      0       0
                                              1 COMMON     1     1      0
                            _IOC_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0       0
                 _DimmerLights_TMR_1
                 _DimmerLights_TMR_2
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_TMR_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _IOC_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_IOC_2
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_2                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _DimmerLights_IOC_1                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Initialization
   _Buzzer_Main
   _CC2500_PowerOnInitial
     _CC2500_ClearRXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_ClearTXFIFO
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_FrequencyCabr
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _DelayTime_1us
     _CC2500_InitPATable
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_InitSetREG
       _CC2500_WriteREG
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
     _CC2500_PowerRST
       _CC2500_WriteByte
       _DelayTime_1us
       _RF_Timeout_Counter
       _setRF_TimeoutCleared
     _CC2500_SIDLEMode
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
   _DelayOff_Initialization
     _DlyOff_Initialization
       _DelayOffPointSelect
   _DelayOff_Main
     _DlyOff_Main
       _DelayOffPointSelect
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setProductData
         _getDimmerLights_ValueToPercent (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
       _getDimmerLights_PercentToValue
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _getDimmerLights_ValueToPercent
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _setMemory_Modify
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_DimmingFunction
       _DimmerIntr_ValueCalculate
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _getDimmerLights_ValueToPercent
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _setBuz
           ___awdiv
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setMemory_Modify
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setRF_TransceiveGO
         _setTxData
       _setDimmerLights_OnOff
         _DimmerIntr_ValueCalculate
         _getCmd_Status
         _getDelayOff_GO
           _DelayOffPointSelect
         _getDimmerLights_PercentToValue
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDelayOff_GO
           _DelayOffPointSelect
           ___bmul
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerIntr_Dimming_RF
         _setDimmerIntr_MaxmumValue
           _getDimmerLights_PercentToValue (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftpack (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setDimmerLights_DimmingClose
           _setDimmerIntr_Dimming_Sw
         _setLED
           _LedPointSelect
         _setProductData
           _getDimmerLights_ValueToPercent (ARG)
             ___awtoft
               ___ftpack
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
         _setRF_DimmerLights
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
   _Exception_Main
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Flash_Memory_Initialization
     _Flash_Memory_Read
     _Flash_Memory_Write
       _Flash_Memory_Unlock
     _setMemory_Data
   _Flash_Memory_Main
     _Flash_Memory_Modify
       _Flash_Memory_Erasing
         _Flash_Memory_Unlock
       _Flash_Memory_Read
       _Flash_Memory_Write
         _Flash_Memory_Unlock
       _setMemory_Data
     _getAll_Sw_KeyStatus
     _getMain_All_LightsStatus
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setLED_Main
       _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IOC_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _RF_Initialization
     _setRF_Initialization
   _RF_Main
     _setRF_Main
       _CC2500_PowerOnInitial
         _CC2500_ClearRXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_ClearTXFIFO
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_FrequencyCabr
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
           _DelayTime_1us
         _CC2500_InitPATable
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_InitSetREG
           _CC2500_WriteREG
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
         _CC2500_PowerRST
           _CC2500_WriteByte
           _DelayTime_1us
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_SIDLEMode
           _CC2500_WriteCommand
             _CC2500_WriteByte
             _RF_Timeout_Counter
             _setRF_TimeoutCleared
       _CC2500_RxData
         _CC2500_ReadByte
         _CC2500_ReadStatus
           _CC2500_ReadByte
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_TxData
         _CC2500_WriteByte
         _CC2500_WriteCommand
           _CC2500_WriteByte
           _RF_Timeout_Counter
           _setRF_TimeoutCleared
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _CC2500_WriteCommand
         _CC2500_WriteByte
         _RF_Timeout_Counter
         _setRF_TimeoutCleared
       _RF_RxDisable
       ___lwdiv
       _getBuz_GO
       _getRF_KeyStatus
       _getRxData
         _getMain_All_Error_Status
         _setControl_Lights_Table
           _getDimmerLights_Status
             _DimmerLights_SelectPointer
           _getMain_All_LightsStatus
           _setCmd_Status
           _setDimmerLights_SwOff
             _DimmerLights_SelectPointer
           _setDimmerLights_SwOn
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _setBuz
               ___awdiv
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
           _setRFSW_AdjControl
             _getDimmerLights_PercentToValue
               ___awtoft
                 ___ftpack
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftpack (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDimmerIntr_Dimming_RF
             _setDimmerIntr_MaxmumValue
               _getDimmerLights_PercentToValue (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftadd
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setDimmerLights_DimmingRun
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setMemory_Modify
             _setProductData
               _getDimmerLights_ValueToPercent (ARG)
                 ___awtoft
                   ___ftpack
                 ___ftdiv
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
             _setTxData
           _setRFSW_Control
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
             _setBuz
               ___awdiv
             _setDelayOff_GO
               _DelayOffPointSelect
               ___bmul
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setDimmerLights_SwOff
               _DimmerLights_SelectPointer
             _setDimmerLights_SwOn
               _DimmerLights_SelectPointer
               _getDimmerIntr_Dimming_Sw
               _setBuz
                 ___awdiv
             _setRF_DimmerLights
               _setProductData
                 _getDimmerLights_ValueToPercent (ARG)
                   ___awtoft
                     ___ftpack
                   ___ftdiv
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftadd (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                       ___ftpack (ARG)
                     ___ftdiv (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                     ___ftmul (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
             _setTxData
           _setRF_AdjControl
             _DimmerLights_SelectPointer
             _getDimmerIntr_Dimming_Sw
             _getDimmerLights_Status
               _DimmerLights_SelectPointer
           _setTxData
         _setLog_Code
           _setBuz
             ___awdiv
           _setMemory_LoopSave
           _setMemory_Modify
           _setProductData
             _getDimmerLights_ValueToPercent (ARG)
               ___awtoft
                 ___ftpack
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___fttol
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
         _setTxData
       _setData
   _Switch_Initialization
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
       _setBuz
         ___awdiv
       _setDimmerLights_DimmingOn
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
         _getDimmerIntr_Dimming_Sw
         _setBuz
           ___awdiv
       _setRF_Learn
   _WDT_Main
     _WDT_Clearing
   _myMain_Initialization
   _my_MainTimer
     _setBuz
       ___awdiv

 _ISR (ROOT)
   _IOC_ISR
     _DimmerLights_IOC_1
     _DimmerLights_IOC_2
   _TMR1_ISR
     _DimmerLights_TMR_1
     _DimmerLights_TMR_2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     169      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     169      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Mar 30 16:46:02 2015

                    __size_of_Switch_Main 000B                     ?_Flash_Memory_Erasing 0070  
                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 11AB                            ___bmul@product 0074  
                                      l96 0970                                        l98 0982  
                                      _RD 0CA8                   __end_of_CC2500_WriteREG 13E3  
                                      _WR 0CA9                              ___awdiv@sign 0021  
                                      _u1 01A0                                        _Sw 006C  
                  __end_of_setDelayOff_GO 0E69                              ___ftadd@exp1 0043  
                            ___ftadd@exp2 0042                    setRF_AdjControl@status 0020  
                __size_of_getRF_KeyStatus 0011                      _setDimmerLights_Main 0B68  
                            ___ftadd@sign 0041                                       l110 0852  
                                     l106 0858                                       l107 0854  
                                     l108 0844                                       l323 1162  
                    _setDimmerLights_SwOn 0791                                       l324 1163  
                                     l255 0CD6                                       l367 1475  
                                     l573 0D5F                                       l749 1142  
                                     l892 04BD                                       l994 1333  
                                     _GIE 005F                                       _CRC 00DF  
                                     _RA0 0060                                       _RB0 0068  
    __size_of_DimmerLights_Initialization 000B                                       _RB1 0069  
                                     _RA3 0063                                       _RC0 0070  
                                     _RB2 006A                                       _RA4 0064  
                                     _LED 007A                                       _RC1 0071  
                                     _RB3 006B                                       _RC2 0072  
                                     _RB4 006C                                       _RA6 0066  
                                     _RB5 006D                                       _RA7 0067  
                                     _RC4 0074                                       _RC5 0075  
                                     _RC7 0077                                       _RF1 00B0  
                                     _ISR 0004                                       _WDT 00DD  
                                     _Cmd 0068              getDimmerLights_Status@lights 0074  
                                     _Sw1 01D5                                       _Sw2 01DE  
              ??_setDimmerIntr_Dimming_RF 0073                ??_setDimmerIntr_Dimming_Sw 0073  
         setDimmerIntr_Dimming_RF@command 0072                  __end_of_CC2500_WriteByte 116C  
                   _Buzzer_Initialization 1EA8                           __end_of_ADC_Set 1EE8  
                                     wreg 0009      setDimmerLights_Initialization@lights 0070  
            getDimmerLights_Status@status 0075       __end_of_setDimmerIntr_ControlStatus 14E6  
             _setDimmerIntr_ControlStatus 14BD                         ??_getSw_KeyStatus 0072  
                                    ?_ISR 0070                              ___ftdiv@cntr 0031  
                         __end_of_IOC_ISR 1F79                     _setDimmerLights_OnOff 0442  
        setDimmerLights_DimmingRun@lights 0076                              ___ftdiv@sign 0036  
                                    l1002 072A                                      l1020 0766  
                                    l1004 0719                                      l1013 0745  
                                    l1023 0774                                      l1007 0728  
                                    l1018 0776                                      l1029 078F  
                                    l2200 03A6                                      l2201 03EA  
                                    l1167 176A                                      l1168 1771  
                                    l2226 1F04                                      l2307 0C45  
                                    l2244 0C30                                      l1453 1532  
                                    l1463 0FF8                                      l1439 1730  
                                    l2264 0672                                      l1632 16B3  
                                    l1616 17DA                                      l2257 1593  
                                    l2275 06F6                                      l2196 043E  
                         __end_of_IOC_Set 1F4C                                      l2606 11F1  
                                    l2630 0096                                      l1665 1678  
                                    l6010 0ECD                                      l6002 0EB2  
                                    l1674 11AA                                      l6012 0ED6  
                                    l6004 0EC0                                      l2628 01B8  
                                    l6014 0ED9                                      l2920 0AEC  
                                    l2914 0AD5                                      l6018 0EE7  
                                    l6130 0E1F                                      l6140 0E4D  
                                    l2943 0261                                      l6144 0E5F  
                                    l6232 1265                                      l6234 1269  
                                    l6164 1236                                      l6180 0C38  
                                    l6500 124D                                      l6172 14FB  
                                    l7060 120A                                      l6510 1139  
                                    l6246 1486                                      l7216 071B  
                                    l6272 145F                                      l6192 0C83  
                                    l6184 0C3D                                      l6248 1491  
                                    l8202 09E1                                      l7234 0746  
                                    l6178 0C37                                      l6290 1198  
                                    l7074 136E                                      l7228 0737  
                                    l7084 137B                                      l7076 1370  
                   _setDimmerLights_SwOff 15CE                                      l7270 0782  
                                    l6294 11A5                                      l7086 137F  
                                    l8170 099F                                      l7258 0768  
                                    l6580 108D                                      l6492 14D2  
                                    l5758 1177                                      l8176 09AA  
                                    l6584 1093                                      l5792 10E2  
                                    l8194 09D0                                      l8186 09B2  
                                    l6586 1098                                      l7562 11FC  
                                    l8188 09BE                                      l9420 01EA  
                                    l8364 1FE0                                      l5788 10DC  
                                    l9172 033A                                      l8198 09D9  
                                    l9430 0200                                      l9510 0621  
                                    l6782 1437                                      l7558 11F6  
                                    l7664 0830                                      l9360 0AC0  
                                    l9352 0AA9                                      l9408 13EE  
                                    l9424 01F1                                      l5984 0E82  
                                    l6792 1446                                      l6784 1439  
                                    l9450 0237                                      l9442 021A  
                                    l6794 144A                                      l9356 0AB0  
                                    l9460 0253                                      l9452 023C  
                                    l9532 0516                                      l6972 1107  
                   _myMain_Initialization 1FF1                                      l9366 0ADA  
                                    l9358 0ABB                                      l9470 0285  
                                    l9462 025D                                      l9454 0240  
                                    l9518 063A                                      l9550 0567  
                                    l9198 170F                                      l9702 13D3  
                                    l9384 121F                                      l9624 07AC  
                                    l9368 0AE2                                      l9480 02A0  
                                    l9448 022D                                      l9650 07F8  
                                    l9634 07BD                                      l9626 07AF  
                                    l9466 0273                                      l9490 05CA  
                                    l9562 0583                                      l9554 056F  
                                    l9538 052C                                      l9714 12F8  
                                    l9802 1417                                      l9396 118C  
                                    l9388 1228                                      l9636 07C2  
                                    l9900 0A51                                      l9662 15FB  
                                    l9646 07E8                                      l9566 058B  
                                    l9718 1300                                      l9830 17A6  
                                    l9648 07EE                                      l9496 05E0  
                                    l9904 0A57                                      l8792 151D  
                                    l8944 10F6                                      l9680 0808  
                                    l9840 17B6                                      l9824 179D  
                                    l9752 0F0C                                      l9736 16E8  
                                    _CFGS 0CAE                                      l9930 0A8B  
                                    l9914 0A67                                      l9922 0A73  
                                    l8970 0FF1                                      l8962 0F91  
                                    l9682 080B                                      l9834 17AD  
                                    l9826 17A0                                      l9908 0A5D  
                                    l8956 0F7D                                      l9836 17B0  
                                    l9764 0F63                                      l9748 0F07  
                                    l9934 0A91                                      l9918 0A6D  
                                    l9686 0811                                      l9950 065D  
                                    l9696 13CA                                      l9960 0687  
                            __CFG_WDTE$ON 0000                                      l9938 0A97  
                                    l9698 13CD                                      l9786 1630  
                                    l9970 06C7                                      l9796 140E  
                                    l9972 06CB                                      l9964 06A2  
                                    l9798 1411                                      l9990 0CA7  
                                    l9974 06CF                                      l9958 0681  
                                    l9982 06DB                                      l9992 0CAA  
                                    l9976 06D3                                      l9968 06C3  
                                    l9978 06D7                                      l9996 0CB0  
                                    _FREE 0CAC                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    u5015 0ECE                                      _PEIE 005E  
                                    u5405 147B                                      u5255 0E2B  
                                    u6275 11E4                                      u4955 0E89  
                                    u8405 09D1                                      u4985 0EB3  
                                    u7645 0826                                      u8365 09B5  
                                    u8385 09BF                                      u8395 09C9  
                                    _LWLO 0CAD                                      u9865 1727  
                                    _RSSI 00E2                                      _WREN 0CAA  
                                    _WPUB 020D        __end_of_setDimmerLights_DimmingRun 1287  
              _setDimmerLights_DimmingRun 126F                                      _Buz1 00CC  
                                    _main 17BC                              ___ftpack@arg 0072  
                     __end_of_DlyOff_Main 0D66                           __end_of_RF_Main 1EB4  
                            ___ftpack@exp 0075                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                         __end_of_WDT_Set 1F21                                      ltemp 007E  
           __size_of_setRF_Initialization 000B                                      start 001F  
                                    ttemp 007E                                      wtemp 007E  
       setDimmerLights_SwOn@dimmingStatus 0027      __end_of_DimmerLights_DimmingFunction 0791  
   __size_of_DimmerLights_DimmingFunction 009A              _DimmerLights_DimmingFunction 06F7  
              __end_of_setRFSW_AdjControl 0F77                         ___bmul@multiplier 0075  
                            ___ftmul@cntr 0035                              ___ftmul@sign 0036  
    _getDimmerLights_Allow_Condition$2473 0073      _getDimmerLights_Allow_Condition$2474 0074  
                                   ??_ISR 0071                              ___fttol@exp1 0051  
              ?_DimmerIntr_ValueCalculate 0070                              ___fttol@lval 004D  
       setDimmerLights_DimmingRun@command 0074   __end_of_getDimmerLights_Allow_Condition 144C  
__size_of_getDimmerLights_Allow_Condition 0025         ??_getDimmerLights_Allow_Condition 0072  
        ?_getDimmerLights_Allow_Condition 0070           _getDimmerLights_Allow_Condition 1427  
                  _getDimmerLights_Status 1FB5                          __end_of_LED_Main 1FA9  
                              _DimmerIntr 00E0                                     l10010 0CBF  
                                   l10020 0CE5                                     l10022 0CE9  
                                   l10014 0CDC                                     l10112 047C  
                                   l10024 0CEC                                     l10016 0CDF  
                                   l10200 0C05                                     l10114 0491  
                                   l10122 04A5                                     l10052 0B1F  
                                   l10028 0CF2                                     l10134 04CB  
                                   l10118 049B                                     l10070 0B46  
                                   l10046 0B16                                     l10230 15BE  
                                   l10222 15A0                                     l10048 0B19  
                                   l10224 15AC                                     l10162 08C1  
                                   l10154 04FC                                     l10138 04CF  
                                   l10306 0BBA                                     l10234 15C7  
                                   l10308 0BC0                                     l10068 0B2F  
                                   l10406 0437                                     l10184 0BE3  
                                   l10442 00C3                                     l10426 0080  
                                   l10196 0BFC                                     l10380 03F9  
                                   l10452 00F5                                     l10294 0B8E  
                                   l10366 03E5                                     l10296 0B94  
                                   l10536 1693                                     l10394 0423  
                                   l10466 0133                                     l10572 165F  
                                   l10476 0165                     ?_setDimmerLights_Main 0070  
                         ?_setDelayOff_GO 0059                     ?_setDimmerLights_SwOn 0070  
                                   ?_main 01EC                           __end_of___awdiv 09E8  
                         __end_of___ftadd 02B8                           __end_of___ftdiv 065C  
                                   u10115 0AF4                                     u10045 0AB6  
                                   u10065 0AD0                                     u10305 022E  
                                   u10085 0ADD                           __end_of___ftmul 05B3  
                                   u10335 0241                                     u10275 021B  
                                   u10435 05F2                                     u10515 0538  
                         ___awdiv@divisor 0072                                     u10365 0254  
                                   u10445 0602                                     u10525 0548  
                                   u10455 0622                                     u10615 11BA  
                                   _T1CON 0018                                     u10465 0631  
                                   u10545 0570                                     u10475 063B  
                                   u10555 0576                           __end_of___fttol 0EF0  
                                   u11615 15A3                                     u12175 16AB  
                                   u10585 058C                                     u10595 0592  
                                   u11635 15AD                                     u11645 15B7  
                                   u11655 15BF                                     u11915 03C2  
                                   u11945 0412                                     _IOCBF 0396  
                                   _IOCBN 0395                                     _IOCBP 0394  
                                   _IOCIE 005B                                     _IOCIF 0058  
                         __end_of___lwdiv 15CE                           ___awdiv@counter 0020  
           __size_of_CC2500_FrequencyCabr 000B                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTA 000C  
                                   _PORTB 000D                                     _PORTC 000E  
                            ?_setLED_Main 0070                        setRF_Learn@command 0073  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                   __end_of_Timeout_Counter 11EA  
                           __CFG_WRT$HALF 0000    __end_of_getDimmerLights_ValueToPercent 08A5  
 __size_of_getDimmerLights_ValueToPercent 0046            _getDimmerLights_ValueToPercent 085F  
                                   _Light 00E1                          __end_of_TMR1_ISR 13C2  
                 __size_of_setProductData 000C              __size_of_CC2500_WriteCommand 0019  
                        __end_of_TMR1_Set 1FB5        DimmerLights_DimmingFunction@lights 0075  
                           ___awtoft@sign 0026                             ___ftpack@sign 0076  
                         __end_of_setData 0941               __size_of_CC2500_ClearRXFIFO 0004  
                           ??_Buzzer_Main 0072                          __end_of_WDT_Main 10DA  
             __size_of_CC2500_ClearTXFIFO 0004                       CC2500_RxData@loop_f 0077  
                          __pbitbssCOMMON 03C8                            __CFG_BOREN$OFF 0000  
                      Flash_Memory_Read@i 0073                          ?_CC2500_ReadByte 0070  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 000F             __end_of_setLED_Initialization 1FF1  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                              ?_setRF_Learn 0070  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                     _getAll_Sw_KeyStatus 10EB                        _setRF_DimmerLights 0C32  
             __size_of_Flash_Memory_Write 002A                         ?_CC2500_SIDLEMode 0070  
              __size_of_RF_Initialization 0003          __size_of_DelayOff_Initialization 0008  
             __size_of_setRF_TransceiveGO 0010                    ??_Flash_Memory_Erasing 0072  
             ??_setDimmerLights_DimmingOn 0074                        ??_CC2500_SIDLEMode 0076  
                         __initialization 0021                          ?_CC2500_PowerRST 0070  
           ?_DimmerLights_DimmingFunction 0070                         ?_setMemory_Modify 0070  
                 __size_of_getDelayOff_GO 000F                              __end_of_main 1800  
                     ?_setRF_DimmerLights 0059                          __end_of_Fosc_Set 1EB8  
          getMain_All_LightsStatus@status 0072                        ??_setMemory_Modify 0072  
            setDimmerLights_OnOff@command 0061                            _Exception_Main 163F  
                        ?_CC2500_WriteREG 0074         __end_of_DimmerIntr_ValueCalculate 1342  
                               ??_ADC_Set 0072                      _setSw_Initialization 1EE8  
                                  ??_main 0079                             ___fttol@sign1 004C  
                    ?_getAll_Sw_KeyStatus 0070                              ?_setLog_Code 0070  
             ?_setDimmerIntr_DimmingValue 0058              ??_DimmerLights_SelectPointer 0072  
                 _setControl_Lights_Table 065C                            _setMemory_Data 1F36  
                  ?_Buzzer_Initialization 0070                   ??_DlyOff_Initialization 0074  
                              _Receive_OK 03C8        setDimmerIntr_ControlStatus@command 0072  
                 _setDimmerLights_Dimming 08A5                                 ??_IOC_ISR 0071  
                               ??_IOC_Set 0072                               _DimmerIntr1 00A0  
                             _DimmerIntr2 013E                  _getMain_All_LightsStatus 1FD3  
                __size_of_setRFSW_Control 0040                        _RF_Timeout_Counter 11AB  
                 ??_Switch_Initialization 0076                    ?_setDimmerLights_OnOff 0061  
                    ??_setRF_DimmerLights 005A                         ??_getRF_KeyStatus 0072  
                  ?_setDimmerLights_SwOff 0070                               _DlyOff_Main 0CFE  
                  ?_myMain_Initialization 0070                                    _ADCON0 009D  
                                  _ADCON1 009E          __end_of_getDimmerIntr_Dimming_Sw 122A  
                               ??_RF_Main 0079                                    _ADRESH 009C  
                                  _ADRESL 009B                          ___awdiv@dividend 0074  
                               ??_WDT_Set 0072                          __end_of___awtoft 1405  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 0B04  
                _getMain_All_Error_Status 1EAB                                    _IOCBF2 1CB2  
                                  i1l1402 001A                                    i1l7302 12C9  
                                  i1l7326 12B4                                    i1l8072 0012  
                                  i1l7290 129A                                    i1l7338 12E3  
                                  i1l7714 13BB                                    i1l7724 1F75  
                                  _FVRCON 0117      getDimmerLights_Allow_Condition@allow 0076  
                                  _PMADRH 0192                                    _PMADRL 0191  
                                  _PMDATH 0194                                    _PMDATL 0193  
                     ?_RF_Timeout_Counter 0070                                    _PMCON2 0196  
                                  _OSCCON 0099                                    u770_25 13B6  
                                  _TMR1IE 0488                                    _TMR1IF 0088  
                                  _IO_Set 1309                                    _WDTCON 0097  
    __end_of_setDimmerLights_DimmingClose 1F2B     __size_of_setDimmerLights_DimmingClose 000A  
            _setDimmerLights_DimmingClose 1F21                        DelayTime_1us@count 0072  
                      setRF_AdjControl@sw 0022            __size_of_CC2500_PowerOnInitial 0015  
             ??_setDimmerIntr_MaxmumValue 0059             __end_of_CC2500_PowerOnInitial 11D5  
                                  _Dimmer 014E                                    _DlySw1 0165  
                                  _DlySw2 01E7                          _setRF_AdjControl 1606  
           __size_of_setRF_TimeoutCleared 0004                     __end_of_getCmd_Status 109A  
              __end_of_Mcu_Initialization 1130                       __end_of_Buzzer_Main 085F  
                                  _Memory 01B0                                    _Timer1 00D8  
                                  ___bmul 10DA                    __end_of_Exception_Main 1679  
                    Exception_Main@lights 0020                                 ??___awdiv 0076  
                               ??___ftadd 003D              __size_of_DelayOffPointSelect 0015  
                               ??___ftdiv 002D                                 ??___ftmul 002D  
                               ??___fttol 0048              ?_Flash_Memory_Initialization 0070  
                               ??___lwdiv 0076                    ??_setDimmerLights_Main 0079  
                                  _r_data 00E6                      Exception_Main@status 0022  
                                  _s_data 00E7                    ??_setDimmerLights_SwOn 0026  
                                  _setLED 0A43                                    _myMain 00BF  
                    ??_RF_Timeout_Counter 0072                    __end_of_setMemory_Data 1F41  
                   ?_setSw_Initialization 0070                          ___awdiv@quotient 0022  
                                  _setBuz 0941          ??_setDimmerLights_Initialization 0072  
         ?_setDimmerLights_Initialization 0070                     ??_getAll_Sw_KeyStatus 0072  
        __end_of_setDimmerIntr_Dimming_RF 150F          __end_of_setDimmerIntr_Dimming_Sw 1471  
                   ___ftmul@f3_as_product 0032                 _setDimmerLights_DimmingOn 1496  
                               ??_setData 0072                  Flash_Memory_Read@address 0074  
                        ?_Timeout_Counter 0070                __end_of_setMemory_LoopSave 10CA  
             __size_of_DimmerLights_IOC_1 001A               __size_of_DimmerLights_IOC_2 001A  
                   __end_of_SwPointSelect 1214               __size_of_DimmerLights_TMR_1 001A  
             __size_of_DimmerLights_TMR_2 001A              __size_of_Flash_Memory_Modify 0089  
                 __size_of_LedPointSelect 001A           setDimmerIntr_Dimming_Sw@command 0072  
                     Flash_Memory_Write@i 0073              __size_of_Flash_Memory_Unlock 0009  
                              _TouchPower 11EA               __size_of_CC2500_InitPATable 001F  
                     CC2500_TxData@loop_e 0077          __end_of_CC2500_registers_address 102F  
                 __end_of__initialization 004D           setDimmerIntr_DimmingValue@value 0058  
         getDimmerIntr_DimmingValue@value 0073                                 ?_LED_Main 0070  
                              ___ftadd@f1 0037                                ___ftadd@f2 003A  
                    _getRF_KeyStatus$5581 0074                             ?_my_MainTimer 0070  
               _setDimmerLights_SwOn$2411 0028                 _setDimmerLights_SwOn$2420 0029  
                              ___ftdiv@f1 002A                                ___ftdiv@f2 0027  
                              ___ftdiv@f3 0032             ?_setDimmerLights_DimmingClose 0070  
                              ___awtoft@c 0023                       ___bmul@multiplicand 0072  
            ?_DimmerLights_Initialization 0070                                ___ftmul@f1 0027  
                              ___ftmul@f2 002A                ?_DimmerIntr_Initialization 0070  
                              ___fttol@f1 0044                            __pcstackCOMMON 0070  
                         ?_Exception_Main 0070                              __pidataBANK4 1381  
                               ?_TMR1_ISR 0070                                 ?_TMR1_Set 0070  
               setMemory_LoopSave@command 0073                        _LED_Initialization 1F91  
                         _getSw_KeyStatus 1361                 ??_setControl_Lights_Table 0079  
                      getRF_KeyStatus@key 0073                           ?_setMemory_Data 0072  
          ??_DimmerLights_DimmingFunction 0074          ??_getDimmerLights_PercentToValue 0052  
         ?_getDimmerLights_PercentToValue 0070                 ??_setDimmerLights_Dimming 005F  
           ??_Flash_Memory_Initialization 0076                                 ?_WDT_Main 0070  
       setDimmerIntr_ControlStatus@lights 0074                        __size_of_getBuz_GO 0010  
               _setDimmerIntr_MaxmumValue 122A                __end_of_set_TimeoutCleared 1ECE  
         setDimmerIntr_MaxmumValue@lights 005A                        __size_of_getRxData 0065  
                     ?_LED_Initialization 0070                         ?_CC2500_WriteByte 0070  
                          _setProductData 1F79                      __size_of_setLED_Main 0043  
                      ??_CC2500_WriteByte 0072                                __pbssBANK0 0068  
                              __pbssBANK1 00A0                                __pbssBANK2 0120  
                              __pbssBANK3 01A0                                 ?_Fosc_Set 0070  
                             _Buzzer_Main 0819                         ??_setRFSW_Control 0061  
             ?_setDimmerLights_DimmingRun 0074                                   ?_IO_Set 0070  
                          ??_my_MainTimer 0026                                ??_LED_Main 0076  
                         __CFG_VCAPEN$OFF 0000                   _DelayOff_Initialization 1EEF  
                           ??_Switch_Main 0079                            DelayTime_1us@i 0074  
                          DelayTime_1us@j 0076                      ??_LED_Initialization 0076  
                            _DimmerLights 006A                         LedPointSelect@led 0072  
                  __size_of_DelayOff_Main 0008                      __size_of_setRF_Learn 0011  
                             setBuz@count 0078                   ?_getDimmerLights_Status 0070  
                              __pmaintext 17BC                            _getDelayOff_GO 1FC4  
                     _CC2500_WriteCommand 0800                                   ?___bmul 0072  
                        ??_setDelayOff_GO 005B         __end_of_DimmerIntr_Initialization 0DE5  
           ??_DimmerLights_Initialization 0079                                ??_TMR1_ISR 0071  
       __size_of_getDimmerIntr_Dimming_Sw 0016                                ??_TMR1_Set 0072  
                              __pintentry 0004                    ??_setSw_Initialization 0075  
               ?_getDimmerIntr_Dimming_Sw 0070                        __size_of_setTxData 0007  
             ??_DimmerIntr_ValueCalculate 0072                                   ?_setLED 0073  
                  __size_of_DelayTime_1us 0025                                   _ADC_Set 1EE1  
                                 ?_setBuz 0024                                 ?___awtoft 0023  
                               ?___ftpack 0072        __end_of_DimmerLights_SelectPointer 1196  
              _DimmerLights_SelectPointer 1181                                ??_WDT_Main 0072  
            __end_of_setRF_Initialization 1F57                        _setRFSW_AdjControl 0EF0  
                  __end_of_setProductData 1F85             setDimmerLights_Dimming@lights 0061  
                                 _IOC_ISR 1F6D                                   _IOC_Set 1F41  
                    __size_of_setLog_Code 0034             setDimmerLights_Dimming@status 005E  
   getDimmerLights_Allow_Condition@lights 0075                      ?_CC2500_WriteCommand 0070  
                       _Flash_Memory_Main 16F5                         _Flash_Memory_Read 1144  
                  __size_of_CC2500_RxData 0064                    __size_of_CC2500_TxData 0066  
                     ?_setRFSW_AdjControl 0070                                   _RF_Data 0120  
                                 _RF_Main 1EB1                        ?_Flash_Memory_Main 0070  
                      ?_Flash_Memory_Read 0070                                   _WDT_Set 1F18  
         __end_of_setControl_Lights_Table 06F7                           setRF_Main@error 0067  
                  __size_of_setCmd_Status 0015                                ??_Fosc_Set 0072  
                             ?_TouchPower 0070           __end_of_setDimmerLights_Dimming 08F1  
                     getCmd_Status@number 0072              __end_of_CC2500_FrequencyCabr 1F62  
                         __size_of_IO_Set 001B                       setCmd_Status@number 0074  
       __size_of_setDimmerIntr_Dimming_RF 0029         __size_of_setDimmerIntr_Dimming_Sw 0025  
                       __end_of_getBuz_GO 10BA                 ?_setDimmerIntr_Dimming_RF 0072  
                     ??_Flash_Memory_Main 0078                 ?_setDimmerIntr_Dimming_Sw 0072  
                     ??_Flash_Memory_Read 0072                    __end_of_getDelayOff_GO 1FD3  
                                 _VarLED1 00EC                                   _VarLED2 016A  
          __end_of_getDimmerLights_Status 1FC4                         __end_of_getRxData 0C32  
                 __end_of_getSw_KeyStatus 1381                  _CC2500_registers_address 1000  
                    ??_setRFSW_AdjControl 005B                           __size_of___bmul 0011  
                     setProductData@value 0056                                   ___awdiv 0994  
          ??_setDimmerLights_DimmingClose 0075                                   ___ftadd 01C2  
                                 ___ftdiv 05B3                                   ___ftmul 04FF  
                                 ___fttol 0E69                       __end_of_Switch_Main 1F6D  
                                 ___lwdiv 1597                ??_getMain_All_LightsStatus 0072  
                 ??_Buzzer_Initialization 0072                           _getRF_KeyStatus 10FC  
                              ??___awtoft 0077                                ??___ftpack 0020  
                         __size_of_setLED 005E                      setRFSW_AdjControl@sw 005E  
         DimmerIntr_ValueCalculate@lights 0073                           __size_of_setBuz 0053  
                                 __ptext1 1679                                   __ptext2 1FF1  
                                 __ptext3 10CA                                   __ptext4 0002  
                                 __ptext5 1F62                                   __ptext6 0051  
                                 __ptext7 110D                                   __ptext8 1496  
                                 __ptext9 1361                 __size_of_CC2500_SIDLEMode 0004  
                            __size_of_ISR 001B                ??_getMain_All_Error_Status 0072  
                 ??_setDimmerLights_OnOff 0062                           ?_setProductData 0056  
               __end_of_Flash_Memory_Main 1736                 __end_of_Flash_Memory_Read 1158  
                 ??_setDimmerLights_SwOff 0074                                _setRF_Main 0383  
                 ??_myMain_Initialization 0072                             _DelayOff_Main 1EF7  
                __end_of_setRF_AdjControl 163F                         _DimmerLights_Main 109A  
                                 _setData 08F1            __size_of_DlyOff_Initialization 0005  
                   ??_CC2500_WriteCommand 0074                 __size_of_setMemory_Modify 0010  
           __end_of_DlyOff_Initialization 1EC9                __end_of_CC2500_ClearRXFIFO 1EC0  
              __end_of_CC2500_ClearTXFIFO 1EC4                              ?_DlyOff_Main 0070  
                      ?_DimmerLights_Main 0070                                   _product 006E  
                          _LedPointSelect 12EF                 getAll_Sw_KeyStatus@status 0073  
                     _DelayOffPointSelect 116C                                   clrloop0 1ED5  
          __size_of_Switch_Initialization 0008                 _DimmerIntr_ValueCalculate 1324  
           __end_of_Switch_Initialization 1F0F                      end_of_initialization 004D  
               ??_DelayOff_Initialization 0075                         _CC2500_InitSetREG 1539  
                           _DelayTime_1us 1471                         __end_of_setTxData 1EE1  
              __end_of_Flash_Memory_Write 1539        __size_of_setDimmerLights_DimmingOn 0027  
                                 init_ram 1ECE                __end_of_setRF_TransceiveGO 108A  
                      ?_CC2500_InitSetREG 0070                       ??_DimmerLights_Main 0079  
                    Flash_Memory_Read@ret 0075                                   initloop 1ECF  
                              _setSw_Main 0051                     CC2500_ReadByte@loop_b 0073  
                  setDimmerLights_SwOn@sw 002B                         _CC2500_ReadStatus 1405  
                    Flash_Memory_Modify@i 0077                     _setLED_Initialization 1FE2  
                         ?_getDelayOff_GO 0070                                getBuz_GO@i 0076  
                      ?_CC2500_ReadStatus 0070                  __size_of_CC2500_ReadByte 0017  
                           _CC2500_RxData 0B04                             _CC2500_TxData 0C98  
                     ??_CC2500_InitSetREG 0077             __size_of_Flash_Memory_Erasing 000C  
                    ?_DelayOffPointSelect 0070                       _Flash_Memory_Modify 0F77  
                            __pstringtext 1000                             _setCmd_Status 1196  
                     _Flash_Memory_Unlock 1F0F                       ??_CC2500_ReadStatus 0074  
                 CC2500_InitSetREG@loop_c 0022                       __size_of_TouchPower 0015  
                setLED_Initialization@led 0075                    setSw_Initialization@sw 0075  
               __end_of_DimmerLights_Main 10AA                        _Mcu_Initialization 111E  
                __size_of_CC2500_PowerRST 0043              __end_of_setRF_TimeoutCleared 1EBC  
                    __end_of_my_MainTimer 16B5                            ?_DelayOff_Main 0070  
                        __CFG_FOSC$INTOSC 0000                    __end_of_LedPointSelect 1309  
                __size_of_CC2500_WriteREG 0021          setDimmerIntr_DimmingValue@lights 005A  
        getDimmerIntr_DimmingValue@lights 0074                 __end_of_CC2500_InitSetREG 1563  
                     ?_Mcu_Initialization 0070                      ?_Flash_Memory_Modify 0070  
             __size_of_setRF_DimmerLights 0066                            ?_DelayTime_1us 0072  
                    ?_Flash_Memory_Unlock 0070        __size_of_setDimmerIntr_MaxmumValue 0017  
               __end_of_CC2500_ReadStatus 1427                             ?_RF_RxDisable 0070  
          setDimmerIntr_Dimming_RF@lights 0074           getMain_All_Error_Status@command 0070  
                             ___ftdiv@exp 0035         __end_of_setDimmerLights_DimmingOn 14BD  
                        ??_Exception_Main 0075                            __end_of_IO_Set 1324  
                    _setRF_Initialization 1F4C                        _setMemory_LoopSave 10BA  
                             _Switch_Main 1F62                         __size_of_LED_Main 000C  
                        ?_getSw_KeyStatus 0070                            ?_CC2500_RxData 0070  
                          ?_CC2500_TxData 0070                   __end_of_getRF_KeyStatus 110D  
                        ??_setMemory_Data 0073                               ___ftmul@exp 0031  
                   _CC2500_PowerOnInitial 11C0               ??_DimmerIntr_Initialization 0058  
                    ??_Mcu_Initialization 0073               __end_of_getAll_Sw_KeyStatus 10FC  
                   ??_DelayOffPointSelect 0072                             ?_WDT_Clearing 0070  
                          ?_setCmd_Status 0072                       ?_setMemory_LoopSave 0070  
                          __end_of___bmul 10EB       __size_of_getDimmerIntr_DimmingValue 0014  
                    setRF_DimmerLights@on 0059                         getSw_KeyStatus@sw 0076  
             __size_of_RF_Timeout_Counter 0015                         __size_of_TMR1_ISR 0021  
        DimmerLights_SelectPointer@lights 0073                         __size_of_TMR1_Set 000C  
           __size_of_setDimmerLights_Main 0065                            __end_of_setLED 0AA1  
           __size_of_setDimmerLights_SwOn 006F                            __end_of_setBuz 0994  
              __end_of_DimmerLights_IOC_1 12A1                __end_of_DimmerLights_IOC_2 12BB  
                    _CC2500_FrequencyCabr 1F57                __size_of_Flash_Memory_Main 0041  
              __size_of_Flash_Memory_Read 0014                               ?_setRF_Main 0070  
                         _setRFSW_Control 16B5                         __size_of_WDT_Main 0010  
              __end_of_DimmerLights_TMR_1 12D5                __end_of_DimmerLights_TMR_2 12EF  
                     start_initialization 0021                           ?_LedPointSelect 0070  
                             __end_of_ISR 001F                    __size_of_getCmd_Status 0010  
                   ??_Flash_Memory_Modify 0076              ?_setDimmerIntr_ControlStatus 0072  
              __end_of_CC2500_InitPATable 1361                      ??_setMemory_LoopSave 0072  
                   ??_Flash_Memory_Unlock 0072                            ??_RF_RxDisable 0072  
  __end_of_getDimmerLights_PercentToValue 0A43   __size_of_getDimmerLights_PercentToValue 005B  
          _getDimmerLights_PercentToValue 09E8                              ?_Buzzer_Main 0070  
     getDimmerLights_PercentToValue@value 0054             setRF_AdjControl@dimmingStatus 0021  
                      _set_TimeoutCleared 1EC9         __end_of_setDimmerIntr_MaxmumValue 1241  
                                ??_IO_Set 0072                  __size_of_Timeout_Counter 0015  
                               _VarErrLED 00E8                               ?_setSw_Main 0070  
                  ?_setLED_Initialization 0070                     ?_setRF_Initialization 0070  
                       __size_of_Fosc_Set 0004                 __size_of_CC2500_WriteByte 0014  
                     ?_set_TimeoutCleared 0070                            ??_WDT_Clearing 0072  
                               _Rx_Length 00E3                     setProductData@address 0058  
                     Exception_Main@count 0021                       Exception_Main@error 0023  
                                ??___bmul 0073                    __size_of_SwPointSelect 0015  
        __end_of_getMain_All_LightsStatus 1FE2                                 _Tx_Length 006D  
                             __pdataBANK4 0220                                  ??_setLED 0074  
                                ?_ADC_Set 0070                                  ??_setBuz 0077  
                         ??_DelayOff_Main 0079                         ??_CC2500_ReadByte 0072  
             ?_DimmerLights_SelectPointer 0070          __end_of_getMain_All_Error_Status 1EAE  
                        _CC2500_SIDLEMode 1066                __size_of_DimmerLights_Main 0010  
                      setMemory_Data@data 0072                     ?_CC2500_FrequencyCabr 0070  
          setDimmerIntr_Dimming_Sw@lights 0074            getDimmerIntr_Dimming_Sw@lights 0073  
                           ??_setLED_Main 0073                         __size_of___awtoft 0022  
                       __size_of___ftpack 0063                                  ?_IOC_ISR 0070  
                             __pbssCOMMON 007A                                  ?_IOC_Set 0070  
          getDimmerIntr_Dimming_Sw@status 0072                                 ___latbits 0003  
                        _setMemory_Modify 106A                             __pcstackBANK0 0020  
               setRF_TransceiveGO@command 0073                             __pcstackBANK3 01EC  
                    ??_set_TimeoutCleared 0072                 _DimmerIntr_Initialization 0D66  
                         ??_DelayTime_1us 0074                __size_of_CC2500_InitSetREG 002A  
                           DlyOff_Main@sw 005B                         ??_CC2500_PowerRST 0078  
                                ?_RF_Main 0070                                  ?_WDT_Set 0070  
           ??_setDimmerIntr_ControlStatus 0073                              ??_TouchPower 0072  
                    __size_of_DlyOff_Main 0068                __size_of_CC2500_ReadStatus 0022  
          setDimmerIntr_MaxmumValue@value 0058               setDimmerLights_DimmingOn@sw 0074  
                       ??_CC2500_WriteREG 0075                             ??_setRF_Learn 0072  
                           _DimmerLights1 0153                             _DimmerLights2 015C  
                   CC2500_WriteREG@w_addr 0076                     setDelayOff_GO@command 0059  
                         ??_CC2500_RxData 0076                  setRFSW_AdjControl@status 005D  
                         ??_CC2500_TxData 0076                                 __pnvBANK0 006E  
                          getRxData@error 0065               __size_of_LED_Initialization 000C  
                    _setRF_TimeoutCleared 1EB8                    ?_CC2500_PowerOnInitial 0070  
      __size_of_DimmerIntr_ValueCalculate 001E                       __size_of_setRF_Main 00BF  
                        ___lwdiv@dividend 0074                     DelayOffPointSelect@sw 0073  
                           _getCmd_Status 108A                                setBuz@time 0024  
                         ??_setCmd_Status 0073                       setDelayOff_GO@value 005A  
                ?_setControl_Lights_Table 0070                          ?_getRF_KeyStatus 0070  
                               _getBuz_GO 10AA                  ?_setDimmerLights_Dimming 005E  
     __end_of_Flash_Memory_Initialization 0383               _Flash_Memory_Initialization 02B8  
                                ?___awdiv 0072                                 __ptext100 0D66  
                               __ptext101 106A                                 __ptext110 1EF7  
                               __ptext102 085F                                 __ptext111 0CFE  
                               __ptext103 09E8                                 __ptext120 1EEF  
                               __ptext112 1F79                                 __ptext104 0E69  
                               __ptext121 1EC4                                 __ptext113 0791  
                               __ptext105 04FF                                 __ptext130 12A1  
                               __ptext122 116C                                 __ptext114 0941  
                               __ptext106 05B3                                 __ptext131 1287  
                               __ptext123 0819                                 __ptext115 0994  
                               __ptext107 01C2                                 __ptext124 1EA8  
                               __ptext116 1214                                 __ptext108 13E3  
                               __ptext117 15CE                                 __ptext109 0AA1  
                                ?___ftadd 0037                                 __ptext126 13A1  
                               __ptext118 1FB5                                 __ptext127 12D5  
                               __ptext119 1181                                 __ptext128 12BB  
                               __ptext129 1F6D                                 _getRxData 0BCD  
                                ?___ftdiv 0027                                  ?___ftmul 0027  
                                ?___fttol 0044                     __size_of_my_MainTimer 003C  
                                ?___lwdiv 0072                   __end_of_setRFSW_Control 16F5  
                        ??_setProductData 0057             __size_of_setSw_Initialization 0007  
          __size_of_Buzzer_Initialization 0003             __end_of_Buzzer_Initialization 1EAB  
                           ??_setLog_Code 0059                        __end_of_TouchPower 11FF  
                     __size_of_setSw_Main 0171              CC2500_ReadStatus@status_addr 0075  
      __end_of_getDimmerIntr_DimmingValue 1144              ??_setDimmerIntr_DimmingValue 0059  
              _getDimmerIntr_DimmingValue 1130                    CC2500_WriteByte@loop_a 0073  
                                ?_setData 0070            __size_of_setDimmerLights_OnOff 00BD  
                       ?_setRF_AdjControl 0070                                 _r_address 00E5  
           __end_of_setDimmerLights_OnOff 04FF            __size_of_setDimmerLights_SwOff 0038  
          __size_of_myMain_Initialization 000F             __end_of_setDimmerLights_SwOff 1606  
            __end_of_CC2500_patable_vaule 1066             __end_of_myMain_Initialization 2000  
                        ___lwdiv@quotient 0021                        ??_setRF_AdjControl 0076  
                           _SwPointSelect 11FF                       __end_of_setLED_Main 1779  
                        ??_getDelayOff_GO 0074                    ??_setRF_Initialization 0072  
                       _CC2500_rfSettings 102F                                  _LED_Main 1F9D  
                         SwPointSelect@sw 0073                                 clear_ram0 1ED4  
                CC2500_InitPATable@loop_d 0021                     ?_setRF_TimeoutCleared 0070  
                            _my_MainTimer 1679                                 _setTxData 1EDA  
     __end_of_DimmerLights_Initialization 1F36               _DimmerLights_Initialization 1F2B  
                  _Flash_Memory_Main$3384 0021                        _CC2500_ClearRXFIFO 1EBC  
                          ?_getCmd_Status 0070                        _CC2500_ClearTXFIFO 1EC0  
                _getDimmerIntr_Dimming_Sw 1214                  setRF_DimmerLights@lights 005D  
                                _GO_nDONE 04E9                       __end_of_setRF_Learn 111E  
                       ??_Timeout_Counter 0072                                ?_getBuz_GO 0072  
                setRF_DimmerLights@status 005C      __size_of_setDimmerIntr_ControlStatus 0029  
             __size_of_setRFSW_AdjControl 0087       __size_of_setDimmerIntr_DimmingValue 0017  
                      _Flash_Memory_Write 150F                                ?_getRxData 0070  
                                _TMR1_ISR 13A1                    CC2500_InitSetREG@temp1 0020  
                  CC2500_InitSetREG@temp2 0021                                  _TMR1_Set 1FA9  
                     ?_CC2500_ClearRXFIFO 0070                       ?_CC2500_ClearTXFIFO 0070  
                      _setRF_TransceiveGO 107A                                  _RF_Count 00DB  
                    __end_of_RF_RxDisable 1F07               __end_of_CC2500_WriteCommand 0819  
                  ??_CC2500_FrequencyCabr 0078                                  _WDT_Main 10CA  
                 DlyOff_Initialization@sw 0074                     getSw_KeyStatus@status 0075  
                        __size_of_ADC_Set 0007                       ?_Flash_Memory_Write 0070  
                     ?_setRF_TransceiveGO 0070                   __size_of_setDelayOff_GO 0084  
                                _DelayOff 0069                              setSw_Main@sw 002E  
                        __size_of_IOC_ISR 000C            getMain_All_Error_Status@status 0072  
                        __size_of_IOC_Set 000B              __end_of_Flash_Memory_Erasing 1F91  
                          ?_SwPointSelect 0070                            setLED_Main@led 0075  
                    __end_of_WDT_Clearing 0004                       __end_of_setLog_Code 1597  
                   _DlyOff_Initialization 1EC4         __size_of_getMain_All_LightsStatus 000F  
                    ??_CC2500_ClearRXFIFO 0076                 ?_getMain_All_LightsStatus 0070  
                    ??_CC2500_ClearTXFIFO 0076                 __end_of_CC2500_rfSettings 105E  
                        __size_of_RF_Main 0003                  _setDimmerIntr_Dimming_RF 14E6  
             setDimmerLights_OnOff@lights 0064                  _setDimmerIntr_Dimming_Sw 144C  
                                _Fosc_Set 1EB4                          __size_of_WDT_Set 0009  
                   setRFSW_Control@status 0062                     _Switch_Initialization 1F07  
       __size_of_getMain_All_Error_Status 0003                      ??_Flash_Memory_Write 0072  
               ?_getMain_All_Error_Status 0070                      __size_of_Buzzer_Main 0046  
                              ?_setTxData 0070                              ?_Switch_Main 0070  
                        _CC2500_WriteByte 1158       __size_of_DimmerLights_SelectPointer 0015  
                    ??_setRF_TransceiveGO 0072                                  _SwDetect 00E4  
                        getCmd_Status@cmd 0073                          setCmd_Status@cmd 0072  
                       setRFSW_Control@sw 0063          ??_getDimmerLights_ValueToPercent 0079  
         ?_getDimmerLights_ValueToPercent 0070                                 setLED@led 0074  
                        __size_of___awdiv 0054                          __size_of___ftadd 00F6  
                        ?_setRFSW_Control 0070                          __size_of___ftdiv 00A9  
                        __size_of___ftmul 00B4                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                  setDimmerLights_SwOn@idle 002A  
                                ___awtoft 13E3                          ??_LedPointSelect 0072  
                                ___ftpack 0AA1                              ??_setRF_Main 0066  
                    CC2500_WriteREG@value 0074                               _setLED_Main 1736  
              __end_of_setRF_DimmerLights 0C98                  ?_DelayOff_Initialization 0070  
                        getDelayOff_GO@go 0075                          getDelayOff_GO@sw 0074  
                        setDelayOff_GO@sw 0060                           ___lwdiv@divisor 0072  
                        __size_of_setData 0050                           ___lwdiv@counter 0020  
                                __ptext10 11FF                                  __ptext11 11EA  
                                __ptext20 1563                                  __ptext12 1EC9  
                                __ptext21 10BA                                  __ptext13 11D5  
                                __ptext30 1EFF                                  __ptext22 065C  
                                __ptext14 1F07                                  __ptext31 0C98  
                                __ptext23 1606                                  __ptext15 1EE8  
                                __ptext40 13C2                                  __ptext32 0B04  
                                __ptext24 16B5                                  __ptext16 1EB1  
                                __ptext41 1F57                                  __ptext33 1405  
                                __ptext25 0EF0                                  __ptext17 0383  
                                __ptext50 1F4C                                  __ptext42 1471  
                                __ptext34 1258                                  __ptext26 126F  
                                __ptext18 08F1                                  __ptext51 111E  
                                __ptext43 1EC0                                  __ptext35 11C0  
                                __ptext27 10FC                                  __ptext19 0BCD  
                                __ptext60 1F91                                  __ptext52 1F18  
                                __ptext44 1EBC                                  __ptext36 1066  
                                __ptext28 10AA                                  __ptext61 1FE2  
                                __ptext53 1FA9                                  __ptext45 0800  
                                __ptext37 1779                                  __ptext29 1597  
                                __ptext70 1144                                  __ptext62 16F5  
                                __ptext54 1309                                  __ptext46 1EB8  
                                __ptext38 1539                                  __ptext71 163F  
                                __ptext63 10EB                                  __ptext55 1F41  
                                __ptext47 11AB                                  __ptext39 1342  
                                __ptext80 1241                                  __ptext72 1EAB  
                                __ptext64 0F77                                  __ptext56 1EB4  
                                __ptext48 1158                                  __ptext81 14BD  
                                __ptext73 109A                                  __ptext65 1F85  
                                __ptext57 1EE1                                  __ptext49 1EAE  
                                __ptext90 107A                                  __ptext82 0DE5  
                                __ptext74 0B68                                  __ptext66 02B8  
                                __ptext58 1F9D                                  __ptext91 0C32  
                                __ptext83 10DA                                  __ptext75 0442  
                                __ptext67 1F36                                  __ptext59 1736  
                                __ptext92 122A                                  __ptext84 1196  
                                __ptext76 0A43                                  __ptext68 150F  
                                __ptext93 144C                                  __ptext85 1FD3  
                                __ptext77 12EF                                  __ptext69 1F0F  
                                __ptext94 1130                                  __ptext86 1FC4  
                                __ptext78 1F21                                  __ptext95 1427  
                                __ptext87 108A                                  __ptext79 14E6  
                                __ptext96 06F7                                  __ptext88 08A5  
                                __ptext97 1324                                  __ptext89 1EDA  
                                __ptext98 1F2B                                  __ptext99 1EA7  
                                __product 0220                   ??_setLED_Initialization 0075  
                ??_getDimmerLights_Status 0074              __end_of_setDimmerLights_Main 0BCD  
                      _DimmerLights_IOC_1 1287                        _DimmerLights_IOC_2 12A1  
            __end_of_setDimmerLights_SwOn 0800                              ??_setSw_Main 002C  
                  ??_setRF_TimeoutCleared 0072              ??_setDimmerLights_DimmingRun 0075  
                           setLED@command 0073                             __size_of_main 0044  
                             _setRF_Learn 110D        __size_of_DimmerIntr_Initialization 007F  
                         ??_getCmd_Status 0072                        _DimmerLights_TMR_1 12BB  
                      _DimmerLights_TMR_2 12D5                  __end_of_CC2500_SIDLEMode 106A  
              setDimmerLights_Main@lights 0065               __end_of_DelayOffPointSelect 1181  
              CC2500_WriteCommand@command 0075                           _CC2500_ReadByte 1258  
              ?_setDimmerLights_DimmingOn 0070                        _CC2500_InitPATable 1342  
                __end_of_setMemory_Modify 107A                       ?_DimmerLights_IOC_1 0070  
                     ?_DimmerLights_IOC_2 0070                        __end_of_setRF_Main 0442  
                             ??_getBuz_GO 0074                       ?_DimmerLights_TMR_1 0070  
                     ?_DimmerLights_TMR_2 0070               __size_of_Mcu_Initialization 0012  
                    _CC2500_patable_vaule 105E                               ??_getRxData 0064  
              __end_of_RF_Timeout_Counter 11C0               Flash_Memory_Main@key_Status 0020  
                _getAll_Sw_KeyStatus$6665 0074                                  main@argc 01EC  
                                main@argv 01EE                       ?_CC2500_InitPATable 0070  
                    _getSw_KeyStatus$6661 0073                      _getSw_KeyStatus$6662 0074  
     getDimmerLights_ValueToPercent@value 0052                           _CC2500_PowerRST 1779  
                __size_of_getSw_KeyStatus 0020              setDimmerLights_Dimming@value 0060  
      __end_of_setDimmerIntr_DimmingValue 1258                _setDimmerIntr_DimmingValue 1241  
             __end_of_Flash_Memory_Modify 1000              __size_of_getAll_Sw_KeyStatus 0011  
                             _setLog_Code 1563               __end_of_Flash_Memory_Unlock 1F18  
                         ??_SwPointSelect 0072                           _CC2500_WriteREG 13C2  
                      __end_of_setSw_Main 01C2                      ??_DimmerLights_IOC_1 0070  
                    ??_DimmerLights_IOC_2 0070           getDimmerLights_PercentToValue@i 0055  
     __size_of_setDimmerLights_DimmingRun 0018                             _Transceive_OK 03C9  
                  ?_DlyOff_Initialization 0070                      ??_DimmerLights_TMR_1 0070  
                    ??_DimmerLights_TMR_2 0070                               pic14e$flags 007E  
            ??_getDimmerIntr_DimmingValue 0072                   setDimmerLights_SwOff@sw 0074  
             __size_of_setMemory_LoopSave 0010                                  intlevel1 0000  
                    ??_CC2500_InitPATable 0077                    ?_Switch_Initialization 0070  
                         setDelayOff_GO@i 005D                           setDelayOff_GO@j 005E  
                         setDelayOff_GO@k 005F                   ??_CC2500_PowerOnInitial 0079  
  __end_of_setDimmerLights_Initialization 1EA8   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 1EA7                ?_setDimmerIntr_MaxmumValue 0058  
                             ??_setTxData 0072                    CC2500_InitPATable@temp 0020  
                   __size_of_RF_RxDisable 0008                         _RF_Initialization 1EAE  
                    _Flash_Memory_Erasing 1F85                        ?_RF_Initialization 0070  
                              _SPI0Buffer 006B                   __size_of_Exception_Main 003A  
         __end_of_DelayOff_Initialization 1EF7                     __size_of_WDT_Clearing 0002  
                   __end_of_DelayOff_Main 1EFF                       ??_RF_Initialization 0073  
                 __size_of_setMemory_Data 000B                            _setDelayOff_GO 0DE5  
             ?_getDimmerIntr_DimmingValue 0070          __size_of_setControl_Lights_Table 009B  
        __size_of_setDimmerLights_Dimming 004C      __size_of_Flash_Memory_Initialization 00CB  
             __size_of_set_TimeoutCleared 0005                             ??_DlyOff_Main 0059  
                   setMemory_Data@address 0074                     __end_of_DelayTime_1us 1496  
              ??_getDimmerIntr_Dimming_Sw 0072                   __end_of_CC2500_ReadByte 126F  
            __end_of_setSw_Initialization 1EEF                           _Timeout_Counter 11D5  
         __size_of_getDimmerLights_Status 000F           getDimmerLights_ValueToPercent@i 0053  
                            _RF_RxDisable 1EFF          Flash_Memory_Initialization@value 0077  
              __end_of_LED_Initialization 1F9D                   setMemory_Modify@command 0073  
               __end_of_RF_Initialization 1EB1                 __size_of_setRF_AdjControl 0039  
                   __end_of_CC2500_RxData 0B68                     __end_of_CC2500_TxData 0CFE  
                 __end_of_CC2500_PowerRST 17BC  
