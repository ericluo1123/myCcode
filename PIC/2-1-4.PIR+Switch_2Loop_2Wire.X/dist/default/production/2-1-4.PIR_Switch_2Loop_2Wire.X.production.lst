

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jan 13 16:51:38 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0096                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009F                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0186                     	;# 
   133  018C                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0096                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009F                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0186                     	;# 
   202  018C                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0096                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009F                     	;# 
   261  0108                     	;# 
   262  0109                     	;# 
   263  010C                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010D                     	;# 
   267  010E                     	;# 
   268  010F                     	;# 
   269  0185                     	;# 
   270  0186                     	;# 
   271  018C                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  000E                     	;# 
   287  000F                     	;# 
   288  0010                     	;# 
   289  0011                     	;# 
   290  0012                     	;# 
   291  0013                     	;# 
   292  0014                     	;# 
   293  0015                     	;# 
   294  0015                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001B                     	;# 
   301  001B                     	;# 
   302  001C                     	;# 
   303  001D                     	;# 
   304  001E                     	;# 
   305  001F                     	;# 
   306  0081                     	;# 
   307  0085                     	;# 
   308  0086                     	;# 
   309  0087                     	;# 
   310  0089                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  008F                     	;# 
   315  0090                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0096                     	;# 
   325  0098                     	;# 
   326  0099                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009F                     	;# 
   330  0108                     	;# 
   331  0109                     	;# 
   332  010C                     	;# 
   333  010C                     	;# 
   334  010D                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0185                     	;# 
   339  0186                     	;# 
   340  018C                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0089                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0096                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009F                     	;# 
   399  0108                     	;# 
   400  0109                     	;# 
   401  010C                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0186                     	;# 
   409  018C                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  000E                     	;# 
   424  000E                     	;# 
   425  000F                     	;# 
   426  0010                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0014                     	;# 
   431  0015                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001D                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  0081                     	;# 
   445  0085                     	;# 
   446  0086                     	;# 
   447  0087                     	;# 
   448  0089                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  008F                     	;# 
   453  0090                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0093                     	;# 
   458  0094                     	;# 
   459  0095                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0096                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009F                     	;# 
   468  0108                     	;# 
   469  0109                     	;# 
   470  010C                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0186                     	;# 
   478  018C                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  0081                     	;# 
   514  0085                     	;# 
   515  0086                     	;# 
   516  0087                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0095                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0096                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009F                     	;# 
   537  0108                     	;# 
   538  0109                     	;# 
   539  010C                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  010F                     	;# 
   545  0185                     	;# 
   546  0186                     	;# 
   547  018C                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0089                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  008F                     	;# 
   591  0090                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0095                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0096                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009F                     	;# 
   606  0108                     	;# 
   607  0109                     	;# 
   608  010C                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010D                     	;# 
   612  010E                     	;# 
   613  010F                     	;# 
   614  0185                     	;# 
   615  0186                     	;# 
   616  018C                     	;# 
   617  0000                     	;# 
   618  0001                     	;# 
   619  0002                     	;# 
   620  0003                     	;# 
   621  0004                     	;# 
   622  0005                     	;# 
   623  0006                     	;# 
   624  0007                     	;# 
   625  0009                     	;# 
   626  000A                     	;# 
   627  000B                     	;# 
   628  000C                     	;# 
   629  000D                     	;# 
   630  000E                     	;# 
   631  000E                     	;# 
   632  000F                     	;# 
   633  0010                     	;# 
   634  0011                     	;# 
   635  0012                     	;# 
   636  0013                     	;# 
   637  0014                     	;# 
   638  0015                     	;# 
   639  0015                     	;# 
   640  0016                     	;# 
   641  0017                     	;# 
   642  0018                     	;# 
   643  0019                     	;# 
   644  001A                     	;# 
   645  001B                     	;# 
   646  001B                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  0081                     	;# 
   652  0085                     	;# 
   653  0086                     	;# 
   654  0087                     	;# 
   655  0089                     	;# 
   656  008C                     	;# 
   657  008D                     	;# 
   658  008E                     	;# 
   659  008F                     	;# 
   660  0090                     	;# 
   661  0091                     	;# 
   662  0092                     	;# 
   663  0093                     	;# 
   664  0093                     	;# 
   665  0094                     	;# 
   666  0095                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0096                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009F                     	;# 
   675  0108                     	;# 
   676  0109                     	;# 
   677  010C                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0186                     	;# 
   685  018C                     	;# 
   686  0000                     	;# 
   687  0001                     	;# 
   688  0002                     	;# 
   689  0003                     	;# 
   690  0004                     	;# 
   691  0005                     	;# 
   692  0006                     	;# 
   693  0007                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0089                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008F                     	;# 
   729  0090                     	;# 
   730  0091                     	;# 
   731  0092                     	;# 
   732  0093                     	;# 
   733  0093                     	;# 
   734  0094                     	;# 
   735  0095                     	;# 
   736  0095                     	;# 
   737  0096                     	;# 
   738  0096                     	;# 
   739  0098                     	;# 
   740  0099                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009F                     	;# 
   744  0108                     	;# 
   745  0109                     	;# 
   746  010C                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010D                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0185                     	;# 
   753  0186                     	;# 
   754  018C                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0009                     	;# 
   764  000A                     	;# 
   765  000B                     	;# 
   766  000C                     	;# 
   767  000D                     	;# 
   768  000E                     	;# 
   769  000E                     	;# 
   770  000F                     	;# 
   771  0010                     	;# 
   772  0011                     	;# 
   773  0012                     	;# 
   774  0013                     	;# 
   775  0014                     	;# 
   776  0015                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0017                     	;# 
   780  0018                     	;# 
   781  0019                     	;# 
   782  001A                     	;# 
   783  001B                     	;# 
   784  001B                     	;# 
   785  001C                     	;# 
   786  001D                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  0081                     	;# 
   790  0085                     	;# 
   791  0086                     	;# 
   792  0087                     	;# 
   793  0089                     	;# 
   794  008C                     	;# 
   795  008D                     	;# 
   796  008E                     	;# 
   797  008F                     	;# 
   798  0090                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0093                     	;# 
   802  0093                     	;# 
   803  0094                     	;# 
   804  0095                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0096                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009C                     	;# 
   811  009D                     	;# 
   812  009F                     	;# 
   813  0108                     	;# 
   814  0109                     	;# 
   815  010C                     	;# 
   816  010C                     	;# 
   817  010D                     	;# 
   818  010D                     	;# 
   819  010E                     	;# 
   820  010F                     	;# 
   821  0185                     	;# 
   822  0186                     	;# 
   823  018C                     	;# 
   824  0000                     	;# 
   825  0001                     	;# 
   826  0002                     	;# 
   827  0003                     	;# 
   828  0004                     	;# 
   829  0005                     	;# 
   830  0006                     	;# 
   831  0007                     	;# 
   832  0009                     	;# 
   833  000A                     	;# 
   834  000B                     	;# 
   835  000C                     	;# 
   836  000D                     	;# 
   837  000E                     	;# 
   838  000E                     	;# 
   839  000F                     	;# 
   840  0010                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0014                     	;# 
   845  0015                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001B                     	;# 
   854  001C                     	;# 
   855  001D                     	;# 
   856  001E                     	;# 
   857  001F                     	;# 
   858  0081                     	;# 
   859  0085                     	;# 
   860  0086                     	;# 
   861  0087                     	;# 
   862  0089                     	;# 
   863  008C                     	;# 
   864  008D                     	;# 
   865  008E                     	;# 
   866  008F                     	;# 
   867  0090                     	;# 
   868  0091                     	;# 
   869  0092                     	;# 
   870  0093                     	;# 
   871  0093                     	;# 
   872  0094                     	;# 
   873  0095                     	;# 
   874  0095                     	;# 
   875  0096                     	;# 
   876  0096                     	;# 
   877  0098                     	;# 
   878  0099                     	;# 
   879  009C                     	;# 
   880  009D                     	;# 
   881  009F                     	;# 
   882  0108                     	;# 
   883  0109                     	;# 
   884  010C                     	;# 
   885  010C                     	;# 
   886  010D                     	;# 
   887  010D                     	;# 
   888  010E                     	;# 
   889  010F                     	;# 
   890  0185                     	;# 
   891  0186                     	;# 
   892  018C                     	;# 
   893  0000                     	;# 
   894  0001                     	;# 
   895  0002                     	;# 
   896  0003                     	;# 
   897  0004                     	;# 
   898  0005                     	;# 
   899  0006                     	;# 
   900  0007                     	;# 
   901  0009                     	;# 
   902  000A                     	;# 
   903  000B                     	;# 
   904  000C                     	;# 
   905  000D                     	;# 
   906  000E                     	;# 
   907  000E                     	;# 
   908  000F                     	;# 
   909  0010                     	;# 
   910  0011                     	;# 
   911  0012                     	;# 
   912  0013                     	;# 
   913  0014                     	;# 
   914  0015                     	;# 
   915  0015                     	;# 
   916  0016                     	;# 
   917  0017                     	;# 
   918  0018                     	;# 
   919  0019                     	;# 
   920  001A                     	;# 
   921  001B                     	;# 
   922  001B                     	;# 
   923  001C                     	;# 
   924  001D                     	;# 
   925  001E                     	;# 
   926  001F                     	;# 
   927  0081                     	;# 
   928  0085                     	;# 
   929  0086                     	;# 
   930  0087                     	;# 
   931  0089                     	;# 
   932  008C                     	;# 
   933  008D                     	;# 
   934  008E                     	;# 
   935  008F                     	;# 
   936  0090                     	;# 
   937  0091                     	;# 
   938  0092                     	;# 
   939  0093                     	;# 
   940  0093                     	;# 
   941  0094                     	;# 
   942  0095                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0096                     	;# 
   946  0098                     	;# 
   947  0099                     	;# 
   948  009C                     	;# 
   949  009D                     	;# 
   950  009F                     	;# 
   951  0108                     	;# 
   952  0109                     	;# 
   953  010C                     	;# 
   954  010C                     	;# 
   955  010D                     	;# 
   956  010D                     	;# 
   957  010E                     	;# 
   958  010F                     	;# 
   959  0185                     	;# 
   960  0186                     	;# 
   961  018C                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0009                     	;# 
   971  000A                     	;# 
   972  000B                     	;# 
   973  000C                     	;# 
   974  000D                     	;# 
   975  000E                     	;# 
   976  000E                     	;# 
   977  000F                     	;# 
   978  0010                     	;# 
   979  0011                     	;# 
   980  0012                     	;# 
   981  0013                     	;# 
   982  0014                     	;# 
   983  0015                     	;# 
   984  0015                     	;# 
   985  0016                     	;# 
   986  0017                     	;# 
   987  0018                     	;# 
   988  0019                     	;# 
   989  001A                     	;# 
   990  001B                     	;# 
   991  001B                     	;# 
   992  001C                     	;# 
   993  001D                     	;# 
   994  001E                     	;# 
   995  001F                     	;# 
   996  0081                     	;# 
   997  0085                     	;# 
   998  0086                     	;# 
   999  0087                     	;# 
  1000  0089                     	;# 
  1001  008C                     	;# 
  1002  008D                     	;# 
  1003  008E                     	;# 
  1004  008F                     	;# 
  1005  0090                     	;# 
  1006  0091                     	;# 
  1007  0092                     	;# 
  1008  0093                     	;# 
  1009  0093                     	;# 
  1010  0094                     	;# 
  1011  0095                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0096                     	;# 
  1015  0098                     	;# 
  1016  0099                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009F                     	;# 
  1020  0108                     	;# 
  1021  0109                     	;# 
  1022  010C                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010D                     	;# 
  1026  010E                     	;# 
  1027  010F                     	;# 
  1028  0185                     	;# 
  1029  0186                     	;# 
  1030  018C                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0009                     	;# 
  1040  000A                     	;# 
  1041  000B                     	;# 
  1042  000C                     	;# 
  1043  000D                     	;# 
  1044  000E                     	;# 
  1045  000E                     	;# 
  1046  000F                     	;# 
  1047  0010                     	;# 
  1048  0011                     	;# 
  1049  0012                     	;# 
  1050  0013                     	;# 
  1051  0014                     	;# 
  1052  0015                     	;# 
  1053  0015                     	;# 
  1054  0016                     	;# 
  1055  0017                     	;# 
  1056  0018                     	;# 
  1057  0019                     	;# 
  1058  001A                     	;# 
  1059  001B                     	;# 
  1060  001B                     	;# 
  1061  001C                     	;# 
  1062  001D                     	;# 
  1063  001E                     	;# 
  1064  001F                     	;# 
  1065  0081                     	;# 
  1066  0085                     	;# 
  1067  0086                     	;# 
  1068  0087                     	;# 
  1069  0089                     	;# 
  1070  008C                     	;# 
  1071  008D                     	;# 
  1072  008E                     	;# 
  1073  008F                     	;# 
  1074  0090                     	;# 
  1075  0091                     	;# 
  1076  0092                     	;# 
  1077  0093                     	;# 
  1078  0093                     	;# 
  1079  0094                     	;# 
  1080  0095                     	;# 
  1081  0095                     	;# 
  1082  0096                     	;# 
  1083  0096                     	;# 
  1084  0098                     	;# 
  1085  0099                     	;# 
  1086  009C                     	;# 
  1087  009D                     	;# 
  1088  009F                     	;# 
  1089  0108                     	;# 
  1090  0109                     	;# 
  1091  010C                     	;# 
  1092  010C                     	;# 
  1093  010D                     	;# 
  1094  010D                     	;# 
  1095  010E                     	;# 
  1096  010F                     	;# 
  1097  0185                     	;# 
  1098  0186                     	;# 
  1099  018C                     	;# 
  1100  0000                     	;# 
  1101  0001                     	;# 
  1102  0002                     	;# 
  1103  0003                     	;# 
  1104  0004                     	;# 
  1105  0005                     	;# 
  1106  0006                     	;# 
  1107  0007                     	;# 
  1108  0009                     	;# 
  1109  000A                     	;# 
  1110  000B                     	;# 
  1111  000C                     	;# 
  1112  000D                     	;# 
  1113  000E                     	;# 
  1114  000E                     	;# 
  1115  000F                     	;# 
  1116  0010                     	;# 
  1117  0011                     	;# 
  1118  0012                     	;# 
  1119  0013                     	;# 
  1120  0014                     	;# 
  1121  0015                     	;# 
  1122  0015                     	;# 
  1123  0016                     	;# 
  1124  0017                     	;# 
  1125  0018                     	;# 
  1126  0019                     	;# 
  1127  001A                     	;# 
  1128  001B                     	;# 
  1129  001B                     	;# 
  1130  001C                     	;# 
  1131  001D                     	;# 
  1132  001E                     	;# 
  1133  001F                     	;# 
  1134  0081                     	;# 
  1135  0085                     	;# 
  1136  0086                     	;# 
  1137  0087                     	;# 
  1138  0089                     	;# 
  1139  008C                     	;# 
  1140  008D                     	;# 
  1141  008E                     	;# 
  1142  008F                     	;# 
  1143  0090                     	;# 
  1144  0091                     	;# 
  1145  0092                     	;# 
  1146  0093                     	;# 
  1147  0093                     	;# 
  1148  0094                     	;# 
  1149  0095                     	;# 
  1150  0095                     	;# 
  1151  0096                     	;# 
  1152  0096                     	;# 
  1153  0098                     	;# 
  1154  0099                     	;# 
  1155  009C                     	;# 
  1156  009D                     	;# 
  1157  009F                     	;# 
  1158  0108                     	;# 
  1159  0109                     	;# 
  1160  010C                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010D                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0185                     	;# 
  1167  0186                     	;# 
  1168  018C                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0009                     	;# 
  1178  000A                     	;# 
  1179  000B                     	;# 
  1180  000C                     	;# 
  1181  000D                     	;# 
  1182  000E                     	;# 
  1183  000E                     	;# 
  1184  000F                     	;# 
  1185  0010                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0015                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  001A                     	;# 
  1197  001B                     	;# 
  1198  001B                     	;# 
  1199  001C                     	;# 
  1200  001D                     	;# 
  1201  001E                     	;# 
  1202  001F                     	;# 
  1203  0081                     	;# 
  1204  0085                     	;# 
  1205  0086                     	;# 
  1206  0087                     	;# 
  1207  0089                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  008E                     	;# 
  1211  008F                     	;# 
  1212  0090                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0093                     	;# 
  1216  0093                     	;# 
  1217  0094                     	;# 
  1218  0095                     	;# 
  1219  0095                     	;# 
  1220  0096                     	;# 
  1221  0096                     	;# 
  1222  0098                     	;# 
  1223  0099                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009F                     	;# 
  1227  0108                     	;# 
  1228  0109                     	;# 
  1229  010C                     	;# 
  1230  010C                     	;# 
  1231  010D                     	;# 
  1232  010D                     	;# 
  1233  010E                     	;# 
  1234  010F                     	;# 
  1235  0185                     	;# 
  1236  0186                     	;# 
  1237  018C                     	;# 
  1238  0000                     	;# 
  1239  0001                     	;# 
  1240  0002                     	;# 
  1241  0003                     	;# 
  1242  0004                     	;# 
  1243  0005                     	;# 
  1244  0006                     	;# 
  1245  0007                     	;# 
  1246  0009                     	;# 
  1247  000A                     	;# 
  1248  000B                     	;# 
  1249  000C                     	;# 
  1250  000D                     	;# 
  1251  000E                     	;# 
  1252  000E                     	;# 
  1253  000F                     	;# 
  1254  0010                     	;# 
  1255  0011                     	;# 
  1256  0012                     	;# 
  1257  0013                     	;# 
  1258  0014                     	;# 
  1259  0015                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0017                     	;# 
  1263  0018                     	;# 
  1264  0019                     	;# 
  1265  001A                     	;# 
  1266  001B                     	;# 
  1267  001B                     	;# 
  1268  001C                     	;# 
  1269  001D                     	;# 
  1270  001E                     	;# 
  1271  001F                     	;# 
  1272  0081                     	;# 
  1273  0085                     	;# 
  1274  0086                     	;# 
  1275  0087                     	;# 
  1276  0089                     	;# 
  1277  008C                     	;# 
  1278  008D                     	;# 
  1279  008E                     	;# 
  1280  008F                     	;# 
  1281  0090                     	;# 
  1282  0091                     	;# 
  1283  0092                     	;# 
  1284  0093                     	;# 
  1285  0093                     	;# 
  1286  0094                     	;# 
  1287  0095                     	;# 
  1288  0095                     	;# 
  1289  0096                     	;# 
  1290  0096                     	;# 
  1291  0098                     	;# 
  1292  0099                     	;# 
  1293  009C                     	;# 
  1294  009D                     	;# 
  1295  009F                     	;# 
  1296  0108                     	;# 
  1297  0109                     	;# 
  1298  010C                     	;# 
  1299  010C                     	;# 
  1300  010D                     	;# 
  1301  010D                     	;# 
  1302  010E                     	;# 
  1303  010F                     	;# 
  1304  0185                     	;# 
  1305  0186                     	;# 
  1306  018C                     	;# 
  1307  001F                     _ADCON0	set	31
  1308  001E                     _ADRES	set	30
  1309  0005                     _PORTA	set	5
  1310  0006                     _PORTB	set	6
  1311  0007                     _PORTC	set	7
  1312  0010                     _T1CON	set	16
  1313  000F                     _TMR1H	set	15
  1314  000E                     _TMR1L	set	14
  1315  005F                     _GIE	set	95
  1316  00F9                     _GO_nDONE	set	249
  1317  005E                     _PEIE	set	94
  1318  002E                     _RA6	set	46
  1319  002F                     _RA7	set	47
  1320  0034                     _RB4	set	52
  1321  0035                     _RB5	set	53
  1322  0039                     _RC1	set	57
  1323  003E                     _RC6	set	62
  1324  003F                     _RC7	set	63
  1325  0060                     _TMR1IF	set	96
  1326  009F                     _ADCON1	set	159
  1327  009D                     _FVRCON	set	157
  1328  0090                     _OSCCON	set	144
  1329  0085                     _TRISA	set	133
  1330  0086                     _TRISB	set	134
  1331  0087                     _TRISC	set	135
  1332  0095                     _WPUB	set	149
  1333  0408                     _PS0	set	1032
  1334  0409                     _PS1	set	1033
  1335  040A                     _PS2	set	1034
  1336  040B                     _PSA	set	1035
  1337  0460                     _TMR1IE	set	1120
  1338  04A9                     _WPUB1	set	1193
  1339  0185                     _ANSELA	set	389
  1340  0186                     _ANSELB	set	390
  1341                           
  1342                           	psect	text0
  1343  0000                     __ptext0:	
  1344                           ; #config settings
  1345                           
  1346                           
  1347                           ;psect for function _TMR1_ISR
  1348  0000                     
  1349                           	psect	cinit
  1350  0013                     start_initialization:	
  1351  0013                     __initialization:	
  1352                           
  1353                           ; Clear objects allocated to COMMON
  1354  0013  01F6               	clrf	__pbssCOMMON& (0+127)
  1355  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1356  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1357  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1358                           
  1359                           ; Clear objects allocated to BANK0
  1360  0017  1383               	bcf	3,7	;select IRP bank0
  1361  0018  3020               	movlw	low __pbssBANK0
  1362  0019  0084               	movwf	4
  1363  001A  3053               	movlw	low (__pbssBANK0+51)
  1364  001B  158A  267A  118A   	fcall	clear_ram0
  1365                           
  1366                           ; Clear objects allocated to BANK1
  1367  001E  30A0               	movlw	low __pbssBANK1
  1368  001F  0084               	movwf	4
  1369  0020  30CE               	movlw	low (__pbssBANK1+46)
  1370  0021  158A  267A         	fcall	clear_ram0
  1371  0023                     end_of_initialization:	
  1372                           ;End of C runtime variable initialization code
  1373                           
  1374  0023                     __end_of__initialization:	
  1375  0023  0183               	clrf	3
  1376  0024  118A  2E98         	ljmp	_main	;jump to C main() function
  1377                           
  1378                           	psect	bssCOMMON
  1379  0076                     __pbssCOMMON:	
  1380  0076                     _LED:	
  1381  0076                     	ds	1
  1382  0077                     _Lights:	
  1383  0077                     	ds	1
  1384  0078                     _LightsControl:	
  1385  0078                     	ds	1
  1386  0079                     _Sw:	
  1387  0079                     	ds	1
  1388                           
  1389                           	psect	bssBANK0
  1390  0020                     __pbssBANK0:	
  1391  0020                     _myMain:	
  1392  0020                     	ds	6
  1393  0026                     __CDS:	
  1394  0026                     	ds	5
  1395  002B                     _PIRLED:	
  1396  002B                     	ds	4
  1397  002F                     _Timer1:	
  1398  002F                     	ds	3
  1399  0032                     _WDT:	
  1400  0032                     	ds	2
  1401  0034                     _Cmd:	
  1402  0034                     	ds	1
  1403  0035                     _Light:	
  1404  0035                     	ds	1
  1405  0036                     _SwDetect:	
  1406  0036                     	ds	1
  1407  0037                     _Sw1:	
  1408  0037                     	ds	9
  1409  0040                     _Lights1:	
  1410  0040                     	ds	7
  1411  0047                     _VarErrLED:	
  1412  0047                     	ds	4
  1413  004B                     _VarLED1:	
  1414  004B                     	ds	4
  1415  004F                     _VarLED2:	
  1416  004F                     	ds	4
  1417                           
  1418                           	psect	bssBANK1
  1419  00A0                     __pbssBANK1:	
  1420  00A0                     __PIR:	
  1421  00A0                     	ds	46
  1422                           
  1423                           	psect	clrtext
  1424  0E7A                     clear_ram0:	
  1425                           ;	Called with FSR containing the base address, and
  1426                           ;	W with the last address+1
  1427                           
  1428  0E7A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1429  0E7B                     clrloop0:	
  1430  0E7B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1431  0E7C  0A84               	incf	4,f	;increment pointer
  1432  0E7D  0604               	xorwf	4,w	;XOR with final address
  1433  0E7E  1903               	btfsc	3,2	;have we reached the end yet?
  1434  0E7F  3400               	retlw	0	;all done for this memory range, return
  1435  0E80  0604               	xorwf	4,w	;XOR again to restore value
  1436  0E81  2E7B               	goto	clrloop0	;do the next byte
  1437                           
  1438                           	psect	cstackCOMMON
  1439  0070                     __pcstackCOMMON:	
  1440  0070                     ?_setLED_Initialization:	
  1441  0070                     ?_setPIRLED_Main:	
  1442                           ; 0 bytes @ 0x0
  1443                           
  1444  0070                     ?_Fosc_Set:	
  1445                           ; 0 bytes @ 0x0
  1446                           
  1447  0070                     ?_IO_Set:	
  1448                           ; 0 bytes @ 0x0
  1449                           
  1450  0070                     ?_TMR1_Set:	
  1451                           ; 0 bytes @ 0x0
  1452                           
  1453  0070                     ?_ADC_Set:	
  1454                           ; 0 bytes @ 0x0
  1455                           
  1456  0070                     ?_WDT_Set:	
  1457                           ; 0 bytes @ 0x0
  1458                           
  1459  0070                     ?_TMR1_ISR:	
  1460                           ; 0 bytes @ 0x0
  1461                           
  1462  0070                     ??_TMR1_ISR:	
  1463                           ; 0 bytes @ 0x0
  1464                           
  1465  0070                     ?_Timeout_Counter:	
  1466                           ; 0 bytes @ 0x0
  1467                           
  1468  0070                     ?_set_TimeoutCleared:	
  1469                           ; 0 bytes @ 0x0
  1470                           
  1471  0070                     ?_WDT_Clearing:	
  1472                           ; 0 bytes @ 0x0
  1473                           
  1474  0070                     ?_myMain_Initialization:	
  1475                           ; 0 bytes @ 0x0
  1476                           
  1477  0070                     ?_Lights_Initialization:	
  1478                           ; 0 bytes @ 0x0
  1479                           
  1480  0070                     ?_PIR_Initialization:	
  1481                           ; 0 bytes @ 0x0
  1482                           
  1483  0070                     ?_Switch_Initialization:	
  1484                           ; 0 bytes @ 0x0
  1485                           
  1486  0070                     ?_my_MainTimer:	
  1487                           ; 0 bytes @ 0x0
  1488                           
  1489  0070                     ?_Lights_Main:	
  1490                           ; 0 bytes @ 0x0
  1491                           
  1492  0070                     ?_Switch_Main:	
  1493                           ; 0 bytes @ 0x0
  1494                           
  1495  0070                     ?_PIR_Main:	
  1496                           ; 0 bytes @ 0x0
  1497                           
  1498  0070                     ?_Exception_Main:	
  1499                           ; 0 bytes @ 0x0
  1500                           
  1501  0070                     ?_setSw_Initialization:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0070                     ?_setSw_Main:	
  1505                           ; 0 bytes @ 0x0
  1506                           
  1507  0070                     ?_setLights_Initialization:	
  1508                           ; 0 bytes @ 0x0
  1509                           
  1510  0070                     ?_setLights_Main:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0070                     ?_Lights_Control:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0070                     ?_CDS_Initialization:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0070                     ?_CDS_Main:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0070                     ?_LedPointSelect:	
  1523                           ; 0 bytes @ 0x0
  1524                           
  1525  0070                     ?_LED_Initialization:	
  1526                           ; 0 bytes @ 0x0
  1527                           
  1528  0070                     ?_LED_Main:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531  0070                     ?_Mcu_Initialization:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534  0070                     ?_ISR:	
  1535                           ; 0 bytes @ 0x0
  1536                           
  1537  0070                     ??_ISR:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0070                     ?_WDT_Main:	
  1541                           ; 0 bytes @ 0x0
  1542                           
  1543  0070                     ?_TouchPower:	
  1544                           ; 0 bytes @ 0x0
  1545                           
  1546  0070                     ?_SwPointSelect:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0070                     ?_LightsPointSelect:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0070                     ?_getAll_Lights_Line:	
  1553                           ; 0 bytes @ 0x0
  1554                           
  1555  0070                     ?_getLights_Status:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?_getSw_KeyStatus:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ?_getLights_Allow_Condition:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ?_getCDS_Status:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     ?_getMain_All_Error_Status:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     getMain_All_Error_Status@command:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0070                     getSw_KeyStatus@sw:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0070                     getLights_Allow_Condition@lights:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579                           
  1580                           ; 1 bytes @ 0x0
  1581  0070                     	ds	4
  1582  0074                     ??_Fosc_Set:	
  1583  0074                     ??_IO_Set:	
  1584                           ; 0 bytes @ 0x4
  1585                           
  1586  0074                     ??_TMR1_Set:	
  1587                           ; 0 bytes @ 0x4
  1588                           
  1589  0074                     ??_ADC_Set:	
  1590                           ; 0 bytes @ 0x4
  1591                           
  1592  0074                     ??_WDT_Set:	
  1593                           ; 0 bytes @ 0x4
  1594                           
  1595  0074                     ??_Timeout_Counter:	
  1596                           ; 0 bytes @ 0x4
  1597                           
  1598  0074                     ??_set_TimeoutCleared:	
  1599                           ; 0 bytes @ 0x4
  1600                           
  1601  0074                     ??_WDT_Clearing:	
  1602                           ; 0 bytes @ 0x4
  1603                           
  1604  0074                     ??_myMain_Initialization:	
  1605                           ; 0 bytes @ 0x4
  1606                           
  1607  0074                     ??_PIR_Initialization:	
  1608                           ; 0 bytes @ 0x4
  1609                           
  1610  0074                     ??_my_MainTimer:	
  1611                           ; 0 bytes @ 0x4
  1612                           
  1613  0074                     ??_getSw_KeyStatus:	
  1614                           ; 0 bytes @ 0x4
  1615                           
  1616  0074                     ??_getLights_Allow_Condition:	
  1617                           ; 0 bytes @ 0x4
  1618                           
  1619  0074                     ?_setLights:	
  1620                           ; 0 bytes @ 0x4
  1621                           
  1622  0074                     ??_CDS_Initialization:	
  1623                           ; 0 bytes @ 0x4
  1624                           
  1625  0074                     ??_getCDS_Status:	
  1626                           ; 0 bytes @ 0x4
  1627                           
  1628  0074                     ??_LedPointSelect:	
  1629                           ; 0 bytes @ 0x4
  1630                           
  1631  0074                     ??_WDT_Main:	
  1632                           ; 0 bytes @ 0x4
  1633                           
  1634  0074                     ??_getMain_All_Error_Status:	
  1635                           ; 0 bytes @ 0x4
  1636                           
  1637  0074                     ??_TouchPower:	
  1638                           ; 0 bytes @ 0x4
  1639                           
  1640  0074                     ??_SwPointSelect:	
  1641                           ; 0 bytes @ 0x4
  1642                           
  1643  0074                     ??_LightsPointSelect:	
  1644                           ; 0 bytes @ 0x4
  1645                           
  1646  0074                     ??___awdiv:	
  1647                           ; 0 bytes @ 0x4
  1648                           
  1649  0074                     ??___lwdiv:	
  1650                           ; 0 bytes @ 0x4
  1651                           
  1652  0074                     ?_getAD:	
  1653                           ; 0 bytes @ 0x4
  1654                           
  1655  0074                     getCDS_Status@status:	
  1656                           ; 1 bytes @ 0x4
  1657                           
  1658  0074                     getAD@adcon1:	
  1659                           ; 1 bytes @ 0x4
  1660                           
  1661  0074                     getMain_All_Error_Status@status:	
  1662                           ; 1 bytes @ 0x4
  1663                           
  1664  0074                     getSw_KeyStatus@status:	
  1665                           ; 1 bytes @ 0x4
  1666                           
  1667  0074                     setLights@status:	
  1668                           ; 1 bytes @ 0x4
  1669                           
  1670  0074                     getLights_Allow_Condition@allow:	
  1671                           ; 1 bytes @ 0x4
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x4
  1675  0074                     	ds	1
  1676  0075                     ??_getAD:	
  1677  0075                     ??_setLights:	
  1678                           ; 0 bytes @ 0x5
  1679                           
  1680  0075                     ??_Mcu_Initialization:	
  1681                           ; 0 bytes @ 0x5
  1682                           
  1683  0075                     LedPointSelect@led:	
  1684                           ; 0 bytes @ 0x5
  1685                           
  1686  0075                     getAD@adcon0:	
  1687                           ; 1 bytes @ 0x5
  1688                           
  1689  0075                     SwPointSelect@sw:	
  1690                           ; 1 bytes @ 0x5
  1691                           
  1692  0075                     LightsPointSelect@lights:	
  1693                           ; 1 bytes @ 0x5
  1694                           
  1695                           
  1696                           ; 1 bytes @ 0x5
  1697  0075                     	ds	1
  1698  0076                     ??_setLED_Initialization:	
  1699  0076                     ??_setLED:	
  1700                           ; 0 bytes @ 0x6
  1701                           
  1702  0076                     ??_Lights_Initialization:	
  1703                           ; 0 bytes @ 0x6
  1704                           
  1705  0076                     ??_Switch_Initialization:	
  1706                           ; 0 bytes @ 0x6
  1707                           
  1708  0076                     ??_Lights_Main:	
  1709                           ; 0 bytes @ 0x6
  1710                           
  1711  0076                     ??_Switch_Main:	
  1712                           ; 0 bytes @ 0x6
  1713                           
  1714  0076                     ??_getAll_Lights_Line:	
  1715                           ; 0 bytes @ 0x6
  1716                           
  1717  0076                     ??_getLights_Status:	
  1718                           ; 0 bytes @ 0x6
  1719                           
  1720  0076                     ??_setSw_Initialization:	
  1721                           ; 0 bytes @ 0x6
  1722                           
  1723  0076                     ??_setLights_Initialization:	
  1724                           ; 0 bytes @ 0x6
  1725                           
  1726  0076                     ??_setLights_Main:	
  1727                           ; 0 bytes @ 0x6
  1728                           
  1729  0076                     ??_LED_Initialization:	
  1730                           ; 0 bytes @ 0x6
  1731                           
  1732  0076                     ??_LED_Main:	
  1733                           ; 0 bytes @ 0x6
  1734                           
  1735                           
  1736                           	psect	cstackBANK0
  1737  0053                     __pcstackBANK0:	
  1738                           ; 0 bytes @ 0x6
  1739                           
  1740  0053                     ?_setLED:	
  1741  0053                     ?_setLights_Trigger:	
  1742                           ; 0 bytes @ 0x0
  1743                           
  1744  0053                     ??_setSw_Main:	
  1745                           ; 0 bytes @ 0x0
  1746                           
  1747  0053                     ??_CDS_Main:	
  1748                           ; 0 bytes @ 0x0
  1749                           
  1750  0053                     ?_getCDS_AD:	
  1751                           ; 0 bytes @ 0x0
  1752                           
  1753  0053                     ?___awdiv:	
  1754                           ; 0 bytes @ 0x0
  1755                           
  1756  0053                     ?___lwdiv:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759  0053                     getCDS_AD@channel2:	
  1760                           ; 2 bytes @ 0x0
  1761                           
  1762  0053                     setLED@command:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0053                     setLights_Initialization@lights:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0053                     setLights@lights:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0053                     getLights_Status@lights:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0053                     setLights_Trigger@command:	
  1775                           ; 1 bytes @ 0x0
  1776                           
  1777  0053                     getAll_Lights_Line@line:	
  1778                           ; 1 bytes @ 0x0
  1779                           
  1780  0053                     ___awdiv@divisor:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0053                     ___lwdiv@divisor:	
  1784                           ; 2 bytes @ 0x0
  1785                           
  1786                           
  1787                           ; 2 bytes @ 0x0
  1788  0053                     	ds	1
  1789  0054                     ??_setLights_Trigger:	
  1790  0054                     ??_getCDS_AD:	
  1791                           ; 0 bytes @ 0x1
  1792                           
  1793  0054                     setLED@led:	
  1794                           ; 0 bytes @ 0x1
  1795                           
  1796  0054                     setLights_Main@lights:	
  1797                           ; 1 bytes @ 0x1
  1798                           
  1799  0054                     getLights_Status@status:	
  1800                           ; 1 bytes @ 0x1
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x1
  1804  0054                     	ds	1
  1805  0055                     ??_setPIRLED_Main:	
  1806  0055                     setLED_Initialization@led:	
  1807                           ; 0 bytes @ 0x2
  1808                           
  1809  0055                     setSw_Initialization@sw:	
  1810                           ; 1 bytes @ 0x2
  1811                           
  1812  0055                     setSw_Main@sw:	
  1813                           ; 1 bytes @ 0x2
  1814                           
  1815  0055                     setLights_Trigger@lights:	
  1816                           ; 1 bytes @ 0x2
  1817                           
  1818  0055                     ___awdiv@dividend:	
  1819                           ; 1 bytes @ 0x2
  1820                           
  1821  0055                     ___lwdiv@dividend:	
  1822                           ; 2 bytes @ 0x2
  1823                           
  1824                           
  1825                           ; 2 bytes @ 0x2
  1826  0055                     	ds	1
  1827  0056                     ??_PIR_Main:	
  1828  0056                     ??_Exception_Main:	
  1829                           ; 0 bytes @ 0x3
  1830                           
  1831  0056                     getCDS_AD@i:	
  1832                           ; 0 bytes @ 0x3
  1833                           
  1834  0056                     setPIRLED_Main@count:	
  1835                           ; 1 bytes @ 0x3
  1836                           
  1837                           
  1838                           ; 1 bytes @ 0x3
  1839  0056                     	ds	1
  1840  0057                     getCDS_AD@j:	
  1841  0057                     Exception_Main@lights:	
  1842                           ; 1 bytes @ 0x4
  1843                           
  1844  0057                     ___awdiv@counter:	
  1845                           ; 1 bytes @ 0x4
  1846                           
  1847  0057                     ___lwdiv@counter:	
  1848                           ; 1 bytes @ 0x4
  1849                           
  1850                           
  1851                           ; 1 bytes @ 0x4
  1852  0057                     	ds	1
  1853  0058                     getCDS_AD@channel1:	
  1854  0058                     Exception_Main@count:	
  1855                           ; 1 bytes @ 0x5
  1856                           
  1857  0058                     ___awdiv@sign:	
  1858                           ; 1 bytes @ 0x5
  1859                           
  1860  0058                     ___lwdiv@quotient:	
  1861                           ; 1 bytes @ 0x5
  1862                           
  1863                           
  1864                           ; 2 bytes @ 0x5
  1865  0058                     	ds	1
  1866  0059                     Exception_Main@status:	
  1867  0059                     ___awdiv@quotient:	
  1868                           ; 1 bytes @ 0x6
  1869                           
  1870                           
  1871                           ; 2 bytes @ 0x6
  1872  0059                     	ds	1
  1873  005A                     Exception_Main@i:	
  1874                           
  1875                           ; 2 bytes @ 0x7
  1876  005A                     	ds	1
  1877  005B                     ?_getPIR_AD:	
  1878  005B                     ??_Lights_Control:	
  1879                           ; 0 bytes @ 0x8
  1880                           
  1881  005B                     PIR_Main@error:	
  1882                           ; 0 bytes @ 0x8
  1883                           
  1884  005B                     getPIR_AD@channel2:	
  1885                           ; 1 bytes @ 0x8
  1886                           
  1887                           
  1888                           ; 1 bytes @ 0x8
  1889  005B                     	ds	1
  1890  005C                     ??_getPIR_AD:	
  1891  005C                     Exception_Main@error:	
  1892                           ; 0 bytes @ 0x9
  1893                           
  1894  005C                     _PIR_Main$2587:	
  1895                           ; 1 bytes @ 0x9
  1896                           
  1897                           
  1898                           ; 2 bytes @ 0x9
  1899  005C                     	ds	1
  1900  005D                     Lights_Control@lights:	
  1901                           
  1902                           ; 1 bytes @ 0xA
  1903  005D                     	ds	1
  1904  005E                     PIR_Main@cds:	
  1905                           
  1906                           ; 1 bytes @ 0xB
  1907  005E                     	ds	1
  1908  005F                     PIR_Main@LightsStatus:	
  1909  005F                     getPIR_AD@j:	
  1910                           ; 1 bytes @ 0xC
  1911                           
  1912                           
  1913                           ; 1 bytes @ 0xC
  1914  005F                     	ds	1
  1915  0060                     getPIR_AD@channel1:	
  1916                           
  1917                           ; 1 bytes @ 0xD
  1918  0060                     	ds	1
  1919  0061                     getPIR_AD@i:	
  1920                           
  1921                           ; 1 bytes @ 0xE
  1922  0061                     	ds	1
  1923  0062                     ?_main:	
  1924  0062                     main@argc:	
  1925                           ; 2 bytes @ 0xF
  1926                           
  1927                           
  1928                           ; 2 bytes @ 0xF
  1929  0062                     	ds	2
  1930  0064                     main@argv:	
  1931                           
  1932                           ; 2 bytes @ 0x11
  1933  0064                     	ds	2
  1934  0066                     ??_main:	
  1935                           
  1936                           ; 0 bytes @ 0x13
  1937  0066                     	ds	1
  1938                           
  1939                           	psect	maintext
  1940  0698                     __pmaintext:	
  1941 ;;
  1942 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1943 ;;
  1944 ;; *************** function _main *****************
  1945 ;; Defined at:
  1946 ;;		line 7 in file "../src/Main_B1.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  argc            2   15[BANK0 ] int 
  1949 ;;  argv            2   17[BANK0 ] PTR PTR unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  2   15[BANK0 ] int 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 17F/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1961 ;;      Params:         0       4       0       0
  1962 ;;      Locals:         0       0       0       0
  1963 ;;      Temps:          0       1       0       0
  1964 ;;      Totals:         0       5       0       0
  1965 ;;Total ram usage:        5 bytes
  1966 ;; Hardware stack levels required when called:    6
  1967 ;; This function calls:
  1968 ;;		_CDS_Initialization
  1969 ;;		_CDS_Main
  1970 ;;		_Exception_Main
  1971 ;;		_LED_Initialization
  1972 ;;		_LED_Main
  1973 ;;		_Lights_Initialization
  1974 ;;		_Lights_Main
  1975 ;;		_Mcu_Initialization
  1976 ;;		_PIR_Initialization
  1977 ;;		_PIR_Main
  1978 ;;		_Switch_Initialization
  1979 ;;		_Switch_Main
  1980 ;;		_WDT_Main
  1981 ;;		_getCDS_AD
  1982 ;;		_getPIR_AD
  1983 ;;		_myMain_Initialization
  1984 ;;		_my_MainTimer
  1985 ;; This function is called by:
  1986 ;;		Startup code after reset
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           
  1991                           ;psect for function _main
  1992  0698                     _main:	
  1993                           
  1994                           ;Main_B1.c: 8: myMain_Initialization();
  1995                           
  1996                           ;incstack = 0
  1997                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1998  0698  118A  27FF  118A   	fcall	_myMain_Initialization
  1999                           
  2000                           ;Main_B1.c: 9: Mcu_Initialization();
  2001  069B  158A  26E5  118A   	fcall	_Mcu_Initialization
  2002                           
  2003                           ;Main_B1.c: 10: ;;
  2004                           ;Main_B1.c: 11: LED_Initialization();
  2005  069E  158A  26BD  118A   	fcall	_LED_Initialization
  2006                           
  2007                           ;Main_B1.c: 12: ;;
  2008                           ;Main_B1.c: 14: ;;
  2009                           ;Main_B1.c: 15: ;;
  2010                           ;Main_B1.c: 16: ;;
  2011                           ;Main_B1.c: 17: ;;
  2012                           ;Main_B1.c: 18: ;;
  2013                           ;Main_B1.c: 20: ;;
  2014                           ;Main_B1.c: 21: Lights_Initialization();
  2015  06A1  158A  2646  118A   	fcall	_Lights_Initialization
  2016                           
  2017                           ;Main_B1.c: 22: CDS_Initialization();
  2018  06A4  158A  2642  118A   	fcall	_CDS_Initialization
  2019                           
  2020                           ;Main_B1.c: 23: PIR_Initialization();
  2021  06A7  158A  26B2  118A   	fcall	_PIR_Initialization
  2022                           
  2023                           ;Main_B1.c: 24: Switch_Initialization();
  2024  06AA  158A  269E  118A   	fcall	_Switch_Initialization
  2025  06AD                     l4370:	
  2026                           ;Main_B1.c: 25: ;;
  2027                           ;Main_B1.c: 26: ;;
  2028                           ;Main_B1.c: 27: ;;
  2029                           ;Main_B1.c: 28: ;;
  2030                           ;Main_B1.c: 30: while (1) {
  2031                           
  2032                           
  2033                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2034  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2035  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2036  06AF  1C20               	btfss	_myMain,0
  2037  06B0  2EC3               	goto	l4376
  2038                           
  2039                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2040  06B1  3031               	movlw	49
  2041  06B2  00E6               	movwf	??_main
  2042  06B3  0866               	movf	??_main,w
  2043  06B4  00D3               	movwf	getCDS_AD@channel2
  2044  06B5  3009               	movlw	9
  2045  06B6  118A  27C3  118A   	fcall	_getCDS_AD
  2046                           
  2047                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2048  06B9  300D               	movlw	13
  2049  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2050  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  2051  06BC  00E6               	movwf	??_main
  2052  06BD  0866               	movf	??_main,w
  2053  06BE  00DB               	movwf	getPIR_AD@channel2
  2054  06BF  3005               	movlw	5
  2055  06C0  118A  221B  118A   	fcall	_getPIR_AD
  2056  06C3                     l4376:	
  2057                           
  2058                           ;Main_B1.c: 57: }
  2059                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2060  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2061  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  2062  06C5  1C2F               	btfss	_Timer1,0
  2063  06C6  2EAD               	goto	l4370
  2064                           
  2065                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2066  06C7  102F               	bcf	_Timer1,0
  2067                           
  2068                           ;Main_B1.c: 96: my_MainTimer();
  2069  06C8  158A  27AF  118A   	fcall	_my_MainTimer
  2070                           
  2071                           ;Main_B1.c: 97: WDT_Main();
  2072  06CB  158A  2716  118A   	fcall	_WDT_Main
  2073                           
  2074                           ;Main_B1.c: 98: ;;
  2075                           ;Main_B1.c: 99: ;;
  2076                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2077  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2078  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2079  06D0  1C20               	btfss	_myMain,0
  2080  06D1  2EAD               	goto	l4370
  2081                           
  2082                           ;Main_B1.c: 101: ;;
  2083                           ;Main_B1.c: 103: LED_Main();
  2084  06D2  158A  263C  118A   	fcall	_LED_Main
  2085                           
  2086                           ;Main_B1.c: 104: ;;
  2087                           ;Main_B1.c: 106: ;;
  2088                           ;Main_B1.c: 107: ;;
  2089                           ;Main_B1.c: 108: ;;
  2090                           ;Main_B1.c: 109: ;;
  2091                           ;Main_B1.c: 111: Lights_Main();
  2092  06D5  158A  266A  118A   	fcall	_Lights_Main
  2093                           
  2094                           ;Main_B1.c: 112: ;;
  2095                           ;Main_B1.c: 113: Switch_Main();
  2096  06D8  158A  2663  118A   	fcall	_Switch_Main
  2097                           
  2098                           ;Main_B1.c: 114: CDS_Main();
  2099  06DB  118A  275F  118A   	fcall	_CDS_Main
  2100                           
  2101                           ;Main_B1.c: 115: PIR_Main();
  2102  06DE  118A  2026  118A   	fcall	_PIR_Main
  2103                           
  2104                           ;Main_B1.c: 117: ;;
  2105                           ;Main_B1.c: 118: ;;
  2106                           ;Main_B1.c: 119: ;;
  2107                           ;Main_B1.c: 120: ;;
  2108                           ;Main_B1.c: 121: Exception_Main();
  2109  06E1  118A  24E3  118A   	fcall	_Exception_Main
  2110  06E4  2EAD               	goto	l4370
  2111  06E5                     __end_of_main:	
  2112                           ;Main_B1.c: 128: }
  2113                           ;Main_B1.c: 129: }
  2114                           ;Main_B1.c: 163: }
  2115                           ;Main_B1.c: 164: return (0);
  2116                           ;	Return value of _main is never used
  2117                           
  2118                           
  2119                           	psect	text1
  2120  0FAF                     __ptext1:	
  2121 ;; *************** function _my_MainTimer *****************
  2122 ;; Defined at:
  2123 ;;		line 185 in file "../src/Main_B1.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2137 ;;      Params:         0       0       0       0
  2138 ;;      Locals:         0       0       0       0
  2139 ;;      Temps:          1       0       0       0
  2140 ;;      Totals:         1       0       0       0
  2141 ;;Total ram usage:        1 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    2
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _my_MainTimer
  2153  0FAF                     _my_MainTimer:	
  2154                           
  2155                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2159  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0FB1  1820               	btfsc	_myMain,0
  2162  0FB2  2FBF               	goto	l3266
  2163                           
  2164                           ;Main_B1.c: 188: myMain.PowerCount++;
  2165  0FB3  3001               	movlw	1
  2166  0FB4  00F4               	movwf	??_my_MainTimer
  2167  0FB5  0874               	movf	??_my_MainTimer,w
  2168  0FB6  07A1               	addwf	_myMain+1,f
  2169                           
  2170                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2171  0FB7  0821               	movf	_myMain+1,w
  2172  0FB8  3A4B               	xorlw	75
  2173  0FB9  1D03               	skipz
  2174  0FBA  0008               	return
  2175                           
  2176                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2177  0FBB  01A1               	clrf	_myMain+1
  2178                           
  2179                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2180  0FBC  1420               	bsf	_myMain,0
  2181                           
  2182                           ;Main_B1.c: 196: ;;
  2183                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2184  0FBD  1620               	bsf	_myMain,4
  2185                           
  2186                           ;Main_B1.c: 206: }
  2187                           ;Main_B1.c: 207: } else {
  2188  0FBE  0008               	return
  2189  0FBF                     l3266:	
  2190                           
  2191                           ;Main_B1.c: 208: myMain.PowerCount++;
  2192  0FBF  3001               	movlw	1
  2193  0FC0  00F4               	movwf	??_my_MainTimer
  2194  0FC1  0874               	movf	??_my_MainTimer,w
  2195  0FC2  07A1               	addwf	_myMain+1,f
  2196                           
  2197                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2198  0FC3  0821               	movf	_myMain+1,w
  2199  0FC4  3A32               	xorlw	50
  2200  0FC5  1D03               	skipz
  2201  0FC6  0008               	return
  2202                           
  2203                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2204  0FC7  01A1               	clrf	_myMain+1
  2205  0FC8  0008               	return
  2206  0FC9                     __end_of_my_MainTimer:	
  2207                           
  2208                           	psect	text2
  2209  07FF                     __ptext2:	
  2210 ;; *************** function _myMain_Initialization *****************
  2211 ;; Defined at:
  2212 ;;		line 170 in file "../src/Main_B1.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;		None               void
  2219 ;; Registers used:
  2220 ;;		None
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2226 ;;      Params:         0       0       0       0
  2227 ;;      Locals:         0       0       0       0
  2228 ;;      Temps:          0       0       0       0
  2229 ;;      Totals:         0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    2
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _myMain_Initialization
  2242  07FF                     _myMain_Initialization:	
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _myMain_Initialization: []
  2246  07FF  0008               	return
  2247  0800                     __end_of_myMain_Initialization:	
  2248                           
  2249                           	psect	text3
  2250  021B                     __ptext3:	
  2251 ;; *************** function _getPIR_AD *****************
  2252 ;; Defined at:
  2253 ;;		line 299 in file "../src/PIR_B1.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  channel1        1    wreg     unsigned char 
  2256 ;;  channel2        1    8[BANK0 ] unsigned char 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  channel1        1   13[BANK0 ] unsigned char 
  2259 ;;  i               1   14[BANK0 ] unsigned char 
  2260 ;;  j               1   12[BANK0 ] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;		None               void
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2270 ;;      Params:         0       1       0       0
  2271 ;;      Locals:         0       3       0       0
  2272 ;;      Temps:          0       3       0       0
  2273 ;;      Totals:         0       7       0       0
  2274 ;;Total ram usage:        7 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    4
  2277 ;; This function calls:
  2278 ;;		___awdiv
  2279 ;;		___lwdiv
  2280 ;;		_getAD
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _getPIR_AD
  2288  021B                     _getPIR_AD:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2292                           ;getPIR_AD@channel1 stored from wreg
  2293  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2294  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2295  021D  00E0               	movwf	getPIR_AD@channel1
  2296                           
  2297                           ;PIR_B1.c: 300: char i = 0, j = 0;
  2298  021E  01E1               	clrf	getPIR_AD@i
  2299  021F  01DF               	clrf	getPIR_AD@j
  2300                           
  2301                           ;PIR_B1.c: 302: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2302  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2303  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2304  0222  1CA0               	btfss	__PIR^(0+128),1
  2305  0223  0008               	return
  2306  0224  1920               	btfsc	__PIR^(0+128),2
  2307  0225  0008               	return
  2308                           
  2309                           ;PIR_B1.c: 303: _PIR.GO = 1;
  2310  0226  1520               	bsf	__PIR^(0+128),2
  2311                           
  2312                           ;PIR_B1.c: 304: _PIR.ADRES = getAD(channel1, 0x70);
  2313  0227  3070               	movlw	112
  2314  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2316  022A  00DC               	movwf	??_getPIR_AD
  2317  022B  085C               	movf	??_getPIR_AD,w
  2318  022C  00F4               	movwf	getAD@adcon1
  2319  022D  0860               	movf	getPIR_AD@channel1,w
  2320  022E  158A  27E4  118A   	fcall	_getAD
  2321  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0233  00DD               	movwf	??_getPIR_AD+1
  2324  0234  085D               	movf	??_getPIR_AD+1,w
  2325  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2326  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2327  0237  00A2               	movwf	(__PIR^(0+128)+2)
  2328                           
  2329                           ;PIR_B1.c: 305: _PIR.VRAD = _PIR.ADRES / 25;
  2330  0238  3019               	movlw	25
  2331  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2332  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2333  023B  00D3               	movwf	___awdiv@divisor
  2334  023C  3000               	movlw	0
  2335  023D  00D4               	movwf	___awdiv@divisor+1
  2336  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2337  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2338  0240  0822               	movf	(__PIR^(0+128)+2),w
  2339  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0243  00DC               	movwf	??_getPIR_AD
  2342  0244  01DD               	clrf	??_getPIR_AD+1
  2343  0245  085C               	movf	??_getPIR_AD,w
  2344  0246  00D5               	movwf	___awdiv@dividend
  2345  0247  085D               	movf	??_getPIR_AD+1,w
  2346  0248  00D6               	movwf	___awdiv@dividend+1
  2347  0249  118A  263B  118A   	fcall	___awdiv
  2348  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2349  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2350  024E  0853               	movf	?___awdiv,w
  2351  024F  00DE               	movwf	??_getPIR_AD+2
  2352  0250  085E               	movf	??_getPIR_AD+2,w
  2353  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2354  0252  1303               	bcf	3,6	;RP1=0, select bank1
  2355  0253  00A3               	movwf	(__PIR^(0+128)+3)
  2356                           
  2357                           ;PIR_B1.c: 306: _PIR.VRAD1 = _PIR.ADRES;
  2358  0254  0822               	movf	(__PIR^(0+128)+2),w
  2359  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0257  00DC               	movwf	??_getPIR_AD
  2362  0258  085C               	movf	??_getPIR_AD,w
  2363  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2364  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2365  025B  00A4               	movwf	(__PIR^(0+128)+4)
  2366                           
  2367                           ;PIR_B1.c: 307: _PIR.ADRES = getAD(channel2, 0x70);
  2368  025C  3070               	movlw	112
  2369  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2370  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2371  025F  00DC               	movwf	??_getPIR_AD
  2372  0260  085C               	movf	??_getPIR_AD,w
  2373  0261  00F4               	movwf	getAD@adcon1
  2374  0262  085B               	movf	getPIR_AD@channel2,w
  2375  0263  158A  27E4  118A   	fcall	_getAD
  2376  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0268  00DD               	movwf	??_getPIR_AD+1
  2379  0269  085D               	movf	??_getPIR_AD+1,w
  2380  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2381  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2382  026C  00A2               	movwf	(__PIR^(0+128)+2)
  2383                           
  2384                           ;PIR_B1.c: 308: _PIR.SignalAD = _PIR.ADRES;
  2385  026D  0822               	movf	(__PIR^(0+128)+2),w
  2386  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2387  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0270  00DC               	movwf	??_getPIR_AD
  2389  0271  085C               	movf	??_getPIR_AD,w
  2390  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0273  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0274  00A1               	movwf	(__PIR^(0+128)+1)
  2393                           
  2394                           ;PIR_B1.c: 310: if (_PIR.VRAD < 1) {
  2395  0275  08A3               	movf	(__PIR^(0+128)+3),f
  2396  0276  1D03               	skipz
  2397  0277  2A7A               	goto	l4086
  2398                           
  2399                           ;PIR_B1.c: 311: _PIR.CloseTimeValue = 5;
  2400  0278  3005               	movlw	5
  2401  0279  2A7F               	goto	L1
  2402  027A                     l4086:	
  2403                           ;PIR_B1.c: 312: } else if (_PIR.VRAD < 3) {
  2404                           
  2405  027A  3003               	movlw	3
  2406  027B  0223               	subwf	(__PIR^(0+128)+3),w
  2407  027C  1803               	skipnc
  2408  027D  2A82               	goto	l4090
  2409                           
  2410                           ;PIR_B1.c: 313: _PIR.CloseTimeValue = 60;
  2411  027E  303C               	movlw	60
  2412  027F                     L1:	
  2413  027F  00C7               	movwf	(__PIR^(0+128)+39)
  2414  0280  3000               	movlw	0
  2415  0281  2A9D               	goto	L5
  2416  0282                     l4090:	
  2417                           ;PIR_B1.c: 314: } else if (_PIR.VRAD < 5) {
  2418                           
  2419  0282  3005               	movlw	5
  2420  0283  0223               	subwf	(__PIR^(0+128)+3),w
  2421  0284  1803               	skipnc
  2422  0285  2A8A               	goto	l4094
  2423                           
  2424                           ;PIR_B1.c: 315: _PIR.CloseTimeValue = 300;
  2425  0286  302C               	movlw	44
  2426  0287  00C7               	movwf	(__PIR^(0+128)+39)
  2427  0288  3001               	movlw	1
  2428  0289  2A9D               	goto	L5
  2429  028A                     l4094:	
  2430                           ;PIR_B1.c: 316: } else if (_PIR.VRAD < 7) {
  2431                           
  2432  028A  3007               	movlw	7
  2433  028B  0223               	subwf	(__PIR^(0+128)+3),w
  2434  028C  1803               	skipnc
  2435  028D  2A92               	goto	l4098
  2436                           
  2437                           ;PIR_B1.c: 317: _PIR.CloseTimeValue = 600;
  2438  028E  3058               	movlw	88
  2439  028F  00C7               	movwf	(__PIR^(0+128)+39)
  2440  0290  3002               	movlw	2
  2441  0291  2A9D               	goto	L5
  2442  0292                     l4098:	
  2443                           ;PIR_B1.c: 318: } else if (_PIR.VRAD < 9) {
  2444                           
  2445  0292  3009               	movlw	9
  2446  0293  0223               	subwf	(__PIR^(0+128)+3),w
  2447  0294  1803               	skipnc
  2448  0295  2A9A               	goto	l4102
  2449                           
  2450                           ;PIR_B1.c: 319: _PIR.CloseTimeValue = 900;
  2451  0296  3084               	movlw	132
  2452  0297  00C7               	movwf	(__PIR^(0+128)+39)
  2453  0298  3003               	movlw	3
  2454  0299  2A9D               	goto	L5
  2455  029A                     l4102:	
  2456                           ;PIR_B1.c: 320: } else {
  2457                           
  2458                           
  2459                           ;PIR_B1.c: 321: _PIR.CloseTimeValue = 1200;
  2460  029A  30B0               	movlw	176
  2461  029B  00C7               	movwf	(__PIR^(0+128)+39)
  2462  029C  3004               	movlw	4
  2463  029D                     L5:	
  2464  029D  00C8               	movwf	(__PIR^(0+128)+40)
  2465                           
  2466                           ;PIR_B1.c: 322: }
  2467                           ;PIR_B1.c: 331: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2468  029E  0821               	movf	(__PIR^(0+128)+1),w
  2469  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2470  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2471  02A1  00DC               	movwf	??_getPIR_AD
  2472  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2473  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  2474  02A4  0827               	movf	(__PIR^(0+128)+7),w
  2475  02A5  3EA8               	addlw	(__PIR+8)& (0+255)
  2476  02A6  0084               	movwf	4
  2477  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2478  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2479  02A9  085C               	movf	??_getPIR_AD,w
  2480  02AA  1383               	bcf	3,7	;select IRP bank1
  2481  02AB  0080               	movwf	0
  2482                           
  2483                           ;PIR_B1.c: 332: for (i = 0; i < 10; i++) {
  2484  02AC  01E1               	clrf	getPIR_AD@i
  2485  02AD  300A               	movlw	10
  2486  02AE  0261               	subwf	getPIR_AD@i,w
  2487  02AF  1803               	btfsc	3,0
  2488  02B0  2ACD               	goto	l4118
  2489  02B1                     l4112:	
  2490                           
  2491                           ;PIR_B1.c: 333: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2492  02B1  0861               	movf	getPIR_AD@i,w
  2493  02B2  3EA8               	addlw	(__PIR+8)& (0+255)
  2494  02B3  0084               	movwf	4
  2495  02B4  0800               	movf	0,w
  2496  02B5  00DC               	movwf	??_getPIR_AD
  2497  02B6  01DD               	clrf	??_getPIR_AD+1
  2498  02B7  085C               	movf	??_getPIR_AD,w
  2499  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2500  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2501  02BA  07B2               	addwf	(__PIR^(0+128)+18),f
  2502  02BB  1803               	skipnc
  2503  02BC  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2504  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2505  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2506  02BF  085D               	movf	??_getPIR_AD+1,w
  2507  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2508  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  2509  02C2  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2510  02C3  3001               	movlw	1
  2511  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2512  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2513  02C6  00DC               	movwf	??_getPIR_AD
  2514  02C7  085C               	movf	??_getPIR_AD,w
  2515  02C8  07E1               	addwf	getPIR_AD@i,f
  2516  02C9  300A               	movlw	10
  2517  02CA  0261               	subwf	getPIR_AD@i,w
  2518  02CB  1C03               	skipc
  2519  02CC  2AB1               	goto	l4112
  2520  02CD                     l4118:	
  2521                           
  2522                           ;PIR_B1.c: 334: }
  2523                           ;PIR_B1.c: 335: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2524  02CD  300A               	movlw	10
  2525  02CE  00D3               	movwf	___lwdiv@divisor
  2526  02CF  3000               	movlw	0
  2527  02D0  00D4               	movwf	___lwdiv@divisor+1
  2528  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2529  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2530  02D3  0833               	movf	((__PIR+1)^(0+128)+18),w
  2531  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2532  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2533  02D6  01D6               	clrf	___lwdiv@dividend+1
  2534  02D7  07D6               	addwf	___lwdiv@dividend+1,f
  2535  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2536  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2537  02DA  0832               	movf	(__PIR^(0+128)+18),w
  2538  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2539  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2540  02DD  01D5               	clrf	___lwdiv@dividend
  2541  02DE  07D5               	addwf	___lwdiv@dividend,f
  2542  02DF  118A  26E5  118A   	fcall	___lwdiv
  2543  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2544  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2545  02E4  0853               	movf	?___lwdiv,w
  2546  02E5  00DC               	movwf	??_getPIR_AD
  2547  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2548  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2549  02E8  0834               	movf	(__PIR^(0+128)+20),w
  2550  02E9  3EB5               	addlw	(__PIR+21)& (0+255)
  2551  02EA  0084               	movwf	4
  2552  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2553  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2554  02ED  085C               	movf	??_getPIR_AD,w
  2555  02EE  1383               	bcf	3,7	;select IRP bank1
  2556  02EF  0080               	movwf	0
  2557                           
  2558                           ;PIR_B1.c: 336: _PIR.TenAverageValue = 0;
  2559  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2560  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2561  02F2  01B2               	clrf	(__PIR^(0+128)+18)
  2562  02F3  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2563                           
  2564                           ;PIR_B1.c: 338: for (i = 0; i <= 9; i++) {
  2565  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2566  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2567  02F6  01E1               	clrf	getPIR_AD@i
  2568  02F7  300A               	movlw	10
  2569  02F8  0261               	subwf	getPIR_AD@i,w
  2570  02F9  1803               	btfsc	3,0
  2571  02FA  2B17               	goto	l4134
  2572  02FB                     l4128:	
  2573                           
  2574                           ;PIR_B1.c: 339: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2575  02FB  0861               	movf	getPIR_AD@i,w
  2576  02FC  3EB5               	addlw	(__PIR+21)& (0+255)
  2577  02FD  0084               	movwf	4
  2578  02FE  0800               	movf	0,w
  2579  02FF  00DC               	movwf	??_getPIR_AD
  2580  0300  01DD               	clrf	??_getPIR_AD+1
  2581  0301  085C               	movf	??_getPIR_AD,w
  2582  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2583  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2584  0304  07BF               	addwf	(__PIR^(0+128)+31),f
  2585  0305  1803               	skipnc
  2586  0306  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2587  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0309  085D               	movf	??_getPIR_AD+1,w
  2590  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2591  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2592  030C  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2593  030D  3001               	movlw	1
  2594  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2595  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0310  00DC               	movwf	??_getPIR_AD
  2597  0311  085C               	movf	??_getPIR_AD,w
  2598  0312  07E1               	addwf	getPIR_AD@i,f
  2599  0313  300A               	movlw	10
  2600  0314  0261               	subwf	getPIR_AD@i,w
  2601  0315  1C03               	skipc
  2602  0316  2AFB               	goto	l4128
  2603  0317                     l4134:	
  2604                           
  2605                           ;PIR_B1.c: 340: }
  2606                           ;PIR_B1.c: 341: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2607  0317  300A               	movlw	10
  2608  0318  00D3               	movwf	___lwdiv@divisor
  2609  0319  3000               	movlw	0
  2610  031A  00D4               	movwf	___lwdiv@divisor+1
  2611  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2612  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2613  031D  0840               	movf	((__PIR+1)^(0+128)+31),w
  2614  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2615  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0320  01D6               	clrf	___lwdiv@dividend+1
  2617  0321  07D6               	addwf	___lwdiv@dividend+1,f
  2618  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2620  0324  083F               	movf	(__PIR^(0+128)+31),w
  2621  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0327  01D5               	clrf	___lwdiv@dividend
  2624  0328  07D5               	addwf	___lwdiv@dividend,f
  2625  0329  118A  26E5  118A   	fcall	___lwdiv
  2626  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2627  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2628  032E  0853               	movf	?___lwdiv,w
  2629  032F  00DC               	movwf	??_getPIR_AD
  2630  0330  085C               	movf	??_getPIR_AD,w
  2631  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2633  0333  00A6               	movwf	(__PIR^(0+128)+6)
  2634                           
  2635                           ;PIR_B1.c: 342: _PIR.HundredAverageValue = 0;
  2636  0334  01BF               	clrf	(__PIR^(0+128)+31)
  2637  0335  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2638                           
  2639                           ;PIR_B1.c: 344: if (_PIR.TenCount < 10) {
  2640  0336  300A               	movlw	10
  2641  0337  0227               	subwf	(__PIR^(0+128)+7),w
  2642  0338  1803               	skipnc
  2643  0339  2B43               	goto	l4142
  2644                           
  2645                           ;PIR_B1.c: 345: _PIR.TenCount++;
  2646  033A  3001               	movlw	1
  2647  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2648  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2649  033D  00DC               	movwf	??_getPIR_AD
  2650  033E  085C               	movf	??_getPIR_AD,w
  2651  033F  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0340  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0341  07A7               	addwf	(__PIR^(0+128)+7),f
  2654                           
  2655                           ;PIR_B1.c: 346: } else {
  2656  0342  0008               	return
  2657  0343                     l4142:	
  2658                           
  2659                           ;PIR_B1.c: 347: _PIR.TenCount = 0;
  2660  0343  01A7               	clrf	(__PIR^(0+128)+7)
  2661                           
  2662                           ;PIR_B1.c: 348: if (_PIR.HundreCount < 10)
  2663  0344  300A               	movlw	10
  2664  0345  0234               	subwf	(__PIR^(0+128)+20),w
  2665  0346  1803               	skipnc
  2666  0347  2B51               	goto	l4148
  2667                           
  2668                           ;PIR_B1.c: 349: _PIR.HundreCount++;
  2669  0348  3001               	movlw	1
  2670  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2671  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2672  034B  00DC               	movwf	??_getPIR_AD
  2673  034C  085C               	movf	??_getPIR_AD,w
  2674  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2675  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2676  034F  07B4               	addwf	(__PIR^(0+128)+20),f
  2677  0350  0008               	return
  2678  0351                     l4148:	
  2679                           
  2680                           ;PIR_B1.c: 350: else
  2681                           ;PIR_B1.c: 351: _PIR.HundreCount = 0;
  2682  0351  01B4               	clrf	(__PIR^(0+128)+20)
  2683  0352  0008               	return
  2684  0353                     __end_of_getPIR_AD:	
  2685                           
  2686                           	psect	text4
  2687  06E5                     __ptext4:	
  2688 ;; *************** function ___lwdiv *****************
  2689 ;; Defined at:
  2690 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  divisor         2    0[BANK0 ] unsigned int 
  2693 ;;  dividend        2    2[BANK0 ] unsigned int 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  quotient        2    5[BANK0 ] unsigned int 
  2696 ;;  counter         1    4[BANK0 ] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2    0[BANK0 ] unsigned int 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2706 ;;      Params:         0       4       0       0
  2707 ;;      Locals:         0       3       0       0
  2708 ;;      Temps:          1       0       0       0
  2709 ;;      Totals:         1       7       0       0
  2710 ;;Total ram usage:        8 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    2
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_getPIR_AD
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function ___lwdiv
  2722  06E5                     ___lwdiv:	
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2726  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2727  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2728  06E7  01D8               	clrf	___lwdiv@quotient
  2729  06E8  01D9               	clrf	___lwdiv@quotient+1
  2730  06E9  0854               	movf	___lwdiv@divisor+1,w
  2731  06EA  0453               	iorwf	___lwdiv@divisor,w
  2732  06EB  1903               	skipnz
  2733  06EC  2F1E               	goto	l4016
  2734  06ED  01D7               	clrf	___lwdiv@counter
  2735  06EE  0AD7               	incf	___lwdiv@counter,f
  2736  06EF                     l4004:	
  2737  06EF  1BD4               	btfsc	___lwdiv@divisor+1,7
  2738  06F0  2EFD               	goto	l4006
  2739  06F1  3001               	movlw	1
  2740  06F2                     u4465:	
  2741  06F2  1003               	clrc
  2742  06F3  0DD3               	rlf	___lwdiv@divisor,f
  2743  06F4  0DD4               	rlf	___lwdiv@divisor+1,f
  2744  06F5  3EFF               	addlw	-1
  2745  06F6  1D03               	skipz
  2746  06F7  2EF2               	goto	u4465
  2747  06F8  3001               	movlw	1
  2748  06F9  00F4               	movwf	??___lwdiv
  2749  06FA  0874               	movf	??___lwdiv,w
  2750  06FB  07D7               	addwf	___lwdiv@counter,f
  2751  06FC  2EEF               	goto	l4004
  2752  06FD                     l4006:	
  2753  06FD  3001               	movlw	1
  2754  06FE                     u4485:	
  2755  06FE  1003               	clrc
  2756  06FF  0DD8               	rlf	___lwdiv@quotient,f
  2757  0700  0DD9               	rlf	___lwdiv@quotient+1,f
  2758  0701  3EFF               	addlw	-1
  2759  0702  1D03               	skipz
  2760  0703  2EFE               	goto	u4485
  2761  0704  0854               	movf	___lwdiv@divisor+1,w
  2762  0705  0256               	subwf	___lwdiv@dividend+1,w
  2763  0706  1D03               	skipz
  2764  0707  2F0A               	goto	u4495
  2765  0708  0853               	movf	___lwdiv@divisor,w
  2766  0709  0255               	subwf	___lwdiv@dividend,w
  2767  070A                     u4495:	
  2768  070A  1C03               	skipc
  2769  070B  2F13               	goto	l4012
  2770  070C  0853               	movf	___lwdiv@divisor,w
  2771  070D  02D5               	subwf	___lwdiv@dividend,f
  2772  070E  0854               	movf	___lwdiv@divisor+1,w
  2773  070F  1C03               	skipc
  2774  0710  03D6               	decf	___lwdiv@dividend+1,f
  2775  0711  02D6               	subwf	___lwdiv@dividend+1,f
  2776  0712  1458               	bsf	___lwdiv@quotient,0
  2777  0713                     l4012:	
  2778  0713  3001               	movlw	1
  2779  0714                     u4505:	
  2780  0714  1003               	clrc
  2781  0715  0CD4               	rrf	___lwdiv@divisor+1,f
  2782  0716  0CD3               	rrf	___lwdiv@divisor,f
  2783  0717  3EFF               	addlw	-1
  2784  0718  1D03               	skipz
  2785  0719  2F14               	goto	u4505
  2786  071A  3001               	movlw	1
  2787  071B  02D7               	subwf	___lwdiv@counter,f
  2788  071C  1D03               	btfss	3,2
  2789  071D  2EFD               	goto	l4006
  2790  071E                     l4016:	
  2791  071E  0859               	movf	___lwdiv@quotient+1,w
  2792  071F  01D4               	clrf	?___lwdiv+1
  2793  0720  07D4               	addwf	?___lwdiv+1,f
  2794  0721  0858               	movf	___lwdiv@quotient,w
  2795  0722  01D3               	clrf	?___lwdiv
  2796  0723  07D3               	addwf	?___lwdiv,f
  2797  0724  0008               	return
  2798  0725                     __end_of___lwdiv:	
  2799                           
  2800                           	psect	text5
  2801  07C3                     __ptext5:	
  2802 ;; *************** function _getCDS_AD *****************
  2803 ;; Defined at:
  2804 ;;		line 48 in file "../src/CDS_B1.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  channel1        1    wreg     unsigned char 
  2807 ;;  channel2        1    0[BANK0 ] unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  channel1        1    5[BANK0 ] unsigned char 
  2810 ;;  j               1    4[BANK0 ] unsigned char 
  2811 ;;  i               1    3[BANK0 ] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;		None               void
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2821 ;;      Params:         0       1       0       0
  2822 ;;      Locals:         0       3       0       0
  2823 ;;      Temps:          0       2       0       0
  2824 ;;      Totals:         0       6       0       0
  2825 ;;Total ram usage:        6 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    4
  2828 ;; This function calls:
  2829 ;;		_getAD
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _getCDS_AD
  2837  07C3                     _getCDS_AD:	
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  2841                           ;getCDS_AD@channel1 stored from wreg
  2842  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  2843  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  2844  07C5  00D8               	movwf	getCDS_AD@channel1
  2845                           
  2846                           ;CDS_B1.c: 49: char i = 0, j = 0;
  2847  07C6  01D6               	clrf	getCDS_AD@i
  2848  07C7  01D7               	clrf	getCDS_AD@j
  2849                           
  2850                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  2851  07C8  1DA6               	btfss	__CDS,3
  2852  07C9  0008               	return
  2853                           
  2854                           ;CDS_B1.c: 51: _CDS.GO = 1;
  2855  07CA  14A6               	bsf	__CDS,1
  2856                           
  2857                           ;CDS_B1.c: 52: _CDS.ADRES = getAD(channel1, 0x70);
  2858  07CB  3070               	movlw	112
  2859  07CC  00D4               	movwf	??_getCDS_AD
  2860  07CD  0854               	movf	??_getCDS_AD,w
  2861  07CE  00F4               	movwf	getAD@adcon1
  2862  07CF  0858               	movf	getCDS_AD@channel1,w
  2863  07D0  158A  27E4  118A   	fcall	_getAD
  2864  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2865  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2866  07D5  00D5               	movwf	??_getCDS_AD+1
  2867  07D6  0855               	movf	??_getCDS_AD+1,w
  2868  07D7  00AA               	movwf	__CDS+4
  2869                           
  2870                           ;CDS_B1.c: 53: _CDS.VRAD = _CDS.ADRES;
  2871  07D8  082A               	movf	__CDS+4,w
  2872  07D9  00D4               	movwf	??_getCDS_AD
  2873  07DA  0854               	movf	??_getCDS_AD,w
  2874  07DB  00A8               	movwf	__CDS+2
  2875                           
  2876                           ;CDS_B1.c: 54: _CDS.ADRES = getAD(channel2, 0x70);
  2877  07DC  3070               	movlw	112
  2878  07DD  00D4               	movwf	??_getCDS_AD
  2879  07DE  0854               	movf	??_getCDS_AD,w
  2880  07DF  00F4               	movwf	getAD@adcon1
  2881  07E0  0853               	movf	getCDS_AD@channel2,w
  2882  07E1  158A  27E4         	fcall	_getAD
  2883  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2884  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2885  07E5  00D5               	movwf	??_getCDS_AD+1
  2886  07E6  0855               	movf	??_getCDS_AD+1,w
  2887  07E7  00AA               	movwf	__CDS+4
  2888                           
  2889                           ;CDS_B1.c: 55: _CDS.SignalAD = _CDS.ADRES;
  2890  07E8  082A               	movf	__CDS+4,w
  2891  07E9  00D4               	movwf	??_getCDS_AD
  2892  07EA  0854               	movf	??_getCDS_AD,w
  2893  07EB  00A9               	movwf	__CDS+3
  2894  07EC  0008               	return
  2895  07ED                     __end_of_getCDS_AD:	
  2896                           
  2897                           	psect	text6
  2898  0FE4                     __ptext6:	
  2899 ;; *************** function _getAD *****************
  2900 ;; Defined at:
  2901 ;;		line 432 in file "../src/MCU_B1.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  adcon0          1    wreg     unsigned char 
  2904 ;;  adcon1          1    4[COMMON] unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  adcon0          1    5[COMMON] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2916 ;;      Params:         1       0       0       0
  2917 ;;      Locals:         1       0       0       0
  2918 ;;      Temps:          0       0       0       0
  2919 ;;      Totals:         2       0       0       0
  2920 ;;Total ram usage:        2 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    3
  2923 ;; This function calls:
  2924 ;;		_Timeout_Counter
  2925 ;;		_set_TimeoutCleared
  2926 ;; This function is called by:
  2927 ;;		_getCDS_AD
  2928 ;;		_getPIR_AD
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _getAD
  2934  0FE4                     _getAD:	
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  2938                           ;getAD@adcon0 stored from wreg
  2939  0FE4  00F5               	movwf	getAD@adcon0
  2940                           
  2941                           ;MCU_B1.c: 433: ADCON0 = adcon0;
  2942  0FE5  0875               	movf	getAD@adcon0,w
  2943  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0FE8  009F               	movwf	31	;volatile
  2946                           
  2947                           ;MCU_B1.c: 434: ADCON1 = adcon1;
  2948  0FE9  0874               	movf	getAD@adcon1,w
  2949  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  2951  0FEC  009F               	movwf	31	;volatile
  2952                           
  2953                           ;MCU_B1.c: 435: GO_nDONE = 1;
  2954  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0FEF  149F               	bsf	31,1	;volatile
  2957                           
  2958                           ;MCU_B1.c: 436: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  2959  0FF0  2FF4               	goto	l2826
  2960  0FF1                     l2824:	
  2961                           
  2962                           ;MCU_B1.c: 437: Timeout_Counter();
  2963  0FF1  158A  2727  158A   	fcall	_Timeout_Counter
  2964  0FF4                     l2826:	
  2965  0FF4  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0FF5  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0FF6  1C9F               	btfss	31,1	;volatile
  2968  0FF7  2FFA               	goto	l2830
  2969  0FF8  1D23               	btfss	_myMain+3,2
  2970  0FF9  2FF1               	goto	l2824
  2971  0FFA                     l2830:	
  2972                           
  2973                           ;MCU_B1.c: 438: };
  2974                           ;MCU_B1.c: 439: set_TimeoutCleared();
  2975  0FFA  158A  264F         	fcall	_set_TimeoutCleared
  2976                           
  2977                           ;MCU_B1.c: 440: return ADRES;
  2978  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0FFE  081E               	movf	30,w	;volatile
  2981  0FFF  0008               	return
  2982  1000                     __end_of_getAD:	
  2983                           
  2984                           	psect	text7
  2985  0F16                     __ptext7:	
  2986 ;; *************** function _WDT_Main *****************
  2987 ;; Defined at:
  2988 ;;		line 1103 in file "../src/MCU_B1.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;		None               void
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, pclath, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3002 ;;      Params:         0       0       0       0
  3003 ;;      Locals:         0       0       0       0
  3004 ;;      Temps:          1       0       0       0
  3005 ;;      Totals:         1       0       0       0
  3006 ;;Total ram usage:        1 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    3
  3009 ;; This function calls:
  3010 ;;		_WDT_Clearing
  3011 ;; This function is called by:
  3012 ;;		_main
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016                           
  3017                           ;psect for function _WDT_Main
  3018  0F16                     _WDT_Main:	
  3019                           
  3020                           ;MCU_B1.c: 1104: if (WDT.Enable == 1) {
  3021                           
  3022                           ;incstack = 0
  3023                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3024  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0F18  1C32               	btfss	_WDT,0
  3027  0F19  0008               	return
  3028                           
  3029                           ;MCU_B1.c: 1105: if (WDT.Timer-- > 0) {
  3030  0F1A  3001               	movlw	1
  3031  0F1B  02B3               	subwf	_WDT+1,f
  3032  0F1C  0833               	movf	_WDT+1,w
  3033  0F1D  3AFF               	xorlw	255
  3034  0F1E  1903               	skipnz
  3035  0F1F  0008               	return
  3036                           
  3037                           ;MCU_B1.c: 1106: WDT.Timer = 100;
  3038  0F20  3064               	movlw	100
  3039  0F21  00F4               	movwf	??_WDT_Main
  3040  0F22  0874               	movf	??_WDT_Main,w
  3041  0F23  00B3               	movwf	_WDT+1
  3042                           
  3043                           ;MCU_B1.c: 1107: WDT_Clearing();
  3044  0F24  118A  2002         	fcall	_WDT_Clearing
  3045  0F26  0008               	return
  3046  0F27                     __end_of_WDT_Main:	
  3047                           
  3048                           	psect	text8
  3049  0002                     __ptext8:	
  3050 ;; *************** function _WDT_Clearing *****************
  3051 ;; Defined at:
  3052 ;;		line 1113 in file "../src/MCU_B1.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		None
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3066 ;;      Params:         0       0       0       0
  3067 ;;      Locals:         0       0       0       0
  3068 ;;      Temps:          0       0       0       0
  3069 ;;      Totals:         0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_WDT_Main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _WDT_Clearing
  3082  0002                     _WDT_Clearing:	
  3083                           
  3084                           ;incstack = 0
  3085                           ; Regs used in _WDT_Clearing: []
  3086  0002  0064               	clrwdt	;# 
  3087  0003  0008               	return
  3088  0004                     __end_of_WDT_Clearing:	
  3089                           
  3090                           	psect	text9
  3091  0E63                     __ptext9:	
  3092 ;; *************** function _Switch_Main *****************
  3093 ;; Defined at:
  3094 ;;		line 72 in file "../src/Switch_B1.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3108 ;;      Params:         0       0       0       0
  3109 ;;      Locals:         0       0       0       0
  3110 ;;      Temps:          0       0       0       0
  3111 ;;      Totals:         0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    4
  3115 ;; This function calls:
  3116 ;;		_TouchPower
  3117 ;;		_setSw_Main
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           
  3124                           ;psect for function _Switch_Main
  3125  0E63                     _Switch_Main:	
  3126                           
  3127                           ;Switch_B1.c: 75: setSw_Main(1);
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in _Switch_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3131  0E63  3001               	movlw	1
  3132  0E64  118A  2353  158A   	fcall	_setSw_Main
  3133                           
  3134                           ;Switch_B1.c: 87: TouchPower();
  3135  0E67  158A  273B         	fcall	_TouchPower
  3136  0E69  0008               	return
  3137  0E6A                     __end_of_Switch_Main:	
  3138                           
  3139                           	psect	text10
  3140  0353                     __ptext10:	
  3141 ;; *************** function _setSw_Main *****************
  3142 ;; Defined at:
  3143 ;;		line 121 in file "../src/Switch_B1.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  sw              1    wreg     unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  sw              1    2[BANK0 ] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;		None               void
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3157 ;;      Params:         0       0       0       0
  3158 ;;      Locals:         0       1       0       0
  3159 ;;      Temps:          0       2       0       0
  3160 ;;      Totals:         0       3       0       0
  3161 ;;Total ram usage:        3 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    3
  3164 ;; This function calls:
  3165 ;;		_SwPointSelect
  3166 ;;		_getMain_All_Error_Status
  3167 ;;		_getSw_KeyStatus
  3168 ;; This function is called by:
  3169 ;;		_Switch_Main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _setSw_Main
  3175  0353                     _setSw_Main:	
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in _setSw_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3179                           ;setSw_Main@sw stored from wreg
  3180  0353  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0354  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0355  00D5               	movwf	setSw_Main@sw
  3183                           
  3184                           ;Switch_B1.c: 122: SwPointSelect(sw);
  3185  0356  0855               	movf	setSw_Main@sw,w
  3186  0357  158A  26A8  118A   	fcall	_SwPointSelect
  3187                           
  3188                           ;Switch_B1.c: 123: if (Sw->Enable == 1) {
  3189  035A  0879               	movf	_Sw,w
  3190  035B  0084               	movwf	4
  3191  035C  1383               	bcf	3,7	;select IRP bank0
  3192  035D  1C00               	btfss	0,0
  3193  035E  2C58               	goto	l1046
  3194                           
  3195                           ;Switch_B1.c: 125: if (getMain_All_Error_Status(0) == 0) {
  3196  035F  3000               	movlw	0
  3197  0360  158A  2639  118A   	fcall	_getMain_All_Error_Status
  3198  0363  3800               	iorlw	0
  3199  0364  1D03               	skipz
  3200  0365  2B81               	goto	l3884
  3201                           
  3202                           ;Switch_B1.c: 126: Sw->Detect = 0;
  3203  0366  0A79               	incf	_Sw,w
  3204  0367  0084               	movwf	4
  3205  0368  1383               	bcf	3,7	;select IRP bank0
  3206  0369  1080               	bcf	0,1
  3207                           
  3208                           ;Switch_B1.c: 127: Sw->Touch = getSw_KeyStatus(sw) == 1 ? 1 : 0;
  3209  036A  1283               	bcf	3,5	;RP0=0, select bank0
  3210  036B  1303               	bcf	3,6	;RP1=0, select bank0
  3211  036C  0855               	movf	setSw_Main@sw,w
  3212  036D  158A  268B  118A   	fcall	_getSw_KeyStatus
  3213  0370  3A01               	xorlw	1
  3214  0371  3000               	movlw	0
  3215  0372  1903               	skipnz
  3216  0373  3001               	movlw	1
  3217  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0376  00D3               	movwf	??_setSw_Main
  3220  0377  0879               	movf	_Sw,w
  3221  0378  0084               	movwf	4
  3222  0379  0DD3               	rlf	??_setSw_Main,f
  3223  037A  1383               	bcf	3,7	;select IRP bank0
  3224  037B  0800               	movf	0,w
  3225  037C  0653               	xorwf	??_setSw_Main,w
  3226  037D  39FD               	andlw	-3
  3227  037E  0653               	xorwf	??_setSw_Main,w
  3228  037F  0080               	movwf	0
  3229                           
  3230                           ;Switch_B1.c: 128: } else {
  3231  0380  2B8F               	goto	l1048
  3232  0381                     l3884:	
  3233                           
  3234                           ;Switch_B1.c: 129: if (Sw->Detect == 0) {
  3235  0381  0A79               	incf	_Sw,w
  3236  0382  0084               	movwf	4
  3237  0383  1383               	bcf	3,7	;select IRP bank0
  3238  0384  1880               	btfsc	0,1
  3239  0385  2B8F               	goto	l1048
  3240                           
  3241                           ;Switch_B1.c: 130: Sw->Detect = 1;
  3242  0386  0A79               	incf	_Sw,w
  3243  0387  0084               	movwf	4
  3244  0388  1480               	bsf	0,1
  3245                           
  3246                           ;Switch_B1.c: 132: Sw->Touch = 0;
  3247  0389  0879               	movf	_Sw,w
  3248  038A  0084               	movwf	4
  3249  038B  1080               	bcf	0,1
  3250                           
  3251                           ;Switch_B1.c: 133: Sw->Debounce = 1;
  3252  038C  0879               	movf	_Sw,w
  3253  038D  0084               	movwf	4
  3254  038E  1500               	bsf	0,2
  3255  038F                     l1048:	
  3256                           
  3257                           ;Switch_B1.c: 134: }
  3258                           ;Switch_B1.c: 135: }
  3259                           ;Switch_B1.c: 137: if (Sw->Touch == 1) {
  3260  038F  0879               	movf	_Sw,w
  3261  0390  0084               	movwf	4
  3262  0391  1C80               	btfss	0,1
  3263  0392  2C21               	goto	l3926
  3264                           
  3265                           ;Switch_B1.c: 138: if (Sw->Debounce == 0) {
  3266  0393  0879               	movf	_Sw,w
  3267  0394  0084               	movwf	4
  3268  0395  1900               	btfsc	0,2
  3269  0396  2BAF               	goto	l3898
  3270                           
  3271                           ;Switch_B1.c: 139: Sw->DebounceTime++;
  3272  0397  3001               	movlw	1
  3273  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3275  039A  00D3               	movwf	??_setSw_Main
  3276  039B  0879               	movf	_Sw,w
  3277  039C  3E02               	addlw	2
  3278  039D  0084               	movwf	4
  3279  039E  0853               	movf	??_setSw_Main,w
  3280  039F  0780               	addwf	0,f
  3281                           
  3282                           ;Switch_B1.c: 140: if (Sw->DebounceTime >= (60 / 20)) {
  3283  03A0  0879               	movf	_Sw,w
  3284  03A1  3E02               	addlw	2
  3285  03A2  0084               	movwf	4
  3286  03A3  3003               	movlw	3
  3287  03A4  0200               	subwf	0,w
  3288  03A5  1C03               	skipc
  3289  03A6  0008               	return
  3290                           
  3291                           ;Switch_B1.c: 141: Sw->DebounceTime = 0;
  3292  03A7  0879               	movf	_Sw,w
  3293  03A8  3E02               	addlw	2
  3294  03A9  0084               	movwf	4
  3295  03AA  0180               	clrf	0
  3296                           
  3297                           ;Switch_B1.c: 142: Sw->Debounce = 1;
  3298  03AB  0879               	movf	_Sw,w
  3299  03AC  0084               	movwf	4
  3300  03AD  1500               	bsf	0,2
  3301                           
  3302                           ;Switch_B1.c: 148: }
  3303                           ;Switch_B1.c: 149: } else {
  3304  03AE  0008               	return
  3305  03AF                     l3898:	
  3306                           
  3307                           ;Switch_B1.c: 150: if (Sw->Hold1 == 0) {
  3308  03AF  0879               	movf	_Sw,w
  3309  03B0  0084               	movwf	4
  3310  03B1  1980               	btfsc	0,3
  3311  03B2  2BD3               	goto	l3906
  3312                           
  3313                           ;Switch_B1.c: 151: Sw->Hold1Time++;
  3314  03B3  0879               	movf	_Sw,w
  3315  03B4  3E03               	addlw	3
  3316  03B5  0084               	movwf	4
  3317  03B6  3001               	movlw	1
  3318  03B7  0780               	addwf	0,f
  3319  03B8  0A84               	incf	4,f
  3320  03B9  1803               	skipnc
  3321  03BA  0A80               	incf	0,f
  3322                           
  3323                           ;Switch_B1.c: 152: if (Sw->Hold1Time >= (1500 / 20)) {
  3324  03BB  0879               	movf	_Sw,w
  3325  03BC  3E03               	addlw	3
  3326  03BD  0084               	movwf	4
  3327  03BE  0800               	movf	0,w
  3328  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3329  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3330  03C1  00D3               	movwf	??_setSw_Main
  3331  03C2  0A84               	incf	4,f
  3332  03C3  0800               	movf	0,w
  3333  03C4  00D4               	movwf	??_setSw_Main+1
  3334  03C5  3000               	movlw	0
  3335  03C6  0254               	subwf	??_setSw_Main+1,w
  3336  03C7  304B               	movlw	75
  3337  03C8  1903               	skipnz
  3338  03C9  0253               	subwf	??_setSw_Main,w
  3339  03CA  1C03               	skipc
  3340  03CB  0008               	return
  3341                           
  3342                           ;Switch_B1.c: 153: Sw->Hold1Time = 0;
  3343  03CC  0879               	movf	_Sw,w
  3344  03CD  3E03               	addlw	3
  3345  03CE  0084               	movwf	4
  3346  03CF  0180               	clrf	0
  3347  03D0  0A84               	incf	4,f
  3348  03D1  0180               	clrf	0
  3349                           
  3350                           ;Switch_B1.c: 160: }
  3351                           ;Switch_B1.c: 161: } else {
  3352  03D2  0008               	return
  3353  03D3                     l3906:	
  3354                           
  3355                           ;Switch_B1.c: 162: if (Sw->Hold2 == 0) {
  3356  03D3  0879               	movf	_Sw,w
  3357  03D4  0084               	movwf	4
  3358  03D5  1A00               	btfsc	0,4
  3359  03D6  2BFA               	goto	l3916
  3360                           
  3361                           ;Switch_B1.c: 163: Sw->Hold2Time++;
  3362  03D7  0879               	movf	_Sw,w
  3363  03D8  3E05               	addlw	5
  3364  03D9  0084               	movwf	4
  3365  03DA  3001               	movlw	1
  3366  03DB  0780               	addwf	0,f
  3367  03DC  0A84               	incf	4,f
  3368  03DD  1803               	skipnc
  3369  03DE  0A80               	incf	0,f
  3370                           
  3371                           ;Switch_B1.c: 164: if (Sw->Hold2Time >= (1500 / 20)) {
  3372  03DF  0879               	movf	_Sw,w
  3373  03E0  3E05               	addlw	5
  3374  03E1  0084               	movwf	4
  3375  03E2  0800               	movf	0,w
  3376  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3377  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3378  03E5  00D3               	movwf	??_setSw_Main
  3379  03E6  0A84               	incf	4,f
  3380  03E7  0800               	movf	0,w
  3381  03E8  00D4               	movwf	??_setSw_Main+1
  3382  03E9  3000               	movlw	0
  3383  03EA  0254               	subwf	??_setSw_Main+1,w
  3384  03EB  304B               	movlw	75
  3385  03EC  1903               	skipnz
  3386  03ED  0253               	subwf	??_setSw_Main,w
  3387  03EE  1C03               	skipc
  3388  03EF  0008               	return
  3389                           
  3390                           ;Switch_B1.c: 165: Sw->Hold2Time = 0;
  3391  03F0  0879               	movf	_Sw,w
  3392  03F1  3E05               	addlw	5
  3393  03F2  0084               	movwf	4
  3394  03F3  0180               	clrf	0
  3395  03F4  0A84               	incf	4,f
  3396  03F5  0180               	clrf	0
  3397                           
  3398                           ;Switch_B1.c: 166: Sw->Hold2 = 1;
  3399  03F6  0879               	movf	_Sw,w
  3400  03F7  0084               	movwf	4
  3401  03F8  1600               	bsf	0,4
  3402                           
  3403                           ;Switch_B1.c: 176: }
  3404                           ;Switch_B1.c: 177: } else {
  3405  03F9  0008               	return
  3406  03FA                     l3916:	
  3407                           
  3408                           ;Switch_B1.c: 178: if (Sw->Hold3 == 0) {
  3409  03FA  0879               	movf	_Sw,w
  3410  03FB  0084               	movwf	4
  3411  03FC  1A80               	btfsc	0,5
  3412  03FD  0008               	return
  3413                           
  3414                           ;Switch_B1.c: 179: Sw->Hold3Time++;
  3415  03FE  0879               	movf	_Sw,w
  3416  03FF  3E07               	addlw	7
  3417  0400  0084               	movwf	4
  3418  0401  3001               	movlw	1
  3419  0402  0780               	addwf	0,f
  3420  0403  0A84               	incf	4,f
  3421  0404  1803               	skipnc
  3422  0405  0A80               	incf	0,f
  3423                           
  3424                           ;Switch_B1.c: 180: if (Sw->Hold3Time >= (3000 / 20)) {
  3425  0406  0879               	movf	_Sw,w
  3426  0407  3E07               	addlw	7
  3427  0408  0084               	movwf	4
  3428  0409  0800               	movf	0,w
  3429  040A  1283               	bcf	3,5	;RP0=0, select bank0
  3430  040B  1303               	bcf	3,6	;RP1=0, select bank0
  3431  040C  00D3               	movwf	??_setSw_Main
  3432  040D  0A84               	incf	4,f
  3433  040E  0800               	movf	0,w
  3434  040F  00D4               	movwf	??_setSw_Main+1
  3435  0410  3000               	movlw	0
  3436  0411  0254               	subwf	??_setSw_Main+1,w
  3437  0412  3096               	movlw	150
  3438  0413  1903               	skipnz
  3439  0414  0253               	subwf	??_setSw_Main,w
  3440  0415  1C03               	skipc
  3441  0416  0008               	return
  3442                           
  3443                           ;Switch_B1.c: 181: Sw->Hold3Time = 0;
  3444  0417  0879               	movf	_Sw,w
  3445  0418  3E07               	addlw	7
  3446  0419  0084               	movwf	4
  3447  041A  0180               	clrf	0
  3448  041B  0A84               	incf	4,f
  3449  041C  0180               	clrf	0
  3450                           
  3451                           ;Switch_B1.c: 182: Sw->Hold3 = 1;
  3452  041D  0879               	movf	_Sw,w
  3453  041E  0084               	movwf	4
  3454  041F  1680               	bsf	0,5
  3455                           
  3456                           ;Switch_B1.c: 188: }
  3457                           ;Switch_B1.c: 189: }
  3458                           ;Switch_B1.c: 190: }
  3459                           ;Switch_B1.c: 191: }
  3460                           ;Switch_B1.c: 192: }
  3461                           ;Switch_B1.c: 193: } else {
  3462  0420  0008               	return
  3463  0421                     l3926:	
  3464                           
  3465                           ;Switch_B1.c: 194: if (Sw->Debounce == 1) {
  3466  0421  0879               	movf	_Sw,w
  3467  0422  0084               	movwf	4
  3468  0423  1D00               	btfss	0,2
  3469  0424  0008               	return
  3470                           
  3471                           ;Switch_B1.c: 195: Sw->DebounceTime++;
  3472  0425  3001               	movlw	1
  3473  0426  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0427  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0428  00D3               	movwf	??_setSw_Main
  3476  0429  0879               	movf	_Sw,w
  3477  042A  3E02               	addlw	2
  3478  042B  0084               	movwf	4
  3479  042C  0853               	movf	??_setSw_Main,w
  3480  042D  0780               	addwf	0,f
  3481                           
  3482                           ;Switch_B1.c: 196: if (Sw->DebounceTime >= (60 / 20)) {
  3483  042E  0879               	movf	_Sw,w
  3484  042F  3E02               	addlw	2
  3485  0430  0084               	movwf	4
  3486  0431  3003               	movlw	3
  3487  0432  0200               	subwf	0,w
  3488  0433  1C03               	skipc
  3489  0434  0008               	return
  3490                           
  3491                           ;Switch_B1.c: 197: Sw->DebounceTime = 0;
  3492  0435  0879               	movf	_Sw,w
  3493  0436  3E02               	addlw	2
  3494  0437  0084               	movwf	4
  3495  0438  0180               	clrf	0
  3496                           
  3497                           ;Switch_B1.c: 198: Sw->Debounce = 0;
  3498  0439  0879               	movf	_Sw,w
  3499  043A  0084               	movwf	4
  3500  043B  1100               	bcf	0,2
  3501                           
  3502                           ;Switch_B1.c: 199: Sw->Hold1Time = 0;
  3503  043C  0879               	movf	_Sw,w
  3504  043D  3E03               	addlw	3
  3505  043E  0084               	movwf	4
  3506  043F  0180               	clrf	0
  3507  0440  0A84               	incf	4,f
  3508  0441  0180               	clrf	0
  3509                           
  3510                           ;Switch_B1.c: 200: Sw->Hold1 = 0;
  3511  0442  0879               	movf	_Sw,w
  3512  0443  0084               	movwf	4
  3513  0444  1180               	bcf	0,3
  3514                           
  3515                           ;Switch_B1.c: 201: Sw->Hold2Time = 0;
  3516  0445  0879               	movf	_Sw,w
  3517  0446  3E05               	addlw	5
  3518  0447  0084               	movwf	4
  3519  0448  0180               	clrf	0
  3520  0449  0A84               	incf	4,f
  3521  044A  0180               	clrf	0
  3522                           
  3523                           ;Switch_B1.c: 202: Sw->Hold2 = 0;
  3524  044B  0879               	movf	_Sw,w
  3525  044C  0084               	movwf	4
  3526  044D  1200               	bcf	0,4
  3527                           
  3528                           ;Switch_B1.c: 203: Sw->Hold3Time = 0;
  3529  044E  0879               	movf	_Sw,w
  3530  044F  3E07               	addlw	7
  3531  0450  0084               	movwf	4
  3532  0451  0180               	clrf	0
  3533  0452  0A84               	incf	4,f
  3534  0453  0180               	clrf	0
  3535                           
  3536                           ;Switch_B1.c: 204: Sw->Hold3 = 0;
  3537  0454  0879               	movf	_Sw,w
  3538  0455  0084               	movwf	4
  3539  0456  1280               	bcf	0,5
  3540                           
  3541                           ;Switch_B1.c: 212: }
  3542                           ;Switch_B1.c: 213: }
  3543                           ;Switch_B1.c: 214: }
  3544                           ;Switch_B1.c: 215: } else {
  3545  0457  0008               	return
  3546  0458                     l1046:	
  3547                           
  3548                           ;Switch_B1.c: 216: if (myMain.PowerON == 1) {
  3549  0458  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0459  1303               	bcf	3,6	;RP1=0, select bank0
  3551  045A  1C20               	btfss	_myMain,0
  3552  045B  0008               	return
  3553                           
  3554                           ;Switch_B1.c: 217: Sw->Enable = 1;
  3555  045C  0879               	movf	_Sw,w
  3556  045D  0084               	movwf	4
  3557  045E  1400               	bsf	0,0
  3558  045F  0008               	return
  3559  0460                     __end_of_setSw_Main:	
  3560                           
  3561                           	psect	text11
  3562  0E8B                     __ptext11:	
  3563 ;; *************** function _getSw_KeyStatus *****************
  3564 ;; Defined at:
  3565 ;;		line 223 in file "../src/Switch_B1.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  sw              1    wreg     unsigned char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  sw              1    0[COMMON] unsigned char 
  3570 ;;  status          1    4[COMMON] unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      unsigned char 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3580 ;;      Params:         0       0       0       0
  3581 ;;      Locals:         1       0       0       0
  3582 ;;      Temps:          0       0       0       0
  3583 ;;      Totals:         1       0       0       0
  3584 ;;Total ram usage:        1 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    2
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_setSw_Main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _getSw_KeyStatus
  3596  0E8B                     _getSw_KeyStatus:	
  3597                           
  3598                           ;Switch_B1.c: 224: char status = 0;
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _getSw_KeyStatus: [wreg+status,2]
  3602  0E8B  01F4               	clrf	getSw_KeyStatus@status
  3603                           
  3604                           ;Switch_B1.c: 247: status = RB4 == 1 ? 1 : 0;
  3605  0E8C  3000               	movlw	0
  3606  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0E8F  1A06               	btfsc	6,4	;volatile
  3609  0E90  3001               	movlw	1
  3610  0E91  00F4               	movwf	getSw_KeyStatus@status
  3611                           
  3612                           ;Switch_B1.c: 253: return status;
  3613  0E92  0874               	movf	getSw_KeyStatus@status,w
  3614  0E93  0008               	return
  3615  0E94                     __end_of_getSw_KeyStatus:	
  3616                           
  3617                           	psect	text12
  3618  0EA8                     __ptext12:	
  3619 ;; *************** function _SwPointSelect *****************
  3620 ;; Defined at:
  3621 ;;		line 25 in file "../src/Switch_B1.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  sw              1    wreg     unsigned char 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  sw              1    5[COMMON] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;		None               void
  3628 ;; Registers used:
  3629 ;;		wreg
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3635 ;;      Params:         0       0       0       0
  3636 ;;      Locals:         1       0       0       0
  3637 ;;      Temps:          1       0       0       0
  3638 ;;      Totals:         2       0       0       0
  3639 ;;Total ram usage:        2 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    2
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_setSw_Main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _SwPointSelect
  3651  0EA8                     _SwPointSelect:	
  3652                           
  3653                           ;incstack = 0
  3654                           ; Regs used in _SwPointSelect: [wreg]
  3655                           ;SwPointSelect@sw stored from wreg
  3656  0EA8  00F5               	movwf	SwPointSelect@sw
  3657                           
  3658                           ;Switch_B1.c: 28: if (sw == 1) {
  3659  0EA9  0875               	movf	SwPointSelect@sw,w
  3660  0EAA  3A01               	xorlw	1
  3661  0EAB  1D03               	skipz
  3662  0EAC  0008               	return
  3663                           
  3664                           ;Switch_B1.c: 29: Sw = &Sw1;
  3665  0EAD  3037               	movlw	_Sw1& (0+255)
  3666  0EAE  00F4               	movwf	??_SwPointSelect
  3667  0EAF  0874               	movf	??_SwPointSelect,w
  3668  0EB0  00F9               	movwf	_Sw
  3669  0EB1  0008               	return
  3670  0EB2                     __end_of_SwPointSelect:	
  3671                           
  3672                           	psect	text13
  3673  0E9E                     __ptext13:	
  3674 ;; *************** function _Switch_Initialization *****************
  3675 ;; Defined at:
  3676 ;;		line 46 in file "../src/Switch_B1.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;		None               void
  3683 ;; Registers used:
  3684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3690 ;;      Params:         0       0       0       0
  3691 ;;      Locals:         0       0       0       0
  3692 ;;      Temps:          0       0       0       0
  3693 ;;      Totals:         0       0       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    5
  3697 ;; This function calls:
  3698 ;;		_TouchPower
  3699 ;;		_setSw_Initialization
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _Switch_Initialization
  3707  0E9E                     _Switch_Initialization:	
  3708                           
  3709                           ;Switch_B1.c: 47: TouchPower();
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _Switch_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3713  0E9E  158A  273B  158A   	fcall	_TouchPower
  3714                           
  3715                           ;Switch_B1.c: 49: WPUB1 = 0;
  3716  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  3717  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  3718  0EA3  1095               	bcf	21,1	;volatile
  3719                           
  3720                           ;Switch_B1.c: 58: setSw_Initialization(1);
  3721  0EA4  3001               	movlw	1
  3722  0EA5  158A  2682         	fcall	_setSw_Initialization
  3723  0EA7  0008               	return
  3724  0EA8                     __end_of_Switch_Initialization:	
  3725                           
  3726                           	psect	text14
  3727  0E82                     __ptext14:	
  3728 ;; *************** function _setSw_Initialization *****************
  3729 ;; Defined at:
  3730 ;;		line 93 in file "../src/Switch_B1.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  sw              1    wreg     unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  sw              1    2[BANK0 ] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;		None               void
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3744 ;;      Params:         0       0       0       0
  3745 ;;      Locals:         0       1       0       0
  3746 ;;      Temps:          0       0       0       0
  3747 ;;      Totals:         0       1       0       0
  3748 ;;Total ram usage:        1 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    4
  3751 ;; This function calls:
  3752 ;;		_setLED
  3753 ;; This function is called by:
  3754 ;;		_Switch_Initialization
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           
  3759                           ;psect for function _setSw_Initialization
  3760  0E82                     _setSw_Initialization:	
  3761                           
  3762                           ;incstack = 0
  3763                           ; Regs used in _setSw_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3764                           ;setSw_Initialization@sw stored from wreg
  3765  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0E84  00D5               	movwf	setSw_Initialization@sw
  3768                           
  3769                           ;Switch_B1.c: 94: setLED(sw, 1);
  3770  0E85  01D3               	clrf	setLED@command
  3771  0E86  0AD3               	incf	setLED@command,f
  3772  0E87  0855               	movf	setSw_Initialization@sw,w
  3773  0E88  118A  25CA         	fcall	_setLED
  3774  0E8A  0008               	return
  3775  0E8B                     __end_of_setSw_Initialization:	
  3776                           
  3777                           	psect	text15
  3778  0F3B                     __ptext15:	
  3779 ;; *************** function _TouchPower *****************
  3780 ;; Defined at:
  3781 ;;		line 10 in file "../src/Switch_B1.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;		None               void
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0, pclath, cstack
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3795 ;;      Params:         0       0       0       0
  3796 ;;      Locals:         0       0       0       0
  3797 ;;      Temps:          0       0       0       0
  3798 ;;      Totals:         0       0       0       0
  3799 ;;Total ram usage:        0 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    3
  3802 ;; This function calls:
  3803 ;;		_Timeout_Counter
  3804 ;;		_set_TimeoutCleared
  3805 ;; This function is called by:
  3806 ;;		_Switch_Initialization
  3807 ;;		_Switch_Main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _TouchPower
  3813  0F3B                     _TouchPower:	
  3814                           
  3815                           ;Switch_B1.c: 11: if (myMain.PowerON == 1) {
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in _TouchPower: [wreg+status,2+status,0+pclath+cstack]
  3819  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0F3D  1C20               	btfss	_myMain,0
  3822  0F3E  0008               	return
  3823                           
  3824                           ;Switch_B1.c: 12: if (RB5 == 0) {
  3825  0F3F  1A86               	btfsc	6,5	;volatile
  3826  0F40  0008               	return
  3827  0F41  2F46               	goto	l2948
  3828  0F42                     l1026:	
  3829                           ;Switch_B1.c: 13: while (RB5 == 0 && myMain.Timeout == 0) {
  3830                           
  3831                           
  3832                           ;Switch_B1.c: 14: RB5 = 1;
  3833  0F42  1686               	bsf	6,5	;volatile
  3834                           
  3835                           ;Switch_B1.c: 15: Timeout_Counter();
  3836  0F43  158A  2727  158A   	fcall	_Timeout_Counter
  3837  0F46                     l2948:	
  3838  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3839  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3840  0F48  1A86               	btfsc	6,5	;volatile
  3841  0F49  2F4C               	goto	l2952
  3842  0F4A  1D23               	btfss	_myMain+3,2
  3843  0F4B  2F42               	goto	l1026
  3844  0F4C                     l2952:	
  3845                           
  3846                           ;Switch_B1.c: 16: }
  3847                           ;Switch_B1.c: 17: set_TimeoutCleared();
  3848  0F4C  158A  264F         	fcall	_set_TimeoutCleared
  3849  0F4E  0008               	return
  3850  0F4F                     __end_of_TouchPower:	
  3851                           
  3852                           	psect	text16
  3853  0E4F                     __ptext16:	
  3854 ;; *************** function _set_TimeoutCleared *****************
  3855 ;; Defined at:
  3856 ;;		line 281 in file "../src/Main_B1.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;		None               void
  3863 ;; Registers used:
  3864 ;;		status,2
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3870 ;;      Params:         0       0       0       0
  3871 ;;      Locals:         0       0       0       0
  3872 ;;      Temps:          0       0       0       0
  3873 ;;      Totals:         0       0       0       0
  3874 ;;Total ram usage:        0 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    2
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_getAD
  3881 ;;		_TouchPower
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _set_TimeoutCleared
  3887  0E4F                     _set_TimeoutCleared:	
  3888                           
  3889                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _set_TimeoutCleared: [status,2]
  3893  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0E51  1123               	bcf	_myMain+3,2
  3896                           
  3897                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3898  0E52  01A4               	clrf	_myMain+4
  3899  0E53  01A5               	clrf	_myMain+5
  3900  0E54  0008               	return
  3901  0E55                     __end_of_set_TimeoutCleared:	
  3902                           
  3903                           	psect	text17
  3904  0F27                     __ptext17:	
  3905 ;; *************** function _Timeout_Counter *****************
  3906 ;; Defined at:
  3907 ;;		line 272 in file "../src/Main_B1.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;		None               void
  3914 ;; Registers used:
  3915 ;;		wreg, status,2
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3921 ;;      Params:         0       0       0       0
  3922 ;;      Locals:         0       0       0       0
  3923 ;;      Temps:          0       0       0       0
  3924 ;;      Totals:         0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    2
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_getAD
  3932 ;;		_TouchPower
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _Timeout_Counter
  3938  0F27                     _Timeout_Counter:	
  3939                           
  3940                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3944  0F27  3001               	movlw	1
  3945  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3946  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3947  0F2A  07A4               	addwf	_myMain+4,f
  3948  0F2B  1803               	skipnc
  3949  0F2C  0AA5               	incf	_myMain+5,f
  3950  0F2D  3000               	movlw	0
  3951  0F2E  07A5               	addwf	_myMain+5,f
  3952                           
  3953                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3954  0F2F  3061               	movlw	97
  3955  0F30  0625               	xorwf	_myMain+5,w
  3956  0F31  1D03               	skipz
  3957  0F32  2F35               	goto	u2065
  3958  0F33  30A8               	movlw	168
  3959  0F34  0624               	xorwf	_myMain+4,w
  3960  0F35                     u2065:	
  3961  0F35  1D03               	skipz
  3962  0F36  0008               	return
  3963                           
  3964                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3965  0F37  01A4               	clrf	_myMain+4
  3966  0F38  01A5               	clrf	_myMain+5
  3967                           
  3968                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3969  0F39  1523               	bsf	_myMain+3,2
  3970  0F3A  0008               	return
  3971  0F3B                     __end_of_Timeout_Counter:	
  3972                           
  3973                           	psect	text18
  3974  0026                     __ptext18:	
  3975 ;; *************** function _PIR_Main *****************
  3976 ;; Defined at:
  3977 ;;		line 13 in file "../src/PIR_B1.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  LightsStatus    1   12[BANK0 ] unsigned char 
  3982 ;;  cds             1   11[BANK0 ] unsigned char 
  3983 ;;  error           1    8[BANK0 ] unsigned char 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;		None               void
  3986 ;; Registers used:
  3987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3993 ;;      Params:         0       0       0       0
  3994 ;;      Locals:         0       5       0       0
  3995 ;;      Temps:          0       5       0       0
  3996 ;;      Totals:         0      10       0       0
  3997 ;;Total ram usage:       10 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    4
  4000 ;; This function calls:
  4001 ;;		_getCDS_Status
  4002 ;;		_getLights_Status
  4003 ;;		_getMain_All_Error_Status
  4004 ;;		_setLED
  4005 ;;		_setLights_Trigger
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function _PIR_Main
  4013  0026                     _PIR_Main:	
  4014                           
  4015                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4016                           
  4017                           ;incstack = 0
  4018                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4019  0026  3000               	movlw	0
  4020  0027  158A  2639  118A   	fcall	_getMain_All_Error_Status
  4021  002A  1283               	bcf	3,5	;RP0=0, select bank0
  4022  002B  1303               	bcf	3,6	;RP1=0, select bank0
  4023  002C  00D6               	movwf	??_PIR_Main
  4024  002D  0856               	movf	??_PIR_Main,w
  4025  002E  00DB               	movwf	PIR_Main@error
  4026                           
  4027                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4028  002F  158A  2672  118A   	fcall	_getCDS_Status
  4029  0032  1283               	bcf	3,5	;RP0=0, select bank0
  4030  0033  1303               	bcf	3,6	;RP1=0, select bank0
  4031  0034  00D6               	movwf	??_PIR_Main
  4032  0035  0856               	movf	??_PIR_Main,w
  4033  0036  00DE               	movwf	PIR_Main@cds
  4034                           
  4035                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4036  0037  01DF               	clrf	PIR_Main@LightsStatus
  4037                           
  4038                           ;PIR_B1.c: 20: LightsStatus = getLights_Status(1);
  4039  0038  3001               	movlw	1
  4040  0039  158A  2705  118A   	fcall	_getLights_Status
  4041  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4042  003D  1303               	bcf	3,6	;RP1=0, select bank0
  4043  003E  00D6               	movwf	??_PIR_Main
  4044  003F  0856               	movf	??_PIR_Main,w
  4045  0040  00DF               	movwf	PIR_Main@LightsStatus
  4046                           
  4047                           ;PIR_B1.c: 30: if (_PIR.Enable == 1) {
  4048  0041  1683               	bsf	3,5	;RP0=1, select bank1
  4049  0042  1303               	bcf	3,6	;RP1=0, select bank1
  4050  0043  1C20               	btfss	__PIR^(0+128),0
  4051  0044  29FD               	goto	l746
  4052                           
  4053                           ;PIR_B1.c: 31: if (error == 0) {
  4054  0045  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0046  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0047  08DB               	movf	PIR_Main@error,f
  4057  0048  1D03               	skipz
  4058  0049  2875               	goto	l747
  4059                           
  4060                           ;PIR_B1.c: 33: if (cds == 1) {
  4061  004A  085E               	movf	PIR_Main@cds,w
  4062  004B  3A01               	xorlw	1
  4063  004C  1D03               	skipz
  4064  004D  2852               	goto	l748
  4065                           
  4066                           ;PIR_B1.c: 34: _PIR.Available = 1;
  4067  004E  1683               	bsf	3,5	;RP0=1, select bank1
  4068  004F  1303               	bcf	3,6	;RP1=0, select bank1
  4069  0050  17A0               	bsf	__PIR^(0+128),7
  4070                           
  4071                           ;PIR_B1.c: 35: } else {
  4072  0051  2865               	goto	l4174
  4073  0052                     l748:	
  4074                           
  4075                           ;PIR_B1.c: 36: _PIR.Available = 0;
  4076  0052  1683               	bsf	3,5	;RP0=1, select bank1
  4077  0053  1303               	bcf	3,6	;RP1=0, select bank1
  4078  0054  13A0               	bcf	__PIR^(0+128),7
  4079                           
  4080                           ;PIR_B1.c: 37: if (_PIR.OK == 1) {
  4081  0055  1DA0               	btfss	__PIR^(0+128),3
  4082  0056  2865               	goto	l4174
  4083                           
  4084                           ;PIR_B1.c: 39: if (getLights_Status(1) == 1) {
  4085  0057  3001               	movlw	1
  4086  0058  158A  2705  118A   	fcall	_getLights_Status
  4087  005B  3A01               	xorlw	1
  4088  005C  1D03               	skipz
  4089  005D  2865               	goto	l4174
  4090                           
  4091                           ;PIR_B1.c: 40: setLights_Trigger(1, 0);
  4092  005E  1283               	bcf	3,5	;RP0=0, select bank0
  4093  005F  1303               	bcf	3,6	;RP1=0, select bank0
  4094  0060  01D3               	clrf	setLights_Trigger@command
  4095  0061  3001               	movlw	1
  4096  0062  158A  27C9  118A   	fcall	_setLights_Trigger
  4097  0065                     l4174:	
  4098                           
  4099                           ;PIR_B1.c: 41: }
  4100                           ;PIR_B1.c: 52: }
  4101                           ;PIR_B1.c: 53: }
  4102                           ;PIR_B1.c: 57: if (_PIR.Detect == 0) {
  4103  0065  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0066  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0067  1A20               	btfsc	__PIR^(0+128),4
  4106  0068  287B               	goto	l754
  4107                           
  4108                           ;PIR_B1.c: 58: _PIR.Detect = 1;
  4109  0069  1620               	bsf	__PIR^(0+128),4
  4110                           
  4111                           ;PIR_B1.c: 59: if (_PIR.OK == 0) {
  4112  006A  19A0               	btfsc	__PIR^(0+128),3
  4113  006B  287B               	goto	l754
  4114                           
  4115                           ;PIR_B1.c: 60: setLED(1, 1);
  4116  006C  1283               	bcf	3,5	;RP0=0, select bank0
  4117  006D  1303               	bcf	3,6	;RP1=0, select bank0
  4118  006E  01D3               	clrf	setLED@command
  4119  006F  0AD3               	incf	setLED@command,f
  4120  0070  3001               	movlw	1
  4121  0071  118A  25CA  118A   	fcall	_setLED
  4122                           
  4123                           ;PIR_B1.c: 61: }
  4124                           ;PIR_B1.c: 62: }
  4125                           ;PIR_B1.c: 63: } else {
  4126  0074  287B               	goto	l754
  4127  0075                     l747:	
  4128                           
  4129                           ;PIR_B1.c: 64: if (_PIR.Detect == 1) {
  4130  0075  1683               	bsf	3,5	;RP0=1, select bank1
  4131  0076  1303               	bcf	3,6	;RP1=0, select bank1
  4132  0077  1E20               	btfss	__PIR^(0+128),4
  4133  0078  287B               	goto	l754
  4134                           
  4135                           ;PIR_B1.c: 65: _PIR.Detect = 0;
  4136  0079  1220               	bcf	__PIR^(0+128),4
  4137                           
  4138                           ;PIR_B1.c: 66: _PIR.Available = 0;
  4139  007A  13A0               	bcf	__PIR^(0+128),7
  4140  007B                     l754:	
  4141                           
  4142                           ;PIR_B1.c: 84: }
  4143                           ;PIR_B1.c: 85: }
  4144                           ;PIR_B1.c: 87: if (_PIR.ADtoGO == 0) {
  4145  007B  1683               	bsf	3,5	;RP0=1, select bank1
  4146  007C  1303               	bcf	3,6	;RP1=0, select bank1
  4147  007D  18A0               	btfsc	__PIR^(0+128),1
  4148  007E  288E               	goto	l756
  4149                           
  4150                           ;PIR_B1.c: 88: _PIR.Time++;
  4151  007F  3001               	movlw	1
  4152  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0082  00D6               	movwf	??_PIR_Main
  4155  0083  0856               	movf	??_PIR_Main,w
  4156  0084  1683               	bsf	3,5	;RP0=1, select bank1
  4157  0085  1303               	bcf	3,6	;RP1=0, select bank1
  4158  0086  07A5               	addwf	(__PIR^(0+128)+5),f
  4159                           
  4160                           ;PIR_B1.c: 89: if (_PIR.Time == (100 / 20)) {
  4161  0087  0825               	movf	(__PIR^(0+128)+5),w
  4162  0088  3A05               	xorlw	5
  4163  0089  1D03               	skipz
  4164  008A  299F               	goto	l4262
  4165                           
  4166                           ;PIR_B1.c: 90: _PIR.Time = 0;
  4167  008B  01A5               	clrf	(__PIR^(0+128)+5)
  4168                           
  4169                           ;PIR_B1.c: 91: _PIR.ADtoGO = 1;
  4170  008C  14A0               	bsf	__PIR^(0+128),1
  4171                           
  4172                           ;PIR_B1.c: 92: }
  4173                           ;PIR_B1.c: 93: } else {
  4174  008D  299F               	goto	l4262
  4175  008E                     l756:	
  4176                           
  4177                           ;PIR_B1.c: 94: if (_PIR.GO == 1) {
  4178  008E  1D20               	btfss	__PIR^(0+128),2
  4179  008F  299F               	goto	l4262
  4180                           
  4181                           ;PIR_B1.c: 95: _PIR.GO = 0;
  4182  0090  1120               	bcf	__PIR^(0+128),2
  4183                           
  4184                           ;PIR_B1.c: 96: _PIR.ADtoGO = 0;
  4185  0091  10A0               	bcf	__PIR^(0+128),1
  4186                           
  4187                           ;PIR_B1.c: 97: if (_PIR.Available == 1) {
  4188  0092  1BA0               	btfsc	__PIR^(0+128),7
  4189                           
  4190                           ;PIR_B1.c: 98: if (_PIR.OK == 1) {
  4191  0093  1DA0               	btfss	__PIR^(0+128),3
  4192  0094  299F               	goto	l4262
  4193                           
  4194                           ;PIR_B1.c: 100: _PIR.Time++;
  4195  0095  3001               	movlw	1
  4196  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4198  0098  00D6               	movwf	??_PIR_Main
  4199  0099  0856               	movf	??_PIR_Main,w
  4200  009A  1683               	bsf	3,5	;RP0=1, select bank1
  4201  009B  1303               	bcf	3,6	;RP1=0, select bank1
  4202  009C  07A5               	addwf	(__PIR^(0+128)+5),f
  4203                           
  4204                           ;PIR_B1.c: 101: if (_PIR.Time == 60) {
  4205  009D  0825               	movf	(__PIR^(0+128)+5),w
  4206  009E  3A3C               	xorlw	60
  4207  009F  1D03               	skipz
  4208  00A0  28D5               	goto	l4230
  4209                           
  4210                           ;PIR_B1.c: 102: _PIR.Time = 0;
  4211  00A1  01A5               	clrf	(__PIR^(0+128)+5)
  4212                           
  4213                           ;PIR_B1.c: 103: if (_PIR.RangeCount >= 90) {
  4214  00A2  305A               	movlw	90
  4215  00A3  024B               	subwf	(__PIR^(0+128)+43),w
  4216  00A4  1C03               	skipc
  4217  00A5  28B1               	goto	l4212
  4218                           
  4219                           ;PIR_B1.c: 104: _PIR.RangeTime1 = 0;
  4220  00A6  01CA               	clrf	(__PIR^(0+128)+42)
  4221                           
  4222                           ;PIR_B1.c: 106: if (_PIR.RangeValue == 25) {
  4223  00A7  084C               	movf	(__PIR^(0+128)+44),w
  4224  00A8  3A19               	xorlw	25
  4225  00A9  1903               	btfsc	3,2
  4226  00AA  28C6               	goto	L11
  4227                           
  4228                           ;PIR_B1.c: 108: } else if (_PIR.RangeValue == (25+10)) {
  4229                           
  4230                           ;PIR_B1.c: 107: _PIR.RangeValue = (25+10);
  4231  00AB  084C               	movf	(__PIR^(0+128)+44),w
  4232  00AC  3A23               	xorlw	35
  4233  00AD  1D03               	skipz
  4234  00AE  28D4               	goto	l4228
  4235                           
  4236                           ;PIR_B1.c: 109: _PIR.RangeValue = (25+20);
  4237  00AF  302D               	movlw	45
  4238  00B0  28CD               	goto	L8
  4239  00B1                     l4212:	
  4240                           ;PIR_B1.c: 110: }
  4241                           ;PIR_B1.c: 111: } else if (_PIR.RangeCount <= 10) {
  4242                           
  4243  00B1  300B               	movlw	11
  4244  00B2  024B               	subwf	(__PIR^(0+128)+43),w
  4245  00B3  1803               	skipnc
  4246  00B4  28D4               	goto	l4228
  4247                           
  4248                           ;PIR_B1.c: 112: _PIR.RangeTime1++;
  4249  00B5  3001               	movlw	1
  4250  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  4251  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  4252  00B8  00D6               	movwf	??_PIR_Main
  4253  00B9  0856               	movf	??_PIR_Main,w
  4254  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  4255  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  4256  00BC  07CA               	addwf	(__PIR^(0+128)+42),f
  4257                           
  4258                           ;PIR_B1.c: 113: if (_PIR.RangeTime1 == 2) {
  4259  00BD  084A               	movf	(__PIR^(0+128)+42),w
  4260  00BE  3A02               	xorlw	2
  4261  00BF  1D03               	skipz
  4262  00C0  28D4               	goto	l4228
  4263                           
  4264                           ;PIR_B1.c: 114: _PIR.RangeTime1 = 0;
  4265  00C1  01CA               	clrf	(__PIR^(0+128)+42)
  4266                           
  4267                           ;PIR_B1.c: 116: if (_PIR.RangeValue == (25+20)) {
  4268  00C2  084C               	movf	(__PIR^(0+128)+44),w
  4269  00C3  3A2D               	xorlw	45
  4270  00C4  1D03               	skipz
  4271  00C5  28C8               	goto	l4224
  4272  00C6                     L11:	
  4273                           
  4274                           ;PIR_B1.c: 117: _PIR.RangeValue = (25+10);
  4275  00C6  3023               	movlw	35
  4276  00C7  28CD               	goto	L8
  4277  00C8                     l4224:	
  4278                           ;PIR_B1.c: 118: } else if (_PIR.RangeValue == (25+10)) {
  4279                           
  4280  00C8  084C               	movf	(__PIR^(0+128)+44),w
  4281  00C9  3A23               	xorlw	35
  4282  00CA  1D03               	skipz
  4283  00CB  28D4               	goto	l4228
  4284                           
  4285                           ;PIR_B1.c: 119: _PIR.RangeValue = 25;
  4286  00CC  3019               	movlw	25
  4287  00CD                     L8:	
  4288  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  4289  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  4290  00CF  00D6               	movwf	??_PIR_Main
  4291  00D0  0856               	movf	??_PIR_Main,w
  4292  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  4293  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  4294  00D3  00CC               	movwf	(__PIR^(0+128)+44)
  4295  00D4                     l4228:	
  4296                           
  4297                           ;PIR_B1.c: 120: }
  4298                           ;PIR_B1.c: 121: }
  4299                           ;PIR_B1.c: 122: }
  4300                           ;PIR_B1.c: 123: _PIR.RangeCount = 0;
  4301  00D4  01CB               	clrf	(__PIR^(0+128)+43)
  4302  00D5                     l4230:	
  4303                           
  4304                           ;PIR_B1.c: 124: }
  4305                           ;PIR_B1.c: 127: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4306                           ;PIR_B1.c: 128: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4307  00D5  084C               	movf	(__PIR^(0+128)+44),w
  4308  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  4309  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  4310  00D8  00D6               	movwf	??_PIR_Main
  4311  00D9  01D7               	clrf	??_PIR_Main+1
  4312  00DA  09D6               	comf	??_PIR_Main,f
  4313  00DB  09D7               	comf	??_PIR_Main+1,f
  4314  00DC  0AD6               	incf	??_PIR_Main,f
  4315  00DD  1903               	skipnz
  4316  00DE  0AD7               	incf	??_PIR_Main+1,f
  4317  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  4318  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  4319  00E1  0826               	movf	(__PIR^(0+128)+6),w
  4320  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4321  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4322  00E4  0756               	addwf	??_PIR_Main,w
  4323  00E5  00D8               	movwf	??_PIR_Main+2
  4324  00E6  0857               	movf	??_PIR_Main+1,w
  4325  00E7  1803               	skipnc
  4326  00E8  0A57               	incf	??_PIR_Main+1,w
  4327  00E9  00D9               	movwf	??_PIR_Main+3
  4328  00EA  0859               	movf	??_PIR_Main+3,w
  4329  00EB  3A80               	xorlw	128
  4330  00EC  3C80               	sublw	128
  4331  00ED  1D03               	skipz
  4332  00EE  28F3               	goto	u4955
  4333  00EF  0858               	movf	??_PIR_Main+2,w
  4334  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  4335  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  4336  00F2  0221               	subwf	(__PIR^(0+128)+1),w
  4337  00F3                     u4955:	
  4338  00F3  1C03               	skipc
  4339  00F4  2915               	goto	l4240
  4340  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  4341  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  4342  00F7  0826               	movf	(__PIR^(0+128)+6),w
  4343  00F8  074C               	addwf	(__PIR^(0+128)+44),w
  4344  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  4345  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  4346  00FB  00D6               	movwf	??_PIR_Main
  4347  00FC  01D7               	clrf	??_PIR_Main+1
  4348  00FD  0DD7               	rlf	??_PIR_Main+1,f
  4349  00FE  0857               	movf	??_PIR_Main+1,w
  4350  00FF  3A80               	xorlw	128
  4351  0100  00D8               	movwf	??_PIR_Main+2
  4352  0101  3080               	movlw	128
  4353  0102  0258               	subwf	??_PIR_Main+2,w
  4354  0103  1D03               	skipz
  4355  0104  290B               	goto	u4965
  4356  0105  1683               	bsf	3,5	;RP0=1, select bank1
  4357  0106  1303               	bcf	3,6	;RP1=0, select bank1
  4358  0107  0821               	movf	(__PIR^(0+128)+1),w
  4359  0108  1283               	bcf	3,5	;RP0=0, select bank0
  4360  0109  1303               	bcf	3,6	;RP1=0, select bank0
  4361  010A  0256               	subwf	??_PIR_Main,w
  4362  010B                     u4965:	
  4363  010B  1C03               	skipc
  4364  010C  2915               	goto	l4240
  4365                           
  4366                           ;PIR_B1.c: 130: _PIR.Count = 0;
  4367  010D  1683               	bsf	3,5	;RP0=1, select bank1
  4368  010E  1303               	bcf	3,6	;RP1=0, select bank1
  4369  010F  01C1               	clrf	(__PIR^(0+128)+33)
  4370  0110  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4371                           
  4372                           ;PIR_B1.c: 136: setLED(1, 0);
  4373  0111  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0112  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0113  01D3               	clrf	setLED@command
  4376  0114  2988               	goto	L12
  4377  0115                     l4240:	
  4378                           ;PIR_B1.c: 138: } else {
  4379                           
  4380                           ;PIR_B1.c: 137: setLED(2, 0);
  4381                           
  4382                           
  4383                           ;PIR_B1.c: 141: _PIR.RangeCount++;
  4384  0115  3001               	movlw	1
  4385  0116  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0117  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0118  00D6               	movwf	??_PIR_Main
  4388  0119  0856               	movf	??_PIR_Main,w
  4389  011A  1683               	bsf	3,5	;RP0=1, select bank1
  4390  011B  1303               	bcf	3,6	;RP1=0, select bank1
  4391  011C  07CB               	addwf	(__PIR^(0+128)+43),f
  4392                           
  4393                           ;PIR_B1.c: 142: _PIR.Count++;
  4394  011D  3001               	movlw	1
  4395  011E  07C1               	addwf	(__PIR^(0+128)+33),f
  4396  011F  1803               	skipnc
  4397  0120  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4398  0121  3000               	movlw	0
  4399  0122  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4400                           
  4401                           ;PIR_B1.c: 144: _PIR.TriggerValue = LightsStatus == 1 ? 3 : 3;
  4402  0123  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0124  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0125  085F               	movf	PIR_Main@LightsStatus,w
  4405  0126  3A01               	xorlw	1
  4406  0127  1903               	skipnz
  4407  0128  2929               	goto	l4248
  4408  0129                     l4248:	
  4409  0129  3003               	movlw	3
  4410  012A  00DC               	movwf	_PIR_Main$2587
  4411  012B  3000               	movlw	0
  4412  012C  00DD               	movwf	_PIR_Main$2587+1
  4413  012D  085C               	movf	_PIR_Main$2587,w
  4414  012E  00D6               	movwf	??_PIR_Main
  4415  012F  0856               	movf	??_PIR_Main,w
  4416  0130  1683               	bsf	3,5	;RP0=1, select bank1
  4417  0131  1303               	bcf	3,6	;RP1=0, select bank1
  4418  0132  00C3               	movwf	(__PIR^(0+128)+35)
  4419                           
  4420                           ;PIR_B1.c: 146: if (_PIR.Count == _PIR.TriggerValue) {
  4421  0133  0843               	movf	(__PIR^(0+128)+35),w
  4422  0134  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0135  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0136  00D6               	movwf	??_PIR_Main
  4425  0137  01D7               	clrf	??_PIR_Main+1
  4426  0138  1683               	bsf	3,5	;RP0=1, select bank1
  4427  0139  1303               	bcf	3,6	;RP1=0, select bank1
  4428  013A  0842               	movf	((__PIR+1)^(0+128)+33),w
  4429  013B  1283               	bcf	3,5	;RP0=0, select bank0
  4430  013C  1303               	bcf	3,6	;RP1=0, select bank0
  4431  013D  0657               	xorwf	??_PIR_Main+1,w
  4432  013E  1D03               	skipz
  4433  013F  2946               	goto	u4985
  4434  0140  1683               	bsf	3,5	;RP0=1, select bank1
  4435  0141  1303               	bcf	3,6	;RP1=0, select bank1
  4436  0142  0841               	movf	(__PIR^(0+128)+33),w
  4437  0143  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0144  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0145  0656               	xorwf	??_PIR_Main,w
  4440  0146                     u4985:	
  4441  0146  1D03               	skipz
  4442  0147  299F               	goto	l4262
  4443                           
  4444                           ;PIR_B1.c: 147: _PIR.Count = 0;
  4445  0148  1683               	bsf	3,5	;RP0=1, select bank1
  4446  0149  1303               	bcf	3,6	;RP1=0, select bank1
  4447  014A  01C1               	clrf	(__PIR^(0+128)+33)
  4448  014B  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4449                           
  4450                           ;PIR_B1.c: 149: _PIR.CloseTimeSeconds = 0;
  4451  014C  01C6               	clrf	(__PIR^(0+128)+38)
  4452                           
  4453                           ;PIR_B1.c: 150: _PIR.CloseTimeMinutes = 0;
  4454  014D  01C4               	clrf	(__PIR^(0+128)+36)
  4455  014E  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4456                           
  4457                           ;PIR_B1.c: 156: if (getLights_Status(1) == 0) {
  4458  014F  3001               	movlw	1
  4459  0150  158A  2705  118A   	fcall	_getLights_Status
  4460  0153  3800               	iorlw	0
  4461  0154  1D03               	skipz
  4462  0155  295E               	goto	l4256
  4463                           
  4464                           ;PIR_B1.c: 157: setLights_Trigger(1, 1);
  4465  0156  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0157  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0158  01D3               	clrf	setLights_Trigger@command
  4468  0159  0AD3               	incf	setLights_Trigger@command,f
  4469  015A  3001               	movlw	1
  4470  015B  158A  27C9  118A   	fcall	_setLights_Trigger
  4471  015E                     l4256:	
  4472                           
  4473                           ;PIR_B1.c: 158: }
  4474                           ;PIR_B1.c: 172: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4475  015E  1683               	bsf	3,5	;RP0=1, select bank1
  4476  015F  1303               	bcf	3,6	;RP1=0, select bank1
  4477  0160  084C               	movf	(__PIR^(0+128)+44),w
  4478  0161  1283               	bcf	3,5	;RP0=0, select bank0
  4479  0162  1303               	bcf	3,6	;RP1=0, select bank0
  4480  0163  00D6               	movwf	??_PIR_Main
  4481  0164  01D7               	clrf	??_PIR_Main+1
  4482  0165  09D6               	comf	??_PIR_Main,f
  4483  0166  09D7               	comf	??_PIR_Main+1,f
  4484  0167  0AD6               	incf	??_PIR_Main,f
  4485  0168  1903               	skipnz
  4486  0169  0AD7               	incf	??_PIR_Main+1,f
  4487  016A  1683               	bsf	3,5	;RP0=1, select bank1
  4488  016B  1303               	bcf	3,6	;RP1=0, select bank1
  4489  016C  0826               	movf	(__PIR^(0+128)+6),w
  4490  016D  1283               	bcf	3,5	;RP0=0, select bank0
  4491  016E  1303               	bcf	3,6	;RP1=0, select bank0
  4492  016F  0756               	addwf	??_PIR_Main,w
  4493  0170  00D8               	movwf	??_PIR_Main+2
  4494  0171  0857               	movf	??_PIR_Main+1,w
  4495  0172  1803               	skipnc
  4496  0173  0A57               	incf	??_PIR_Main+1,w
  4497  0174  00D9               	movwf	??_PIR_Main+3
  4498  0175  0859               	movf	??_PIR_Main+3,w
  4499  0176  3A80               	xorlw	128
  4500  0177  00DA               	movwf	??_PIR_Main+4
  4501  0178  3080               	movlw	128
  4502  0179  025A               	subwf	??_PIR_Main+4,w
  4503  017A  1D03               	skipz
  4504  017B  2982               	goto	u5005
  4505  017C  1683               	bsf	3,5	;RP0=1, select bank1
  4506  017D  1303               	bcf	3,6	;RP1=0, select bank1
  4507  017E  0821               	movf	(__PIR^(0+128)+1),w
  4508  017F  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0180  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0181  0258               	subwf	??_PIR_Main+2,w
  4511  0182                     u5005:	
  4512  0182  1C03               	skipc
  4513  0183  2990               	goto	l4260
  4514                           
  4515                           ;PIR_B1.c: 173: setLED(1, 1);
  4516  0184  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0185  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0186  01D3               	clrf	setLED@command
  4519  0187  0AD3               	incf	setLED@command,f
  4520  0188                     L12:	
  4521  0188  3001               	movlw	1
  4522  0189  118A  25CA  118A   	fcall	_setLED
  4523                           
  4524                           ;PIR_B1.c: 174: setLED(2, 0);
  4525  018C  1283               	bcf	3,5	;RP0=0, select bank0
  4526  018D  1303               	bcf	3,6	;RP1=0, select bank0
  4527  018E  01D3               	clrf	setLED@command
  4528  018F  299B               	goto	L9
  4529  0190                     l4260:	
  4530                           ;PIR_B1.c: 175: } else {
  4531                           
  4532                           
  4533                           ;PIR_B1.c: 176: setLED(1, 0);
  4534  0190  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0191  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0192  01D3               	clrf	setLED@command
  4537  0193  3001               	movlw	1
  4538  0194  118A  25CA  118A   	fcall	_setLED
  4539                           
  4540                           ;PIR_B1.c: 177: setLED(2, 1);
  4541  0197  1283               	bcf	3,5	;RP0=0, select bank0
  4542  0198  1303               	bcf	3,6	;RP1=0, select bank0
  4543  0199  01D3               	clrf	setLED@command
  4544  019A  0AD3               	incf	setLED@command,f
  4545  019B                     L9:	
  4546  019B  3002               	movlw	2
  4547  019C  118A  25CA  118A   	fcall	_setLED
  4548  019F                     l4262:	
  4549                           
  4550                           ;PIR_B1.c: 178: }
  4551                           ;PIR_B1.c: 212: }
  4552                           ;PIR_B1.c: 213: }
  4553                           ;PIR_B1.c: 214: }
  4554                           ;PIR_B1.c: 215: }
  4555                           ;PIR_B1.c: 216: }
  4556                           ;PIR_B1.c: 217: }
  4557                           ;PIR_B1.c: 218: if (_PIR.OK == 0) {
  4558  019F  1683               	bsf	3,5	;RP0=1, select bank1
  4559  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  4560  01A1  19A0               	btfsc	__PIR^(0+128),3
  4561  01A2  29CE               	goto	l4278
  4562                           
  4563                           ;PIR_B1.c: 219: _PIR.Count++;
  4564  01A3  3001               	movlw	1
  4565  01A4  07C1               	addwf	(__PIR^(0+128)+33),f
  4566  01A5  1803               	skipnc
  4567  01A6  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4568  01A7  3000               	movlw	0
  4569  01A8  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4570                           
  4571                           ;PIR_B1.c: 220: if (_PIR.Count == (30000 / 20)) {
  4572  01A9  3005               	movlw	5
  4573  01AA  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4574  01AB  1D03               	skipz
  4575  01AC  29AF               	goto	u5025
  4576  01AD  30DC               	movlw	220
  4577  01AE  0641               	xorwf	(__PIR^(0+128)+33),w
  4578  01AF                     u5025:	
  4579  01AF  1D03               	skipz
  4580  01B0  0008               	return
  4581                           
  4582                           ;PIR_B1.c: 221: _PIR.Count = 0;
  4583  01B1  01C1               	clrf	(__PIR^(0+128)+33)
  4584  01B2  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4585                           
  4586                           ;PIR_B1.c: 222: _PIR.OK = 1;
  4587  01B3  15A0               	bsf	__PIR^(0+128),3
  4588                           
  4589                           ;PIR_B1.c: 223: setLED(1, 0);
  4590  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  4591  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  4592  01B6  01D3               	clrf	setLED@command
  4593  01B7  3001               	movlw	1
  4594  01B8  118A  25CA  118A   	fcall	_setLED
  4595                           
  4596                           ;PIR_B1.c: 224: if (cds == 0) {
  4597  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  4598  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  4599  01BD  08DE               	movf	PIR_Main@cds,f
  4600  01BE  1D03               	skipz
  4601  01BF  0008               	return
  4602                           
  4603                           ;PIR_B1.c: 227: if (getLights_Status(1) == 1) {
  4604  01C0  3001               	movlw	1
  4605  01C1  158A  2705  118A   	fcall	_getLights_Status
  4606  01C4  3A01               	xorlw	1
  4607  01C5  1D03               	skipz
  4608  01C6  0008               	return
  4609                           
  4610                           ;PIR_B1.c: 228: setLights_Trigger(1, 0);
  4611  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4612  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4613  01C9  01D3               	clrf	setLights_Trigger@command
  4614  01CA  3001               	movlw	1
  4615  01CB  158A  27C9         	fcall	_setLights_Trigger
  4616                           
  4617                           ;PIR_B1.c: 229: }
  4618                           ;PIR_B1.c: 241: }
  4619                           ;PIR_B1.c: 242: }
  4620                           ;PIR_B1.c: 243: } else {
  4621  01CD  0008               	return
  4622  01CE                     l4278:	
  4623                           
  4624                           ;PIR_B1.c: 244: if (LightsStatus == 1) {
  4625  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  4626  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  4627  01D0  085F               	movf	PIR_Main@LightsStatus,w
  4628  01D1  3A01               	xorlw	1
  4629  01D2  1D03               	skipz
  4630  01D3  0008               	return
  4631                           
  4632                           ;PIR_B1.c: 245: _PIR.CloseTimeSeconds++;
  4633  01D4  3001               	movlw	1
  4634  01D5  00D6               	movwf	??_PIR_Main
  4635  01D6  0856               	movf	??_PIR_Main,w
  4636  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  4637  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  4638  01D9  07C6               	addwf	(__PIR^(0+128)+38),f
  4639                           
  4640                           ;PIR_B1.c: 246: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4641  01DA  0846               	movf	(__PIR^(0+128)+38),w
  4642  01DB  3A32               	xorlw	50
  4643  01DC  1D03               	skipz
  4644  01DD  0008               	return
  4645                           
  4646                           ;PIR_B1.c: 247: _PIR.CloseTimeSeconds = 0;
  4647  01DE  01C6               	clrf	(__PIR^(0+128)+38)
  4648                           
  4649                           ;PIR_B1.c: 248: _PIR.CloseTimeMinutes++;
  4650  01DF  3001               	movlw	1
  4651  01E0  07C4               	addwf	(__PIR^(0+128)+36),f
  4652  01E1  1803               	skipnc
  4653  01E2  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4654  01E3  3000               	movlw	0
  4655  01E4  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4656                           
  4657                           ;PIR_B1.c: 249: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4658  01E5  0848               	movf	((__PIR+1)^(0+128)+39),w
  4659  01E6  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4660  01E7  1D03               	skipz
  4661  01E8  29EB               	goto	u5075
  4662  01E9  0847               	movf	(__PIR^(0+128)+39),w
  4663  01EA  0644               	xorwf	(__PIR^(0+128)+36),w
  4664  01EB                     u5075:	
  4665  01EB  1D03               	skipz
  4666  01EC  0008               	return
  4667                           
  4668                           ;PIR_B1.c: 250: _PIR.CloseTimeMinutes = 0;
  4669  01ED  01C4               	clrf	(__PIR^(0+128)+36)
  4670  01EE  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4671                           
  4672                           ;PIR_B1.c: 256: if (getLights_Status(1) == 1) {
  4673  01EF  3001               	movlw	1
  4674  01F0  158A  2705  118A   	fcall	_getLights_Status
  4675  01F3  3A01               	xorlw	1
  4676  01F4  1D03               	skipz
  4677  01F5  0008               	return
  4678                           
  4679                           ;PIR_B1.c: 257: setLights_Trigger(1, 0);
  4680  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4681  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4682  01F8  01D3               	clrf	setLights_Trigger@command
  4683  01F9  3001               	movlw	1
  4684  01FA  158A  27C9         	fcall	_setLights_Trigger
  4685                           
  4686                           ;PIR_B1.c: 258: }
  4687                           ;PIR_B1.c: 270: }
  4688                           ;PIR_B1.c: 271: }
  4689                           ;PIR_B1.c: 272: }
  4690                           ;PIR_B1.c: 273: }
  4691                           ;PIR_B1.c: 274: } else {
  4692  01FC  0008               	return
  4693  01FD                     l746:	
  4694                           
  4695                           ;PIR_B1.c: 275: if (myMain.PowerON == 1) {
  4696  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4697  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4698  01FF  1C20               	btfss	_myMain,0
  4699  0200  0008               	return
  4700                           
  4701                           ;PIR_B1.c: 276: _PIR.Enable = 1;
  4702  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4703  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4704  0203  1420               	bsf	__PIR^(0+128),0
  4705                           
  4706                           ;PIR_B1.c: 277: setLED(1, 1);
  4707  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4708  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4709  0206  01D3               	clrf	setLED@command
  4710  0207  0AD3               	incf	setLED@command,f
  4711  0208  3001               	movlw	1
  4712  0209  118A  25CA  118A   	fcall	_setLED
  4713                           
  4714                           ;PIR_B1.c: 281: if (getLights_Status(1) == 0) {
  4715  020C  3001               	movlw	1
  4716  020D  158A  2705  118A   	fcall	_getLights_Status
  4717  0210  3800               	iorlw	0
  4718  0211  1D03               	skipz
  4719  0212  0008               	return
  4720                           
  4721                           ;PIR_B1.c: 282: setLights_Trigger(1, 1);
  4722  0213  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0214  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0215  01D3               	clrf	setLights_Trigger@command
  4725  0216  0AD3               	incf	setLights_Trigger@command,f
  4726  0217  3001               	movlw	1
  4727  0218  158A  27C9         	fcall	_setLights_Trigger
  4728  021A  0008               	return
  4729  021B                     __end_of_PIR_Main:	
  4730                           
  4731                           	psect	text19
  4732  0E72                     __ptext19:	
  4733 ;; *************** function _getCDS_Status *****************
  4734 ;; Defined at:
  4735 ;;		line 42 in file "../src/CDS_B1.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  status          1    4[COMMON] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      unsigned char 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4749 ;;      Params:         0       0       0       0
  4750 ;;      Locals:         1       0       0       0
  4751 ;;      Temps:          0       0       0       0
  4752 ;;      Totals:         1       0       0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    2
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_PIR_Main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _getCDS_Status
  4765  0E72                     _getCDS_Status:	
  4766                           
  4767                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4768                           
  4769                           ;incstack = 0
  4770                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4771  0E72  3000               	movlw	0
  4772  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0E75  1A26               	btfsc	__CDS,4
  4775  0E76  3001               	movlw	1
  4776  0E77  00F4               	movwf	getCDS_Status@status
  4777                           
  4778                           ;CDS_B1.c: 44: return status;
  4779  0E78  0874               	movf	getCDS_Status@status,w
  4780  0E79  0008               	return
  4781  0E7A                     __end_of_getCDS_Status:	
  4782                           
  4783                           	psect	text20
  4784  0EB2                     __ptext20:	
  4785 ;; *************** function _PIR_Initialization *****************
  4786 ;; Defined at:
  4787 ;;		line 7 in file "../src/PIR_B1.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;		None               void
  4794 ;; Registers used:
  4795 ;;		wreg
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4801 ;;      Params:         0       0       0       0
  4802 ;;      Locals:         0       0       0       0
  4803 ;;      Temps:          1       0       0       0
  4804 ;;      Totals:         1       0       0       0
  4805 ;;Total ram usage:        1 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    2
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _PIR_Initialization
  4817  0EB2                     _PIR_Initialization:	
  4818                           
  4819                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _PIR_Initialization: [wreg]
  4823  0EB2  3019               	movlw	25
  4824  0EB3  00F4               	movwf	??_PIR_Initialization
  4825  0EB4  0874               	movf	??_PIR_Initialization,w
  4826  0EB5  1683               	bsf	3,5	;RP0=1, select bank1
  4827  0EB6  1303               	bcf	3,6	;RP1=0, select bank1
  4828  0EB7  00CC               	movwf	(__PIR^(0+128)+44)
  4829                           
  4830                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4831  0EB8  3005               	movlw	5
  4832  0EB9  00C7               	movwf	(__PIR^(0+128)+39)
  4833  0EBA  3000               	movlw	0
  4834  0EBB  00C8               	movwf	(__PIR^(0+128)+40)
  4835  0EBC  0008               	return
  4836  0EBD                     __end_of_PIR_Initialization:	
  4837                           
  4838                           	psect	text21
  4839  0EE5                     __ptext21:	
  4840 ;; *************** function _Mcu_Initialization *****************
  4841 ;; Defined at:
  4842 ;;		line 30 in file "../src/MCU_B1.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;		None               void
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4856 ;;      Params:         0       0       0       0
  4857 ;;      Locals:         0       0       0       0
  4858 ;;      Temps:          0       0       0       0
  4859 ;;      Totals:         0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    3
  4863 ;; This function calls:
  4864 ;;		_ADC_Set
  4865 ;;		_Fosc_Set
  4866 ;;		_IO_Set
  4867 ;;		_TMR1_Set
  4868 ;;		_WDT_Set
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           
  4875                           ;psect for function _Mcu_Initialization
  4876  0EE5                     _Mcu_Initialization:	
  4877                           
  4878                           ;MCU_B1.c: 32: Fosc_Set();
  4879                           
  4880                           ;incstack = 0
  4881                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4882  0EE5  158A  264A  158A   	fcall	_Fosc_Set
  4883                           
  4884                           ;MCU_B1.c: 34: IO_Set();
  4885  0EE8  158A  277D  158A   	fcall	_IO_Set
  4886                           
  4887                           ;MCU_B1.c: 36: ;;
  4888                           ;MCU_B1.c: 38: TMR1_Set();
  4889  0EEB  158A  26C9  158A   	fcall	_TMR1_Set
  4890                           
  4891                           ;MCU_B1.c: 40: ADC_Set();
  4892  0EEE  158A  265C  158A   	fcall	_ADC_Set
  4893                           
  4894                           ;MCU_B1.c: 42: ;;
  4895                           ;MCU_B1.c: 44: ;;
  4896                           ;MCU_B1.c: 46: ;;
  4897                           ;MCU_B1.c: 48: ;;
  4898                           ;MCU_B1.c: 50: ;;
  4899                           ;MCU_B1.c: 52: WDT_Set();
  4900  0EF1  158A  26D7         	fcall	_WDT_Set
  4901  0EF3  0008               	return
  4902  0EF4                     __end_of_Mcu_Initialization:	
  4903                           
  4904                           	psect	text22
  4905  0ED7                     __ptext22:	
  4906 ;; *************** function _WDT_Set *****************
  4907 ;; Defined at:
  4908 ;;		line 1089 in file "../src/MCU_B1.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;		None               void
  4915 ;; Registers used:
  4916 ;;		wreg
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4922 ;;      Params:         0       0       0       0
  4923 ;;      Locals:         0       0       0       0
  4924 ;;      Temps:          1       0       0       0
  4925 ;;      Totals:         1       0       0       0
  4926 ;;Total ram usage:        1 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    2
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_Mcu_Initialization
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           
  4937                           ;psect for function _WDT_Set
  4938  0ED7                     _WDT_Set:	
  4939                           
  4940                           ;MCU_B1.c: 1091: PSA = 1;
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _WDT_Set: [wreg]
  4944  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  4945  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  4946  0ED9  1581               	bsf	1,3	;volatile
  4947                           
  4948                           ;MCU_B1.c: 1092: PS0 = 1;
  4949  0EDA  1401               	bsf	1,0	;volatile
  4950                           
  4951                           ;MCU_B1.c: 1093: PS1 = 1;
  4952  0EDB  1481               	bsf	1,1	;volatile
  4953                           
  4954                           ;MCU_B1.c: 1094: PS2 = 1;
  4955  0EDC  1501               	bsf	1,2	;volatile
  4956                           
  4957                           ;MCU_B1.c: 1098: WDT.Enable = 1;
  4958  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  4959  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  4960  0EDF  1432               	bsf	_WDT,0
  4961                           
  4962                           ;MCU_B1.c: 1099: WDT.Timer = 10;
  4963  0EE0  300A               	movlw	10
  4964  0EE1  00F4               	movwf	??_WDT_Set
  4965  0EE2  0874               	movf	??_WDT_Set,w
  4966  0EE3  00B3               	movwf	_WDT+1
  4967  0EE4  0008               	return
  4968  0EE5                     __end_of_WDT_Set:	
  4969                           
  4970                           	psect	text23
  4971  0EC9                     __ptext23:	
  4972 ;; *************** function _TMR1_Set *****************
  4973 ;; Defined at:
  4974 ;;		line 226 in file "../src/MCU_B1.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;		None               void
  4981 ;; Registers used:
  4982 ;;		wreg
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4988 ;;      Params:         0       0       0       0
  4989 ;;      Locals:         0       0       0       0
  4990 ;;      Temps:          0       0       0       0
  4991 ;;      Totals:         0       0       0       0
  4992 ;;Total ram usage:        0 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    2
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_Mcu_Initialization
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _TMR1_Set
  5004  0EC9                     _TMR1_Set:	
  5005                           
  5006                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5007                           
  5008                           ;incstack = 0
  5009                           ; Regs used in _TMR1_Set: [wreg]
  5010  0EC9  3041               	movlw	65
  5011  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0ECC  0090               	movwf	16	;volatile
  5014                           
  5015                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5016  0ECD  30FA               	movlw	250
  5017  0ECE  008F               	movwf	15	;volatile
  5018                           
  5019                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5020  0ECF  3038               	movlw	56
  5021  0ED0  008E               	movwf	14	;volatile
  5022                           
  5023                           ;MCU_B1.c: 230: TMR1IE = 1;
  5024  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  5025  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  5026  0ED3  140C               	bsf	12,0	;volatile
  5027                           
  5028                           ;MCU_B1.c: 231: PEIE = 1;
  5029  0ED4  170B               	bsf	11,6	;volatile
  5030                           
  5031                           ;MCU_B1.c: 232: GIE = 1;
  5032  0ED5  178B               	bsf	11,7	;volatile
  5033  0ED6  0008               	return
  5034  0ED7                     __end_of_TMR1_Set:	
  5035                           
  5036                           	psect	text24
  5037  0F7D                     __ptext24:	
  5038 ;; *************** function _IO_Set *****************
  5039 ;; Defined at:
  5040 ;;		line 60 in file "../src/MCU_B1.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, status,2
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5054 ;;      Params:         0       0       0       0
  5055 ;;      Locals:         0       0       0       0
  5056 ;;      Temps:          0       0       0       0
  5057 ;;      Totals:         0       0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    2
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_Mcu_Initialization
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           
  5069                           ;psect for function _IO_Set
  5070  0F7D                     _IO_Set:	
  5071                           
  5072                           ;MCU_B1.c: 62: TRISA = 0b00101110;;
  5073                           
  5074                           ;incstack = 0
  5075                           ; Regs used in _IO_Set: [wreg+status,2]
  5076  0F7D  302E               	movlw	46
  5077  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  5078  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  5079  0F80  0085               	movwf	5	;volatile
  5080                           
  5081                           ;MCU_B1.c: 63: TRISB = 0b00010101;;
  5082  0F81  3015               	movlw	21
  5083  0F82  0086               	movwf	6	;volatile
  5084                           
  5085                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5086  0F83  0187               	clrf	7	;volatile
  5087                           
  5088                           ;MCU_B1.c: 65: ANSELA = 0b00101110;;
  5089  0F84  302E               	movlw	46
  5090  0F85  1683               	bsf	3,5	;RP0=1, select bank3
  5091  0F86  1703               	bsf	3,6	;RP1=1, select bank3
  5092  0F87  0085               	movwf	5	;volatile
  5093                           
  5094                           ;MCU_B1.c: 66: ANSELB = 0b00010101;;
  5095  0F88  3015               	movlw	21
  5096  0F89  0086               	movwf	6	;volatile
  5097                           
  5098                           ;MCU_B1.c: 67: PORTA = 0b00101110;;
  5099  0F8A  302E               	movlw	46
  5100  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0F8D  0085               	movwf	5	;volatile
  5103                           
  5104                           ;MCU_B1.c: 68: PORTB = 0b00010101;;
  5105  0F8E  3015               	movlw	21
  5106  0F8F  0086               	movwf	6	;volatile
  5107                           
  5108                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5109  0F90  0187               	clrf	7	;volatile
  5110                           
  5111                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5112  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  5113  0F92  1303               	bcf	3,6	;RP1=0, select bank1
  5114  0F93  0195               	clrf	21	;volatile
  5115  0F94  0008               	return
  5116  0F95                     __end_of_IO_Set:	
  5117                           
  5118                           	psect	text25
  5119  0E4A                     __ptext25:	
  5120 ;; *************** function _Fosc_Set *****************
  5121 ;; Defined at:
  5122 ;;		line 56 in file "../src/MCU_B1.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5136 ;;      Params:         0       0       0       0
  5137 ;;      Locals:         0       0       0       0
  5138 ;;      Temps:          0       0       0       0
  5139 ;;      Totals:         0       0       0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    2
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_Mcu_Initialization
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           
  5151                           ;psect for function _Fosc_Set
  5152  0E4A                     _Fosc_Set:	
  5153                           
  5154                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5155                           
  5156                           ;incstack = 0
  5157                           ; Regs used in _Fosc_Set: [wreg]
  5158  0E4A  303C               	movlw	60
  5159  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  5160  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  5161  0E4D  0090               	movwf	16	;volatile
  5162  0E4E  0008               	return
  5163  0E4F                     __end_of_Fosc_Set:	
  5164                           
  5165                           	psect	text26
  5166  0E5C                     __ptext26:	
  5167 ;; *************** function _ADC_Set *****************
  5168 ;; Defined at:
  5169 ;;		line 425 in file "../src/MCU_B1.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;		None               void
  5176 ;; Registers used:
  5177 ;;		wreg
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5183 ;;      Params:         0       0       0       0
  5184 ;;      Locals:         0       0       0       0
  5185 ;;      Temps:          0       0       0       0
  5186 ;;      Totals:         0       0       0       0
  5187 ;;Total ram usage:        0 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    2
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_Mcu_Initialization
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           
  5198                           ;psect for function _ADC_Set
  5199  0E5C                     _ADC_Set:	
  5200                           
  5201                           ;MCU_B1.c: 426: ADCON1 = 0x73;
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _ADC_Set: [wreg]
  5205  0E5C  3073               	movlw	115
  5206  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  5207  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  5208  0E5F  009F               	movwf	31	;volatile
  5209                           
  5210                           ;MCU_B1.c: 427: FVRCON = 0xc1;
  5211  0E60  30C1               	movlw	193
  5212  0E61  009D               	movwf	29	;volatile
  5213  0E62  0008               	return
  5214  0E63                     __end_of_ADC_Set:	
  5215                           
  5216                           	psect	text27
  5217  0E6A                     __ptext27:	
  5218 ;; *************** function _Lights_Main *****************
  5219 ;; Defined at:
  5220 ;;		line 52 in file "../src/TriacRelay_B1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5234 ;;      Params:         0       0       0       0
  5235 ;;      Locals:         0       0       0       0
  5236 ;;      Temps:          0       0       0       0
  5237 ;;      Totals:         0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    4
  5241 ;; This function calls:
  5242 ;;		_Lights_Control
  5243 ;;		_setLights_Main
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           
  5250                           ;psect for function _Lights_Main
  5251  0E6A                     _Lights_Main:	
  5252                           
  5253                           ;TriacRelay_B1.c: 73: setLights_Main(1);
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in _Lights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5257  0E6A  3001               	movlw	1
  5258  0E6B  118A  2793  158A   	fcall	_setLights_Main
  5259                           
  5260                           ;TriacRelay_B1.c: 74: Lights_Control(1);
  5261  0E6E  3001               	movlw	1
  5262  0E6F  118A  2460         	fcall	_Lights_Control
  5263  0E71  0008               	return
  5264  0E72                     __end_of_Lights_Main:	
  5265                           
  5266                           	psect	text28
  5267  0793                     __ptext28:	
  5268 ;; *************** function _setLights_Main *****************
  5269 ;; Defined at:
  5270 ;;		line 91 in file "../src/TriacRelay_B1.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  lights          1    wreg     unsigned char 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;  lights          1    1[BANK0 ] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;		None               void
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5284 ;;      Params:         0       0       0       0
  5285 ;;      Locals:         0       1       0       0
  5286 ;;      Temps:          0       0       0       0
  5287 ;;      Totals:         0       1       0       0
  5288 ;;Total ram usage:        1 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    3
  5291 ;; This function calls:
  5292 ;;		_LightsPointSelect
  5293 ;;		_getLights_Allow_Condition
  5294 ;;		_setLights
  5295 ;; This function is called by:
  5296 ;;		_Lights_Main
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           
  5301                           ;psect for function _setLights_Main
  5302  0793                     _setLights_Main:	
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _setLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5306                           ;setLights_Main@lights stored from wreg
  5307  0793  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0794  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0795  00D4               	movwf	setLights_Main@lights
  5310                           
  5311                           ;TriacRelay_B1.c: 92: LightsPointSelect(lights);
  5312  0796  0854               	movf	setLights_Main@lights,w
  5313  0797  158A  2694  118A   	fcall	_LightsPointSelect
  5314                           
  5315                           ;TriacRelay_B1.c: 93: if (Lights->GO == 0) {
  5316  079A  0877               	movf	_Lights,w
  5317  079B  0084               	movwf	4
  5318  079C  1383               	bcf	3,7	;select IRP bank0
  5319  079D  1880               	btfsc	0,1
  5320  079E  0008               	return
  5321                           
  5322                           ;TriacRelay_B1.c: 94: if (Lights->Trigger == 1) {
  5323  079F  0877               	movf	_Lights,w
  5324  07A0  0084               	movwf	4
  5325  07A1  1D80               	btfss	0,3
  5326  07A2  0008               	return
  5327                           
  5328                           ;TriacRelay_B1.c: 95: if (getLights_Allow_Condition(lights) == 0) {
  5329  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  5330  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  5331  07A5  0854               	movf	setLights_Main@lights,w
  5332  07A6  158A  263F  118A   	fcall	_getLights_Allow_Condition
  5333  07A9  3800               	iorlw	0
  5334  07AA  1D03               	skipz
  5335  07AB  0008               	return
  5336                           
  5337                           ;TriacRelay_B1.c: 96: Lights->Trigger = 0;
  5338  07AC  0877               	movf	_Lights,w
  5339  07AD  0084               	movwf	4
  5340  07AE  1383               	bcf	3,7	;select IRP bank0
  5341  07AF  1180               	bcf	0,3
  5342                           
  5343                           ;TriacRelay_B1.c: 97: if (Lights->Switch == 1) {
  5344  07B0  0877               	movf	_Lights,w
  5345  07B1  0084               	movwf	4
  5346  07B2  1E00               	btfss	0,4
  5347  07B3  2FBC               	goto	l3964
  5348                           
  5349                           ;TriacRelay_B1.c: 98: setLights(lights, 1);
  5350  07B4  01F4               	clrf	setLights@status
  5351  07B5  0AF4               	incf	setLights@status,f
  5352  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  5353  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  5354  07B8  0854               	movf	setLights_Main@lights,w
  5355  07B9  118A  2725         	fcall	_setLights
  5356                           
  5357                           ;TriacRelay_B1.c: 99: } else {
  5358  07BB  0008               	return
  5359  07BC                     l3964:	
  5360                           
  5361                           ;TriacRelay_B1.c: 100: setLights(lights, 0);
  5362  07BC  01F4               	clrf	setLights@status
  5363  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  5364  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  5365  07BF  0854               	movf	setLights_Main@lights,w
  5366  07C0  118A  2725         	fcall	_setLights
  5367  07C2  0008               	return
  5368  07C3                     __end_of_setLights_Main:	
  5369                           
  5370                           	psect	text29
  5371  0725                     __ptext29:	
  5372 ;; *************** function _setLights *****************
  5373 ;; Defined at:
  5374 ;;		line 108 in file "../src/TriacRelay_B1.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  lights          1    wreg     unsigned char 
  5377 ;;  status          1    4[COMMON] unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  lights          1    0[BANK0 ] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;		None               void
  5382 ;; Registers used:
  5383 ;;		wreg, fsr0l, fsr0h, status,2
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5389 ;;      Params:         1       0       0       0
  5390 ;;      Locals:         0       1       0       0
  5391 ;;      Temps:          1       0       0       0
  5392 ;;      Totals:         2       1       0       0
  5393 ;;Total ram usage:        3 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    2
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_setLights_Main
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function _setLights
  5405  0725                     _setLights:	
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _setLights: [wreg-fsr0h+status,2]
  5409                           ;setLights@lights stored from wreg
  5410  0725  1283               	bcf	3,5	;RP0=0, select bank0
  5411  0726  1303               	bcf	3,6	;RP1=0, select bank0
  5412  0727  00D3               	movwf	setLights@lights
  5413                           
  5414                           ;TriacRelay_B1.c: 114: Lights->GO = 1;
  5415  0728  0877               	movf	_Lights,w
  5416  0729  0084               	movwf	4
  5417  072A  1383               	bcf	3,7	;select IRP bank0
  5418  072B  1480               	bsf	0,1
  5419                           
  5420                           ;TriacRelay_B1.c: 115: if (status == 1) {
  5421  072C  0874               	movf	setLights@status,w
  5422  072D  3A01               	xorlw	1
  5423  072E  1D03               	skipz
  5424  072F  2F40               	goto	l3748
  5425                           
  5426                           ;TriacRelay_B1.c: 121: if (Lights->Status == 0) {
  5427  0730  0877               	movf	_Lights,w
  5428  0731  0084               	movwf	4
  5429  0732  1900               	btfsc	0,2
  5430  0733  2F59               	goto	l3754
  5431                           
  5432                           ;TriacRelay_B1.c: 122: Lights->Status = 1;
  5433  0734  0877               	movf	_Lights,w
  5434  0735  0084               	movwf	4
  5435  0736  1500               	bsf	0,2
  5436                           
  5437                           ;TriacRelay_B1.c: 123: Lights->RelayValue = 100;
  5438  0737  3064               	movlw	100
  5439  0738  00F5               	movwf	??_setLights
  5440  0739  0877               	movf	_Lights,w
  5441  073A  3E06               	addlw	6
  5442  073B  0084               	movwf	4
  5443  073C  0875               	movf	??_setLights,w
  5444  073D  0080               	movwf	0
  5445                           
  5446                           ;TriacRelay_B1.c: 124: Lights->TriacValue = 140;
  5447  073E  308C               	movlw	140
  5448  073F  2F4F               	goto	L13
  5449  0740                     l3748:	
  5450                           ;TriacRelay_B1.c: 130: }
  5451                           ;TriacRelay_B1.c: 131: } else {
  5452                           
  5453                           ;TriacRelay_B1.c: 125: Lights->Time = 0;
  5454                           
  5455                           
  5456                           ;TriacRelay_B1.c: 132: if (Lights->Status == 1) {
  5457  0740  0877               	movf	_Lights,w
  5458  0741  0084               	movwf	4
  5459  0742  1D00               	btfss	0,2
  5460  0743  2F59               	goto	l3754
  5461                           
  5462                           ;TriacRelay_B1.c: 133: Lights->Status = 0;
  5463  0744  0877               	movf	_Lights,w
  5464  0745  0084               	movwf	4
  5465  0746  1100               	bcf	0,2
  5466                           
  5467                           ;TriacRelay_B1.c: 134: Lights->RelayValue = 40;
  5468  0747  3028               	movlw	40
  5469  0748  00F5               	movwf	??_setLights
  5470  0749  0877               	movf	_Lights,w
  5471  074A  3E06               	addlw	6
  5472  074B  0084               	movwf	4
  5473  074C  0875               	movf	??_setLights,w
  5474  074D  0080               	movwf	0
  5475                           
  5476                           ;TriacRelay_B1.c: 135: Lights->TriacValue = 80;
  5477  074E  3050               	movlw	80
  5478  074F                     L13:	
  5479  074F  00F5               	movwf	??_setLights
  5480  0750  0877               	movf	_Lights,w
  5481  0751  3E04               	addlw	4
  5482  0752  0084               	movwf	4
  5483  0753  0875               	movf	??_setLights,w
  5484  0754  0080               	movwf	0
  5485                           
  5486                           ;TriacRelay_B1.c: 136: Lights->Time = 0;
  5487  0755  0877               	movf	_Lights,w
  5488  0756  3E02               	addlw	2
  5489  0757  0084               	movwf	4
  5490  0758  0180               	clrf	0
  5491  0759                     l3754:	
  5492                           
  5493                           ;TriacRelay_B1.c: 141: }
  5494                           ;TriacRelay_B1.c: 142: }
  5495                           ;TriacRelay_B1.c: 144: if (lights == 1) {
  5496  0759  0853               	movf	setLights@lights,w
  5497  075A  3A01               	xorlw	1
  5498  075B  1D03               	skipz
  5499  075C  0008               	return
  5500                           
  5501                           ;TriacRelay_B1.c: 145: RA7 = 1;
  5502  075D  1785               	bsf	5,7	;volatile
  5503  075E  0008               	return
  5504  075F                     __end_of_setLights:	
  5505                           
  5506                           	psect	text30
  5507  0E3F                     __ptext30:	
  5508 ;; *************** function _getLights_Allow_Condition *****************
  5509 ;; Defined at:
  5510 ;;		line 305 in file "../src/TriacRelay_B1.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  lights          1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  lights          1    0[COMMON] unsigned char 
  5515 ;;  allow           1    4[COMMON] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      unsigned char 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5525 ;;      Params:         0       0       0       0
  5526 ;;      Locals:         1       0       0       0
  5527 ;;      Temps:          0       0       0       0
  5528 ;;      Totals:         1       0       0       0
  5529 ;;Total ram usage:        1 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    2
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_setLights_Main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _getLights_Allow_Condition
  5541  0E3F                     _getLights_Allow_Condition:	
  5542                           
  5543                           ;TriacRelay_B1.c: 306: char allow = 0;
  5544                           
  5545                           ;incstack = 0
  5546                           ; Regs used in _getLights_Allow_Condition: [wreg+status,2]
  5547  0E3F  01F4               	clrf	getLights_Allow_Condition@allow
  5548                           
  5549                           ;TriacRelay_B1.c: 334: return allow;
  5550  0E40  0874               	movf	getLights_Allow_Condition@allow,w
  5551  0E41  0008               	return
  5552  0E42                     __end_of_getLights_Allow_Condition:	
  5553                           
  5554                           	psect	text31
  5555  0460                     __ptext31:	
  5556 ;; *************** function _Lights_Control *****************
  5557 ;; Defined at:
  5558 ;;		line 161 in file "../src/TriacRelay_B1.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  lights          1    wreg     unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  lights          1   10[BANK0 ] unsigned char 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;		None               void
  5565 ;; Registers used:
  5566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5572 ;;      Params:         0       0       0       0
  5573 ;;      Locals:         0       1       0       0
  5574 ;;      Temps:          0       2       0       0
  5575 ;;      Totals:         0       3       0       0
  5576 ;;Total ram usage:        3 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    3
  5579 ;; This function calls:
  5580 ;;		_LightsPointSelect
  5581 ;;		___awdiv
  5582 ;; This function is called by:
  5583 ;;		_Lights_Main
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function _Lights_Control
  5589  0460                     _Lights_Control:	
  5590                           
  5591                           ;incstack = 0
  5592                           ; Regs used in _Lights_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5593                           ;Lights_Control@lights stored from wreg
  5594  0460  1283               	bcf	3,5	;RP0=0, select bank0
  5595  0461  1303               	bcf	3,6	;RP1=0, select bank0
  5596  0462  00DD               	movwf	Lights_Control@lights
  5597                           
  5598                           ;TriacRelay_B1.c: 162: LightsPointSelect(lights);
  5599  0463  085D               	movf	Lights_Control@lights,w
  5600  0464  158A  2694  118A   	fcall	_LightsPointSelect
  5601                           
  5602                           ;TriacRelay_B1.c: 163: if (Lights->GO == 1) {
  5603  0467  0877               	movf	_Lights,w
  5604  0468  0084               	movwf	4
  5605  0469  1383               	bcf	3,7	;select IRP bank0
  5606  046A  1C80               	btfss	0,1
  5607  046B  0008               	return
  5608                           
  5609                           ;TriacRelay_B1.c: 164: Lights->Time++;
  5610  046C  3001               	movlw	1
  5611  046D  1283               	bcf	3,5	;RP0=0, select bank0
  5612  046E  1303               	bcf	3,6	;RP1=0, select bank0
  5613  046F  00DB               	movwf	??_Lights_Control
  5614  0470  0877               	movf	_Lights,w
  5615  0471  3E02               	addlw	2
  5616  0472  0084               	movwf	4
  5617  0473  085B               	movf	??_Lights_Control,w
  5618  0474  0780               	addwf	0,f
  5619                           
  5620                           ;TriacRelay_B1.c: 165: if (Lights->RelaySet == 0) {
  5621  0475  0877               	movf	_Lights,w
  5622  0476  0084               	movwf	4
  5623  0477  1B80               	btfsc	0,7
  5624  0478  2CAF               	goto	l3982
  5625                           
  5626                           ;TriacRelay_B1.c: 166: if (Lights->Time >= (Lights->RelayValue / 20)) {
  5627  0479  3014               	movlw	20
  5628  047A  00D3               	movwf	___awdiv@divisor
  5629  047B  3000               	movlw	0
  5630  047C  00D4               	movwf	___awdiv@divisor+1
  5631  047D  0877               	movf	_Lights,w
  5632  047E  3E06               	addlw	6
  5633  047F  0084               	movwf	4
  5634  0480  0800               	movf	0,w
  5635  0481  00DB               	movwf	??_Lights_Control
  5636  0482  01DC               	clrf	??_Lights_Control+1
  5637  0483  085B               	movf	??_Lights_Control,w
  5638  0484  00D5               	movwf	___awdiv@dividend
  5639  0485  085C               	movf	??_Lights_Control+1,w
  5640  0486  00D6               	movwf	___awdiv@dividend+1
  5641  0487  118A  263B  118A   	fcall	___awdiv
  5642  048A  0877               	movf	_Lights,w
  5643  048B  3E02               	addlw	2
  5644  048C  0084               	movwf	4
  5645  048D  1283               	bcf	3,5	;RP0=0, select bank0
  5646  048E  1303               	bcf	3,6	;RP1=0, select bank0
  5647  048F  0854               	movf	?___awdiv+1,w
  5648  0490  3A80               	xorlw	128
  5649  0491  3C80               	sublw	128
  5650  0492  1D03               	skipz
  5651  0493  2C97               	goto	u4395
  5652  0494  0853               	movf	?___awdiv,w
  5653  0495  1383               	bcf	3,7	;select IRP bank0
  5654  0496  0200               	subwf	0,w
  5655  0497                     u4395:	
  5656  0497  1C03               	skipc
  5657  0498  0008               	return
  5658                           
  5659                           ;TriacRelay_B1.c: 167: Lights->RelaySet = 1;
  5660  0499  0877               	movf	_Lights,w
  5661  049A  0084               	movwf	4
  5662  049B  1383               	bcf	3,7	;select IRP bank0
  5663  049C  1780               	bsf	0,7
  5664                           
  5665                           ;TriacRelay_B1.c: 169: if (lights == 1) {
  5666  049D  1283               	bcf	3,5	;RP0=0, select bank0
  5667  049E  1303               	bcf	3,6	;RP1=0, select bank0
  5668  049F  085D               	movf	Lights_Control@lights,w
  5669  04A0  3A01               	xorlw	1
  5670  04A1  1D03               	skipz
  5671  04A2  0008               	return
  5672                           
  5673                           ;TriacRelay_B1.c: 170: RA6 = Lights->Status == 1 ? 1 : 0;
  5674  04A3  0877               	movf	_Lights,w
  5675  04A4  0084               	movwf	4
  5676  04A5  1D00               	btfss	0,2
  5677  04A6  2CAB               	goto	u4410
  5678  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  5679  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  5680  04A9  1705               	bsf	5,6	;volatile
  5681  04AA  0008               	return
  5682  04AB                     u4410:	
  5683  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  5684  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  5685  04AD  1305               	bcf	5,6	;volatile
  5686                           
  5687                           ;TriacRelay_B1.c: 171: }
  5688                           ;TriacRelay_B1.c: 183: }
  5689                           ;TriacRelay_B1.c: 184: } else {
  5690  04AE  0008               	return
  5691  04AF                     l3982:	
  5692                           
  5693                           ;TriacRelay_B1.c: 185: if (Lights->Time >= (Lights->TriacValue / 20)) {
  5694  04AF  3014               	movlw	20
  5695  04B0  00D3               	movwf	___awdiv@divisor
  5696  04B1  3000               	movlw	0
  5697  04B2  00D4               	movwf	___awdiv@divisor+1
  5698  04B3  0877               	movf	_Lights,w
  5699  04B4  3E04               	addlw	4
  5700  04B5  0084               	movwf	4
  5701  04B6  1383               	bcf	3,7	;select IRP bank0
  5702  04B7  0800               	movf	0,w
  5703  04B8  00DB               	movwf	??_Lights_Control
  5704  04B9  01DC               	clrf	??_Lights_Control+1
  5705  04BA  085B               	movf	??_Lights_Control,w
  5706  04BB  00D5               	movwf	___awdiv@dividend
  5707  04BC  085C               	movf	??_Lights_Control+1,w
  5708  04BD  00D6               	movwf	___awdiv@dividend+1
  5709  04BE  118A  263B  118A   	fcall	___awdiv
  5710  04C1  0877               	movf	_Lights,w
  5711  04C2  3E02               	addlw	2
  5712  04C3  0084               	movwf	4
  5713  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  5714  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  5715  04C6  0854               	movf	?___awdiv+1,w
  5716  04C7  3A80               	xorlw	128
  5717  04C8  3C80               	sublw	128
  5718  04C9  1D03               	skipz
  5719  04CA  2CCE               	goto	u4435
  5720  04CB  0853               	movf	?___awdiv,w
  5721  04CC  1383               	bcf	3,7	;select IRP bank0
  5722  04CD  0200               	subwf	0,w
  5723  04CE                     u4435:	
  5724  04CE  1C03               	skipc
  5725  04CF  0008               	return
  5726                           
  5727                           ;TriacRelay_B1.c: 186: Lights->Time = 0;
  5728  04D0  0877               	movf	_Lights,w
  5729  04D1  3E02               	addlw	2
  5730  04D2  0084               	movwf	4
  5731  04D3  1383               	bcf	3,7	;select IRP bank0
  5732  04D4  0180               	clrf	0
  5733                           
  5734                           ;TriacRelay_B1.c: 187: Lights->GO = 0;
  5735  04D5  0877               	movf	_Lights,w
  5736  04D6  0084               	movwf	4
  5737  04D7  1080               	bcf	0,1
  5738                           
  5739                           ;TriacRelay_B1.c: 188: Lights->RelaySet = 0;
  5740  04D8  0877               	movf	_Lights,w
  5741  04D9  0084               	movwf	4
  5742  04DA  1380               	bcf	0,7
  5743                           
  5744                           ;TriacRelay_B1.c: 191: if (lights == 1) {
  5745  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  5746  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  5747  04DD  085D               	movf	Lights_Control@lights,w
  5748  04DE  3A01               	xorlw	1
  5749  04DF  1D03               	skipz
  5750  04E0  0008               	return
  5751                           
  5752                           ;TriacRelay_B1.c: 192: RA7 = 0;
  5753  04E1  1385               	bcf	5,7	;volatile
  5754  04E2  0008               	return
  5755  04E3                     __end_of_Lights_Control:	
  5756                           
  5757                           	psect	text32
  5758  063B                     __ptext32:	
  5759 ;; *************** function ___awdiv *****************
  5760 ;; Defined at:
  5761 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  divisor         2    0[BANK0 ] int 
  5764 ;;  dividend        2    2[BANK0 ] int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  quotient        2    6[BANK0 ] int 
  5767 ;;  sign            1    5[BANK0 ] unsigned char 
  5768 ;;  counter         1    4[BANK0 ] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  2    0[BANK0 ] int 
  5771 ;; Registers used:
  5772 ;;		wreg, status,2, status,0
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5778 ;;      Params:         0       4       0       0
  5779 ;;      Locals:         0       4       0       0
  5780 ;;      Temps:          1       0       0       0
  5781 ;;      Totals:         1       8       0       0
  5782 ;;Total ram usage:        9 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    2
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_getPIR_AD
  5789 ;;		_Lights_Control
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           
  5794                           ;psect for function ___awdiv
  5795  063B                     ___awdiv:	
  5796                           
  5797                           ;incstack = 0
  5798                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5799  063B  1283               	bcf	3,5	;RP0=0, select bank0
  5800  063C  1303               	bcf	3,6	;RP1=0, select bank0
  5801  063D  01D8               	clrf	___awdiv@sign
  5802  063E  1FD4               	btfss	___awdiv@divisor+1,7
  5803  063F  2E47               	goto	l3766
  5804  0640  09D3               	comf	___awdiv@divisor,f
  5805  0641  09D4               	comf	___awdiv@divisor+1,f
  5806  0642  0AD3               	incf	___awdiv@divisor,f
  5807  0643  1903               	skipnz
  5808  0644  0AD4               	incf	___awdiv@divisor+1,f
  5809  0645  01D8               	clrf	___awdiv@sign
  5810  0646  0AD8               	incf	___awdiv@sign,f
  5811  0647                     l3766:	
  5812  0647  1FD6               	btfss	___awdiv@dividend+1,7
  5813  0648  2E52               	goto	l3772
  5814  0649  09D5               	comf	___awdiv@dividend,f
  5815  064A  09D6               	comf	___awdiv@dividend+1,f
  5816  064B  0AD5               	incf	___awdiv@dividend,f
  5817  064C  1903               	skipnz
  5818  064D  0AD6               	incf	___awdiv@dividend+1,f
  5819  064E  3001               	movlw	1
  5820  064F  00F4               	movwf	??___awdiv
  5821  0650  0874               	movf	??___awdiv,w
  5822  0651  06D8               	xorwf	___awdiv@sign,f
  5823  0652                     l3772:	
  5824  0652  01D9               	clrf	___awdiv@quotient
  5825  0653  01DA               	clrf	___awdiv@quotient+1
  5826  0654  0854               	movf	___awdiv@divisor+1,w
  5827  0655  0453               	iorwf	___awdiv@divisor,w
  5828  0656  1903               	skipnz
  5829  0657  2E89               	goto	l3794
  5830  0658  01D7               	clrf	___awdiv@counter
  5831  0659  0AD7               	incf	___awdiv@counter,f
  5832  065A                     l3782:	
  5833  065A  1BD4               	btfsc	___awdiv@divisor+1,7
  5834  065B  2E68               	goto	l3784
  5835  065C  3001               	movlw	1
  5836  065D                     u3995:	
  5837  065D  1003               	clrc
  5838  065E  0DD3               	rlf	___awdiv@divisor,f
  5839  065F  0DD4               	rlf	___awdiv@divisor+1,f
  5840  0660  3EFF               	addlw	-1
  5841  0661  1D03               	skipz
  5842  0662  2E5D               	goto	u3995
  5843  0663  3001               	movlw	1
  5844  0664  00F4               	movwf	??___awdiv
  5845  0665  0874               	movf	??___awdiv,w
  5846  0666  07D7               	addwf	___awdiv@counter,f
  5847  0667  2E5A               	goto	l3782
  5848  0668                     l3784:	
  5849  0668  3001               	movlw	1
  5850  0669                     u4015:	
  5851  0669  1003               	clrc
  5852  066A  0DD9               	rlf	___awdiv@quotient,f
  5853  066B  0DDA               	rlf	___awdiv@quotient+1,f
  5854  066C  3EFF               	addlw	-1
  5855  066D  1D03               	skipz
  5856  066E  2E69               	goto	u4015
  5857  066F  0854               	movf	___awdiv@divisor+1,w
  5858  0670  0256               	subwf	___awdiv@dividend+1,w
  5859  0671  1D03               	skipz
  5860  0672  2E75               	goto	u4025
  5861  0673  0853               	movf	___awdiv@divisor,w
  5862  0674  0255               	subwf	___awdiv@dividend,w
  5863  0675                     u4025:	
  5864  0675  1C03               	skipc
  5865  0676  2E7E               	goto	l3790
  5866  0677  0853               	movf	___awdiv@divisor,w
  5867  0678  02D5               	subwf	___awdiv@dividend,f
  5868  0679  0854               	movf	___awdiv@divisor+1,w
  5869  067A  1C03               	skipc
  5870  067B  03D6               	decf	___awdiv@dividend+1,f
  5871  067C  02D6               	subwf	___awdiv@dividend+1,f
  5872  067D  1459               	bsf	___awdiv@quotient,0
  5873  067E                     l3790:	
  5874  067E  3001               	movlw	1
  5875  067F                     u4035:	
  5876  067F  1003               	clrc
  5877  0680  0CD4               	rrf	___awdiv@divisor+1,f
  5878  0681  0CD3               	rrf	___awdiv@divisor,f
  5879  0682  3EFF               	addlw	-1
  5880  0683  1D03               	skipz
  5881  0684  2E7F               	goto	u4035
  5882  0685  3001               	movlw	1
  5883  0686  02D7               	subwf	___awdiv@counter,f
  5884  0687  1D03               	btfss	3,2
  5885  0688  2E68               	goto	l3784
  5886  0689                     l3794:	
  5887  0689  0858               	movf	___awdiv@sign,w
  5888  068A  1903               	btfsc	3,2
  5889  068B  2E91               	goto	l3798
  5890  068C  09D9               	comf	___awdiv@quotient,f
  5891  068D  09DA               	comf	___awdiv@quotient+1,f
  5892  068E  0AD9               	incf	___awdiv@quotient,f
  5893  068F  1903               	skipnz
  5894  0690  0ADA               	incf	___awdiv@quotient+1,f
  5895  0691                     l3798:	
  5896  0691  085A               	movf	___awdiv@quotient+1,w
  5897  0692  01D4               	clrf	?___awdiv+1
  5898  0693  07D4               	addwf	?___awdiv+1,f
  5899  0694  0859               	movf	___awdiv@quotient,w
  5900  0695  01D3               	clrf	?___awdiv
  5901  0696  07D3               	addwf	?___awdiv,f
  5902  0697  0008               	return
  5903  0698                     __end_of___awdiv:	
  5904                           
  5905                           	psect	text33
  5906  0E46                     __ptext33:	
  5907 ;; *************** function _Lights_Initialization *****************
  5908 ;; Defined at:
  5909 ;;		line 32 in file "../src/TriacRelay_B1.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;		None               void
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0, pclath, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5923 ;;      Params:         0       0       0       0
  5924 ;;      Locals:         0       0       0       0
  5925 ;;      Temps:          0       0       0       0
  5926 ;;      Totals:         0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    4
  5930 ;; This function calls:
  5931 ;;		_setLights_Initialization
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _Lights_Initialization
  5939  0E46                     _Lights_Initialization:	
  5940                           
  5941                           ;TriacRelay_B1.c: 34: setLights_Initialization(1);
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in _Lights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5945  0E46  3001               	movlw	1
  5946  0E47  158A  2655         	fcall	_setLights_Initialization
  5947  0E49  0008               	return
  5948  0E4A                     __end_of_Lights_Initialization:	
  5949                           
  5950                           	psect	text34
  5951  0E55                     __ptext34:	
  5952 ;; *************** function _setLights_Initialization *****************
  5953 ;; Defined at:
  5954 ;;		line 47 in file "../src/TriacRelay_B1.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  lights          1    wreg     unsigned char 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  lights          1    0[BANK0 ] unsigned char 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;		None               void
  5961 ;; Registers used:
  5962 ;;		wreg, status,2, status,0, pclath, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5968 ;;      Params:         0       0       0       0
  5969 ;;      Locals:         0       1       0       0
  5970 ;;      Temps:          0       0       0       0
  5971 ;;      Totals:         0       1       0       0
  5972 ;;Total ram usage:        1 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    3
  5975 ;; This function calls:
  5976 ;;		_LightsPointSelect
  5977 ;; This function is called by:
  5978 ;;		_Lights_Initialization
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _setLights_Initialization
  5984  0E55                     _setLights_Initialization:	
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _setLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  5988                           ;setLights_Initialization@lights stored from wreg
  5989  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  5990  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  5991  0E57  00D3               	movwf	setLights_Initialization@lights
  5992                           
  5993                           ;TriacRelay_B1.c: 48: LightsPointSelect(lights);
  5994  0E58  0853               	movf	setLights_Initialization@lights,w
  5995  0E59  158A  2694         	fcall	_LightsPointSelect
  5996  0E5B  0008               	return
  5997  0E5C                     __end_of_setLights_Initialization:	
  5998                           
  5999                           	psect	text35
  6000  0E3C                     __ptext35:	
  6001 ;; *************** function _LED_Main *****************
  6002 ;; Defined at:
  6003 ;;		line 47 in file "../src/LED_B1.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;		None               void
  6010 ;; Registers used:
  6011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6017 ;;      Params:         0       0       0       0
  6018 ;;      Locals:         0       0       0       0
  6019 ;;      Temps:          0       0       0       0
  6020 ;;      Totals:         0       0       0       0
  6021 ;;Total ram usage:        0 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    5
  6024 ;; This function calls:
  6025 ;;		_setPIRLED_Main
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           
  6032                           ;psect for function _LED_Main
  6033  0E3C                     _LED_Main:	
  6034                           
  6035                           ;LED_B1.c: 50: setPIRLED_Main();
  6036                           
  6037                           ;incstack = 0
  6038                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6039  0E3C  118A  2559         	fcall	_setPIRLED_Main
  6040  0E3E  0008               	return
  6041  0E3F                     __end_of_LED_Main:	
  6042                           
  6043                           	psect	text36
  6044  0559                     __ptext36:	
  6045 ;; *************** function _setPIRLED_Main *****************
  6046 ;; Defined at:
  6047 ;;		line 253 in file "../src/LED_B1.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  count           1    3[BANK0 ] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;		None               void
  6054 ;; Registers used:
  6055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6061 ;;      Params:         0       0       0       0
  6062 ;;      Locals:         0       1       0       0
  6063 ;;      Temps:          0       1       0       0
  6064 ;;      Totals:         0       2       0       0
  6065 ;;Total ram usage:        2 bytes
  6066 ;; Hardware stack levels used:    1
  6067 ;; Hardware stack levels required when called:    4
  6068 ;; This function calls:
  6069 ;;		_setLED
  6070 ;; This function is called by:
  6071 ;;		_LED_Main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _setPIRLED_Main
  6077  0559                     _setPIRLED_Main:	
  6078                           
  6079                           ;LED_B1.c: 254: char count;
  6080                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6084  0559  1283               	bcf	3,5	;RP0=0, select bank0
  6085  055A  1303               	bcf	3,6	;RP1=0, select bank0
  6086  055B  1C2B               	btfss	_PIRLED,0
  6087  055C  0008               	return
  6088                           
  6089                           ;LED_B1.c: 256: PIRLED.Time++;
  6090  055D  3001               	movlw	1
  6091  055E  07AD               	addwf	_PIRLED+2,f
  6092  055F  1803               	skipnc
  6093  0560  0AAE               	incf	_PIRLED+3,f
  6094  0561  3000               	movlw	0
  6095  0562  07AE               	addwf	_PIRLED+3,f
  6096                           
  6097                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 20) {
  6098  0563  3000               	movlw	0
  6099  0564  022E               	subwf	_PIRLED+3,w
  6100  0565  3019               	movlw	25
  6101  0566  1903               	skipnz
  6102  0567  022D               	subwf	_PIRLED+2,w
  6103  0568  1C03               	skipc
  6104  0569  0008               	return
  6105                           
  6106                           ;LED_B1.c: 258: PIRLED.Time = 0;
  6107  056A  01AD               	clrf	_PIRLED+2
  6108  056B  01AE               	clrf	_PIRLED+3
  6109                           
  6110                           ;LED_B1.c: 259: setLED(1, 0);
  6111  056C  01D3               	clrf	setLED@command
  6112  056D  3001               	movlw	1
  6113  056E  118A  25CA  118A   	fcall	_setLED
  6114                           
  6115                           ;LED_B1.c: 260: setLED(2, 0);
  6116  0571  1283               	bcf	3,5	;RP0=0, select bank0
  6117  0572  1303               	bcf	3,6	;RP1=0, select bank0
  6118  0573  01D3               	clrf	setLED@command
  6119  0574  3002               	movlw	2
  6120  0575  118A  25CA  118A   	fcall	_setLED
  6121                           
  6122                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  6123  0578  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0579  1303               	bcf	3,6	;RP1=0, select bank0
  6125  057A  1CAB               	btfss	_PIRLED,1
  6126  057B  2D80               	goto	l3822
  6127                           
  6128                           ;LED_B1.c: 262: count = 4;
  6129  057C  3004               	movlw	4
  6130  057D  00D5               	movwf	??_setPIRLED_Main
  6131  057E  0855               	movf	??_setPIRLED_Main,w
  6132  057F  00D6               	movwf	setPIRLED_Main@count
  6133  0580                     l3822:	
  6134                           
  6135                           ;LED_B1.c: 263: }
  6136                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  6137  0580  1D2B               	btfss	_PIRLED,2
  6138  0581  2D86               	goto	l3826
  6139                           
  6140                           ;LED_B1.c: 265: count = 6;
  6141  0582  3006               	movlw	6
  6142  0583  00D5               	movwf	??_setPIRLED_Main
  6143  0584  0855               	movf	??_setPIRLED_Main,w
  6144  0585  00D6               	movwf	setPIRLED_Main@count
  6145  0586                     l3826:	
  6146                           
  6147                           ;LED_B1.c: 266: }
  6148                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  6149  0586  1DAB               	btfss	_PIRLED,3
  6150  0587  2D8C               	goto	l3830
  6151                           
  6152                           ;LED_B1.c: 268: count = 8;
  6153  0588  3008               	movlw	8
  6154  0589  00D5               	movwf	??_setPIRLED_Main
  6155  058A  0855               	movf	??_setPIRLED_Main,w
  6156  058B  00D6               	movwf	setPIRLED_Main@count
  6157  058C                     l3830:	
  6158                           
  6159                           ;LED_B1.c: 269: }
  6160                           ;LED_B1.c: 270: PIRLED.Count++;
  6161  058C  3001               	movlw	1
  6162  058D  00D5               	movwf	??_setPIRLED_Main
  6163  058E  0855               	movf	??_setPIRLED_Main,w
  6164  058F  07AC               	addwf	_PIRLED+1,f
  6165                           
  6166                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  6167  0590  082C               	movf	_PIRLED+1,w
  6168  0591  3A01               	xorlw	1
  6169  0592  1903               	skipnz
  6170  0593  2D98               	goto	l3836
  6171  0594  082C               	movf	_PIRLED+1,w
  6172  0595  3A02               	xorlw	2
  6173  0596  1D03               	skipz
  6174  0597  2DAC               	goto	l3840
  6175  0598                     l3836:	
  6176                           
  6177                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6178  0598  1003               	clrc
  6179  0599  1E2B               	btfss	_PIRLED,4
  6180  059A  1403               	setc
  6181  059B  1C03               	btfss	3,0
  6182  059C  2DA1               	goto	u4130
  6183  059D  1283               	bcf	3,5	;RP0=0, select bank0
  6184  059E  1303               	bcf	3,6	;RP1=0, select bank0
  6185  059F  162B               	bsf	_PIRLED,4
  6186  05A0  2DA4               	goto	l3838
  6187  05A1                     u4130:	
  6188  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  6189  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  6190  05A3  122B               	bcf	_PIRLED,4
  6191  05A4                     l3838:	
  6192                           
  6193                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  6194  05A4  3000               	movlw	0
  6195  05A5  1A2B               	btfsc	_PIRLED,4
  6196  05A6  3001               	movlw	1
  6197  05A7  00D3               	movwf	setLED@command
  6198  05A8  3002               	movlw	2
  6199  05A9  118A  25CA         	fcall	_setLED
  6200                           
  6201                           ;LED_B1.c: 274: } else {
  6202  05AB  0008               	return
  6203  05AC                     l3840:	
  6204                           
  6205                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  6206  05AC  1003               	clrc
  6207  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  6208  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  6209  05AF  1E2B               	btfss	_PIRLED,4
  6210  05B0  1403               	setc
  6211  05B1  1C03               	btfss	3,0
  6212  05B2  2DB7               	goto	u4150
  6213  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  6214  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  6215  05B5  162B               	bsf	_PIRLED,4
  6216  05B6  2DBA               	goto	l3842
  6217  05B7                     u4150:	
  6218  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  6219  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  6220  05B9  122B               	bcf	_PIRLED,4
  6221  05BA                     l3842:	
  6222                           
  6223                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  6224  05BA  3000               	movlw	0
  6225  05BB  1A2B               	btfsc	_PIRLED,4
  6226  05BC  3001               	movlw	1
  6227  05BD  00D3               	movwf	setLED@command
  6228  05BE  3001               	movlw	1
  6229  05BF  118A  25CA  118A   	fcall	_setLED
  6230                           
  6231                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  6232  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  6233  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  6234  05C4  082C               	movf	_PIRLED+1,w
  6235  05C5  0656               	xorwf	setPIRLED_Main@count,w
  6236  05C6  1D03               	skipz
  6237  05C7  0008               	return
  6238                           
  6239                           ;LED_B1.c: 278: PIRLED.Count = 0;
  6240  05C8  01AC               	clrf	_PIRLED+1
  6241  05C9  0008               	return
  6242  05CA                     __end_of_setPIRLED_Main:	
  6243                           
  6244                           	psect	text37
  6245  0EBD                     __ptext37:	
  6246 ;; *************** function _LED_Initialization *****************
  6247 ;; Defined at:
  6248 ;;		line 31 in file "../src/LED_B1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;		None               void
  6255 ;; Registers used:
  6256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6262 ;;      Params:         0       0       0       0
  6263 ;;      Locals:         0       0       0       0
  6264 ;;      Temps:          0       0       0       0
  6265 ;;      Totals:         0       0       0       0
  6266 ;;Total ram usage:        0 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    5
  6269 ;; This function calls:
  6270 ;;		_setLED_Initialization
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function _LED_Initialization
  6278  0EBD                     _LED_Initialization:	
  6279                           
  6280                           ;LED_B1.c: 33: setLED_Initialization(1);
  6281                           
  6282                           ;incstack = 0
  6283                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6284  0EBD  3001               	movlw	1
  6285  0EBE  118A  27ED  158A   	fcall	_setLED_Initialization
  6286                           
  6287                           ;LED_B1.c: 36: setLED_Initialization(2);
  6288  0EC1  3002               	movlw	2
  6289  0EC2  118A  27ED  158A   	fcall	_setLED_Initialization
  6290                           
  6291                           ;LED_B1.c: 42: setLED_Initialization(99);
  6292  0EC5  3063               	movlw	99
  6293  0EC6  118A  27ED         	fcall	_setLED_Initialization
  6294  0EC8  0008               	return
  6295  0EC9                     __end_of_LED_Initialization:	
  6296                           
  6297                           	psect	text38
  6298  07ED                     __ptext38:	
  6299 ;; *************** function _setLED_Initialization *****************
  6300 ;; Defined at:
  6301 ;;		line 69 in file "../src/LED_B1.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  led             1    wreg     unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  led             1    2[BANK0 ] unsigned char 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;		None               void
  6308 ;; Registers used:
  6309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6315 ;;      Params:         0       0       0       0
  6316 ;;      Locals:         0       1       0       0
  6317 ;;      Temps:          0       0       0       0
  6318 ;;      Totals:         0       1       0       0
  6319 ;;Total ram usage:        1 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:    4
  6322 ;; This function calls:
  6323 ;;		_LedPointSelect
  6324 ;;		_setLED
  6325 ;; This function is called by:
  6326 ;;		_LED_Initialization
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           
  6331                           ;psect for function _setLED_Initialization
  6332  07ED                     _setLED_Initialization:	
  6333                           
  6334                           ;incstack = 0
  6335                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6336                           ;setLED_Initialization@led stored from wreg
  6337  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  6338  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  6339  07EF  00D5               	movwf	setLED_Initialization@led
  6340                           
  6341                           ;LED_B1.c: 70: LedPointSelect(led);
  6342  07F0  0855               	movf	setLED_Initialization@led,w
  6343  07F1  158A  2795  118A   	fcall	_LedPointSelect
  6344                           
  6345                           ;LED_B1.c: 71: LED->Enable = 1;
  6346  07F4  0876               	movf	_LED,w
  6347  07F5  0084               	movwf	4
  6348  07F6  1383               	bcf	3,7	;select IRP bank0
  6349  07F7  1400               	bsf	0,0
  6350                           
  6351                           ;LED_B1.c: 72: setLED(led, 0);
  6352  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  6353  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  6354  07FA  01D3               	clrf	setLED@command
  6355  07FB  0855               	movf	setLED_Initialization@led,w
  6356  07FC  118A  25CA         	fcall	_setLED
  6357  07FE  0008               	return
  6358  07FF                     __end_of_setLED_Initialization:	
  6359                           
  6360                           	psect	text39
  6361  04E3                     __ptext39:	
  6362 ;; *************** function _Exception_Main *****************
  6363 ;; Defined at:
  6364 ;;		line 505 in file "../src/Main_B1.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  i               2    7[BANK0 ] int 
  6369 ;;  status          1    6[BANK0 ] unsigned char 
  6370 ;;  error           1    9[BANK0 ] unsigned char 
  6371 ;;  count           1    5[BANK0 ] unsigned char 
  6372 ;;  lights          1    4[BANK0 ] unsigned char 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;		None               void
  6375 ;; Registers used:
  6376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6382 ;;      Params:         0       0       0       0
  6383 ;;      Locals:         0       6       0       0
  6384 ;;      Temps:          0       1       0       0
  6385 ;;      Totals:         0       7       0       0
  6386 ;;Total ram usage:        7 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    4
  6389 ;; This function calls:
  6390 ;;		_getAll_Lights_Line
  6391 ;;		_getLights_Status
  6392 ;;		_getMain_All_Error_Status
  6393 ;;		_setLED
  6394 ;;		_setLights_Trigger
  6395 ;; This function is called by:
  6396 ;;		_main
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           
  6401                           ;psect for function _Exception_Main
  6402  04E3                     _Exception_Main:	
  6403                           
  6404                           ;Main_B1.c: 506: char error = getMain_All_Error_Status(0);
  6405                           
  6406                           ;incstack = 0
  6407                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6408  04E3  3000               	movlw	0
  6409  04E4  158A  2639  118A   	fcall	_getMain_All_Error_Status
  6410  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  6411  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  6412  04E9  00D6               	movwf	??_Exception_Main
  6413  04EA  0856               	movf	??_Exception_Main,w
  6414  04EB  00DC               	movwf	Exception_Main@error
  6415                           
  6416                           ;Main_B1.c: 507: char lights = 0, count = 1;
  6417  04EC  01D7               	clrf	Exception_Main@lights
  6418  04ED  01D8               	clrf	Exception_Main@count
  6419  04EE  0AD8               	incf	Exception_Main@count,f
  6420                           
  6421                           ;Main_B1.c: 508: if (myMain.Error_Run == 1) {
  6422  04EF  1DA3               	btfss	_myMain+3,3
  6423  04F0  2CFD               	goto	l4316
  6424                           
  6425                           ;Main_B1.c: 509: if (error == 0) {
  6426  04F1  08DC               	movf	Exception_Main@error,f
  6427  04F2  1D03               	skipz
  6428  04F3  0008               	return
  6429                           
  6430                           ;Main_B1.c: 510: myMain.Error_Run = 0;
  6431  04F4  11A3               	bcf	_myMain+3,3
  6432                           
  6433                           ;Main_B1.c: 512: setLED(error, 110);
  6434  04F5  306E               	movlw	110
  6435  04F6  00D6               	movwf	??_Exception_Main
  6436  04F7  0856               	movf	??_Exception_Main,w
  6437  04F8  00D3               	movwf	setLED@command
  6438  04F9  085C               	movf	Exception_Main@error,w
  6439  04FA  118A  25CA         	fcall	_setLED
  6440                           
  6441                           ;Main_B1.c: 521: }
  6442                           ;Main_B1.c: 522: } else {
  6443  04FC  0008               	return
  6444  04FD                     l4316:	
  6445                           
  6446                           ;Main_B1.c: 523: if (error != 0) {
  6447  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  6448  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  6449  04FF  085C               	movf	Exception_Main@error,w
  6450  0500  1903               	btfsc	3,2
  6451  0501  0008               	return
  6452                           
  6453                           ;Main_B1.c: 524: myMain.Error_Run = 1;
  6454  0502  15A3               	bsf	_myMain+3,3
  6455                           
  6456                           ;Main_B1.c: 585: setLED(error, 111);
  6457  0503  306F               	movlw	111
  6458  0504  00D6               	movwf	??_Exception_Main
  6459  0505  0856               	movf	??_Exception_Main,w
  6460  0506  00D3               	movwf	setLED@command
  6461  0507  085C               	movf	Exception_Main@error,w
  6462  0508  118A  25CA  118A   	fcall	_setLED
  6463                           
  6464                           ;Main_B1.c: 586: if (error == 3) {
  6465  050B  1283               	bcf	3,5	;RP0=0, select bank0
  6466  050C  1303               	bcf	3,6	;RP1=0, select bank0
  6467  050D  085C               	movf	Exception_Main@error,w
  6468  050E  3A03               	xorlw	3
  6469  050F  1D03               	skipz
  6470  0510  2D2C               	goto	l4328
  6471                           
  6472                           ;Main_B1.c: 587: char status = getAll_Lights_Line();
  6473  0511  158A  26F4  118A   	fcall	_getAll_Lights_Line
  6474  0514  1283               	bcf	3,5	;RP0=0, select bank0
  6475  0515  1303               	bcf	3,6	;RP1=0, select bank0
  6476  0516  00D6               	movwf	??_Exception_Main
  6477  0517  0856               	movf	??_Exception_Main,w
  6478  0518  00D9               	movwf	Exception_Main@status
  6479                           
  6480                           ;Main_B1.c: 588: if (getLights_Status(status) == 1) {
  6481  0519  0859               	movf	Exception_Main@status,w
  6482  051A  158A  2705  118A   	fcall	_getLights_Status
  6483  051D  3A01               	xorlw	1
  6484  051E  1903               	btfsc	3,2
  6485  051F  2D23               	goto	l4326
  6486  0520  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0521  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0522  0008               	return
  6489  0523                     l4326:	
  6490                           
  6491                           ;Main_B1.c: 589: setLights_Trigger(status, 0);
  6492  0523  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0524  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0525  01D3               	clrf	setLights_Trigger@command
  6495  0526  0859               	movf	Exception_Main@status,w
  6496  0527  158A  27C9         	fcall	_setLights_Trigger
  6497  0529  1283               	bcf	3,5	;RP0=0, select bank0
  6498  052A  1303               	bcf	3,6	;RP1=0, select bank0
  6499  052B  0008               	return
  6500  052C                     l4328:	
  6501                           ;Main_B1.c: 590: }
  6502                           ;Main_B1.c: 591: } else {
  6503                           
  6504                           
  6505                           ;Main_B1.c: 593: for (int i = 0; i < count; i++) {
  6506  052C  1283               	bcf	3,5	;RP0=0, select bank0
  6507  052D  1303               	bcf	3,6	;RP1=0, select bank0
  6508  052E  01DA               	clrf	Exception_Main@i
  6509  052F  01DB               	clrf	Exception_Main@i+1
  6510  0530                     l4336:	
  6511  0530  085B               	movf	Exception_Main@i+1,w
  6512  0531  3A80               	xorlw	128
  6513  0532  00D6               	movwf	??_Exception_Main
  6514  0533  3080               	movlw	128
  6515  0534  0256               	subwf	??_Exception_Main,w
  6516  0535  1D03               	skipz
  6517  0536  2D39               	goto	u5175
  6518  0537  0858               	movf	Exception_Main@count,w
  6519  0538  025A               	subwf	Exception_Main@i,w
  6520  0539                     u5175:	
  6521  0539  1803               	btfsc	3,0
  6522  053A  2D56               	goto	u5170
  6523                           
  6524                           ;Main_B1.c: 594: if (getLights_Status(i + 1) == 1) {
  6525  053B  1283               	bcf	3,5	;RP0=0, select bank0
  6526  053C  1303               	bcf	3,6	;RP1=0, select bank0
  6527  053D  085A               	movf	Exception_Main@i,w
  6528  053E  3E01               	addlw	1
  6529  053F  158A  2705  118A   	fcall	_getLights_Status
  6530  0542  3A01               	xorlw	1
  6531  0543  1D03               	skipz
  6532  0544  2D4D               	goto	l4334
  6533                           
  6534                           ;Main_B1.c: 595: setLights_Trigger(i + 1, 0);
  6535  0545  1283               	bcf	3,5	;RP0=0, select bank0
  6536  0546  1303               	bcf	3,6	;RP1=0, select bank0
  6537  0547  01D3               	clrf	setLights_Trigger@command
  6538  0548  085A               	movf	Exception_Main@i,w
  6539  0549  3E01               	addlw	1
  6540  054A  158A  27C9  118A   	fcall	_setLights_Trigger
  6541  054D                     l4334:	
  6542  054D  3001               	movlw	1
  6543  054E  1283               	bcf	3,5	;RP0=0, select bank0
  6544  054F  1303               	bcf	3,6	;RP1=0, select bank0
  6545  0550  07DA               	addwf	Exception_Main@i,f
  6546  0551  1803               	skipnc
  6547  0552  0ADB               	incf	Exception_Main@i+1,f
  6548  0553  3000               	movlw	0
  6549  0554  07DB               	addwf	Exception_Main@i+1,f
  6550  0555  2D30               	goto	l4336
  6551  0556                     u5170:	
  6552  0556  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0557  1303               	bcf	3,6	;RP1=0, select bank0
  6554  0558  0008               	return
  6555  0559                     __end_of_Exception_Main:	
  6556                           
  6557                           	psect	text40
  6558  0FC9                     __ptext40:	
  6559 ;; *************** function _setLights_Trigger *****************
  6560 ;; Defined at:
  6561 ;;		line 219 in file "../src/TriacRelay_B1.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  lights          1    wreg     unsigned char 
  6564 ;;  command         1    0[BANK0 ] unsigned char 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  lights          1    2[BANK0 ] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;		None               void
  6569 ;; Registers used:
  6570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6576 ;;      Params:         0       1       0       0
  6577 ;;      Locals:         0       1       0       0
  6578 ;;      Temps:          0       1       0       0
  6579 ;;      Totals:         0       3       0       0
  6580 ;;Total ram usage:        3 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    3
  6583 ;; This function calls:
  6584 ;;		_LightsPointSelect
  6585 ;; This function is called by:
  6586 ;;		_Exception_Main
  6587 ;;		_PIR_Main
  6588 ;;		_setMain_Exception
  6589 ;;		_setLights_ErrorClose
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           
  6594                           ;psect for function _setLights_Trigger
  6595  0FC9                     _setLights_Trigger:	
  6596                           
  6597                           ;incstack = 0
  6598                           ; Regs used in _setLights_Trigger: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6599                           ;setLights_Trigger@lights stored from wreg
  6600  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  6601  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  6602  0FCB  00D5               	movwf	setLights_Trigger@lights
  6603                           
  6604                           ;TriacRelay_B1.c: 220: LightsPointSelect(lights);
  6605  0FCC  0855               	movf	setLights_Trigger@lights,w
  6606  0FCD  158A  2694         	fcall	_LightsPointSelect
  6607                           
  6608                           ;TriacRelay_B1.c: 221: Lights->Trigger = 1;
  6609  0FCF  0877               	movf	_Lights,w
  6610  0FD0  0084               	movwf	4
  6611  0FD1  1383               	bcf	3,7	;select IRP bank0
  6612  0FD2  1580               	bsf	0,3
  6613                           
  6614                           ;TriacRelay_B1.c: 222: Lights->Switch = command == 1 ? 1 : 0;
  6615  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  6616  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  6617  0FD5  0853               	movf	setLights_Trigger@command,w
  6618  0FD6  3A01               	xorlw	1
  6619  0FD7  3000               	movlw	0
  6620  0FD8  1903               	skipnz
  6621  0FD9  3001               	movlw	1
  6622  0FDA  00D4               	movwf	??_setLights_Trigger
  6623  0FDB  0877               	movf	_Lights,w
  6624  0FDC  0084               	movwf	4
  6625  0FDD  0ED4               	swapf	??_setLights_Trigger,f
  6626  0FDE  0800               	movf	0,w
  6627  0FDF  0654               	xorwf	??_setLights_Trigger,w
  6628  0FE0  39EF               	andlw	-17
  6629  0FE1  0654               	xorwf	??_setLights_Trigger,w
  6630  0FE2  0080               	movwf	0
  6631  0FE3  0008               	return
  6632  0FE4                     __end_of_setLights_Trigger:	
  6633                           
  6634                           	psect	text41
  6635  05CA                     __ptext41:	
  6636 ;; *************** function _setLED *****************
  6637 ;; Defined at:
  6638 ;;		line 76 in file "../src/LED_B1.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  led             1    wreg     unsigned char 
  6641 ;;  command         1    0[BANK0 ] unsigned char 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  led             1    1[BANK0 ] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;		None               void
  6646 ;; Registers used:
  6647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6653 ;;      Params:         0       1       0       0
  6654 ;;      Locals:         0       1       0       0
  6655 ;;      Temps:          0       0       0       0
  6656 ;;      Totals:         0       2       0       0
  6657 ;;Total ram usage:        2 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    3
  6660 ;; This function calls:
  6661 ;;		_LedPointSelect
  6662 ;; This function is called by:
  6663 ;;		_setLED_Initialization
  6664 ;;		_setPIRLED_Main
  6665 ;;		_Exception_Main
  6666 ;;		_PIR_Main
  6667 ;;		_setSw_Initialization
  6668 ;;		_setMain_Exception
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _setLED
  6674  05CA                     _setLED:	
  6675                           
  6676                           ;incstack = 0
  6677                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6678                           ;setLED@led stored from wreg
  6679  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  6680  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  6681  05CC  00D4               	movwf	setLED@led
  6682                           
  6683                           ;LED_B1.c: 77: LedPointSelect(led);
  6684  05CD  0854               	movf	setLED@led,w
  6685  05CE  158A  2795  118A   	fcall	_LedPointSelect
  6686                           
  6687                           ;LED_B1.c: 78: if (command == 0) {
  6688  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  6689  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  6690  05D3  08D3               	movf	setLED@command,f
  6691  05D4  1D03               	skipz
  6692  05D5  2DE3               	goto	l3646
  6693                           
  6694                           ;LED_B1.c: 80: if (led == 1) {
  6695  05D6  0854               	movf	setLED@led,w
  6696  05D7  3A01               	xorlw	1
  6697  05D8  1D03               	skipz
  6698  05D9  2DDB               	goto	l3638
  6699                           
  6700                           ;LED_B1.c: 84: RC7 = 1;
  6701  05DA  1787               	bsf	7,7	;volatile
  6702  05DB                     l3638:	
  6703                           
  6704                           ;LED_B1.c: 86: }
  6705                           ;LED_B1.c: 89: if (led == 2) {
  6706  05DB  0854               	movf	setLED@led,w
  6707  05DC  3A02               	xorlw	2
  6708  05DD  1903               	btfsc	3,2
  6709                           
  6710                           ;LED_B1.c: 93: RC6 = 1;
  6711  05DE  1707               	bsf	7,6	;volatile
  6712                           
  6713                           ;LED_B1.c: 95: }
  6714                           ;LED_B1.c: 107: if (led == 99) {
  6715  05DF  0854               	movf	setLED@led,w
  6716  05E0  3A63               	xorlw	99
  6717  05E1  1903               	btfsc	3,2
  6718                           
  6719                           ;LED_B1.c: 111: RC1 = 1;
  6720  05E2  1487               	bsf	7,1	;volatile
  6721  05E3                     l3646:	
  6722                           
  6723                           ;LED_B1.c: 113: }
  6724                           ;LED_B1.c: 115: }
  6725                           ;LED_B1.c: 116: if (command == 1) {
  6726  05E3  0853               	movf	setLED@command,w
  6727  05E4  3A01               	xorlw	1
  6728  05E5  1D03               	skipz
  6729  05E6  2DF4               	goto	l3660
  6730                           
  6731                           ;LED_B1.c: 118: if (led == 1) {
  6732  05E7  0854               	movf	setLED@led,w
  6733  05E8  3A01               	xorlw	1
  6734  05E9  1D03               	skipz
  6735  05EA  2DEC               	goto	l3652
  6736                           
  6737                           ;LED_B1.c: 122: RC7 = 0;
  6738  05EB  1387               	bcf	7,7	;volatile
  6739  05EC                     l3652:	
  6740                           
  6741                           ;LED_B1.c: 124: }
  6742                           ;LED_B1.c: 127: if (led == 2) {
  6743  05EC  0854               	movf	setLED@led,w
  6744  05ED  3A02               	xorlw	2
  6745  05EE  1903               	btfsc	3,2
  6746                           
  6747                           ;LED_B1.c: 131: RC6 = 0;
  6748  05EF  1307               	bcf	7,6	;volatile
  6749                           
  6750                           ;LED_B1.c: 133: }
  6751                           ;LED_B1.c: 145: if (led == 99) {
  6752  05F0  0854               	movf	setLED@led,w
  6753  05F1  3A63               	xorlw	99
  6754  05F2  1903               	btfsc	3,2
  6755                           
  6756                           ;LED_B1.c: 149: RC1 = 0;
  6757  05F3  1087               	bcf	7,1	;volatile
  6758  05F4                     l3660:	
  6759                           
  6760                           ;LED_B1.c: 151: }
  6761                           ;LED_B1.c: 153: }
  6762                           ;LED_B1.c: 154: if (command == 10) {
  6763  05F4  0853               	movf	setLED@command,w
  6764  05F5  3A0A               	xorlw	10
  6765  05F6  1D03               	skipz
  6766  05F7  2E0F               	goto	l3678
  6767                           
  6768                           ;LED_B1.c: 155: LED->GO = 0;
  6769  05F8  0876               	movf	_LED,w
  6770  05F9  0084               	movwf	4
  6771  05FA  1383               	bcf	3,7	;select IRP bank0
  6772  05FB  1080               	bcf	0,1
  6773                           
  6774                           ;LED_B1.c: 156: LED->Time = 0;
  6775  05FC  0A76               	incf	_LED,w
  6776  05FD  0084               	movwf	4
  6777  05FE  0180               	clrf	0
  6778  05FF  0A84               	incf	4,f
  6779  0600  0180               	clrf	0
  6780                           
  6781                           ;LED_B1.c: 158: if (led == 1) {
  6782  0601  0854               	movf	setLED@led,w
  6783  0602  3A01               	xorlw	1
  6784  0603  1D03               	skipz
  6785  0604  2E07               	goto	l3670
  6786                           
  6787                           ;LED_B1.c: 162: RC7 = 1;
  6788  0605  1787               	bsf	7,7	;volatile
  6789                           
  6790                           ;LED_B1.c: 164: }
  6791  0606  2E0B               	goto	l3674
  6792  0607                     l3670:	
  6793                           
  6794                           ;LED_B1.c: 167: else if (led == 2) {
  6795  0607  0854               	movf	setLED@led,w
  6796  0608  3A02               	xorlw	2
  6797  0609  1903               	btfsc	3,2
  6798                           
  6799                           ;LED_B1.c: 171: RC6 = 1;
  6800  060A  1707               	bsf	7,6	;volatile
  6801  060B                     l3674:	
  6802                           
  6803                           ;LED_B1.c: 173: }
  6804                           ;LED_B1.c: 185: if (led == 99) {
  6805  060B  0854               	movf	setLED@led,w
  6806  060C  3A63               	xorlw	99
  6807  060D  1903               	btfsc	3,2
  6808                           
  6809                           ;LED_B1.c: 189: RC1 = 1;
  6810  060E  1487               	bsf	7,1	;volatile
  6811  060F                     l3678:	
  6812                           
  6813                           ;LED_B1.c: 191: }
  6814                           ;LED_B1.c: 193: }
  6815                           ;LED_B1.c: 194: if (command == 11) {
  6816  060F  0853               	movf	setLED@command,w
  6817  0610  3A0B               	xorlw	11
  6818  0611  1D03               	skipz
  6819  0612  2E17               	goto	l3682
  6820                           
  6821                           ;LED_B1.c: 195: LED->GO = 1;
  6822  0613  0876               	movf	_LED,w
  6823  0614  0084               	movwf	4
  6824  0615  1383               	bcf	3,7	;select IRP bank0
  6825  0616  1480               	bsf	0,1
  6826  0617                     l3682:	
  6827                           
  6828                           ;LED_B1.c: 196: }
  6829                           ;LED_B1.c: 198: if (command == 111) {
  6830  0617  0853               	movf	setLED@command,w
  6831  0618  3A6F               	xorlw	111
  6832  0619  1D03               	skipz
  6833  061A  2E35               	goto	l3708
  6834                           
  6835                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6836  061B  01AC               	clrf	_PIRLED+1
  6837                           
  6838                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6839  061C  01AD               	clrf	_PIRLED+2
  6840  061D  01AE               	clrf	_PIRLED+3
  6841                           
  6842                           ;LED_B1.c: 201: PIRLED.status = 0;
  6843  061E  122B               	bcf	_PIRLED,4
  6844                           
  6845                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6846  061F  142B               	bsf	_PIRLED,0
  6847                           
  6848                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6849  0620  10AB               	bcf	_PIRLED,1
  6850                           
  6851                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6852  0621  112B               	bcf	_PIRLED,2
  6853                           
  6854                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6855  0622  11AB               	bcf	_PIRLED,3
  6856                           
  6857                           ;LED_B1.c: 206: if (led == 1) {
  6858  0623  0854               	movf	setLED@led,w
  6859  0624  3A01               	xorlw	1
  6860  0625  1D03               	skipz
  6861  0626  2E29               	goto	l3700
  6862                           
  6863                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6864  0627  14AB               	bsf	_PIRLED,1
  6865                           
  6866                           ;LED_B1.c: 208: } else if (led == 2) {
  6867  0628  0008               	return
  6868  0629                     l3700:	
  6869  0629  0854               	movf	setLED@led,w
  6870  062A  3A02               	xorlw	2
  6871  062B  1D03               	skipz
  6872  062C  2E2F               	goto	l3704
  6873                           
  6874                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6875  062D  152B               	bsf	_PIRLED,2
  6876                           
  6877                           ;LED_B1.c: 210: } else if (led == 3) {
  6878  062E  0008               	return
  6879  062F                     l3704:	
  6880  062F  0854               	movf	setLED@led,w
  6881  0630  3A03               	xorlw	3
  6882  0631  1D03               	skipz
  6883  0632  0008               	return
  6884                           
  6885                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6886  0633  15AB               	bsf	_PIRLED,3
  6887                           
  6888                           ;LED_B1.c: 212: }
  6889                           ;LED_B1.c: 213: } else if (command == 110) {
  6890  0634  0008               	return
  6891  0635                     l3708:	
  6892  0635  0853               	movf	setLED@command,w
  6893  0636  3A6E               	xorlw	110
  6894  0637  1D03               	skipz
  6895  0638  0008               	return
  6896                           
  6897                           ;LED_B1.c: 214: PIRLED.GO = 0;
  6898  0639  102B               	bcf	_PIRLED,0
  6899  063A  0008               	return
  6900  063B                     __end_of_setLED:	
  6901                           
  6902                           	psect	text42
  6903  0F95                     __ptext42:	
  6904 ;; *************** function _LedPointSelect *****************
  6905 ;; Defined at:
  6906 ;;		line 7 in file "../src/LED_B1.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  led             1    wreg     unsigned char 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  led             1    5[COMMON] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;		None               void
  6913 ;; Registers used:
  6914 ;;		wreg
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6920 ;;      Params:         0       0       0       0
  6921 ;;      Locals:         1       0       0       0
  6922 ;;      Temps:          1       0       0       0
  6923 ;;      Totals:         2       0       0       0
  6924 ;;Total ram usage:        2 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    2
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_setLED_Initialization
  6931 ;;		_setLED
  6932 ;;		_setLED_Main
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           
  6937                           ;psect for function _LedPointSelect
  6938  0F95                     _LedPointSelect:	
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _LedPointSelect: [wreg]
  6942                           ;LedPointSelect@led stored from wreg
  6943  0F95  00F5               	movwf	LedPointSelect@led
  6944                           
  6945                           ;LED_B1.c: 9: if (led == 1) {
  6946  0F96  0875               	movf	LedPointSelect@led,w
  6947  0F97  3A01               	xorlw	1
  6948  0F98  1D03               	skipz
  6949  0F99  2F9E               	goto	l256
  6950                           
  6951                           ;LED_B1.c: 10: LED = &VarLED1;
  6952  0F9A  304B               	movlw	_VarLED1& (0+255)
  6953  0F9B  00F4               	movwf	??_LedPointSelect
  6954  0F9C  0874               	movf	??_LedPointSelect,w
  6955  0F9D  00F6               	movwf	_LED
  6956  0F9E                     l256:	
  6957                           
  6958                           ;LED_B1.c: 11: }
  6959                           ;LED_B1.c: 14: if (led == 2) {
  6960  0F9E  0875               	movf	LedPointSelect@led,w
  6961  0F9F  3A02               	xorlw	2
  6962  0FA0  1D03               	skipz
  6963  0FA1  2FA6               	goto	l257
  6964                           
  6965                           ;LED_B1.c: 15: LED = &VarLED2;
  6966  0FA2  304F               	movlw	_VarLED2& (0+255)
  6967  0FA3  00F4               	movwf	??_LedPointSelect
  6968  0FA4  0874               	movf	??_LedPointSelect,w
  6969  0FA5  00F6               	movwf	_LED
  6970  0FA6                     l257:	
  6971                           
  6972                           ;LED_B1.c: 16: }
  6973                           ;LED_B1.c: 24: if (led == 99) {
  6974  0FA6  0875               	movf	LedPointSelect@led,w
  6975  0FA7  3A63               	xorlw	99
  6976  0FA8  1D03               	skipz
  6977  0FA9  0008               	return
  6978                           
  6979                           ;LED_B1.c: 25: LED = &VarErrLED;
  6980  0FAA  3047               	movlw	_VarErrLED& (0+255)
  6981  0FAB  00F4               	movwf	??_LedPointSelect
  6982  0FAC  0874               	movf	??_LedPointSelect,w
  6983  0FAD  00F6               	movwf	_LED
  6984  0FAE  0008               	return
  6985  0FAF                     __end_of_LedPointSelect:	
  6986                           
  6987                           	psect	text43
  6988  0E39                     __ptext43:	
  6989 ;; *************** function _getMain_All_Error_Status *****************
  6990 ;; Defined at:
  6991 ;;		line 424 in file "../src/Main_B1.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  command         1    wreg     unsigned char 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  command         1    0[COMMON] unsigned char 
  6996 ;;  status          1    4[COMMON] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      unsigned char 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7006 ;;      Params:         0       0       0       0
  7007 ;;      Locals:         1       0       0       0
  7008 ;;      Temps:          0       0       0       0
  7009 ;;      Totals:         1       0       0       0
  7010 ;;Total ram usage:        1 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    2
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_Exception_Main
  7017 ;;		_PIR_Main
  7018 ;;		_setSw_Main
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           
  7023                           ;psect for function _getMain_All_Error_Status
  7024  0E39                     _getMain_All_Error_Status:	
  7025                           
  7026                           ;Main_B1.c: 425: char status = 0;
  7027                           
  7028                           ;incstack = 0
  7029                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  7030  0E39  01F4               	clrf	getMain_All_Error_Status@status
  7031                           
  7032                           ;Main_B1.c: 461: return status;
  7033  0E3A  0874               	movf	getMain_All_Error_Status@status,w
  7034  0E3B  0008               	return
  7035  0E3C                     __end_of_getMain_All_Error_Status:	
  7036                           
  7037                           	psect	text44
  7038  0F05                     __ptext44:	
  7039 ;; *************** function _getLights_Status *****************
  7040 ;; Defined at:
  7041 ;;		line 212 in file "../src/TriacRelay_B1.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  lights          1    wreg     unsigned char 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  lights          1    0[BANK0 ] unsigned char 
  7046 ;;  status          1    1[BANK0 ] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  1    wreg      unsigned char 
  7049 ;; Registers used:
  7050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7056 ;;      Params:         0       0       0       0
  7057 ;;      Locals:         0       2       0       0
  7058 ;;      Temps:          0       0       0       0
  7059 ;;      Totals:         0       2       0       0
  7060 ;;Total ram usage:        2 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; Hardware stack levels required when called:    3
  7063 ;; This function calls:
  7064 ;;		_LightsPointSelect
  7065 ;; This function is called by:
  7066 ;;		_Exception_Main
  7067 ;;		_PIR_Main
  7068 ;;		_setMain_Exception
  7069 ;;		_setLights_ErrorClose
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _getLights_Status
  7075  0F05                     _getLights_Status:	
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in _getLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7079                           ;getLights_Status@lights stored from wreg
  7080  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  7081  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  7082  0F07  00D3               	movwf	getLights_Status@lights
  7083                           
  7084                           ;TriacRelay_B1.c: 213: LightsPointSelect(lights);
  7085  0F08  0853               	movf	getLights_Status@lights,w
  7086  0F09  158A  2694         	fcall	_LightsPointSelect
  7087                           
  7088                           ;TriacRelay_B1.c: 214: char status = Lights->Status == 1 ? 1 : 0;
  7089  0F0B  0877               	movf	_Lights,w
  7090  0F0C  0084               	movwf	4
  7091  0F0D  3000               	movlw	0
  7092  0F0E  1383               	bcf	3,7	;select IRP bank0
  7093  0F0F  1900               	btfsc	0,2
  7094  0F10  3001               	movlw	1
  7095  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  7096  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  7097  0F13  00D4               	movwf	getLights_Status@status
  7098                           
  7099                           ;TriacRelay_B1.c: 215: return status;
  7100  0F14  0854               	movf	getLights_Status@status,w
  7101  0F15  0008               	return
  7102  0F16                     __end_of_getLights_Status:	
  7103                           
  7104                           	psect	text45
  7105  0EF4                     __ptext45:	
  7106 ;; *************** function _getAll_Lights_Line *****************
  7107 ;; Defined at:
  7108 ;;		line 251 in file "../src/TriacRelay_B1.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;		None
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  line            1    0[BANK0 ] unsigned char 
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  1    wreg      unsigned char 
  7115 ;; Registers used:
  7116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7122 ;;      Params:         0       0       0       0
  7123 ;;      Locals:         0       1       0       0
  7124 ;;      Temps:          0       0       0       0
  7125 ;;      Totals:         0       1       0       0
  7126 ;;Total ram usage:        1 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:    3
  7129 ;; This function calls:
  7130 ;;		_LightsPointSelect
  7131 ;; This function is called by:
  7132 ;;		_Exception_Main
  7133 ;;		_setMain_Exception
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function _getAll_Lights_Line
  7139  0EF4                     _getAll_Lights_Line:	
  7140                           
  7141                           ;TriacRelay_B1.c: 252: char line = 0;
  7142                           
  7143                           ;incstack = 0
  7144                           ; Regs used in _getAll_Lights_Line: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7145  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  7146  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  7147  0EF6  01D3               	clrf	getAll_Lights_Line@line
  7148                           
  7149                           ;TriacRelay_B1.c: 254: LightsPointSelect(1);
  7150  0EF7  3001               	movlw	1
  7151  0EF8  158A  2694         	fcall	_LightsPointSelect
  7152                           
  7153                           ;TriacRelay_B1.c: 255: line = Lights->Line == 1 ? 1 : 0;
  7154  0EFA  0A77               	incf	_Lights,w
  7155  0EFB  0084               	movwf	4
  7156  0EFC  3000               	movlw	0
  7157  0EFD  1383               	bcf	3,7	;select IRP bank0
  7158  0EFE  1800               	btfsc	0,0
  7159  0EFF  3001               	movlw	1
  7160  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  7161  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  7162  0F02  00D3               	movwf	getAll_Lights_Line@line
  7163                           
  7164                           ;TriacRelay_B1.c: 265: return line;
  7165  0F03  0853               	movf	getAll_Lights_Line@line,w
  7166  0F04  0008               	return
  7167  0F05                     __end_of_getAll_Lights_Line:	
  7168                           
  7169                           	psect	text46
  7170  0E94                     __ptext46:	
  7171 ;; *************** function _LightsPointSelect *****************
  7172 ;; Defined at:
  7173 ;;		line 10 in file "../src/TriacRelay_B1.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  lights          1    wreg     unsigned char 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  lights          1    5[COMMON] unsigned char 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;		None               void
  7180 ;; Registers used:
  7181 ;;		wreg
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7187 ;;      Params:         0       0       0       0
  7188 ;;      Locals:         1       0       0       0
  7189 ;;      Temps:          1       0       0       0
  7190 ;;      Totals:         2       0       0       0
  7191 ;;Total ram usage:        2 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    2
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_setLights_Initialization
  7198 ;;		_setLights_Main
  7199 ;;		_Lights_Control
  7200 ;;		_getLights_Status
  7201 ;;		_setLights_Trigger
  7202 ;;		_getAll_Lights_Line
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           
  7207                           ;psect for function _LightsPointSelect
  7208  0E94                     _LightsPointSelect:	
  7209                           
  7210                           ;incstack = 0
  7211                           ; Regs used in _LightsPointSelect: [wreg]
  7212                           ;LightsPointSelect@lights stored from wreg
  7213  0E94  00F5               	movwf	LightsPointSelect@lights
  7214                           
  7215                           ;TriacRelay_B1.c: 13: if (lights == 1) {
  7216  0E95  0875               	movf	LightsPointSelect@lights,w
  7217  0E96  3A01               	xorlw	1
  7218  0E97  1D03               	skipz
  7219  0E98  0008               	return
  7220                           
  7221                           ;TriacRelay_B1.c: 14: Lights = &Lights1;
  7222  0E99  3040               	movlw	_Lights1& (0+255)
  7223  0E9A  00F4               	movwf	??_LightsPointSelect
  7224  0E9B  0874               	movf	??_LightsPointSelect,w
  7225  0E9C  00F7               	movwf	_Lights
  7226  0E9D  0008               	return
  7227  0E9E                     __end_of_LightsPointSelect:	
  7228                           
  7229                           	psect	text47
  7230  075F                     __ptext47:	
  7231 ;; *************** function _CDS_Main *****************
  7232 ;; Defined at:
  7233 ;;		line 11 in file "../src/CDS_B1.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;		None               void
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7247 ;;      Params:         0       0       0       0
  7248 ;;      Locals:         0       0       0       0
  7249 ;;      Temps:          0       3       0       0
  7250 ;;      Totals:         0       3       0       0
  7251 ;;Total ram usage:        3 bytes
  7252 ;; Hardware stack levels used:    1
  7253 ;; Hardware stack levels required when called:    2
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_main
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           
  7262                           ;psect for function _CDS_Main
  7263  075F                     _CDS_Main:	
  7264                           
  7265                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7266                           
  7267                           ;incstack = 0
  7268                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7269  075F  1283               	bcf	3,5	;RP0=0, select bank0
  7270  0760  1303               	bcf	3,6	;RP1=0, select bank0
  7271  0761  1C26               	btfss	__CDS,0
  7272  0762  0008               	return
  7273                           
  7274                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7275  0763  18A6               	btfsc	__CDS,1
  7276  0764  2F72               	goto	l117
  7277                           
  7278                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7279  0765  19A6               	btfsc	__CDS,3
  7280  0766  0008               	return
  7281                           
  7282                           ;CDS_B1.c: 16: _CDS.Time++;
  7283  0767  3001               	movlw	1
  7284  0768  00D3               	movwf	??_CDS_Main
  7285  0769  0853               	movf	??_CDS_Main,w
  7286  076A  07A7               	addwf	__CDS+1,f
  7287                           
  7288                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  7289  076B  3005               	movlw	5
  7290  076C  0227               	subwf	__CDS+1,w
  7291  076D  1C03               	skipc
  7292  076E  0008               	return
  7293                           
  7294                           ;CDS_B1.c: 18: {
  7295                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7296  076F  01A7               	clrf	__CDS+1
  7297                           
  7298                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7299  0770  15A6               	bsf	__CDS,3
  7300                           
  7301                           ;CDS_B1.c: 21: }
  7302                           ;CDS_B1.c: 22: }
  7303                           ;CDS_B1.c: 23: } else {
  7304  0771  0008               	return
  7305  0772                     l117:	
  7306                           
  7307                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7308  0772  1CA6               	btfss	__CDS,1
  7309  0773  0008               	return
  7310                           
  7311                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7312  0774  10A6               	bcf	__CDS,1
  7313                           
  7314                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7315  0775  1A26               	btfsc	__CDS,4
  7316  0776  2F7D               	goto	l4040
  7317                           
  7318                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7319  0777  0828               	movf	__CDS+2,w
  7320  0778  0229               	subwf	__CDS+3,w
  7321  0779  1C03               	skipc
  7322  077A  0008               	return
  7323                           
  7324                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7325  077B  1626               	bsf	__CDS,4
  7326                           
  7327                           ;CDS_B1.c: 29: }
  7328                           ;CDS_B1.c: 30: } else {
  7329  077C  0008               	return
  7330  077D                     l4040:	
  7331                           
  7332                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7333  077D  0828               	movf	__CDS+2,w
  7334  077E  3E9C               	addlw	156
  7335  077F  00D3               	movwf	??_CDS_Main
  7336  0780  30FF               	movlw	255
  7337  0781  1803               	skipnc
  7338  0782  3000               	movlw	0
  7339  0783  00D4               	movwf	??_CDS_Main+1
  7340  0784  0854               	movf	??_CDS_Main+1,w
  7341  0785  3A80               	xorlw	128
  7342  0786  00D5               	movwf	??_CDS_Main+2
  7343  0787  3080               	movlw	128
  7344  0788  0255               	subwf	??_CDS_Main+2,w
  7345  0789  1D03               	skipz
  7346  078A  2F8D               	goto	u4595
  7347  078B  0829               	movf	__CDS+3,w
  7348  078C  0253               	subwf	??_CDS_Main,w
  7349  078D                     u4595:	
  7350  078D  1C03               	skipc
  7351  078E  0008               	return
  7352                           
  7353                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7354  078F  1283               	bcf	3,5	;RP0=0, select bank0
  7355  0790  1303               	bcf	3,6	;RP1=0, select bank0
  7356  0791  1226               	bcf	__CDS,4
  7357  0792  0008               	return
  7358  0793                     __end_of_CDS_Main:	
  7359                           
  7360                           	psect	text48
  7361  0E42                     __ptext48:	
  7362 ;; *************** function _CDS_Initialization *****************
  7363 ;; Defined at:
  7364 ;;		line 7 in file "../src/CDS_B1.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;		None               void
  7371 ;; Registers used:
  7372 ;;		None
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7378 ;;      Params:         0       0       0       0
  7379 ;;      Locals:         0       0       0       0
  7380 ;;      Temps:          0       0       0       0
  7381 ;;      Totals:         0       0       0       0
  7382 ;;Total ram usage:        0 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    2
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_main
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function _CDS_Initialization
  7394  0E42                     _CDS_Initialization:	
  7395                           
  7396                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7397                           
  7398                           ;incstack = 0
  7399                           ; Regs used in _CDS_Initialization: []
  7400  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  7402  0E44  1426               	bsf	__CDS,0
  7403  0E45  0008               	return
  7404  0E46                     __end_of_CDS_Initialization:	
  7405                           
  7406                           	psect	text49
  7407  0F65                     __ptext49:	
  7408 ;; *************** function _ISR *****************
  7409 ;; Defined at:
  7410 ;;		line 116 in file "../src/MCU_B1.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;		None               void
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, pclath, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7424 ;;      Params:         0       0       0       0
  7425 ;;      Locals:         0       0       0       0
  7426 ;;      Temps:          4       0       0       0
  7427 ;;      Totals:         4       0       0       0
  7428 ;;Total ram usage:        4 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    1
  7431 ;; This function calls:
  7432 ;;		_TMR1_ISR
  7433 ;; This function is called by:
  7434 ;;		Interrupt level 1
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function _ISR
  7440  0F65                     _ISR:	
  7441                           
  7442                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  7443  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  7444  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  7445  0F67  1C0C               	btfss	12,0	;volatile
  7446  0F68  2F70               	goto	i1l433
  7447  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  7448  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  7449  0F6B  1C0C               	btfss	12,0	;volatile
  7450  0F6C  2F70               	goto	i1l433
  7451                           
  7452                           ;MCU_B1.c: 126: TMR1_ISR();
  7453  0F6D  158A  274F  158A   	fcall	_TMR1_ISR
  7454  0F70                     i1l433:	
  7455                           ;MCU_B1.c: 127: }
  7456                           ;MCU_B1.c: 148: return;
  7457                           
  7458  0F70  0873               	movf	??_ISR+3,w
  7459  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  7460  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  7461  0F73  00FF               	movwf	127
  7462  0F74  0872               	movf	??_ISR+2,w
  7463  0F75  008A               	movwf	10
  7464  0F76  0871               	movf	??_ISR+1,w
  7465  0F77  0084               	movwf	4
  7466  0F78  0E70               	swapf	??_ISR^(0+-128),w
  7467  0F79  0083               	movwf	3
  7468  0F7A  0EFE               	swapf	126,f
  7469  0F7B  0E7E               	swapf	126,w
  7470  0F7C  0009               	retfie
  7471  0F7D                     __end_of_ISR:	
  7472                           
  7473                           	psect	intentry
  7474  0004                     __pintentry:	
  7475                           ;incstack = 0
  7476                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  7477                           
  7478  0004                     interrupt_function:	
  7479  007E                     saved_w	set	btemp
  7480  0004  00FE               	movwf	btemp
  7481  0005  0E03               	swapf	3,w
  7482  0006  00F0               	movwf	??_ISR
  7483  0007  0804               	movf	4,w
  7484  0008  00F1               	movwf	??_ISR+1
  7485  0009  080A               	movf	10,w
  7486  000A  00F2               	movwf	??_ISR+2
  7487  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7488  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7489  000D  087F               	movf	btemp+1,w
  7490  000E  00F3               	movwf	??_ISR+3
  7491  000F  158A  2F65         	ljmp	_ISR
  7492                           
  7493                           	psect	text50
  7494  0F4F                     __ptext50:	
  7495 ;; *************** function _TMR1_ISR *****************
  7496 ;; Defined at:
  7497 ;;		line 236 in file "../src/MCU_B1.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;		None               void
  7504 ;; Registers used:
  7505 ;;		wreg, status,2
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7511 ;;      Params:         0       0       0       0
  7512 ;;      Locals:         0       0       0       0
  7513 ;;      Temps:          0       0       0       0
  7514 ;;      Totals:         0       0       0       0
  7515 ;;Total ram usage:        0 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_ISR
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function _TMR1_ISR
  7526  0F4F                     _TMR1_ISR:	
  7527                           
  7528                           ;MCU_B1.c: 238: TMR1H = (int)((65536-1480)/256);
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _TMR1_ISR: [wreg+status,2]
  7532  0F4F  30FA               	movlw	250
  7533  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  7534  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  7535  0F52  008F               	movwf	15	;volatile
  7536                           
  7537                           ;MCU_B1.c: 239: TMR1L = (int)((65536-1480)%256);
  7538  0F53  3038               	movlw	56
  7539  0F54  008E               	movwf	14	;volatile
  7540                           
  7541                           ;MCU_B1.c: 240: TMR1IF = 0;
  7542  0F55  100C               	bcf	12,0	;volatile
  7543                           
  7544                           ;MCU_B1.c: 271: Timer1.Count++;
  7545  0F56  3001               	movlw	1
  7546  0F57  07B0               	addwf	_Timer1+1,f
  7547  0F58  1803               	skipnc
  7548  0F59  0AB1               	incf	_Timer1+2,f
  7549  0F5A  3000               	movlw	0
  7550  0F5B  07B1               	addwf	_Timer1+2,f
  7551                           
  7552                           ;MCU_B1.c: 272: if (Timer1.Count == (int)(20*10)) {
  7553  0F5C  30C8               	movlw	200
  7554  0F5D  0630               	xorwf	_Timer1+1,w
  7555  0F5E  0431               	iorwf	_Timer1+2,w
  7556  0F5F  1D03               	skipz
  7557  0F60  0008               	return
  7558                           
  7559                           ;MCU_B1.c: 273: Timer1.Count = 0;
  7560  0F61  01B0               	clrf	_Timer1+1
  7561  0F62  01B1               	clrf	_Timer1+2
  7562                           
  7563                           ;MCU_B1.c: 274: Timer1.Timeout = 1;
  7564  0F63  142F               	bsf	_Timer1,0
  7565  0F64  0008               	return
  7566  0F65                     __end_of_TMR1_ISR:	
  7567  007E                     btemp	set	126	;btemp
  7568  007E                     wtemp	set	126
  7569  007E                     wtemp0	set	126
  7570  0080                     wtemp1	set	128
  7571  0082                     wtemp2	set	130
  7572  0084                     wtemp3	set	132
  7573  0086                     wtemp4	set	134
  7574  0088                     wtemp5	set	136
  7575  007F                     wtemp6	set	127
  7576  007E                     ttemp	set	126
  7577  007E                     ttemp0	set	126
  7578  0081                     ttemp1	set	129
  7579  0084                     ttemp2	set	132
  7580  0087                     ttemp3	set	135
  7581  007F                     ttemp4	set	127
  7582  007E                     ltemp	set	126
  7583  007E                     ltemp0	set	126
  7584  0082                     ltemp1	set	130
  7585  0086                     ltemp2	set	134
  7586  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     20      71
    BANK1            80      0      46
    BANK2            16      0       0

Pointer List with Targets:

    Lights	PTR struct Lights size(1) Largest target is 7
		 -> NULL(NULL[0]), Lights1(BANK0[7]), 

    Sw	PTR struct Switch size(1) Largest target is 9
		 -> NULL(NULL[0]), Sw1(BANK0[9]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 


Critical Paths under _main in COMMON

    _getPIR_AD->_getAD
    _getCDS_AD->_getAD
    _setSw_Main->_SwPointSelect
    _Mcu_Initialization->_WDT_Set
    _setLights_Main->_LightsPointSelect
    _setLights_Main->_setLights
    _Lights_Control->_LightsPointSelect
    _setLights_Initialization->_LightsPointSelect
    _setLED_Initialization->_LedPointSelect
    _setLights_Trigger->_LightsPointSelect
    _setLED->_LedPointSelect
    _getLights_Status->_LightsPointSelect
    _getAll_Lights_Line->_LightsPointSelect

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getPIR_AD->___awdiv
    _Switch_Main->_setSw_Main
    _Switch_Initialization->_setSw_Initialization
    _setSw_Initialization->_setLED
    _PIR_Main->_setLights_Trigger
    _Lights_Main->_Lights_Control
    _setLights_Main->_setLights
    _Lights_Control->___awdiv
    _Lights_Initialization->_setLights_Initialization
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_setLights_Trigger

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   17951
                                             15 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
              _Lights_Initialization
                        _Lights_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
              _Switch_Initialization
                        _Switch_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2099
                                              8 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     549
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     445
                                              0 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     300
                                              4 COMMON     2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              4 COMMON     1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Main                                          0     0      0     164
                         _TouchPower
                         _setSw_Main
 ---------------------------------------------------------------------------------
 (2) _setSw_Main                                           3     3      0     164
                                              0 BANK0      3     3      0
                      _SwPointSelect
           _getMain_All_Error_Status
                    _getSw_KeyStatus
 ---------------------------------------------------------------------------------
 (3) _getSw_KeyStatus                                      2     2      0      37
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SwPointSelect                                        2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Initialization                                0     0      0    2176
                         _TouchPower
               _setSw_Initialization
 ---------------------------------------------------------------------------------
 (2) _setSw_Initialization                                 1     1      0    2176
                                              2 BANK0      1     1      0
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _TouchPower                                           0     0      0       0
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            10    10      0    3442
                                              3 BANK0     10    10      0
                      _getCDS_Status
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      23
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lights_Main                                          0     0      0    1436
                     _Lights_Control
                     _setLights_Main
 ---------------------------------------------------------------------------------
 (2) _setLights_Main                                       1     1      0     405
                                              1 BANK0      1     1      0
                  _LightsPointSelect
          _getLights_Allow_Condition
                          _setLights
 ---------------------------------------------------------------------------------
 (3) _setLights                                            3     2      1     216
                                              4 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _getLights_Allow_Condition                            2     2      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lights_Control                                       3     3      0    1031
                                              8 BANK0      3     3      0
                  _LightsPointSelect
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     907
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lights_Initialization                                0     0      0      62
           _setLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLights_Initialization                             1     1      0      62
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2185
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2185
                                              2 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2300
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2300
                                              2 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       7     7      0    3642
                                              3 BANK0      7     7      0
                 _getAll_Lights_Line
                   _getLights_Status
           _getMain_All_Error_Status
                             _setLED
                  _setLights_Trigger
 ---------------------------------------------------------------------------------
 (2) _setLights_Trigger                                    3     2      1     940
                                              0 BANK0      3     2      1
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _setLED                                               2     1      1    2145
                                              0 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (4) _LedPointSelect                                       2     2      0      93
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             2     2      0      34
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getLights_Status                                     2     2      0      96
                                              0 BANK0      2     2      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (2) _getAll_Lights_Line                                   1     1      0      68
                                              0 BANK0      1     1      0
                  _LightsPointSelect
 ---------------------------------------------------------------------------------
 (3) _LightsPointSelect                                    2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _Exception_Main
     _getAll_Lights_Line
       _LightsPointSelect
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Lights_Initialization
     _setLights_Initialization
       _LightsPointSelect
   _Lights_Main
     _Lights_Control
       _LightsPointSelect
       ___awdiv
     _setLights_Main
       _LightsPointSelect
       _getLights_Allow_Condition
       _setLights
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getLights_Status
       _LightsPointSelect
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
     _setLights_Trigger
       _LightsPointSelect
   _Switch_Initialization
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Initialization
       _setLED
         _LedPointSelect
   _Switch_Main
     _TouchPower
       _Timeout_Counter
       _set_TimeoutCleared
     _setSw_Main
       _SwPointSelect
       _getMain_All_Error_Status
       _getSw_KeyStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2E       7       57.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      7F      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jan 13 16:51:38 2015

              __size_of_Switch_Main 0007                        _WDT_Clearing 0002  
                      ___awdiv@sign 0058                                  _Sw 0079  
                                fsr 0004                                 l117 0772  
                               l256 0F9E                                 l257 0FA6  
                               l754 007B                                 l746 01FD  
                               l747 0075                                 l756 008E  
                               l748 0052                                 _GIE 005F  
                               _LED 0076                                 _RC1 0039  
                               _RB4 0034                                 _RA6 002E  
                               _RB5 0035                                 _RA7 002F  
                               _RC6 003E                                 _RC7 003F  
                               _PS0 0408                                 _PS1 0409  
                               _PS2 040A                                 _ISR 0F65  
                               _PSA 040B                                 _WDT 0032  
                               _Cmd 0034                                 _Sw1 0037  
            getAll_Lights_Line@line 0053                                 fsr0 0004  
                               indf 0000                     __end_of_ADC_Set 0E63  
         __end_of_LightsPointSelect 0E9E                   ??_getSw_KeyStatus 0074  
                  _getLights_Status 0F05             __size_of_Lights_Control 0083  
                              ?_ISR 0070                                l1026 0F42  
                              l1046 0458                                l1048 038F  
                              l4012 0713                                l4004 06EF  
                              l4006 06FD                                l4102 029A  
                              l4040 077D                                l4016 071E  
                              l4112 02B1                                l4212 00B1  
                              l4230 00D5                                l4142 0343  
                              l4134 0317                                l4118 02CD  
                              l4240 0115                                l4224 00C8  
                              l4128 02FB                                l4090 0282  
                              l3266 0FBF                                l3700 0629  
                              l4316 04FD                                l4260 0190  
                              l4228 00D4                                l4148 0351  
                              l4334 054D                                l4326 0523  
                              l4262 019F                                l4174 0065  
                              l2830 0FFA                                l4094 028A  
                              l4086 027A                                l3704 062F  
                              l4336 0530                                l4328 052C  
                              l4256 015E                                l4248 0129  
                              l2824 0FF1                                l2826 0FF4  
                              l4098 0292                                l4370 06AD  
                              l3708 0635                                l3652 05EC  
                              l3660 05F4                                l3670 0607  
                              l3638 05DB                                l3646 05E3  
                              l3830 058C                                l3822 0580  
                              l4278 01CE                                l3840 05AC  
                              l2952 0F4C                                l4376 06C3  
                              l3682 0617                                l3674 060B  
                              l3842 05BA                                l3826 0586  
                              l3754 0759                                l3906 03D3  
                              l3836 0598                                l3772 0652  
                              l3748 0740                                l2948 0F46  
                              l3916 03FA                                l3678 060F  
                              l3838 05A4                                l3790 067E  
                              l3782 065A                                l3766 0647  
                              l3926 0421                                l3784 0668  
                              l3794 0689                                l3964 07BC  
                              l3884 0381                                l3798 0691  
                              l3982 04AF                                l3898 03AF  
             _myMain_Initialization 07FF                        __CFG_WDTE$ON 0000  
                              u2065 0F35                                u4015 0669  
                              u4025 0675                                u4130 05A1  
                              u4035 067F                                u5005 0182  
                              u4150 05B7                                u5025 01AF  
                              u4410 04AB                                u4505 0714  
                              u5170 0556                                u4435 04CE  
                              u5075 01EB                                _PEIE 005E  
                              u5175 0539                                u4465 06F2  
                              u4395 0497                                u4485 06FE  
                              u4495 070A                                u4595 078D  
                              u3995 065D                                u4955 00F3  
                              u4965 010B                                u4985 0146  
                              __CDS 0026                                _WPUB 0095  
                              __PIR 00A0                                _main 0698  
                              btemp 007E                     __end_of_WDT_Set 0EE5  
                              ltemp 007E                                start 0011  
                              ttemp 007E                                wtemp 007E  
                  __end_of_CDS_Main 0793                               ??_ISR 0070  
                 _setLights_Trigger 0FC9                       ??_Lights_Main 0076  
                     __CFG_PLLEN$ON 0000                    __end_of_LED_Main 0E3F  
                ?_setLights_Trigger 0053                    ??_setPIRLED_Main 0055  
                             ?_main 0062                     __end_of___awdiv 0698  
                             _ADRES 001E                     ___awdiv@divisor 0053  
                             _T1CON 0010                     __end_of___lwdiv 0725  
                             i1l433 0F70                     ___awdiv@counter 0057  
                             _TMR1H 000F                               _TMR1L 000E  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _WPUB1 04A9             __end_of_Timeout_Counter 0F3B  
                             _Light 0035                 ??_setLights_Trigger 0054  
                  __end_of_PIR_Main 021B                    __end_of_TMR1_ISR 0F65  
                  __end_of_TMR1_Set 0ED7                               _getAD 0FE4  
    getLights_Allow_Condition@allow 0074                    __end_of_WDT_Main 0F27  
                     _LightsControl 0078                      __CFG_BOREN$OFF 0000  
                             pclath 000A                               ltemp0 007E  
                             ltemp1 0082                               ltemp2 0086  
                             ltemp3 0080      __size_of_setLED_Initialization 0012  
     __end_of_setLED_Initialization 07FF                               ttemp0 007E  
                             ttemp1 0081                               ttemp2 0084  
                             ttemp3 0087                               ttemp4 007F  
                             status 0003                               wtemp0 007E  
                             wtemp1 0080                               wtemp2 0082  
                             wtemp3 0084                               wtemp4 0086  
                             wtemp5 0088                               wtemp6 007F  
                 getPIR_AD@channel1 0060                   getPIR_AD@channel2 005B  
                    _setLights_Main 0793                     __initialization 0013  
         __end_of_setLights_Trigger 0FE4                        __end_of_main 06E5  
                  __end_of_Fosc_Set 0E4F                      _Exception_Main 04E3  
                         ??_ADC_Set 0074                _setSw_Initialization 0E82  
                            ??_main 0066                 __end_of_Lights_Main 0E72  
        __size_of_LightsPointSelect 000A             ??_Switch_Initialization 0076  
                            ?_getAD 0074              ?_myMain_Initialization 0070  
                            _ADCON0 001F                              _ADCON1 009F  
                  ___awdiv@dividend 0055                           ??_WDT_Set 0074  
                            _ANSELA 0185                              _ANSELB 0186  
          _getMain_All_Error_Status 0E39                              _FVRCON 009D  
            getLights_Status@lights 0053                              _PIRLED 002B  
                            _OSCCON 0090                              _TMR1IE 0460  
                            _TMR1IF 0060                              _IO_Set 0F7D  
            getLights_Status@status 0054              __end_of_setLights_Main 07C3  
        __end_of_Mcu_Initialization 0EF4                              _Lights 0077  
                            _Timer1 002F         __size_of_CDS_Initialization 0004  
           ??_Lights_Initialization 0076              __end_of_Exception_Main 0559  
              Exception_Main@lights 0057                           ??___awdiv 0074  
                         ??___lwdiv 0074                Exception_Main@status 0059  
                            _setLED 05CA                              _myMain 0020  
             ?_setSw_Initialization 0070                    ___awdiv@quotient 0059  
   getLights_Allow_Condition@lights 0070                              saved_w 007E  
                  ?_Timeout_Counter 0070               __end_of_SwPointSelect 0EB2  
                    _Lights_Control 0460             __size_of_LedPointSelect 001A  
                         ?_CDS_Main 0070         __size_of_PIR_Initialization 000B  
                        _TouchPower 0F3B             __end_of__initialization 0023  
                         ?_LED_Main 0070                       ?_my_MainTimer 0070  
                   ?_setLights_Main 0070          __size_of_setLights_Trigger 001B  
                    __pcstackCOMMON 0070                  __size_of_getCDS_AD 002A  
                   ?_Exception_Main 0070            __end_of_getLights_Status 0F16  
                     __end_of_getAD 1000                           ?_PIR_Main 0070  
                         ?_TMR1_ISR 0070                           ?_TMR1_Set 0070  
                _LED_Initialization 0EBD                     _getSw_KeyStatus 0E8B  
                __size_of_getPIR_AD 0138                         _Lights_Main 0E6A  
          _setLights_Initialization 0E55                           ?_WDT_Main 0070  
        __end_of_set_TimeoutCleared 0E55                 ?_LED_Initialization 0070  
            __end_of_Lights_Control 04E3                             ??_getAD 0075  
                        ??_CDS_Main 0053                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                           ?_Fosc_Set 0070  
       __size_of_getAll_Lights_Line 0011                             ?_IO_Set 0070  
                   __CFG_VCAPEN$DIS 0000                      ??_my_MainTimer 0074  
                        ??_LED_Main 0076                       ??_Switch_Main 0076  
              ??_LED_Initialization 0076                   LedPointSelect@led 0075  
                        __pmaintext 0698          ?_getLights_Allow_Condition 0070  
              PIR_Main@LightsStatus 005F                          ??_PIR_Main 0056  
                        ??_TMR1_ISR 0070                  __size_of_setLights 003A  
                        ??_TMR1_Set 0074                          __pintentry 0004  
            ??_setSw_Initialization 0076                             ?_setLED 0053  
           setLights_Trigger@lights 0055                             _ADC_Set 0E5C  
                        ??_WDT_Main 0074              __size_of_getCDS_Status 0008  
                   ?_Lights_Control 0070                   __end_of_getCDS_AD 07ED  
                           _WDT_Set 0ED7                          ??_Fosc_Set 0074  
                       ?_TouchPower 0070                   __end_of_getPIR_AD 0353  
                   __size_of_IO_Set 0018                          getCDS_AD@i 0056  
                        getCDS_AD@j 0057                             _Lights1 0040  
                           _VarLED1 004B                             _VarLED2 004F  
           __end_of_getSw_KeyStatus 0E94                             ___awdiv 063B  
               __end_of_Switch_Main 0E6A                             ___lwdiv 06E5  
                       PIR_Main@cds 005E                     __size_of_setLED 0071  
                           __ptext0 0000                             __ptext1 0FAF  
                           __ptext2 07FF                             __ptext3 021B  
                           __ptext4 06E5                             __ptext5 07C3  
                           __ptext6 0FE4                             __ptext7 0F16  
                           __ptext8 0002                             __ptext9 0E63  
                        getPIR_AD@i 0061                          getPIR_AD@j 005F  
                      __size_of_ISR 0018          ??_getMain_All_Error_Status 0074  
           ??_myMain_Initialization 0074                      _LedPointSelect 0F95  
                           clrloop0 0E7B      __size_of_Switch_Initialization 000A  
     __end_of_Switch_Initialization 0EA8                   __end_of_setLights 075F  
              end_of_initialization 0023                          _setSw_Main 0353  
                     _getCDS_Status 0E72               _setLED_Initialization 07ED  
    __size_of_Lights_Initialization 0004       __end_of_Lights_Initialization 0E4A  
               __size_of_TouchPower 0014            setLED_Initialization@led 0055  
            setSw_Initialization@sw 0055                  _Mcu_Initialization 0EE5  
              __end_of_my_MainTimer 0FC9              __end_of_LedPointSelect 0FAF  
               setPIRLED_Main@count 0056                 ?_Mcu_Initialization 0070  
           __size_of_setPIRLED_Main 0071                    ??_setLights_Main 0076  
              setLights_Main@lights 0054     getMain_All_Error_Status@command 0070  
                 __size_of_CDS_Main 0034                      ?_getCDS_Status 0070  
                  ??_Exception_Main 0056                      __end_of_IO_Set 0F95  
        __end_of_CDS_Initialization 0E46                         _Switch_Main 0E63  
        ??_setLights_Initialization 0076                   __size_of_LED_Main 0003  
                  ?_getSw_KeyStatus 0070                ??_Mcu_Initialization 0075  
                     ?_WDT_Clearing 0070                   ?_getLights_Status 0070  
                      ?_Lights_Main 0070                   getSw_KeyStatus@sw 0070  
                 __size_of_PIR_Main 01F5                   __size_of_TMR1_ISR 0016  
                ??_getLights_Status 0076                   __size_of_TMR1_Set 000E  
                    __end_of_setLED 063B                   __size_of_WDT_Main 0011  
               start_initialization 0013                     ?_LedPointSelect 0070  
                       __end_of_ISR 0F7D          __end_of_PIR_Initialization 0EBD  
               getCDS_Status@status 0074                  _set_TimeoutCleared 0E4F  
                          ??_IO_Set 0074            __size_of_Timeout_Counter 0014  
                         _VarErrLED 0047                         ?_setSw_Main 0070  
            ?_setLED_Initialization 0070                   __size_of_Fosc_Set 0005  
                   setLights@lights 0053                 ?_set_TimeoutCleared 0070  
                    ??_WDT_Clearing 0074         ??_getLights_Allow_Condition 0074  
               Exception_Main@count 0058                     setLights@status 0074  
               Exception_Main@error 005C              __size_of_SwPointSelect 000A  
                          ??_setLED 0076                            ?_ADC_Set 0070  
                  ??_Lights_Control 005B    __end_of_getMain_All_Error_Status 0E3C  
                       __pbssCOMMON 0076                           ___latbits 0001  
                     __pcstackBANK0 0053                ??_set_TimeoutCleared 0074  
        __end_of_getAll_Lights_Line 0F05                            ?_WDT_Set 0070  
                   ??_getCDS_Status 0074                        ??_TouchPower 0074  
                     PIR_Main@error 005B                           _getCDS_AD 07C3  
                         _getPIR_AD 021B         __size_of_LED_Initialization 000C  
                   Exception_Main@i 005A                    ___lwdiv@dividend 0055  
                     _PIR_Main$2587 005C                            ?___awdiv 0053  
             __size_of_my_MainTimer 001A                            ?___lwdiv 0053  
     __size_of_setSw_Initialization 0009                  __end_of_TouchPower 0F4F  
          setLights_Trigger@command 0053                 __size_of_setSw_Main 010D  
         _getLights_Allow_Condition 0E3F      __size_of_myMain_Initialization 0001  
     __end_of_myMain_Initialization 0800                      __size_of_getAD 001C  
                  ___lwdiv@quotient 0058                       _SwPointSelect 0EA8  
                    _setPIRLED_Main 0559                            _CDS_Main 075F  
                 interrupt_function 0004                          ?_getCDS_AD 0053  
                          _LED_Main 0E3C                           _setLights 0725  
                   SwPointSelect@sw 0075                           clear_ram0 0E7A  
  __end_of_setLights_Initialization 0E5C                        _my_MainTimer 0FAF  
                        ?_getPIR_AD 005B                            _GO_nDONE 00F9  
                 ??_Timeout_Counter 0074                            _PIR_Main 0026  
                          _TMR1_ISR 0F4F                            _TMR1_Set 0EC9  
                          _WDT_Main 0F16               getSw_KeyStatus@status 0074  
                  __size_of_ADC_Set 0007                __size_of_Lights_Main 0008  
                      setSw_Main@sw 0055              __end_of_setPIRLED_Main 05CA  
    getMain_All_Error_Status@status 0074                      ?_SwPointSelect 0070  
                       getAD@adcon0 0075                         getAD@adcon1 0074  
              __end_of_WDT_Clearing 0004                            _Fosc_Set 0E4A  
                  __size_of_WDT_Set 000E               _Switch_Initialization 0E9E  
 __size_of_getMain_All_Error_Status 0003           ?_getMain_All_Error_Status 0070  
                        ?_setLights 0074                        ?_Switch_Main 0070  
                          _SwDetect 0036                           setLED@led 0054  
                  __size_of___awdiv 005D                    __size_of___lwdiv 0040  
                  ??_LedPointSelect 0074                  _CDS_Initialization 0E42  
             _Lights_Initialization 0E46                     ?_setPIRLED_Main 0070  
                   ___lwdiv@divisor 0053                 ?_CDS_Initialization 0070  
                   ___lwdiv@counter 0057                            __ptext10 0353  
                          __ptext11 0E8B                            __ptext20 0EB2  
                          __ptext12 0EA8                            __ptext21 0EE5  
                          __ptext13 0E9E                            __ptext30 0E3F  
                          __ptext22 0ED7                            __ptext14 0E82  
                          __ptext31 0460                            __ptext23 0EC9  
                          __ptext15 0F3B                            __ptext40 0FC9  
                          __ptext32 063B                            __ptext24 0F7D  
                          __ptext16 0E4F                            __ptext41 05CA  
                          __ptext33 0E46                            __ptext25 0E4A  
                          __ptext17 0F27                            __ptext50 0F4F  
                          __ptext42 0F95                            __ptext34 0E55  
                          __ptext26 0E5C                            __ptext18 0026  
                          __ptext43 0E39                            __ptext35 0E3C  
                          __ptext27 0E6A                            __ptext19 0E72  
                          __ptext44 0F05                            __ptext36 0559  
                          __ptext28 0793                            __ptext45 0EF4  
                          __ptext37 0EBD                            __ptext29 0725  
                          __ptext46 0E94                            __ptext38 07ED  
                          __ptext47 075F                            __ptext39 04E3  
                          __ptext48 0E42                            __ptext49 0F65  
         __size_of_getLights_Status 0011             ??_setLED_Initialization 0076  
                       ??_getCDS_AD 0054                        ??_setSw_Main 0053  
                     setLED@command 0053                       __size_of_main 004D  
                       ??_getPIR_AD 005C                  _PIR_Initialization 0EB2  
              ??_CDS_Initialization 0074         __size_of_Mcu_Initialization 000F  
               ?_PIR_Initialization 0070                            main@argc 0062  
                          main@argv 0064            __size_of_getSw_KeyStatus 0009  
 __size_of_setLights_Initialization 0007           ?_setLights_Initialization 0070  
                   ??_SwPointSelect 0074                  __end_of_setSw_Main 0460  
              Lights_Control@lights 005D                ??_PIR_Initialization 0074  
                          intlevel1 0000              ?_Switch_Initialization 0070  
__size_of_getLights_Allow_Condition 0003                         ??_setLights 0075  
           LightsPointSelect@lights 0075                  _getAll_Lights_Line 0EF4  
           __size_of_setLights_Main 0030                 ?_getAll_Lights_Line 0070  
            ?_Lights_Initialization 0070             __size_of_Exception_Main 0076  
             __size_of_WDT_Clearing 0002      setLights_Initialization@lights 0053  
       __size_of_set_TimeoutCleared 0006                   _LightsPointSelect 0E94  
              ??_getAll_Lights_Line 0076                  __CFG_FOSC$INTOSCIO 0000  
      __end_of_setSw_Initialization 0E8B                  ?_LightsPointSelect 0070  
                   _Timeout_Counter 0F27          __end_of_LED_Initialization 0EC9  
             __end_of_getCDS_Status 0E7A                   getCDS_AD@channel1 0058  
                 getCDS_AD@channel2 0053   __end_of_getLights_Allow_Condition 0E42  
               ??_LightsPointSelect 0074  
