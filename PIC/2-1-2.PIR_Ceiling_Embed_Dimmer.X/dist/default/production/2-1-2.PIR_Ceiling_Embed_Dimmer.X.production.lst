

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Jan 19 11:31:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	text45,local,class=CODE,merge=1,delta=2
    59                           	psect	text46,local,class=CODE,merge=1,delta=2
    60                           	psect	text47,local,class=CODE,merge=1,delta=2
    61                           	psect	text48,local,class=CODE,merge=1,delta=2
    62                           	psect	text49,local,class=CODE,merge=1,delta=2
    63                           	psect	text50,local,class=CODE,merge=1,delta=2
    64                           	psect	text51,local,class=CODE,merge=1,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,delta=2
    68                           	psect	text55,local,class=CODE,merge=1,delta=2
    69                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text58,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009F                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0186                     	;# 
   145  018C                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0096                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009F                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0186                     	;# 
   214  018C                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0096                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009F                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0186                     	;# 
   283  018C                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0095                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0096                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009F                     	;# 
   342  0108                     	;# 
   343  0109                     	;# 
   344  010C                     	;# 
   345  010C                     	;# 
   346  010D                     	;# 
   347  010D                     	;# 
   348  010E                     	;# 
   349  010F                     	;# 
   350  0185                     	;# 
   351  0186                     	;# 
   352  018C                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0009                     	;# 
   362  000A                     	;# 
   363  000B                     	;# 
   364  000C                     	;# 
   365  000D                     	;# 
   366  000E                     	;# 
   367  000E                     	;# 
   368  000F                     	;# 
   369  0010                     	;# 
   370  0011                     	;# 
   371  0012                     	;# 
   372  0013                     	;# 
   373  0014                     	;# 
   374  0015                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0017                     	;# 
   378  0018                     	;# 
   379  0019                     	;# 
   380  001A                     	;# 
   381  001B                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  001D                     	;# 
   385  001E                     	;# 
   386  001F                     	;# 
   387  0081                     	;# 
   388  0085                     	;# 
   389  0086                     	;# 
   390  0087                     	;# 
   391  0089                     	;# 
   392  008C                     	;# 
   393  008D                     	;# 
   394  008E                     	;# 
   395  008F                     	;# 
   396  0090                     	;# 
   397  0091                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0095                     	;# 
   403  0095                     	;# 
   404  0096                     	;# 
   405  0096                     	;# 
   406  0098                     	;# 
   407  0099                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009F                     	;# 
   411  0108                     	;# 
   412  0109                     	;# 
   413  010C                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  0185                     	;# 
   420  0186                     	;# 
   421  018C                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0089                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  008F                     	;# 
   465  0090                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0093                     	;# 
   469  0093                     	;# 
   470  0094                     	;# 
   471  0095                     	;# 
   472  0095                     	;# 
   473  0096                     	;# 
   474  0096                     	;# 
   475  0098                     	;# 
   476  0099                     	;# 
   477  009C                     	;# 
   478  009D                     	;# 
   479  009F                     	;# 
   480  0108                     	;# 
   481  0109                     	;# 
   482  010C                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010D                     	;# 
   486  010E                     	;# 
   487  010F                     	;# 
   488  0185                     	;# 
   489  0186                     	;# 
   490  018C                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0096                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009F                     	;# 
   549  0108                     	;# 
   550  0109                     	;# 
   551  010C                     	;# 
   552  010C                     	;# 
   553  010D                     	;# 
   554  010D                     	;# 
   555  010E                     	;# 
   556  010F                     	;# 
   557  0185                     	;# 
   558  0186                     	;# 
   559  018C                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0009                     	;# 
   569  000A                     	;# 
   570  000B                     	;# 
   571  000C                     	;# 
   572  000D                     	;# 
   573  000E                     	;# 
   574  000E                     	;# 
   575  000F                     	;# 
   576  0010                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001D                     	;# 
   592  001E                     	;# 
   593  001F                     	;# 
   594  0081                     	;# 
   595  0085                     	;# 
   596  0086                     	;# 
   597  0087                     	;# 
   598  0089                     	;# 
   599  008C                     	;# 
   600  008D                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0096                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009F                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0185                     	;# 
   627  0186                     	;# 
   628  018C                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  000E                     	;# 
   644  000F                     	;# 
   645  0010                     	;# 
   646  0011                     	;# 
   647  0012                     	;# 
   648  0013                     	;# 
   649  0014                     	;# 
   650  0015                     	;# 
   651  0015                     	;# 
   652  0016                     	;# 
   653  0017                     	;# 
   654  0018                     	;# 
   655  0019                     	;# 
   656  001A                     	;# 
   657  001B                     	;# 
   658  001B                     	;# 
   659  001C                     	;# 
   660  001D                     	;# 
   661  001E                     	;# 
   662  001F                     	;# 
   663  0081                     	;# 
   664  0085                     	;# 
   665  0086                     	;# 
   666  0087                     	;# 
   667  0089                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  008F                     	;# 
   672  0090                     	;# 
   673  0091                     	;# 
   674  0092                     	;# 
   675  0093                     	;# 
   676  0093                     	;# 
   677  0094                     	;# 
   678  0095                     	;# 
   679  0095                     	;# 
   680  0096                     	;# 
   681  0096                     	;# 
   682  0098                     	;# 
   683  0099                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009F                     	;# 
   687  0108                     	;# 
   688  0109                     	;# 
   689  010C                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010D                     	;# 
   693  010E                     	;# 
   694  010F                     	;# 
   695  0185                     	;# 
   696  0186                     	;# 
   697  018C                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  000D                     	;# 
   711  000E                     	;# 
   712  000E                     	;# 
   713  000F                     	;# 
   714  0010                     	;# 
   715  0011                     	;# 
   716  0012                     	;# 
   717  0013                     	;# 
   718  0014                     	;# 
   719  0015                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0017                     	;# 
   723  0018                     	;# 
   724  0019                     	;# 
   725  001A                     	;# 
   726  001B                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001D                     	;# 
   730  001E                     	;# 
   731  001F                     	;# 
   732  0081                     	;# 
   733  0085                     	;# 
   734  0086                     	;# 
   735  0087                     	;# 
   736  0089                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  008F                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0093                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0095                     	;# 
   749  0096                     	;# 
   750  0096                     	;# 
   751  0098                     	;# 
   752  0099                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009F                     	;# 
   756  0108                     	;# 
   757  0109                     	;# 
   758  010C                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  010D                     	;# 
   762  010E                     	;# 
   763  010F                     	;# 
   764  0185                     	;# 
   765  0186                     	;# 
   766  018C                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  000E                     	;# 
   782  000F                     	;# 
   783  0010                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0013                     	;# 
   787  0014                     	;# 
   788  0015                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0017                     	;# 
   792  0018                     	;# 
   793  0019                     	;# 
   794  001A                     	;# 
   795  001B                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001D                     	;# 
   799  001E                     	;# 
   800  001F                     	;# 
   801  0081                     	;# 
   802  0085                     	;# 
   803  0086                     	;# 
   804  0087                     	;# 
   805  0089                     	;# 
   806  008C                     	;# 
   807  008D                     	;# 
   808  008E                     	;# 
   809  008F                     	;# 
   810  0090                     	;# 
   811  0091                     	;# 
   812  0092                     	;# 
   813  0093                     	;# 
   814  0093                     	;# 
   815  0094                     	;# 
   816  0095                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0096                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009C                     	;# 
   823  009D                     	;# 
   824  009F                     	;# 
   825  0108                     	;# 
   826  0109                     	;# 
   827  010C                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  010F                     	;# 
   833  0185                     	;# 
   834  0186                     	;# 
   835  018C                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0009                     	;# 
   845  000A                     	;# 
   846  000B                     	;# 
   847  000C                     	;# 
   848  000D                     	;# 
   849  000E                     	;# 
   850  000E                     	;# 
   851  000F                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0013                     	;# 
   856  0014                     	;# 
   857  0015                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0017                     	;# 
   861  0018                     	;# 
   862  0019                     	;# 
   863  001A                     	;# 
   864  001B                     	;# 
   865  001B                     	;# 
   866  001C                     	;# 
   867  001D                     	;# 
   868  001E                     	;# 
   869  001F                     	;# 
   870  0081                     	;# 
   871  0085                     	;# 
   872  0086                     	;# 
   873  0087                     	;# 
   874  0089                     	;# 
   875  008C                     	;# 
   876  008D                     	;# 
   877  008E                     	;# 
   878  008F                     	;# 
   879  0090                     	;# 
   880  0091                     	;# 
   881  0092                     	;# 
   882  0093                     	;# 
   883  0093                     	;# 
   884  0094                     	;# 
   885  0095                     	;# 
   886  0095                     	;# 
   887  0096                     	;# 
   888  0096                     	;# 
   889  0098                     	;# 
   890  0099                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009F                     	;# 
   894  0108                     	;# 
   895  0109                     	;# 
   896  010C                     	;# 
   897  010C                     	;# 
   898  010D                     	;# 
   899  010D                     	;# 
   900  010E                     	;# 
   901  010F                     	;# 
   902  0185                     	;# 
   903  0186                     	;# 
   904  018C                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  000E                     	;# 
   919  000E                     	;# 
   920  000F                     	;# 
   921  0010                     	;# 
   922  0011                     	;# 
   923  0012                     	;# 
   924  0013                     	;# 
   925  0014                     	;# 
   926  0015                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0017                     	;# 
   930  0018                     	;# 
   931  0019                     	;# 
   932  001A                     	;# 
   933  001B                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  001D                     	;# 
   937  001E                     	;# 
   938  001F                     	;# 
   939  0081                     	;# 
   940  0085                     	;# 
   941  0086                     	;# 
   942  0087                     	;# 
   943  0089                     	;# 
   944  008C                     	;# 
   945  008D                     	;# 
   946  008E                     	;# 
   947  008F                     	;# 
   948  0090                     	;# 
   949  0091                     	;# 
   950  0092                     	;# 
   951  0093                     	;# 
   952  0093                     	;# 
   953  0094                     	;# 
   954  0095                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0096                     	;# 
   958  0098                     	;# 
   959  0099                     	;# 
   960  009C                     	;# 
   961  009D                     	;# 
   962  009F                     	;# 
   963  0108                     	;# 
   964  0109                     	;# 
   965  010C                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010D                     	;# 
   969  010E                     	;# 
   970  010F                     	;# 
   971  0185                     	;# 
   972  0186                     	;# 
   973  018C                     	;# 
   974  0000                     	;# 
   975  0001                     	;# 
   976  0002                     	;# 
   977  0003                     	;# 
   978  0004                     	;# 
   979  0005                     	;# 
   980  0006                     	;# 
   981  0007                     	;# 
   982  0009                     	;# 
   983  000A                     	;# 
   984  000B                     	;# 
   985  000C                     	;# 
   986  000D                     	;# 
   987  000E                     	;# 
   988  000E                     	;# 
   989  000F                     	;# 
   990  0010                     	;# 
   991  0011                     	;# 
   992  0012                     	;# 
   993  0013                     	;# 
   994  0014                     	;# 
   995  0015                     	;# 
   996  0015                     	;# 
   997  0016                     	;# 
   998  0017                     	;# 
   999  0018                     	;# 
  1000  0019                     	;# 
  1001  001A                     	;# 
  1002  001B                     	;# 
  1003  001B                     	;# 
  1004  001C                     	;# 
  1005  001D                     	;# 
  1006  001E                     	;# 
  1007  001F                     	;# 
  1008  0081                     	;# 
  1009  0085                     	;# 
  1010  0086                     	;# 
  1011  0087                     	;# 
  1012  0089                     	;# 
  1013  008C                     	;# 
  1014  008D                     	;# 
  1015  008E                     	;# 
  1016  008F                     	;# 
  1017  0090                     	;# 
  1018  0091                     	;# 
  1019  0092                     	;# 
  1020  0093                     	;# 
  1021  0093                     	;# 
  1022  0094                     	;# 
  1023  0095                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0096                     	;# 
  1027  0098                     	;# 
  1028  0099                     	;# 
  1029  009C                     	;# 
  1030  009D                     	;# 
  1031  009F                     	;# 
  1032  0108                     	;# 
  1033  0109                     	;# 
  1034  010C                     	;# 
  1035  010C                     	;# 
  1036  010D                     	;# 
  1037  010D                     	;# 
  1038  010E                     	;# 
  1039  010F                     	;# 
  1040  0185                     	;# 
  1041  0186                     	;# 
  1042  018C                     	;# 
  1043  0000                     	;# 
  1044  0001                     	;# 
  1045  0002                     	;# 
  1046  0003                     	;# 
  1047  0004                     	;# 
  1048  0005                     	;# 
  1049  0006                     	;# 
  1050  0007                     	;# 
  1051  0009                     	;# 
  1052  000A                     	;# 
  1053  000B                     	;# 
  1054  000C                     	;# 
  1055  000D                     	;# 
  1056  000E                     	;# 
  1057  000E                     	;# 
  1058  000F                     	;# 
  1059  0010                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0013                     	;# 
  1063  0014                     	;# 
  1064  0015                     	;# 
  1065  0015                     	;# 
  1066  0016                     	;# 
  1067  0017                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  001B                     	;# 
  1072  001B                     	;# 
  1073  001C                     	;# 
  1074  001D                     	;# 
  1075  001E                     	;# 
  1076  001F                     	;# 
  1077  0081                     	;# 
  1078  0085                     	;# 
  1079  0086                     	;# 
  1080  0087                     	;# 
  1081  0089                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  008F                     	;# 
  1086  0090                     	;# 
  1087  0091                     	;# 
  1088  0092                     	;# 
  1089  0093                     	;# 
  1090  0093                     	;# 
  1091  0094                     	;# 
  1092  0095                     	;# 
  1093  0095                     	;# 
  1094  0096                     	;# 
  1095  0096                     	;# 
  1096  0098                     	;# 
  1097  0099                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009F                     	;# 
  1101  0108                     	;# 
  1102  0109                     	;# 
  1103  010C                     	;# 
  1104  010C                     	;# 
  1105  010D                     	;# 
  1106  010D                     	;# 
  1107  010E                     	;# 
  1108  010F                     	;# 
  1109  0185                     	;# 
  1110  0186                     	;# 
  1111  018C                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  000D                     	;# 
  1125  000E                     	;# 
  1126  000E                     	;# 
  1127  000F                     	;# 
  1128  0010                     	;# 
  1129  0011                     	;# 
  1130  0012                     	;# 
  1131  0013                     	;# 
  1132  0014                     	;# 
  1133  0015                     	;# 
  1134  0015                     	;# 
  1135  0016                     	;# 
  1136  0017                     	;# 
  1137  0018                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  001B                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  001D                     	;# 
  1144  001E                     	;# 
  1145  001F                     	;# 
  1146  0081                     	;# 
  1147  0085                     	;# 
  1148  0086                     	;# 
  1149  0087                     	;# 
  1150  0089                     	;# 
  1151  008C                     	;# 
  1152  008D                     	;# 
  1153  008E                     	;# 
  1154  008F                     	;# 
  1155  0090                     	;# 
  1156  0091                     	;# 
  1157  0092                     	;# 
  1158  0093                     	;# 
  1159  0093                     	;# 
  1160  0094                     	;# 
  1161  0095                     	;# 
  1162  0095                     	;# 
  1163  0096                     	;# 
  1164  0096                     	;# 
  1165  0098                     	;# 
  1166  0099                     	;# 
  1167  009C                     	;# 
  1168  009D                     	;# 
  1169  009F                     	;# 
  1170  0108                     	;# 
  1171  0109                     	;# 
  1172  010C                     	;# 
  1173  010C                     	;# 
  1174  010D                     	;# 
  1175  010D                     	;# 
  1176  010E                     	;# 
  1177  010F                     	;# 
  1178  0185                     	;# 
  1179  0186                     	;# 
  1180  018C                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000D                     	;# 
  1194  000E                     	;# 
  1195  000E                     	;# 
  1196  000F                     	;# 
  1197  0010                     	;# 
  1198  0011                     	;# 
  1199  0012                     	;# 
  1200  0013                     	;# 
  1201  0014                     	;# 
  1202  0015                     	;# 
  1203  0015                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001B                     	;# 
  1211  001C                     	;# 
  1212  001D                     	;# 
  1213  001E                     	;# 
  1214  001F                     	;# 
  1215  0081                     	;# 
  1216  0085                     	;# 
  1217  0086                     	;# 
  1218  0087                     	;# 
  1219  0089                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  008F                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0093                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0096                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009F                     	;# 
  1239  0108                     	;# 
  1240  0109                     	;# 
  1241  010C                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010D                     	;# 
  1245  010E                     	;# 
  1246  010F                     	;# 
  1247  0185                     	;# 
  1248  0186                     	;# 
  1249  018C                     	;# 
  1250  0000                     	;# 
  1251  0001                     	;# 
  1252  0002                     	;# 
  1253  0003                     	;# 
  1254  0004                     	;# 
  1255  0005                     	;# 
  1256  0006                     	;# 
  1257  0007                     	;# 
  1258  0009                     	;# 
  1259  000A                     	;# 
  1260  000B                     	;# 
  1261  000C                     	;# 
  1262  000D                     	;# 
  1263  000E                     	;# 
  1264  000E                     	;# 
  1265  000F                     	;# 
  1266  0010                     	;# 
  1267  0011                     	;# 
  1268  0012                     	;# 
  1269  0013                     	;# 
  1270  0014                     	;# 
  1271  0015                     	;# 
  1272  0015                     	;# 
  1273  0016                     	;# 
  1274  0017                     	;# 
  1275  0018                     	;# 
  1276  0019                     	;# 
  1277  001A                     	;# 
  1278  001B                     	;# 
  1279  001B                     	;# 
  1280  001C                     	;# 
  1281  001D                     	;# 
  1282  001E                     	;# 
  1283  001F                     	;# 
  1284  0081                     	;# 
  1285  0085                     	;# 
  1286  0086                     	;# 
  1287  0087                     	;# 
  1288  0089                     	;# 
  1289  008C                     	;# 
  1290  008D                     	;# 
  1291  008E                     	;# 
  1292  008F                     	;# 
  1293  0090                     	;# 
  1294  0091                     	;# 
  1295  0092                     	;# 
  1296  0093                     	;# 
  1297  0093                     	;# 
  1298  0094                     	;# 
  1299  0095                     	;# 
  1300  0095                     	;# 
  1301  0096                     	;# 
  1302  0096                     	;# 
  1303  0098                     	;# 
  1304  0099                     	;# 
  1305  009C                     	;# 
  1306  009D                     	;# 
  1307  009F                     	;# 
  1308  0108                     	;# 
  1309  0109                     	;# 
  1310  010C                     	;# 
  1311  010C                     	;# 
  1312  010D                     	;# 
  1313  010D                     	;# 
  1314  010E                     	;# 
  1315  010F                     	;# 
  1316  0185                     	;# 
  1317  0186                     	;# 
  1318  018C                     	;# 
  1319  001F                     _ADCON0	set	31
  1320  001E                     _ADRES	set	30
  1321  0005                     _PORTA	set	5
  1322  0006                     _PORTB	set	6
  1323  0007                     _PORTC	set	7
  1324  0010                     _T1CON	set	16
  1325  000F                     _TMR1H	set	15
  1326  000E                     _TMR1L	set	14
  1327  005F                     _GIE	set	95
  1328  00F9                     _GO_nDONE	set	249
  1329  005E                     _PEIE	set	94
  1330  002F                     _RA7	set	47
  1331  0032                     _RB2	set	50
  1332  0033                     _RB3	set	51
  1333  0034                     _RB4	set	52
  1334  0035                     _RB5	set	53
  1335  0060                     _TMR1IF	set	96
  1336  009F                     _ADCON1	set	159
  1337  009D                     _FVRCON	set	157
  1338  0090                     _OSCCON	set	144
  1339  0085                     _TRISA	set	133
  1340  0086                     _TRISB	set	134
  1341  0087                     _TRISC	set	135
  1342  0095                     _WPUB	set	149
  1343  0408                     _PS0	set	1032
  1344  0409                     _PS1	set	1033
  1345  040A                     _PS2	set	1034
  1346  040B                     _PSA	set	1035
  1347  0460                     _TMR1IE	set	1120
  1348  0185                     _ANSELA	set	389
  1349  0186                     _ANSELB	set	390
  1350                           
  1351                           	psect	text0
  1352  0000                     __ptext0:	
  1353                           ; #config settings
  1354                           
  1355                           
  1356                           ;psect for function _DimmerLights_IOC_1
  1357  0000                     
  1358                           	psect	cinit
  1359  0013                     start_initialization:	
  1360  0013                     __initialization:	
  1361                           
  1362                           ; Clear objects allocated to COMMON
  1363  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1364  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1365  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1366  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1367  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1368                           
  1369                           ; Clear objects allocated to BANK0
  1370  0018  1383               	bcf	3,7	;select IRP bank0
  1371  0019  3020               	movlw	low __pbssBANK0
  1372  001A  0084               	movwf	4
  1373  001B  305A               	movlw	low (__pbssBANK0+58)
  1374  001C  158A  25BA  118A   	fcall	clear_ram0
  1375                           
  1376                           ; Clear objects allocated to BANK1
  1377  001F  30A0               	movlw	low __pbssBANK1
  1378  0020  0084               	movwf	4
  1379  0021  30CA               	movlw	low (__pbssBANK1+42)
  1380  0022  158A  25BA         	fcall	clear_ram0
  1381  0024                     end_of_initialization:	
  1382                           ;End of C runtime variable initialization code
  1383                           
  1384  0024                     __end_of__initialization:	
  1385  0024  0183               	clrf	3
  1386  0025  118A  2DE8         	ljmp	_main	;jump to C main() function
  1387                           
  1388                           	psect	bssCOMMON
  1389  0070                     __pbssCOMMON:	
  1390  0070                     _Cmd:	
  1391  0070                     	ds	1
  1392  0071                     _DimmerIntr:	
  1393  0071                     	ds	1
  1394  0072                     _DimmerLights:	
  1395  0072                     	ds	1
  1396  0073                     _LED:	
  1397  0073                     	ds	1
  1398  0074                     _SwDetect:	
  1399  0074                     	ds	1
  1400                           
  1401                           	psect	bssBANK0
  1402  0020                     __pbssBANK0:	
  1403  0020                     _DimmerIntr1:	
  1404  0020                     	ds	7
  1405  0027                     _Dimmer:	
  1406  0027                     	ds	5
  1407  002C                     _myMain:	
  1408  002C                     	ds	5
  1409  0031                     _PIRLED:	
  1410  0031                     	ds	4
  1411  0035                     __CDS:	
  1412  0035                     	ds	4
  1413  0039                     _Timer1:	
  1414  0039                     	ds	3
  1415  003C                     _WDT:	
  1416  003C                     	ds	2
  1417  003E                     _Light:	
  1418  003E                     	ds	1
  1419  003F                     _DimmerLights1:	
  1420  003F                     	ds	8
  1421  0047                     _Temp:	
  1422  0047                     	ds	7
  1423  004E                     _VarErrLED:	
  1424  004E                     	ds	4
  1425  0052                     _VarLED1:	
  1426  0052                     	ds	4
  1427  0056                     _VarLED2:	
  1428  0056                     	ds	4
  1429                           
  1430                           	psect	bssBANK1
  1431  00A0                     __pbssBANK1:	
  1432  00A0                     __PIR:	
  1433  00A0                     	ds	42
  1434                           
  1435                           	psect	clrtext
  1436  0DBA                     clear_ram0:	
  1437                           ;	Called with FSR containing the base address, and
  1438                           ;	W with the last address+1
  1439                           
  1440  0DBA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1441  0DBB                     clrloop0:	
  1442  0DBB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1443  0DBC  0A84               	incf	4,f	;increment pointer
  1444  0DBD  0604               	xorwf	4,w	;XOR with final address
  1445  0DBE  1903               	btfsc	3,2	;have we reached the end yet?
  1446  0DBF  3400               	retlw	0	;all done for this memory range, return
  1447  0DC0  0604               	xorwf	4,w	;XOR again to restore value
  1448  0DC1  2DBB               	goto	clrloop0	;do the next byte
  1449                           
  1450                           	psect	cstackBANK1
  1451  00CA                     __pcstackBANK1:	
  1452  00CA                     ??_main:	
  1453                           
  1454                           ; 0 bytes @ 0x0
  1455  00CA                     	ds	1
  1456                           
  1457                           	psect	cstackCOMMON
  1458  0075                     __pcstackCOMMON:	
  1459  0075                     ?_setDimmerLights_Initialization:	
  1460  0075                     ?_setDimmerLights_Main:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0075                     ?_DimmerLights_PIR_Control:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0075                     ?_setLED_Initialization:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0075                     ?_setPIRLED_Main:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0075                     ?_Fosc_Set:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0075                     ?_IO_Set:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0075                     ?_TMR1_Set:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0075                     ?_ADC_Set:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0075                     ?_WDT_Set:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0075                     ?_TMR1_ISR:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0075                     ?_Timeout_Counter:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0075                     ?_set_TimeoutCleared:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0075                     ?_WDT_Clearing:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0075                     ?_myMain_Initialization:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0075                     ?_Temp_Initialization:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0075                     ?_PIR_Initialization:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0075                     ?_getTemp_AD:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0075                     ?_my_MainTimer:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0075                     ?_Temp_Main:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0075                     ?_PIR_Main:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0075                     ?_Exception_Main:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0075                     ?_setTemp_Initialization:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0075                     ?_setTemp_Main:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0075                     ?_CDS_Initialization:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0075                     ?_CDS_Main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0075                     ?_DimmerIntr_Initialization:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0075                     ?_DimmerLights_SelectPointer:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0075                     ?_DimmerLights_Initialization:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0075                     ?_setDimmerLights_SwOn:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0075                     ?_setDimmerLights_SwOff:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0075                     ?_DimmerLights_Main:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0075                     ?_DimmerLights_TMR_1:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0075                     ??_DimmerLights_TMR_1:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0075                     ?_DimmerLights_IOC_1:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0075                     ??_DimmerLights_IOC_1:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0075                     ?_LedPointSelect:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0075                     ?_LED_Initialization:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0075                     ?_LED_Main:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0075                     ?_Mcu_Initialization:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0075                     ?_ISR:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0075                     ?_WDT_Main:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0075                     ?_getDimmerLights_Allow_Condition:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0075                     ?_getMain_All_LightsStatus:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0075                     ?_getCmd_Status:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0075                     ?_getCDS_Status:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0075                     ?_getDimmerIntr_DimmingValue:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0075                     ?_getDimmerLights_Status:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0075                     ?_getMain_All_Error_Status:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0075                     setDimmerLights_Initialization@lights:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0075                     getDimmerLights_Allow_Condition@lights:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x0
  1612  0075                     	ds	1
  1613  0076                     ??_TMR1_ISR:	
  1614  0076                     ??_ISR:	
  1615                           ; 0 bytes @ 0x1
  1616                           
  1617                           
  1618                           ; 0 bytes @ 0x1
  1619  0076                     	ds	4
  1620                           
  1621                           	psect	cstackBANK0
  1622  005A                     __pcstackBANK0:	
  1623  005A                     ??_setDimmerLights_Initialization:	
  1624  005A                     ??_getDimmerLights_Allow_Condition:	
  1625                           ; 0 bytes @ 0x0
  1626                           
  1627  005A                     ??_getMain_All_LightsStatus:	
  1628                           ; 0 bytes @ 0x0
  1629                           
  1630  005A                     ??_getCmd_Status:	
  1631                           ; 0 bytes @ 0x0
  1632                           
  1633  005A                     ?_setCmd_Status:	
  1634                           ; 0 bytes @ 0x0
  1635                           
  1636  005A                     ??_Fosc_Set:	
  1637                           ; 0 bytes @ 0x0
  1638                           
  1639  005A                     ??_IO_Set:	
  1640                           ; 0 bytes @ 0x0
  1641                           
  1642  005A                     ??_TMR1_Set:	
  1643                           ; 0 bytes @ 0x0
  1644                           
  1645  005A                     ??_ADC_Set:	
  1646                           ; 0 bytes @ 0x0
  1647                           
  1648  005A                     ??_WDT_Set:	
  1649                           ; 0 bytes @ 0x0
  1650                           
  1651  005A                     ??_Timeout_Counter:	
  1652                           ; 0 bytes @ 0x0
  1653                           
  1654  005A                     ??_set_TimeoutCleared:	
  1655                           ; 0 bytes @ 0x0
  1656                           
  1657  005A                     ??_WDT_Clearing:	
  1658                           ; 0 bytes @ 0x0
  1659                           
  1660  005A                     ??_myMain_Initialization:	
  1661                           ; 0 bytes @ 0x0
  1662                           
  1663  005A                     ??_Temp_Initialization:	
  1664                           ; 0 bytes @ 0x0
  1665                           
  1666  005A                     ??_PIR_Initialization:	
  1667                           ; 0 bytes @ 0x0
  1668                           
  1669  005A                     ??_my_MainTimer:	
  1670                           ; 0 bytes @ 0x0
  1671                           
  1672  005A                     ??_setTemp_Initialization:	
  1673                           ; 0 bytes @ 0x0
  1674                           
  1675  005A                     ??_CDS_Initialization:	
  1676                           ; 0 bytes @ 0x0
  1677                           
  1678  005A                     ??_CDS_Main:	
  1679                           ; 0 bytes @ 0x0
  1680                           
  1681  005A                     ??_getCDS_Status:	
  1682                           ; 0 bytes @ 0x0
  1683                           
  1684  005A                     ??_DimmerIntr_Initialization:	
  1685                           ; 0 bytes @ 0x0
  1686                           
  1687  005A                     ?_setDimmerIntr_ControlStatus:	
  1688                           ; 0 bytes @ 0x0
  1689                           
  1690  005A                     ?_setDimmerIntr_DimmingValue:	
  1691                           ; 0 bytes @ 0x0
  1692                           
  1693  005A                     ??_getDimmerIntr_DimmingValue:	
  1694                           ; 0 bytes @ 0x0
  1695                           
  1696  005A                     ?_setDimmerIntr_Dimming_Sw:	
  1697                           ; 0 bytes @ 0x0
  1698                           
  1699  005A                     ?_setDimmerIntr_Dimming_RF:	
  1700                           ; 0 bytes @ 0x0
  1701                           
  1702  005A                     ??_DimmerLights_SelectPointer:	
  1703                           ; 0 bytes @ 0x0
  1704                           
  1705  005A                     ??_LedPointSelect:	
  1706                           ; 0 bytes @ 0x0
  1707                           
  1708  005A                     ??_WDT_Main:	
  1709                           ; 0 bytes @ 0x0
  1710                           
  1711  005A                     ??_getMain_All_Error_Status:	
  1712                           ; 0 bytes @ 0x0
  1713                           
  1714  005A                     ?_getAD:	
  1715                           ; 0 bytes @ 0x0
  1716                           
  1717  005A                     ?___awdiv:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  005A                     ?___lwdiv:	
  1721                           ; 2 bytes @ 0x0
  1722                           
  1723  005A                     getCDS_Status@status:	
  1724                           ; 2 bytes @ 0x0
  1725                           
  1726  005A                     setDimmerIntr_ControlStatus@command:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  005A                     setDimmerIntr_DimmingValue@value:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  005A                     setDimmerIntr_Dimming_Sw@command:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  005A                     setDimmerIntr_Dimming_RF@command:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  005A                     getDimmerLights_Allow_Condition@allow:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  005A                     getAD@adcon1:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  005A                     getMain_All_LightsStatus@status:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  005A                     setCmd_Status@cmd:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  005A                     getCmd_Status@number:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  005A                     ___awdiv@divisor:	
  1754                           ; 1 bytes @ 0x0
  1755                           
  1756  005A                     ___lwdiv@divisor:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759                           
  1760                           ; 2 bytes @ 0x0
  1761  005A                     	ds	1
  1762  005B                     ??_getAD:	
  1763  005B                     ??_setCmd_Status:	
  1764                           ; 0 bytes @ 0x1
  1765                           
  1766  005B                     ??_setDimmerIntr_ControlStatus:	
  1767                           ; 0 bytes @ 0x1
  1768                           
  1769  005B                     ??_setDimmerIntr_DimmingValue:	
  1770                           ; 0 bytes @ 0x1
  1771                           
  1772  005B                     ??_setDimmerIntr_Dimming_Sw:	
  1773                           ; 0 bytes @ 0x1
  1774                           
  1775  005B                     ??_setDimmerIntr_Dimming_RF:	
  1776                           ; 0 bytes @ 0x1
  1777                           
  1778  005B                     ??_DimmerLights_Initialization:	
  1779                           ; 0 bytes @ 0x1
  1780                           
  1781  005B                     ??_Mcu_Initialization:	
  1782                           ; 0 bytes @ 0x1
  1783                           
  1784  005B                     getDimmerIntr_DimmingValue@lights:	
  1785                           ; 0 bytes @ 0x1
  1786                           
  1787  005B                     DimmerLights_SelectPointer@lights:	
  1788                           ; 1 bytes @ 0x1
  1789                           
  1790  005B                     LedPointSelect@led:	
  1791                           ; 1 bytes @ 0x1
  1792                           
  1793  005B                     getAD@adcon0:	
  1794                           ; 1 bytes @ 0x1
  1795                           
  1796  005B                     getMain_All_Error_Status@command:	
  1797                           ; 1 bytes @ 0x1
  1798                           
  1799  005B                     getCmd_Status@cmd:	
  1800                           ; 1 bytes @ 0x1
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x1
  1804  005B                     	ds	1
  1805  005C                     ?_setLED:	
  1806  005C                     ??_getTemp_AD:	
  1807                           ; 0 bytes @ 0x2
  1808                           
  1809  005C                     ?_getCDS_AD:	
  1810                           ; 0 bytes @ 0x2
  1811                           
  1812  005C                     ??_setDimmerLights_SwOn:	
  1813                           ; 0 bytes @ 0x2
  1814                           
  1815  005C                     ??_setDimmerLights_SwOff:	
  1816                           ; 0 bytes @ 0x2
  1817                           
  1818  005C                     ??_getDimmerLights_Status:	
  1819                           ; 0 bytes @ 0x2
  1820                           
  1821  005C                     getCDS_AD@channel2:	
  1822                           ; 0 bytes @ 0x2
  1823                           
  1824  005C                     setDimmerIntr_ControlStatus@lights:	
  1825                           ; 1 bytes @ 0x2
  1826                           
  1827  005C                     setDimmerIntr_DimmingValue@lights:	
  1828                           ; 1 bytes @ 0x2
  1829                           
  1830  005C                     getDimmerIntr_DimmingValue@value:	
  1831                           ; 1 bytes @ 0x2
  1832                           
  1833  005C                     setDimmerIntr_Dimming_Sw@lights:	
  1834                           ; 1 bytes @ 0x2
  1835                           
  1836  005C                     setDimmerIntr_Dimming_RF@lights:	
  1837                           ; 1 bytes @ 0x2
  1838                           
  1839  005C                     setDimmerLights_SwOn@sw:	
  1840                           ; 1 bytes @ 0x2
  1841                           
  1842  005C                     setDimmerLights_SwOff@sw:	
  1843                           ; 1 bytes @ 0x2
  1844                           
  1845  005C                     getDimmerLights_Status@lights:	
  1846                           ; 1 bytes @ 0x2
  1847                           
  1848  005C                     setLED@command:	
  1849                           ; 1 bytes @ 0x2
  1850                           
  1851  005C                     setCmd_Status@number:	
  1852                           ; 1 bytes @ 0x2
  1853                           
  1854  005C                     _getMain_All_Error_Status$2404:	
  1855                           ; 1 bytes @ 0x2
  1856                           
  1857  005C                     ___awdiv@dividend:	
  1858                           ; 2 bytes @ 0x2
  1859                           
  1860  005C                     ___lwdiv@dividend:	
  1861                           ; 2 bytes @ 0x2
  1862                           
  1863                           
  1864                           ; 2 bytes @ 0x2
  1865  005C                     	ds	1
  1866  005D                     ?_setDimmerLights_OnOff:	
  1867  005D                     ??_setLED:	
  1868                           ; 0 bytes @ 0x3
  1869                           
  1870  005D                     ??_getCDS_AD:	
  1871                           ; 0 bytes @ 0x3
  1872                           
  1873  005D                     ?_setDimmerIntr_MaxmumValue:	
  1874                           ; 0 bytes @ 0x3
  1875                           
  1876  005D                     setDimmerIntr_MaxmumValue@value:	
  1877                           ; 0 bytes @ 0x3
  1878                           
  1879  005D                     setDimmerLights_SwOn@idle:	
  1880                           ; 1 bytes @ 0x3
  1881                           
  1882  005D                     setDimmerLights_OnOff@command:	
  1883                           ; 1 bytes @ 0x3
  1884                           
  1885  005D                     getDimmerLights_Status@status:	
  1886                           ; 1 bytes @ 0x3
  1887                           
  1888  005D                     setLED@led:	
  1889                           ; 1 bytes @ 0x3
  1890                           
  1891                           
  1892                           ; 1 bytes @ 0x3
  1893  005D                     	ds	1
  1894  005E                     ??_setDimmerLights_OnOff:	
  1895  005E                     ??_setLED_Initialization:	
  1896                           ; 0 bytes @ 0x4
  1897                           
  1898  005E                     ??_setPIRLED_Main:	
  1899                           ; 0 bytes @ 0x4
  1900                           
  1901  005E                     ??_setDimmerIntr_MaxmumValue:	
  1902                           ; 0 bytes @ 0x4
  1903                           
  1904  005E                     ??___awdiv:	
  1905                           ; 0 bytes @ 0x4
  1906                           
  1907  005E                     ??___lwdiv:	
  1908                           ; 0 bytes @ 0x4
  1909                           
  1910  005E                     setDimmerLights_OnOff@lights:	
  1911                           ; 0 bytes @ 0x4
  1912                           
  1913  005E                     setLED_Initialization@led:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  005E                     getMain_All_Error_Status@status:	
  1917                           ; 1 bytes @ 0x4
  1918                           
  1919  005E                     getTemp_AD@channel:	
  1920                           ; 1 bytes @ 0x4
  1921                           
  1922                           
  1923                           ; 1 bytes @ 0x4
  1924  005E                     	ds	1
  1925  005F                     ??_PIR_Main:	
  1926  005F                     ??_Exception_Main:	
  1927                           ; 0 bytes @ 0x5
  1928                           
  1929  005F                     ??_setTemp_Main:	
  1930                           ; 0 bytes @ 0x5
  1931                           
  1932  005F                     ??_LED_Initialization:	
  1933                           ; 0 bytes @ 0x5
  1934                           
  1935  005F                     getCDS_AD@i:	
  1936                           ; 0 bytes @ 0x5
  1937                           
  1938  005F                     setDimmerIntr_MaxmumValue@lights:	
  1939                           ; 1 bytes @ 0x5
  1940                           
  1941  005F                     setPIRLED_Main@count:	
  1942                           ; 1 bytes @ 0x5
  1943                           
  1944  005F                     getTemp_AD@ADRES:	
  1945                           ; 1 bytes @ 0x5
  1946                           
  1947  005F                     ___awdiv@counter:	
  1948                           ; 1 bytes @ 0x5
  1949                           
  1950  005F                     ___lwdiv@counter:	
  1951                           ; 1 bytes @ 0x5
  1952                           
  1953                           
  1954                           ; 1 bytes @ 0x5
  1955  005F                     	ds	1
  1956  0060                     ??_DimmerLights_PIR_Control:	
  1957  0060                     ?_setDimmerLights_Dimming:	
  1958                           ; 0 bytes @ 0x6
  1959                           
  1960  0060                     ??_LED_Main:	
  1961                           ; 0 bytes @ 0x6
  1962                           
  1963  0060                     getCDS_AD@j:	
  1964                           ; 0 bytes @ 0x6
  1965                           
  1966  0060                     setDimmerLights_Dimming@status:	
  1967                           ; 1 bytes @ 0x6
  1968                           
  1969  0060                     Exception_Main@lights:	
  1970                           ; 1 bytes @ 0x6
  1971                           
  1972  0060                     setTemp_Main@error:	
  1973                           ; 1 bytes @ 0x6
  1974                           
  1975  0060                     ___awdiv@sign:	
  1976                           ; 1 bytes @ 0x6
  1977                           
  1978  0060                     ___lwdiv@quotient:	
  1979                           ; 1 bytes @ 0x6
  1980                           
  1981                           
  1982                           ; 2 bytes @ 0x6
  1983  0060                     	ds	1
  1984  0061                     ??_setDimmerLights_Dimming:	
  1985  0061                     getCDS_AD@channel1:	
  1986                           ; 0 bytes @ 0x7
  1987                           
  1988  0061                     Exception_Main@count:	
  1989                           ; 1 bytes @ 0x7
  1990                           
  1991  0061                     setTemp_Main@TempGO:	
  1992                           ; 1 bytes @ 0x7
  1993                           
  1994  0061                     ___awdiv@quotient:	
  1995                           ; 1 bytes @ 0x7
  1996                           
  1997                           
  1998                           ; 2 bytes @ 0x7
  1999  0061                     	ds	1
  2000  0062                     setDimmerLights_Dimming@lights:	
  2001  0062                     Exception_Main@status:	
  2002                           ; 1 bytes @ 0x8
  2003                           
  2004  0062                     setTemp_Main@SafeValue:	
  2005                           ; 1 bytes @ 0x8
  2006                           
  2007                           
  2008                           ; 1 bytes @ 0x8
  2009  0062                     	ds	1
  2010  0063                     ??_setDimmerLights_Main:	
  2011  0063                     ?_getPIR_AD:	
  2012                           ; 0 bytes @ 0x9
  2013                           
  2014  0063                     setDimmerLights_Main@lights:	
  2015                           ; 0 bytes @ 0x9
  2016                           
  2017  0063                     Exception_Main@error:	
  2018                           ; 1 bytes @ 0x9
  2019                           
  2020  0063                     setTemp_Main@DangerValue:	
  2021                           ; 1 bytes @ 0x9
  2022                           
  2023  0063                     getPIR_AD@channel2:	
  2024                           ; 1 bytes @ 0x9
  2025                           
  2026                           
  2027                           ; 1 bytes @ 0x9
  2028  0063                     	ds	1
  2029  0064                     ??_getPIR_AD:	
  2030  0064                     ??_DimmerLights_Main:	
  2031                           ; 0 bytes @ 0xA
  2032                           
  2033  0064                     setTemp_Main@AD:	
  2034                           ; 0 bytes @ 0xA
  2035                           
  2036  0064                     PIR_Main@error:	
  2037                           ; 1 bytes @ 0xA
  2038                           
  2039                           
  2040                           ; 1 bytes @ 0xA
  2041  0064                     	ds	1
  2042  0065                     ??_Temp_Main:	
  2043  0065                     PIR_Main@Enable_Switch:	
  2044                           ; 0 bytes @ 0xB
  2045                           
  2046                           
  2047                           ; 1 bytes @ 0xB
  2048  0065                     	ds	1
  2049  0066                     _PIR_Main$3118:	
  2050                           
  2051                           ; 2 bytes @ 0xC
  2052  0066                     	ds	1
  2053  0067                     getPIR_AD@j:	
  2054                           
  2055                           ; 1 bytes @ 0xD
  2056  0067                     	ds	1
  2057  0068                     PIR_Main@TriggerValue:	
  2058  0068                     getPIR_AD@channel1:	
  2059                           ; 1 bytes @ 0xE
  2060                           
  2061                           
  2062                           ; 1 bytes @ 0xE
  2063  0068                     	ds	1
  2064  0069                     PIR_Main@cds:	
  2065  0069                     getPIR_AD@VRAD1:	
  2066                           ; 1 bytes @ 0xF
  2067                           
  2068                           
  2069                           ; 1 bytes @ 0xF
  2070  0069                     	ds	1
  2071  006A                     PIR_Main@LightsStatus:	
  2072  006A                     getPIR_AD@VRAD:	
  2073                           ; 1 bytes @ 0x10
  2074                           
  2075                           
  2076                           ; 1 bytes @ 0x10
  2077  006A                     	ds	1
  2078  006B                     getPIR_AD@i:	
  2079                           
  2080                           ; 1 bytes @ 0x11
  2081  006B                     	ds	1
  2082  006C                     ?_main:	
  2083  006C                     main@argc:	
  2084                           ; 2 bytes @ 0x12
  2085                           
  2086                           
  2087                           ; 2 bytes @ 0x12
  2088  006C                     	ds	2
  2089  006E                     main@argv:	
  2090                           
  2091                           ; 2 bytes @ 0x14
  2092  006E                     	ds	2
  2093                           
  2094                           	psect	maintext
  2095  05E8                     __pmaintext:	
  2096 ;;
  2097 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2098 ;;
  2099 ;; *************** function _main *****************
  2100 ;; Defined at:
  2101 ;;		line 7 in file "../src/Main_B1.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  argc            2   18[BANK0 ] int 
  2104 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  2   18[BANK0 ] int 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 17F/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2116 ;;      Params:         0       4       0       0
  2117 ;;      Locals:         0       0       0       0
  2118 ;;      Temps:          0       0       1       0
  2119 ;;      Totals:         0       4       1       0
  2120 ;;Total ram usage:        5 bytes
  2121 ;; Hardware stack levels required when called:    7
  2122 ;; This function calls:
  2123 ;;		_CDS_Initialization
  2124 ;;		_CDS_Main
  2125 ;;		_DimmerLights_Initialization
  2126 ;;		_DimmerLights_Main
  2127 ;;		_Exception_Main
  2128 ;;		_LED_Initialization
  2129 ;;		_LED_Main
  2130 ;;		_Mcu_Initialization
  2131 ;;		_PIR_Initialization
  2132 ;;		_PIR_Main
  2133 ;;		_Temp_Initialization
  2134 ;;		_Temp_Main
  2135 ;;		_WDT_Main
  2136 ;;		_getCDS_AD
  2137 ;;		_getPIR_AD
  2138 ;;		_getTemp_AD
  2139 ;;		_myMain_Initialization
  2140 ;;		_my_MainTimer
  2141 ;; This function is called by:
  2142 ;;		Startup code after reset
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _main
  2148  05E8                     _main:	
  2149                           
  2150                           ;Main_B1.c: 8: myMain_Initialization();
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2154  05E8  158A  257F  118A   	fcall	_myMain_Initialization
  2155                           
  2156                           ;Main_B1.c: 9: Mcu_Initialization();
  2157  05EB  158A  2632  118A   	fcall	_Mcu_Initialization
  2158                           
  2159                           ;Main_B1.c: 10: ;;
  2160                           ;Main_B1.c: 11: LED_Initialization();
  2161  05EE  158A  25EF  118A   	fcall	_LED_Initialization
  2162                           
  2163                           ;Main_B1.c: 12: ;;
  2164                           ;Main_B1.c: 14: ;;
  2165                           ;Main_B1.c: 15: Temp_Initialization();
  2166  05F1  158A  2583  118A   	fcall	_Temp_Initialization
  2167                           
  2168                           ;Main_B1.c: 16: ;;
  2169                           ;Main_B1.c: 17: ;;
  2170                           ;Main_B1.c: 18: ;;
  2171                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2172  05F4  158A  259D  118A   	fcall	_DimmerLights_Initialization
  2173                           
  2174                           ;Main_B1.c: 21: ;;
  2175                           ;Main_B1.c: 22: CDS_Initialization();
  2176  05F7  158A  2589  118A   	fcall	_CDS_Initialization
  2177                           
  2178                           ;Main_B1.c: 23: PIR_Initialization();
  2179  05FA  158A  25FB  118A   	fcall	_PIR_Initialization
  2180  05FD                     l4932:	
  2181                           ;Main_B1.c: 24: ;;
  2182                           ;Main_B1.c: 25: ;;
  2183                           ;Main_B1.c: 26: ;;
  2184                           ;Main_B1.c: 27: ;;
  2185                           ;Main_B1.c: 28: ;;
  2186                           ;Main_B1.c: 30: while (1) {
  2187                           
  2188                           
  2189                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2190  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2191  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2192  05FF  1C2C               	btfss	_myMain,0
  2193  0600  2E1D               	goto	l4938
  2194                           
  2195                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2196  0601  3011               	movlw	17
  2197  0602  118A  2775  118A   	fcall	_getTemp_AD
  2198                           
  2199                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2200  0605  3031               	movlw	49
  2201  0606  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0607  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0608  00CA               	movwf	??_main^(0+128)
  2204  0609  084A               	movf	??_main^(0+128),w
  2205  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2206  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2207  060C  00DC               	movwf	getCDS_AD@channel2
  2208  060D  3009               	movlw	9
  2209  060E  158A  27BB  118A   	fcall	_getCDS_AD
  2210                           
  2211                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2212  0611  300D               	movlw	13
  2213  0612  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0613  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0614  00CA               	movwf	??_main^(0+128)
  2216  0615  084A               	movf	??_main^(0+128),w
  2217  0616  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0617  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0618  00E3               	movwf	getPIR_AD@channel2
  2220  0619  3005               	movlw	5
  2221  061A  118A  2210  118A   	fcall	_getPIR_AD
  2222  061D                     l4938:	
  2223                           
  2224                           ;Main_B1.c: 57: }
  2225                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2226  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2227  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2228  061F  1C39               	btfss	_Timer1,0
  2229  0620  2DFD               	goto	l4932
  2230                           
  2231                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2232  0621  1039               	bcf	_Timer1,0
  2233                           
  2234                           ;Main_B1.c: 96: my_MainTimer();
  2235  0622  158A  274B  118A   	fcall	_my_MainTimer
  2236                           
  2237                           ;Main_B1.c: 97: WDT_Main();
  2238  0625  158A  2673  118A   	fcall	_WDT_Main
  2239                           
  2240                           ;Main_B1.c: 98: ;;
  2241                           ;Main_B1.c: 99: ;;
  2242                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2243  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2245  062A  1C2C               	btfss	_myMain,0
  2246  062B  2DFD               	goto	l4932
  2247                           
  2248                           ;Main_B1.c: 101: ;;
  2249                           ;Main_B1.c: 103: LED_Main();
  2250  062C  158A  2580  118A   	fcall	_LED_Main
  2251                           
  2252                           ;Main_B1.c: 104: ;;
  2253                           ;Main_B1.c: 106: ;;
  2254                           ;Main_B1.c: 107: Temp_Main();
  2255  062F  158A  2586  118A   	fcall	_Temp_Main
  2256                           
  2257                           ;Main_B1.c: 108: ;;
  2258                           ;Main_B1.c: 109: ;;
  2259                           ;Main_B1.c: 111: ;;
  2260                           ;Main_B1.c: 112: DimmerLights_Main();
  2261  0632  158A  25A4  118A   	fcall	_DimmerLights_Main
  2262                           
  2263                           ;Main_B1.c: 113: ;;
  2264                           ;Main_B1.c: 114: CDS_Main();
  2265  0635  118A  2714  118A   	fcall	_CDS_Main
  2266                           
  2267                           ;Main_B1.c: 115: PIR_Main();
  2268  0638  118A  2027  118A   	fcall	_PIR_Main
  2269                           
  2270                           ;Main_B1.c: 117: ;;
  2271                           ;Main_B1.c: 118: ;;
  2272                           ;Main_B1.c: 119: ;;
  2273                           ;Main_B1.c: 120: ;;
  2274                           ;Main_B1.c: 121: Exception_Main();
  2275  063B  118A  2690  118A   	fcall	_Exception_Main
  2276  063E  2DFD               	goto	l4932
  2277  063F                     __end_of_main:	
  2278                           ;Main_B1.c: 128: }
  2279                           ;Main_B1.c: 129: }
  2280                           ;Main_B1.c: 163: }
  2281                           ;Main_B1.c: 164: return (0);
  2282                           ;	Return value of _main is never used
  2283                           
  2284                           
  2285                           	psect	text1
  2286  0F4B                     __ptext1:	
  2287 ;; *************** function _my_MainTimer *****************
  2288 ;; Defined at:
  2289 ;;		line 185 in file "../src/Main_B1.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;		None               void
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2303 ;;      Params:         0       0       0       0
  2304 ;;      Locals:         0       0       0       0
  2305 ;;      Temps:          0       1       0       0
  2306 ;;      Totals:         0       1       0       0
  2307 ;;Total ram usage:        1 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    3
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _my_MainTimer
  2319  0F4B                     _my_MainTimer:	
  2320                           
  2321                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2325  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0F4D  182C               	btfsc	_myMain,0
  2328  0F4E  2F5B               	goto	l4692
  2329                           
  2330                           ;Main_B1.c: 188: myMain.PowerCount++;
  2331  0F4F  3001               	movlw	1
  2332  0F50  00DA               	movwf	??_my_MainTimer
  2333  0F51  085A               	movf	??_my_MainTimer,w
  2334  0F52  07AD               	addwf	_myMain+1,f
  2335                           
  2336                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2337  0F53  082D               	movf	_myMain+1,w
  2338  0F54  3A4B               	xorlw	75
  2339  0F55  1D03               	skipz
  2340  0F56  0008               	return
  2341                           
  2342                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2343  0F57  01AD               	clrf	_myMain+1
  2344                           
  2345                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2346  0F58  142C               	bsf	_myMain,0
  2347                           
  2348                           ;Main_B1.c: 196: ;;
  2349                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2350  0F59  162C               	bsf	_myMain,4
  2351                           
  2352                           ;Main_B1.c: 206: }
  2353                           ;Main_B1.c: 207: } else {
  2354  0F5A  0008               	return
  2355  0F5B                     l4692:	
  2356                           
  2357                           ;Main_B1.c: 208: myMain.PowerCount++;
  2358  0F5B  3001               	movlw	1
  2359  0F5C  00DA               	movwf	??_my_MainTimer
  2360  0F5D  085A               	movf	??_my_MainTimer,w
  2361  0F5E  07AD               	addwf	_myMain+1,f
  2362                           
  2363                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2364  0F5F  082D               	movf	_myMain+1,w
  2365  0F60  3A32               	xorlw	50
  2366  0F61  1D03               	skipz
  2367  0F62  0008               	return
  2368                           
  2369                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2370  0F63  01AD               	clrf	_myMain+1
  2371  0F64  0008               	return
  2372  0F65                     __end_of_my_MainTimer:	
  2373                           
  2374                           	psect	text2
  2375  0D7F                     __ptext2:	
  2376 ;; *************** function _myMain_Initialization *****************
  2377 ;; Defined at:
  2378 ;;		line 170 in file "../src/Main_B1.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		None
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2392 ;;      Params:         0       0       0       0
  2393 ;;      Locals:         0       0       0       0
  2394 ;;      Temps:          0       0       0       0
  2395 ;;      Totals:         0       0       0       0
  2396 ;;Total ram usage:        0 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    3
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _myMain_Initialization
  2408  0D7F                     _myMain_Initialization:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _myMain_Initialization: []
  2412  0D7F  0008               	return
  2413  0D80                     __end_of_myMain_Initialization:	
  2414                           
  2415                           	psect	text3
  2416  0775                     __ptext3:	
  2417 ;; *************** function _getTemp_AD *****************
  2418 ;; Defined at:
  2419 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  channel         1    wreg     unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  channel         1    4[BANK0 ] unsigned char 
  2424 ;;  ADRES           1    5[BANK0 ] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;		None               void
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, pclath, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2434 ;;      Params:         0       0       0       0
  2435 ;;      Locals:         0       2       0       0
  2436 ;;      Temps:          0       2       0       0
  2437 ;;      Totals:         0       4       0       0
  2438 ;;Total ram usage:        4 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    5
  2441 ;; This function calls:
  2442 ;;		_getAD
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _getTemp_AD
  2450  0775                     _getTemp_AD:	
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2454                           ;getTemp_AD@channel stored from wreg
  2455  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0777  00DE               	movwf	getTemp_AD@channel
  2458                           
  2459                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2460  0778  01DF               	clrf	getTemp_AD@ADRES
  2461                           
  2462                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2463  0779  1D47               	btfss	_Temp,2
  2464  077A  2F93               	goto	l4600
  2465                           
  2466                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2467  077B  3070               	movlw	112
  2468  077C  00DC               	movwf	??_getTemp_AD
  2469  077D  085C               	movf	??_getTemp_AD,w
  2470  077E  00DA               	movwf	getAD@adcon1
  2471  077F  085E               	movf	getTemp_AD@channel,w
  2472  0780  158A  2781  118A   	fcall	_getAD
  2473  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0785  00DD               	movwf	??_getTemp_AD+1
  2476  0786  085D               	movf	??_getTemp_AD+1,w
  2477  0787  00DF               	movwf	getTemp_AD@ADRES
  2478                           
  2479                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2480  0788  085F               	movf	getTemp_AD@ADRES,w
  2481  0789  1903               	btfsc	3,2
  2482  078A  2F93               	goto	l4600
  2483                           
  2484                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2485  078B  085F               	movf	getTemp_AD@ADRES,w
  2486  078C  024D               	subwf	_Temp+6,w
  2487  078D  1803               	skipnc
  2488  078E  2F93               	goto	l4600
  2489                           
  2490                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2491  078F  085F               	movf	getTemp_AD@ADRES,w
  2492  0790  00DC               	movwf	??_getTemp_AD
  2493  0791  085C               	movf	??_getTemp_AD,w
  2494  0792  00CD               	movwf	_Temp+6
  2495  0793                     l4600:	
  2496                           
  2497                           ;OverTemperature_B1.c: 32: }
  2498                           ;OverTemperature_B1.c: 33: }
  2499                           ;OverTemperature_B1.c: 34: }
  2500                           ;OverTemperature_B1.c: 41: ADRES = getAD(channel, 0x70);
  2501  0793  3070               	movlw	112
  2502  0794  00DC               	movwf	??_getTemp_AD
  2503  0795  085C               	movf	??_getTemp_AD,w
  2504  0796  00DA               	movwf	getAD@adcon1
  2505  0797  085E               	movf	getTemp_AD@channel,w
  2506  0798  158A  2781         	fcall	_getAD
  2507  079A  1283               	bcf	3,5	;RP0=0, select bank0
  2508  079B  1303               	bcf	3,6	;RP1=0, select bank0
  2509  079C  00DD               	movwf	??_getTemp_AD+1
  2510  079D  085D               	movf	??_getTemp_AD+1,w
  2511  079E  00DF               	movwf	getTemp_AD@ADRES
  2512  079F  0008               	return
  2513  07A0                     __end_of_getTemp_AD:	
  2514                           
  2515                           	psect	text4
  2516  0210                     __ptext4:	
  2517 ;; *************** function _getPIR_AD *****************
  2518 ;; Defined at:
  2519 ;;		line 341 in file "../src/PIR_B1.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  channel1        1    wreg     unsigned char 
  2522 ;;  channel2        1    9[BANK0 ] unsigned char 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  channel1        1   14[BANK0 ] unsigned char 
  2525 ;;  i               1   17[BANK0 ] unsigned char 
  2526 ;;  VRAD            1   16[BANK0 ] unsigned char 
  2527 ;;  VRAD1           1   15[BANK0 ] unsigned char 
  2528 ;;  j               1   13[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2538 ;;      Params:         0       1       0       0
  2539 ;;      Locals:         0       5       0       0
  2540 ;;      Temps:          0       3       0       0
  2541 ;;      Totals:         0       9       0       0
  2542 ;;Total ram usage:        9 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    5
  2545 ;; This function calls:
  2546 ;;		___awdiv
  2547 ;;		___lwdiv
  2548 ;;		_getAD
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _getPIR_AD
  2556  0210                     _getPIR_AD:	
  2557                           
  2558                           ;incstack = 0
  2559                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2560                           ;getPIR_AD@channel1 stored from wreg
  2561  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0212  00E8               	movwf	getPIR_AD@channel1
  2564                           
  2565                           ;PIR_B1.c: 342: char i = 0, j = 0;
  2566  0213  01EB               	clrf	getPIR_AD@i
  2567  0214  01E7               	clrf	getPIR_AD@j
  2568                           
  2569                           ;PIR_B1.c: 343: char VRAD = 0, VRAD1 = 0;
  2570  0215  01EA               	clrf	getPIR_AD@VRAD
  2571  0216  01E9               	clrf	getPIR_AD@VRAD1
  2572                           
  2573                           ;PIR_B1.c: 344: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2574  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2576  0219  1CA0               	btfss	__PIR^(0+128),1
  2577  021A  0008               	return
  2578  021B  1920               	btfsc	__PIR^(0+128),2
  2579  021C  0008               	return
  2580                           
  2581                           ;PIR_B1.c: 345: _PIR.GO = 1;
  2582  021D  1520               	bsf	__PIR^(0+128),2
  2583                           
  2584                           ;PIR_B1.c: 352: VRAD1 = getAD(channel1, 0x70);
  2585  021E  3070               	movlw	112
  2586  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2588  0221  00E4               	movwf	??_getPIR_AD
  2589  0222  0864               	movf	??_getPIR_AD,w
  2590  0223  00DA               	movwf	getAD@adcon1
  2591  0224  0868               	movf	getPIR_AD@channel1,w
  2592  0225  158A  2781  118A   	fcall	_getAD
  2593  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2595  022A  00E5               	movwf	??_getPIR_AD+1
  2596  022B  0865               	movf	??_getPIR_AD+1,w
  2597  022C  00E9               	movwf	getPIR_AD@VRAD1
  2598                           
  2599                           ;PIR_B1.c: 353: VRAD = VRAD1 / 25;
  2600  022D  3019               	movlw	25
  2601  022E  00DA               	movwf	___awdiv@divisor
  2602  022F  3000               	movlw	0
  2603  0230  00DB               	movwf	___awdiv@divisor+1
  2604  0231  0869               	movf	getPIR_AD@VRAD1,w
  2605  0232  00E4               	movwf	??_getPIR_AD
  2606  0233  01E5               	clrf	??_getPIR_AD+1
  2607  0234  0864               	movf	??_getPIR_AD,w
  2608  0235  00DC               	movwf	___awdiv@dividend
  2609  0236  0865               	movf	??_getPIR_AD+1,w
  2610  0237  00DD               	movwf	___awdiv@dividend+1
  2611  0238  118A  258B  118A   	fcall	___awdiv
  2612  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2613  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2614  023D  085A               	movf	?___awdiv,w
  2615  023E  00E6               	movwf	??_getPIR_AD+2
  2616  023F  0866               	movf	??_getPIR_AD+2,w
  2617  0240  00EA               	movwf	getPIR_AD@VRAD
  2618                           
  2619                           ;PIR_B1.c: 354: _PIR.SignalAD = getAD(channel2, 0x70);
  2620  0241  3070               	movlw	112
  2621  0242  00E4               	movwf	??_getPIR_AD
  2622  0243  0864               	movf	??_getPIR_AD,w
  2623  0244  00DA               	movwf	getAD@adcon1
  2624  0245  0863               	movf	getPIR_AD@channel2,w
  2625  0246  158A  2781  118A   	fcall	_getAD
  2626  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2627  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2628  024B  00E5               	movwf	??_getPIR_AD+1
  2629  024C  0865               	movf	??_getPIR_AD+1,w
  2630  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2631  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2632  024F  00A1               	movwf	(__PIR^(0+128)+1)
  2633                           
  2634                           ;PIR_B1.c: 368: if (VRAD < 1) {
  2635  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0252  08EA               	movf	getPIR_AD@VRAD,f
  2638  0253  1D03               	skipz
  2639  0254  2A57               	goto	l4616
  2640                           
  2641                           ;PIR_B1.c: 369: _PIR.CloseTimeValue = 5;
  2642  0255  3005               	movlw	5
  2643  0256  2A5D               	goto	L1
  2644  0257                     l4616:	
  2645                           ;PIR_B1.c: 370: } else if (VRAD < 3) {
  2646                           
  2647  0257  3003               	movlw	3
  2648  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0259  026A               	subwf	getPIR_AD@VRAD,w
  2650  025A  1803               	skipnc
  2651  025B  2A62               	goto	l4620
  2652                           
  2653                           ;PIR_B1.c: 371: _PIR.CloseTimeValue = 60;
  2654  025C  303C               	movlw	60
  2655  025D                     L1:	
  2656  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2657  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2658  025F  00C3               	movwf	(__PIR^(0+128)+35)
  2659  0260  3000               	movlw	0
  2660  0261  2A88               	goto	L5
  2661  0262                     l4620:	
  2662                           ;PIR_B1.c: 372: } else if (VRAD < 5) {
  2663                           
  2664  0262  3005               	movlw	5
  2665  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0264  026A               	subwf	getPIR_AD@VRAD,w
  2667  0265  1803               	skipnc
  2668  0266  2A6D               	goto	l4624
  2669                           
  2670                           ;PIR_B1.c: 373: _PIR.CloseTimeValue = 300;
  2671  0267  302C               	movlw	44
  2672  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0269  1303               	bcf	3,6	;RP1=0, select bank1
  2674  026A  00C3               	movwf	(__PIR^(0+128)+35)
  2675  026B  3001               	movlw	1
  2676  026C  2A88               	goto	L5
  2677  026D                     l4624:	
  2678                           ;PIR_B1.c: 374: } else if (VRAD < 7) {
  2679                           
  2680  026D  3007               	movlw	7
  2681  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2682  026F  026A               	subwf	getPIR_AD@VRAD,w
  2683  0270  1803               	skipnc
  2684  0271  2A78               	goto	l4628
  2685                           
  2686                           ;PIR_B1.c: 375: _PIR.CloseTimeValue = 600;
  2687  0272  3058               	movlw	88
  2688  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0275  00C3               	movwf	(__PIR^(0+128)+35)
  2691  0276  3002               	movlw	2
  2692  0277  2A88               	goto	L5
  2693  0278                     l4628:	
  2694                           ;PIR_B1.c: 376: } else if (VRAD < 9) {
  2695                           
  2696  0278  3009               	movlw	9
  2697  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2698  027A  026A               	subwf	getPIR_AD@VRAD,w
  2699  027B  1803               	skipnc
  2700  027C  2A83               	goto	l4632
  2701                           
  2702                           ;PIR_B1.c: 377: _PIR.CloseTimeValue = 900;
  2703  027D  3084               	movlw	132
  2704  027E  1683               	bsf	3,5	;RP0=1, select bank1
  2705  027F  1303               	bcf	3,6	;RP1=0, select bank1
  2706  0280  00C3               	movwf	(__PIR^(0+128)+35)
  2707  0281  3003               	movlw	3
  2708  0282  2A88               	goto	L5
  2709  0283                     l4632:	
  2710                           ;PIR_B1.c: 378: } else {
  2711                           
  2712                           
  2713                           ;PIR_B1.c: 379: _PIR.CloseTimeValue = 1200;
  2714  0283  30B0               	movlw	176
  2715  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0285  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0286  00C3               	movwf	(__PIR^(0+128)+35)
  2718  0287  3004               	movlw	4
  2719  0288                     L5:	
  2720  0288  00C4               	movwf	(__PIR^(0+128)+36)
  2721                           
  2722                           ;PIR_B1.c: 380: }
  2723                           ;PIR_B1.c: 389: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2724  0289  0821               	movf	(__PIR^(0+128)+1),w
  2725  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2726  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2727  028C  00E4               	movwf	??_getPIR_AD
  2728  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2729  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2730  028F  0824               	movf	(__PIR^(0+128)+4),w
  2731  0290  3EA5               	addlw	(__PIR+5)& (0+255)
  2732  0291  0084               	movwf	4
  2733  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0294  0864               	movf	??_getPIR_AD,w
  2736  0295  1383               	bcf	3,7	;select IRP bank1
  2737  0296  0080               	movwf	0
  2738                           
  2739                           ;PIR_B1.c: 390: for (i = 0; i < 10; i++) {
  2740  0297  01EB               	clrf	getPIR_AD@i
  2741  0298  300A               	movlw	10
  2742  0299  026B               	subwf	getPIR_AD@i,w
  2743  029A  1803               	btfsc	3,0
  2744  029B  2AB8               	goto	l4648
  2745  029C                     l4642:	
  2746                           
  2747                           ;PIR_B1.c: 391: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2748  029C  086B               	movf	getPIR_AD@i,w
  2749  029D  3EA5               	addlw	(__PIR+5)& (0+255)
  2750  029E  0084               	movwf	4
  2751  029F  0800               	movf	0,w
  2752  02A0  00E4               	movwf	??_getPIR_AD
  2753  02A1  01E5               	clrf	??_getPIR_AD+1
  2754  02A2  0864               	movf	??_getPIR_AD,w
  2755  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2756  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2757  02A5  07AF               	addwf	(__PIR^(0+128)+15),f
  2758  02A6  1803               	skipnc
  2759  02A7  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2760  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2761  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2762  02AA  0865               	movf	??_getPIR_AD+1,w
  2763  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2764  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2765  02AD  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2766  02AE  3001               	movlw	1
  2767  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2768  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2769  02B1  00E4               	movwf	??_getPIR_AD
  2770  02B2  0864               	movf	??_getPIR_AD,w
  2771  02B3  07EB               	addwf	getPIR_AD@i,f
  2772  02B4  300A               	movlw	10
  2773  02B5  026B               	subwf	getPIR_AD@i,w
  2774  02B6  1C03               	skipc
  2775  02B7  2A9C               	goto	l4642
  2776  02B8                     l4648:	
  2777                           
  2778                           ;PIR_B1.c: 392: }
  2779                           ;PIR_B1.c: 393: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2780  02B8  300A               	movlw	10
  2781  02B9  00DA               	movwf	___lwdiv@divisor
  2782  02BA  3000               	movlw	0
  2783  02BB  00DB               	movwf	___lwdiv@divisor+1
  2784  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2785  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2786  02BE  0830               	movf	((__PIR+1)^(0+128)+15),w
  2787  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2788  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2789  02C1  01DD               	clrf	___lwdiv@dividend+1
  2790  02C2  07DD               	addwf	___lwdiv@dividend+1,f
  2791  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2792  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2793  02C5  082F               	movf	(__PIR^(0+128)+15),w
  2794  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2795  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2796  02C8  01DC               	clrf	___lwdiv@dividend
  2797  02C9  07DC               	addwf	___lwdiv@dividend,f
  2798  02CA  118A  26D4  118A   	fcall	___lwdiv
  2799  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2800  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2801  02CF  085A               	movf	?___lwdiv,w
  2802  02D0  00E4               	movwf	??_getPIR_AD
  2803  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2804  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2805  02D3  0831               	movf	(__PIR^(0+128)+17),w
  2806  02D4  3EB2               	addlw	(__PIR+18)& (0+255)
  2807  02D5  0084               	movwf	4
  2808  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2809  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2810  02D8  0864               	movf	??_getPIR_AD,w
  2811  02D9  1383               	bcf	3,7	;select IRP bank1
  2812  02DA  0080               	movwf	0
  2813                           
  2814                           ;PIR_B1.c: 394: _PIR.TenAverageValue = 0;
  2815  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2816  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2817  02DD  01AF               	clrf	(__PIR^(0+128)+15)
  2818  02DE  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2819                           
  2820                           ;PIR_B1.c: 396: for (i = 0; i <= 9; i++) {
  2821  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02E1  01EB               	clrf	getPIR_AD@i
  2824  02E2  300A               	movlw	10
  2825  02E3  026B               	subwf	getPIR_AD@i,w
  2826  02E4  1803               	btfsc	3,0
  2827  02E5  2B02               	goto	l4664
  2828  02E6                     l4658:	
  2829                           
  2830                           ;PIR_B1.c: 397: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2831  02E6  086B               	movf	getPIR_AD@i,w
  2832  02E7  3EB2               	addlw	(__PIR+18)& (0+255)
  2833  02E8  0084               	movwf	4
  2834  02E9  0800               	movf	0,w
  2835  02EA  00E4               	movwf	??_getPIR_AD
  2836  02EB  01E5               	clrf	??_getPIR_AD+1
  2837  02EC  0864               	movf	??_getPIR_AD,w
  2838  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2839  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2840  02EF  07BC               	addwf	(__PIR^(0+128)+28),f
  2841  02F0  1803               	skipnc
  2842  02F1  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2843  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2844  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2845  02F4  0865               	movf	??_getPIR_AD+1,w
  2846  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2847  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2848  02F7  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2849  02F8  3001               	movlw	1
  2850  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2851  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2852  02FB  00E4               	movwf	??_getPIR_AD
  2853  02FC  0864               	movf	??_getPIR_AD,w
  2854  02FD  07EB               	addwf	getPIR_AD@i,f
  2855  02FE  300A               	movlw	10
  2856  02FF  026B               	subwf	getPIR_AD@i,w
  2857  0300  1C03               	skipc
  2858  0301  2AE6               	goto	l4658
  2859  0302                     l4664:	
  2860                           
  2861                           ;PIR_B1.c: 398: }
  2862                           ;PIR_B1.c: 399: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2863  0302  300A               	movlw	10
  2864  0303  00DA               	movwf	___lwdiv@divisor
  2865  0304  3000               	movlw	0
  2866  0305  00DB               	movwf	___lwdiv@divisor+1
  2867  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2868  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2869  0308  083D               	movf	((__PIR+1)^(0+128)+28),w
  2870  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2871  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2872  030B  01DD               	clrf	___lwdiv@dividend+1
  2873  030C  07DD               	addwf	___lwdiv@dividend+1,f
  2874  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2875  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2876  030F  083C               	movf	(__PIR^(0+128)+28),w
  2877  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0312  01DC               	clrf	___lwdiv@dividend
  2880  0313  07DC               	addwf	___lwdiv@dividend,f
  2881  0314  118A  26D4  118A   	fcall	___lwdiv
  2882  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0319  085A               	movf	?___lwdiv,w
  2885  031A  00E4               	movwf	??_getPIR_AD
  2886  031B  0864               	movf	??_getPIR_AD,w
  2887  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2888  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2889  031E  00A3               	movwf	(__PIR^(0+128)+3)
  2890                           
  2891                           ;PIR_B1.c: 400: _PIR.HundredAverageValue = 0;
  2892  031F  01BC               	clrf	(__PIR^(0+128)+28)
  2893  0320  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2894                           
  2895                           ;PIR_B1.c: 402: if (_PIR.TenCount < 10) {
  2896  0321  300A               	movlw	10
  2897  0322  0224               	subwf	(__PIR^(0+128)+4),w
  2898  0323  1803               	skipnc
  2899  0324  2B2E               	goto	l4672
  2900                           
  2901                           ;PIR_B1.c: 403: _PIR.TenCount++;
  2902  0325  3001               	movlw	1
  2903  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0328  00E4               	movwf	??_getPIR_AD
  2906  0329  0864               	movf	??_getPIR_AD,w
  2907  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2908  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2909  032C  07A4               	addwf	(__PIR^(0+128)+4),f
  2910                           
  2911                           ;PIR_B1.c: 404: } else {
  2912  032D  0008               	return
  2913  032E                     l4672:	
  2914                           
  2915                           ;PIR_B1.c: 405: _PIR.TenCount = 0;
  2916  032E  01A4               	clrf	(__PIR^(0+128)+4)
  2917                           
  2918                           ;PIR_B1.c: 406: if (_PIR.HundreCount < 10)
  2919  032F  300A               	movlw	10
  2920  0330  0231               	subwf	(__PIR^(0+128)+17),w
  2921  0331  1803               	skipnc
  2922  0332  2B3C               	goto	l4678
  2923                           
  2924                           ;PIR_B1.c: 407: _PIR.HundreCount++;
  2925  0333  3001               	movlw	1
  2926  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0336  00E4               	movwf	??_getPIR_AD
  2929  0337  0864               	movf	??_getPIR_AD,w
  2930  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2932  033A  07B1               	addwf	(__PIR^(0+128)+17),f
  2933  033B  0008               	return
  2934  033C                     l4678:	
  2935                           
  2936                           ;PIR_B1.c: 408: else
  2937                           ;PIR_B1.c: 409: _PIR.HundreCount = 0;
  2938  033C  01B1               	clrf	(__PIR^(0+128)+17)
  2939  033D  0008               	return
  2940  033E                     __end_of_getPIR_AD:	
  2941                           
  2942                           	psect	text5
  2943  06D4                     __ptext5:	
  2944 ;; *************** function ___lwdiv *****************
  2945 ;; Defined at:
  2946 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  divisor         2    0[BANK0 ] unsigned int 
  2949 ;;  dividend        2    2[BANK0 ] unsigned int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  quotient        2    6[BANK0 ] unsigned int 
  2952 ;;  counter         1    5[BANK0 ] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2    0[BANK0 ] unsigned int 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2962 ;;      Params:         0       4       0       0
  2963 ;;      Locals:         0       3       0       0
  2964 ;;      Temps:          0       1       0       0
  2965 ;;      Totals:         0       8       0       0
  2966 ;;Total ram usage:        8 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    3
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_getPIR_AD
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           
  2977                           ;psect for function ___lwdiv
  2978  06D4                     ___lwdiv:	
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2982  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  2983  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  2984  06D6  01E0               	clrf	___lwdiv@quotient
  2985  06D7  01E1               	clrf	___lwdiv@quotient+1
  2986  06D8  085B               	movf	___lwdiv@divisor+1,w
  2987  06D9  045A               	iorwf	___lwdiv@divisor,w
  2988  06DA  1903               	skipnz
  2989  06DB  2F0D               	goto	l4528
  2990  06DC  01DF               	clrf	___lwdiv@counter
  2991  06DD  0ADF               	incf	___lwdiv@counter,f
  2992  06DE                     l4516:	
  2993  06DE  1BDB               	btfsc	___lwdiv@divisor+1,7
  2994  06DF  2EEC               	goto	l4518
  2995  06E0  3001               	movlw	1
  2996  06E1                     u5315:	
  2997  06E1  1003               	clrc
  2998  06E2  0DDA               	rlf	___lwdiv@divisor,f
  2999  06E3  0DDB               	rlf	___lwdiv@divisor+1,f
  3000  06E4  3EFF               	addlw	-1
  3001  06E5  1D03               	skipz
  3002  06E6  2EE1               	goto	u5315
  3003  06E7  3001               	movlw	1
  3004  06E8  00DE               	movwf	??___lwdiv
  3005  06E9  085E               	movf	??___lwdiv,w
  3006  06EA  07DF               	addwf	___lwdiv@counter,f
  3007  06EB  2EDE               	goto	l4516
  3008  06EC                     l4518:	
  3009  06EC  3001               	movlw	1
  3010  06ED                     u5335:	
  3011  06ED  1003               	clrc
  3012  06EE  0DE0               	rlf	___lwdiv@quotient,f
  3013  06EF  0DE1               	rlf	___lwdiv@quotient+1,f
  3014  06F0  3EFF               	addlw	-1
  3015  06F1  1D03               	skipz
  3016  06F2  2EED               	goto	u5335
  3017  06F3  085B               	movf	___lwdiv@divisor+1,w
  3018  06F4  025D               	subwf	___lwdiv@dividend+1,w
  3019  06F5  1D03               	skipz
  3020  06F6  2EF9               	goto	u5345
  3021  06F7  085A               	movf	___lwdiv@divisor,w
  3022  06F8  025C               	subwf	___lwdiv@dividend,w
  3023  06F9                     u5345:	
  3024  06F9  1C03               	skipc
  3025  06FA  2F02               	goto	l4524
  3026  06FB  085A               	movf	___lwdiv@divisor,w
  3027  06FC  02DC               	subwf	___lwdiv@dividend,f
  3028  06FD  085B               	movf	___lwdiv@divisor+1,w
  3029  06FE  1C03               	skipc
  3030  06FF  03DD               	decf	___lwdiv@dividend+1,f
  3031  0700  02DD               	subwf	___lwdiv@dividend+1,f
  3032  0701  1460               	bsf	___lwdiv@quotient,0
  3033  0702                     l4524:	
  3034  0702  3001               	movlw	1
  3035  0703                     u5355:	
  3036  0703  1003               	clrc
  3037  0704  0CDB               	rrf	___lwdiv@divisor+1,f
  3038  0705  0CDA               	rrf	___lwdiv@divisor,f
  3039  0706  3EFF               	addlw	-1
  3040  0707  1D03               	skipz
  3041  0708  2F03               	goto	u5355
  3042  0709  3001               	movlw	1
  3043  070A  02DF               	subwf	___lwdiv@counter,f
  3044  070B  1D03               	btfss	3,2
  3045  070C  2EEC               	goto	l4518
  3046  070D                     l4528:	
  3047  070D  0861               	movf	___lwdiv@quotient+1,w
  3048  070E  01DB               	clrf	?___lwdiv+1
  3049  070F  07DB               	addwf	?___lwdiv+1,f
  3050  0710  0860               	movf	___lwdiv@quotient,w
  3051  0711  01DA               	clrf	?___lwdiv
  3052  0712  07DA               	addwf	?___lwdiv,f
  3053  0713  0008               	return
  3054  0714                     __end_of___lwdiv:	
  3055                           
  3056                           	psect	text6
  3057  058B                     __ptext6:	
  3058 ;; *************** function ___awdiv *****************
  3059 ;; Defined at:
  3060 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  divisor         2    0[BANK0 ] int 
  3063 ;;  dividend        2    2[BANK0 ] int 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  quotient        2    7[BANK0 ] int 
  3066 ;;  sign            1    6[BANK0 ] unsigned char 
  3067 ;;  counter         1    5[BANK0 ] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    0[BANK0 ] int 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3077 ;;      Params:         0       4       0       0
  3078 ;;      Locals:         0       4       0       0
  3079 ;;      Temps:          0       1       0       0
  3080 ;;      Totals:         0       9       0       0
  3081 ;;Total ram usage:        9 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    3
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_getPIR_AD
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function ___awdiv
  3093  058B                     ___awdiv:	
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3097  058B  1283               	bcf	3,5	;RP0=0, select bank0
  3098  058C  1303               	bcf	3,6	;RP1=0, select bank0
  3099  058D  01E0               	clrf	___awdiv@sign
  3100  058E  1FDB               	btfss	___awdiv@divisor+1,7
  3101  058F  2D97               	goto	l4470
  3102  0590  09DA               	comf	___awdiv@divisor,f
  3103  0591  09DB               	comf	___awdiv@divisor+1,f
  3104  0592  0ADA               	incf	___awdiv@divisor,f
  3105  0593  1903               	skipnz
  3106  0594  0ADB               	incf	___awdiv@divisor+1,f
  3107  0595  01E0               	clrf	___awdiv@sign
  3108  0596  0AE0               	incf	___awdiv@sign,f
  3109  0597                     l4470:	
  3110  0597  1FDD               	btfss	___awdiv@dividend+1,7
  3111  0598  2DA2               	goto	l4476
  3112  0599  09DC               	comf	___awdiv@dividend,f
  3113  059A  09DD               	comf	___awdiv@dividend+1,f
  3114  059B  0ADC               	incf	___awdiv@dividend,f
  3115  059C  1903               	skipnz
  3116  059D  0ADD               	incf	___awdiv@dividend+1,f
  3117  059E  3001               	movlw	1
  3118  059F  00DE               	movwf	??___awdiv
  3119  05A0  085E               	movf	??___awdiv,w
  3120  05A1  06E0               	xorwf	___awdiv@sign,f
  3121  05A2                     l4476:	
  3122  05A2  01E1               	clrf	___awdiv@quotient
  3123  05A3  01E2               	clrf	___awdiv@quotient+1
  3124  05A4  085B               	movf	___awdiv@divisor+1,w
  3125  05A5  045A               	iorwf	___awdiv@divisor,w
  3126  05A6  1903               	skipnz
  3127  05A7  2DD9               	goto	l4498
  3128  05A8  01DF               	clrf	___awdiv@counter
  3129  05A9  0ADF               	incf	___awdiv@counter,f
  3130  05AA                     l4486:	
  3131  05AA  1BDB               	btfsc	___awdiv@divisor+1,7
  3132  05AB  2DB8               	goto	l4488
  3133  05AC  3001               	movlw	1
  3134  05AD                     u5235:	
  3135  05AD  1003               	clrc
  3136  05AE  0DDA               	rlf	___awdiv@divisor,f
  3137  05AF  0DDB               	rlf	___awdiv@divisor+1,f
  3138  05B0  3EFF               	addlw	-1
  3139  05B1  1D03               	skipz
  3140  05B2  2DAD               	goto	u5235
  3141  05B3  3001               	movlw	1
  3142  05B4  00DE               	movwf	??___awdiv
  3143  05B5  085E               	movf	??___awdiv,w
  3144  05B6  07DF               	addwf	___awdiv@counter,f
  3145  05B7  2DAA               	goto	l4486
  3146  05B8                     l4488:	
  3147  05B8  3001               	movlw	1
  3148  05B9                     u5255:	
  3149  05B9  1003               	clrc
  3150  05BA  0DE1               	rlf	___awdiv@quotient,f
  3151  05BB  0DE2               	rlf	___awdiv@quotient+1,f
  3152  05BC  3EFF               	addlw	-1
  3153  05BD  1D03               	skipz
  3154  05BE  2DB9               	goto	u5255
  3155  05BF  085B               	movf	___awdiv@divisor+1,w
  3156  05C0  025D               	subwf	___awdiv@dividend+1,w
  3157  05C1  1D03               	skipz
  3158  05C2  2DC5               	goto	u5265
  3159  05C3  085A               	movf	___awdiv@divisor,w
  3160  05C4  025C               	subwf	___awdiv@dividend,w
  3161  05C5                     u5265:	
  3162  05C5  1C03               	skipc
  3163  05C6  2DCE               	goto	l4494
  3164  05C7  085A               	movf	___awdiv@divisor,w
  3165  05C8  02DC               	subwf	___awdiv@dividend,f
  3166  05C9  085B               	movf	___awdiv@divisor+1,w
  3167  05CA  1C03               	skipc
  3168  05CB  03DD               	decf	___awdiv@dividend+1,f
  3169  05CC  02DD               	subwf	___awdiv@dividend+1,f
  3170  05CD  1461               	bsf	___awdiv@quotient,0
  3171  05CE                     l4494:	
  3172  05CE  3001               	movlw	1
  3173  05CF                     u5275:	
  3174  05CF  1003               	clrc
  3175  05D0  0CDB               	rrf	___awdiv@divisor+1,f
  3176  05D1  0CDA               	rrf	___awdiv@divisor,f
  3177  05D2  3EFF               	addlw	-1
  3178  05D3  1D03               	skipz
  3179  05D4  2DCF               	goto	u5275
  3180  05D5  3001               	movlw	1
  3181  05D6  02DF               	subwf	___awdiv@counter,f
  3182  05D7  1D03               	btfss	3,2
  3183  05D8  2DB8               	goto	l4488
  3184  05D9                     l4498:	
  3185  05D9  0860               	movf	___awdiv@sign,w
  3186  05DA  1903               	btfsc	3,2
  3187  05DB  2DE1               	goto	l4502
  3188  05DC  09E1               	comf	___awdiv@quotient,f
  3189  05DD  09E2               	comf	___awdiv@quotient+1,f
  3190  05DE  0AE1               	incf	___awdiv@quotient,f
  3191  05DF  1903               	skipnz
  3192  05E0  0AE2               	incf	___awdiv@quotient+1,f
  3193  05E1                     l4502:	
  3194  05E1  0862               	movf	___awdiv@quotient+1,w
  3195  05E2  01DB               	clrf	?___awdiv+1
  3196  05E3  07DB               	addwf	?___awdiv+1,f
  3197  05E4  0861               	movf	___awdiv@quotient,w
  3198  05E5  01DA               	clrf	?___awdiv
  3199  05E6  07DA               	addwf	?___awdiv,f
  3200  05E7  0008               	return
  3201  05E8                     __end_of___awdiv:	
  3202                           
  3203                           	psect	text7
  3204  0FBB                     __ptext7:	
  3205 ;; *************** function _getCDS_AD *****************
  3206 ;; Defined at:
  3207 ;;		line 48 in file "../src/CDS_B1.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  channel1        1    wreg     unsigned char 
  3210 ;;  channel2        1    2[BANK0 ] unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  channel1        1    7[BANK0 ] unsigned char 
  3213 ;;  j               1    6[BANK0 ] unsigned char 
  3214 ;;  i               1    5[BANK0 ] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;		None               void
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3224 ;;      Params:         0       1       0       0
  3225 ;;      Locals:         0       3       0       0
  3226 ;;      Temps:          0       2       0       0
  3227 ;;      Totals:         0       6       0       0
  3228 ;;Total ram usage:        6 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    5
  3231 ;; This function calls:
  3232 ;;		_getAD
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _getCDS_AD
  3240  0FBB                     _getCDS_AD:	
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3244                           ;getCDS_AD@channel1 stored from wreg
  3245  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0FBD  00E1               	movwf	getCDS_AD@channel1
  3248                           
  3249                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3250  0FBE  01DF               	clrf	getCDS_AD@i
  3251  0FBF  01E0               	clrf	getCDS_AD@j
  3252                           
  3253                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3254  0FC0  1DB5               	btfss	__CDS,3
  3255  0FC1  0008               	return
  3256                           
  3257                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3258  0FC2  14B5               	bsf	__CDS,1
  3259                           
  3260                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3261  0FC3  3070               	movlw	112
  3262  0FC4  00DD               	movwf	??_getCDS_AD
  3263  0FC5  085D               	movf	??_getCDS_AD,w
  3264  0FC6  00DA               	movwf	getAD@adcon1
  3265  0FC7  0861               	movf	getCDS_AD@channel1,w
  3266  0FC8  158A  2781  158A   	fcall	_getAD
  3267  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0FCD  00DE               	movwf	??_getCDS_AD+1
  3270  0FCE  085E               	movf	??_getCDS_AD+1,w
  3271  0FCF  00B7               	movwf	__CDS+2
  3272                           
  3273                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3274  0FD0  3070               	movlw	112
  3275  0FD1  00DD               	movwf	??_getCDS_AD
  3276  0FD2  085D               	movf	??_getCDS_AD,w
  3277  0FD3  00DA               	movwf	getAD@adcon1
  3278  0FD4  085C               	movf	getCDS_AD@channel2,w
  3279  0FD5  158A  2781         	fcall	_getAD
  3280  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0FD9  00DE               	movwf	??_getCDS_AD+1
  3283  0FDA  085E               	movf	??_getCDS_AD+1,w
  3284  0FDB  00B8               	movwf	__CDS+3
  3285  0FDC  0008               	return
  3286  0FDD                     __end_of_getCDS_AD:	
  3287                           
  3288                           	psect	text8
  3289  0F81                     __ptext8:	
  3290 ;; *************** function _getAD *****************
  3291 ;; Defined at:
  3292 ;;		line 432 in file "../src/MCU_B1.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  adcon0          1    wreg     unsigned char 
  3295 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      unsigned char 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, pclath, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3307 ;;      Params:         0       1       0       0
  3308 ;;      Locals:         0       1       0       0
  3309 ;;      Temps:          0       0       0       0
  3310 ;;      Totals:         0       2       0       0
  3311 ;;Total ram usage:        2 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    4
  3314 ;; This function calls:
  3315 ;;		_Timeout_Counter
  3316 ;;		_set_TimeoutCleared
  3317 ;; This function is called by:
  3318 ;;		_getCDS_AD
  3319 ;;		_getTemp_AD
  3320 ;;		_getPIR_AD
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function _getAD
  3326  0F81                     _getAD:	
  3327                           
  3328                           ;incstack = 0
  3329                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3330                           ;getAD@adcon0 stored from wreg
  3331  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0F83  00DB               	movwf	getAD@adcon0
  3334                           
  3335                           ;MCU_B1.c: 433: ADCON0 = adcon0;
  3336  0F84  085B               	movf	getAD@adcon0,w
  3337  0F85  009F               	movwf	31	;volatile
  3338                           
  3339                           ;MCU_B1.c: 434: ADCON1 = adcon1;
  3340  0F86  085A               	movf	getAD@adcon1,w
  3341  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0F88  1303               	bcf	3,6	;RP1=0, select bank1
  3343  0F89  009F               	movwf	31	;volatile
  3344                           
  3345                           ;MCU_B1.c: 435: GO_nDONE = 1;
  3346  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0F8C  149F               	bsf	31,1	;volatile
  3349                           
  3350                           ;MCU_B1.c: 436: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3351  0F8D  2F91               	goto	l4238
  3352  0F8E                     l4236:	
  3353                           
  3354                           ;MCU_B1.c: 437: Timeout_Counter();
  3355  0F8E  158A  26AB  158A   	fcall	_Timeout_Counter
  3356  0F91                     l4238:	
  3357  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0F93  1C9F               	btfss	31,1	;volatile
  3360  0F94  2F97               	goto	l4242
  3361  0F95  1D2E               	btfss	_myMain+2,2
  3362  0F96  2F8E               	goto	l4236
  3363  0F97                     l4242:	
  3364                           
  3365                           ;MCU_B1.c: 438: };
  3366                           ;MCU_B1.c: 439: set_TimeoutCleared();
  3367  0F97  158A  2597         	fcall	_set_TimeoutCleared
  3368                           
  3369                           ;MCU_B1.c: 440: return ADRES;
  3370  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0F9B  081E               	movf	30,w	;volatile
  3373  0F9C  0008               	return
  3374  0F9D                     __end_of_getAD:	
  3375                           
  3376                           	psect	text9
  3377  0D97                     __ptext9:	
  3378 ;; *************** function _set_TimeoutCleared *****************
  3379 ;; Defined at:
  3380 ;;		line 281 in file "../src/Main_B1.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		status,2
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3394 ;;      Params:         0       0       0       0
  3395 ;;      Locals:         0       0       0       0
  3396 ;;      Temps:          0       0       0       0
  3397 ;;      Totals:         0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    3
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_getAD
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _set_TimeoutCleared
  3410  0D97                     _set_TimeoutCleared:	
  3411                           
  3412                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _set_TimeoutCleared: [status,2]
  3416  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0D99  112E               	bcf	_myMain+2,2
  3419                           
  3420                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3421  0D9A  01AF               	clrf	_myMain+3
  3422  0D9B  01B0               	clrf	_myMain+4
  3423  0D9C  0008               	return
  3424  0D9D                     __end_of_set_TimeoutCleared:	
  3425                           
  3426                           	psect	text10
  3427  0EAB                     __ptext10:	
  3428 ;; *************** function _Timeout_Counter *****************
  3429 ;; Defined at:
  3430 ;;		line 272 in file "../src/Main_B1.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;		None               void
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3444 ;;      Params:         0       0       0       0
  3445 ;;      Locals:         0       0       0       0
  3446 ;;      Temps:          0       0       0       0
  3447 ;;      Totals:         0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    3
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_getAD
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _Timeout_Counter
  3460  0EAB                     _Timeout_Counter:	
  3461                           
  3462                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3463                           
  3464                           ;incstack = 0
  3465                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3466  0EAB  3001               	movlw	1
  3467  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0EAE  07AF               	addwf	_myMain+3,f
  3470  0EAF  1803               	skipnc
  3471  0EB0  0AB0               	incf	_myMain+4,f
  3472  0EB1  3000               	movlw	0
  3473  0EB2  07B0               	addwf	_myMain+4,f
  3474                           
  3475                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3476  0EB3  3061               	movlw	97
  3477  0EB4  0630               	xorwf	_myMain+4,w
  3478  0EB5  1D03               	skipz
  3479  0EB6  2EB9               	goto	u4705
  3480  0EB7  30A8               	movlw	168
  3481  0EB8  062F               	xorwf	_myMain+3,w
  3482  0EB9                     u4705:	
  3483  0EB9  1D03               	skipz
  3484  0EBA  0008               	return
  3485                           
  3486                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3487  0EBB  01AF               	clrf	_myMain+3
  3488  0EBC  01B0               	clrf	_myMain+4
  3489                           
  3490                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3491  0EBD  152E               	bsf	_myMain+2,2
  3492  0EBE  0008               	return
  3493  0EBF                     __end_of_Timeout_Counter:	
  3494                           
  3495                           	psect	text11
  3496  0E73                     __ptext11:	
  3497 ;; *************** function _WDT_Main *****************
  3498 ;; Defined at:
  3499 ;;		line 1103 in file "../src/MCU_B1.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;		None               void
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, pclath, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3513 ;;      Params:         0       0       0       0
  3514 ;;      Locals:         0       0       0       0
  3515 ;;      Temps:          0       1       0       0
  3516 ;;      Totals:         0       1       0       0
  3517 ;;Total ram usage:        1 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    4
  3520 ;; This function calls:
  3521 ;;		_WDT_Clearing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _WDT_Main
  3529  0E73                     _WDT_Main:	
  3530                           
  3531                           ;MCU_B1.c: 1104: if (WDT.Enable == 1) {
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3535  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0E75  1C3C               	btfss	_WDT,0
  3538  0E76  0008               	return
  3539                           
  3540                           ;MCU_B1.c: 1105: if (WDT.Timer-- > 0) {
  3541  0E77  3001               	movlw	1
  3542  0E78  02BD               	subwf	_WDT+1,f
  3543  0E79  083D               	movf	_WDT+1,w
  3544  0E7A  3AFF               	xorlw	255
  3545  0E7B  1903               	skipnz
  3546  0E7C  0008               	return
  3547                           
  3548                           ;MCU_B1.c: 1106: WDT.Timer = 100;
  3549  0E7D  3064               	movlw	100
  3550  0E7E  00DA               	movwf	??_WDT_Main
  3551  0E7F  085A               	movf	??_WDT_Main,w
  3552  0E80  00BD               	movwf	_WDT+1
  3553                           
  3554                           ;MCU_B1.c: 1107: WDT_Clearing();
  3555  0E81  118A  2002         	fcall	_WDT_Clearing
  3556  0E83  0008               	return
  3557  0E84                     __end_of_WDT_Main:	
  3558                           
  3559                           	psect	text12
  3560  0002                     __ptext12:	
  3561 ;; *************** function _WDT_Clearing *****************
  3562 ;; Defined at:
  3563 ;;		line 1113 in file "../src/MCU_B1.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;		None               void
  3570 ;; Registers used:
  3571 ;;		None
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3577 ;;      Params:         0       0       0       0
  3578 ;;      Locals:         0       0       0       0
  3579 ;;      Temps:          0       0       0       0
  3580 ;;      Totals:         0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    3
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_WDT_Main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _WDT_Clearing
  3593  0002                     _WDT_Clearing:	
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _WDT_Clearing: []
  3597  0002  0064               	clrwdt	;# 
  3598  0003  0008               	return
  3599  0004                     __end_of_WDT_Clearing:	
  3600                           
  3601                           	psect	text13
  3602  0D86                     __ptext13:	
  3603 ;; *************** function _Temp_Main *****************
  3604 ;; Defined at:
  3605 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, pclath, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3619 ;;      Params:         0       0       0       0
  3620 ;;      Locals:         0       0       0       0
  3621 ;;      Temps:          0       0       0       0
  3622 ;;      Totals:         0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    5
  3626 ;; This function calls:
  3627 ;;		_setTemp_Main
  3628 ;; This function is called by:
  3629 ;;		_main
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           
  3634                           ;psect for function _Temp_Main
  3635  0D86                     _Temp_Main:	
  3636                           
  3637                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3641  0D86  118A  23CE         	fcall	_setTemp_Main
  3642  0D88  0008               	return
  3643  0D89                     __end_of_Temp_Main:	
  3644                           
  3645                           	psect	text14
  3646  03CE                     __ptext14:	
  3647 ;; *************** function _setTemp_Main *****************
  3648 ;; Defined at:
  3649 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  AD              1   10[BANK0 ] unsigned char 
  3654 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3655 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3656 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3657 ;;  error           1    6[BANK0 ] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;		None               void
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3667 ;;      Params:         0       0       0       0
  3668 ;;      Locals:         0       5       0       0
  3669 ;;      Temps:          0       1       0       0
  3670 ;;      Totals:         0       6       0       0
  3671 ;;Total ram usage:        6 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    4
  3674 ;; This function calls:
  3675 ;;		_getMain_All_Error_Status
  3676 ;;		_getMain_All_LightsStatus
  3677 ;; This function is called by:
  3678 ;;		_Temp_Main
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           
  3683                           ;psect for function _setTemp_Main
  3684  03CE                     _setTemp_Main:	
  3685                           
  3686                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3690  03CE  3000               	movlw	0
  3691  03CF  158A  2731  118A   	fcall	_getMain_All_Error_Status
  3692  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3693  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3694  03D4  00DF               	movwf	??_setTemp_Main
  3695  03D5  085F               	movf	??_setTemp_Main,w
  3696  03D6  00E0               	movwf	setTemp_Main@error
  3697                           
  3698                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3699  03D7  01E2               	clrf	setTemp_Main@SafeValue
  3700  03D8  01E3               	clrf	setTemp_Main@DangerValue
  3701                           
  3702                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3703  03D9  158A  25C2  118A   	fcall	_getMain_All_LightsStatus
  3704  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3705  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  3706  03DE  00DF               	movwf	??_setTemp_Main
  3707  03DF  085F               	movf	??_setTemp_Main,w
  3708  03E0  00E1               	movwf	setTemp_Main@TempGO
  3709                           
  3710                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3711  03E1  1C47               	btfss	_Temp,0
  3712  03E2  2C45               	goto	l941
  3713                           
  3714                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3715  03E3  1947               	btfsc	_Temp,2
  3716  03E4  2C01               	goto	l4424
  3717                           
  3718                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3719  03E5  0861               	movf	setTemp_Main@TempGO,w
  3720  03E6  3A01               	xorlw	1
  3721  03E7  1D03               	skipz
  3722  03E8  2BEB               	goto	l947
  3723  03E9  1CC7               	btfss	_Temp,1
  3724  03EA  2BED               	goto	l4416
  3725  03EB                     l947:	
  3726  03EB  1CC7               	btfss	_Temp,1
  3727  03EC  2BFE               	goto	l4422
  3728  03ED                     l4416:	
  3729                           
  3730                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3731  03ED  3001               	movlw	1
  3732  03EE  07C8               	addwf	_Temp+1,f
  3733  03EF  1803               	skipnc
  3734  03F0  0AC9               	incf	_Temp+2,f
  3735  03F1  3000               	movlw	0
  3736  03F2  07C9               	addwf	_Temp+2,f
  3737                           
  3738                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3739  03F3  3000               	movlw	0
  3740  03F4  0249               	subwf	_Temp+2,w
  3741  03F5  30FA               	movlw	250
  3742  03F6  1903               	skipnz
  3743  03F7  0248               	subwf	_Temp+1,w
  3744  03F8  1C03               	skipc
  3745  03F9  0008               	return
  3746                           
  3747                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3748  03FA  01C8               	clrf	_Temp+1
  3749  03FB  01C9               	clrf	_Temp+2
  3750                           
  3751                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3752  03FC  1547               	bsf	_Temp,2
  3753                           
  3754                           ;OverTemperature_B1.c: 83: }
  3755                           ;OverTemperature_B1.c: 84: } else {
  3756  03FD  0008               	return
  3757  03FE                     l4422:	
  3758                           
  3759                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3760  03FE  01C8               	clrf	_Temp+1
  3761  03FF  01C9               	clrf	_Temp+2
  3762                           
  3763                           ;OverTemperature_B1.c: 86: }
  3764                           ;OverTemperature_B1.c: 87: } else {
  3765  0400  0008               	return
  3766  0401                     l4424:	
  3767                           
  3768                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3769  0401  3001               	movlw	1
  3770  0402  07C8               	addwf	_Temp+1,f
  3771  0403  1803               	skipnc
  3772  0404  0AC9               	incf	_Temp+2,f
  3773  0405  3000               	movlw	0
  3774  0406  07C9               	addwf	_Temp+2,f
  3775                           
  3776                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3777  0407  3000               	movlw	0
  3778  0408  0249               	subwf	_Temp+2,w
  3779  0409  3005               	movlw	5
  3780  040A  1903               	skipnz
  3781  040B  0248               	subwf	_Temp+1,w
  3782  040C  1C03               	skipc
  3783  040D  0008               	return
  3784                           
  3785                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3786  040E  01C8               	clrf	_Temp+1
  3787  040F  01C9               	clrf	_Temp+2
  3788                           
  3789                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3790  0410  084D               	movf	_Temp+6,w
  3791  0411  1903               	btfsc	3,2
  3792  0412  2C41               	goto	l952
  3793                           
  3794                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3795  0413  1147               	bcf	_Temp,2
  3796                           
  3797                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3798  0414  084D               	movf	_Temp+6,w
  3799  0415  00DF               	movwf	??_setTemp_Main
  3800  0416  085F               	movf	??_setTemp_Main,w
  3801  0417  00E4               	movwf	setTemp_Main@AD
  3802                           
  3803                           ;OverTemperature_B1.c: 109: SafeValue = 0x85;
  3804  0418  3085               	movlw	133
  3805  0419  00DF               	movwf	??_setTemp_Main
  3806  041A  085F               	movf	??_setTemp_Main,w
  3807  041B  00E2               	movwf	setTemp_Main@SafeValue
  3808                           
  3809                           ;OverTemperature_B1.c: 110: DangerValue = 0x70;
  3810  041C  3070               	movlw	112
  3811  041D  00DF               	movwf	??_setTemp_Main
  3812  041E  085F               	movf	??_setTemp_Main,w
  3813  041F  00E3               	movwf	setTemp_Main@DangerValue
  3814                           
  3815                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3816  0420  1CC7               	btfss	_Temp,1
  3817  0421  2C31               	goto	l4448
  3818                           
  3819                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3820  0422  0862               	movf	setTemp_Main@SafeValue,w
  3821  0423  0264               	subwf	setTemp_Main@AD,w
  3822  0424  1C03               	skipc
  3823  0425  2C40               	goto	l4458
  3824                           
  3825                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3826  0426  3001               	movlw	1
  3827  0427  00DF               	movwf	??_setTemp_Main
  3828  0428  085F               	movf	??_setTemp_Main,w
  3829  0429  07CA               	addwf	_Temp+3,f
  3830                           
  3831                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3832  042A  3003               	movlw	3
  3833  042B  024A               	subwf	_Temp+3,w
  3834  042C  1C03               	skipc
  3835  042D  2C41               	goto	l952
  3836                           
  3837                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3838  042E  01CA               	clrf	_Temp+3
  3839                           
  3840                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3841  042F  10C7               	bcf	_Temp,1
  3842                           
  3843                           ;OverTemperature_B1.c: 126: }
  3844                           ;OverTemperature_B1.c: 127: } else {
  3845                           
  3846                           ;OverTemperature_B1.c: 125: ;;
  3847  0430  2C41               	goto	l952
  3848  0431                     l4448:	
  3849                           ;OverTemperature_B1.c: 129: }
  3850                           ;OverTemperature_B1.c: 130: } else {
  3851                           
  3852                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3853                           
  3854                           
  3855                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3856  0431  0864               	movf	setTemp_Main@AD,w
  3857  0432  0263               	subwf	setTemp_Main@DangerValue,w
  3858  0433  1C03               	skipc
  3859  0434  2C40               	goto	l4458
  3860                           
  3861                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3862  0435  3001               	movlw	1
  3863  0436  00DF               	movwf	??_setTemp_Main
  3864  0437  085F               	movf	??_setTemp_Main,w
  3865  0438  07CA               	addwf	_Temp+3,f
  3866                           
  3867                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3868  0439  3003               	movlw	3
  3869  043A  024A               	subwf	_Temp+3,w
  3870  043B  1C03               	skipc
  3871  043C  2C41               	goto	l952
  3872                           
  3873                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3874  043D  01CA               	clrf	_Temp+3
  3875                           
  3876                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3877  043E  14C7               	bsf	_Temp,1
  3878                           
  3879                           ;OverTemperature_B1.c: 136: }
  3880                           ;OverTemperature_B1.c: 137: } else {
  3881  043F  2C41               	goto	l952
  3882  0440                     l4458:	
  3883                           
  3884                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3885  0440  01CA               	clrf	_Temp+3
  3886  0441                     l952:	
  3887                           ;OverTemperature_B1.c: 139: }
  3888                           ;OverTemperature_B1.c: 140: }
  3889                           ;OverTemperature_B1.c: 141: ;;
  3890                           ;OverTemperature_B1.c: 142: ;;
  3891                           
  3892                           
  3893                           ;OverTemperature_B1.c: 158: }
  3894                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3895  0441  01CB               	clrf	_Temp+4
  3896                           
  3897                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3898  0442  01CC               	clrf	_Temp+5
  3899                           
  3900                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3901  0443  01CD               	clrf	_Temp+6
  3902                           
  3903                           ;OverTemperature_B1.c: 162: }
  3904                           ;OverTemperature_B1.c: 163: }
  3905                           ;OverTemperature_B1.c: 166: } else {
  3906  0444  0008               	return
  3907  0445                     l941:	
  3908                           
  3909                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3910  0445  1C2C               	btfss	_myMain,0
  3911  0446  0008               	return
  3912                           
  3913                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3914  0447  1447               	bsf	_Temp,0
  3915  0448  0008               	return
  3916  0449                     __end_of_setTemp_Main:	
  3917                           
  3918                           	psect	text15
  3919  0D83                     __ptext15:	
  3920 ;; *************** function _Temp_Initialization *****************
  3921 ;; Defined at:
  3922 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		status,2, status,0, pclath, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3936 ;;      Params:         0       0       0       0
  3937 ;;      Locals:         0       0       0       0
  3938 ;;      Temps:          0       0       0       0
  3939 ;;      Totals:         0       0       0       0
  3940 ;;Total ram usage:        0 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    4
  3943 ;; This function calls:
  3944 ;;		_setTemp_Initialization
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           
  3951                           ;psect for function _Temp_Initialization
  3952  0D83                     _Temp_Initialization:	
  3953                           
  3954                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3955                           
  3956                           ;incstack = 0
  3957                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3958  0D83  158A  257E         	fcall	_setTemp_Initialization
  3959  0D85  0008               	return
  3960  0D86                     __end_of_Temp_Initialization:	
  3961                           
  3962                           	psect	text16
  3963  0D7E                     __ptext16:	
  3964 ;; *************** function _setTemp_Initialization *****************
  3965 ;; Defined at:
  3966 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;		None               void
  3973 ;; Registers used:
  3974 ;;		None
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3980 ;;      Params:         0       0       0       0
  3981 ;;      Locals:         0       0       0       0
  3982 ;;      Temps:          0       0       0       0
  3983 ;;      Totals:         0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    3
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_Temp_Initialization
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function _setTemp_Initialization
  3996  0D7E                     _setTemp_Initialization:	
  3997                           
  3998                           ;incstack = 0
  3999                           ; Regs used in _setTemp_Initialization: []
  4000  0D7E  0008               	return
  4001  0D7F                     __end_of_setTemp_Initialization:	
  4002                           
  4003                           	psect	text17
  4004  0027                     __ptext17:	
  4005 ;; *************** function _PIR_Main *****************
  4006 ;; Defined at:
  4007 ;;		line 13 in file "../src/PIR_B1.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  LightsStatus    1   16[BANK0 ] unsigned char 
  4012 ;;  cds             1   15[BANK0 ] unsigned char 
  4013 ;;  TriggerValue    1   14[BANK0 ] unsigned char 
  4014 ;;  Enable_Switc    1   11[BANK0 ] unsigned char 
  4015 ;;  error           1   10[BANK0 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;		None               void
  4018 ;; Registers used:
  4019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4025 ;;      Params:         0       0       0       0
  4026 ;;      Locals:         0       7       0       0
  4027 ;;      Temps:          0       5       0       0
  4028 ;;      Totals:         0      12       0       0
  4029 ;;Total ram usage:       12 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    5
  4032 ;; This function calls:
  4033 ;;		_getCDS_Status
  4034 ;;		_getDimmerLights_Status
  4035 ;;		_getMain_All_Error_Status
  4036 ;;		_setLED
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function _PIR_Main
  4044  0027                     _PIR_Main:	
  4045                           
  4046                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4050  0027  3000               	movlw	0
  4051  0028  158A  2731  118A   	fcall	_getMain_All_Error_Status
  4052  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4053  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4054  002D  00DF               	movwf	??_PIR_Main
  4055  002E  085F               	movf	??_PIR_Main,w
  4056  002F  00E4               	movwf	PIR_Main@error
  4057                           
  4058                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4059  0030  158A  25B2  118A   	fcall	_getCDS_Status
  4060  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0035  00DF               	movwf	??_PIR_Main
  4063  0036  085F               	movf	??_PIR_Main,w
  4064  0037  00E9               	movwf	PIR_Main@cds
  4065                           
  4066                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4067  0038  01EA               	clrf	PIR_Main@LightsStatus
  4068                           
  4069                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4070  0039  01E5               	clrf	PIR_Main@Enable_Switch
  4071  003A  0AE5               	incf	PIR_Main@Enable_Switch,f
  4072                           
  4073                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4074  003B  01E8               	clrf	PIR_Main@TriggerValue
  4075                           
  4076                           ;PIR_B1.c: 31: LightsStatus = getDimmerLights_Status(1);
  4077  003C  3001               	movlw	1
  4078  003D  158A  2651  118A   	fcall	_getDimmerLights_Status
  4079  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0042  00DF               	movwf	??_PIR_Main
  4082  0043  085F               	movf	??_PIR_Main,w
  4083  0044  00EA               	movwf	PIR_Main@LightsStatus
  4084                           
  4085                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4086  0045  1683               	bsf	3,5	;RP0=1, select bank1
  4087  0046  1303               	bcf	3,6	;RP1=0, select bank1
  4088  0047  1C20               	btfss	__PIR^(0+128),0
  4089  0048  29FD               	goto	l1017
  4090                           
  4091                           ;PIR_B1.c: 36: if (error == 0) {
  4092  0049  1283               	bcf	3,5	;RP0=0, select bank0
  4093  004A  1303               	bcf	3,6	;RP1=0, select bank0
  4094  004B  08E4               	movf	PIR_Main@error,f
  4095  004C  1D03               	skipz
  4096  004D  2889               	goto	l1018
  4097                           
  4098                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4099  004E  0869               	movf	PIR_Main@cds,w
  4100  004F  3A01               	xorlw	1
  4101  0050  1D03               	skipz
  4102  0051  285A               	goto	l1019
  4103  0052  0865               	movf	PIR_Main@Enable_Switch,w
  4104  0053  3A01               	xorlw	1
  4105  0054  1D03               	skipz
  4106  0055  285A               	goto	l1019
  4107                           
  4108                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4109  0056  1683               	bsf	3,5	;RP0=1, select bank1
  4110  0057  1303               	bcf	3,6	;RP1=0, select bank1
  4111  0058  17A0               	bsf	__PIR^(0+128),7
  4112                           
  4113                           ;PIR_B1.c: 40: } else {
  4114  0059  2879               	goto	l1020
  4115  005A                     l1019:	
  4116                           
  4117                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4118  005A  1683               	bsf	3,5	;RP0=1, select bank1
  4119  005B  1303               	bcf	3,6	;RP1=0, select bank1
  4120  005C  13A0               	bcf	__PIR^(0+128),7
  4121                           
  4122                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4123  005D  1DA0               	btfss	__PIR^(0+128),3
  4124  005E  2879               	goto	l1020
  4125                           
  4126                           ;PIR_B1.c: 45: setLED(1, 0);
  4127  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4128  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4129  0061  01DC               	clrf	setLED@command
  4130  0062  3001               	movlw	1
  4131  0063  118A  24BA  118A   	fcall	_setLED
  4132                           
  4133                           ;PIR_B1.c: 46: setLED(2, 0);
  4134  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0068  01DC               	clrf	setLED@command
  4137  0069  3002               	movlw	2
  4138  006A  118A  24BA  118A   	fcall	_setLED
  4139                           
  4140                           ;PIR_B1.c: 59: if (getDimmerLights_Status(1) == 1) {
  4141  006D  3001               	movlw	1
  4142  006E  158A  2651  118A   	fcall	_getDimmerLights_Status
  4143  0071  3A01               	xorlw	1
  4144  0072  1D03               	skipz
  4145  0073  2879               	goto	l1020
  4146                           
  4147                           ;PIR_B1.c: 60: Dimmer.PIR_Trigger = 1;
  4148  0074  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0075  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0076  16A7               	bsf	_Dimmer,5
  4151                           
  4152                           ;PIR_B1.c: 61: Dimmer.PIR_Sw = 0;
  4153  0077  1227               	bcf	_Dimmer,4
  4154                           
  4155                           ;PIR_B1.c: 62: Dimmer.PIR_Lights_Status = 1;
  4156  0078  1528               	bsf	_Dimmer+1,2
  4157  0079                     l1020:	
  4158                           
  4159                           ;PIR_B1.c: 63: }
  4160                           ;PIR_B1.c: 67: }
  4161                           ;PIR_B1.c: 68: }
  4162                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4163  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4164  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4165  007B  1A20               	btfsc	__PIR^(0+128),4
  4166  007C  288F               	goto	l1025
  4167                           
  4168                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4169  007D  1620               	bsf	__PIR^(0+128),4
  4170                           
  4171                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4172  007E  19A0               	btfsc	__PIR^(0+128),3
  4173  007F  288F               	goto	l1025
  4174                           
  4175                           ;PIR_B1.c: 76: setLED(1, 1);
  4176  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0082  01DC               	clrf	setLED@command
  4179  0083  0ADC               	incf	setLED@command,f
  4180  0084  3001               	movlw	1
  4181  0085  118A  24BA  118A   	fcall	_setLED
  4182                           
  4183                           ;PIR_B1.c: 77: }
  4184                           ;PIR_B1.c: 80: }
  4185                           ;PIR_B1.c: 81: } else {
  4186  0088  288F               	goto	l1025
  4187  0089                     l1018:	
  4188                           
  4189                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4190  0089  1683               	bsf	3,5	;RP0=1, select bank1
  4191  008A  1303               	bcf	3,6	;RP1=0, select bank1
  4192  008B  1E20               	btfss	__PIR^(0+128),4
  4193  008C  288F               	goto	l1025
  4194                           
  4195                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4196  008D  1220               	bcf	__PIR^(0+128),4
  4197                           
  4198                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4199  008E  13A0               	bcf	__PIR^(0+128),7
  4200  008F                     l1025:	
  4201                           
  4202                           ;PIR_B1.c: 102: }
  4203                           ;PIR_B1.c: 103: }
  4204                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4205  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4206  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4207  0091  18A0               	btfsc	__PIR^(0+128),1
  4208  0092  28A2               	goto	l1027
  4209                           
  4210                           ;PIR_B1.c: 106: _PIR.Time++;
  4211  0093  3001               	movlw	1
  4212  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0096  00DF               	movwf	??_PIR_Main
  4215  0097  085F               	movf	??_PIR_Main,w
  4216  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4217  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4218  009A  07A2               	addwf	(__PIR^(0+128)+2),f
  4219                           
  4220                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4221  009B  0822               	movf	(__PIR^(0+128)+2),w
  4222  009C  3A05               	xorlw	5
  4223  009D  1D03               	skipz
  4224  009E  29A4               	goto	l4812
  4225                           
  4226                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4227  009F  01A2               	clrf	(__PIR^(0+128)+2)
  4228                           
  4229                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4230  00A0  14A0               	bsf	__PIR^(0+128),1
  4231                           
  4232                           ;PIR_B1.c: 110: }
  4233                           ;PIR_B1.c: 111: } else {
  4234  00A1  29A4               	goto	l4812
  4235  00A2                     l1027:	
  4236                           
  4237                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4238  00A2  1D20               	btfss	__PIR^(0+128),2
  4239  00A3  29A4               	goto	l4812
  4240                           
  4241                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4242  00A4  1120               	bcf	__PIR^(0+128),2
  4243                           
  4244                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4245  00A5  10A0               	bcf	__PIR^(0+128),1
  4246                           
  4247                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4248  00A6  1BA0               	btfsc	__PIR^(0+128),7
  4249                           
  4250                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4251  00A7  1DA0               	btfss	__PIR^(0+128),3
  4252  00A8  29A4               	goto	l4812
  4253                           
  4254                           ;PIR_B1.c: 118: _PIR.Time++;
  4255  00A9  3001               	movlw	1
  4256  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4257  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4258  00AC  00DF               	movwf	??_PIR_Main
  4259  00AD  085F               	movf	??_PIR_Main,w
  4260  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  4261  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  4262  00B0  07A2               	addwf	(__PIR^(0+128)+2),f
  4263                           
  4264                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4265  00B1  0822               	movf	(__PIR^(0+128)+2),w
  4266  00B2  3A3C               	xorlw	60
  4267  00B3  1D03               	skipz
  4268  00B4  28E9               	goto	l4780
  4269                           
  4270                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4271  00B5  01A2               	clrf	(__PIR^(0+128)+2)
  4272                           
  4273                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4274  00B6  305A               	movlw	90
  4275  00B7  0247               	subwf	(__PIR^(0+128)+39),w
  4276  00B8  1C03               	skipc
  4277  00B9  28C5               	goto	l4762
  4278                           
  4279                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4280  00BA  01C6               	clrf	(__PIR^(0+128)+38)
  4281                           
  4282                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4283  00BB  0848               	movf	(__PIR^(0+128)+40),w
  4284  00BC  3A19               	xorlw	25
  4285  00BD  1903               	btfsc	3,2
  4286  00BE  28DA               	goto	L11
  4287                           
  4288                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4289                           
  4290                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4291  00BF  0848               	movf	(__PIR^(0+128)+40),w
  4292  00C0  3A23               	xorlw	35
  4293  00C1  1D03               	skipz
  4294  00C2  28E8               	goto	l4778
  4295                           
  4296                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4297  00C3  302D               	movlw	45
  4298  00C4  28E1               	goto	L8
  4299  00C5                     l4762:	
  4300                           ;PIR_B1.c: 128: }
  4301                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4302                           
  4303  00C5  300B               	movlw	11
  4304  00C6  0247               	subwf	(__PIR^(0+128)+39),w
  4305  00C7  1803               	skipnc
  4306  00C8  28E8               	goto	l4778
  4307                           
  4308                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4309  00C9  3001               	movlw	1
  4310  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4311  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4312  00CC  00DF               	movwf	??_PIR_Main
  4313  00CD  085F               	movf	??_PIR_Main,w
  4314  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4315  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  4316  00D0  07C6               	addwf	(__PIR^(0+128)+38),f
  4317                           
  4318                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4319  00D1  0846               	movf	(__PIR^(0+128)+38),w
  4320  00D2  3A02               	xorlw	2
  4321  00D3  1D03               	skipz
  4322  00D4  28E8               	goto	l4778
  4323                           
  4324                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4325  00D5  01C6               	clrf	(__PIR^(0+128)+38)
  4326                           
  4327                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4328  00D6  0848               	movf	(__PIR^(0+128)+40),w
  4329  00D7  3A2D               	xorlw	45
  4330  00D8  1D03               	skipz
  4331  00D9  28DC               	goto	l4774
  4332  00DA                     L11:	
  4333                           
  4334                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4335  00DA  3023               	movlw	35
  4336  00DB  28E1               	goto	L8
  4337  00DC                     l4774:	
  4338                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4339                           
  4340  00DC  0848               	movf	(__PIR^(0+128)+40),w
  4341  00DD  3A23               	xorlw	35
  4342  00DE  1D03               	skipz
  4343  00DF  28E8               	goto	l4778
  4344                           
  4345                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4346  00E0  3019               	movlw	25
  4347  00E1                     L8:	
  4348  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4349  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4350  00E3  00DF               	movwf	??_PIR_Main
  4351  00E4  085F               	movf	??_PIR_Main,w
  4352  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4353  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  4354  00E7  00C8               	movwf	(__PIR^(0+128)+40)
  4355  00E8                     l4778:	
  4356                           
  4357                           ;PIR_B1.c: 138: }
  4358                           ;PIR_B1.c: 139: }
  4359                           ;PIR_B1.c: 140: }
  4360                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4361  00E8  01C7               	clrf	(__PIR^(0+128)+39)
  4362  00E9                     l4780:	
  4363                           
  4364                           ;PIR_B1.c: 142: }
  4365                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4366                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4367  00E9  0848               	movf	(__PIR^(0+128)+40),w
  4368  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4369  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4370  00EC  00DF               	movwf	??_PIR_Main
  4371  00ED  01E0               	clrf	??_PIR_Main+1
  4372  00EE  09DF               	comf	??_PIR_Main,f
  4373  00EF  09E0               	comf	??_PIR_Main+1,f
  4374  00F0  0ADF               	incf	??_PIR_Main,f
  4375  00F1  1903               	skipnz
  4376  00F2  0AE0               	incf	??_PIR_Main+1,f
  4377  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  4378  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  4379  00F5  0823               	movf	(__PIR^(0+128)+3),w
  4380  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4381  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4382  00F8  075F               	addwf	??_PIR_Main,w
  4383  00F9  00E1               	movwf	??_PIR_Main+2
  4384  00FA  0860               	movf	??_PIR_Main+1,w
  4385  00FB  1803               	skipnc
  4386  00FC  0A60               	incf	??_PIR_Main+1,w
  4387  00FD  00E2               	movwf	??_PIR_Main+3
  4388  00FE  0862               	movf	??_PIR_Main+3,w
  4389  00FF  3A80               	xorlw	128
  4390  0100  3C80               	sublw	128
  4391  0101  1D03               	skipz
  4392  0102  2907               	goto	u5895
  4393  0103  0861               	movf	??_PIR_Main+2,w
  4394  0104  1683               	bsf	3,5	;RP0=1, select bank1
  4395  0105  1303               	bcf	3,6	;RP1=0, select bank1
  4396  0106  0221               	subwf	(__PIR^(0+128)+1),w
  4397  0107                     u5895:	
  4398  0107  1C03               	skipc
  4399  0108  2929               	goto	l4790
  4400  0109  1683               	bsf	3,5	;RP0=1, select bank1
  4401  010A  1303               	bcf	3,6	;RP1=0, select bank1
  4402  010B  0823               	movf	(__PIR^(0+128)+3),w
  4403  010C  0748               	addwf	(__PIR^(0+128)+40),w
  4404  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4405  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4406  010F  00DF               	movwf	??_PIR_Main
  4407  0110  01E0               	clrf	??_PIR_Main+1
  4408  0111  0DE0               	rlf	??_PIR_Main+1,f
  4409  0112  0860               	movf	??_PIR_Main+1,w
  4410  0113  3A80               	xorlw	128
  4411  0114  00E1               	movwf	??_PIR_Main+2
  4412  0115  3080               	movlw	128
  4413  0116  0261               	subwf	??_PIR_Main+2,w
  4414  0117  1D03               	skipz
  4415  0118  291F               	goto	u5905
  4416  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4417  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4418  011B  0821               	movf	(__PIR^(0+128)+1),w
  4419  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4420  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4421  011E  025F               	subwf	??_PIR_Main,w
  4422  011F                     u5905:	
  4423  011F  1C03               	skipc
  4424  0120  2929               	goto	l4790
  4425                           
  4426                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4427  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4428  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4429  0123  01BE               	clrf	(__PIR^(0+128)+30)
  4430  0124  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4431                           
  4432                           ;PIR_B1.c: 155: setLED(1, 0);
  4433  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0127  01DC               	clrf	setLED@command
  4436  0128  298D               	goto	L12
  4437  0129                     l4790:	
  4438                           ;PIR_B1.c: 159: } else {
  4439                           
  4440                           ;PIR_B1.c: 156: setLED(2, 0);
  4441                           
  4442                           
  4443                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4444  0129  3001               	movlw	1
  4445  012A  1283               	bcf	3,5	;RP0=0, select bank0
  4446  012B  1303               	bcf	3,6	;RP1=0, select bank0
  4447  012C  00DF               	movwf	??_PIR_Main
  4448  012D  085F               	movf	??_PIR_Main,w
  4449  012E  1683               	bsf	3,5	;RP0=1, select bank1
  4450  012F  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0130  07C7               	addwf	(__PIR^(0+128)+39),f
  4452                           
  4453                           ;PIR_B1.c: 163: _PIR.Count++;
  4454  0131  3001               	movlw	1
  4455  0132  07BE               	addwf	(__PIR^(0+128)+30),f
  4456  0133  1803               	skipnc
  4457  0134  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4458  0135  3000               	movlw	0
  4459  0136  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4460                           
  4461                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4462  0137  1283               	bcf	3,5	;RP0=0, select bank0
  4463  0138  1303               	bcf	3,6	;RP1=0, select bank0
  4464  0139  086A               	movf	PIR_Main@LightsStatus,w
  4465  013A  3A01               	xorlw	1
  4466  013B  1903               	skipnz
  4467  013C  293D               	goto	l4798
  4468  013D                     l4798:	
  4469  013D  3003               	movlw	3
  4470  013E  00E6               	movwf	_PIR_Main$3118
  4471  013F  3000               	movlw	0
  4472  0140  00E7               	movwf	_PIR_Main$3118+1
  4473  0141  0866               	movf	_PIR_Main$3118,w
  4474  0142  00DF               	movwf	??_PIR_Main
  4475  0143  085F               	movf	??_PIR_Main,w
  4476  0144  00E8               	movwf	PIR_Main@TriggerValue
  4477                           
  4478                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4479  0145  0868               	movf	PIR_Main@TriggerValue,w
  4480  0146  00DF               	movwf	??_PIR_Main
  4481  0147  01E0               	clrf	??_PIR_Main+1
  4482  0148  1683               	bsf	3,5	;RP0=1, select bank1
  4483  0149  1303               	bcf	3,6	;RP1=0, select bank1
  4484  014A  083F               	movf	((__PIR+1)^(0+128)+30),w
  4485  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4486  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4487  014D  0660               	xorwf	??_PIR_Main+1,w
  4488  014E  1D03               	skipz
  4489  014F  2956               	goto	u5925
  4490  0150  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0151  1303               	bcf	3,6	;RP1=0, select bank1
  4492  0152  083E               	movf	(__PIR^(0+128)+30),w
  4493  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0155  065F               	xorwf	??_PIR_Main,w
  4496  0156                     u5925:	
  4497  0156  1D03               	skipz
  4498  0157  29A4               	goto	l4812
  4499                           
  4500                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4501  0158  1683               	bsf	3,5	;RP0=1, select bank1
  4502  0159  1303               	bcf	3,6	;RP1=0, select bank1
  4503  015A  01BE               	clrf	(__PIR^(0+128)+30)
  4504  015B  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4505                           
  4506                           ;PIR_B1.c: 170: _PIR.CloseTimeSeconds = 0;
  4507  015C  01C2               	clrf	(__PIR^(0+128)+34)
  4508                           
  4509                           ;PIR_B1.c: 171: _PIR.CloseTimeMinutes = 0;
  4510  015D  01C0               	clrf	(__PIR^(0+128)+32)
  4511  015E  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4512                           
  4513                           ;PIR_B1.c: 189: Dimmer.PIR_Trigger = 1;
  4514  015F  1283               	bcf	3,5	;RP0=0, select bank0
  4515  0160  1303               	bcf	3,6	;RP1=0, select bank0
  4516  0161  16A7               	bsf	_Dimmer,5
  4517                           
  4518                           ;PIR_B1.c: 190: Dimmer.PIR_Sw = 1;
  4519  0162  1627               	bsf	_Dimmer,4
  4520                           
  4521                           ;PIR_B1.c: 195: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4522  0163  1683               	bsf	3,5	;RP0=1, select bank1
  4523  0164  1303               	bcf	3,6	;RP1=0, select bank1
  4524  0165  0848               	movf	(__PIR^(0+128)+40),w
  4525  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0168  00DF               	movwf	??_PIR_Main
  4528  0169  01E0               	clrf	??_PIR_Main+1
  4529  016A  09DF               	comf	??_PIR_Main,f
  4530  016B  09E0               	comf	??_PIR_Main+1,f
  4531  016C  0ADF               	incf	??_PIR_Main,f
  4532  016D  1903               	skipnz
  4533  016E  0AE0               	incf	??_PIR_Main+1,f
  4534  016F  1683               	bsf	3,5	;RP0=1, select bank1
  4535  0170  1303               	bcf	3,6	;RP1=0, select bank1
  4536  0171  0823               	movf	(__PIR^(0+128)+3),w
  4537  0172  1283               	bcf	3,5	;RP0=0, select bank0
  4538  0173  1303               	bcf	3,6	;RP1=0, select bank0
  4539  0174  075F               	addwf	??_PIR_Main,w
  4540  0175  00E1               	movwf	??_PIR_Main+2
  4541  0176  0860               	movf	??_PIR_Main+1,w
  4542  0177  1803               	skipnc
  4543  0178  0A60               	incf	??_PIR_Main+1,w
  4544  0179  00E2               	movwf	??_PIR_Main+3
  4545  017A  0862               	movf	??_PIR_Main+3,w
  4546  017B  3A80               	xorlw	128
  4547  017C  00E3               	movwf	??_PIR_Main+4
  4548  017D  3080               	movlw	128
  4549  017E  0263               	subwf	??_PIR_Main+4,w
  4550  017F  1D03               	skipz
  4551  0180  2987               	goto	u5935
  4552  0181  1683               	bsf	3,5	;RP0=1, select bank1
  4553  0182  1303               	bcf	3,6	;RP1=0, select bank1
  4554  0183  0821               	movf	(__PIR^(0+128)+1),w
  4555  0184  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0185  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0186  0261               	subwf	??_PIR_Main+2,w
  4558  0187                     u5935:	
  4559  0187  1C03               	skipc
  4560  0188  2995               	goto	l4810
  4561                           
  4562                           ;PIR_B1.c: 196: setLED(1, 1);
  4563  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4564  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4565  018B  01DC               	clrf	setLED@command
  4566  018C  0ADC               	incf	setLED@command,f
  4567  018D                     L12:	
  4568  018D  3001               	movlw	1
  4569  018E  118A  24BA  118A   	fcall	_setLED
  4570                           
  4571                           ;PIR_B1.c: 197: setLED(2, 0);
  4572  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0193  01DC               	clrf	setLED@command
  4575  0194  29A0               	goto	L9
  4576  0195                     l4810:	
  4577                           ;PIR_B1.c: 198: } else {
  4578                           
  4579                           
  4580                           ;PIR_B1.c: 199: setLED(1, 0);
  4581  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4582  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4583  0197  01DC               	clrf	setLED@command
  4584  0198  3001               	movlw	1
  4585  0199  118A  24BA  118A   	fcall	_setLED
  4586                           
  4587                           ;PIR_B1.c: 200: setLED(2, 1);
  4588  019C  1283               	bcf	3,5	;RP0=0, select bank0
  4589  019D  1303               	bcf	3,6	;RP1=0, select bank0
  4590  019E  01DC               	clrf	setLED@command
  4591  019F  0ADC               	incf	setLED@command,f
  4592  01A0                     L9:	
  4593  01A0  3002               	movlw	2
  4594  01A1  118A  24BA  118A   	fcall	_setLED
  4595  01A4                     l4812:	
  4596                           
  4597                           ;PIR_B1.c: 201: }
  4598                           ;PIR_B1.c: 243: }
  4599                           ;PIR_B1.c: 244: }
  4600                           ;PIR_B1.c: 245: }
  4601                           ;PIR_B1.c: 246: }
  4602                           ;PIR_B1.c: 247: }
  4603                           ;PIR_B1.c: 248: }
  4604                           ;PIR_B1.c: 249: if (_PIR.OK == 0) {
  4605  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4606  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  4607  01A6  19A0               	btfsc	__PIR^(0+128),3
  4608  01A7  29D1               	goto	l4828
  4609                           
  4610                           ;PIR_B1.c: 250: _PIR.Count++;
  4611  01A8  3001               	movlw	1
  4612  01A9  07BE               	addwf	(__PIR^(0+128)+30),f
  4613  01AA  1803               	skipnc
  4614  01AB  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4615  01AC  3000               	movlw	0
  4616  01AD  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4617                           
  4618                           ;PIR_B1.c: 251: if (_PIR.Count == (30000 / 20)) {
  4619  01AE  3005               	movlw	5
  4620  01AF  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4621  01B0  1D03               	skipz
  4622  01B1  29B4               	goto	u5955
  4623  01B2  30DC               	movlw	220
  4624  01B3  063E               	xorwf	(__PIR^(0+128)+30),w
  4625  01B4                     u5955:	
  4626  01B4  1D03               	skipz
  4627  01B5  0008               	return
  4628                           
  4629                           ;PIR_B1.c: 252: _PIR.Count = 0;
  4630  01B6  01BE               	clrf	(__PIR^(0+128)+30)
  4631  01B7  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4632                           
  4633                           ;PIR_B1.c: 253: _PIR.OK = 1;
  4634  01B8  15A0               	bsf	__PIR^(0+128),3
  4635                           
  4636                           ;PIR_B1.c: 255: setLED(1, 0);
  4637  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4638  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  4639  01BB  01DC               	clrf	setLED@command
  4640  01BC  3001               	movlw	1
  4641  01BD  118A  24BA  118A   	fcall	_setLED
  4642                           
  4643                           ;PIR_B1.c: 258: if (cds == 0) {
  4644  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  4645  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  4646  01C2  08E9               	movf	PIR_Main@cds,f
  4647  01C3  1D03               	skipz
  4648  01C4  0008               	return
  4649                           
  4650                           ;PIR_B1.c: 270: if (getDimmerLights_Status(1) == 1) {
  4651  01C5  3001               	movlw	1
  4652  01C6  158A  2651  118A   	fcall	_getDimmerLights_Status
  4653  01C9  3A01               	xorlw	1
  4654  01CA  1D03               	skipz
  4655  01CB  0008               	return
  4656                           
  4657                           ;PIR_B1.c: 271: Dimmer.PIR_Trigger = 1;
  4658  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4659  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  4660  01CE  16A7               	bsf	_Dimmer,5
  4661                           
  4662                           ;PIR_B1.c: 272: Dimmer.PIR_Sw = 0;
  4663  01CF  1227               	bcf	_Dimmer,4
  4664                           
  4665                           ;PIR_B1.c: 273: }
  4666                           ;PIR_B1.c: 277: }
  4667                           ;PIR_B1.c: 278: }
  4668                           ;PIR_B1.c: 279: } else {
  4669  01D0  0008               	return
  4670  01D1                     l4828:	
  4671                           
  4672                           ;PIR_B1.c: 280: if (LightsStatus == 1) {
  4673  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4674  01D2  086A               	movf	PIR_Main@LightsStatus,w
  4675  01D3  3A01               	xorlw	1
  4676  01D4  1D03               	skipz
  4677  01D5  0008               	return
  4678                           
  4679                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds++;
  4680  01D6  3001               	movlw	1
  4681  01D7  00DF               	movwf	??_PIR_Main
  4682  01D8  085F               	movf	??_PIR_Main,w
  4683  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  4684  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  4685  01DB  07C2               	addwf	(__PIR^(0+128)+34),f
  4686                           
  4687                           ;PIR_B1.c: 282: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4688  01DC  0842               	movf	(__PIR^(0+128)+34),w
  4689  01DD  3A32               	xorlw	50
  4690  01DE  1D03               	skipz
  4691  01DF  0008               	return
  4692                           
  4693                           ;PIR_B1.c: 283: _PIR.CloseTimeSeconds = 0;
  4694  01E0  01C2               	clrf	(__PIR^(0+128)+34)
  4695                           
  4696                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes++;
  4697  01E1  3001               	movlw	1
  4698  01E2  07C0               	addwf	(__PIR^(0+128)+32),f
  4699  01E3  1803               	skipnc
  4700  01E4  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4701  01E5  3000               	movlw	0
  4702  01E6  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4703                           
  4704                           ;PIR_B1.c: 285: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4705  01E7  0844               	movf	((__PIR+1)^(0+128)+35),w
  4706  01E8  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4707  01E9  1D03               	skipz
  4708  01EA  29ED               	goto	u6005
  4709  01EB  0843               	movf	(__PIR^(0+128)+35),w
  4710  01EC  0640               	xorwf	(__PIR^(0+128)+32),w
  4711  01ED                     u6005:	
  4712  01ED  1D03               	skipz
  4713  01EE  0008               	return
  4714                           
  4715                           ;PIR_B1.c: 286: _PIR.CloseTimeMinutes = 0;
  4716  01EF  01C0               	clrf	(__PIR^(0+128)+32)
  4717  01F0  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4718                           
  4719                           ;PIR_B1.c: 302: if (getDimmerLights_Status(1) == 1) {
  4720  01F1  3001               	movlw	1
  4721  01F2  158A  2651  118A   	fcall	_getDimmerLights_Status
  4722  01F5  3A01               	xorlw	1
  4723  01F6  1D03               	skipz
  4724  01F7  0008               	return
  4725                           
  4726                           ;PIR_B1.c: 303: Dimmer.PIR_Trigger = 1;
  4727  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  4728  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  4729  01FA  16A7               	bsf	_Dimmer,5
  4730                           
  4731                           ;PIR_B1.c: 304: Dimmer.PIR_Sw = 0;
  4732  01FB  1227               	bcf	_Dimmer,4
  4733                           
  4734                           ;PIR_B1.c: 305: }
  4735                           ;PIR_B1.c: 308: }
  4736                           ;PIR_B1.c: 309: }
  4737                           ;PIR_B1.c: 310: }
  4738                           ;PIR_B1.c: 311: }
  4739                           ;PIR_B1.c: 312: } else {
  4740  01FC  0008               	return
  4741  01FD                     l1017:	
  4742                           
  4743                           ;PIR_B1.c: 313: if (myMain.PowerON == 1) {
  4744  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4745  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4746  01FF  1C2C               	btfss	_myMain,0
  4747  0200  0008               	return
  4748                           
  4749                           ;PIR_B1.c: 314: _PIR.Enable = 1;
  4750  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4751  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4752  0203  1420               	bsf	__PIR^(0+128),0
  4753                           
  4754                           ;PIR_B1.c: 316: setLED(1, 1);
  4755  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0206  01DC               	clrf	setLED@command
  4758  0207  0ADC               	incf	setLED@command,f
  4759  0208  3001               	movlw	1
  4760  0209  118A  24BA         	fcall	_setLED
  4761                           
  4762                           ;PIR_B1.c: 331: Dimmer.PIR_Trigger = 1;
  4763  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4764  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4765  020D  16A7               	bsf	_Dimmer,5
  4766                           
  4767                           ;PIR_B1.c: 332: Dimmer.PIR_Sw = 1;
  4768  020E  1627               	bsf	_Dimmer,4
  4769  020F  0008               	return
  4770  0210                     __end_of_PIR_Main:	
  4771                           
  4772                           	psect	text18
  4773  0DB2                     __ptext18:	
  4774 ;; *************** function _getCDS_Status *****************
  4775 ;; Defined at:
  4776 ;;		line 42 in file "../src/CDS_B1.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  status          1    0[BANK0 ] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      unsigned char 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4790 ;;      Params:         0       0       0       0
  4791 ;;      Locals:         0       1       0       0
  4792 ;;      Temps:          0       0       0       0
  4793 ;;      Totals:         0       1       0       0
  4794 ;;Total ram usage:        1 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    3
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_PIR_Main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           
  4805                           ;psect for function _getCDS_Status
  4806  0DB2                     _getCDS_Status:	
  4807                           
  4808                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4809                           
  4810                           ;incstack = 0
  4811                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4812  0DB2  3000               	movlw	0
  4813  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  4814  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  4815  0DB5  1A35               	btfsc	__CDS,4
  4816  0DB6  3001               	movlw	1
  4817  0DB7  00DA               	movwf	getCDS_Status@status
  4818                           
  4819                           ;CDS_B1.c: 44: return status;
  4820  0DB8  085A               	movf	getCDS_Status@status,w
  4821  0DB9  0008               	return
  4822  0DBA                     __end_of_getCDS_Status:	
  4823                           
  4824                           	psect	text19
  4825  0DFB                     __ptext19:	
  4826 ;; *************** function _PIR_Initialization *****************
  4827 ;; Defined at:
  4828 ;;		line 7 in file "../src/PIR_B1.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;		None               void
  4835 ;; Registers used:
  4836 ;;		wreg
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4842 ;;      Params:         0       0       0       0
  4843 ;;      Locals:         0       0       0       0
  4844 ;;      Temps:          0       1       0       0
  4845 ;;      Totals:         0       1       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    3
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _PIR_Initialization
  4858  0DFB                     _PIR_Initialization:	
  4859                           
  4860                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _PIR_Initialization: [wreg]
  4864  0DFB  3019               	movlw	25
  4865  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0DFE  00DA               	movwf	??_PIR_Initialization
  4868  0DFF  085A               	movf	??_PIR_Initialization,w
  4869  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  4870  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  4871  0E02  00C8               	movwf	(__PIR^(0+128)+40)
  4872                           
  4873                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4874  0E03  3005               	movlw	5
  4875  0E04  00C3               	movwf	(__PIR^(0+128)+35)
  4876  0E05  3000               	movlw	0
  4877  0E06  00C4               	movwf	(__PIR^(0+128)+36)
  4878  0E07  0008               	return
  4879  0E08                     __end_of_PIR_Initialization:	
  4880                           
  4881                           	psect	text20
  4882  0E32                     __ptext20:	
  4883 ;; *************** function _Mcu_Initialization *****************
  4884 ;; Defined at:
  4885 ;;		line 30 in file "../src/MCU_B1.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;		None               void
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4899 ;;      Params:         0       0       0       0
  4900 ;;      Locals:         0       0       0       0
  4901 ;;      Temps:          0       0       0       0
  4902 ;;      Totals:         0       0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    4
  4906 ;; This function calls:
  4907 ;;		_ADC_Set
  4908 ;;		_Fosc_Set
  4909 ;;		_IO_Set
  4910 ;;		_TMR1_Set
  4911 ;;		_WDT_Set
  4912 ;; This function is called by:
  4913 ;;		_main
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           
  4918                           ;psect for function _Mcu_Initialization
  4919  0E32                     _Mcu_Initialization:	
  4920                           
  4921                           ;MCU_B1.c: 32: Fosc_Set();
  4922                           
  4923                           ;incstack = 0
  4924                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4925  0E32  158A  2592  158A   	fcall	_Fosc_Set
  4926                           
  4927                           ;MCU_B1.c: 34: IO_Set();
  4928  0E35  158A  2719  158A   	fcall	_IO_Set
  4929                           
  4930                           ;MCU_B1.c: 36: ;;
  4931                           ;MCU_B1.c: 38: TMR1_Set();
  4932  0E38  158A  2616  158A   	fcall	_TMR1_Set
  4933                           
  4934                           ;MCU_B1.c: 40: ADC_Set();
  4935  0E3B  158A  25AB  158A   	fcall	_ADC_Set
  4936                           
  4937                           ;MCU_B1.c: 42: ;;
  4938                           ;MCU_B1.c: 44: ;;
  4939                           ;MCU_B1.c: 46: ;;
  4940                           ;MCU_B1.c: 48: ;;
  4941                           ;MCU_B1.c: 50: ;;
  4942                           ;MCU_B1.c: 52: WDT_Set();
  4943  0E3E  158A  2624         	fcall	_WDT_Set
  4944  0E40  0008               	return
  4945  0E41                     __end_of_Mcu_Initialization:	
  4946                           
  4947                           	psect	text21
  4948  0E24                     __ptext21:	
  4949 ;; *************** function _WDT_Set *****************
  4950 ;; Defined at:
  4951 ;;		line 1089 in file "../src/MCU_B1.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;		None               void
  4958 ;; Registers used:
  4959 ;;		wreg
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4965 ;;      Params:         0       0       0       0
  4966 ;;      Locals:         0       0       0       0
  4967 ;;      Temps:          0       1       0       0
  4968 ;;      Totals:         0       1       0       0
  4969 ;;Total ram usage:        1 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    3
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_Mcu_Initialization
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _WDT_Set
  4981  0E24                     _WDT_Set:	
  4982                           
  4983                           ;MCU_B1.c: 1091: PSA = 1;
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in _WDT_Set: [wreg]
  4987  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  4988  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  4989  0E26  1581               	bsf	1,3	;volatile
  4990                           
  4991                           ;MCU_B1.c: 1092: PS0 = 1;
  4992  0E27  1401               	bsf	1,0	;volatile
  4993                           
  4994                           ;MCU_B1.c: 1093: PS1 = 1;
  4995  0E28  1481               	bsf	1,1	;volatile
  4996                           
  4997                           ;MCU_B1.c: 1094: PS2 = 1;
  4998  0E29  1501               	bsf	1,2	;volatile
  4999                           
  5000                           ;MCU_B1.c: 1098: WDT.Enable = 1;
  5001  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5002  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0E2C  143C               	bsf	_WDT,0
  5004                           
  5005                           ;MCU_B1.c: 1099: WDT.Timer = 10;
  5006  0E2D  300A               	movlw	10
  5007  0E2E  00DA               	movwf	??_WDT_Set
  5008  0E2F  085A               	movf	??_WDT_Set,w
  5009  0E30  00BD               	movwf	_WDT+1
  5010  0E31  0008               	return
  5011  0E32                     __end_of_WDT_Set:	
  5012                           
  5013                           	psect	text22
  5014  0E16                     __ptext22:	
  5015 ;; *************** function _TMR1_Set *****************
  5016 ;; Defined at:
  5017 ;;		line 226 in file "../src/MCU_B1.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;		None               void
  5024 ;; Registers used:
  5025 ;;		wreg
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5031 ;;      Params:         0       0       0       0
  5032 ;;      Locals:         0       0       0       0
  5033 ;;      Temps:          0       0       0       0
  5034 ;;      Totals:         0       0       0       0
  5035 ;;Total ram usage:        0 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    3
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_Mcu_Initialization
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _TMR1_Set
  5047  0E16                     _TMR1_Set:	
  5048                           
  5049                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5050                           
  5051                           ;incstack = 0
  5052                           ; Regs used in _TMR1_Set: [wreg]
  5053  0E16  3041               	movlw	65
  5054  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  5056  0E19  0090               	movwf	16	;volatile
  5057                           
  5058                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5059  0E1A  30FA               	movlw	250
  5060  0E1B  008F               	movwf	15	;volatile
  5061                           
  5062                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5063  0E1C  3038               	movlw	56
  5064  0E1D  008E               	movwf	14	;volatile
  5065                           
  5066                           ;MCU_B1.c: 230: TMR1IE = 1;
  5067  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  5068  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  5069  0E20  140C               	bsf	12,0	;volatile
  5070                           
  5071                           ;MCU_B1.c: 231: PEIE = 1;
  5072  0E21  170B               	bsf	11,6	;volatile
  5073                           
  5074                           ;MCU_B1.c: 232: GIE = 1;
  5075  0E22  178B               	bsf	11,7	;volatile
  5076  0E23  0008               	return
  5077  0E24                     __end_of_TMR1_Set:	
  5078                           
  5079                           	psect	text23
  5080  0F19                     __ptext23:	
  5081 ;; *************** function _IO_Set *****************
  5082 ;; Defined at:
  5083 ;;		line 60 in file "../src/MCU_B1.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;		None               void
  5090 ;; Registers used:
  5091 ;;		wreg, status,2
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5097 ;;      Params:         0       0       0       0
  5098 ;;      Locals:         0       0       0       0
  5099 ;;      Temps:          0       0       0       0
  5100 ;;      Totals:         0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    3
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_Mcu_Initialization
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _IO_Set
  5113  0F19                     _IO_Set:	
  5114                           
  5115                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _IO_Set: [wreg+status,2]
  5119  0F19  30AF               	movlw	175
  5120  0F1A  1683               	bsf	3,5	;RP0=1, select bank1
  5121  0F1B  1303               	bcf	3,6	;RP1=0, select bank1
  5122  0F1C  0085               	movwf	5	;volatile
  5123                           
  5124                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5125  0F1D  3001               	movlw	1
  5126  0F1E  0086               	movwf	6	;volatile
  5127                           
  5128                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5129  0F1F  0187               	clrf	7	;volatile
  5130                           
  5131                           ;MCU_B1.c: 65: ANSELA = 0b10100111;;
  5132  0F20  30A7               	movlw	167
  5133  0F21  1683               	bsf	3,5	;RP0=1, select bank3
  5134  0F22  1703               	bsf	3,6	;RP1=1, select bank3
  5135  0F23  0085               	movwf	5	;volatile
  5136                           
  5137                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5138  0F24  3001               	movlw	1
  5139  0F25  0086               	movwf	6	;volatile
  5140                           
  5141                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5142  0F26  30AF               	movlw	175
  5143  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0F29  0085               	movwf	5	;volatile
  5146                           
  5147                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5148  0F2A  3001               	movlw	1
  5149  0F2B  0086               	movwf	6	;volatile
  5150                           
  5151                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5152  0F2C  0187               	clrf	7	;volatile
  5153                           
  5154                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5155  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  5156  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  5157  0F2F  0195               	clrf	21	;volatile
  5158  0F30  0008               	return
  5159  0F31                     __end_of_IO_Set:	
  5160                           
  5161                           	psect	text24
  5162  0D92                     __ptext24:	
  5163 ;; *************** function _Fosc_Set *****************
  5164 ;; Defined at:
  5165 ;;		line 56 in file "../src/MCU_B1.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;		None               void
  5172 ;; Registers used:
  5173 ;;		wreg
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5179 ;;      Params:         0       0       0       0
  5180 ;;      Locals:         0       0       0       0
  5181 ;;      Temps:          0       0       0       0
  5182 ;;      Totals:         0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    3
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_Mcu_Initialization
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _Fosc_Set
  5195  0D92                     _Fosc_Set:	
  5196                           
  5197                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _Fosc_Set: [wreg]
  5201  0D92  303C               	movlw	60
  5202  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  5203  0D94  1303               	bcf	3,6	;RP1=0, select bank1
  5204  0D95  0090               	movwf	16	;volatile
  5205  0D96  0008               	return
  5206  0D97                     __end_of_Fosc_Set:	
  5207                           
  5208                           	psect	text25
  5209  0DAB                     __ptext25:	
  5210 ;; *************** function _ADC_Set *****************
  5211 ;; Defined at:
  5212 ;;		line 425 in file "../src/MCU_B1.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;		None               void
  5219 ;; Registers used:
  5220 ;;		wreg
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5226 ;;      Params:         0       0       0       0
  5227 ;;      Locals:         0       0       0       0
  5228 ;;      Temps:          0       0       0       0
  5229 ;;      Totals:         0       0       0       0
  5230 ;;Total ram usage:        0 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:    3
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_Mcu_Initialization
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _ADC_Set
  5242  0DAB                     _ADC_Set:	
  5243                           
  5244                           ;MCU_B1.c: 426: ADCON1 = 0x73;
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in _ADC_Set: [wreg]
  5248  0DAB  3073               	movlw	115
  5249  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  5250  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  5251  0DAE  009F               	movwf	31	;volatile
  5252                           
  5253                           ;MCU_B1.c: 427: FVRCON = 0xc1;
  5254  0DAF  30C1               	movlw	193
  5255  0DB0  009D               	movwf	29	;volatile
  5256  0DB1  0008               	return
  5257  0DB2                     __end_of_ADC_Set:	
  5258                           
  5259                           	psect	text26
  5260  0D80                     __ptext26:	
  5261 ;; *************** function _LED_Main *****************
  5262 ;; Defined at:
  5263 ;;		line 47 in file "../src/LED_B1.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;		None               void
  5270 ;; Registers used:
  5271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5277 ;;      Params:         0       0       0       0
  5278 ;;      Locals:         0       0       0       0
  5279 ;;      Temps:          0       0       0       0
  5280 ;;      Totals:         0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    6
  5284 ;; This function calls:
  5285 ;;		_setPIRLED_Main
  5286 ;; This function is called by:
  5287 ;;		_main
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _LED_Main
  5293  0D80                     _LED_Main:	
  5294                           
  5295                           ;LED_B1.c: 55: setPIRLED_Main();
  5296                           
  5297                           ;incstack = 0
  5298                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5299  0D80  118A  2449         	fcall	_setPIRLED_Main
  5300  0D82  0008               	return
  5301  0D83                     __end_of_LED_Main:	
  5302                           
  5303                           	psect	text27
  5304  0449                     __ptext27:	
  5305 ;; *************** function _setPIRLED_Main *****************
  5306 ;; Defined at:
  5307 ;;		line 265 in file "../src/LED_B1.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;		None
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  count           1    5[BANK0 ] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;		None               void
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5321 ;;      Params:         0       0       0       0
  5322 ;;      Locals:         0       1       0       0
  5323 ;;      Temps:          0       1       0       0
  5324 ;;      Totals:         0       2       0       0
  5325 ;;Total ram usage:        2 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    5
  5328 ;; This function calls:
  5329 ;;		_setLED
  5330 ;; This function is called by:
  5331 ;;		_LED_Main
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           
  5336                           ;psect for function _setPIRLED_Main
  5337  0449                     _setPIRLED_Main:	
  5338                           
  5339                           ;LED_B1.c: 267: char count;
  5340                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  5341                           
  5342                           ;incstack = 0
  5343                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5344  0449  1283               	bcf	3,5	;RP0=0, select bank0
  5345  044A  1303               	bcf	3,6	;RP1=0, select bank0
  5346  044B  1C31               	btfss	_PIRLED,0
  5347  044C  0008               	return
  5348                           
  5349                           ;LED_B1.c: 269: PIRLED.Time++;
  5350  044D  3001               	movlw	1
  5351  044E  07B3               	addwf	_PIRLED+2,f
  5352  044F  1803               	skipnc
  5353  0450  0AB4               	incf	_PIRLED+3,f
  5354  0451  3000               	movlw	0
  5355  0452  07B4               	addwf	_PIRLED+3,f
  5356                           
  5357                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  5358  0453  3000               	movlw	0
  5359  0454  0234               	subwf	_PIRLED+3,w
  5360  0455  3019               	movlw	25
  5361  0456  1903               	skipnz
  5362  0457  0233               	subwf	_PIRLED+2,w
  5363  0458  1C03               	skipc
  5364  0459  0008               	return
  5365                           
  5366                           ;LED_B1.c: 271: PIRLED.Time = 0;
  5367  045A  01B3               	clrf	_PIRLED+2
  5368  045B  01B4               	clrf	_PIRLED+3
  5369                           
  5370                           ;LED_B1.c: 272: setLED(1, 0);
  5371  045C  01DC               	clrf	setLED@command
  5372  045D  3001               	movlw	1
  5373  045E  118A  24BA  118A   	fcall	_setLED
  5374                           
  5375                           ;LED_B1.c: 273: setLED(2, 0);
  5376  0461  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0462  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0463  01DC               	clrf	setLED@command
  5379  0464  3002               	movlw	2
  5380  0465  118A  24BA  118A   	fcall	_setLED
  5381                           
  5382                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  5383  0468  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0469  1303               	bcf	3,6	;RP1=0, select bank0
  5385  046A  1CB1               	btfss	_PIRLED,1
  5386  046B  2C70               	goto	l4340
  5387                           
  5388                           ;LED_B1.c: 275: count = 4;
  5389  046C  3004               	movlw	4
  5390  046D  00DE               	movwf	??_setPIRLED_Main
  5391  046E  085E               	movf	??_setPIRLED_Main,w
  5392  046F  00DF               	movwf	setPIRLED_Main@count
  5393  0470                     l4340:	
  5394                           
  5395                           ;LED_B1.c: 276: }
  5396                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  5397  0470  1D31               	btfss	_PIRLED,2
  5398  0471  2C76               	goto	l4344
  5399                           
  5400                           ;LED_B1.c: 278: count = 6;
  5401  0472  3006               	movlw	6
  5402  0473  00DE               	movwf	??_setPIRLED_Main
  5403  0474  085E               	movf	??_setPIRLED_Main,w
  5404  0475  00DF               	movwf	setPIRLED_Main@count
  5405  0476                     l4344:	
  5406                           
  5407                           ;LED_B1.c: 279: }
  5408                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  5409  0476  1DB1               	btfss	_PIRLED,3
  5410  0477  2C7C               	goto	l4348
  5411                           
  5412                           ;LED_B1.c: 281: count = 8;
  5413  0478  3008               	movlw	8
  5414  0479  00DE               	movwf	??_setPIRLED_Main
  5415  047A  085E               	movf	??_setPIRLED_Main,w
  5416  047B  00DF               	movwf	setPIRLED_Main@count
  5417  047C                     l4348:	
  5418                           
  5419                           ;LED_B1.c: 282: }
  5420                           ;LED_B1.c: 283: PIRLED.Count++;
  5421  047C  3001               	movlw	1
  5422  047D  00DE               	movwf	??_setPIRLED_Main
  5423  047E  085E               	movf	??_setPIRLED_Main,w
  5424  047F  07B2               	addwf	_PIRLED+1,f
  5425                           
  5426                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5427  0480  0832               	movf	_PIRLED+1,w
  5428  0481  3A01               	xorlw	1
  5429  0482  1903               	skipnz
  5430  0483  2C88               	goto	l4354
  5431  0484  0832               	movf	_PIRLED+1,w
  5432  0485  3A02               	xorlw	2
  5433  0486  1D03               	skipz
  5434  0487  2C9C               	goto	l4358
  5435  0488                     l4354:	
  5436                           
  5437                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5438  0488  1003               	clrc
  5439  0489  1E31               	btfss	_PIRLED,4
  5440  048A  1403               	setc
  5441  048B  1C03               	btfss	3,0
  5442  048C  2C91               	goto	u5010
  5443  048D  1283               	bcf	3,5	;RP0=0, select bank0
  5444  048E  1303               	bcf	3,6	;RP1=0, select bank0
  5445  048F  1631               	bsf	_PIRLED,4
  5446  0490  2C94               	goto	l4356
  5447  0491                     u5010:	
  5448  0491  1283               	bcf	3,5	;RP0=0, select bank0
  5449  0492  1303               	bcf	3,6	;RP1=0, select bank0
  5450  0493  1231               	bcf	_PIRLED,4
  5451  0494                     l4356:	
  5452                           
  5453                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  5454  0494  3000               	movlw	0
  5455  0495  1A31               	btfsc	_PIRLED,4
  5456  0496  3001               	movlw	1
  5457  0497  00DC               	movwf	setLED@command
  5458  0498  3002               	movlw	2
  5459  0499  118A  24BA         	fcall	_setLED
  5460                           
  5461                           ;LED_B1.c: 287: } else {
  5462  049B  0008               	return
  5463  049C                     l4358:	
  5464                           
  5465                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5466  049C  1003               	clrc
  5467  049D  1283               	bcf	3,5	;RP0=0, select bank0
  5468  049E  1303               	bcf	3,6	;RP1=0, select bank0
  5469  049F  1E31               	btfss	_PIRLED,4
  5470  04A0  1403               	setc
  5471  04A1  1C03               	btfss	3,0
  5472  04A2  2CA7               	goto	u5030
  5473  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  5474  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  5475  04A5  1631               	bsf	_PIRLED,4
  5476  04A6  2CAA               	goto	l4360
  5477  04A7                     u5030:	
  5478  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  5479  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  5480  04A9  1231               	bcf	_PIRLED,4
  5481  04AA                     l4360:	
  5482                           
  5483                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  5484  04AA  3000               	movlw	0
  5485  04AB  1A31               	btfsc	_PIRLED,4
  5486  04AC  3001               	movlw	1
  5487  04AD  00DC               	movwf	setLED@command
  5488  04AE  3001               	movlw	1
  5489  04AF  118A  24BA  118A   	fcall	_setLED
  5490                           
  5491                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  5492  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  5493  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  5494  04B4  0832               	movf	_PIRLED+1,w
  5495  04B5  065F               	xorwf	setPIRLED_Main@count,w
  5496  04B6  1D03               	skipz
  5497  04B7  0008               	return
  5498                           
  5499                           ;LED_B1.c: 291: PIRLED.Count = 0;
  5500  04B8  01B2               	clrf	_PIRLED+1
  5501  04B9  0008               	return
  5502  04BA                     __end_of_setPIRLED_Main:	
  5503                           
  5504                           	psect	text28
  5505  0DEF                     __ptext28:	
  5506 ;; *************** function _LED_Initialization *****************
  5507 ;; Defined at:
  5508 ;;		line 31 in file "../src/LED_B1.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;		None               void
  5515 ;; Registers used:
  5516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5522 ;;      Params:         0       0       0       0
  5523 ;;      Locals:         0       0       0       0
  5524 ;;      Temps:          0       0       0       0
  5525 ;;      Totals:         0       0       0       0
  5526 ;;Total ram usage:        0 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    6
  5529 ;; This function calls:
  5530 ;;		_setLED_Initialization
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function _LED_Initialization
  5538  0DEF                     _LED_Initialization:	
  5539                           
  5540                           ;LED_B1.c: 33: setLED_Initialization(1);
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5544  0DEF  3001               	movlw	1
  5545  0DF0  118A  27EE  158A   	fcall	_setLED_Initialization
  5546                           
  5547                           ;LED_B1.c: 36: setLED_Initialization(2);
  5548  0DF3  3002               	movlw	2
  5549  0DF4  118A  27EE  158A   	fcall	_setLED_Initialization
  5550                           
  5551                           ;LED_B1.c: 42: setLED_Initialization(99);
  5552  0DF7  3063               	movlw	99
  5553  0DF8  118A  27EE         	fcall	_setLED_Initialization
  5554  0DFA  0008               	return
  5555  0DFB                     __end_of_LED_Initialization:	
  5556                           
  5557                           	psect	text29
  5558  07EE                     __ptext29:	
  5559 ;; *************** function _setLED_Initialization *****************
  5560 ;; Defined at:
  5561 ;;		line 74 in file "../src/LED_B1.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  led             1    wreg     unsigned char 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  led             1    4[BANK0 ] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;		None               void
  5568 ;; Registers used:
  5569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5575 ;;      Params:         0       0       0       0
  5576 ;;      Locals:         0       1       0       0
  5577 ;;      Temps:          0       0       0       0
  5578 ;;      Totals:         0       1       0       0
  5579 ;;Total ram usage:        1 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    5
  5582 ;; This function calls:
  5583 ;;		_LedPointSelect
  5584 ;;		_setLED
  5585 ;; This function is called by:
  5586 ;;		_LED_Initialization
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function _setLED_Initialization
  5592  07EE                     _setLED_Initialization:	
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5596                           ;setLED_Initialization@led stored from wreg
  5597  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  5598  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  5599  07F0  00DE               	movwf	setLED_Initialization@led
  5600                           
  5601                           ;LED_B1.c: 75: LedPointSelect(led);
  5602  07F1  085E               	movf	setLED_Initialization@led,w
  5603  07F2  158A  2765  118A   	fcall	_LedPointSelect
  5604                           
  5605                           ;LED_B1.c: 76: LED->Enable = 1;
  5606  07F5  0873               	movf	_LED,w
  5607  07F6  0084               	movwf	4
  5608  07F7  1383               	bcf	3,7	;select IRP bank0
  5609  07F8  1400               	bsf	0,0
  5610                           
  5611                           ;LED_B1.c: 77: setLED(led, 0);
  5612  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  5613  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  5614  07FB  01DC               	clrf	setLED@command
  5615  07FC  085E               	movf	setLED_Initialization@led,w
  5616  07FD  118A  24BA         	fcall	_setLED
  5617  07FF  0008               	return
  5618  0800                     __end_of_setLED_Initialization:	
  5619                           
  5620                           	psect	text30
  5621  0690                     __ptext30:	
  5622 ;; *************** function _Exception_Main *****************
  5623 ;; Defined at:
  5624 ;;		line 499 in file "../src/Main_B1.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  error           1    9[BANK0 ] unsigned char 
  5629 ;;  status          1    8[BANK0 ] unsigned char 
  5630 ;;  count           1    7[BANK0 ] unsigned char 
  5631 ;;  lights          1    6[BANK0 ] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;		None               void
  5634 ;; Registers used:
  5635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5641 ;;      Params:         0       0       0       0
  5642 ;;      Locals:         0       4       0       0
  5643 ;;      Temps:          0       1       0       0
  5644 ;;      Totals:         0       5       0       0
  5645 ;;Total ram usage:        5 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    5
  5648 ;; This function calls:
  5649 ;;		_getDimmerLights_Status
  5650 ;;		_getMain_All_Error_Status
  5651 ;;		_setLED
  5652 ;; This function is called by:
  5653 ;;		_main
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           
  5658                           ;psect for function _Exception_Main
  5659  0690                     _Exception_Main:	
  5660                           
  5661                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  5662                           
  5663                           ;incstack = 0
  5664                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5665  0690  3000               	movlw	0
  5666  0691  158A  2731  118A   	fcall	_getMain_All_Error_Status
  5667  0694  1283               	bcf	3,5	;RP0=0, select bank0
  5668  0695  1303               	bcf	3,6	;RP1=0, select bank0
  5669  0696  00DF               	movwf	??_Exception_Main
  5670  0697  085F               	movf	??_Exception_Main,w
  5671  0698  00E3               	movwf	Exception_Main@error
  5672                           
  5673                           ;Main_B1.c: 501: char lights = 0, count = 1;
  5674  0699  01E0               	clrf	Exception_Main@lights
  5675  069A  01E1               	clrf	Exception_Main@count
  5676  069B  0AE1               	incf	Exception_Main@count,f
  5677                           
  5678                           ;Main_B1.c: 502: char status = 0;
  5679  069C  01E2               	clrf	Exception_Main@status
  5680                           
  5681                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  5682  069D  1DAE               	btfss	_myMain+2,3
  5683  069E  2EAB               	goto	l4870
  5684                           
  5685                           ;Main_B1.c: 505: if (error == 0) {
  5686  069F  08E3               	movf	Exception_Main@error,f
  5687  06A0  1D03               	skipz
  5688  06A1  0008               	return
  5689                           
  5690                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  5691  06A2  11AE               	bcf	_myMain+2,3
  5692                           
  5693                           ;Main_B1.c: 511: setLED(error, 110);
  5694  06A3  306E               	movlw	110
  5695  06A4  00DF               	movwf	??_Exception_Main
  5696  06A5  085F               	movf	??_Exception_Main,w
  5697  06A6  00DC               	movwf	setLED@command
  5698  06A7  0863               	movf	Exception_Main@error,w
  5699  06A8  118A  24BA         	fcall	_setLED
  5700                           
  5701                           ;Main_B1.c: 522: }
  5702                           ;Main_B1.c: 523: } else {
  5703  06AA  0008               	return
  5704  06AB                     l4870:	
  5705                           
  5706                           ;Main_B1.c: 524: if (error != 0) {
  5707  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  5708  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  5709  06AD  0863               	movf	Exception_Main@error,w
  5710  06AE  1903               	btfsc	3,2
  5711  06AF  0008               	return
  5712                           
  5713                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  5714  06B0  15AE               	bsf	_myMain+2,3
  5715                           
  5716                           ;Main_B1.c: 529: setLED(error, 111);
  5717  06B1  306F               	movlw	111
  5718  06B2  00DF               	movwf	??_Exception_Main
  5719  06B3  085F               	movf	??_Exception_Main,w
  5720  06B4  00DC               	movwf	setLED@command
  5721  06B5  0863               	movf	Exception_Main@error,w
  5722  06B6  118A  24BA  118A   	fcall	_setLED
  5723                           
  5724                           ;Main_B1.c: 538: switch (error) {
  5725  06B9  2EC8               	goto	l4882
  5726  06BA                     l4876:	
  5727                           ;Main_B1.c: 539: case 2:
  5728                           
  5729                           
  5730                           ;Main_B1.c: 542: if (getDimmerLights_Status(1) == 1) {
  5731  06BA  3001               	movlw	1
  5732  06BB  158A  2651  118A   	fcall	_getDimmerLights_Status
  5733  06BE  3A01               	xorlw	1
  5734  06BF  1903               	btfsc	3,2
  5735  06C0  2EC4               	goto	l4878
  5736  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  5737  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  5738  06C3  0008               	return
  5739  06C4                     l4878:	
  5740                           
  5741                           ;Main_B1.c: 543: Dimmer.PIR_Close_Status = 1;
  5742  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  5743  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  5744  06C6  1428               	bsf	_Dimmer+1,0
  5745                           
  5746                           ;Main_B1.c: 586: }
  5747                           
  5748                           ;Main_B1.c: 585: break;
  5749                           
  5750                           ;Main_B1.c: 561: case 3:
  5751                           
  5752                           ;Main_B1.c: 544: }
  5753                           ;Main_B1.c: 560: break;
  5754  06C7  0008               	return
  5755  06C8                     l4882:	
  5756  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5757  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5758  06CA  0863               	movf	Exception_Main@error,w
  5759                           
  5760                           ; Switch size 1, requested type "space"
  5761                           ; Number of cases is 2, Range of values is 2 to 3
  5762                           ; switch strategies available:
  5763                           ; Name         Instructions Cycles
  5764                           ; simple_byte            7     4 (average)
  5765                           ; direct_byte           14    10 (fixed)
  5766                           ; jumptable            263     9 (fixed)
  5767                           ;	Chosen strategy is simple_byte
  5768  06CB  3A02               	xorlw	2	; case 2
  5769  06CC  1903               	skipnz
  5770  06CD  2EBA               	goto	l4876
  5771  06CE  3A01               	xorlw	1	; case 3
  5772  06CF  1903               	skipnz
  5773  06D0  2ED3               	goto	l825
  5774  06D1  2ED3               	goto	l825
  5775  06D2  0008               	return
  5776  06D3                     l825:	
  5777  06D3  0008               	return
  5778  06D4                     __end_of_Exception_Main:	
  5779                           
  5780                           	psect	text31
  5781  04BA                     __ptext31:	
  5782 ;; *************** function _setLED *****************
  5783 ;; Defined at:
  5784 ;;		line 81 in file "../src/LED_B1.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  led             1    wreg     unsigned char 
  5787 ;;  command         1    2[BANK0 ] unsigned char 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  led             1    3[BANK0 ] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;		None               void
  5792 ;; Registers used:
  5793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5799 ;;      Params:         0       1       0       0
  5800 ;;      Locals:         0       1       0       0
  5801 ;;      Temps:          0       0       0       0
  5802 ;;      Totals:         0       2       0       0
  5803 ;;Total ram usage:        2 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    4
  5806 ;; This function calls:
  5807 ;;		_LedPointSelect
  5808 ;; This function is called by:
  5809 ;;		_setLED_Initialization
  5810 ;;		_setPIRLED_Main
  5811 ;;		_Exception_Main
  5812 ;;		_PIR_Main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _setLED
  5818  04BA                     _setLED:	
  5819                           
  5820                           ;incstack = 0
  5821                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5822                           ;setLED@led stored from wreg
  5823  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  5824  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  5825  04BC  00DD               	movwf	setLED@led
  5826                           
  5827                           ;LED_B1.c: 82: LedPointSelect(led);
  5828  04BD  085D               	movf	setLED@led,w
  5829  04BE  158A  2765  118A   	fcall	_LedPointSelect
  5830                           
  5831                           ;LED_B1.c: 83: if (command == 0) {
  5832  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  5833  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  5834  04C3  08DC               	movf	setLED@command,f
  5835  04C4  1D03               	skipz
  5836  04C5  2CD3               	goto	l4136
  5837                           
  5838                           ;LED_B1.c: 85: if (led == 1) {
  5839  04C6  085D               	movf	setLED@led,w
  5840  04C7  3A01               	xorlw	1
  5841  04C8  1D03               	skipz
  5842  04C9  2CCB               	goto	l4128
  5843                           
  5844                           ;LED_B1.c: 89: RB4 = 1;
  5845  04CA  1606               	bsf	6,4	;volatile
  5846  04CB                     l4128:	
  5847                           
  5848                           ;LED_B1.c: 91: }
  5849                           ;LED_B1.c: 94: if (led == 2) {
  5850  04CB  085D               	movf	setLED@led,w
  5851  04CC  3A02               	xorlw	2
  5852  04CD  1903               	btfsc	3,2
  5853                           
  5854                           ;LED_B1.c: 98: RB5 = 1;
  5855  04CE  1686               	bsf	6,5	;volatile
  5856                           
  5857                           ;LED_B1.c: 100: }
  5858                           ;LED_B1.c: 112: if (led == 99) {
  5859  04CF  085D               	movf	setLED@led,w
  5860  04D0  3A63               	xorlw	99
  5861  04D1  1903               	btfsc	3,2
  5862                           
  5863                           ;LED_B1.c: 116: RB3 = 1;
  5864  04D2  1586               	bsf	6,3	;volatile
  5865  04D3                     l4136:	
  5866                           
  5867                           ;LED_B1.c: 118: }
  5868                           ;LED_B1.c: 120: }
  5869                           ;LED_B1.c: 121: if (command == 1) {
  5870  04D3  085C               	movf	setLED@command,w
  5871  04D4  3A01               	xorlw	1
  5872  04D5  1D03               	skipz
  5873  04D6  2CE4               	goto	l4150
  5874                           
  5875                           ;LED_B1.c: 123: if (led == 1) {
  5876  04D7  085D               	movf	setLED@led,w
  5877  04D8  3A01               	xorlw	1
  5878  04D9  1D03               	skipz
  5879  04DA  2CDC               	goto	l4142
  5880                           
  5881                           ;LED_B1.c: 127: RB4 = 0;
  5882  04DB  1206               	bcf	6,4	;volatile
  5883  04DC                     l4142:	
  5884                           
  5885                           ;LED_B1.c: 129: }
  5886                           ;LED_B1.c: 132: if (led == 2) {
  5887  04DC  085D               	movf	setLED@led,w
  5888  04DD  3A02               	xorlw	2
  5889  04DE  1903               	btfsc	3,2
  5890                           
  5891                           ;LED_B1.c: 136: RB5 = 0;
  5892  04DF  1286               	bcf	6,5	;volatile
  5893                           
  5894                           ;LED_B1.c: 138: }
  5895                           ;LED_B1.c: 150: if (led == 99) {
  5896  04E0  085D               	movf	setLED@led,w
  5897  04E1  3A63               	xorlw	99
  5898  04E2  1903               	btfsc	3,2
  5899                           
  5900                           ;LED_B1.c: 154: RB3 = 0;
  5901  04E3  1186               	bcf	6,3	;volatile
  5902  04E4                     l4150:	
  5903                           
  5904                           ;LED_B1.c: 156: }
  5905                           ;LED_B1.c: 158: }
  5906                           ;LED_B1.c: 159: if (command == 10) {
  5907  04E4  085C               	movf	setLED@command,w
  5908  04E5  3A0A               	xorlw	10
  5909  04E6  1D03               	skipz
  5910  04E7  2CFF               	goto	l4168
  5911                           
  5912                           ;LED_B1.c: 160: LED->GO = 0;
  5913  04E8  0873               	movf	_LED,w
  5914  04E9  0084               	movwf	4
  5915  04EA  1383               	bcf	3,7	;select IRP bank0
  5916  04EB  1080               	bcf	0,1
  5917                           
  5918                           ;LED_B1.c: 161: LED->Time = 0;
  5919  04EC  0A73               	incf	_LED,w
  5920  04ED  0084               	movwf	4
  5921  04EE  0180               	clrf	0
  5922  04EF  0A84               	incf	4,f
  5923  04F0  0180               	clrf	0
  5924                           
  5925                           ;LED_B1.c: 163: if (led == 1) {
  5926  04F1  085D               	movf	setLED@led,w
  5927  04F2  3A01               	xorlw	1
  5928  04F3  1D03               	skipz
  5929  04F4  2CF7               	goto	l4160
  5930                           
  5931                           ;LED_B1.c: 167: RB4 = 1;
  5932  04F5  1606               	bsf	6,4	;volatile
  5933                           
  5934                           ;LED_B1.c: 169: }
  5935  04F6  2CFB               	goto	l4164
  5936  04F7                     l4160:	
  5937                           
  5938                           ;LED_B1.c: 172: else if (led == 2) {
  5939  04F7  085D               	movf	setLED@led,w
  5940  04F8  3A02               	xorlw	2
  5941  04F9  1903               	btfsc	3,2
  5942                           
  5943                           ;LED_B1.c: 176: RB5 = 1;
  5944  04FA  1686               	bsf	6,5	;volatile
  5945  04FB                     l4164:	
  5946                           
  5947                           ;LED_B1.c: 178: }
  5948                           ;LED_B1.c: 190: if (led == 99) {
  5949  04FB  085D               	movf	setLED@led,w
  5950  04FC  3A63               	xorlw	99
  5951  04FD  1903               	btfsc	3,2
  5952                           
  5953                           ;LED_B1.c: 194: RB3 = 1;
  5954  04FE  1586               	bsf	6,3	;volatile
  5955  04FF                     l4168:	
  5956                           
  5957                           ;LED_B1.c: 196: }
  5958                           ;LED_B1.c: 198: }
  5959                           ;LED_B1.c: 199: if (command == 11) {
  5960  04FF  085C               	movf	setLED@command,w
  5961  0500  3A0B               	xorlw	11
  5962  0501  1D03               	skipz
  5963  0502  2D07               	goto	l4172
  5964                           
  5965                           ;LED_B1.c: 200: LED->GO = 1;
  5966  0503  0873               	movf	_LED,w
  5967  0504  0084               	movwf	4
  5968  0505  1383               	bcf	3,7	;select IRP bank0
  5969  0506  1480               	bsf	0,1
  5970  0507                     l4172:	
  5971                           
  5972                           ;LED_B1.c: 201: }
  5973                           ;LED_B1.c: 205: if (command == 111) {
  5974  0507  085C               	movf	setLED@command,w
  5975  0508  3A6F               	xorlw	111
  5976  0509  1D03               	skipz
  5977  050A  2D25               	goto	l4198
  5978                           
  5979                           ;LED_B1.c: 206: PIRLED.Count = 0;
  5980  050B  01B2               	clrf	_PIRLED+1
  5981                           
  5982                           ;LED_B1.c: 207: PIRLED.Time = 0;
  5983  050C  01B3               	clrf	_PIRLED+2
  5984  050D  01B4               	clrf	_PIRLED+3
  5985                           
  5986                           ;LED_B1.c: 208: PIRLED.status = 0;
  5987  050E  1231               	bcf	_PIRLED,4
  5988                           
  5989                           ;LED_B1.c: 209: PIRLED.GO = 1;
  5990  050F  1431               	bsf	_PIRLED,0
  5991                           
  5992                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  5993  0510  10B1               	bcf	_PIRLED,1
  5994                           
  5995                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  5996  0511  1131               	bcf	_PIRLED,2
  5997                           
  5998                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  5999  0512  11B1               	bcf	_PIRLED,3
  6000                           
  6001                           ;LED_B1.c: 213: if (led == 1) {
  6002  0513  085D               	movf	setLED@led,w
  6003  0514  3A01               	xorlw	1
  6004  0515  1D03               	skipz
  6005  0516  2D19               	goto	l4190
  6006                           
  6007                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  6008  0517  14B1               	bsf	_PIRLED,1
  6009                           
  6010                           ;LED_B1.c: 215: } else if (led == 2) {
  6011  0518  0008               	return
  6012  0519                     l4190:	
  6013  0519  085D               	movf	setLED@led,w
  6014  051A  3A02               	xorlw	2
  6015  051B  1D03               	skipz
  6016  051C  2D1F               	goto	l4194
  6017                           
  6018                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  6019  051D  1531               	bsf	_PIRLED,2
  6020                           
  6021                           ;LED_B1.c: 217: } else if (led == 3) {
  6022  051E  0008               	return
  6023  051F                     l4194:	
  6024  051F  085D               	movf	setLED@led,w
  6025  0520  3A03               	xorlw	3
  6026  0521  1D03               	skipz
  6027  0522  0008               	return
  6028                           
  6029                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  6030  0523  15B1               	bsf	_PIRLED,3
  6031                           
  6032                           ;LED_B1.c: 219: }
  6033                           ;LED_B1.c: 220: } else if (command == 110) {
  6034  0524  0008               	return
  6035  0525                     l4198:	
  6036  0525  085C               	movf	setLED@command,w
  6037  0526  3A6E               	xorlw	110
  6038  0527  1D03               	skipz
  6039  0528  0008               	return
  6040                           
  6041                           ;LED_B1.c: 221: PIRLED.GO = 0;
  6042  0529  1031               	bcf	_PIRLED,0
  6043  052A  0008               	return
  6044  052B                     __end_of_setLED:	
  6045                           
  6046                           	psect	text32
  6047  0F65                     __ptext32:	
  6048 ;; *************** function _LedPointSelect *****************
  6049 ;; Defined at:
  6050 ;;		line 7 in file "../src/LED_B1.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  led             1    wreg     unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  led             1    1[BANK0 ] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;		None               void
  6057 ;; Registers used:
  6058 ;;		wreg
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6064 ;;      Params:         0       0       0       0
  6065 ;;      Locals:         0       1       0       0
  6066 ;;      Temps:          0       1       0       0
  6067 ;;      Totals:         0       2       0       0
  6068 ;;Total ram usage:        2 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    3
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_setLED_Initialization
  6075 ;;		_setLED
  6076 ;;		_setLED_Main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function _LedPointSelect
  6082  0F65                     _LedPointSelect:	
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in _LedPointSelect: [wreg]
  6086                           ;LedPointSelect@led stored from wreg
  6087  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0F67  00DB               	movwf	LedPointSelect@led
  6090                           
  6091                           ;LED_B1.c: 9: if (led == 1) {
  6092  0F68  085B               	movf	LedPointSelect@led,w
  6093  0F69  3A01               	xorlw	1
  6094  0F6A  1D03               	skipz
  6095  0F6B  2F70               	goto	l480
  6096                           
  6097                           ;LED_B1.c: 10: LED = &VarLED1;
  6098  0F6C  3052               	movlw	_VarLED1& (0+255)
  6099  0F6D  00DA               	movwf	??_LedPointSelect
  6100  0F6E  085A               	movf	??_LedPointSelect,w
  6101  0F6F  00F3               	movwf	_LED
  6102  0F70                     l480:	
  6103                           
  6104                           ;LED_B1.c: 11: }
  6105                           ;LED_B1.c: 14: if (led == 2) {
  6106  0F70  085B               	movf	LedPointSelect@led,w
  6107  0F71  3A02               	xorlw	2
  6108  0F72  1D03               	skipz
  6109  0F73  2F78               	goto	l481
  6110                           
  6111                           ;LED_B1.c: 15: LED = &VarLED2;
  6112  0F74  3056               	movlw	_VarLED2& (0+255)
  6113  0F75  00DA               	movwf	??_LedPointSelect
  6114  0F76  085A               	movf	??_LedPointSelect,w
  6115  0F77  00F3               	movwf	_LED
  6116  0F78                     l481:	
  6117                           
  6118                           ;LED_B1.c: 16: }
  6119                           ;LED_B1.c: 24: if (led == 99) {
  6120  0F78  085B               	movf	LedPointSelect@led,w
  6121  0F79  3A63               	xorlw	99
  6122  0F7A  1D03               	skipz
  6123  0F7B  0008               	return
  6124                           
  6125                           ;LED_B1.c: 25: LED = &VarErrLED;
  6126  0F7C  304E               	movlw	_VarErrLED& (0+255)
  6127  0F7D  00DA               	movwf	??_LedPointSelect
  6128  0F7E  085A               	movf	??_LedPointSelect,w
  6129  0F7F  00F3               	movwf	_LED
  6130  0F80  0008               	return
  6131  0F81                     __end_of_LedPointSelect:	
  6132                           
  6133                           	psect	text33
  6134  0F31                     __ptext33:	
  6135 ;; *************** function _getMain_All_Error_Status *****************
  6136 ;; Defined at:
  6137 ;;		line 424 in file "../src/Main_B1.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  command         1    wreg     unsigned char 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  command         1    1[BANK0 ] unsigned char 
  6142 ;;  status          1    4[BANK0 ] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      unsigned char 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6152 ;;      Params:         0       0       0       0
  6153 ;;      Locals:         0       4       0       0
  6154 ;;      Temps:          0       1       0       0
  6155 ;;      Totals:         0       5       0       0
  6156 ;;Total ram usage:        5 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    3
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_Exception_Main
  6163 ;;		_setTemp_Main
  6164 ;;		_PIR_Main
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _getMain_All_Error_Status
  6170  0F31                     _getMain_All_Error_Status:	
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6174                           ;getMain_All_Error_Status@command stored from wreg
  6175  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  6176  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  6177  0F33  00DB               	movwf	getMain_All_Error_Status@command
  6178                           
  6179                           ;Main_B1.c: 425: char status = 0;
  6180  0F34  01DE               	clrf	getMain_All_Error_Status@status
  6181                           
  6182                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6183  0F35  08DE               	movf	getMain_All_Error_Status@status,f
  6184  0F36  1D03               	skipz
  6185  0F37  2F49               	goto	l805
  6186  0F38  085B               	movf	getMain_All_Error_Status@command,w
  6187  0F39  3A02               	xorlw	2
  6188  0F3A  1903               	skipnz
  6189  0F3B  2F49               	goto	l805
  6190                           
  6191                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6192  0F3C  18C7               	btfsc	_Temp,1
  6193  0F3D  2F41               	goto	l4222
  6194  0F3E  01DC               	clrf	_getMain_All_Error_Status$2404
  6195  0F3F  01DD               	clrf	_getMain_All_Error_Status$2404+1
  6196  0F40  2F45               	goto	l809
  6197  0F41                     l4222:	
  6198  0F41  3002               	movlw	2
  6199  0F42  00DC               	movwf	_getMain_All_Error_Status$2404
  6200  0F43  3000               	movlw	0
  6201  0F44  00DD               	movwf	_getMain_All_Error_Status$2404+1
  6202  0F45                     l809:	
  6203  0F45  085C               	movf	_getMain_All_Error_Status$2404,w
  6204  0F46  00DA               	movwf	??_getMain_All_Error_Status
  6205  0F47  085A               	movf	??_getMain_All_Error_Status,w
  6206  0F48  00DE               	movwf	getMain_All_Error_Status@status
  6207  0F49                     l805:	
  6208                           
  6209                           ;Main_B1.c: 438: }
  6210                           ;Main_B1.c: 455: return status;
  6211  0F49  085E               	movf	getMain_All_Error_Status@status,w
  6212  0F4A  0008               	return
  6213  0F4B                     __end_of_getMain_All_Error_Status:	
  6214                           
  6215                           	psect	text34
  6216  0DA4                     __ptext34:	
  6217 ;; *************** function _DimmerLights_Main *****************
  6218 ;; Defined at:
  6219 ;;		line 736 in file "../src/Dimmer_B1.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;		None               void
  6226 ;; Registers used:
  6227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6233 ;;      Params:         0       0       0       0
  6234 ;;      Locals:         0       0       0       0
  6235 ;;      Temps:          0       0       0       0
  6236 ;;      Totals:         0       0       0       0
  6237 ;;Total ram usage:        0 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    6
  6240 ;; This function calls:
  6241 ;;		_DimmerLights_PIR_Control
  6242 ;;		_setDimmerLights_Main
  6243 ;; This function is called by:
  6244 ;;		_main
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function _DimmerLights_Main
  6250  0DA4                     _DimmerLights_Main:	
  6251                           
  6252                           ;Dimmer_B1.c: 747: setDimmerLights_Main(1);
  6253                           
  6254                           ;incstack = 0
  6255                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6256  0DA4  3001               	movlw	1
  6257  0DA5  118A  252B  158A   	fcall	_setDimmerLights_Main
  6258                           
  6259                           ;Dimmer_B1.c: 759: DimmerLights_PIR_Control();
  6260  0DA8  118A  233E         	fcall	_DimmerLights_PIR_Control
  6261  0DAA  0008               	return
  6262  0DAB                     __end_of_DimmerLights_Main:	
  6263                           
  6264                           	psect	text35
  6265  052B                     __ptext35:	
  6266 ;; *************** function _setDimmerLights_Main *****************
  6267 ;; Defined at:
  6268 ;;		line 765 in file "../src/Dimmer_B1.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  lights          1    wreg     unsigned char 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  lights          1    9[BANK0 ] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6282 ;;      Params:         0       0       0       0
  6283 ;;      Locals:         0       1       0       0
  6284 ;;      Temps:          0       0       0       0
  6285 ;;      Totals:         0       1       0       0
  6286 ;;Total ram usage:        1 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    5
  6289 ;; This function calls:
  6290 ;;		_DimmerLights_SelectPointer
  6291 ;;		_getDimmerLights_Allow_Condition
  6292 ;;		_getMain_All_LightsStatus
  6293 ;;		_setDimmerLights_Dimming
  6294 ;;		_setDimmerLights_OnOff
  6295 ;; This function is called by:
  6296 ;;		_DimmerLights_Main
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           
  6301                           ;psect for function _setDimmerLights_Main
  6302  052B                     _setDimmerLights_Main:	
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6306                           ;setDimmerLights_Main@lights stored from wreg
  6307  052B  1283               	bcf	3,5	;RP0=0, select bank0
  6308  052C  1303               	bcf	3,6	;RP1=0, select bank0
  6309  052D  00E3               	movwf	setDimmerLights_Main@lights
  6310                           
  6311                           ;Dimmer_B1.c: 767: DimmerLights_SelectPointer(lights);
  6312  052E  0863               	movf	setDimmerLights_Main@lights,w
  6313  052F  158A  25CB  118A   	fcall	_DimmerLights_SelectPointer
  6314                           
  6315                           ;Dimmer_B1.c: 768: if (DimmerLights->Trigger == 1) {
  6316  0532  0872               	movf	_DimmerLights,w
  6317  0533  0084               	movwf	4
  6318  0534  1383               	bcf	3,7	;select IRP bank0
  6319  0535  1C80               	btfss	0,1
  6320  0536  2D57               	goto	l4262
  6321                           
  6322                           ;Dimmer_B1.c: 769: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6323  0537  1283               	bcf	3,5	;RP0=0, select bank0
  6324  0538  1303               	bcf	3,6	;RP1=0, select bank0
  6325  0539  0863               	movf	setDimmerLights_Main@lights,w
  6326  053A  158A  258D  118A   	fcall	_getDimmerLights_Allow_Condition
  6327  053D  3800               	iorlw	0
  6328  053E  1D03               	skipz
  6329  053F  0008               	return
  6330                           
  6331                           ;Dimmer_B1.c: 770: DimmerLights->Trigger = 0;
  6332  0540  0872               	movf	_DimmerLights,w
  6333  0541  0084               	movwf	4
  6334  0542  1383               	bcf	3,7	;select IRP bank0
  6335  0543  1080               	bcf	0,1
  6336                           
  6337                           ;Dimmer_B1.c: 771: if (DimmerLights->Switch == 1) {
  6338  0544  0872               	movf	_DimmerLights,w
  6339  0545  0084               	movwf	4
  6340  0546  1D00               	btfss	0,2
  6341  0547  2D50               	goto	l4260
  6342                           
  6343                           ;Dimmer_B1.c: 772: setDimmerLights_OnOff(lights, 1);
  6344  0548  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0549  1303               	bcf	3,6	;RP1=0, select bank0
  6346  054A  01DD               	clrf	setDimmerLights_OnOff@command
  6347  054B  0ADD               	incf	setDimmerLights_OnOff@command,f
  6348  054C  0863               	movf	setDimmerLights_Main@lights,w
  6349  054D  118A  2748         	fcall	_setDimmerLights_OnOff
  6350                           
  6351                           ;Dimmer_B1.c: 773: } else {
  6352  054F  0008               	return
  6353  0550                     l4260:	
  6354                           
  6355                           ;Dimmer_B1.c: 774: setDimmerLights_OnOff(lights, 0);
  6356  0550  1283               	bcf	3,5	;RP0=0, select bank0
  6357  0551  1303               	bcf	3,6	;RP1=0, select bank0
  6358  0552  01DD               	clrf	setDimmerLights_OnOff@command
  6359  0553  0863               	movf	setDimmerLights_Main@lights,w
  6360  0554  118A  2748         	fcall	_setDimmerLights_OnOff
  6361                           
  6362                           ;Dimmer_B1.c: 775: }
  6363                           ;Dimmer_B1.c: 776: }
  6364                           ;Dimmer_B1.c: 777: } else {
  6365  0556  0008               	return
  6366  0557                     l4262:	
  6367                           
  6368                           ;Dimmer_B1.c: 778: if (getMain_All_LightsStatus() == 1) {
  6369  0557  158A  25C2  118A   	fcall	_getMain_All_LightsStatus
  6370  055A  3A01               	xorlw	1
  6371  055B  1D03               	skipz
  6372  055C  2D82               	goto	l4274
  6373                           
  6374                           ;Dimmer_B1.c: 779: if (DimmerLights->DimmingTrigger == 1) {
  6375  055D  0872               	movf	_DimmerLights,w
  6376  055E  0084               	movwf	4
  6377  055F  1383               	bcf	3,7	;select IRP bank0
  6378  0560  1E00               	btfss	0,4
  6379  0561  0008               	return
  6380                           
  6381                           ;Dimmer_B1.c: 780: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6382  0562  1283               	bcf	3,5	;RP0=0, select bank0
  6383  0563  1303               	bcf	3,6	;RP1=0, select bank0
  6384  0564  0863               	movf	setDimmerLights_Main@lights,w
  6385  0565  158A  258D  118A   	fcall	_getDimmerLights_Allow_Condition
  6386  0568  3800               	iorlw	0
  6387  0569  1D03               	skipz
  6388  056A  0008               	return
  6389                           
  6390                           ;Dimmer_B1.c: 781: DimmerLights->DimmingTrigger = 0;
  6391  056B  0872               	movf	_DimmerLights,w
  6392  056C  0084               	movwf	4
  6393  056D  1383               	bcf	3,7	;select IRP bank0
  6394  056E  1200               	bcf	0,4
  6395                           
  6396                           ;Dimmer_B1.c: 782: if (DimmerLights->DimmingSwitch == 1) {
  6397  056F  0872               	movf	_DimmerLights,w
  6398  0570  0084               	movwf	4
  6399  0571  1E80               	btfss	0,5
  6400  0572  2D7B               	goto	l4272
  6401                           
  6402                           ;Dimmer_B1.c: 783: setDimmerLights_Dimming(lights, 1);
  6403  0573  1283               	bcf	3,5	;RP0=0, select bank0
  6404  0574  1303               	bcf	3,6	;RP1=0, select bank0
  6405  0575  01E0               	clrf	setDimmerLights_Dimming@status
  6406  0576  0AE0               	incf	setDimmerLights_Dimming@status,f
  6407  0577  0863               	movf	setDimmerLights_Main@lights,w
  6408  0578  118A  27C8         	fcall	_setDimmerLights_Dimming
  6409                           
  6410                           ;Dimmer_B1.c: 784: } else {
  6411  057A  0008               	return
  6412  057B                     l4272:	
  6413                           
  6414                           ;Dimmer_B1.c: 785: setDimmerLights_Dimming(lights, 0);
  6415  057B  1283               	bcf	3,5	;RP0=0, select bank0
  6416  057C  1303               	bcf	3,6	;RP1=0, select bank0
  6417  057D  01E0               	clrf	setDimmerLights_Dimming@status
  6418  057E  0863               	movf	setDimmerLights_Main@lights,w
  6419  057F  118A  27C8         	fcall	_setDimmerLights_Dimming
  6420                           
  6421                           ;Dimmer_B1.c: 786: }
  6422                           ;Dimmer_B1.c: 787: }
  6423                           ;Dimmer_B1.c: 788: }
  6424                           ;Dimmer_B1.c: 789: } else {
  6425  0581  0008               	return
  6426  0582                     l4274:	
  6427                           
  6428                           ;Dimmer_B1.c: 790: if (DimmerLights->DimmingTrigger == 1) {
  6429  0582  0872               	movf	_DimmerLights,w
  6430  0583  0084               	movwf	4
  6431  0584  1383               	bcf	3,7	;select IRP bank0
  6432  0585  1E00               	btfss	0,4
  6433  0586  0008               	return
  6434                           
  6435                           ;Dimmer_B1.c: 791: DimmerLights->DimmingTrigger = 0;
  6436  0587  0872               	movf	_DimmerLights,w
  6437  0588  0084               	movwf	4
  6438  0589  1200               	bcf	0,4
  6439  058A  0008               	return
  6440  058B                     __end_of_setDimmerLights_Main:	
  6441                           
  6442                           	psect	text36
  6443  0748                     __ptext36:	
  6444 ;; *************** function _setDimmerLights_OnOff *****************
  6445 ;; Defined at:
  6446 ;;		line 799 in file "../src/Dimmer_B1.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  lights          1    wreg     unsigned char 
  6449 ;;  command         1    3[BANK0 ] unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  lights          1    4[BANK0 ] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;		None               void
  6454 ;; Registers used:
  6455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6461 ;;      Params:         0       1       0       0
  6462 ;;      Locals:         0       1       0       0
  6463 ;;      Temps:          0       0       0       0
  6464 ;;      Totals:         0       2       0       0
  6465 ;;Total ram usage:        2 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    4
  6468 ;; This function calls:
  6469 ;;		_getCmd_Status
  6470 ;;		_getMain_All_LightsStatus
  6471 ;;		_setCmd_Status
  6472 ;;		_setDimmerIntr_ControlStatus
  6473 ;; This function is called by:
  6474 ;;		_setDimmerLights_Main
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           
  6479                           ;psect for function _setDimmerLights_OnOff
  6480  0748                     _setDimmerLights_OnOff:	
  6481                           
  6482                           ;incstack = 0
  6483                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6484                           ;setDimmerLights_OnOff@lights stored from wreg
  6485  0748  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0749  1303               	bcf	3,6	;RP1=0, select bank0
  6487  074A  00DE               	movwf	setDimmerLights_OnOff@lights
  6488                           
  6489                           ;Dimmer_B1.c: 801: if (command == 1) {
  6490  074B  085D               	movf	setDimmerLights_OnOff@command,w
  6491  074C  3A01               	xorlw	1
  6492  074D  1D03               	skipz
  6493  074E  2F59               	goto	l4094
  6494                           
  6495                           ;Dimmer_B1.c: 802: setDimmerIntr_ControlStatus(lights, 1);
  6496  074F  01DA               	clrf	setDimmerIntr_ControlStatus@command
  6497  0750  0ADA               	incf	setDimmerIntr_ControlStatus@command,f
  6498  0751  085E               	movf	setDimmerLights_OnOff@lights,w
  6499  0752  158A  26EB  118A   	fcall	_setDimmerIntr_ControlStatus
  6500                           
  6501                           ;Dimmer_B1.c: 810: Dimmer.PIR_Open_Status = 1;
  6502  0755  1283               	bcf	3,5	;RP0=0, select bank0
  6503  0756  1303               	bcf	3,6	;RP1=0, select bank0
  6504  0757  14A8               	bsf	_Dimmer+1,1
  6505                           
  6506                           ;Dimmer_B1.c: 830: } else if (command == 0) {
  6507  0758  2F61               	goto	l4098
  6508  0759                     l4094:	
  6509  0759  08DD               	movf	setDimmerLights_OnOff@command,f
  6510  075A  1D03               	skipz
  6511  075B  2F61               	goto	l4098
  6512                           
  6513                           ;Dimmer_B1.c: 831: setDimmerIntr_ControlStatus(lights, 0);
  6514  075C  01DA               	clrf	setDimmerIntr_ControlStatus@command
  6515  075D  085E               	movf	setDimmerLights_OnOff@lights,w
  6516  075E  158A  26EB  118A   	fcall	_setDimmerIntr_ControlStatus
  6517  0761                     l4098:	
  6518                           
  6519                           ;Dimmer_B1.c: 864: }
  6520                           ;Dimmer_B1.c: 867: ;;
  6521                           ;Dimmer_B1.c: 869: if (getCmd_Status(1) == 1) {
  6522  0761  3001               	movlw	1
  6523  0762  158A  2662  118A   	fcall	_getCmd_Status
  6524  0765  3A01               	xorlw	1
  6525  0766  1D03               	skipz
  6526  0767  0008               	return
  6527                           
  6528                           ;Dimmer_B1.c: 870: if (getMain_All_LightsStatus() == 0) {
  6529  0768  158A  25C2  118A   	fcall	_getMain_All_LightsStatus
  6530  076B  3800               	iorlw	0
  6531  076C  1D03               	skipz
  6532  076D  0008               	return
  6533                           
  6534                           ;Dimmer_B1.c: 871: setCmd_Status(1, 0);
  6535  076E  1283               	bcf	3,5	;RP0=0, select bank0
  6536  076F  1303               	bcf	3,6	;RP1=0, select bank0
  6537  0770  01DA               	clrf	setCmd_Status@cmd
  6538  0771  3001               	movlw	1
  6539  0772  158A  26D5         	fcall	_setCmd_Status
  6540                           
  6541                           ;Dimmer_B1.c: 875: }
  6542                           ;Dimmer_B1.c: 876: } else {
  6543                           
  6544                           ;Dimmer_B1.c: 872: ;;
  6545                           ;Dimmer_B1.c: 873: ;;
  6546                           ;Dimmer_B1.c: 874: ;;
  6547  0774  0008               	return
  6548  0775                     __end_of_setDimmerLights_OnOff:	
  6549                           ;Dimmer_B1.c: 877: ;;
  6550                           
  6551                           
  6552                           	psect	text37
  6553  0EEB                     __ptext37:	
  6554 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6555 ;; Defined at:
  6556 ;;		line 31 in file "../src/Dimmer_B1.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  lights          1    wreg     unsigned char 
  6559 ;;  command         1    0[BANK0 ] unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;  lights          1    2[BANK0 ] unsigned char 
  6562 ;; Return value:  Size  Location     Type
  6563 ;;		None               void
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6571 ;;      Params:         0       1       0       0
  6572 ;;      Locals:         0       1       0       0
  6573 ;;      Temps:          0       1       0       0
  6574 ;;      Totals:         0       3       0       0
  6575 ;;Total ram usage:        3 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; Hardware stack levels required when called:    3
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_setDimmerLights_OnOff
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function _setDimmerIntr_ControlStatus
  6587  0EEB                     _setDimmerIntr_ControlStatus:	
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6591                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6592  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0EED  00DC               	movwf	setDimmerIntr_ControlStatus@lights
  6595                           
  6596                           ;Dimmer_B1.c: 33: if (lights == 1) {
  6597  0EEE  085C               	movf	setDimmerIntr_ControlStatus@lights,w
  6598  0EEF  3A01               	xorlw	1
  6599  0EF0  1D03               	skipz
  6600  0EF1  0008               	return
  6601                           
  6602                           ;Dimmer_B1.c: 34: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6603  0EF2  085A               	movf	setDimmerIntr_ControlStatus@command,w
  6604  0EF3  3A01               	xorlw	1
  6605  0EF4  3000               	movlw	0
  6606  0EF5  1903               	skipnz
  6607  0EF6  3001               	movlw	1
  6608  0EF7  00DB               	movwf	??_setDimmerIntr_ControlStatus
  6609  0EF8  0DDB               	rlf	??_setDimmerIntr_ControlStatus,f
  6610  0EF9  0DDB               	rlf	??_setDimmerIntr_ControlStatus,f
  6611  0EFA  0DDB               	rlf	??_setDimmerIntr_ControlStatus,f
  6612  0EFB  0820               	movf	_DimmerIntr1,w
  6613  0EFC  065B               	xorwf	??_setDimmerIntr_ControlStatus,w
  6614  0EFD  39F7               	andlw	-9
  6615  0EFE  065B               	xorwf	??_setDimmerIntr_ControlStatus,w
  6616  0EFF  00A0               	movwf	_DimmerIntr1
  6617  0F00  0008               	return
  6618  0F01                     __end_of_setDimmerIntr_ControlStatus:	
  6619                           
  6620                           	psect	text38
  6621  0ED5                     __ptext38:	
  6622 ;; *************** function _setCmd_Status *****************
  6623 ;; Defined at:
  6624 ;;		line 651 in file "../src/Main_B1.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  number          1    wreg     unsigned char 
  6627 ;;  cmd             1    0[BANK0 ] unsigned char 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  number          1    2[BANK0 ] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;		None               void
  6632 ;; Registers used:
  6633 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6639 ;;      Params:         0       1       0       0
  6640 ;;      Locals:         0       1       0       0
  6641 ;;      Temps:          0       1       0       0
  6642 ;;      Totals:         0       3       0       0
  6643 ;;Total ram usage:        3 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    3
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_setDimmerLights_OnOff
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           
  6654                           ;psect for function _setCmd_Status
  6655  0ED5                     _setCmd_Status:	
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6659                           ;setCmd_Status@number stored from wreg
  6660  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  6661  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  6662  0ED7  00DC               	movwf	setCmd_Status@number
  6663                           
  6664                           ;Main_B1.c: 652: switch (number) {
  6665  0ED8  2EE5               	goto	l4040
  6666  0ED9                     l4036:	
  6667                           ;Main_B1.c: 653: case 1:
  6668                           
  6669                           
  6670                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
  6671  0ED9  085A               	movf	setCmd_Status@cmd,w
  6672  0EDA  3A01               	xorlw	1
  6673  0EDB  3000               	movlw	0
  6674  0EDC  1903               	skipnz
  6675  0EDD  3001               	movlw	1
  6676  0EDE  00DB               	movwf	??_setCmd_Status
  6677  0EDF  0870               	movf	_Cmd,w
  6678  0EE0  065B               	xorwf	??_setCmd_Status,w
  6679  0EE1  39FE               	andlw	-2
  6680  0EE2  065B               	xorwf	??_setCmd_Status,w
  6681  0EE3  00F0               	movwf	_Cmd
  6682                           
  6683                           ;Main_B1.c: 656: }
  6684                           
  6685                           ;Main_B1.c: 655: break;
  6686  0EE4  0008               	return
  6687  0EE5                     l4040:	
  6688  0EE5  085C               	movf	setCmd_Status@number,w
  6689                           
  6690                           ; Switch size 1, requested type "space"
  6691                           ; Number of cases is 1, Range of values is 1 to 1
  6692                           ; switch strategies available:
  6693                           ; Name         Instructions Cycles
  6694                           ; simple_byte            4     3 (average)
  6695                           ; direct_byte           12    10 (fixed)
  6696                           ; jumptable            263     9 (fixed)
  6697                           ;	Chosen strategy is simple_byte
  6698  0EE6  3A01               	xorlw	1	; case 1
  6699  0EE7  1903               	skipnz
  6700  0EE8  2ED9               	goto	l4036
  6701  0EE9  2EEA               	goto	l831
  6702  0EEA                     l831:	
  6703  0EEA  0008               	return
  6704  0EEB                     __end_of_setCmd_Status:	
  6705                           
  6706                           	psect	text39
  6707  0DC2                     __ptext39:	
  6708 ;; *************** function _getMain_All_LightsStatus *****************
  6709 ;; Defined at:
  6710 ;;		line 373 in file "../src/Main_B1.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  status          1    0[BANK0 ] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      unsigned char 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6724 ;;      Params:         0       0       0       0
  6725 ;;      Locals:         0       1       0       0
  6726 ;;      Temps:          0       0       0       0
  6727 ;;      Totals:         0       1       0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    3
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_setDimmerLights_Main
  6735 ;;		_setDimmerLights_OnOff
  6736 ;;		_setTemp_Main
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function _getMain_All_LightsStatus
  6742  0DC2                     _getMain_All_LightsStatus:	
  6743                           
  6744                           ;Main_B1.c: 374: char status = 0;
  6745                           
  6746                           ;incstack = 0
  6747                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6748  0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  6749  0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  6750  0DC4  01DA               	clrf	getMain_All_LightsStatus@status
  6751                           
  6752                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6753  0DC5  3000               	movlw	0
  6754  0DC6  1840               	btfsc	_DimmerLights1+1,0
  6755  0DC7  3001               	movlw	1
  6756  0DC8  00DA               	movwf	getMain_All_LightsStatus@status
  6757                           
  6758                           ;Main_B1.c: 420: return status;
  6759  0DC9  085A               	movf	getMain_All_LightsStatus@status,w
  6760  0DCA  0008               	return
  6761  0DCB                     __end_of_getMain_All_LightsStatus:	
  6762                           
  6763                           	psect	text40
  6764  0E62                     __ptext40:	
  6765 ;; *************** function _getCmd_Status *****************
  6766 ;; Defined at:
  6767 ;;		line 659 in file "../src/Main_B1.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  number          1    wreg     unsigned char 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  number          1    0[BANK0 ] unsigned char 
  6772 ;;  cmd             1    1[BANK0 ] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      unsigned char 
  6775 ;; Registers used:
  6776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6782 ;;      Params:         0       0       0       0
  6783 ;;      Locals:         0       2       0       0
  6784 ;;      Temps:          0       0       0       0
  6785 ;;      Totals:         0       2       0       0
  6786 ;;Total ram usage:        2 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    3
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_setDimmerLights_OnOff
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _getCmd_Status
  6798  0E62                     _getCmd_Status:	
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6802                           ;getCmd_Status@number stored from wreg
  6803  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  6804  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  6805  0E64  00DA               	movwf	getCmd_Status@number
  6806                           
  6807                           ;Main_B1.c: 660: char cmd = 0;
  6808  0E65  01DB               	clrf	getCmd_Status@cmd
  6809                           
  6810                           ;Main_B1.c: 661: switch (number) {
  6811  0E66  2E6C               	goto	l4028
  6812  0E67                     l4024:	
  6813                           ;Main_B1.c: 662: case 1:
  6814                           
  6815                           
  6816                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
  6817  0E67  3000               	movlw	0
  6818  0E68  1870               	btfsc	_Cmd,0
  6819  0E69  3001               	movlw	1
  6820  0E6A  00DB               	movwf	getCmd_Status@cmd
  6821                           
  6822                           ;Main_B1.c: 665: }
  6823                           
  6824                           ;Main_B1.c: 664: break;
  6825  0E6B  2E71               	goto	l4030
  6826  0E6C                     l4028:	
  6827  0E6C  085A               	movf	getCmd_Status@number,w
  6828                           
  6829                           ; Switch size 1, requested type "space"
  6830                           ; Number of cases is 1, Range of values is 1 to 1
  6831                           ; switch strategies available:
  6832                           ; Name         Instructions Cycles
  6833                           ; simple_byte            4     3 (average)
  6834                           ; direct_byte           12    10 (fixed)
  6835                           ; jumptable            263     9 (fixed)
  6836                           ;	Chosen strategy is simple_byte
  6837  0E6D  3A01               	xorlw	1	; case 1
  6838  0E6E  1903               	skipnz
  6839  0E6F  2E67               	goto	l4024
  6840  0E70  2E71               	goto	l4030
  6841  0E71                     l4030:	
  6842                           
  6843                           ;Main_B1.c: 666: return cmd;
  6844  0E71  085B               	movf	getCmd_Status@cmd,w
  6845  0E72  0008               	return
  6846  0E73                     __end_of_getCmd_Status:	
  6847                           
  6848                           	psect	text41
  6849  07C8                     __ptext41:	
  6850 ;; *************** function _setDimmerLights_Dimming *****************
  6851 ;; Defined at:
  6852 ;;		line 883 in file "../src/Dimmer_B1.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  lights          1    wreg     unsigned char 
  6855 ;;  status          1    6[BANK0 ] unsigned char 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  lights          1    8[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0, pclath, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6867 ;;      Params:         0       1       0       0
  6868 ;;      Locals:         0       1       0       0
  6869 ;;      Temps:          0       1       0       0
  6870 ;;      Totals:         0       3       0       0
  6871 ;;Total ram usage:        3 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    4
  6874 ;; This function calls:
  6875 ;;		_getDimmerIntr_DimmingValue
  6876 ;;		_setDimmerIntr_Dimming_Sw
  6877 ;;		_setDimmerIntr_MaxmumValue
  6878 ;; This function is called by:
  6879 ;;		_setDimmerLights_Main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _setDimmerLights_Dimming
  6885  07C8                     _setDimmerLights_Dimming:	
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6889                           ;setDimmerLights_Dimming@lights stored from wreg
  6890  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  6891  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  6892  07CA  00E2               	movwf	setDimmerLights_Dimming@lights
  6893                           
  6894                           ;Dimmer_B1.c: 884: if (status == 1) {
  6895  07CB  0860               	movf	setDimmerLights_Dimming@status,w
  6896  07CC  3A01               	xorlw	1
  6897  07CD  1D03               	skipz
  6898  07CE  2FD5               	goto	l4108
  6899                           
  6900                           ;Dimmer_B1.c: 885: setDimmerIntr_Dimming_Sw(lights, 1);
  6901  07CF  01DA               	clrf	setDimmerIntr_Dimming_Sw@command
  6902  07D0  0ADA               	incf	setDimmerIntr_Dimming_Sw@command,f
  6903  07D1  0862               	movf	setDimmerLights_Dimming@lights,w
  6904  07D2  158A  2697         	fcall	_setDimmerIntr_Dimming_Sw
  6905                           
  6906                           ;Dimmer_B1.c: 890: ;;
  6907                           ;Dimmer_B1.c: 891: } else if (status == 0) {
  6908  07D4  0008               	return
  6909  07D5                     l4108:	
  6910  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  6911  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  6912  07D7  08E0               	movf	setDimmerLights_Dimming@status,f
  6913  07D8  1D03               	skipz
  6914  07D9  0008               	return
  6915                           
  6916                           ;Dimmer_B1.c: 892: setDimmerIntr_Dimming_Sw(lights, 0);
  6917  07DA  01DA               	clrf	setDimmerIntr_Dimming_Sw@command
  6918  07DB  0862               	movf	setDimmerLights_Dimming@lights,w
  6919  07DC  158A  2697  118A   	fcall	_setDimmerIntr_Dimming_Sw
  6920                           
  6921                           ;Dimmer_B1.c: 899: setDimmerIntr_MaxmumValue(lights, getDimmerIntr_DimmingValue(lights))
      +                          ;
  6922  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  6923  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  6924  07E1  0862               	movf	setDimmerLights_Dimming@lights,w
  6925  07E2  158A  2608  118A   	fcall	_getDimmerIntr_DimmingValue
  6926  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  6927  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  6928  07E7  00E1               	movwf	??_setDimmerLights_Dimming
  6929  07E8  0861               	movf	??_setDimmerLights_Dimming,w
  6930  07E9  00DD               	movwf	setDimmerIntr_MaxmumValue@value
  6931  07EA  0862               	movf	setDimmerLights_Dimming@lights,w
  6932  07EB  158A  25E3         	fcall	_setDimmerIntr_MaxmumValue
  6933                           
  6934                           ;Dimmer_B1.c: 900: ;;
  6935                           ;Dimmer_B1.c: 910: ;;
  6936                           ;Dimmer_B1.c: 911: ;;
  6937  07ED  0008               	return
  6938  07EE                     __end_of_setDimmerLights_Dimming:	
  6939                           
  6940                           	psect	text42
  6941  0E97                     __ptext42:	
  6942 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6943 ;; Defined at:
  6944 ;;		line 166 in file "../src/Dimmer_B1.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  lights          1    wreg     unsigned char 
  6947 ;;  command         1    0[BANK0 ] unsigned char 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  lights          1    2[BANK0 ] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6959 ;;      Params:         0       1       0       0
  6960 ;;      Locals:         0       1       0       0
  6961 ;;      Temps:          0       1       0       0
  6962 ;;      Totals:         0       3       0       0
  6963 ;;Total ram usage:        3 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    3
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_setDimmerLights_Dimming
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _setDimmerIntr_Dimming_Sw
  6975  0E97                     _setDimmerIntr_Dimming_Sw:	
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6979                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6980  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6981  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6982  0E99  00DC               	movwf	setDimmerIntr_Dimming_Sw@lights
  6983                           
  6984                           ;Dimmer_B1.c: 168: if (lights == 1) {
  6985  0E9A  085C               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6986  0E9B  3A01               	xorlw	1
  6987  0E9C  1D03               	skipz
  6988  0E9D  0008               	return
  6989                           
  6990                           ;Dimmer_B1.c: 169: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6991  0E9E  085A               	movf	setDimmerIntr_Dimming_Sw@command,w
  6992  0E9F  3A01               	xorlw	1
  6993  0EA0  3000               	movlw	0
  6994  0EA1  1903               	skipnz
  6995  0EA2  3001               	movlw	1
  6996  0EA3  00DB               	movwf	??_setDimmerIntr_Dimming_Sw
  6997  0EA4  0EDB               	swapf	??_setDimmerIntr_Dimming_Sw,f
  6998  0EA5  0820               	movf	_DimmerIntr1,w
  6999  0EA6  065B               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7000  0EA7  39EF               	andlw	-17
  7001  0EA8  065B               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7002  0EA9  00A0               	movwf	_DimmerIntr1
  7003  0EAA  0008               	return
  7004  0EAB                     __end_of_setDimmerIntr_Dimming_Sw:	
  7005                           
  7006                           	psect	text43
  7007  0E08                     __ptext43:	
  7008 ;; *************** function _getDimmerIntr_DimmingValue *****************
  7009 ;; Defined at:
  7010 ;;		line 67 in file "../src/Dimmer_B1.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  lights          1    wreg     unsigned char 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  lights          1    1[BANK0 ] unsigned char 
  7015 ;;  value           1    2[BANK0 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      unsigned char 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7025 ;;      Params:         0       0       0       0
  7026 ;;      Locals:         0       2       0       0
  7027 ;;      Temps:          0       1       0       0
  7028 ;;      Totals:         0       3       0       0
  7029 ;;Total ram usage:        3 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    3
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_setDimmerLights_Dimming
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _getDimmerIntr_DimmingValue
  7041  0E08                     _getDimmerIntr_DimmingValue:	
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  7045                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  7046  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  7047  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  7048  0E0A  00DB               	movwf	getDimmerIntr_DimmingValue@lights
  7049                           
  7050                           ;Dimmer_B1.c: 68: char value = 0;
  7051  0E0B  01DC               	clrf	getDimmerIntr_DimmingValue@value
  7052                           
  7053                           ;Dimmer_B1.c: 70: if (lights == 1) {
  7054  0E0C  085B               	movf	getDimmerIntr_DimmingValue@lights,w
  7055  0E0D  3A01               	xorlw	1
  7056  0E0E  1D03               	skipz
  7057  0E0F  2E14               	goto	l251
  7058                           
  7059                           ;Dimmer_B1.c: 71: value = DimmerIntr1.DimmingValue;
  7060  0E10  0824               	movf	_DimmerIntr1+4,w
  7061  0E11  00DA               	movwf	??_getDimmerIntr_DimmingValue
  7062  0E12  085A               	movf	??_getDimmerIntr_DimmingValue,w
  7063  0E13  00DC               	movwf	getDimmerIntr_DimmingValue@value
  7064  0E14                     l251:	
  7065                           
  7066                           ;Dimmer_B1.c: 72: }
  7067                           ;Dimmer_B1.c: 84: return value;
  7068  0E14  085C               	movf	getDimmerIntr_DimmingValue@value,w
  7069  0E15  0008               	return
  7070  0E16                     __end_of_getDimmerIntr_DimmingValue:	
  7071                           
  7072                           	psect	text44
  7073  0D8D                     __ptext44:	
  7074 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7075 ;; Defined at:
  7076 ;;		line 916 in file "../src/Dimmer_B1.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  lights          1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  lights          1    0[COMMON] unsigned char 
  7081 ;;  allow           1    0[BANK0 ] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      unsigned char 
  7084 ;; Registers used:
  7085 ;;		wreg, status,2
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7091 ;;      Params:         0       0       0       0
  7092 ;;      Locals:         0       1       0       0
  7093 ;;      Temps:          0       0       0       0
  7094 ;;      Totals:         0       1       0       0
  7095 ;;Total ram usage:        1 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    3
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_setDimmerLights_Main
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           
  7106                           ;psect for function _getDimmerLights_Allow_Condition
  7107  0D8D                     _getDimmerLights_Allow_Condition:	
  7108                           
  7109                           ;Dimmer_B1.c: 917: char allow = 0;
  7110                           
  7111                           ;incstack = 0
  7112                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7113  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  7114  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  7115  0D8F  01DA               	clrf	getDimmerLights_Allow_Condition@allow
  7116                           
  7117                           ;Dimmer_B1.c: 950: return allow;
  7118  0D90  085A               	movf	getDimmerLights_Allow_Condition@allow,w
  7119  0D91  0008               	return
  7120  0D92                     __end_of_getDimmerLights_Allow_Condition:	
  7121                           
  7122                           	psect	text45
  7123  033E                     __ptext45:	
  7124 ;; *************** function _DimmerLights_PIR_Control *****************
  7125 ;; Defined at:
  7126 ;;		line 1451 in file "../src/Dimmer_B1.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;		None
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;		None               void
  7133 ;; Registers used:
  7134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7140 ;;      Params:         0       0       0       0
  7141 ;;      Locals:         0       0       0       0
  7142 ;;      Temps:          0       1       0       0
  7143 ;;      Totals:         0       1       0       0
  7144 ;;Total ram usage:        1 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    5
  7147 ;; This function calls:
  7148 ;;		_getDimmerLights_Status
  7149 ;;		_setDimmerIntr_DimmingValue
  7150 ;;		_setDimmerIntr_Dimming_RF
  7151 ;;		_setDimmerIntr_MaxmumValue
  7152 ;;		_setDimmerLights_SwOff
  7153 ;;		_setDimmerLights_SwOn
  7154 ;; This function is called by:
  7155 ;;		_DimmerLights_Main
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           
  7160                           ;psect for function _DimmerLights_PIR_Control
  7161  033E                     _DimmerLights_PIR_Control:	
  7162                           
  7163                           ;Dimmer_B1.c: 1453: if (Dimmer.PIR_Trigger == 1) {
  7164                           
  7165                           ;incstack = 0
  7166                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7167  033E  1283               	bcf	3,5	;RP0=0, select bank0
  7168  033F  1303               	bcf	3,6	;RP1=0, select bank0
  7169  0340  1EA7               	btfss	_Dimmer,5
  7170  0341  2BAA               	goto	l4306
  7171                           
  7172                           ;Dimmer_B1.c: 1454: Dimmer.PIR_Trigger = 0;
  7173  0342  12A7               	bcf	_Dimmer,5
  7174                           
  7175                           ;Dimmer_B1.c: 1455: if (Dimmer.PIR_Sw == 1) {
  7176  0343  1E27               	btfss	_Dimmer,4
  7177  0344  2B77               	goto	l416
  7178                           
  7179                           ;Dimmer_B1.c: 1457: if (getDimmerLights_Status(1) == 0) {
  7180  0345  3001               	movlw	1
  7181  0346  158A  2651  118A   	fcall	_getDimmerLights_Status
  7182  0349  3800               	iorlw	0
  7183  034A  1D03               	skipz
  7184  034B  2B5F               	goto	l417
  7185                           
  7186                           ;Dimmer_B1.c: 1458: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.8)));
  7187  034C  3048               	movlw	72
  7188  034D  1283               	bcf	3,5	;RP0=0, select bank0
  7189  034E  1303               	bcf	3,6	;RP1=0, select bank0
  7190  034F  00E0               	movwf	??_DimmerLights_PIR_Control
  7191  0350  0860               	movf	??_DimmerLights_PIR_Control,w
  7192  0351  00DA               	movwf	setDimmerIntr_DimmingValue@value
  7193  0352  3001               	movlw	1
  7194  0353  158A  25D7  118A   	fcall	_setDimmerIntr_DimmingValue
  7195                           
  7196                           ;Dimmer_B1.c: 1459: setDimmerLights_SwOn(1);
  7197  0356  3001               	movlw	1
  7198  0357  158A  27DD  118A   	fcall	_setDimmerLights_SwOn
  7199                           
  7200                           ;Dimmer_B1.c: 1460: setDimmerLights_SwOff(1);
  7201  035A  3001               	movlw	1
  7202  035B  118A  27A0  118A   	fcall	_setDimmerLights_SwOff
  7203                           
  7204                           ;Dimmer_B1.c: 1461: } else {
  7205  035E  2BAA               	goto	l4306
  7206  035F                     l417:	
  7207                           
  7208                           ;Dimmer_B1.c: 1462: if (Dimmer.PIR_Lights_Status == 1) {
  7209  035F  1283               	bcf	3,5	;RP0=0, select bank0
  7210  0360  1303               	bcf	3,6	;RP1=0, select bank0
  7211  0361  1D28               	btfss	_Dimmer+1,2
  7212  0362  2BAA               	goto	l4306
  7213                           
  7214                           ;Dimmer_B1.c: 1463: Dimmer.PIR_Lights_Status = 0;
  7215  0363  1128               	bcf	_Dimmer+1,2
  7216                           
  7217                           ;Dimmer_B1.c: 1464: Dimmer.PIR_Close_Status = 0;
  7218  0364  1028               	bcf	_Dimmer+1,0
  7219                           
  7220                           ;Dimmer_B1.c: 1465: DimmerLights1.Trigger = 0;
  7221  0365  10BF               	bcf	_DimmerLights1,1
  7222                           
  7223                           ;Dimmer_B1.c: 1467: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.8)));
  7224  0366  3018               	movlw	24
  7225  0367  00E0               	movwf	??_DimmerLights_PIR_Control
  7226  0368  0860               	movf	??_DimmerLights_PIR_Control,w
  7227  0369  00DD               	movwf	setDimmerIntr_MaxmumValue@value
  7228  036A  3001               	movlw	1
  7229  036B  158A  25E3  118A   	fcall	_setDimmerIntr_MaxmumValue
  7230                           
  7231                           ;Dimmer_B1.c: 1468: setDimmerIntr_Dimming_RF(1, 1);
  7232  036E  1283               	bcf	3,5	;RP0=0, select bank0
  7233  036F  1303               	bcf	3,6	;RP1=0, select bank0
  7234  0370  01DA               	clrf	setDimmerIntr_Dimming_RF@command
  7235  0371  0ADA               	incf	setDimmerIntr_Dimming_RF@command,f
  7236  0372  3001               	movlw	1
  7237  0373  158A  26BF  118A   	fcall	_setDimmerIntr_Dimming_RF
  7238                           
  7239                           ;Dimmer_B1.c: 1469: }
  7240                           ;Dimmer_B1.c: 1470: }
  7241                           ;Dimmer_B1.c: 1471: } else if (Dimmer.PIR_Sw == 0) {
  7242  0376  2BAA               	goto	l4306
  7243  0377                     l416:	
  7244  0377  1A27               	btfsc	_Dimmer,4
  7245  0378  2BAA               	goto	l4306
  7246                           
  7247                           ;Dimmer_B1.c: 1472: if (getDimmerLights_Status(1) == 1) {
  7248  0379  3001               	movlw	1
  7249  037A  158A  2651  118A   	fcall	_getDimmerLights_Status
  7250  037D  3A01               	xorlw	1
  7251  037E  1D03               	skipz
  7252  037F  2BAA               	goto	l4306
  7253                           
  7254                           ;Dimmer_B1.c: 1473: if (Dimmer.PIR_Lights_Status == 0) {
  7255  0380  1283               	bcf	3,5	;RP0=0, select bank0
  7256  0381  1303               	bcf	3,6	;RP1=0, select bank0
  7257  0382  1928               	btfsc	_Dimmer+1,2
  7258  0383  2B96               	goto	l423
  7259                           
  7260                           ;Dimmer_B1.c: 1474: Dimmer.PIR_Lights_Status = 1;
  7261  0384  1528               	bsf	_Dimmer+1,2
  7262                           
  7263                           ;Dimmer_B1.c: 1475: setDimmerIntr_MaxmumValue(1, ((char)((100-(char)(((70-10)/2)+10))*0.
      +                          8)));
  7264  0385  3030               	movlw	48
  7265  0386  00E0               	movwf	??_DimmerLights_PIR_Control
  7266  0387  0860               	movf	??_DimmerLights_PIR_Control,w
  7267  0388  00DD               	movwf	setDimmerIntr_MaxmumValue@value
  7268  0389  3001               	movlw	1
  7269  038A  158A  25E3  118A   	fcall	_setDimmerIntr_MaxmumValue
  7270                           
  7271                           ;Dimmer_B1.c: 1476: setDimmerIntr_Dimming_RF(1, 1);
  7272  038D  1283               	bcf	3,5	;RP0=0, select bank0
  7273  038E  1303               	bcf	3,6	;RP1=0, select bank0
  7274  038F  01DA               	clrf	setDimmerIntr_Dimming_RF@command
  7275  0390  0ADA               	incf	setDimmerIntr_Dimming_RF@command,f
  7276  0391  3001               	movlw	1
  7277  0392  158A  26BF  118A   	fcall	_setDimmerIntr_Dimming_RF
  7278                           
  7279                           ;Dimmer_B1.c: 1477: } else {
  7280  0395  2BAA               	goto	l4306
  7281  0396                     l423:	
  7282                           
  7283                           ;Dimmer_B1.c: 1478: Dimmer.PIR_Lights_Status = 0;
  7284  0396  1128               	bcf	_Dimmer+1,2
  7285                           
  7286                           ;Dimmer_B1.c: 1479: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.8)));
  7287  0397  3048               	movlw	72
  7288  0398  00E0               	movwf	??_DimmerLights_PIR_Control
  7289  0399  0860               	movf	??_DimmerLights_PIR_Control,w
  7290  039A  00DD               	movwf	setDimmerIntr_MaxmumValue@value
  7291  039B  3001               	movlw	1
  7292  039C  158A  25E3  118A   	fcall	_setDimmerIntr_MaxmumValue
  7293                           
  7294                           ;Dimmer_B1.c: 1480: setDimmerIntr_Dimming_RF(1, 1);
  7295  039F  1283               	bcf	3,5	;RP0=0, select bank0
  7296  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  7297  03A1  01DA               	clrf	setDimmerIntr_Dimming_RF@command
  7298  03A2  0ADA               	incf	setDimmerIntr_Dimming_RF@command,f
  7299  03A3  3001               	movlw	1
  7300  03A4  158A  26BF  118A   	fcall	_setDimmerIntr_Dimming_RF
  7301                           
  7302                           ;Dimmer_B1.c: 1481: Dimmer.PIR_Close_Status = 1;
  7303  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  7304  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  7305  03A9  1428               	bsf	_Dimmer+1,0
  7306  03AA                     l4306:	
  7307                           
  7308                           ;Dimmer_B1.c: 1482: }
  7309                           ;Dimmer_B1.c: 1483: }
  7310                           ;Dimmer_B1.c: 1484: }
  7311                           ;Dimmer_B1.c: 1485: }
  7312                           ;Dimmer_B1.c: 1486: if (Dimmer.PIR_Open_Status == 1) {
  7313  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  7314  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  7315  03AC  1CA8               	btfss	_Dimmer+1,1
  7316  03AD  2BBF               	goto	l4312
  7317                           
  7318                           ;Dimmer_B1.c: 1487: Dimmer.PIR_Open_Status = 0;
  7319  03AE  10A8               	bcf	_Dimmer+1,1
  7320                           
  7321                           ;Dimmer_B1.c: 1488: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.8)));
  7322  03AF  3018               	movlw	24
  7323  03B0  00E0               	movwf	??_DimmerLights_PIR_Control
  7324  03B1  0860               	movf	??_DimmerLights_PIR_Control,w
  7325  03B2  00DD               	movwf	setDimmerIntr_MaxmumValue@value
  7326  03B3  3001               	movlw	1
  7327  03B4  158A  25E3  118A   	fcall	_setDimmerIntr_MaxmumValue
  7328                           
  7329                           ;Dimmer_B1.c: 1489: setDimmerIntr_Dimming_RF(1, 1);
  7330  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  7331  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  7332  03B9  01DA               	clrf	setDimmerIntr_Dimming_RF@command
  7333  03BA  0ADA               	incf	setDimmerIntr_Dimming_RF@command,f
  7334  03BB  3001               	movlw	1
  7335  03BC  158A  26BF  118A   	fcall	_setDimmerIntr_Dimming_RF
  7336  03BF                     l4312:	
  7337                           
  7338                           ;Dimmer_B1.c: 1490: }
  7339                           ;Dimmer_B1.c: 1491: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7340  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  7341  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  7342  03C1  1C28               	btfss	_Dimmer+1,0
  7343  03C2  0008               	return
  7344  03C3  1B20               	btfsc	_DimmerIntr1,6
  7345  03C4  0008               	return
  7346                           
  7347                           ;Dimmer_B1.c: 1492: Dimmer.PIR_Close_Status = 0;
  7348  03C5  1028               	bcf	_Dimmer+1,0
  7349                           
  7350                           ;Dimmer_B1.c: 1493: setDimmerLights_SwOn(1);
  7351  03C6  3001               	movlw	1
  7352  03C7  158A  27DD  118A   	fcall	_setDimmerLights_SwOn
  7353                           
  7354                           ;Dimmer_B1.c: 1494: setDimmerLights_SwOff(1);
  7355  03CA  3001               	movlw	1
  7356  03CB  118A  27A0         	fcall	_setDimmerLights_SwOff
  7357  03CD  0008               	return
  7358  03CE                     __end_of_DimmerLights_PIR_Control:	
  7359                           
  7360                           	psect	text46
  7361  0FDD                     __ptext46:	
  7362 ;; *************** function _setDimmerLights_SwOn *****************
  7363 ;; Defined at:
  7364 ;;		line 653 in file "../src/Dimmer_B1.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  sw              1    wreg     unsigned char 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  sw              1    2[BANK0 ] unsigned char 
  7369 ;;  idle            1    3[BANK0 ] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;		None               void
  7372 ;; Registers used:
  7373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7379 ;;      Params:         0       0       0       0
  7380 ;;      Locals:         0       2       0       0
  7381 ;;      Temps:          0       0       0       0
  7382 ;;      Totals:         0       2       0       0
  7383 ;;Total ram usage:        2 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    4
  7386 ;; This function calls:
  7387 ;;		_DimmerLights_SelectPointer
  7388 ;; This function is called by:
  7389 ;;		_DimmerLights_PIR_Control
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function _setDimmerLights_SwOn
  7395  0FDD                     _setDimmerLights_SwOn:	
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7399                           ;setDimmerLights_SwOn@sw stored from wreg
  7400  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  7402  0FDF  00DC               	movwf	setDimmerLights_SwOn@sw
  7403                           
  7404                           ;Dimmer_B1.c: 654: char idle = 0;
  7405  0FE0  01DD               	clrf	setDimmerLights_SwOn@idle
  7406                           
  7407                           ;Dimmer_B1.c: 679: DimmerLights_SelectPointer(sw);
  7408  0FE1  085C               	movf	setDimmerLights_SwOn@sw,w
  7409  0FE2  158A  25CB  158A   	fcall	_DimmerLights_SelectPointer
  7410                           
  7411                           ;Dimmer_B1.c: 680: if (idle == 0) {
  7412  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  7413  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  7414  0FE7  08DD               	movf	setDimmerLights_SwOn@idle,f
  7415  0FE8  1D03               	skipz
  7416  0FE9  0008               	return
  7417                           
  7418                           ;Dimmer_B1.c: 681: DimmerLights->SwFlag = 1;
  7419  0FEA  0872               	movf	_DimmerLights,w
  7420  0FEB  0084               	movwf	4
  7421  0FEC  1383               	bcf	3,7	;select IRP bank0
  7422  0FED  1400               	bsf	0,0
  7423                           
  7424                           ;Dimmer_B1.c: 682: if (DimmerLights->Status == 0) {
  7425  0FEE  0A72               	incf	_DimmerLights,w
  7426  0FEF  0084               	movwf	4
  7427  0FF0  1800               	btfsc	0,0
  7428  0FF1  2FFC               	goto	l4068
  7429                           
  7430                           ;Dimmer_B1.c: 683: DimmerLights->Status = 1;
  7431  0FF2  0A72               	incf	_DimmerLights,w
  7432  0FF3  0084               	movwf	4
  7433  0FF4  1400               	bsf	0,0
  7434                           
  7435                           ;Dimmer_B1.c: 684: DimmerLights->Trigger = 1;
  7436  0FF5  0872               	movf	_DimmerLights,w
  7437  0FF6  0084               	movwf	4
  7438  0FF7  1480               	bsf	0,1
  7439                           
  7440                           ;Dimmer_B1.c: 685: DimmerLights->Switch = 1;
  7441  0FF8  0872               	movf	_DimmerLights,w
  7442  0FF9  0084               	movwf	4
  7443  0FFA  1500               	bsf	0,2
  7444                           
  7445                           ;Dimmer_B1.c: 686: } else {
  7446  0FFB  0008               	return
  7447  0FFC                     l4068:	
  7448                           
  7449                           ;Dimmer_B1.c: 687: DimmerLights->Status = 0;
  7450  0FFC  0A72               	incf	_DimmerLights,w
  7451  0FFD  0084               	movwf	4
  7452  0FFE  1000               	bcf	0,0
  7453  0FFF  0008               	return
  7454  1000                     __end_of_setDimmerLights_SwOn:	
  7455                           ;Dimmer_B1.c: 688: }
  7456                           ;Dimmer_B1.c: 689: ;;
  7457                           
  7458                           
  7459                           	psect	text47
  7460  07A0                     __ptext47:	
  7461 ;; *************** function _setDimmerLights_SwOff *****************
  7462 ;; Defined at:
  7463 ;;		line 694 in file "../src/Dimmer_B1.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  sw              1    wreg     unsigned char 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  sw              1    2[BANK0 ] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;		None               void
  7470 ;; Registers used:
  7471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7477 ;;      Params:         0       0       0       0
  7478 ;;      Locals:         0       1       0       0
  7479 ;;      Temps:          0       0       0       0
  7480 ;;      Totals:         0       1       0       0
  7481 ;;Total ram usage:        1 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    4
  7484 ;; This function calls:
  7485 ;;		_DimmerLights_SelectPointer
  7486 ;; This function is called by:
  7487 ;;		_DimmerLights_PIR_Control
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           
  7492                           ;psect for function _setDimmerLights_SwOff
  7493  07A0                     _setDimmerLights_SwOff:	
  7494                           
  7495                           ;incstack = 0
  7496                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7497                           ;setDimmerLights_SwOff@sw stored from wreg
  7498  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7499  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7500  07A2  00DC               	movwf	setDimmerLights_SwOff@sw
  7501                           
  7502                           ;Dimmer_B1.c: 695: DimmerLights_SelectPointer(sw);
  7503  07A3  085C               	movf	setDimmerLights_SwOff@sw,w
  7504  07A4  158A  25CB  118A   	fcall	_DimmerLights_SelectPointer
  7505                           
  7506                           ;Dimmer_B1.c: 697: if (DimmerLights->SwFlag == 1) {
  7507  07A7  0872               	movf	_DimmerLights,w
  7508  07A8  0084               	movwf	4
  7509  07A9  1383               	bcf	3,7	;select IRP bank0
  7510  07AA  1C00               	btfss	0,0
  7511  07AB  0008               	return
  7512                           
  7513                           ;Dimmer_B1.c: 698: DimmerLights->SwFlag = 0;
  7514  07AC  0872               	movf	_DimmerLights,w
  7515  07AD  0084               	movwf	4
  7516  07AE  1000               	bcf	0,0
  7517                           
  7518                           ;Dimmer_B1.c: 699: if (DimmerLights->Status == 1) {
  7519  07AF  0A72               	incf	_DimmerLights,w
  7520  07B0  0084               	movwf	4
  7521  07B1  1C00               	btfss	0,0
  7522  07B2  2FC1               	goto	l4080
  7523                           
  7524                           ;Dimmer_B1.c: 700: if (DimmerLights->DimmingSwFlag == 1) {
  7525  07B3  0872               	movf	_DimmerLights,w
  7526  07B4  0084               	movwf	4
  7527  07B5  1D80               	btfss	0,3
  7528  07B6  0008               	return
  7529                           
  7530                           ;Dimmer_B1.c: 701: DimmerLights->DimmingSwFlag = 0;
  7531  07B7  0872               	movf	_DimmerLights,w
  7532  07B8  0084               	movwf	4
  7533  07B9  1180               	bcf	0,3
  7534                           
  7535                           ;Dimmer_B1.c: 703: DimmerLights->DimmingTrigger = 1;
  7536  07BA  0872               	movf	_DimmerLights,w
  7537  07BB  0084               	movwf	4
  7538  07BC  1600               	bsf	0,4
  7539                           
  7540                           ;Dimmer_B1.c: 704: DimmerLights->DimmingSwitch = 0;
  7541  07BD  0872               	movf	_DimmerLights,w
  7542  07BE  0084               	movwf	4
  7543  07BF  1280               	bcf	0,5
  7544                           
  7545                           ;Dimmer_B1.c: 705: }
  7546                           ;Dimmer_B1.c: 706: } else {
  7547  07C0  0008               	return
  7548  07C1                     l4080:	
  7549                           
  7550                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = 1;
  7551  07C1  0872               	movf	_DimmerLights,w
  7552  07C2  0084               	movwf	4
  7553  07C3  1480               	bsf	0,1
  7554                           
  7555                           ;Dimmer_B1.c: 709: DimmerLights->Switch = 0;
  7556  07C4  0872               	movf	_DimmerLights,w
  7557  07C5  0084               	movwf	4
  7558  07C6  1100               	bcf	0,2
  7559  07C7  0008               	return
  7560  07C8                     __end_of_setDimmerLights_SwOff:	
  7561                           
  7562                           	psect	text48
  7563  0DE3                     __ptext48:	
  7564 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7565 ;; Defined at:
  7566 ;;		line 89 in file "../src/Dimmer_B1.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  lights          1    wreg     unsigned char 
  7569 ;;  value           1    3[BANK0 ] unsigned char 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  lights          1    5[BANK0 ] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;		None               void
  7574 ;; Registers used:
  7575 ;;		wreg
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7581 ;;      Params:         0       1       0       0
  7582 ;;      Locals:         0       1       0       0
  7583 ;;      Temps:          0       1       0       0
  7584 ;;      Totals:         0       3       0       0
  7585 ;;Total ram usage:        3 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    3
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_setDimmerLights_Dimming
  7592 ;;		_DimmerLights_PIR_Control
  7593 ;; This function uses a non-reentrant model
  7594 ;;
  7595                           
  7596                           
  7597                           ;psect for function _setDimmerIntr_MaxmumValue
  7598  0DE3                     _setDimmerIntr_MaxmumValue:	
  7599                           
  7600                           ;incstack = 0
  7601                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7602                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7603  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  7604  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  7605  0DE5  00DF               	movwf	setDimmerIntr_MaxmumValue@lights
  7606                           
  7607                           ;Dimmer_B1.c: 91: if (lights == 1) {
  7608  0DE6  085F               	movf	setDimmerIntr_MaxmumValue@lights,w
  7609  0DE7  3A01               	xorlw	1
  7610  0DE8  1D03               	skipz
  7611  0DE9  0008               	return
  7612                           
  7613                           ;Dimmer_B1.c: 92: DimmerIntr1.MaxmumValue = value;
  7614  0DEA  085D               	movf	setDimmerIntr_MaxmumValue@value,w
  7615  0DEB  00DE               	movwf	??_setDimmerIntr_MaxmumValue
  7616  0DEC  085E               	movf	??_setDimmerIntr_MaxmumValue,w
  7617  0DED  00A5               	movwf	_DimmerIntr1+5
  7618  0DEE  0008               	return
  7619  0DEF                     __end_of_setDimmerIntr_MaxmumValue:	
  7620                           
  7621                           	psect	text49
  7622  0EBF                     __ptext49:	
  7623 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7624 ;; Defined at:
  7625 ;;		line 184 in file "../src/Dimmer_B1.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  lights          1    wreg     unsigned char 
  7628 ;;  command         1    0[BANK0 ] unsigned char 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  lights          1    2[BANK0 ] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;		None               void
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7640 ;;      Params:         0       1       0       0
  7641 ;;      Locals:         0       1       0       0
  7642 ;;      Temps:          0       1       0       0
  7643 ;;      Totals:         0       3       0       0
  7644 ;;Total ram usage:        3 bytes
  7645 ;; Hardware stack levels used:    1
  7646 ;; Hardware stack levels required when called:    3
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_DimmerLights_PIR_Control
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           
  7655                           ;psect for function _setDimmerIntr_Dimming_RF
  7656  0EBF                     _setDimmerIntr_Dimming_RF:	
  7657                           
  7658                           ;incstack = 0
  7659                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7660                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7661  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  7662  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  7663  0EC1  00DC               	movwf	setDimmerIntr_Dimming_RF@lights
  7664                           
  7665                           ;Dimmer_B1.c: 186: if (lights == 1) {
  7666  0EC2  085C               	movf	setDimmerIntr_Dimming_RF@lights,w
  7667  0EC3  3A01               	xorlw	1
  7668  0EC4  1D03               	skipz
  7669  0EC5  0008               	return
  7670                           
  7671                           ;Dimmer_B1.c: 187: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7672  0EC6  085A               	movf	setDimmerIntr_Dimming_RF@command,w
  7673  0EC7  3A01               	xorlw	1
  7674  0EC8  3000               	movlw	0
  7675  0EC9  1903               	skipnz
  7676  0ECA  3001               	movlw	1
  7677  0ECB  00DB               	movwf	??_setDimmerIntr_Dimming_RF
  7678  0ECC  0EDB               	swapf	??_setDimmerIntr_Dimming_RF,f
  7679  0ECD  0DDB               	rlf	??_setDimmerIntr_Dimming_RF,f
  7680  0ECE  0DDB               	rlf	??_setDimmerIntr_Dimming_RF,f
  7681  0ECF  0820               	movf	_DimmerIntr1,w
  7682  0ED0  065B               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7683  0ED1  39BF               	andlw	-65
  7684  0ED2  065B               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7685  0ED3  00A0               	movwf	_DimmerIntr1
  7686  0ED4  0008               	return
  7687  0ED5                     __end_of_setDimmerIntr_Dimming_RF:	
  7688                           
  7689                           	psect	text50
  7690  0DD7                     __ptext50:	
  7691 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7692 ;; Defined at:
  7693 ;;		line 49 in file "../src/Dimmer_B1.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  lights          1    wreg     unsigned char 
  7696 ;;  value           1    0[BANK0 ] unsigned char 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  lights          1    2[BANK0 ] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;		None               void
  7701 ;; Registers used:
  7702 ;;		wreg
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7708 ;;      Params:         0       1       0       0
  7709 ;;      Locals:         0       1       0       0
  7710 ;;      Temps:          0       1       0       0
  7711 ;;      Totals:         0       3       0       0
  7712 ;;Total ram usage:        3 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    3
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_DimmerLights_PIR_Control
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function _setDimmerIntr_DimmingValue
  7724  0DD7                     _setDimmerIntr_DimmingValue:	
  7725                           
  7726                           ;incstack = 0
  7727                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7728                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7729  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  7730  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  7731  0DD9  00DC               	movwf	setDimmerIntr_DimmingValue@lights
  7732                           
  7733                           ;Dimmer_B1.c: 51: if (lights == 1) {
  7734  0DDA  085C               	movf	setDimmerIntr_DimmingValue@lights,w
  7735  0DDB  3A01               	xorlw	1
  7736  0DDC  1D03               	skipz
  7737  0DDD  0008               	return
  7738                           
  7739                           ;Dimmer_B1.c: 52: DimmerIntr1.DimmingValue = value;
  7740  0DDE  085A               	movf	setDimmerIntr_DimmingValue@value,w
  7741  0DDF  00DB               	movwf	??_setDimmerIntr_DimmingValue
  7742  0DE0  085B               	movf	??_setDimmerIntr_DimmingValue,w
  7743  0DE1  00A4               	movwf	_DimmerIntr1+4
  7744  0DE2  0008               	return
  7745  0DE3                     __end_of_setDimmerIntr_DimmingValue:	
  7746                           
  7747                           	psect	text51
  7748  0E51                     __ptext51:	
  7749 ;; *************** function _getDimmerLights_Status *****************
  7750 ;; Defined at:
  7751 ;;		line 1006 in file "../src/Dimmer_B1.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  lights          1    wreg     unsigned char 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  lights          1    2[BANK0 ] unsigned char 
  7756 ;;  status          1    3[BANK0 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      unsigned char 
  7759 ;; Registers used:
  7760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7766 ;;      Params:         0       0       0       0
  7767 ;;      Locals:         0       2       0       0
  7768 ;;      Temps:          0       0       0       0
  7769 ;;      Totals:         0       2       0       0
  7770 ;;Total ram usage:        2 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    4
  7773 ;; This function calls:
  7774 ;;		_DimmerLights_SelectPointer
  7775 ;; This function is called by:
  7776 ;;		_DimmerLights_PIR_Control
  7777 ;;		_Exception_Main
  7778 ;;		_PIR_Main
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           
  7783                           ;psect for function _getDimmerLights_Status
  7784  0E51                     _getDimmerLights_Status:	
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7788                           ;getDimmerLights_Status@lights stored from wreg
  7789  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  7790  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  7791  0E53  00DC               	movwf	getDimmerLights_Status@lights
  7792                           
  7793                           ;Dimmer_B1.c: 1007: DimmerLights_SelectPointer(lights);
  7794  0E54  085C               	movf	getDimmerLights_Status@lights,w
  7795  0E55  158A  25CB         	fcall	_DimmerLights_SelectPointer
  7796                           
  7797                           ;Dimmer_B1.c: 1008: char status = DimmerLights->Status == 1 ? 1 : 0;
  7798  0E57  0A72               	incf	_DimmerLights,w
  7799  0E58  0084               	movwf	4
  7800  0E59  3000               	movlw	0
  7801  0E5A  1383               	bcf	3,7	;select IRP bank0
  7802  0E5B  1800               	btfsc	0,0
  7803  0E5C  3001               	movlw	1
  7804  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  7805  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  7806  0E5F  00DD               	movwf	getDimmerLights_Status@status
  7807                           
  7808                           ;Dimmer_B1.c: 1009: return status;
  7809  0E60  085D               	movf	getDimmerLights_Status@status,w
  7810  0E61  0008               	return
  7811  0E62                     __end_of_getDimmerLights_Status:	
  7812                           
  7813                           	psect	text52
  7814  0DCB                     __ptext52:	
  7815 ;; *************** function _DimmerLights_SelectPointer *****************
  7816 ;; Defined at:
  7817 ;;		line 576 in file "../src/Dimmer_B1.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  lights          1    wreg     unsigned char 
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;  lights          1    1[BANK0 ] unsigned char 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;		None               void
  7824 ;; Registers used:
  7825 ;;		wreg
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7831 ;;      Params:         0       0       0       0
  7832 ;;      Locals:         0       1       0       0
  7833 ;;      Temps:          0       1       0       0
  7834 ;;      Totals:         0       2       0       0
  7835 ;;Total ram usage:        2 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; Hardware stack levels required when called:    3
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_setDimmerLights_SwOn
  7842 ;;		_setDimmerLights_SwOff
  7843 ;;		_setDimmerLights_Main
  7844 ;;		_getDimmerLights_Status
  7845 ;;		_setDimmerLights_DimmingOn
  7846 ;;		_setDimmerLights_Status
  7847 ;;		_setDimmerLights_DimmingRun
  7848 ;; This function uses a non-reentrant model
  7849 ;;
  7850                           
  7851                           
  7852                           ;psect for function _DimmerLights_SelectPointer
  7853  0DCB                     _DimmerLights_SelectPointer:	
  7854                           
  7855                           ;incstack = 0
  7856                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7857                           ;DimmerLights_SelectPointer@lights stored from wreg
  7858  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  7859  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  7860  0DCD  00DB               	movwf	DimmerLights_SelectPointer@lights
  7861                           
  7862                           ;Dimmer_B1.c: 578: if (lights == 1) {
  7863  0DCE  085B               	movf	DimmerLights_SelectPointer@lights,w
  7864  0DCF  3A01               	xorlw	1
  7865  0DD0  1D03               	skipz
  7866  0DD1  0008               	return
  7867                           
  7868                           ;Dimmer_B1.c: 579: DimmerLights = &DimmerLights1;
  7869  0DD2  303F               	movlw	_DimmerLights1& (0+255)
  7870  0DD3  00DA               	movwf	??_DimmerLights_SelectPointer
  7871  0DD4  085A               	movf	??_DimmerLights_SelectPointer,w
  7872  0DD5  00F2               	movwf	_DimmerLights
  7873  0DD6  0008               	return
  7874  0DD7                     __end_of_DimmerLights_SelectPointer:	
  7875                           
  7876                           	psect	text53
  7877  0D9D                     __ptext53:	
  7878 ;; *************** function _DimmerLights_Initialization *****************
  7879 ;; Defined at:
  7880 ;;		line 597 in file "../src/Dimmer_B1.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;		None               void
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0, pclath, cstack
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7894 ;;      Params:         0       0       0       0
  7895 ;;      Locals:         0       0       0       0
  7896 ;;      Temps:          0       0       0       0
  7897 ;;      Totals:         0       0       0       0
  7898 ;;Total ram usage:        0 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    4
  7901 ;; This function calls:
  7902 ;;		_DimmerIntr_Initialization
  7903 ;;		_setDimmerLights_Initialization
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function _DimmerLights_Initialization
  7911  0D9D                     _DimmerLights_Initialization:	
  7912                           
  7913                           ;Dimmer_B1.c: 599: setDimmerLights_Initialization(1);
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7917  0D9D  3001               	movlw	1
  7918  0D9E  158A  257D  158A   	fcall	_setDimmerLights_Initialization
  7919                           
  7920                           ;Dimmer_B1.c: 609: DimmerIntr_Initialization();
  7921  0DA1  158A  2684         	fcall	_DimmerIntr_Initialization
  7922  0DA3  0008               	return
  7923  0DA4                     __end_of_DimmerLights_Initialization:	
  7924                           
  7925                           	psect	text54
  7926  0D7D                     __ptext54:	
  7927 ;; *************** function _setDimmerLights_Initialization *****************
  7928 ;; Defined at:
  7929 ;;		line 613 in file "../src/Dimmer_B1.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  lights          1    wreg     unsigned char 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  lights          1    0[COMMON] unsigned char 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;		None               void
  7936 ;; Registers used:
  7937 ;;		wreg
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7943 ;;      Params:         0       0       0       0
  7944 ;;      Locals:         0       0       0       0
  7945 ;;      Temps:          0       0       0       0
  7946 ;;      Totals:         0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    3
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_DimmerLights_Initialization
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           
  7958                           ;psect for function _setDimmerLights_Initialization
  7959  0D7D                     _setDimmerLights_Initialization:	
  7960                           
  7961                           ;incstack = 0
  7962                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7963  0D7D  0008               	return
  7964  0D7E                     __end_of_setDimmerLights_Initialization:	
  7965                           
  7966                           	psect	text55
  7967  0E84                     __ptext55:	
  7968 ;; *************** function _DimmerIntr_Initialization *****************
  7969 ;; Defined at:
  7970 ;;		line 7 in file "../src/Dimmer_B1.c"
  7971 ;; Parameters:    Size  Location     Type
  7972 ;;		None
  7973 ;; Auto vars:     Size  Location     Type
  7974 ;;		None
  7975 ;; Return value:  Size  Location     Type
  7976 ;;		None               void
  7977 ;; Registers used:
  7978 ;;		wreg
  7979 ;; Tracked objects:
  7980 ;;		On entry : 0/0
  7981 ;;		On exit  : 0/0
  7982 ;;		Unchanged: 0/0
  7983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7984 ;;      Params:         0       0       0       0
  7985 ;;      Locals:         0       0       0       0
  7986 ;;      Temps:          0       1       0       0
  7987 ;;      Totals:         0       1       0       0
  7988 ;;Total ram usage:        1 bytes
  7989 ;; Hardware stack levels used:    1
  7990 ;; Hardware stack levels required when called:    3
  7991 ;; This function calls:
  7992 ;;		Nothing
  7993 ;; This function is called by:
  7994 ;;		_DimmerLights_Initialization
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           
  7999                           ;psect for function _DimmerIntr_Initialization
  8000  0E84                     _DimmerIntr_Initialization:	
  8001                           
  8002                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  8003                           
  8004                           ;incstack = 0
  8005                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  8006  0E84  3007               	movlw	7
  8007  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  8008  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  8009  0E87  00DA               	movwf	??_DimmerIntr_Initialization
  8010  0E88  085A               	movf	??_DimmerIntr_Initialization,w
  8011  0E89  00A3               	movwf	_DimmerIntr1+3
  8012                           
  8013                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.8));
  8014  0E8A  3018               	movlw	24
  8015  0E8B  00DA               	movwf	??_DimmerIntr_Initialization
  8016  0E8C  085A               	movf	??_DimmerIntr_Initialization,w
  8017  0E8D  00A5               	movwf	_DimmerIntr1+5
  8018                           
  8019                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.8));
  8020  0E8E  3048               	movlw	72
  8021  0E8F  00DA               	movwf	??_DimmerIntr_Initialization
  8022  0E90  085A               	movf	??_DimmerIntr_Initialization,w
  8023  0E91  00A6               	movwf	_DimmerIntr1+6
  8024                           
  8025                           ;Dimmer_B1.c: 13: DimmerIntr1.DimmingValue = ((char)((100-70)*0.8));
  8026  0E92  3018               	movlw	24
  8027  0E93  00DA               	movwf	??_DimmerIntr_Initialization
  8028  0E94  085A               	movf	??_DimmerIntr_Initialization,w
  8029  0E95  00A4               	movwf	_DimmerIntr1+4
  8030  0E96  0008               	return
  8031  0E97                     __end_of_DimmerIntr_Initialization:	
  8032                           
  8033                           	psect	text56
  8034  0714                     __ptext56:	
  8035 ;; *************** function _CDS_Main *****************
  8036 ;; Defined at:
  8037 ;;		line 11 in file "../src/CDS_B1.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;		None               void
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8051 ;;      Params:         0       0       0       0
  8052 ;;      Locals:         0       0       0       0
  8053 ;;      Temps:          0       3       0       0
  8054 ;;      Totals:         0       3       0       0
  8055 ;;Total ram usage:        3 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    3
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_main
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           
  8066                           ;psect for function _CDS_Main
  8067  0714                     _CDS_Main:	
  8068                           
  8069                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8070                           
  8071                           ;incstack = 0
  8072                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8073  0714  1283               	bcf	3,5	;RP0=0, select bank0
  8074  0715  1303               	bcf	3,6	;RP1=0, select bank0
  8075  0716  1C35               	btfss	__CDS,0
  8076  0717  0008               	return
  8077                           
  8078                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8079  0718  18B5               	btfsc	__CDS,1
  8080  0719  2F27               	goto	l123
  8081                           
  8082                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8083  071A  19B5               	btfsc	__CDS,3
  8084  071B  0008               	return
  8085                           
  8086                           ;CDS_B1.c: 16: _CDS.Time++;
  8087  071C  3001               	movlw	1
  8088  071D  00DA               	movwf	??_CDS_Main
  8089  071E  085A               	movf	??_CDS_Main,w
  8090  071F  07B6               	addwf	__CDS+1,f
  8091                           
  8092                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8093  0720  3005               	movlw	5
  8094  0721  0236               	subwf	__CDS+1,w
  8095  0722  1C03               	skipc
  8096  0723  0008               	return
  8097                           
  8098                           ;CDS_B1.c: 18: {
  8099                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8100  0724  01B6               	clrf	__CDS+1
  8101                           
  8102                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8103  0725  15B5               	bsf	__CDS,3
  8104                           
  8105                           ;CDS_B1.c: 21: }
  8106                           ;CDS_B1.c: 22: }
  8107                           ;CDS_B1.c: 23: } else {
  8108  0726  0008               	return
  8109  0727                     l123:	
  8110                           
  8111                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8112  0727  1CB5               	btfss	__CDS,1
  8113  0728  0008               	return
  8114                           
  8115                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8116  0729  10B5               	bcf	__CDS,1
  8117                           
  8118                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8119  072A  1A35               	btfsc	__CDS,4
  8120  072B  2F32               	goto	l4554
  8121                           
  8122                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8123  072C  0837               	movf	__CDS+2,w
  8124  072D  0238               	subwf	__CDS+3,w
  8125  072E  1C03               	skipc
  8126  072F  0008               	return
  8127                           
  8128                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8129  0730  1635               	bsf	__CDS,4
  8130                           
  8131                           ;CDS_B1.c: 29: }
  8132                           ;CDS_B1.c: 30: } else {
  8133  0731  0008               	return
  8134  0732                     l4554:	
  8135                           
  8136                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8137  0732  0837               	movf	__CDS+2,w
  8138  0733  3E9C               	addlw	156
  8139  0734  00DA               	movwf	??_CDS_Main
  8140  0735  30FF               	movlw	255
  8141  0736  1803               	skipnc
  8142  0737  3000               	movlw	0
  8143  0738  00DB               	movwf	??_CDS_Main+1
  8144  0739  085B               	movf	??_CDS_Main+1,w
  8145  073A  3A80               	xorlw	128
  8146  073B  00DC               	movwf	??_CDS_Main+2
  8147  073C  3080               	movlw	128
  8148  073D  025C               	subwf	??_CDS_Main+2,w
  8149  073E  1D03               	skipz
  8150  073F  2F42               	goto	u5445
  8151  0740  0838               	movf	__CDS+3,w
  8152  0741  025A               	subwf	??_CDS_Main,w
  8153  0742                     u5445:	
  8154  0742  1C03               	skipc
  8155  0743  0008               	return
  8156                           
  8157                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8158  0744  1283               	bcf	3,5	;RP0=0, select bank0
  8159  0745  1303               	bcf	3,6	;RP1=0, select bank0
  8160  0746  1235               	bcf	__CDS,4
  8161  0747  0008               	return
  8162  0748                     __end_of_CDS_Main:	
  8163                           
  8164                           	psect	text57
  8165  0D89                     __ptext57:	
  8166 ;; *************** function _CDS_Initialization *****************
  8167 ;; Defined at:
  8168 ;;		line 7 in file "../src/CDS_B1.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;		None               void
  8175 ;; Registers used:
  8176 ;;		None
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8182 ;;      Params:         0       0       0       0
  8183 ;;      Locals:         0       0       0       0
  8184 ;;      Temps:          0       0       0       0
  8185 ;;      Totals:         0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    3
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           
  8197                           ;psect for function _CDS_Initialization
  8198  0D89                     _CDS_Initialization:	
  8199                           
  8200                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8201                           
  8202                           ;incstack = 0
  8203                           ; Regs used in _CDS_Initialization: []
  8204  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  8205  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  8206  0D8B  1435               	bsf	__CDS,0
  8207  0D8C  0008               	return
  8208  0D8D                     __end_of_CDS_Initialization:	
  8209                           
  8210                           	psect	text58
  8211  0F01                     __ptext58:	
  8212 ;; *************** function _ISR *****************
  8213 ;; Defined at:
  8214 ;;		line 116 in file "../src/MCU_B1.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;		None               void
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0, pclath, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8228 ;;      Params:         0       0       0       0
  8229 ;;      Locals:         0       0       0       0
  8230 ;;      Temps:          4       0       0       0
  8231 ;;      Totals:         4       0       0       0
  8232 ;;Total ram usage:        4 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    2
  8235 ;; This function calls:
  8236 ;;		_TMR1_ISR
  8237 ;; This function is called by:
  8238 ;;		Interrupt level 1
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _ISR
  8244  0F01                     _ISR:	
  8245                           
  8246                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8247  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  8248  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  8249  0F03  1C0C               	btfss	12,0	;volatile
  8250  0F04  2F0C               	goto	i1l663
  8251  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  8252  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  8253  0F07  1C0C               	btfss	12,0	;volatile
  8254  0F08  2F0C               	goto	i1l663
  8255                           
  8256                           ;MCU_B1.c: 126: TMR1_ISR();
  8257  0F09  158A  279D  158A   	fcall	_TMR1_ISR
  8258  0F0C                     i1l663:	
  8259                           ;MCU_B1.c: 127: }
  8260                           ;MCU_B1.c: 148: return;
  8261                           
  8262  0F0C  0879               	movf	??_ISR+3,w
  8263  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  8264  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  8265  0F0F  00FF               	movwf	127
  8266  0F10  0878               	movf	??_ISR+2,w
  8267  0F11  008A               	movwf	10
  8268  0F12  0877               	movf	??_ISR+1,w
  8269  0F13  0084               	movwf	4
  8270  0F14  0E76               	swapf	??_ISR^(0+-128),w
  8271  0F15  0083               	movwf	3
  8272  0F16  0EFE               	swapf	126,f
  8273  0F17  0E7E               	swapf	126,w
  8274  0F18  0009               	retfie
  8275  0F19                     __end_of_ISR:	
  8276                           
  8277                           	psect	intentry
  8278  0004                     __pintentry:	
  8279                           ;incstack = 0
  8280                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8281                           
  8282  0004                     interrupt_function:	
  8283  007E                     saved_w	set	btemp
  8284  0004  00FE               	movwf	btemp
  8285  0005  0E03               	swapf	3,w
  8286  0006  00F6               	movwf	??_ISR
  8287  0007  0804               	movf	4,w
  8288  0008  00F7               	movwf	??_ISR+1
  8289  0009  080A               	movf	10,w
  8290  000A  00F8               	movwf	??_ISR+2
  8291  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8292  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8293  000D  087F               	movf	btemp+1,w
  8294  000E  00F9               	movwf	??_ISR+3
  8295  000F  158A  2F01         	ljmp	_ISR
  8296                           
  8297                           	psect	text59
  8298  0F9D                     __ptext59:	
  8299 ;; *************** function _TMR1_ISR *****************
  8300 ;; Defined at:
  8301 ;;		line 236 in file "../src/MCU_B1.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;		None
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;		None               void
  8308 ;; Registers used:
  8309 ;;		wreg, status,2, status,0, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8315 ;;      Params:         0       0       0       0
  8316 ;;      Locals:         0       0       0       0
  8317 ;;      Temps:          0       0       0       0
  8318 ;;      Totals:         0       0       0       0
  8319 ;;Total ram usage:        0 bytes
  8320 ;; Hardware stack levels used:    1
  8321 ;; Hardware stack levels required when called:    1
  8322 ;; This function calls:
  8323 ;;		_DimmerLights_IOC_1
  8324 ;;		_DimmerLights_TMR_1
  8325 ;; This function is called by:
  8326 ;;		_ISR
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           
  8331                           ;psect for function _TMR1_ISR
  8332  0F9D                     _TMR1_ISR:	
  8333                           
  8334                           ;MCU_B1.c: 238: TMR1H = (int)((65536-1480)/256);
  8335                           
  8336                           ;incstack = 0
  8337                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8338  0F9D  30FA               	movlw	250
  8339  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  8340  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  8341  0FA0  008F               	movwf	15	;volatile
  8342                           
  8343                           ;MCU_B1.c: 239: TMR1L = (int)((65536-1480)%256);
  8344  0FA1  3038               	movlw	56
  8345  0FA2  008E               	movwf	14	;volatile
  8346                           
  8347                           ;MCU_B1.c: 240: TMR1IF = 0;
  8348  0FA3  100C               	bcf	12,0	;volatile
  8349                           
  8350                           ;MCU_B1.c: 245: DimmerLights_IOC_1();
  8351  0FA4  158A  2641  158A   	fcall	_DimmerLights_IOC_1
  8352                           
  8353                           ;MCU_B1.c: 257: DimmerLights_TMR_1();
  8354  0FA7  118A  263F  158A   	fcall	_DimmerLights_TMR_1
  8355                           
  8356                           ;MCU_B1.c: 271: Timer1.Count++;
  8357  0FAA  3001               	movlw	1
  8358  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  8359  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  8360  0FAD  07BA               	addwf	_Timer1+1,f
  8361  0FAE  1803               	skipnc
  8362  0FAF  0ABB               	incf	_Timer1+2,f
  8363  0FB0  3000               	movlw	0
  8364  0FB1  07BB               	addwf	_Timer1+2,f
  8365                           
  8366                           ;MCU_B1.c: 272: if (Timer1.Count == (int)(20*10)) {
  8367  0FB2  30C8               	movlw	200
  8368  0FB3  063A               	xorwf	_Timer1+1,w
  8369  0FB4  043B               	iorwf	_Timer1+2,w
  8370  0FB5  1D03               	skipz
  8371  0FB6  0008               	return
  8372                           
  8373                           ;MCU_B1.c: 273: Timer1.Count = 0;
  8374  0FB7  01BA               	clrf	_Timer1+1
  8375  0FB8  01BB               	clrf	_Timer1+2
  8376                           
  8377                           ;MCU_B1.c: 274: Timer1.Timeout = 1;
  8378  0FB9  1439               	bsf	_Timer1,0
  8379  0FBA  0008               	return
  8380  0FBB                     __end_of_TMR1_ISR:	
  8381                           
  8382                           	psect	text60
  8383  063F                     __ptext60:	
  8384 ;; *************** function _DimmerLights_TMR_1 *****************
  8385 ;; Defined at:
  8386 ;;		line 1203 in file "../src/Dimmer_B1.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;		None               void
  8393 ;; Registers used:
  8394 ;;		wreg, status,2, status,0
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8400 ;;      Params:         0       0       0       0
  8401 ;;      Locals:         0       0       0       0
  8402 ;;      Temps:          1       0       0       0
  8403 ;;      Totals:         1       0       0       0
  8404 ;;Total ram usage:        1 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; This function calls:
  8407 ;;		Nothing
  8408 ;; This function is called by:
  8409 ;;		_TMR1_ISR
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _DimmerLights_TMR_1
  8415  063F                     _DimmerLights_TMR_1:	
  8416                           
  8417                           ;Dimmer_B1.c: 1204: if (DimmerIntr1.Start == 1) {
  8418                           
  8419                           ;incstack = 0
  8420                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8421  063F  1283               	bcf	3,5	;RP0=0, select bank0
  8422  0640  1303               	bcf	3,6	;RP1=0, select bank0
  8423  0641  1D20               	btfss	_DimmerIntr1,2
  8424  0642  2E4D               	goto	i1l3208
  8425                           
  8426                           ;Dimmer_B1.c: 1205: DimmerIntr1.Count++;
  8427  0643  3001               	movlw	1
  8428  0644  00F5               	movwf	??_DimmerLights_TMR_1
  8429  0645  0875               	movf	??_DimmerLights_TMR_1,w
  8430  0646  07A1               	addwf	_DimmerIntr1+1,f
  8431                           
  8432                           ;Dimmer_B1.c: 1206: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) + 1) {
  8433  0647  3049               	movlw	73
  8434  0648  0221               	subwf	_DimmerIntr1+1,w
  8435  0649  1C03               	skipc
  8436  064A  2E4D               	goto	i1l3208
  8437                           
  8438                           ;Dimmer_B1.c: 1207: DimmerIntr1.Count = 0;
  8439  064B  01A1               	clrf	_DimmerIntr1+1
  8440                           
  8441                           ;Dimmer_B1.c: 1208: DimmerIntr1.Start = 0;
  8442  064C  1120               	bcf	_DimmerIntr1,2
  8443  064D                     i1l3208:	
  8444                           
  8445                           ;Dimmer_B1.c: 1209: }
  8446                           ;Dimmer_B1.c: 1210: }
  8447                           ;Dimmer_B1.c: 1212: if (DimmerIntr1.GO == 1) {
  8448  064D  1C20               	btfss	_DimmerIntr1,0
  8449  064E  2E59               	goto	i1l383
  8450                           
  8451                           ;Dimmer_B1.c: 1213: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8452  064F  0824               	movf	_DimmerIntr1+4,w
  8453  0650  0221               	subwf	_DimmerIntr1+1,w
  8454  0651  1C03               	skipc
  8455  0652  2E88               	goto	i1l386
  8456                           
  8457                           ;Dimmer_B1.c: 1214: DimmerIntr1.GO = 0;
  8458  0653  1020               	bcf	_DimmerIntr1,0
  8459                           
  8460                           ;Dimmer_B1.c: 1215: DimmerIntr1.Tune = 1;
  8461  0654  14A0               	bsf	_DimmerIntr1,1
  8462                           
  8463                           ;Dimmer_B1.c: 1217: if (DimmerIntr1.ControlStatus == 1) {
  8464  0655  1DA0               	btfss	_DimmerIntr1,3
  8465  0656  2E88               	goto	i1l386
  8466                           
  8467                           ;Dimmer_B1.c: 1218: RB2 = 1;
  8468  0657  1506               	bsf	6,2	;volatile
  8469                           
  8470                           ;Dimmer_B1.c: 1220: }
  8471                           ;Dimmer_B1.c: 1221: }
  8472                           ;Dimmer_B1.c: 1222: } else {
  8473  0658  2E88               	goto	i1l386
  8474  0659                     i1l383:	
  8475                           
  8476                           ;Dimmer_B1.c: 1223: if (DimmerIntr1.Tune == 1) {
  8477  0659  1CA0               	btfss	_DimmerIntr1,1
  8478  065A  2E88               	goto	i1l386
  8479                           
  8480                           ;Dimmer_B1.c: 1224: DimmerIntr1.Tune = 0;
  8481  065B  10A0               	bcf	_DimmerIntr1,1
  8482                           
  8483                           ;Dimmer_B1.c: 1225: DimmerIntr1.TuneTime++;
  8484  065C  3001               	movlw	1
  8485  065D  00F5               	movwf	??_DimmerLights_TMR_1
  8486  065E  0875               	movf	??_DimmerLights_TMR_1,w
  8487  065F  07A2               	addwf	_DimmerIntr1+2,f
  8488                           
  8489                           ;Dimmer_B1.c: 1226: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8490  0660  0823               	movf	_DimmerIntr1+3,w
  8491  0661  0222               	subwf	_DimmerIntr1+2,w
  8492  0662  1C03               	skipc
  8493  0663  2E88               	goto	i1l386
  8494                           
  8495                           ;Dimmer_B1.c: 1227: DimmerIntr1.TuneTime = 0;
  8496  0664  01A2               	clrf	_DimmerIntr1+2
  8497                           
  8498                           ;Dimmer_B1.c: 1228: if (DimmerIntr1.Dimming_Sw == 1) {
  8499  0665  1E20               	btfss	_DimmerIntr1,4
  8500  0666  2E75               	goto	i1l389
  8501                           
  8502                           ;Dimmer_B1.c: 1229: if (DimmerIntr1.Dimming_Status == 0) {
  8503  0667  1AA0               	btfsc	_DimmerIntr1,5
  8504  0668  2E6F               	goto	i1l3232
  8505                           
  8506                           ;Dimmer_B1.c: 1230: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.8))) {
  8507  0669  3019               	movlw	25
  8508  066A  0224               	subwf	_DimmerIntr1+4,w
  8509  066B  1803               	btfsc	3,0
  8510  066C  2E7B               	goto	i1l3238
  8511                           
  8512                           ;Dimmer_B1.c: 1233: DimmerIntr1.Dimming_Status = 1;
  8513                           
  8514                           ;Dimmer_B1.c: 1232: } else {
  8515                           
  8516                           ;Dimmer_B1.c: 1231: DimmerIntr1.DimmingValue--;
  8517  066D  16A0               	bsf	_DimmerIntr1,5
  8518                           
  8519                           ;Dimmer_B1.c: 1234: }
  8520                           ;Dimmer_B1.c: 1235: } else {
  8521  066E  2E88               	goto	i1l386
  8522  066F                     i1l3232:	
  8523                           
  8524                           ;Dimmer_B1.c: 1236: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.8))) {
  8525  066F  3048               	movlw	72
  8526  0670  0224               	subwf	_DimmerIntr1+4,w
  8527  0671  1C03               	btfss	3,0
  8528  0672  2E82               	goto	i1l3242
  8529                           
  8530                           ;Dimmer_B1.c: 1239: DimmerIntr1.Dimming_Status = 0;
  8531                           
  8532                           ;Dimmer_B1.c: 1238: } else {
  8533                           
  8534                           ;Dimmer_B1.c: 1237: DimmerIntr1.DimmingValue++;
  8535  0673  12A0               	bcf	_DimmerIntr1,5
  8536                           
  8537                           ;Dimmer_B1.c: 1240: }
  8538                           ;Dimmer_B1.c: 1241: }
  8539                           ;Dimmer_B1.c: 1242: } else if (DimmerIntr1.Dimming_RF == 1) {
  8540  0674  2E88               	goto	i1l386
  8541  0675                     i1l389:	
  8542  0675  1F20               	btfss	_DimmerIntr1,6
  8543  0676  2E88               	goto	i1l386
  8544                           
  8545                           ;Dimmer_B1.c: 1243: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8546  0677  0824               	movf	_DimmerIntr1+4,w
  8547  0678  0225               	subwf	_DimmerIntr1+5,w
  8548  0679  1803               	skipnc
  8549  067A  2E7E               	goto	i1l3240
  8550  067B                     i1l3238:	
  8551                           
  8552                           ;Dimmer_B1.c: 1244: DimmerIntr1.DimmingValue--;
  8553  067B  3001               	movlw	1
  8554  067C  02A4               	subwf	_DimmerIntr1+4,f
  8555                           
  8556                           ;Dimmer_B1.c: 1245: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8557  067D  2E88               	goto	i1l386
  8558  067E                     i1l3240:	
  8559  067E  0825               	movf	_DimmerIntr1+5,w
  8560  067F  0224               	subwf	_DimmerIntr1+4,w
  8561  0680  1803               	skipnc
  8562  0681  2E87               	goto	i1l400
  8563  0682                     i1l3242:	
  8564                           
  8565                           ;Dimmer_B1.c: 1246: DimmerIntr1.DimmingValue++;
  8566  0682  3001               	movlw	1
  8567  0683  00F5               	movwf	??_DimmerLights_TMR_1
  8568  0684  0875               	movf	??_DimmerLights_TMR_1,w
  8569  0685  07A4               	addwf	_DimmerIntr1+4,f
  8570                           
  8571                           ;Dimmer_B1.c: 1247: } else {
  8572  0686  2E88               	goto	i1l386
  8573  0687                     i1l400:	
  8574                           
  8575                           ;Dimmer_B1.c: 1248: DimmerIntr1.Dimming_RF = 0;
  8576  0687  1320               	bcf	_DimmerIntr1,6
  8577  0688                     i1l386:	
  8578                           
  8579                           ;Dimmer_B1.c: 1249: }
  8580                           ;Dimmer_B1.c: 1250: }
  8581                           ;Dimmer_B1.c: 1251: }
  8582                           ;Dimmer_B1.c: 1252: }
  8583                           ;Dimmer_B1.c: 1253: }
  8584                           ;Dimmer_B1.c: 1254: if (RB2 == 1) {
  8585  0688  1D06               	btfss	6,2	;volatile
  8586  0689  0008               	return
  8587                           
  8588                           ;Dimmer_B1.c: 1255: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) - 10) {
  8589  068A  303E               	movlw	62
  8590  068B  0221               	subwf	_DimmerIntr1+1,w
  8591  068C  1C03               	skipc
  8592  068D  0008               	return
  8593                           
  8594                           ;Dimmer_B1.c: 1256: RB2 = 0;
  8595  068E  1106               	bcf	6,2	;volatile
  8596  068F  0008               	return
  8597  0690                     __end_of_DimmerLights_TMR_1:	
  8598                           
  8599                           	psect	text61
  8600  0E41                     __ptext61:	
  8601 ;; *************** function _DimmerLights_IOC_1 *****************
  8602 ;; Defined at:
  8603 ;;		line 1262 in file "../src/Dimmer_B1.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;		None
  8608 ;; Return value:  Size  Location     Type
  8609 ;;		None               void
  8610 ;; Registers used:
  8611 ;;		None
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8617 ;;      Params:         0       0       0       0
  8618 ;;      Locals:         0       0       0       0
  8619 ;;      Temps:          0       0       0       0
  8620 ;;      Totals:         0       0       0       0
  8621 ;;Total ram usage:        0 bytes
  8622 ;; Hardware stack levels used:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_TMR1_ISR
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           
  8631                           ;psect for function _DimmerLights_IOC_1
  8632  0E41                     _DimmerLights_IOC_1:	
  8633                           
  8634                           ;Dimmer_B1.c: 1265: if (RA7 == 1) {
  8635                           
  8636                           ;incstack = 0
  8637                           ; Regs used in _DimmerLights_IOC_1: []
  8638  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  8639  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  8640  0E43  1F85               	btfss	5,7	;volatile
  8641  0E44  2E49               	goto	i1l407
  8642                           
  8643                           ;Dimmer_B1.c: 1266: if (Dimmer.PIR_DimmerSignal == 1) {
  8644  0E45  1DA7               	btfss	_Dimmer,3
  8645  0E46  0008               	return
  8646                           
  8647                           ;Dimmer_B1.c: 1267: Dimmer.PIR_DimmerSignal = 0;
  8648  0E47  11A7               	bcf	_Dimmer,3
  8649                           
  8650                           ;Dimmer_B1.c: 1268: }
  8651                           ;Dimmer_B1.c: 1269: } else {
  8652  0E48  0008               	return
  8653  0E49                     i1l407:	
  8654                           
  8655                           ;Dimmer_B1.c: 1270: if (Dimmer.PIR_DimmerSignal == 0) {
  8656  0E49  19A7               	btfsc	_Dimmer,3
  8657  0E4A  0008               	return
  8658                           
  8659                           ;Dimmer_B1.c: 1271: Dimmer.PIR_DimmerSignal = 1;
  8660  0E4B  15A7               	bsf	_Dimmer,3
  8661                           
  8662                           ;Dimmer_B1.c: 1273: if (DimmerIntr1.Start == 0) {
  8663  0E4C  1920               	btfsc	_DimmerIntr1,2
  8664  0E4D  0008               	return
  8665                           
  8666                           ;Dimmer_B1.c: 1274: DimmerIntr1.Start = 1;
  8667  0E4E  1520               	bsf	_DimmerIntr1,2
  8668                           
  8669                           ;Dimmer_B1.c: 1275: DimmerIntr1.GO = 1;
  8670  0E4F  1420               	bsf	_DimmerIntr1,0
  8671  0E50  0008               	return
  8672  0E51                     __end_of_DimmerLights_IOC_1:	
  8673  007E                     btemp	set	126	;btemp
  8674  007E                     wtemp	set	126
  8675  007E                     wtemp0	set	126
  8676  0080                     wtemp1	set	128
  8677  0082                     wtemp2	set	130
  8678  0084                     wtemp3	set	132
  8679  0086                     wtemp4	set	134
  8680  0088                     wtemp5	set	136
  8681  007F                     wtemp6	set	127
  8682  007E                     ttemp	set	126
  8683  007E                     ttemp0	set	126
  8684  0081                     ttemp1	set	129
  8685  0084                     ttemp2	set	132
  8686  0087                     ttemp3	set	135
  8687  007F                     ttemp4	set	127
  8688  007E                     ltemp	set	126
  8689  007E                     ltemp0	set	126
  8690  0082                     ltemp1	set	130
  8691  0086                     ltemp2	set	134
  8692  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     22      80
    BANK1            80      1      43
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_setDimmerIntr_MaxmumValue
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _setDimmerIntr_MaxmumValue->_getDimmerIntr_DimmingValue
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19958
                                             18 BANK0      4     0      4
                                              0 BANK1      1     1      0
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     850
                                              2 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2564
                                              9 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     858
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     686
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     349
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     349
                                              5 BANK0      6     6      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3095
                                              5 BANK0     12    12      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2594
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2594
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2709
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2709
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    2953
                                              5 BANK0      5     5      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2554
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    3986
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2506
                                              9 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              3     2      1    1314
                                              6 BANK0      3     2      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              6 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              3 BANK0      3     2      1
         _getDimmerIntr_DimmingValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
         _getDimmerIntr_DimmingValue (ARG)
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerIntr_DimmingValue (ARG)
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      85       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      1      2B       7       53.8%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      85      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Jan 19 11:31:45 2015

                            _WDT_Clearing 0002                     __end_of_setCmd_Status 0EEB  
                            ___awdiv@sign 0060                            setTemp_Main@AD 0064  
                                      fsr 0004                      _setDimmerLights_Main 052B  
                                     l123 0727                                       l251 0E14  
                    _setDimmerLights_SwOn 0FDD                                       l423 0396  
                                     l416 0377                                       l417 035F  
                                     l480 0F70                                       l481 0F78  
                                     l805 0F49                                       l831 0EEA  
                                     l809 0F45                                       l825 06D3  
                                     l941 0445                                       l952 0441  
                                     l947 03EB                                       _GIE 005F  
    __size_of_DimmerLights_Initialization 0007                                       _RB2 0032  
                                     _LED 0073                                       _RB3 0033  
                                     _RB4 0034                                       _RB5 0035  
                                     _RA7 002F                                       _PS0 0408  
                                     _PS1 0409                                       _PS2 040A  
                                     _ISR 0F01                                       _PSA 040B  
                                     _WDT 003C                                       _Cmd 0070  
            getDimmerLights_Status@lights 005C                ??_setDimmerIntr_Dimming_RF 005B  
              ??_setDimmerIntr_Dimming_Sw 005B           setDimmerIntr_Dimming_RF@command 005A  
                                     fsr0 0004                                       indf 0000  
                         __end_of_ADC_Set 0DB2      setDimmerLights_Initialization@lights 0075  
            getDimmerLights_Status@status 005D       __end_of_setDimmerIntr_ControlStatus 0F01  
             _setDimmerIntr_ControlStatus 0EEB                                      ?_ISR 0075  
                   _setDimmerLights_OnOff 0748                                      l1020 0079  
                                    l1025 008F                                      l1017 01FD  
                                    l1018 0089                                      l1027 00A2  
                                    l1019 005A                                      l4030 0E71  
                                    l4024 0E67                                      l4040 0EE5  
                                    l4108 07D5                                      l4028 0E6C  
                                    l4036 0ED9                                      l4222 0F41  
                                    l4142 04DC                                      l4150 04E4  
                                    l4080 07C1                                      l4312 03BF  
                                    l4160 04F7                                      l4128 04CB  
                                    l4136 04D3                                      l4306 03AA  
                                    l4242 0F97                                      l4068 0FFC  
                                    l4260 0550                                      l4172 0507  
                                    l4164 04FB                                      l4340 0470  
                                    l4236 0F8E                                      l4094 0759  
                                    l4262 0557                                      l4190 0519  
                                    l4422 03FE                                      l4238 0F91  
                                    l4502 05E1                                      l4272 057B  
                                    l4168 04FF                                      l4360 04AA  
                                    l4344 0476                                      l4416 03ED  
                                    l4424 0401                                      l4600 0793  
                                    l4098 0761                                      l4274 0582  
                                    l4194 051F                                      l4354 0488  
                                    l4356 0494                                      l4348 047C  
                                    l4524 0702                                      l4516 06DE  
                                    l4620 0262                                      l4198 0525  
                                    l4358 049C                                      l4470 0597  
                                    l4518 06EC                                      l4448 0431  
                                    l4528 070D                                      l4632 0283  
                                    l4624 026D                                      l4616 0257  
                                    l4554 0732                                      l4810 0195  
                                    l4458 0440                                      l4642 029C  
                                    l4812 01A4                                      l4476 05A2  
                                    l4628 0278                                      l4494 05CE  
                                    l4486 05AA                                      l4488 05B8  
                                    l4672 032E                                      l4664 0302  
                                    l4648 02B8                                      l4762 00C5  
                                    l4498 05D9                                      l4658 02E6  
                                    l4828 01D1                                      l4780 00E9  
                                    l4692 0F5B                                      l4932 05FD  
                   _setDimmerLights_SwOff 07A0                                      l4870 06AB  
                                    l4790 0129                                      l4774 00DC  
                                    l4678 033C                                      l4882 06C8  
                                    l4778 00E8                                      l4938 061D  
                                    l4876 06BA                                      l4878 06C4  
                                    l4798 013D                     _myMain_Initialization 0D7F  
                            __CFG_WDTE$ON 0000                                      u5010 0491  
                                    u5030 04A7                                      u6005 01ED  
                                    u5235 05AD                                      u5315 06E1  
                                    _PEIE 005E                                      u5255 05B9  
                                    u5335 06ED                                      u4705 0EB9  
                                    u5265 05C5                                      u5345 06F9  
                                    u5275 05CF                                      u5355 0703  
                                    u5445 0742                                      u5905 011F  
                                    u5925 0156                                      u5935 0187  
                                    u5955 01B4                                      u5895 0107  
                                    __CDS 0035                                      _WPUB 0095  
                                    __PIR 00A0                                      _Temp 0047  
                                    _main 05E8                                      btemp 007E  
                         __end_of_WDT_Set 0E32                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                          __end_of_CDS_Main 0748  
            __size_of_Temp_Initialization 0003                                     ??_ISR 0076  
 __end_of_getDimmerLights_Allow_Condition 0D92  __size_of_getDimmerLights_Allow_Condition 0005  
       ??_getDimmerLights_Allow_Condition 005A          ?_getDimmerLights_Allow_Condition 0075  
         _getDimmerLights_Allow_Condition 0D8D                    _getDimmerLights_Status 0E51  
                           __CFG_PLLEN$ON 0000                          __end_of_LED_Main 0D83  
                              _DimmerIntr 0071                     ?_setDimmerLights_Main 0075  
                        ??_setPIRLED_Main 005E                     ?_setDimmerLights_SwOn 0075  
                                   ?_main 006C                           __end_of___awdiv 05E8  
                                   _ADRES 001E                           ___awdiv@divisor 005A  
                                   _T1CON 0010                           __end_of___lwdiv 0714  
                                   i1l400 0687                                     i1l407 0E49  
                                   i1l383 0659                                     i1l386 0688  
                                   i1l389 0675                                     i1l663 0F0C  
                         ___awdiv@counter 005F                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                   __end_of_Timeout_Counter 0EBF  
                                   _Light 003E                          __end_of_PIR_Main 0210  
                        __end_of_TMR1_ISR 0FBB                          __end_of_TMR1_Set 0E24  
                                   _getAD 0F81                          __end_of_WDT_Main 0E84  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 0012             __end_of_setLED_Initialization 0800  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                         getPIR_AD@channel1 0068  
                       getPIR_AD@channel2 0063                         setTemp_Main@error 0060  
                         __initialization 0013                              __end_of_main 063F  
                        __end_of_Fosc_Set 0D97            getMain_All_LightsStatus@status 005A  
            setDimmerLights_OnOff@command 005D                            _Exception_Main 0690  
                               ??_ADC_Set 005A                                    ??_main 00CA  
                   PIR_Main@Enable_Switch 0065               ?_setDimmerIntr_DimmingValue 005A  
            ??_DimmerLights_SelectPointer 005A        setDimmerIntr_ControlStatus@command 005A  
                 _setDimmerLights_Dimming 07C8                               _DimmerIntr1 0020  
                _getMain_All_LightsStatus 0DC2                    ?_setDimmerLights_OnOff 005D  
                                  ?_getAD 005A                    ?_setDimmerLights_SwOff 0075  
                  ?_myMain_Initialization 0075                                    _ADCON0 001F  
                                  _ADCON1 009F                          ___awdiv@dividend 005C  
                               ??_WDT_Set 005A                                    _ANSELA 0185  
                                  _ANSELB 0186                  _getMain_All_Error_Status 0F31  
                                  i1l3240 067E                                    i1l3232 066F  
                                  i1l3208 064D                                    i1l3242 0682  
                                  i1l3238 067B                                    _FVRCON 009D  
    getDimmerLights_Allow_Condition@allow 005A                                    _PIRLED 0031  
                                  _OSCCON 0090                                    _TMR1IE 0460  
                                  _TMR1IF 0060                                    _IO_Set 0F19  
             ??_setDimmerIntr_MaxmumValue 005E                                    _Dimmer 0027  
                   __end_of_getCmd_Status 0E73                __end_of_Mcu_Initialization 0E41  
                                  _Timer1 0039               __size_of_CDS_Initialization 0004  
                  __end_of_Exception_Main 06D4                      Exception_Main@lights 0060  
                               ??___awdiv 005E                                 ??___lwdiv 005E  
                  ??_setDimmerLights_Main 0063                      Exception_Main@status 0062  
                  ??_setDimmerLights_SwOn 005C                                    _setLED 04BA  
                                  _myMain 002C         __size_of_DimmerLights_PIR_Control 0090  
                        ___awdiv@quotient 0061                        __size_of_Temp_Main 0003  
               ?_DimmerLights_PIR_Control 0075          ??_setDimmerLights_Initialization 005A  
         ?_setDimmerLights_Initialization 0075          __end_of_setDimmerIntr_Dimming_RF 0ED5  
        __end_of_setDimmerIntr_Dimming_Sw 0EAB                                    saved_w 007E  
                        ?_Timeout_Counter 0075               __size_of_DimmerLights_IOC_1 0010  
             __size_of_DimmerLights_TMR_1 0051                   __size_of_LedPointSelect 001C  
                               ?_CDS_Main 0075           setDimmerIntr_Dimming_Sw@command 005A  
                      setTemp_Main@TempGO 0061               __size_of_PIR_Initialization 000D  
                 __end_of__initialization 0024           getDimmerIntr_DimmingValue@value 005C  
         setDimmerIntr_DimmingValue@value 005A                                 ?_LED_Main 0075  
                           ?_my_MainTimer 0075              ?_DimmerLights_Initialization 0075  
              ?_DimmerIntr_Initialization 0075                            __pcstackCOMMON 0075  
                      __size_of_getCDS_AD 0022                           ?_Exception_Main 0075  
                           __end_of_getAD 0F9D                                 ?_PIR_Main 0075  
                               ?_TMR1_ISR 0075                                 ?_TMR1_Set 0075  
                      _LED_Initialization 0DEF                        __size_of_getPIR_AD 012E  
               ??_setDimmerLights_Dimming 0061                                 ?_WDT_Main 0075  
       setDimmerIntr_ControlStatus@lights 005C                 _setDimmerIntr_MaxmumValue 0DE3  
              __end_of_set_TimeoutCleared 0D9D           setDimmerIntr_MaxmumValue@lights 005F  
                     ?_LED_Initialization 0075                                   ??_getAD 005B  
                     _Temp_Initialization 0D83                                ??_CDS_Main 005A  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                               ?_Fosc_Set 0075                         __end_of_Temp_Main 0D89  
                                 ?_IO_Set 0075                           __CFG_VCAPEN$DIS 0000  
                          ??_my_MainTimer 005A                                ??_LED_Main 0060  
                    ??_LED_Initialization 005F                              _DimmerLights 0072  
                       LedPointSelect@led 005B                   ?_getDimmerLights_Status 0075  
                              __pmaintext 05E8                      ?_Temp_Initialization 0075  
       __end_of_DimmerIntr_Initialization 0E97                      PIR_Main@LightsStatus 006A  
           ??_DimmerLights_Initialization 005B                                ??_PIR_Main 005F  
                              ??_TMR1_ISR 0076                             ?_setTemp_Main 0075  
                              ??_TMR1_Set 005A                                __pintentry 0004  
                                 ?_setLED 005C                                   _ADC_Set 0DAB  
                              _getTemp_AD 0775        __end_of_DimmerLights_SelectPointer 0DD7  
              _DimmerLights_SelectPointer 0DCB                                ??_WDT_Main 005A  
                  __size_of_getCDS_Status 0008             setDimmerLights_Dimming@lights 0062  
           setDimmerLights_Dimming@status 0060     getDimmerLights_Allow_Condition@lights 0075  
                       __end_of_getCDS_AD 0FDD                                   _WDT_Set 0E24  
                           getPIR_AD@VRAD 006A                    __size_of_setCmd_Status 0016  
                              ??_Fosc_Set 005A                         __end_of_getPIR_AD 033E  
         __end_of_setDimmerLights_Dimming 07EE                       getCmd_Status@number 005A  
                         __size_of_IO_Set 0018                       setCmd_Status@number 005C  
       __size_of_setDimmerIntr_Dimming_RF 0016         __size_of_setDimmerIntr_Dimming_Sw 0014  
                              getCDS_AD@i 005F                                getCDS_AD@j 0060  
               ?_setDimmerIntr_Dimming_RF 005A                 ?_setDimmerIntr_Dimming_Sw 005A  
                                 _VarLED1 0052                                   _VarLED2 0056  
          __end_of_getDimmerLights_Status 0E62                     ??_Temp_Initialization 005A  
                          ??_setTemp_Main 005F                                   ___awdiv 058B  
                                 ___lwdiv 06D4                ??_getMain_All_LightsStatus 005A  
                             PIR_Main@cds 0069                           __size_of_setLED 0071  
                                 __ptext0 0000                                   __ptext1 0F4B  
                                 __ptext2 0D7F                                   __ptext3 0775  
                                 __ptext4 0210                                   __ptext5 06D4  
                                 __ptext6 058B                                   __ptext7 0FBB  
                                 __ptext8 0F81                                   __ptext9 0D97  
                              getPIR_AD@i 006B                                getPIR_AD@j 0067  
                            __size_of_ISR 0018                ??_getMain_All_Error_Status 005A  
                 ??_setDimmerLights_OnOff 005E                   ??_setDimmerLights_SwOff 005C  
                 ??_myMain_Initialization 005A                         _DimmerLights_Main 0DA4  
                ??_setTemp_Initialization 005A                        ?_DimmerLights_Main 0075  
                          _LedPointSelect 0F65                           getTemp_AD@ADRES 005F  
                                 clrloop0 0DBB                      end_of_initialization 0024  
                     ??_DimmerLights_Main 0064                    setDimmerLights_SwOn@sw 005C  
                           _getCDS_Status 0DB2          __end_of_DimmerLights_PIR_Control 03CE  
                   _setLED_Initialization 07EE                             _setCmd_Status 0ED5  
                             ?_getTemp_AD 0075                  setLED_Initialization@led 005E  
                 setTemp_Main@DangerValue 0063                 __end_of_DimmerLights_Main 0DAB  
                      _Mcu_Initialization 0E32                      __end_of_my_MainTimer 0F65  
                  __end_of_LedPointSelect 0F81                       setPIRLED_Main@count 005F  
        setDimmerIntr_DimmingValue@lights 005C          getDimmerIntr_DimmingValue@lights 005B  
                     ?_Mcu_Initialization 0075                   __size_of_setPIRLED_Main 0071  
      __size_of_setDimmerIntr_MaxmumValue 000C            setDimmerIntr_Dimming_RF@lights 005C  
         getMain_All_Error_Status@command 005B                         __size_of_CDS_Main 0034  
                          ?_getCDS_Status 0075                          ??_Exception_Main 005F  
                          __end_of_IO_Set 0F31                __end_of_CDS_Initialization 0D8D  
                       __size_of_LED_Main 0003               ??_DimmerIntr_Initialization 005A  
                    ??_Mcu_Initialization 005B                             ?_WDT_Clearing 0075  
                          ?_setCmd_Status 005A       __size_of_getDimmerIntr_DimmingValue 000E  
                       __size_of_PIR_Main 01E9                         __size_of_TMR1_ISR 001E  
        DimmerLights_SelectPointer@lights 005B                         __size_of_TMR1_Set 000E  
           __size_of_setDimmerLights_Main 0060                            __end_of_setLED 052B  
           __size_of_setDimmerLights_SwOn 0023                __end_of_DimmerLights_IOC_1 0E51  
                       __size_of_WDT_Main 0011                __end_of_DimmerLights_TMR_1 0690  
                     start_initialization 0013                           ?_LedPointSelect 0075  
                             __end_of_ISR 0F19                    __size_of_getCmd_Status 0011  
              __end_of_PIR_Initialization 0E08              ?_setDimmerIntr_ControlStatus 005A  
         __size_of_setTemp_Initialization 0001                       getCDS_Status@status 005A  
                    __end_of_setTemp_Main 0449                        _set_TimeoutCleared 0D97  
       __end_of_setDimmerIntr_MaxmumValue 0DEF                                  ??_IO_Set 005A  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 004E  
                     __size_of_getTemp_AD 002B                    ?_setLED_Initialization 0075  
                       __size_of_Fosc_Set 0005                                 _Temp_Main 0D86  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 005A  
                     Exception_Main@count 0061                       Exception_Main@error 0063  
                _DimmerLights_PIR_Control 033E          __end_of_getMain_All_LightsStatus 0DCB  
                                ??_setLED 005D                                  ?_ADC_Set 0075  
             ?_DimmerLights_SelectPointer 0075          __end_of_getMain_All_Error_Status 0F4B  
              __size_of_DimmerLights_Main 0007            setDimmerIntr_Dimming_Sw@lights 005C  
                             __pbssCOMMON 0070                                 ___latbits 0001  
                           __pcstackBANK0 005A                             __pcstackBANK1 00CA  
                    ??_set_TimeoutCleared 005A                 _DimmerIntr_Initialization 0E84  
                                ?_WDT_Set 0075                           ??_getCDS_Status 005A  
           ??_setDimmerIntr_ControlStatus 005B            setDimmerIntr_MaxmumValue@value 005D  
                           _DimmerLights1 003F                             PIR_Main@error 0064  
                               _getCDS_AD 0FBB                                 _getPIR_AD 0210  
             __size_of_LED_Initialization 000C                                ?_Temp_Main 0075  
                        ___lwdiv@dividend 005C                             _getCmd_Status 0E62  
                         ??_setCmd_Status 005B                    _setTemp_Initialization 0D7E  
                           _PIR_Main$3118 0066                  ?_setDimmerLights_Dimming 0060  
                                ?___awdiv 005A                     __size_of_my_MainTimer 001A  
                                ?___lwdiv 005A        __end_of_getDimmerIntr_DimmingValue 0E16  
            ??_setDimmerIntr_DimmingValue 005B                _getDimmerIntr_DimmingValue 0E08  
          __size_of_setDimmerLights_OnOff 002D             __end_of_setDimmerLights_OnOff 0775  
          __size_of_setDimmerLights_SwOff 0028            __size_of_myMain_Initialization 0001  
           __end_of_setDimmerLights_SwOff 07C8             __end_of_myMain_Initialization 0D80  
                          __size_of_getAD 001C                          ___lwdiv@quotient 0060  
                          _setPIRLED_Main 0449                                  _CDS_Main 0714  
             __end_of_Temp_Initialization 0D86                         interrupt_function 0004  
                              ?_getCDS_AD 005C                                  _LED_Main 0D80  
                               clear_ram0 0DBA                              _my_MainTimer 0F4B  
                              ?_getPIR_AD 0063       __end_of_DimmerLights_Initialization 0DA4  
             _DimmerLights_Initialization 0D9D                            ?_getCmd_Status 0075  
                                _GO_nDONE 00F9                         ??_Timeout_Counter 005A  
    __size_of_setDimmerIntr_ControlStatus 0016                      PIR_Main@TriggerValue 0068  
     __size_of_setDimmerIntr_DimmingValue 000C                                  _PIR_Main 0027  
                                _TMR1_ISR 0F9D                                  _TMR1_Set 0E16  
                            ??_getTemp_AD 005C                                  _WDT_Main 0E73  
                        __size_of_ADC_Set 0007                            getPIR_AD@VRAD1 0069  
                   __size_of_setTemp_Main 007B                    __end_of_setPIRLED_Main 04BA  
          getMain_All_Error_Status@status 005E                               getAD@adcon0 005B  
                             getAD@adcon1 005A                      __end_of_WDT_Clearing 0004  
       __size_of_getMain_All_LightsStatus 0009                 ?_getMain_All_LightsStatus 0075  
                _setDimmerIntr_Dimming_RF 0EBF               setDimmerLights_OnOff@lights 005E  
                _setDimmerIntr_Dimming_Sw 0E97                                  _Fosc_Set 0D92  
                        __size_of_WDT_Set 000E         __size_of_getMain_All_Error_Status 001A  
               ?_getMain_All_Error_Status 0075                        __end_of_getTemp_AD 07A0  
     __size_of_DimmerLights_SelectPointer 000C                                  _SwDetect 0074  
                             ??_Temp_Main 0065                          getCmd_Status@cmd 005B  
                        setCmd_Status@cmd 005A             _getMain_All_Error_Status$2404 005C  
                               setLED@led 005D                              _setTemp_Main 03CE  
                        __size_of___awdiv 005D                          __size_of___lwdiv 0040  
                setDimmerLights_SwOn@idle 005D                          ??_LedPointSelect 005A  
                      _CDS_Initialization 0D89                         getTemp_AD@channel 005E  
                         ?_setPIRLED_Main 0075                           ___lwdiv@divisor 005A  
                     ?_CDS_Initialization 0075                           ___lwdiv@counter 005F  
                                __ptext10 0EAB                                  __ptext11 0E73  
                                __ptext20 0E32                                  __ptext12 0002  
                                __ptext21 0E24                                  __ptext13 0D86  
                                __ptext30 0690                                  __ptext22 0E16  
                                __ptext14 03CE                                  __ptext31 04BA  
                                __ptext23 0F19                                  __ptext15 0D83  
                                __ptext40 0E62                                  __ptext32 0F65  
                                __ptext24 0D92                                  __ptext16 0D7E  
                                __ptext41 07C8                                  __ptext33 0F31  
                                __ptext25 0DAB                                  __ptext17 0027  
                                __ptext50 0DD7                                  __ptext42 0E97  
                                __ptext34 0DA4                                  __ptext26 0D80  
                                __ptext18 0DB2                                  __ptext51 0E51  
                                __ptext43 0E08                                  __ptext35 052B  
                                __ptext27 0449                                  __ptext19 0DFB  
                                __ptext60 063F                                  __ptext52 0DCB  
                                __ptext44 0D8D                                  __ptext36 0748  
                                __ptext28 0DEF                                  __ptext61 0E41  
                                __ptext53 0D9D                                  __ptext45 033E  
                                __ptext37 0EEB                                  __ptext29 07EE  
                                __ptext54 0D7D                                  __ptext46 0FDD  
                                __ptext38 0ED5                                  __ptext55 0E84  
                                __ptext47 07A0                                  __ptext39 0DC2  
                                __ptext56 0714                                  __ptext48 0DE3  
                                __ptext57 0D89                                  __ptext49 0EBF  
                                __ptext58 0F01                                  __ptext59 0F9D  
                 ??_setLED_Initialization 005E                  ??_getDimmerLights_Status 005C  
            __end_of_setDimmerLights_Main 058B                        _DimmerLights_IOC_1 0E41  
            __end_of_setDimmerLights_SwOn 1000                ??_DimmerLights_PIR_Control 0060  
                             ??_getCDS_AD 005D                             setLED@command 005C  
                           __size_of_main 0057        __size_of_DimmerIntr_Initialization 0013  
                         ??_getCmd_Status 005A                        _DimmerLights_TMR_1 063F  
              setDimmerLights_Main@lights 0063                               ??_getPIR_AD 0064  
                      _PIR_Initialization 0DFB                      ??_CDS_Initialization 005A  
                     ?_DimmerLights_IOC_1 0075                       ?_DimmerLights_TMR_1 0075  
             __size_of_Mcu_Initialization 000F                       ?_PIR_Initialization 0075  
                                main@argc 006C                                  main@argv 006E  
      __end_of_setDimmerIntr_DimmingValue 0DE3                _setDimmerIntr_DimmingValue 0DD7  
                    ??_DimmerLights_IOC_1 0075                      ??_DimmerLights_TMR_1 0075  
            ??_getDimmerIntr_DimmingValue 005A                   setDimmerLights_SwOff@sw 005C  
                    ??_PIR_Initialization 005A                                  intlevel1 0000  
                   setTemp_Main@SafeValue 0062    __end_of_setDimmerLights_Initialization 0D7E  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0D7D  
              ?_setDimmerIntr_MaxmumValue 005D                   ?_setTemp_Initialization 0075  
                 __size_of_Exception_Main 0044                     __size_of_WDT_Clearing 0002  
             ?_getDimmerIntr_DimmingValue 0075          __size_of_setDimmerLights_Dimming 0026  
             __size_of_set_TimeoutCleared 0006                        __CFG_FOSC$INTOSCIO 0000  
                         _Timeout_Counter 0EAB           __size_of_getDimmerLights_Status 0011  
              __end_of_LED_Initialization 0DFB                     __end_of_getCDS_Status 0DBA  
          __end_of_setTemp_Initialization 0D7F                         getCDS_AD@channel1 0061  
                       getCDS_AD@channel2 005C  
