

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Jan 12 17:09:14 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009F                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0186                     	;# 
   145  018C                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0096                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009F                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0186                     	;# 
   214  018C                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0096                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009F                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0186                     	;# 
   283  018C                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0009                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001B                     	;# 
   314  001C                     	;# 
   315  001D                     	;# 
   316  001E                     	;# 
   317  001F                     	;# 
   318  0081                     	;# 
   319  0085                     	;# 
   320  0086                     	;# 
   321  0087                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0095                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0096                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009F                     	;# 
   342  0108                     	;# 
   343  0109                     	;# 
   344  010C                     	;# 
   345  010C                     	;# 
   346  010D                     	;# 
   347  010D                     	;# 
   348  010E                     	;# 
   349  010F                     	;# 
   350  0185                     	;# 
   351  0186                     	;# 
   352  018C                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0009                     	;# 
   362  000A                     	;# 
   363  000B                     	;# 
   364  000C                     	;# 
   365  000D                     	;# 
   366  000E                     	;# 
   367  000E                     	;# 
   368  000F                     	;# 
   369  0010                     	;# 
   370  0011                     	;# 
   371  0012                     	;# 
   372  0013                     	;# 
   373  0014                     	;# 
   374  0015                     	;# 
   375  0015                     	;# 
   376  0016                     	;# 
   377  0017                     	;# 
   378  0018                     	;# 
   379  0019                     	;# 
   380  001A                     	;# 
   381  001B                     	;# 
   382  001B                     	;# 
   383  001C                     	;# 
   384  001D                     	;# 
   385  001E                     	;# 
   386  001F                     	;# 
   387  0081                     	;# 
   388  0085                     	;# 
   389  0086                     	;# 
   390  0087                     	;# 
   391  0089                     	;# 
   392  008C                     	;# 
   393  008D                     	;# 
   394  008E                     	;# 
   395  008F                     	;# 
   396  0090                     	;# 
   397  0091                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0093                     	;# 
   401  0094                     	;# 
   402  0095                     	;# 
   403  0095                     	;# 
   404  0096                     	;# 
   405  0096                     	;# 
   406  0098                     	;# 
   407  0099                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009F                     	;# 
   411  0108                     	;# 
   412  0109                     	;# 
   413  010C                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  0185                     	;# 
   420  0186                     	;# 
   421  018C                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001B                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001D                     	;# 
   454  001E                     	;# 
   455  001F                     	;# 
   456  0081                     	;# 
   457  0085                     	;# 
   458  0086                     	;# 
   459  0087                     	;# 
   460  0089                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  008F                     	;# 
   465  0090                     	;# 
   466  0091                     	;# 
   467  0092                     	;# 
   468  0093                     	;# 
   469  0093                     	;# 
   470  0094                     	;# 
   471  0095                     	;# 
   472  0095                     	;# 
   473  0096                     	;# 
   474  0096                     	;# 
   475  0098                     	;# 
   476  0099                     	;# 
   477  009C                     	;# 
   478  009D                     	;# 
   479  009F                     	;# 
   480  0108                     	;# 
   481  0109                     	;# 
   482  010C                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010D                     	;# 
   486  010E                     	;# 
   487  010F                     	;# 
   488  0185                     	;# 
   489  0186                     	;# 
   490  018C                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0009                     	;# 
   500  000A                     	;# 
   501  000B                     	;# 
   502  000C                     	;# 
   503  000D                     	;# 
   504  000E                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0015                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001B                     	;# 
   521  001C                     	;# 
   522  001D                     	;# 
   523  001E                     	;# 
   524  001F                     	;# 
   525  0081                     	;# 
   526  0085                     	;# 
   527  0086                     	;# 
   528  0087                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  008F                     	;# 
   534  0090                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0095                     	;# 
   542  0096                     	;# 
   543  0096                     	;# 
   544  0098                     	;# 
   545  0099                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009F                     	;# 
   549  0108                     	;# 
   550  0109                     	;# 
   551  010C                     	;# 
   552  010C                     	;# 
   553  010D                     	;# 
   554  010D                     	;# 
   555  010E                     	;# 
   556  010F                     	;# 
   557  0185                     	;# 
   558  0186                     	;# 
   559  018C                     	;# 
   560  0000                     	;# 
   561  0001                     	;# 
   562  0002                     	;# 
   563  0003                     	;# 
   564  0004                     	;# 
   565  0005                     	;# 
   566  0006                     	;# 
   567  0007                     	;# 
   568  0009                     	;# 
   569  000A                     	;# 
   570  000B                     	;# 
   571  000C                     	;# 
   572  000D                     	;# 
   573  000E                     	;# 
   574  000E                     	;# 
   575  000F                     	;# 
   576  0010                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0014                     	;# 
   581  0015                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  0019                     	;# 
   587  001A                     	;# 
   588  001B                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001D                     	;# 
   592  001E                     	;# 
   593  001F                     	;# 
   594  0081                     	;# 
   595  0085                     	;# 
   596  0086                     	;# 
   597  0087                     	;# 
   598  0089                     	;# 
   599  008C                     	;# 
   600  008D                     	;# 
   601  008E                     	;# 
   602  008F                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0095                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0096                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009F                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  010F                     	;# 
   626  0185                     	;# 
   627  0186                     	;# 
   628  018C                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  000E                     	;# 
   644  000F                     	;# 
   645  0010                     	;# 
   646  0011                     	;# 
   647  0012                     	;# 
   648  0013                     	;# 
   649  0014                     	;# 
   650  0015                     	;# 
   651  0015                     	;# 
   652  0016                     	;# 
   653  0017                     	;# 
   654  0018                     	;# 
   655  0019                     	;# 
   656  001A                     	;# 
   657  001B                     	;# 
   658  001B                     	;# 
   659  001C                     	;# 
   660  001D                     	;# 
   661  001E                     	;# 
   662  001F                     	;# 
   663  0081                     	;# 
   664  0085                     	;# 
   665  0086                     	;# 
   666  0087                     	;# 
   667  0089                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  008F                     	;# 
   672  0090                     	;# 
   673  0091                     	;# 
   674  0092                     	;# 
   675  0093                     	;# 
   676  0093                     	;# 
   677  0094                     	;# 
   678  0095                     	;# 
   679  0095                     	;# 
   680  0096                     	;# 
   681  0096                     	;# 
   682  0098                     	;# 
   683  0099                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009F                     	;# 
   687  0108                     	;# 
   688  0109                     	;# 
   689  010C                     	;# 
   690  010C                     	;# 
   691  010D                     	;# 
   692  010D                     	;# 
   693  010E                     	;# 
   694  010F                     	;# 
   695  0185                     	;# 
   696  0186                     	;# 
   697  018C                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  000D                     	;# 
   711  000E                     	;# 
   712  000E                     	;# 
   713  000F                     	;# 
   714  0010                     	;# 
   715  0011                     	;# 
   716  0012                     	;# 
   717  0013                     	;# 
   718  0014                     	;# 
   719  0015                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0017                     	;# 
   723  0018                     	;# 
   724  0019                     	;# 
   725  001A                     	;# 
   726  001B                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001D                     	;# 
   730  001E                     	;# 
   731  001F                     	;# 
   732  0081                     	;# 
   733  0085                     	;# 
   734  0086                     	;# 
   735  0087                     	;# 
   736  0089                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  008F                     	;# 
   741  0090                     	;# 
   742  0091                     	;# 
   743  0092                     	;# 
   744  0093                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0095                     	;# 
   749  0096                     	;# 
   750  0096                     	;# 
   751  0098                     	;# 
   752  0099                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009F                     	;# 
   756  0108                     	;# 
   757  0109                     	;# 
   758  010C                     	;# 
   759  010C                     	;# 
   760  010D                     	;# 
   761  010D                     	;# 
   762  010E                     	;# 
   763  010F                     	;# 
   764  0185                     	;# 
   765  0186                     	;# 
   766  018C                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  000E                     	;# 
   782  000F                     	;# 
   783  0010                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0013                     	;# 
   787  0014                     	;# 
   788  0015                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0017                     	;# 
   792  0018                     	;# 
   793  0019                     	;# 
   794  001A                     	;# 
   795  001B                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001D                     	;# 
   799  001E                     	;# 
   800  001F                     	;# 
   801  0081                     	;# 
   802  0085                     	;# 
   803  0086                     	;# 
   804  0087                     	;# 
   805  0089                     	;# 
   806  008C                     	;# 
   807  008D                     	;# 
   808  008E                     	;# 
   809  008F                     	;# 
   810  0090                     	;# 
   811  0091                     	;# 
   812  0092                     	;# 
   813  0093                     	;# 
   814  0093                     	;# 
   815  0094                     	;# 
   816  0095                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0096                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009C                     	;# 
   823  009D                     	;# 
   824  009F                     	;# 
   825  0108                     	;# 
   826  0109                     	;# 
   827  010C                     	;# 
   828  010C                     	;# 
   829  010D                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  010F                     	;# 
   833  0185                     	;# 
   834  0186                     	;# 
   835  018C                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0009                     	;# 
   845  000A                     	;# 
   846  000B                     	;# 
   847  000C                     	;# 
   848  000D                     	;# 
   849  000E                     	;# 
   850  000E                     	;# 
   851  000F                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0013                     	;# 
   856  0014                     	;# 
   857  0015                     	;# 
   858  0015                     	;# 
   859  0016                     	;# 
   860  0017                     	;# 
   861  0018                     	;# 
   862  0019                     	;# 
   863  001A                     	;# 
   864  001B                     	;# 
   865  001B                     	;# 
   866  001C                     	;# 
   867  001D                     	;# 
   868  001E                     	;# 
   869  001F                     	;# 
   870  0081                     	;# 
   871  0085                     	;# 
   872  0086                     	;# 
   873  0087                     	;# 
   874  0089                     	;# 
   875  008C                     	;# 
   876  008D                     	;# 
   877  008E                     	;# 
   878  008F                     	;# 
   879  0090                     	;# 
   880  0091                     	;# 
   881  0092                     	;# 
   882  0093                     	;# 
   883  0093                     	;# 
   884  0094                     	;# 
   885  0095                     	;# 
   886  0095                     	;# 
   887  0096                     	;# 
   888  0096                     	;# 
   889  0098                     	;# 
   890  0099                     	;# 
   891  009C                     	;# 
   892  009D                     	;# 
   893  009F                     	;# 
   894  0108                     	;# 
   895  0109                     	;# 
   896  010C                     	;# 
   897  010C                     	;# 
   898  010D                     	;# 
   899  010D                     	;# 
   900  010E                     	;# 
   901  010F                     	;# 
   902  0185                     	;# 
   903  0186                     	;# 
   904  018C                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0009                     	;# 
   914  000A                     	;# 
   915  000B                     	;# 
   916  000C                     	;# 
   917  000D                     	;# 
   918  000E                     	;# 
   919  000E                     	;# 
   920  000F                     	;# 
   921  0010                     	;# 
   922  0011                     	;# 
   923  0012                     	;# 
   924  0013                     	;# 
   925  0014                     	;# 
   926  0015                     	;# 
   927  0015                     	;# 
   928  0016                     	;# 
   929  0017                     	;# 
   930  0018                     	;# 
   931  0019                     	;# 
   932  001A                     	;# 
   933  001B                     	;# 
   934  001B                     	;# 
   935  001C                     	;# 
   936  001D                     	;# 
   937  001E                     	;# 
   938  001F                     	;# 
   939  0081                     	;# 
   940  0085                     	;# 
   941  0086                     	;# 
   942  0087                     	;# 
   943  0089                     	;# 
   944  008C                     	;# 
   945  008D                     	;# 
   946  008E                     	;# 
   947  008F                     	;# 
   948  0090                     	;# 
   949  0091                     	;# 
   950  0092                     	;# 
   951  0093                     	;# 
   952  0093                     	;# 
   953  0094                     	;# 
   954  0095                     	;# 
   955  0095                     	;# 
   956  0096                     	;# 
   957  0096                     	;# 
   958  0098                     	;# 
   959  0099                     	;# 
   960  009C                     	;# 
   961  009D                     	;# 
   962  009F                     	;# 
   963  0108                     	;# 
   964  0109                     	;# 
   965  010C                     	;# 
   966  010C                     	;# 
   967  010D                     	;# 
   968  010D                     	;# 
   969  010E                     	;# 
   970  010F                     	;# 
   971  0185                     	;# 
   972  0186                     	;# 
   973  018C                     	;# 
   974  0000                     	;# 
   975  0001                     	;# 
   976  0002                     	;# 
   977  0003                     	;# 
   978  0004                     	;# 
   979  0005                     	;# 
   980  0006                     	;# 
   981  0007                     	;# 
   982  0009                     	;# 
   983  000A                     	;# 
   984  000B                     	;# 
   985  000C                     	;# 
   986  000D                     	;# 
   987  000E                     	;# 
   988  000E                     	;# 
   989  000F                     	;# 
   990  0010                     	;# 
   991  0011                     	;# 
   992  0012                     	;# 
   993  0013                     	;# 
   994  0014                     	;# 
   995  0015                     	;# 
   996  0015                     	;# 
   997  0016                     	;# 
   998  0017                     	;# 
   999  0018                     	;# 
  1000  0019                     	;# 
  1001  001A                     	;# 
  1002  001B                     	;# 
  1003  001B                     	;# 
  1004  001C                     	;# 
  1005  001D                     	;# 
  1006  001E                     	;# 
  1007  001F                     	;# 
  1008  0081                     	;# 
  1009  0085                     	;# 
  1010  0086                     	;# 
  1011  0087                     	;# 
  1012  0089                     	;# 
  1013  008C                     	;# 
  1014  008D                     	;# 
  1015  008E                     	;# 
  1016  008F                     	;# 
  1017  0090                     	;# 
  1018  0091                     	;# 
  1019  0092                     	;# 
  1020  0093                     	;# 
  1021  0093                     	;# 
  1022  0094                     	;# 
  1023  0095                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0096                     	;# 
  1027  0098                     	;# 
  1028  0099                     	;# 
  1029  009C                     	;# 
  1030  009D                     	;# 
  1031  009F                     	;# 
  1032  0108                     	;# 
  1033  0109                     	;# 
  1034  010C                     	;# 
  1035  010C                     	;# 
  1036  010D                     	;# 
  1037  010D                     	;# 
  1038  010E                     	;# 
  1039  010F                     	;# 
  1040  0185                     	;# 
  1041  0186                     	;# 
  1042  018C                     	;# 
  1043  0000                     	;# 
  1044  0001                     	;# 
  1045  0002                     	;# 
  1046  0003                     	;# 
  1047  0004                     	;# 
  1048  0005                     	;# 
  1049  0006                     	;# 
  1050  0007                     	;# 
  1051  0009                     	;# 
  1052  000A                     	;# 
  1053  000B                     	;# 
  1054  000C                     	;# 
  1055  000D                     	;# 
  1056  000E                     	;# 
  1057  000E                     	;# 
  1058  000F                     	;# 
  1059  0010                     	;# 
  1060  0011                     	;# 
  1061  0012                     	;# 
  1062  0013                     	;# 
  1063  0014                     	;# 
  1064  0015                     	;# 
  1065  0015                     	;# 
  1066  0016                     	;# 
  1067  0017                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  001B                     	;# 
  1072  001B                     	;# 
  1073  001C                     	;# 
  1074  001D                     	;# 
  1075  001E                     	;# 
  1076  001F                     	;# 
  1077  0081                     	;# 
  1078  0085                     	;# 
  1079  0086                     	;# 
  1080  0087                     	;# 
  1081  0089                     	;# 
  1082  008C                     	;# 
  1083  008D                     	;# 
  1084  008E                     	;# 
  1085  008F                     	;# 
  1086  0090                     	;# 
  1087  0091                     	;# 
  1088  0092                     	;# 
  1089  0093                     	;# 
  1090  0093                     	;# 
  1091  0094                     	;# 
  1092  0095                     	;# 
  1093  0095                     	;# 
  1094  0096                     	;# 
  1095  0096                     	;# 
  1096  0098                     	;# 
  1097  0099                     	;# 
  1098  009C                     	;# 
  1099  009D                     	;# 
  1100  009F                     	;# 
  1101  0108                     	;# 
  1102  0109                     	;# 
  1103  010C                     	;# 
  1104  010C                     	;# 
  1105  010D                     	;# 
  1106  010D                     	;# 
  1107  010E                     	;# 
  1108  010F                     	;# 
  1109  0185                     	;# 
  1110  0186                     	;# 
  1111  018C                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  000D                     	;# 
  1125  000E                     	;# 
  1126  000E                     	;# 
  1127  000F                     	;# 
  1128  0010                     	;# 
  1129  0011                     	;# 
  1130  0012                     	;# 
  1131  0013                     	;# 
  1132  0014                     	;# 
  1133  0015                     	;# 
  1134  0015                     	;# 
  1135  0016                     	;# 
  1136  0017                     	;# 
  1137  0018                     	;# 
  1138  0019                     	;# 
  1139  001A                     	;# 
  1140  001B                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  001D                     	;# 
  1144  001E                     	;# 
  1145  001F                     	;# 
  1146  0081                     	;# 
  1147  0085                     	;# 
  1148  0086                     	;# 
  1149  0087                     	;# 
  1150  0089                     	;# 
  1151  008C                     	;# 
  1152  008D                     	;# 
  1153  008E                     	;# 
  1154  008F                     	;# 
  1155  0090                     	;# 
  1156  0091                     	;# 
  1157  0092                     	;# 
  1158  0093                     	;# 
  1159  0093                     	;# 
  1160  0094                     	;# 
  1161  0095                     	;# 
  1162  0095                     	;# 
  1163  0096                     	;# 
  1164  0096                     	;# 
  1165  0098                     	;# 
  1166  0099                     	;# 
  1167  009C                     	;# 
  1168  009D                     	;# 
  1169  009F                     	;# 
  1170  0108                     	;# 
  1171  0109                     	;# 
  1172  010C                     	;# 
  1173  010C                     	;# 
  1174  010D                     	;# 
  1175  010D                     	;# 
  1176  010E                     	;# 
  1177  010F                     	;# 
  1178  0185                     	;# 
  1179  0186                     	;# 
  1180  018C                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000D                     	;# 
  1194  000E                     	;# 
  1195  000E                     	;# 
  1196  000F                     	;# 
  1197  0010                     	;# 
  1198  0011                     	;# 
  1199  0012                     	;# 
  1200  0013                     	;# 
  1201  0014                     	;# 
  1202  0015                     	;# 
  1203  0015                     	;# 
  1204  0016                     	;# 
  1205  0017                     	;# 
  1206  0018                     	;# 
  1207  0019                     	;# 
  1208  001A                     	;# 
  1209  001B                     	;# 
  1210  001B                     	;# 
  1211  001C                     	;# 
  1212  001D                     	;# 
  1213  001E                     	;# 
  1214  001F                     	;# 
  1215  0081                     	;# 
  1216  0085                     	;# 
  1217  0086                     	;# 
  1218  0087                     	;# 
  1219  0089                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  008F                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0093                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0096                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009F                     	;# 
  1239  0108                     	;# 
  1240  0109                     	;# 
  1241  010C                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010D                     	;# 
  1245  010E                     	;# 
  1246  010F                     	;# 
  1247  0185                     	;# 
  1248  0186                     	;# 
  1249  018C                     	;# 
  1250  0000                     	;# 
  1251  0001                     	;# 
  1252  0002                     	;# 
  1253  0003                     	;# 
  1254  0004                     	;# 
  1255  0005                     	;# 
  1256  0006                     	;# 
  1257  0007                     	;# 
  1258  0009                     	;# 
  1259  000A                     	;# 
  1260  000B                     	;# 
  1261  000C                     	;# 
  1262  000D                     	;# 
  1263  000E                     	;# 
  1264  000E                     	;# 
  1265  000F                     	;# 
  1266  0010                     	;# 
  1267  0011                     	;# 
  1268  0012                     	;# 
  1269  0013                     	;# 
  1270  0014                     	;# 
  1271  0015                     	;# 
  1272  0015                     	;# 
  1273  0016                     	;# 
  1274  0017                     	;# 
  1275  0018                     	;# 
  1276  0019                     	;# 
  1277  001A                     	;# 
  1278  001B                     	;# 
  1279  001B                     	;# 
  1280  001C                     	;# 
  1281  001D                     	;# 
  1282  001E                     	;# 
  1283  001F                     	;# 
  1284  0081                     	;# 
  1285  0085                     	;# 
  1286  0086                     	;# 
  1287  0087                     	;# 
  1288  0089                     	;# 
  1289  008C                     	;# 
  1290  008D                     	;# 
  1291  008E                     	;# 
  1292  008F                     	;# 
  1293  0090                     	;# 
  1294  0091                     	;# 
  1295  0092                     	;# 
  1296  0093                     	;# 
  1297  0093                     	;# 
  1298  0094                     	;# 
  1299  0095                     	;# 
  1300  0095                     	;# 
  1301  0096                     	;# 
  1302  0096                     	;# 
  1303  0098                     	;# 
  1304  0099                     	;# 
  1305  009C                     	;# 
  1306  009D                     	;# 
  1307  009F                     	;# 
  1308  0108                     	;# 
  1309  0109                     	;# 
  1310  010C                     	;# 
  1311  010C                     	;# 
  1312  010D                     	;# 
  1313  010D                     	;# 
  1314  010E                     	;# 
  1315  010F                     	;# 
  1316  0185                     	;# 
  1317  0186                     	;# 
  1318  018C                     	;# 
  1319  001F                     _ADCON0	set	31
  1320  001E                     _ADRES	set	30
  1321  0005                     _PORTA	set	5
  1322  0006                     _PORTB	set	6
  1323  0007                     _PORTC	set	7
  1324  0010                     _T1CON	set	16
  1325  000F                     _TMR1H	set	15
  1326  000E                     _TMR1L	set	14
  1327  005F                     _GIE	set	95
  1328  00F9                     _GO_nDONE	set	249
  1329  005E                     _PEIE	set	94
  1330  002F                     _RA7	set	47
  1331  0032                     _RB2	set	50
  1332  0033                     _RB3	set	51
  1333  0034                     _RB4	set	52
  1334  0035                     _RB5	set	53
  1335  0060                     _TMR1IF	set	96
  1336  009F                     _ADCON1	set	159
  1337  009D                     _FVRCON	set	157
  1338  0090                     _OSCCON	set	144
  1339  0085                     _TRISA	set	133
  1340  0086                     _TRISB	set	134
  1341  0087                     _TRISC	set	135
  1342  0095                     _WPUB	set	149
  1343  0408                     _PS0	set	1032
  1344  0409                     _PS1	set	1033
  1345  040A                     _PS2	set	1034
  1346  040B                     _PSA	set	1035
  1347  0460                     _TMR1IE	set	1120
  1348  0185                     _ANSELA	set	389
  1349  0186                     _ANSELB	set	390
  1350                           
  1351                           	psect	text0
  1352  0000                     __ptext0:	
  1353                           ; #config settings
  1354                           
  1355                           
  1356                           ;psect for function _DimmerLights_IOC_1
  1357  0000                     
  1358                           	psect	cinit
  1359  0013                     start_initialization:	
  1360  0013                     __initialization:	
  1361                           
  1362                           ; Clear objects allocated to COMMON
  1363  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1364  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1365  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1366  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1367  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1368                           
  1369                           ; Clear objects allocated to BANK0
  1370  0018  1383               	bcf	3,7	;select IRP bank0
  1371  0019  3020               	movlw	low __pbssBANK0
  1372  001A  0084               	movwf	4
  1373  001B  3059               	movlw	low (__pbssBANK0+57)
  1374  001C  158A  2543  118A   	fcall	clear_ram0
  1375                           
  1376                           ; Clear objects allocated to BANK1
  1377  001F  30A0               	movlw	low __pbssBANK1
  1378  0020  0084               	movwf	4
  1379  0021  30D6               	movlw	low (__pbssBANK1+54)
  1380  0022  158A  2543         	fcall	clear_ram0
  1381  0024                     end_of_initialization:	
  1382                           ;End of C runtime variable initialization code
  1383                           
  1384  0024                     __end_of__initialization:	
  1385  0024  0183               	clrf	3
  1386  0025  118A  2E8A         	ljmp	_main	;jump to C main() function
  1387                           
  1388                           	psect	bssCOMMON
  1389  0070                     __pbssCOMMON:	
  1390  0070                     _Cmd:	
  1391  0070                     	ds	1
  1392  0071                     _DimmerIntr:	
  1393  0071                     	ds	1
  1394  0072                     _DimmerLights:	
  1395  0072                     	ds	1
  1396  0073                     _LED:	
  1397  0073                     	ds	1
  1398  0074                     _SwDetect:	
  1399  0074                     	ds	1
  1400                           
  1401                           	psect	bssBANK0
  1402  0020                     __pbssBANK0:	
  1403  0020                     _DimmerIntr1:	
  1404  0020                     	ds	7
  1405  0027                     _myMain:	
  1406  0027                     	ds	6
  1407  002D                     _Dimmer:	
  1408  002D                     	ds	5
  1409  0032                     __CDS:	
  1410  0032                     	ds	5
  1411  0037                     _PIRLED:	
  1412  0037                     	ds	4
  1413  003B                     _Timer1:	
  1414  003B                     	ds	3
  1415  003E                     _WDT:	
  1416  003E                     	ds	2
  1417  0040                     _Light:	
  1418  0040                     	ds	1
  1419  0041                     _Temp:	
  1420  0041                     	ds	12
  1421  004D                     _VarErrLED:	
  1422  004D                     	ds	4
  1423  0051                     _VarLED1:	
  1424  0051                     	ds	4
  1425  0055                     _VarLED2:	
  1426  0055                     	ds	4
  1427                           
  1428                           	psect	bssBANK1
  1429  00A0                     __pbssBANK1:	
  1430  00A0                     __PIR:	
  1431  00A0                     	ds	46
  1432  00CE                     _DimmerLights1:	
  1433  00CE                     	ds	8
  1434                           
  1435                           	psect	clrtext
  1436  0D43                     clear_ram0:	
  1437                           ;	Called with FSR containing the base address, and
  1438                           ;	W with the last address+1
  1439                           
  1440  0D43  0064               	clrwdt	;clear the watchdog before getting into this loop
  1441  0D44                     clrloop0:	
  1442  0D44  0180               	clrf	0	;clear RAM location pointed to by FSR
  1443  0D45  0A84               	incf	4,f	;increment pointer
  1444  0D46  0604               	xorwf	4,w	;XOR with final address
  1445  0D47  1903               	btfsc	3,2	;have we reached the end yet?
  1446  0D48  3400               	retlw	0	;all done for this memory range, return
  1447  0D49  0604               	xorwf	4,w	;XOR again to restore value
  1448  0D4A  2D44               	goto	clrloop0	;do the next byte
  1449                           
  1450                           	psect	cstackCOMMON
  1451  0075                     __pcstackCOMMON:	
  1452  0075                     ?_setDimmerLights_Initialization:	
  1453  0075                     ?_setDimmerLights_Main:	
  1454                           ; 0 bytes @ 0x0
  1455                           
  1456  0075                     ?_DimmerLights_PIR_Control:	
  1457                           ; 0 bytes @ 0x0
  1458                           
  1459  0075                     ?_setLED_Initialization:	
  1460                           ; 0 bytes @ 0x0
  1461                           
  1462  0075                     ?_setPIRLED_Main:	
  1463                           ; 0 bytes @ 0x0
  1464                           
  1465  0075                     ?_Fosc_Set:	
  1466                           ; 0 bytes @ 0x0
  1467                           
  1468  0075                     ?_IO_Set:	
  1469                           ; 0 bytes @ 0x0
  1470                           
  1471  0075                     ?_TMR1_Set:	
  1472                           ; 0 bytes @ 0x0
  1473                           
  1474  0075                     ?_ADC_Set:	
  1475                           ; 0 bytes @ 0x0
  1476                           
  1477  0075                     ?_WDT_Set:	
  1478                           ; 0 bytes @ 0x0
  1479                           
  1480  0075                     ?_TMR1_ISR:	
  1481                           ; 0 bytes @ 0x0
  1482                           
  1483  0075                     ?_Timeout_Counter:	
  1484                           ; 0 bytes @ 0x0
  1485                           
  1486  0075                     ?_set_TimeoutCleared:	
  1487                           ; 0 bytes @ 0x0
  1488                           
  1489  0075                     ?_WDT_Clearing:	
  1490                           ; 0 bytes @ 0x0
  1491                           
  1492  0075                     ?_myMain_Initialization:	
  1493                           ; 0 bytes @ 0x0
  1494                           
  1495  0075                     ?_Temp_Initialization:	
  1496                           ; 0 bytes @ 0x0
  1497                           
  1498  0075                     ?_PIR_Initialization:	
  1499                           ; 0 bytes @ 0x0
  1500                           
  1501  0075                     ?_getTemp_AD:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0075                     ?_my_MainTimer:	
  1505                           ; 0 bytes @ 0x0
  1506                           
  1507  0075                     ?_Temp_Main:	
  1508                           ; 0 bytes @ 0x0
  1509                           
  1510  0075                     ?_PIR_Main:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0075                     ?_Exception_Main:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0075                     ?_setTemp_Initialization:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0075                     ?_setTemp_Main:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0075                     ?_CDS_Initialization:	
  1523                           ; 0 bytes @ 0x0
  1524                           
  1525  0075                     ?_CDS_Main:	
  1526                           ; 0 bytes @ 0x0
  1527                           
  1528  0075                     ?_DimmerIntr_Initialization:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531  0075                     ?_DimmerLights_SelectPointer:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534  0075                     ?_DimmerLights_Initialization:	
  1535                           ; 0 bytes @ 0x0
  1536                           
  1537  0075                     ?_setDimmerLights_SwOn:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0075                     ?_setDimmerLights_SwOff:	
  1541                           ; 0 bytes @ 0x0
  1542                           
  1543  0075                     ?_DimmerLights_Main:	
  1544                           ; 0 bytes @ 0x0
  1545                           
  1546  0075                     ?_DimmerLights_TMR_1:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0075                     ??_DimmerLights_TMR_1:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0075                     ?_DimmerLights_IOC_1:	
  1553                           ; 0 bytes @ 0x0
  1554                           
  1555  0075                     ??_DimmerLights_IOC_1:	
  1556                           ; 0 bytes @ 0x0
  1557                           
  1558  0075                     ?_LedPointSelect:	
  1559                           ; 0 bytes @ 0x0
  1560                           
  1561  0075                     ?_LED_Initialization:	
  1562                           ; 0 bytes @ 0x0
  1563                           
  1564  0075                     ?_LED_Main:	
  1565                           ; 0 bytes @ 0x0
  1566                           
  1567  0075                     ?_Mcu_Initialization:	
  1568                           ; 0 bytes @ 0x0
  1569                           
  1570  0075                     ?_ISR:	
  1571                           ; 0 bytes @ 0x0
  1572                           
  1573  0075                     ?_WDT_Main:	
  1574                           ; 0 bytes @ 0x0
  1575                           
  1576  0075                     ?_getDimmerLights_Allow_Condition:	
  1577                           ; 0 bytes @ 0x0
  1578                           
  1579  0075                     ?_getMain_All_LightsStatus:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0075                     ?_getCmd_Status:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0075                     ?_getCDS_Status:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0075                     ?_getDimmerIntr_DimmingValue:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0075                     ?_getDimmerLights_Line:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0075                     ?_getDimmerLights_Status:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0075                     ?_getMain_All_Error_Status:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0075                     setDimmerLights_Initialization@lights:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0075                     getDimmerLights_Allow_Condition@lights:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606                           
  1607                           ; 1 bytes @ 0x0
  1608  0075                     	ds	1
  1609  0076                     ??_TMR1_ISR:	
  1610  0076                     ??_ISR:	
  1611                           ; 0 bytes @ 0x1
  1612                           
  1613                           
  1614                           ; 0 bytes @ 0x1
  1615  0076                     	ds	4
  1616                           
  1617                           	psect	cstackBANK0
  1618  0059                     __pcstackBANK0:	
  1619  0059                     ??_setDimmerLights_Initialization:	
  1620  0059                     ??_getDimmerLights_Allow_Condition:	
  1621                           ; 0 bytes @ 0x0
  1622                           
  1623  0059                     ??_getMain_All_LightsStatus:	
  1624                           ; 0 bytes @ 0x0
  1625                           
  1626  0059                     ??_getCmd_Status:	
  1627                           ; 0 bytes @ 0x0
  1628                           
  1629  0059                     ?_setCmd_Status:	
  1630                           ; 0 bytes @ 0x0
  1631                           
  1632  0059                     ??_Fosc_Set:	
  1633                           ; 0 bytes @ 0x0
  1634                           
  1635  0059                     ??_IO_Set:	
  1636                           ; 0 bytes @ 0x0
  1637                           
  1638  0059                     ??_TMR1_Set:	
  1639                           ; 0 bytes @ 0x0
  1640                           
  1641  0059                     ??_ADC_Set:	
  1642                           ; 0 bytes @ 0x0
  1643                           
  1644  0059                     ??_WDT_Set:	
  1645                           ; 0 bytes @ 0x0
  1646                           
  1647  0059                     ??_Timeout_Counter:	
  1648                           ; 0 bytes @ 0x0
  1649                           
  1650  0059                     ??_set_TimeoutCleared:	
  1651                           ; 0 bytes @ 0x0
  1652                           
  1653  0059                     ??_WDT_Clearing:	
  1654                           ; 0 bytes @ 0x0
  1655                           
  1656  0059                     ??_myMain_Initialization:	
  1657                           ; 0 bytes @ 0x0
  1658                           
  1659  0059                     ??_Temp_Initialization:	
  1660                           ; 0 bytes @ 0x0
  1661                           
  1662  0059                     ??_PIR_Initialization:	
  1663                           ; 0 bytes @ 0x0
  1664                           
  1665  0059                     ??_my_MainTimer:	
  1666                           ; 0 bytes @ 0x0
  1667                           
  1668  0059                     ??_setTemp_Initialization:	
  1669                           ; 0 bytes @ 0x0
  1670                           
  1671  0059                     ??_CDS_Initialization:	
  1672                           ; 0 bytes @ 0x0
  1673                           
  1674  0059                     ??_CDS_Main:	
  1675                           ; 0 bytes @ 0x0
  1676                           
  1677  0059                     ??_getCDS_Status:	
  1678                           ; 0 bytes @ 0x0
  1679                           
  1680  0059                     ??_DimmerIntr_Initialization:	
  1681                           ; 0 bytes @ 0x0
  1682                           
  1683  0059                     ?_setDimmerIntr_ControlStatus:	
  1684                           ; 0 bytes @ 0x0
  1685                           
  1686  0059                     ?_setDimmerIntr_DimmingValue:	
  1687                           ; 0 bytes @ 0x0
  1688                           
  1689  0059                     ??_getDimmerIntr_DimmingValue:	
  1690                           ; 0 bytes @ 0x0
  1691                           
  1692  0059                     ?_setDimmerIntr_Dimming_Sw:	
  1693                           ; 0 bytes @ 0x0
  1694                           
  1695  0059                     ?_setDimmerIntr_Dimming_RF:	
  1696                           ; 0 bytes @ 0x0
  1697                           
  1698  0059                     ??_DimmerLights_SelectPointer:	
  1699                           ; 0 bytes @ 0x0
  1700                           
  1701  0059                     ??_getDimmerLights_Line:	
  1702                           ; 0 bytes @ 0x0
  1703                           
  1704  0059                     ??_LedPointSelect:	
  1705                           ; 0 bytes @ 0x0
  1706                           
  1707  0059                     ??_WDT_Main:	
  1708                           ; 0 bytes @ 0x0
  1709                           
  1710  0059                     ??_getMain_All_Error_Status:	
  1711                           ; 0 bytes @ 0x0
  1712                           
  1713  0059                     ?_getAD:	
  1714                           ; 0 bytes @ 0x0
  1715                           
  1716  0059                     ?___awdiv:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0059                     ?___lwdiv:	
  1720                           ; 2 bytes @ 0x0
  1721                           
  1722  0059                     getCDS_Status@status:	
  1723                           ; 2 bytes @ 0x0
  1724                           
  1725  0059                     setDimmerIntr_ControlStatus@command:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0059                     setDimmerIntr_DimmingValue@value:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0059                     setDimmerIntr_Dimming_Sw@command:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0059                     setDimmerIntr_Dimming_RF@command:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0059                     getDimmerLights_Allow_Condition@allow:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0059                     getDimmerLights_Line@line:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0059                     getAD@adcon1:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0059                     getMain_All_LightsStatus@status:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0059                     setCmd_Status@cmd:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0059                     getCmd_Status@number:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0059                     ___awdiv@divisor:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0059                     ___lwdiv@divisor:	
  1759                           ; 2 bytes @ 0x0
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x0
  1763  0059                     	ds	1
  1764  005A                     ??_getAD:	
  1765  005A                     ??_setCmd_Status:	
  1766                           ; 0 bytes @ 0x1
  1767                           
  1768  005A                     ??_setDimmerIntr_ControlStatus:	
  1769                           ; 0 bytes @ 0x1
  1770                           
  1771  005A                     ??_setDimmerIntr_DimmingValue:	
  1772                           ; 0 bytes @ 0x1
  1773                           
  1774  005A                     ??_setDimmerIntr_Dimming_Sw:	
  1775                           ; 0 bytes @ 0x1
  1776                           
  1777  005A                     ??_setDimmerIntr_Dimming_RF:	
  1778                           ; 0 bytes @ 0x1
  1779                           
  1780  005A                     ??_DimmerLights_Initialization:	
  1781                           ; 0 bytes @ 0x1
  1782                           
  1783  005A                     ??_Mcu_Initialization:	
  1784                           ; 0 bytes @ 0x1
  1785                           
  1786  005A                     getDimmerIntr_DimmingValue@lights:	
  1787                           ; 0 bytes @ 0x1
  1788                           
  1789  005A                     DimmerLights_SelectPointer@lights:	
  1790                           ; 1 bytes @ 0x1
  1791                           
  1792  005A                     LedPointSelect@led:	
  1793                           ; 1 bytes @ 0x1
  1794                           
  1795  005A                     getAD@adcon0:	
  1796                           ; 1 bytes @ 0x1
  1797                           
  1798  005A                     getMain_All_Error_Status@command:	
  1799                           ; 1 bytes @ 0x1
  1800                           
  1801  005A                     getCmd_Status@cmd:	
  1802                           ; 1 bytes @ 0x1
  1803                           
  1804                           
  1805                           ; 1 bytes @ 0x1
  1806  005A                     	ds	1
  1807  005B                     ?_setLED:	
  1808  005B                     ??_getTemp_AD:	
  1809                           ; 0 bytes @ 0x2
  1810                           
  1811  005B                     ?_getCDS_AD:	
  1812                           ; 0 bytes @ 0x2
  1813                           
  1814  005B                     ??_setDimmerLights_SwOn:	
  1815                           ; 0 bytes @ 0x2
  1816                           
  1817  005B                     ??_setDimmerLights_SwOff:	
  1818                           ; 0 bytes @ 0x2
  1819                           
  1820  005B                     ??_getDimmerLights_Status:	
  1821                           ; 0 bytes @ 0x2
  1822                           
  1823  005B                     getCDS_AD@channel2:	
  1824                           ; 0 bytes @ 0x2
  1825                           
  1826  005B                     setDimmerIntr_ControlStatus@lights:	
  1827                           ; 1 bytes @ 0x2
  1828                           
  1829  005B                     setDimmerIntr_DimmingValue@lights:	
  1830                           ; 1 bytes @ 0x2
  1831                           
  1832  005B                     getDimmerIntr_DimmingValue@value:	
  1833                           ; 1 bytes @ 0x2
  1834                           
  1835  005B                     setDimmerIntr_Dimming_Sw@lights:	
  1836                           ; 1 bytes @ 0x2
  1837                           
  1838  005B                     setDimmerIntr_Dimming_RF@lights:	
  1839                           ; 1 bytes @ 0x2
  1840                           
  1841  005B                     setDimmerLights_SwOn@sw:	
  1842                           ; 1 bytes @ 0x2
  1843                           
  1844  005B                     setDimmerLights_SwOff@sw:	
  1845                           ; 1 bytes @ 0x2
  1846                           
  1847  005B                     getDimmerLights_Status@lights:	
  1848                           ; 1 bytes @ 0x2
  1849                           
  1850  005B                     setLED@command:	
  1851                           ; 1 bytes @ 0x2
  1852                           
  1853  005B                     setCmd_Status@number:	
  1854                           ; 1 bytes @ 0x2
  1855                           
  1856  005B                     _getMain_All_Error_Status$2590:	
  1857                           ; 1 bytes @ 0x2
  1858                           
  1859  005B                     ___awdiv@dividend:	
  1860                           ; 2 bytes @ 0x2
  1861                           
  1862  005B                     ___lwdiv@dividend:	
  1863                           ; 2 bytes @ 0x2
  1864                           
  1865                           
  1866                           ; 2 bytes @ 0x2
  1867  005B                     	ds	1
  1868  005C                     ?_setDimmerLights_OnOff:	
  1869  005C                     ??_setLED:	
  1870                           ; 0 bytes @ 0x3
  1871                           
  1872  005C                     ??_getCDS_AD:	
  1873                           ; 0 bytes @ 0x3
  1874                           
  1875  005C                     ?_setDimmerIntr_MaxmumValue:	
  1876                           ; 0 bytes @ 0x3
  1877                           
  1878  005C                     setDimmerIntr_MaxmumValue@value:	
  1879                           ; 0 bytes @ 0x3
  1880                           
  1881  005C                     setDimmerLights_SwOn@idle:	
  1882                           ; 1 bytes @ 0x3
  1883                           
  1884  005C                     setDimmerLights_OnOff@command:	
  1885                           ; 1 bytes @ 0x3
  1886                           
  1887  005C                     getDimmerLights_Status@status:	
  1888                           ; 1 bytes @ 0x3
  1889                           
  1890  005C                     setLED@led:	
  1891                           ; 1 bytes @ 0x3
  1892                           
  1893                           
  1894                           ; 1 bytes @ 0x3
  1895  005C                     	ds	1
  1896  005D                     ??_setDimmerLights_OnOff:	
  1897  005D                     ??_setLED_Initialization:	
  1898                           ; 0 bytes @ 0x4
  1899                           
  1900  005D                     ??_setPIRLED_Main:	
  1901                           ; 0 bytes @ 0x4
  1902                           
  1903  005D                     ??_setDimmerIntr_MaxmumValue:	
  1904                           ; 0 bytes @ 0x4
  1905                           
  1906  005D                     ??___awdiv:	
  1907                           ; 0 bytes @ 0x4
  1908                           
  1909  005D                     ??___lwdiv:	
  1910                           ; 0 bytes @ 0x4
  1911                           
  1912  005D                     setDimmerLights_OnOff@lights:	
  1913                           ; 0 bytes @ 0x4
  1914                           
  1915  005D                     setLED_Initialization@led:	
  1916                           ; 1 bytes @ 0x4
  1917                           
  1918  005D                     getMain_All_Error_Status@status:	
  1919                           ; 1 bytes @ 0x4
  1920                           
  1921  005D                     getTemp_AD@channel:	
  1922                           ; 1 bytes @ 0x4
  1923                           
  1924                           
  1925                           ; 1 bytes @ 0x4
  1926  005D                     	ds	1
  1927  005E                     ??_PIR_Main:	
  1928  005E                     ??_Exception_Main:	
  1929                           ; 0 bytes @ 0x5
  1930                           
  1931  005E                     ??_LED_Initialization:	
  1932                           ; 0 bytes @ 0x5
  1933                           
  1934  005E                     getCDS_AD@i:	
  1935                           ; 0 bytes @ 0x5
  1936                           
  1937  005E                     setDimmerIntr_MaxmumValue@lights:	
  1938                           ; 1 bytes @ 0x5
  1939                           
  1940  005E                     setPIRLED_Main@count:	
  1941                           ; 1 bytes @ 0x5
  1942                           
  1943  005E                     ___awdiv@counter:	
  1944                           ; 1 bytes @ 0x5
  1945                           
  1946  005E                     ___lwdiv@counter:	
  1947                           ; 1 bytes @ 0x5
  1948                           
  1949                           
  1950                           ; 1 bytes @ 0x5
  1951  005E                     	ds	1
  1952  005F                     ??_DimmerLights_PIR_Control:	
  1953  005F                     ?_setDimmerLights_Dimming:	
  1954                           ; 0 bytes @ 0x6
  1955                           
  1956  005F                     ??_LED_Main:	
  1957                           ; 0 bytes @ 0x6
  1958                           
  1959  005F                     getCDS_AD@j:	
  1960                           ; 0 bytes @ 0x6
  1961                           
  1962  005F                     setDimmerLights_Dimming@status:	
  1963                           ; 1 bytes @ 0x6
  1964                           
  1965  005F                     Exception_Main@count:	
  1966                           ; 1 bytes @ 0x6
  1967                           
  1968  005F                     ___awdiv@sign:	
  1969                           ; 1 bytes @ 0x6
  1970                           
  1971  005F                     ___lwdiv@quotient:	
  1972                           ; 1 bytes @ 0x6
  1973                           
  1974                           
  1975                           ; 2 bytes @ 0x6
  1976  005F                     	ds	1
  1977  0060                     ??_setDimmerLights_Dimming:	
  1978  0060                     getCDS_AD@channel1:	
  1979                           ; 0 bytes @ 0x7
  1980                           
  1981  0060                     Exception_Main@error:	
  1982                           ; 1 bytes @ 0x7
  1983                           
  1984  0060                     ___awdiv@quotient:	
  1985                           ; 1 bytes @ 0x7
  1986                           
  1987                           
  1988                           ; 2 bytes @ 0x7
  1989  0060                     	ds	1
  1990  0061                     setDimmerLights_Dimming@lights:	
  1991  0061                     Exception_Main@i:	
  1992                           ; 1 bytes @ 0x8
  1993                           
  1994                           
  1995                           ; 2 bytes @ 0x8
  1996  0061                     	ds	1
  1997  0062                     ??_setDimmerLights_Main:	
  1998  0062                     ?_getPIR_AD:	
  1999                           ; 0 bytes @ 0x9
  2000                           
  2001  0062                     ??_setTemp_Main:	
  2002                           ; 0 bytes @ 0x9
  2003                           
  2004  0062                     setDimmerLights_Main@lights:	
  2005                           ; 0 bytes @ 0x9
  2006                           
  2007  0062                     PIR_Main@error:	
  2008                           ; 1 bytes @ 0x9
  2009                           
  2010  0062                     getPIR_AD@channel2:	
  2011                           ; 1 bytes @ 0x9
  2012                           
  2013                           
  2014                           ; 1 bytes @ 0x9
  2015  0062                     	ds	1
  2016  0063                     ??_getPIR_AD:	
  2017  0063                     ??_DimmerLights_Main:	
  2018                           ; 0 bytes @ 0xA
  2019                           
  2020  0063                     setTemp_Main@error:	
  2021                           ; 0 bytes @ 0xA
  2022                           
  2023  0063                     Exception_Main@i_2601:	
  2024                           ; 1 bytes @ 0xA
  2025                           
  2026  0063                     _PIR_Main$3359:	
  2027                           ; 2 bytes @ 0xA
  2028                           
  2029                           
  2030                           ; 2 bytes @ 0xA
  2031  0063                     	ds	1
  2032  0064                     ??_Temp_Main:	
  2033                           
  2034                           ; 0 bytes @ 0xB
  2035  0064                     	ds	1
  2036  0065                     Exception_Main@lights:	
  2037  0065                     PIR_Main@cds:	
  2038                           ; 1 bytes @ 0xC
  2039                           
  2040                           
  2041                           ; 1 bytes @ 0xC
  2042  0065                     	ds	1
  2043  0066                     PIR_Main@LightsStatus:	
  2044  0066                     getPIR_AD@j:	
  2045                           ; 1 bytes @ 0xD
  2046                           
  2047                           
  2048                           ; 1 bytes @ 0xD
  2049  0066                     	ds	1
  2050  0067                     getPIR_AD@channel1:	
  2051                           
  2052                           ; 1 bytes @ 0xE
  2053  0067                     	ds	1
  2054  0068                     getPIR_AD@i:	
  2055                           
  2056                           ; 1 bytes @ 0xF
  2057  0068                     	ds	1
  2058  0069                     ?_main:	
  2059  0069                     main@argc:	
  2060                           ; 2 bytes @ 0x10
  2061                           
  2062                           
  2063                           ; 2 bytes @ 0x10
  2064  0069                     	ds	2
  2065  006B                     main@argv:	
  2066                           
  2067                           ; 2 bytes @ 0x12
  2068  006B                     	ds	2
  2069  006D                     ??_main:	
  2070                           
  2071                           ; 0 bytes @ 0x14
  2072  006D                     	ds	1
  2073                           
  2074                           	psect	maintext
  2075  068A                     __pmaintext:	
  2076 ;;
  2077 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2078 ;;
  2079 ;; *************** function _main *****************
  2080 ;; Defined at:
  2081 ;;		line 7 in file "../src/Main_B1.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  argc            2   16[BANK0 ] int 
  2084 ;;  argv            2   18[BANK0 ] PTR PTR unsigned char 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2   16[BANK0 ] int 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 17F/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2096 ;;      Params:         0       4       0       0
  2097 ;;      Locals:         0       0       0       0
  2098 ;;      Temps:          0       1       0       0
  2099 ;;      Totals:         0       5       0       0
  2100 ;;Total ram usage:        5 bytes
  2101 ;; Hardware stack levels required when called:    7
  2102 ;; This function calls:
  2103 ;;		_CDS_Initialization
  2104 ;;		_CDS_Main
  2105 ;;		_DimmerLights_Initialization
  2106 ;;		_DimmerLights_Main
  2107 ;;		_Exception_Main
  2108 ;;		_LED_Initialization
  2109 ;;		_LED_Main
  2110 ;;		_Mcu_Initialization
  2111 ;;		_PIR_Initialization
  2112 ;;		_PIR_Main
  2113 ;;		_Temp_Initialization
  2114 ;;		_Temp_Main
  2115 ;;		_WDT_Main
  2116 ;;		_getCDS_AD
  2117 ;;		_getPIR_AD
  2118 ;;		_getTemp_AD
  2119 ;;		_myMain_Initialization
  2120 ;;		_my_MainTimer
  2121 ;; This function is called by:
  2122 ;;		Startup code after reset
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _main
  2128  068A                     _main:	
  2129                           
  2130                           ;Main_B1.c: 8: myMain_Initialization();
  2131                           
  2132                           ;incstack = 0
  2133                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2134  068A  158A  250E  118A   	fcall	_myMain_Initialization
  2135                           
  2136                           ;Main_B1.c: 9: Mcu_Initialization();
  2137  068D  158A  25CD  118A   	fcall	_Mcu_Initialization
  2138                           
  2139                           ;Main_B1.c: 10: ;;
  2140                           ;Main_B1.c: 11: LED_Initialization();
  2141  0690  158A  256F  118A   	fcall	_LED_Initialization
  2142                           
  2143                           ;Main_B1.c: 12: ;;
  2144                           ;Main_B1.c: 14: ;;
  2145                           ;Main_B1.c: 15: Temp_Initialization();
  2146  0693  158A  2512  118A   	fcall	_Temp_Initialization
  2147                           
  2148                           ;Main_B1.c: 16: ;;
  2149                           ;Main_B1.c: 17: ;;
  2150                           ;Main_B1.c: 18: ;;
  2151                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2152  0696  158A  2526  118A   	fcall	_DimmerLights_Initialization
  2153                           
  2154                           ;Main_B1.c: 21: ;;
  2155                           ;Main_B1.c: 22: CDS_Initialization();
  2156  0699  158A  2518  118A   	fcall	_CDS_Initialization
  2157                           
  2158                           ;Main_B1.c: 23: PIR_Initialization();
  2159  069C  158A  2588  118A   	fcall	_PIR_Initialization
  2160  069F                     l5046:	
  2161                           ;Main_B1.c: 24: ;;
  2162                           ;Main_B1.c: 25: ;;
  2163                           ;Main_B1.c: 26: ;;
  2164                           ;Main_B1.c: 27: ;;
  2165                           ;Main_B1.c: 28: ;;
  2166                           ;Main_B1.c: 30: while (1) {
  2167                           
  2168                           
  2169                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2170  069F  1283               	bcf	3,5	;RP0=0, select bank0
  2171  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  2172  06A1  1C27               	btfss	_myMain,0
  2173  06A2  2EBB               	goto	l5052
  2174                           
  2175                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2176  06A3  3011               	movlw	17
  2177  06A4  158A  27B1  118A   	fcall	_getTemp_AD
  2178                           
  2179                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2180  06A7  3031               	movlw	49
  2181  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2182  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2183  06AA  00ED               	movwf	??_main
  2184  06AB  086D               	movf	??_main,w
  2185  06AC  00DB               	movwf	getCDS_AD@channel2
  2186  06AD  3009               	movlw	9
  2187  06AE  118A  27D0  118A   	fcall	_getCDS_AD
  2188                           
  2189                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2190  06B1  300D               	movlw	13
  2191  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  2192  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  2193  06B4  00ED               	movwf	??_main
  2194  06B5  086D               	movf	??_main,w
  2195  06B6  00E2               	movwf	getPIR_AD@channel2
  2196  06B7  3005               	movlw	5
  2197  06B8  118A  21D6  118A   	fcall	_getPIR_AD
  2198  06BB                     l5052:	
  2199                           
  2200                           ;Main_B1.c: 57: }
  2201                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2202  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  2203  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  2204  06BD  1C3B               	btfss	_Timer1,0
  2205  06BE  2E9F               	goto	l5046
  2206                           
  2207                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2208  06BF  103B               	bcf	_Timer1,0
  2209                           
  2210                           ;Main_B1.c: 96: my_MainTimer();
  2211  06C0  158A  26F8  118A   	fcall	_my_MainTimer
  2212                           
  2213                           ;Main_B1.c: 97: WDT_Main();
  2214  06C3  158A  260E  118A   	fcall	_WDT_Main
  2215                           
  2216                           ;Main_B1.c: 98: ;;
  2217                           ;Main_B1.c: 99: ;;
  2218                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2219  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2220  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2221  06C8  1C27               	btfss	_myMain,0
  2222  06C9  2E9F               	goto	l5046
  2223                           
  2224                           ;Main_B1.c: 101: ;;
  2225                           ;Main_B1.c: 103: LED_Main();
  2226  06CA  158A  250F  118A   	fcall	_LED_Main
  2227                           
  2228                           ;Main_B1.c: 104: ;;
  2229                           ;Main_B1.c: 106: ;;
  2230                           ;Main_B1.c: 107: Temp_Main();
  2231  06CD  158A  2515  118A   	fcall	_Temp_Main
  2232                           
  2233                           ;Main_B1.c: 108: ;;
  2234                           ;Main_B1.c: 109: ;;
  2235                           ;Main_B1.c: 111: ;;
  2236                           ;Main_B1.c: 112: DimmerLights_Main();
  2237  06D0  158A  252D  118A   	fcall	_DimmerLights_Main
  2238                           
  2239                           ;Main_B1.c: 113: ;;
  2240                           ;Main_B1.c: 114: CDS_Main();
  2241  06D3  118A  276F  118A   	fcall	_CDS_Main
  2242                           
  2243                           ;Main_B1.c: 115: PIR_Main();
  2244  06D6  118A  2027  118A   	fcall	_PIR_Main
  2245                           
  2246                           ;Main_B1.c: 117: ;;
  2247                           ;Main_B1.c: 118: ;;
  2248                           ;Main_B1.c: 119: ;;
  2249                           ;Main_B1.c: 120: ;;
  2250                           ;Main_B1.c: 121: Exception_Main();
  2251  06D9  118A  230E  118A   	fcall	_Exception_Main
  2252  06DC  2E9F               	goto	l5046
  2253  06DD                     __end_of_main:	
  2254                           ;Main_B1.c: 128: }
  2255                           ;Main_B1.c: 129: }
  2256                           ;Main_B1.c: 163: }
  2257                           ;Main_B1.c: 164: return (0);
  2258                           ;	Return value of _main is never used
  2259                           
  2260                           
  2261                           	psect	text1
  2262  0EF8                     __ptext1:	
  2263 ;; *************** function _my_MainTimer *****************
  2264 ;; Defined at:
  2265 ;;		line 185 in file "../src/Main_B1.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2279 ;;      Params:         0       0       0       0
  2280 ;;      Locals:         0       0       0       0
  2281 ;;      Temps:          0       1       0       0
  2282 ;;      Totals:         0       1       0       0
  2283 ;;Total ram usage:        1 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    3
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_main
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _my_MainTimer
  2295  0EF8                     _my_MainTimer:	
  2296                           
  2297                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2301  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0EFA  1827               	btfsc	_myMain,0
  2304  0EFB  2F08               	goto	l4784
  2305                           
  2306                           ;Main_B1.c: 188: myMain.PowerCount++;
  2307  0EFC  3001               	movlw	1
  2308  0EFD  00D9               	movwf	??_my_MainTimer
  2309  0EFE  0859               	movf	??_my_MainTimer,w
  2310  0EFF  07A8               	addwf	_myMain+1,f
  2311                           
  2312                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2313  0F00  0828               	movf	_myMain+1,w
  2314  0F01  3A4B               	xorlw	75
  2315  0F02  1D03               	skipz
  2316  0F03  0008               	return
  2317                           
  2318                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2319  0F04  01A8               	clrf	_myMain+1
  2320                           
  2321                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2322  0F05  1427               	bsf	_myMain,0
  2323                           
  2324                           ;Main_B1.c: 196: ;;
  2325                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2326  0F06  1627               	bsf	_myMain,4
  2327                           
  2328                           ;Main_B1.c: 206: }
  2329                           ;Main_B1.c: 207: } else {
  2330  0F07  0008               	return
  2331  0F08                     l4784:	
  2332                           
  2333                           ;Main_B1.c: 208: myMain.PowerCount++;
  2334  0F08  3001               	movlw	1
  2335  0F09  00D9               	movwf	??_my_MainTimer
  2336  0F0A  0859               	movf	??_my_MainTimer,w
  2337  0F0B  07A8               	addwf	_myMain+1,f
  2338                           
  2339                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2340  0F0C  0828               	movf	_myMain+1,w
  2341  0F0D  3A32               	xorlw	50
  2342  0F0E  1D03               	skipz
  2343  0F0F  0008               	return
  2344                           
  2345                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2346  0F10  01A8               	clrf	_myMain+1
  2347  0F11  0008               	return
  2348  0F12                     __end_of_my_MainTimer:	
  2349                           
  2350                           	psect	text2
  2351  0D0E                     __ptext2:	
  2352 ;; *************** function _myMain_Initialization *****************
  2353 ;; Defined at:
  2354 ;;		line 170 in file "../src/Main_B1.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;		None               void
  2361 ;; Registers used:
  2362 ;;		None
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2368 ;;      Params:         0       0       0       0
  2369 ;;      Locals:         0       0       0       0
  2370 ;;      Temps:          0       0       0       0
  2371 ;;      Totals:         0       0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    3
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _myMain_Initialization
  2384  0D0E                     _myMain_Initialization:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _myMain_Initialization: []
  2388  0D0E  0008               	return
  2389  0D0F                     __end_of_myMain_Initialization:	
  2390                           
  2391                           	psect	text3
  2392  0FB1                     __ptext3:	
  2393 ;; *************** function _getTemp_AD *****************
  2394 ;; Defined at:
  2395 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  channel         1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  channel         1    4[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2409 ;;      Params:         0       0       0       0
  2410 ;;      Locals:         0       1       0       0
  2411 ;;      Temps:          0       2       0       0
  2412 ;;      Totals:         0       3       0       0
  2413 ;;Total ram usage:        3 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    5
  2416 ;; This function calls:
  2417 ;;		_getAD
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _getTemp_AD
  2425  0FB1                     _getTemp_AD:	
  2426                           
  2427                           ;incstack = 0
  2428                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2429                           ;getTemp_AD@channel stored from wreg
  2430  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0FB3  00DD               	movwf	getTemp_AD@channel
  2433                           
  2434                           ;OverTemperature_B1.c: 18: if (Temp.ADtoGO == 1) {
  2435  0FB4  1D41               	btfss	_Temp,2
  2436  0FB5  0008               	return
  2437                           
  2438                           ;OverTemperature_B1.c: 19: Temp.ADRES = getAD(channel, 0x70);
  2439  0FB6  3070               	movlw	112
  2440  0FB7  00DB               	movwf	??_getTemp_AD
  2441  0FB8  085B               	movf	??_getTemp_AD,w
  2442  0FB9  00D9               	movwf	getAD@adcon1
  2443  0FBA  085D               	movf	getTemp_AD@channel,w
  2444  0FBB  158A  272E  158A   	fcall	_getAD
  2445  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0FC0  00DC               	movwf	??_getTemp_AD+1
  2448  0FC1  085C               	movf	??_getTemp_AD+1,w
  2449  0FC2  00CA               	movwf	_Temp+9
  2450                           
  2451                           ;OverTemperature_B1.c: 20: if (Temp.ADRES > 0) {
  2452  0FC3  084A               	movf	_Temp+9,w
  2453  0FC4  1903               	btfsc	3,2
  2454  0FC5  0008               	return
  2455                           
  2456                           ;OverTemperature_B1.c: 21: if (Temp.ADH[0] < Temp.ADRES) {
  2457  0FC6  084A               	movf	_Temp+9,w
  2458  0FC7  0248               	subwf	_Temp+7,w
  2459  0FC8  1803               	skipnc
  2460  0FC9  2FCF               	goto	l4686
  2461                           
  2462                           ;OverTemperature_B1.c: 22: Temp.ADH[0] = Temp.ADRES;
  2463  0FCA  084A               	movf	_Temp+9,w
  2464  0FCB  00DB               	movwf	??_getTemp_AD
  2465  0FCC  085B               	movf	??_getTemp_AD,w
  2466  0FCD  00C8               	movwf	_Temp+7
  2467                           
  2468                           ;OverTemperature_B1.c: 23: } else if (Temp.ADH[1] < Temp.ADRES) {
  2469  0FCE  0008               	return
  2470  0FCF                     l4686:	
  2471  0FCF  084A               	movf	_Temp+9,w
  2472  0FD0  0249               	subwf	_Temp+8,w
  2473  0FD1  1803               	skipnc
  2474  0FD2  0008               	return
  2475                           
  2476                           ;OverTemperature_B1.c: 24: Temp.ADH[1] = Temp.ADRES;
  2477  0FD3  084A               	movf	_Temp+9,w
  2478  0FD4  00DB               	movwf	??_getTemp_AD
  2479  0FD5  085B               	movf	??_getTemp_AD,w
  2480  0FD6  00C9               	movwf	_Temp+8
  2481  0FD7  0008               	return
  2482  0FD8                     __end_of_getTemp_AD:	
  2483                           
  2484                           	psect	text4
  2485  01D6                     __ptext4:	
  2486 ;; *************** function _getPIR_AD *****************
  2487 ;; Defined at:
  2488 ;;		line 300 in file "../src/PIR_B1.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  channel1        1    wreg     unsigned char 
  2491 ;;  channel2        1    9[BANK0 ] unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  channel1        1   14[BANK0 ] unsigned char 
  2494 ;;  i               1   15[BANK0 ] unsigned char 
  2495 ;;  j               1   13[BANK0 ] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2505 ;;      Params:         0       1       0       0
  2506 ;;      Locals:         0       3       0       0
  2507 ;;      Temps:          0       3       0       0
  2508 ;;      Totals:         0       7       0       0
  2509 ;;Total ram usage:        7 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    5
  2512 ;; This function calls:
  2513 ;;		___awdiv
  2514 ;;		___lwdiv
  2515 ;;		_getAD
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _getPIR_AD
  2523  01D6                     _getPIR_AD:	
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2527                           ;getPIR_AD@channel1 stored from wreg
  2528  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2529  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2530  01D8  00E7               	movwf	getPIR_AD@channel1
  2531                           
  2532                           ;PIR_B1.c: 301: char i = 0, j = 0;
  2533  01D9  01E8               	clrf	getPIR_AD@i
  2534  01DA  01E6               	clrf	getPIR_AD@j
  2535                           
  2536                           ;PIR_B1.c: 303: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2537  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2538  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2539  01DD  1CA0               	btfss	__PIR^(0+128),1
  2540  01DE  0008               	return
  2541  01DF  1920               	btfsc	__PIR^(0+128),2
  2542  01E0  0008               	return
  2543                           
  2544                           ;PIR_B1.c: 304: _PIR.GO = 1;
  2545  01E1  1520               	bsf	__PIR^(0+128),2
  2546                           
  2547                           ;PIR_B1.c: 305: _PIR.ADRES = getAD(channel1, 0x70);
  2548  01E2  3070               	movlw	112
  2549  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2550  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2551  01E5  00E3               	movwf	??_getPIR_AD
  2552  01E6  0863               	movf	??_getPIR_AD,w
  2553  01E7  00D9               	movwf	getAD@adcon1
  2554  01E8  0867               	movf	getPIR_AD@channel1,w
  2555  01E9  158A  272E  118A   	fcall	_getAD
  2556  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2557  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2558  01EE  00E4               	movwf	??_getPIR_AD+1
  2559  01EF  0864               	movf	??_getPIR_AD+1,w
  2560  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2561  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2562  01F2  00A2               	movwf	(__PIR^(0+128)+2)
  2563                           
  2564                           ;PIR_B1.c: 306: _PIR.VRAD = _PIR.ADRES / 25;
  2565  01F3  3019               	movlw	25
  2566  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2567  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2568  01F6  00D9               	movwf	___awdiv@divisor
  2569  01F7  3000               	movlw	0
  2570  01F8  00DA               	movwf	___awdiv@divisor+1
  2571  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2572  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2573  01FB  0822               	movf	(__PIR^(0+128)+2),w
  2574  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2575  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2576  01FE  00E3               	movwf	??_getPIR_AD
  2577  01FF  01E4               	clrf	??_getPIR_AD+1
  2578  0200  0863               	movf	??_getPIR_AD,w
  2579  0201  00DB               	movwf	___awdiv@dividend
  2580  0202  0864               	movf	??_getPIR_AD+1,w
  2581  0203  00DC               	movwf	___awdiv@dividend+1
  2582  0204  118A  262D  118A   	fcall	___awdiv
  2583  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0209  0859               	movf	?___awdiv,w
  2586  020A  00E5               	movwf	??_getPIR_AD+2
  2587  020B  0865               	movf	??_getPIR_AD+2,w
  2588  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2589  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2590  020E  00A3               	movwf	(__PIR^(0+128)+3)
  2591                           
  2592                           ;PIR_B1.c: 307: _PIR.VRAD1 = _PIR.ADRES;
  2593  020F  0822               	movf	(__PIR^(0+128)+2),w
  2594  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0212  00E3               	movwf	??_getPIR_AD
  2597  0213  0863               	movf	??_getPIR_AD,w
  2598  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0216  00A4               	movwf	(__PIR^(0+128)+4)
  2601                           
  2602                           ;PIR_B1.c: 308: _PIR.ADRES = getAD(channel2, 0x70);
  2603  0217  3070               	movlw	112
  2604  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2606  021A  00E3               	movwf	??_getPIR_AD
  2607  021B  0863               	movf	??_getPIR_AD,w
  2608  021C  00D9               	movwf	getAD@adcon1
  2609  021D  0862               	movf	getPIR_AD@channel2,w
  2610  021E  158A  272E  118A   	fcall	_getAD
  2611  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0223  00E4               	movwf	??_getPIR_AD+1
  2614  0224  0864               	movf	??_getPIR_AD+1,w
  2615  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2617  0227  00A2               	movwf	(__PIR^(0+128)+2)
  2618                           
  2619                           ;PIR_B1.c: 309: _PIR.SignalAD = _PIR.ADRES;
  2620  0228  0822               	movf	(__PIR^(0+128)+2),w
  2621  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2622  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2623  022B  00E3               	movwf	??_getPIR_AD
  2624  022C  0863               	movf	??_getPIR_AD,w
  2625  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2626  022E  1303               	bcf	3,6	;RP1=0, select bank1
  2627  022F  00A1               	movwf	(__PIR^(0+128)+1)
  2628                           
  2629                           ;PIR_B1.c: 311: if (_PIR.VRAD < 1) {
  2630  0230  08A3               	movf	(__PIR^(0+128)+3),f
  2631  0231  1D03               	skipz
  2632  0232  2A35               	goto	l4708
  2633                           
  2634                           ;PIR_B1.c: 312: _PIR.CloseTimeValue = 5;
  2635  0233  3005               	movlw	5
  2636  0234  2A3A               	goto	L1
  2637  0235                     l4708:	
  2638                           ;PIR_B1.c: 313: } else if (_PIR.VRAD < 3) {
  2639                           
  2640  0235  3003               	movlw	3
  2641  0236  0223               	subwf	(__PIR^(0+128)+3),w
  2642  0237  1803               	skipnc
  2643  0238  2A3D               	goto	l4712
  2644                           
  2645                           ;PIR_B1.c: 314: _PIR.CloseTimeValue = 60;
  2646  0239  303C               	movlw	60
  2647  023A                     L1:	
  2648  023A  00C7               	movwf	(__PIR^(0+128)+39)
  2649  023B  3000               	movlw	0
  2650  023C  2A58               	goto	L5
  2651  023D                     l4712:	
  2652                           ;PIR_B1.c: 315: } else if (_PIR.VRAD < 5) {
  2653                           
  2654  023D  3005               	movlw	5
  2655  023E  0223               	subwf	(__PIR^(0+128)+3),w
  2656  023F  1803               	skipnc
  2657  0240  2A45               	goto	l4716
  2658                           
  2659                           ;PIR_B1.c: 316: _PIR.CloseTimeValue = 300;
  2660  0241  302C               	movlw	44
  2661  0242  00C7               	movwf	(__PIR^(0+128)+39)
  2662  0243  3001               	movlw	1
  2663  0244  2A58               	goto	L5
  2664  0245                     l4716:	
  2665                           ;PIR_B1.c: 317: } else if (_PIR.VRAD < 7) {
  2666                           
  2667  0245  3007               	movlw	7
  2668  0246  0223               	subwf	(__PIR^(0+128)+3),w
  2669  0247  1803               	skipnc
  2670  0248  2A4D               	goto	l4720
  2671                           
  2672                           ;PIR_B1.c: 318: _PIR.CloseTimeValue = 600;
  2673  0249  3058               	movlw	88
  2674  024A  00C7               	movwf	(__PIR^(0+128)+39)
  2675  024B  3002               	movlw	2
  2676  024C  2A58               	goto	L5
  2677  024D                     l4720:	
  2678                           ;PIR_B1.c: 319: } else if (_PIR.VRAD < 9) {
  2679                           
  2680  024D  3009               	movlw	9
  2681  024E  0223               	subwf	(__PIR^(0+128)+3),w
  2682  024F  1803               	skipnc
  2683  0250  2A55               	goto	l4724
  2684                           
  2685                           ;PIR_B1.c: 320: _PIR.CloseTimeValue = 900;
  2686  0251  3084               	movlw	132
  2687  0252  00C7               	movwf	(__PIR^(0+128)+39)
  2688  0253  3003               	movlw	3
  2689  0254  2A58               	goto	L5
  2690  0255                     l4724:	
  2691                           ;PIR_B1.c: 321: } else {
  2692                           
  2693                           
  2694                           ;PIR_B1.c: 322: _PIR.CloseTimeValue = 1200;
  2695  0255  30B0               	movlw	176
  2696  0256  00C7               	movwf	(__PIR^(0+128)+39)
  2697  0257  3004               	movlw	4
  2698  0258                     L5:	
  2699  0258  00C8               	movwf	(__PIR^(0+128)+40)
  2700                           
  2701                           ;PIR_B1.c: 323: }
  2702                           ;PIR_B1.c: 332: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2703  0259  0821               	movf	(__PIR^(0+128)+1),w
  2704  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2705  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2706  025C  00E3               	movwf	??_getPIR_AD
  2707  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2708  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2709  025F  0827               	movf	(__PIR^(0+128)+7),w
  2710  0260  3EA8               	addlw	(__PIR+8)& (0+255)
  2711  0261  0084               	movwf	4
  2712  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0264  0863               	movf	??_getPIR_AD,w
  2715  0265  1383               	bcf	3,7	;select IRP bank1
  2716  0266  0080               	movwf	0
  2717                           
  2718                           ;PIR_B1.c: 333: for (i = 0; i < 10; i++) {
  2719  0267  01E8               	clrf	getPIR_AD@i
  2720  0268  300A               	movlw	10
  2721  0269  0268               	subwf	getPIR_AD@i,w
  2722  026A  1803               	btfsc	3,0
  2723  026B  2A88               	goto	l4740
  2724  026C                     l4734:	
  2725                           
  2726                           ;PIR_B1.c: 334: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2727  026C  0868               	movf	getPIR_AD@i,w
  2728  026D  3EA8               	addlw	(__PIR+8)& (0+255)
  2729  026E  0084               	movwf	4
  2730  026F  0800               	movf	0,w
  2731  0270  00E3               	movwf	??_getPIR_AD
  2732  0271  01E4               	clrf	??_getPIR_AD+1
  2733  0272  0863               	movf	??_getPIR_AD,w
  2734  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2736  0275  07B2               	addwf	(__PIR^(0+128)+18),f
  2737  0276  1803               	skipnc
  2738  0277  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2739  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2741  027A  0864               	movf	??_getPIR_AD+1,w
  2742  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2743  027C  1303               	bcf	3,6	;RP1=0, select bank1
  2744  027D  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2745  027E  3001               	movlw	1
  2746  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0281  00E3               	movwf	??_getPIR_AD
  2749  0282  0863               	movf	??_getPIR_AD,w
  2750  0283  07E8               	addwf	getPIR_AD@i,f
  2751  0284  300A               	movlw	10
  2752  0285  0268               	subwf	getPIR_AD@i,w
  2753  0286  1C03               	skipc
  2754  0287  2A6C               	goto	l4734
  2755  0288                     l4740:	
  2756                           
  2757                           ;PIR_B1.c: 335: }
  2758                           ;PIR_B1.c: 336: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2759  0288  300A               	movlw	10
  2760  0289  00D9               	movwf	___lwdiv@divisor
  2761  028A  3000               	movlw	0
  2762  028B  00DA               	movwf	___lwdiv@divisor+1
  2763  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2764  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2765  028E  0833               	movf	((__PIR+1)^(0+128)+18),w
  2766  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0291  01DC               	clrf	___lwdiv@dividend+1
  2769  0292  07DC               	addwf	___lwdiv@dividend+1,f
  2770  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2771  0294  1303               	bcf	3,6	;RP1=0, select bank1
  2772  0295  0832               	movf	(__PIR^(0+128)+18),w
  2773  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0298  01DB               	clrf	___lwdiv@dividend
  2776  0299  07DB               	addwf	___lwdiv@dividend,f
  2777  029A  118A  272F  118A   	fcall	___lwdiv
  2778  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2779  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2780  029F  0859               	movf	?___lwdiv,w
  2781  02A0  00E3               	movwf	??_getPIR_AD
  2782  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2783  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2784  02A3  0834               	movf	(__PIR^(0+128)+20),w
  2785  02A4  3EB5               	addlw	(__PIR+21)& (0+255)
  2786  02A5  0084               	movwf	4
  2787  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2788  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2789  02A8  0863               	movf	??_getPIR_AD,w
  2790  02A9  1383               	bcf	3,7	;select IRP bank1
  2791  02AA  0080               	movwf	0
  2792                           
  2793                           ;PIR_B1.c: 337: _PIR.TenAverageValue = 0;
  2794  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2795  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2796  02AD  01B2               	clrf	(__PIR^(0+128)+18)
  2797  02AE  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2798                           
  2799                           ;PIR_B1.c: 339: for (i = 0; i <= 9; i++) {
  2800  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2801  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2802  02B1  01E8               	clrf	getPIR_AD@i
  2803  02B2  300A               	movlw	10
  2804  02B3  0268               	subwf	getPIR_AD@i,w
  2805  02B4  1803               	btfsc	3,0
  2806  02B5  2AD2               	goto	l4756
  2807  02B6                     l4750:	
  2808                           
  2809                           ;PIR_B1.c: 340: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2810  02B6  0868               	movf	getPIR_AD@i,w
  2811  02B7  3EB5               	addlw	(__PIR+21)& (0+255)
  2812  02B8  0084               	movwf	4
  2813  02B9  0800               	movf	0,w
  2814  02BA  00E3               	movwf	??_getPIR_AD
  2815  02BB  01E4               	clrf	??_getPIR_AD+1
  2816  02BC  0863               	movf	??_getPIR_AD,w
  2817  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2818  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2819  02BF  07BF               	addwf	(__PIR^(0+128)+31),f
  2820  02C0  1803               	skipnc
  2821  02C1  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2822  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2823  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2824  02C4  0864               	movf	??_getPIR_AD+1,w
  2825  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2826  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2827  02C7  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2828  02C8  3001               	movlw	1
  2829  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2830  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2831  02CB  00E3               	movwf	??_getPIR_AD
  2832  02CC  0863               	movf	??_getPIR_AD,w
  2833  02CD  07E8               	addwf	getPIR_AD@i,f
  2834  02CE  300A               	movlw	10
  2835  02CF  0268               	subwf	getPIR_AD@i,w
  2836  02D0  1C03               	skipc
  2837  02D1  2AB6               	goto	l4750
  2838  02D2                     l4756:	
  2839                           
  2840                           ;PIR_B1.c: 341: }
  2841                           ;PIR_B1.c: 342: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2842  02D2  300A               	movlw	10
  2843  02D3  00D9               	movwf	___lwdiv@divisor
  2844  02D4  3000               	movlw	0
  2845  02D5  00DA               	movwf	___lwdiv@divisor+1
  2846  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  2847  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  2848  02D8  0840               	movf	((__PIR+1)^(0+128)+31),w
  2849  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2850  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2851  02DB  01DC               	clrf	___lwdiv@dividend+1
  2852  02DC  07DC               	addwf	___lwdiv@dividend+1,f
  2853  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2854  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  2855  02DF  083F               	movf	(__PIR^(0+128)+31),w
  2856  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2857  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2858  02E2  01DB               	clrf	___lwdiv@dividend
  2859  02E3  07DB               	addwf	___lwdiv@dividend,f
  2860  02E4  118A  272F  118A   	fcall	___lwdiv
  2861  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2862  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2863  02E9  0859               	movf	?___lwdiv,w
  2864  02EA  00E3               	movwf	??_getPIR_AD
  2865  02EB  0863               	movf	??_getPIR_AD,w
  2866  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2867  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2868  02EE  00A6               	movwf	(__PIR^(0+128)+6)
  2869                           
  2870                           ;PIR_B1.c: 343: _PIR.HundredAverageValue = 0;
  2871  02EF  01BF               	clrf	(__PIR^(0+128)+31)
  2872  02F0  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2873                           
  2874                           ;PIR_B1.c: 345: if (_PIR.TenCount < 10) {
  2875  02F1  300A               	movlw	10
  2876  02F2  0227               	subwf	(__PIR^(0+128)+7),w
  2877  02F3  1803               	skipnc
  2878  02F4  2AFE               	goto	l4764
  2879                           
  2880                           ;PIR_B1.c: 346: _PIR.TenCount++;
  2881  02F5  3001               	movlw	1
  2882  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2883  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2884  02F8  00E3               	movwf	??_getPIR_AD
  2885  02F9  0863               	movf	??_getPIR_AD,w
  2886  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2887  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2888  02FC  07A7               	addwf	(__PIR^(0+128)+7),f
  2889                           
  2890                           ;PIR_B1.c: 347: } else {
  2891  02FD  0008               	return
  2892  02FE                     l4764:	
  2893                           
  2894                           ;PIR_B1.c: 348: _PIR.TenCount = 0;
  2895  02FE  01A7               	clrf	(__PIR^(0+128)+7)
  2896                           
  2897                           ;PIR_B1.c: 349: if (_PIR.HundreCount < 10)
  2898  02FF  300A               	movlw	10
  2899  0300  0234               	subwf	(__PIR^(0+128)+20),w
  2900  0301  1803               	skipnc
  2901  0302  2B0C               	goto	l4770
  2902                           
  2903                           ;PIR_B1.c: 350: _PIR.HundreCount++;
  2904  0303  3001               	movlw	1
  2905  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0306  00E3               	movwf	??_getPIR_AD
  2908  0307  0863               	movf	??_getPIR_AD,w
  2909  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0309  1303               	bcf	3,6	;RP1=0, select bank1
  2911  030A  07B4               	addwf	(__PIR^(0+128)+20),f
  2912  030B  0008               	return
  2913  030C                     l4770:	
  2914                           
  2915                           ;PIR_B1.c: 351: else
  2916                           ;PIR_B1.c: 352: _PIR.HundreCount = 0;
  2917  030C  01B4               	clrf	(__PIR^(0+128)+20)
  2918  030D  0008               	return
  2919  030E                     __end_of_getPIR_AD:	
  2920                           
  2921                           	psect	text5
  2922  072F                     __ptext5:	
  2923 ;; *************** function ___lwdiv *****************
  2924 ;; Defined at:
  2925 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  divisor         2    0[BANK0 ] unsigned int 
  2928 ;;  dividend        2    2[BANK0 ] unsigned int 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  quotient        2    6[BANK0 ] unsigned int 
  2931 ;;  counter         1    5[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2    0[BANK0 ] unsigned int 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2941 ;;      Params:         0       4       0       0
  2942 ;;      Locals:         0       3       0       0
  2943 ;;      Temps:          0       1       0       0
  2944 ;;      Totals:         0       8       0       0
  2945 ;;Total ram usage:        8 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    3
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_getPIR_AD
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function ___lwdiv
  2957  072F                     ___lwdiv:	
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2961  072F  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0730  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0731  01DF               	clrf	___lwdiv@quotient
  2964  0732  01E0               	clrf	___lwdiv@quotient+1
  2965  0733  085A               	movf	___lwdiv@divisor+1,w
  2966  0734  0459               	iorwf	___lwdiv@divisor,w
  2967  0735  1903               	skipnz
  2968  0736  2F68               	goto	l4612
  2969  0737  01DE               	clrf	___lwdiv@counter
  2970  0738  0ADE               	incf	___lwdiv@counter,f
  2971  0739                     l4600:	
  2972  0739  1BDA               	btfsc	___lwdiv@divisor+1,7
  2973  073A  2F47               	goto	l4602
  2974  073B  3001               	movlw	1
  2975  073C                     u5375:	
  2976  073C  1003               	clrc
  2977  073D  0DD9               	rlf	___lwdiv@divisor,f
  2978  073E  0DDA               	rlf	___lwdiv@divisor+1,f
  2979  073F  3EFF               	addlw	-1
  2980  0740  1D03               	skipz
  2981  0741  2F3C               	goto	u5375
  2982  0742  3001               	movlw	1
  2983  0743  00DD               	movwf	??___lwdiv
  2984  0744  085D               	movf	??___lwdiv,w
  2985  0745  07DE               	addwf	___lwdiv@counter,f
  2986  0746  2F39               	goto	l4600
  2987  0747                     l4602:	
  2988  0747  3001               	movlw	1
  2989  0748                     u5395:	
  2990  0748  1003               	clrc
  2991  0749  0DDF               	rlf	___lwdiv@quotient,f
  2992  074A  0DE0               	rlf	___lwdiv@quotient+1,f
  2993  074B  3EFF               	addlw	-1
  2994  074C  1D03               	skipz
  2995  074D  2F48               	goto	u5395
  2996  074E  085A               	movf	___lwdiv@divisor+1,w
  2997  074F  025C               	subwf	___lwdiv@dividend+1,w
  2998  0750  1D03               	skipz
  2999  0751  2F54               	goto	u5405
  3000  0752  0859               	movf	___lwdiv@divisor,w
  3001  0753  025B               	subwf	___lwdiv@dividend,w
  3002  0754                     u5405:	
  3003  0754  1C03               	skipc
  3004  0755  2F5D               	goto	l4608
  3005  0756  0859               	movf	___lwdiv@divisor,w
  3006  0757  02DB               	subwf	___lwdiv@dividend,f
  3007  0758  085A               	movf	___lwdiv@divisor+1,w
  3008  0759  1C03               	skipc
  3009  075A  03DC               	decf	___lwdiv@dividend+1,f
  3010  075B  02DC               	subwf	___lwdiv@dividend+1,f
  3011  075C  145F               	bsf	___lwdiv@quotient,0
  3012  075D                     l4608:	
  3013  075D  3001               	movlw	1
  3014  075E                     u5415:	
  3015  075E  1003               	clrc
  3016  075F  0CDA               	rrf	___lwdiv@divisor+1,f
  3017  0760  0CD9               	rrf	___lwdiv@divisor,f
  3018  0761  3EFF               	addlw	-1
  3019  0762  1D03               	skipz
  3020  0763  2F5E               	goto	u5415
  3021  0764  3001               	movlw	1
  3022  0765  02DE               	subwf	___lwdiv@counter,f
  3023  0766  1D03               	btfss	3,2
  3024  0767  2F47               	goto	l4602
  3025  0768                     l4612:	
  3026  0768  0860               	movf	___lwdiv@quotient+1,w
  3027  0769  01DA               	clrf	?___lwdiv+1
  3028  076A  07DA               	addwf	?___lwdiv+1,f
  3029  076B  085F               	movf	___lwdiv@quotient,w
  3030  076C  01D9               	clrf	?___lwdiv
  3031  076D  07D9               	addwf	?___lwdiv,f
  3032  076E  0008               	return
  3033  076F                     __end_of___lwdiv:	
  3034                           
  3035                           	psect	text6
  3036  07D0                     __ptext6:	
  3037 ;; *************** function _getCDS_AD *****************
  3038 ;; Defined at:
  3039 ;;		line 48 in file "../src/CDS_B1.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  channel1        1    wreg     unsigned char 
  3042 ;;  channel2        1    2[BANK0 ] unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  channel1        1    7[BANK0 ] unsigned char 
  3045 ;;  j               1    6[BANK0 ] unsigned char 
  3046 ;;  i               1    5[BANK0 ] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;		None               void
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3056 ;;      Params:         0       1       0       0
  3057 ;;      Locals:         0       3       0       0
  3058 ;;      Temps:          0       2       0       0
  3059 ;;      Totals:         0       6       0       0
  3060 ;;Total ram usage:        6 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    5
  3063 ;; This function calls:
  3064 ;;		_getAD
  3065 ;; This function is called by:
  3066 ;;		_main
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _getCDS_AD
  3072  07D0                     _getCDS_AD:	
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3076                           ;getCDS_AD@channel1 stored from wreg
  3077  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  3078  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  3079  07D2  00E0               	movwf	getCDS_AD@channel1
  3080                           
  3081                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3082  07D3  01DE               	clrf	getCDS_AD@i
  3083  07D4  01DF               	clrf	getCDS_AD@j
  3084                           
  3085                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3086  07D5  1DB2               	btfss	__CDS,3
  3087  07D6  0008               	return
  3088                           
  3089                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3090  07D7  14B2               	bsf	__CDS,1
  3091                           
  3092                           ;CDS_B1.c: 52: _CDS.ADRES = getAD(channel1, 0x70);
  3093  07D8  3070               	movlw	112
  3094  07D9  00DC               	movwf	??_getCDS_AD
  3095  07DA  085C               	movf	??_getCDS_AD,w
  3096  07DB  00D9               	movwf	getAD@adcon1
  3097  07DC  0860               	movf	getCDS_AD@channel1,w
  3098  07DD  158A  272E  118A   	fcall	_getAD
  3099  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3100  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3101  07E2  00DD               	movwf	??_getCDS_AD+1
  3102  07E3  085D               	movf	??_getCDS_AD+1,w
  3103  07E4  00B6               	movwf	__CDS+4
  3104                           
  3105                           ;CDS_B1.c: 53: _CDS.VRAD = _CDS.ADRES;
  3106  07E5  0836               	movf	__CDS+4,w
  3107  07E6  00DC               	movwf	??_getCDS_AD
  3108  07E7  085C               	movf	??_getCDS_AD,w
  3109  07E8  00B4               	movwf	__CDS+2
  3110                           
  3111                           ;CDS_B1.c: 54: _CDS.ADRES = getAD(channel2, 0x70);
  3112  07E9  3070               	movlw	112
  3113  07EA  00DC               	movwf	??_getCDS_AD
  3114  07EB  085C               	movf	??_getCDS_AD,w
  3115  07EC  00D9               	movwf	getAD@adcon1
  3116  07ED  085B               	movf	getCDS_AD@channel2,w
  3117  07EE  158A  272E         	fcall	_getAD
  3118  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3119  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3120  07F2  00DD               	movwf	??_getCDS_AD+1
  3121  07F3  085D               	movf	??_getCDS_AD+1,w
  3122  07F4  00B6               	movwf	__CDS+4
  3123                           
  3124                           ;CDS_B1.c: 55: _CDS.SignalAD = _CDS.ADRES;
  3125  07F5  0836               	movf	__CDS+4,w
  3126  07F6  00DC               	movwf	??_getCDS_AD
  3127  07F7  085C               	movf	??_getCDS_AD,w
  3128  07F8  00B5               	movwf	__CDS+3
  3129  07F9  0008               	return
  3130  07FA                     __end_of_getCDS_AD:	
  3131                           
  3132                           	psect	text7
  3133  0F2E                     __ptext7:	
  3134 ;; *************** function _getAD *****************
  3135 ;; Defined at:
  3136 ;;		line 432 in file "../src/MCU_B1.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  adcon0          1    wreg     unsigned char 
  3139 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      unsigned char 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3151 ;;      Params:         0       1       0       0
  3152 ;;      Locals:         0       1       0       0
  3153 ;;      Temps:          0       0       0       0
  3154 ;;      Totals:         0       2       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    4
  3158 ;; This function calls:
  3159 ;;		_Timeout_Counter
  3160 ;;		_set_TimeoutCleared
  3161 ;; This function is called by:
  3162 ;;		_getCDS_AD
  3163 ;;		_getTemp_AD
  3164 ;;		_getPIR_AD
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _getAD
  3170  0F2E                     _getAD:	
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3174                           ;getAD@adcon0 stored from wreg
  3175  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0F30  00DA               	movwf	getAD@adcon0
  3178                           
  3179                           ;MCU_B1.c: 433: ADCON0 = adcon0;
  3180  0F31  085A               	movf	getAD@adcon0,w
  3181  0F32  009F               	movwf	31	;volatile
  3182                           
  3183                           ;MCU_B1.c: 434: ADCON1 = adcon1;
  3184  0F33  0859               	movf	getAD@adcon1,w
  3185  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0F36  009F               	movwf	31	;volatile
  3188                           
  3189                           ;MCU_B1.c: 435: GO_nDONE = 1;
  3190  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0F39  149F               	bsf	31,1	;volatile
  3193                           
  3194                           ;MCU_B1.c: 436: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3195  0F3A  2F3E               	goto	l4360
  3196  0F3B                     l4358:	
  3197                           
  3198                           ;MCU_B1.c: 437: Timeout_Counter();
  3199  0F3B  158A  2658  158A   	fcall	_Timeout_Counter
  3200  0F3E                     l4360:	
  3201  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0F40  1C9F               	btfss	31,1	;volatile
  3204  0F41  2F44               	goto	l4364
  3205  0F42  1D2A               	btfss	_myMain+3,2
  3206  0F43  2F3B               	goto	l4358
  3207  0F44                     l4364:	
  3208                           
  3209                           ;MCU_B1.c: 438: };
  3210                           ;MCU_B1.c: 439: set_TimeoutCleared();
  3211  0F44  118A  27FA         	fcall	_set_TimeoutCleared
  3212                           
  3213                           ;MCU_B1.c: 440: return ADRES;
  3214  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3215  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3216  0F48  081E               	movf	30,w	;volatile
  3217  0F49  0008               	return
  3218  0F4A                     __end_of_getAD:	
  3219                           
  3220                           	psect	text8
  3221  07FA                     __ptext8:	
  3222 ;; *************** function _set_TimeoutCleared *****************
  3223 ;; Defined at:
  3224 ;;		line 281 in file "../src/Main_B1.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;		None               void
  3231 ;; Registers used:
  3232 ;;		status,2
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3238 ;;      Params:         0       0       0       0
  3239 ;;      Locals:         0       0       0       0
  3240 ;;      Temps:          0       0       0       0
  3241 ;;      Totals:         0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    3
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_getAD
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           
  3253                           ;psect for function _set_TimeoutCleared
  3254  07FA                     _set_TimeoutCleared:	
  3255                           
  3256                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _set_TimeoutCleared: [status,2]
  3260  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  3261  07FB  1303               	bcf	3,6	;RP1=0, select bank0
  3262  07FC  112A               	bcf	_myMain+3,2
  3263                           
  3264                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3265  07FD  01AB               	clrf	_myMain+4
  3266  07FE  01AC               	clrf	_myMain+5
  3267  07FF  0008               	return
  3268  0800                     __end_of_set_TimeoutCleared:	
  3269                           
  3270                           	psect	text9
  3271  0E58                     __ptext9:	
  3272 ;; *************** function _Timeout_Counter *****************
  3273 ;; Defined at:
  3274 ;;		line 272 in file "../src/Main_B1.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, status,2
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3288 ;;      Params:         0       0       0       0
  3289 ;;      Locals:         0       0       0       0
  3290 ;;      Temps:          0       0       0       0
  3291 ;;      Totals:         0       0       0       0
  3292 ;;Total ram usage:        0 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    3
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_getAD
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _Timeout_Counter
  3304  0E58                     _Timeout_Counter:	
  3305                           
  3306                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3307                           
  3308                           ;incstack = 0
  3309                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3310  0E58  3001               	movlw	1
  3311  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0E5B  07AB               	addwf	_myMain+4,f
  3314  0E5C  1803               	skipnc
  3315  0E5D  0AAC               	incf	_myMain+5,f
  3316  0E5E  3000               	movlw	0
  3317  0E5F  07AC               	addwf	_myMain+5,f
  3318                           
  3319                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3320  0E60  3061               	movlw	97
  3321  0E61  062C               	xorwf	_myMain+5,w
  3322  0E62  1D03               	skipz
  3323  0E63  2E66               	goto	u4765
  3324  0E64  30A8               	movlw	168
  3325  0E65  062B               	xorwf	_myMain+4,w
  3326  0E66                     u4765:	
  3327  0E66  1D03               	skipz
  3328  0E67  0008               	return
  3329                           
  3330                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3331  0E68  01AB               	clrf	_myMain+4
  3332  0E69  01AC               	clrf	_myMain+5
  3333                           
  3334                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3335  0E6A  152A               	bsf	_myMain+3,2
  3336  0E6B  0008               	return
  3337  0E6C                     __end_of_Timeout_Counter:	
  3338                           
  3339                           	psect	text10
  3340  0E0E                     __ptext10:	
  3341 ;; *************** function _WDT_Main *****************
  3342 ;; Defined at:
  3343 ;;		line 1103 in file "../src/MCU_B1.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;		None               void
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3357 ;;      Params:         0       0       0       0
  3358 ;;      Locals:         0       0       0       0
  3359 ;;      Temps:          0       1       0       0
  3360 ;;      Totals:         0       1       0       0
  3361 ;;Total ram usage:        1 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    4
  3364 ;; This function calls:
  3365 ;;		_WDT_Clearing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _WDT_Main
  3373  0E0E                     _WDT_Main:	
  3374                           
  3375                           ;MCU_B1.c: 1104: if (WDT.Enable == 1) {
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3379  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0E10  1C3E               	btfss	_WDT,0
  3382  0E11  0008               	return
  3383                           
  3384                           ;MCU_B1.c: 1105: if (WDT.Timer-- > 0) {
  3385  0E12  3001               	movlw	1
  3386  0E13  02BF               	subwf	_WDT+1,f
  3387  0E14  083F               	movf	_WDT+1,w
  3388  0E15  3AFF               	xorlw	255
  3389  0E16  1903               	skipnz
  3390  0E17  0008               	return
  3391                           
  3392                           ;MCU_B1.c: 1106: WDT.Timer = 100;
  3393  0E18  3064               	movlw	100
  3394  0E19  00D9               	movwf	??_WDT_Main
  3395  0E1A  0859               	movf	??_WDT_Main,w
  3396  0E1B  00BF               	movwf	_WDT+1
  3397                           
  3398                           ;MCU_B1.c: 1107: WDT_Clearing();
  3399  0E1C  118A  2002         	fcall	_WDT_Clearing
  3400  0E1E  0008               	return
  3401  0E1F                     __end_of_WDT_Main:	
  3402                           
  3403                           	psect	text11
  3404  0002                     __ptext11:	
  3405 ;; *************** function _WDT_Clearing *****************
  3406 ;; Defined at:
  3407 ;;		line 1113 in file "../src/MCU_B1.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;		None               void
  3414 ;; Registers used:
  3415 ;;		None
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3421 ;;      Params:         0       0       0       0
  3422 ;;      Locals:         0       0       0       0
  3423 ;;      Temps:          0       0       0       0
  3424 ;;      Totals:         0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    3
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_WDT_Main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           
  3436                           ;psect for function _WDT_Clearing
  3437  0002                     _WDT_Clearing:	
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _WDT_Clearing: []
  3441  0002  0064               	clrwdt	;# 
  3442  0003  0008               	return
  3443  0004                     __end_of_WDT_Clearing:	
  3444                           
  3445                           	psect	text12
  3446  0D15                     __ptext12:	
  3447 ;; *************** function _Temp_Main *****************
  3448 ;; Defined at:
  3449 ;;		line 49 in file "../src/OverTemperature_B1.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0, pclath, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3463 ;;      Params:         0       0       0       0
  3464 ;;      Locals:         0       0       0       0
  3465 ;;      Temps:          0       0       0       0
  3466 ;;      Totals:         0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    5
  3470 ;; This function calls:
  3471 ;;		_setTemp_Main
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _Temp_Main
  3479  0D15                     _Temp_Main:	
  3480                           
  3481                           ;OverTemperature_B1.c: 51: setTemp_Main();
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3485  0D15  118A  2465         	fcall	_setTemp_Main
  3486  0D17  0008               	return
  3487  0D18                     __end_of_Temp_Main:	
  3488                           
  3489                           	psect	text13
  3490  0465                     __ptext13:	
  3491 ;; *************** function _setTemp_Main *****************
  3492 ;; Defined at:
  3493 ;;		line 56 in file "../src/OverTemperature_B1.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  error           1   10[BANK0 ] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;		None               void
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0, pclath, cstack
  3502 ;; Tracked objects:
  3503 ;;		On entry : 0/0
  3504 ;;		On exit  : 0/0
  3505 ;;		Unchanged: 0/0
  3506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3507 ;;      Params:         0       0       0       0
  3508 ;;      Locals:         0       1       0       0
  3509 ;;      Temps:          0       1       0       0
  3510 ;;      Totals:         0       2       0       0
  3511 ;;Total ram usage:        2 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    4
  3514 ;; This function calls:
  3515 ;;		___awdiv
  3516 ;;		_getMain_All_Error_Status
  3517 ;;		_getMain_All_LightsStatus
  3518 ;; This function is called by:
  3519 ;;		_Temp_Main
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _setTemp_Main
  3525  0465                     _setTemp_Main:	
  3526                           
  3527                           ;OverTemperature_B1.c: 57: char error = getMain_All_Error_Status(0);
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3531  0465  3000               	movlw	0
  3532  0466  158A  26DE  118A   	fcall	_getMain_All_Error_Status
  3533  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3534  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3535  046B  00E2               	movwf	??_setTemp_Main
  3536  046C  0862               	movf	??_setTemp_Main,w
  3537  046D  00E3               	movwf	setTemp_Main@error
  3538                           
  3539                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3540  046E  1C41               	btfss	_Temp,0
  3541  046F  2CE7               	goto	l963
  3542                           
  3543                           ;OverTemperature_B1.c: 65: if (Temp.ADtoGO == 0) {
  3544  0470  1941               	btfsc	_Temp,2
  3545  0471  2C83               	goto	l4544
  3546                           
  3547                           ;OverTemperature_B1.c: 66: Temp.Time++;
  3548  0472  3001               	movlw	1
  3549  0473  07C2               	addwf	_Temp+1,f
  3550  0474  1803               	skipnc
  3551  0475  0AC3               	incf	_Temp+2,f
  3552  0476  3000               	movlw	0
  3553  0477  07C3               	addwf	_Temp+2,f
  3554                           
  3555                           ;OverTemperature_B1.c: 67: if (Temp.Time >= (5000 / 20)) {
  3556  0478  3000               	movlw	0
  3557  0479  0243               	subwf	_Temp+2,w
  3558  047A  30FA               	movlw	250
  3559  047B  1903               	skipnz
  3560  047C  0242               	subwf	_Temp+1,w
  3561  047D  1C03               	skipc
  3562  047E  0008               	return
  3563                           
  3564                           ;OverTemperature_B1.c: 68: Temp.Time = 0;
  3565  047F  01C2               	clrf	_Temp+1
  3566  0480  01C3               	clrf	_Temp+2
  3567                           
  3568                           ;OverTemperature_B1.c: 69: Temp.ADtoGO = 1;
  3569  0481  1541               	bsf	_Temp,2
  3570                           
  3571                           ;OverTemperature_B1.c: 70: }
  3572                           ;OverTemperature_B1.c: 71: } else {
  3573  0482  0008               	return
  3574  0483                     l4544:	
  3575                           
  3576                           ;OverTemperature_B1.c: 72: Temp.Time++;
  3577  0483  3001               	movlw	1
  3578  0484  07C2               	addwf	_Temp+1,f
  3579  0485  1803               	skipnc
  3580  0486  0AC3               	incf	_Temp+2,f
  3581  0487  3000               	movlw	0
  3582  0488  07C3               	addwf	_Temp+2,f
  3583                           
  3584                           ;OverTemperature_B1.c: 73: if (Temp.Time >= (40 / 20)) {
  3585  0489  3000               	movlw	0
  3586  048A  0243               	subwf	_Temp+2,w
  3587  048B  3002               	movlw	2
  3588  048C  1903               	skipnz
  3589  048D  0242               	subwf	_Temp+1,w
  3590  048E  1C03               	skipc
  3591  048F  0008               	return
  3592                           
  3593                           ;OverTemperature_B1.c: 74: Temp.Time = 0;
  3594  0490  01C2               	clrf	_Temp+1
  3595  0491  01C3               	clrf	_Temp+2
  3596                           
  3597                           ;OverTemperature_B1.c: 76: if (Temp.ADH[0] > 0 && Temp.ADH[1] > 0) {
  3598  0492  0848               	movf	_Temp+7,w
  3599  0493  1903               	btfsc	3,2
  3600  0494  2CE4               	goto	l968
  3601  0495  0849               	movf	_Temp+8,w
  3602  0496  1903               	btfsc	3,2
  3603  0497  2CE4               	goto	l968
  3604                           
  3605                           ;OverTemperature_B1.c: 77: Temp.ADtoGO = 0;
  3606  0498  1141               	bcf	_Temp,2
  3607                           
  3608                           ;OverTemperature_B1.c: 78: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3609  0499  3002               	movlw	2
  3610  049A  00D9               	movwf	___awdiv@divisor
  3611  049B  3000               	movlw	0
  3612  049C  00DA               	movwf	___awdiv@divisor+1
  3613  049D  0848               	movf	_Temp+7,w
  3614  049E  0749               	addwf	_Temp+8,w
  3615  049F  00DB               	movwf	___awdiv@dividend
  3616  04A0  01DC               	clrf	___awdiv@dividend+1
  3617  04A1  0DDC               	rlf	___awdiv@dividend+1,f
  3618  04A2  118A  262D  118A   	fcall	___awdiv
  3619  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3620  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3621  04A7  0859               	movf	?___awdiv,w
  3622  04A8  00E2               	movwf	??_setTemp_Main
  3623  04A9  0862               	movf	??_setTemp_Main,w
  3624  04AA  00C7               	movwf	_Temp+6
  3625                           
  3626                           ;OverTemperature_B1.c: 81: if (getMain_All_LightsStatus() == 1) {
  3627  04AB  158A  257B  118A   	fcall	_getMain_All_LightsStatus
  3628  04AE  3A01               	xorlw	1
  3629  04AF  1D03               	skipz
  3630  04B0  2CB9               	goto	l4560
  3631                           
  3632                           ;OverTemperature_B1.c: 82: Temp.SafeValue = 0x85;
  3633  04B1  3085               	movlw	133
  3634  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3635  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3636  04B4  00E2               	movwf	??_setTemp_Main
  3637  04B5  0862               	movf	??_setTemp_Main,w
  3638  04B6  00CB               	movwf	_Temp+10
  3639                           
  3640                           ;OverTemperature_B1.c: 83: Temp.DangerValue = 0x70;
  3641  04B7  3070               	movlw	112
  3642  04B8  2CC0               	goto	L6
  3643  04B9                     l4560:	
  3644                           ;OverTemperature_B1.c: 84: } else {
  3645                           
  3646                           
  3647                           ;OverTemperature_B1.c: 85: Temp.SafeValue = 0x4f;
  3648  04B9  304F               	movlw	79
  3649  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  3650  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  3651  04BC  00E2               	movwf	??_setTemp_Main
  3652  04BD  0862               	movf	??_setTemp_Main,w
  3653  04BE  00CB               	movwf	_Temp+10
  3654                           
  3655                           ;OverTemperature_B1.c: 86: Temp.DangerValue = 0x40;
  3656  04BF  3040               	movlw	64
  3657  04C0                     L6:	
  3658  04C0  00E2               	movwf	??_setTemp_Main
  3659  04C1  0862               	movf	??_setTemp_Main,w
  3660  04C2  00CC               	movwf	_Temp+11
  3661                           
  3662                           ;OverTemperature_B1.c: 87: }
  3663                           ;OverTemperature_B1.c: 96: if (Temp.ERROR == 1) {
  3664  04C3  1CC1               	btfss	_Temp,1
  3665  04C4  2CD4               	goto	l4576
  3666                           
  3667                           ;OverTemperature_B1.c: 97: if (Temp.AD >= Temp.SafeValue) {
  3668  04C5  084B               	movf	_Temp+10,w
  3669  04C6  0247               	subwf	_Temp+6,w
  3670  04C7  1C03               	skipc
  3671  04C8  2CE3               	goto	l4586
  3672                           
  3673                           ;OverTemperature_B1.c: 98: Temp.Count++;
  3674  04C9  3001               	movlw	1
  3675  04CA  00E2               	movwf	??_setTemp_Main
  3676  04CB  0862               	movf	??_setTemp_Main,w
  3677  04CC  07C4               	addwf	_Temp+3,f
  3678                           
  3679                           ;OverTemperature_B1.c: 99: if (Temp.Count >= 3) {
  3680  04CD  3003               	movlw	3
  3681  04CE  0244               	subwf	_Temp+3,w
  3682  04CF  1C03               	skipc
  3683  04D0  2CE4               	goto	l968
  3684                           
  3685                           ;OverTemperature_B1.c: 100: Temp.Count = 0;
  3686  04D1  01C4               	clrf	_Temp+3
  3687                           
  3688                           ;OverTemperature_B1.c: 101: Temp.ERROR = 0;
  3689  04D2  10C1               	bcf	_Temp,1
  3690                           
  3691                           ;OverTemperature_B1.c: 103: }
  3692                           ;OverTemperature_B1.c: 104: } else {
  3693                           
  3694                           ;OverTemperature_B1.c: 102: ;;
  3695  04D3  2CE4               	goto	l968
  3696  04D4                     l4576:	
  3697                           ;OverTemperature_B1.c: 106: }
  3698                           ;OverTemperature_B1.c: 107: } else {
  3699                           
  3700                           ;OverTemperature_B1.c: 105: Temp.Count = 0;
  3701                           
  3702                           
  3703                           ;OverTemperature_B1.c: 108: if (Temp.AD <= Temp.DangerValue) {
  3704  04D4  0847               	movf	_Temp+6,w
  3705  04D5  024C               	subwf	_Temp+11,w
  3706  04D6  1C03               	skipc
  3707  04D7  2CE3               	goto	l4586
  3708                           
  3709                           ;OverTemperature_B1.c: 109: Temp.Count++;
  3710  04D8  3001               	movlw	1
  3711  04D9  00E2               	movwf	??_setTemp_Main
  3712  04DA  0862               	movf	??_setTemp_Main,w
  3713  04DB  07C4               	addwf	_Temp+3,f
  3714                           
  3715                           ;OverTemperature_B1.c: 110: if (Temp.Count >= 3) {
  3716  04DC  3003               	movlw	3
  3717  04DD  0244               	subwf	_Temp+3,w
  3718  04DE  1C03               	skipc
  3719  04DF  2CE4               	goto	l968
  3720                           
  3721                           ;OverTemperature_B1.c: 111: Temp.Count = 0;
  3722  04E0  01C4               	clrf	_Temp+3
  3723                           
  3724                           ;OverTemperature_B1.c: 112: Temp.ERROR = 1;
  3725  04E1  14C1               	bsf	_Temp,1
  3726                           
  3727                           ;OverTemperature_B1.c: 113: }
  3728                           ;OverTemperature_B1.c: 114: } else {
  3729  04E2  2CE4               	goto	l968
  3730  04E3                     l4586:	
  3731                           
  3732                           ;OverTemperature_B1.c: 115: Temp.Count = 0;
  3733  04E3  01C4               	clrf	_Temp+3
  3734  04E4                     l968:	
  3735                           ;OverTemperature_B1.c: 116: }
  3736                           ;OverTemperature_B1.c: 117: }
  3737                           ;OverTemperature_B1.c: 118: ;;
  3738                           ;OverTemperature_B1.c: 119: ;;
  3739                           
  3740                           
  3741                           ;OverTemperature_B1.c: 135: }
  3742                           ;OverTemperature_B1.c: 136: Temp.ADH[0] = 0;
  3743  04E4  01C8               	clrf	_Temp+7
  3744                           
  3745                           ;OverTemperature_B1.c: 137: Temp.ADH[1] = 0;
  3746  04E5  01C9               	clrf	_Temp+8
  3747                           
  3748                           ;OverTemperature_B1.c: 138: }
  3749                           ;OverTemperature_B1.c: 139: }
  3750                           ;OverTemperature_B1.c: 141: } else {
  3751  04E6  0008               	return
  3752  04E7                     l963:	
  3753                           
  3754                           ;OverTemperature_B1.c: 142: if (myMain.PowerON == 1) {
  3755  04E7  1C27               	btfss	_myMain,0
  3756  04E8  0008               	return
  3757                           
  3758                           ;OverTemperature_B1.c: 143: Temp.Enable = 1;
  3759  04E9  1441               	bsf	_Temp,0
  3760  04EA  0008               	return
  3761  04EB                     __end_of_setTemp_Main:	
  3762                           
  3763                           	psect	text14
  3764  062D                     __ptext14:	
  3765 ;; *************** function ___awdiv *****************
  3766 ;; Defined at:
  3767 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  divisor         2    0[BANK0 ] int 
  3770 ;;  dividend        2    2[BANK0 ] int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  quotient        2    7[BANK0 ] int 
  3773 ;;  sign            1    6[BANK0 ] unsigned char 
  3774 ;;  counter         1    5[BANK0 ] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  2    0[BANK0 ] int 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3784 ;;      Params:         0       4       0       0
  3785 ;;      Locals:         0       4       0       0
  3786 ;;      Temps:          0       1       0       0
  3787 ;;      Totals:         0       9       0       0
  3788 ;;Total ram usage:        9 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_setTemp_Main
  3795 ;;		_getPIR_AD
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function ___awdiv
  3801  062D                     ___awdiv:	
  3802                           
  3803                           ;incstack = 0
  3804                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3805  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3806  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3807  062F  01DF               	clrf	___awdiv@sign
  3808  0630  1FDA               	btfss	___awdiv@divisor+1,7
  3809  0631  2E39               	goto	l4312
  3810  0632  09D9               	comf	___awdiv@divisor,f
  3811  0633  09DA               	comf	___awdiv@divisor+1,f
  3812  0634  0AD9               	incf	___awdiv@divisor,f
  3813  0635  1903               	skipnz
  3814  0636  0ADA               	incf	___awdiv@divisor+1,f
  3815  0637  01DF               	clrf	___awdiv@sign
  3816  0638  0ADF               	incf	___awdiv@sign,f
  3817  0639                     l4312:	
  3818  0639  1FDC               	btfss	___awdiv@dividend+1,7
  3819  063A  2E44               	goto	l4318
  3820  063B  09DB               	comf	___awdiv@dividend,f
  3821  063C  09DC               	comf	___awdiv@dividend+1,f
  3822  063D  0ADB               	incf	___awdiv@dividend,f
  3823  063E  1903               	skipnz
  3824  063F  0ADC               	incf	___awdiv@dividend+1,f
  3825  0640  3001               	movlw	1
  3826  0641  00DD               	movwf	??___awdiv
  3827  0642  085D               	movf	??___awdiv,w
  3828  0643  06DF               	xorwf	___awdiv@sign,f
  3829  0644                     l4318:	
  3830  0644  01E0               	clrf	___awdiv@quotient
  3831  0645  01E1               	clrf	___awdiv@quotient+1
  3832  0646  085A               	movf	___awdiv@divisor+1,w
  3833  0647  0459               	iorwf	___awdiv@divisor,w
  3834  0648  1903               	skipnz
  3835  0649  2E7B               	goto	l4340
  3836  064A  01DE               	clrf	___awdiv@counter
  3837  064B  0ADE               	incf	___awdiv@counter,f
  3838  064C                     l4328:	
  3839  064C  1BDA               	btfsc	___awdiv@divisor+1,7
  3840  064D  2E5A               	goto	l4330
  3841  064E  3001               	movlw	1
  3842  064F                     u4835:	
  3843  064F  1003               	clrc
  3844  0650  0DD9               	rlf	___awdiv@divisor,f
  3845  0651  0DDA               	rlf	___awdiv@divisor+1,f
  3846  0652  3EFF               	addlw	-1
  3847  0653  1D03               	skipz
  3848  0654  2E4F               	goto	u4835
  3849  0655  3001               	movlw	1
  3850  0656  00DD               	movwf	??___awdiv
  3851  0657  085D               	movf	??___awdiv,w
  3852  0658  07DE               	addwf	___awdiv@counter,f
  3853  0659  2E4C               	goto	l4328
  3854  065A                     l4330:	
  3855  065A  3001               	movlw	1
  3856  065B                     u4855:	
  3857  065B  1003               	clrc
  3858  065C  0DE0               	rlf	___awdiv@quotient,f
  3859  065D  0DE1               	rlf	___awdiv@quotient+1,f
  3860  065E  3EFF               	addlw	-1
  3861  065F  1D03               	skipz
  3862  0660  2E5B               	goto	u4855
  3863  0661  085A               	movf	___awdiv@divisor+1,w
  3864  0662  025C               	subwf	___awdiv@dividend+1,w
  3865  0663  1D03               	skipz
  3866  0664  2E67               	goto	u4865
  3867  0665  0859               	movf	___awdiv@divisor,w
  3868  0666  025B               	subwf	___awdiv@dividend,w
  3869  0667                     u4865:	
  3870  0667  1C03               	skipc
  3871  0668  2E70               	goto	l4336
  3872  0669  0859               	movf	___awdiv@divisor,w
  3873  066A  02DB               	subwf	___awdiv@dividend,f
  3874  066B  085A               	movf	___awdiv@divisor+1,w
  3875  066C  1C03               	skipc
  3876  066D  03DC               	decf	___awdiv@dividend+1,f
  3877  066E  02DC               	subwf	___awdiv@dividend+1,f
  3878  066F  1460               	bsf	___awdiv@quotient,0
  3879  0670                     l4336:	
  3880  0670  3001               	movlw	1
  3881  0671                     u4875:	
  3882  0671  1003               	clrc
  3883  0672  0CDA               	rrf	___awdiv@divisor+1,f
  3884  0673  0CD9               	rrf	___awdiv@divisor,f
  3885  0674  3EFF               	addlw	-1
  3886  0675  1D03               	skipz
  3887  0676  2E71               	goto	u4875
  3888  0677  3001               	movlw	1
  3889  0678  02DE               	subwf	___awdiv@counter,f
  3890  0679  1D03               	btfss	3,2
  3891  067A  2E5A               	goto	l4330
  3892  067B                     l4340:	
  3893  067B  085F               	movf	___awdiv@sign,w
  3894  067C  1903               	btfsc	3,2
  3895  067D  2E83               	goto	l4344
  3896  067E  09E0               	comf	___awdiv@quotient,f
  3897  067F  09E1               	comf	___awdiv@quotient+1,f
  3898  0680  0AE0               	incf	___awdiv@quotient,f
  3899  0681  1903               	skipnz
  3900  0682  0AE1               	incf	___awdiv@quotient+1,f
  3901  0683                     l4344:	
  3902  0683  0861               	movf	___awdiv@quotient+1,w
  3903  0684  01DA               	clrf	?___awdiv+1
  3904  0685  07DA               	addwf	?___awdiv+1,f
  3905  0686  0860               	movf	___awdiv@quotient,w
  3906  0687  01D9               	clrf	?___awdiv
  3907  0688  07D9               	addwf	?___awdiv,f
  3908  0689  0008               	return
  3909  068A                     __end_of___awdiv:	
  3910                           
  3911                           	psect	text15
  3912  0D12                     __ptext15:	
  3913 ;; *************** function _Temp_Initialization *****************
  3914 ;; Defined at:
  3915 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;		None
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;		None               void
  3922 ;; Registers used:
  3923 ;;		status,2, status,0, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3929 ;;      Params:         0       0       0       0
  3930 ;;      Locals:         0       0       0       0
  3931 ;;      Temps:          0       0       0       0
  3932 ;;      Totals:         0       0       0       0
  3933 ;;Total ram usage:        0 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    4
  3936 ;; This function calls:
  3937 ;;		_setTemp_Initialization
  3938 ;; This function is called by:
  3939 ;;		_main
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function _Temp_Initialization
  3945  0D12                     _Temp_Initialization:	
  3946                           
  3947                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3948                           
  3949                           ;incstack = 0
  3950                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3951  0D12  158A  250D         	fcall	_setTemp_Initialization
  3952  0D14  0008               	return
  3953  0D15                     __end_of_Temp_Initialization:	
  3954                           
  3955                           	psect	text16
  3956  0D0D                     __ptext16:	
  3957 ;; *************** function _setTemp_Initialization *****************
  3958 ;; Defined at:
  3959 ;;		line 44 in file "../src/OverTemperature_B1.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;		None               void
  3966 ;; Registers used:
  3967 ;;		None
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3973 ;;      Params:         0       0       0       0
  3974 ;;      Locals:         0       0       0       0
  3975 ;;      Temps:          0       0       0       0
  3976 ;;      Totals:         0       0       0       0
  3977 ;;Total ram usage:        0 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    3
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_Temp_Initialization
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _setTemp_Initialization
  3989  0D0D                     _setTemp_Initialization:	
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _setTemp_Initialization: []
  3993  0D0D  0008               	return
  3994  0D0E                     __end_of_setTemp_Initialization:	
  3995                           
  3996                           	psect	text17
  3997  0027                     __ptext17:	
  3998 ;; *************** function _PIR_Main *****************
  3999 ;; Defined at:
  4000 ;;		line 13 in file "../src/PIR_B1.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  LightsStatus    1   13[BANK0 ] unsigned char 
  4005 ;;  cds             1   12[BANK0 ] unsigned char 
  4006 ;;  error           1    9[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;		None               void
  4009 ;; Registers used:
  4010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4016 ;;      Params:         0       0       0       0
  4017 ;;      Locals:         0       5       0       0
  4018 ;;      Temps:          0       4       0       0
  4019 ;;      Totals:         0       9       0       0
  4020 ;;Total ram usage:        9 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    5
  4023 ;; This function calls:
  4024 ;;		_getCDS_Status
  4025 ;;		_getDimmerLights_Status
  4026 ;;		_getMain_All_Error_Status
  4027 ;;		_setLED
  4028 ;; This function is called by:
  4029 ;;		_main
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _PIR_Main
  4035  0027                     _PIR_Main:	
  4036                           
  4037                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4038                           
  4039                           ;incstack = 0
  4040                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4041  0027  3000               	movlw	0
  4042  0028  158A  26DE  118A   	fcall	_getMain_All_Error_Status
  4043  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4044  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4045  002D  00DE               	movwf	??_PIR_Main
  4046  002E  085E               	movf	??_PIR_Main,w
  4047  002F  00E2               	movwf	PIR_Main@error
  4048                           
  4049                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4050  0030  158A  253B  118A   	fcall	_getCDS_Status
  4051  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4053  0035  00DE               	movwf	??_PIR_Main
  4054  0036  085E               	movf	??_PIR_Main,w
  4055  0037  00E5               	movwf	PIR_Main@cds
  4056                           
  4057                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4058  0038  01E6               	clrf	PIR_Main@LightsStatus
  4059                           
  4060                           ;PIR_B1.c: 26: LightsStatus = getDimmerLights_Status(1);
  4061  0039  3001               	movlw	1
  4062  003A  158A  25EC  118A   	fcall	_getDimmerLights_Status
  4063  003D  1283               	bcf	3,5	;RP0=0, select bank0
  4064  003E  1303               	bcf	3,6	;RP1=0, select bank0
  4065  003F  00DE               	movwf	??_PIR_Main
  4066  0040  085E               	movf	??_PIR_Main,w
  4067  0041  00E6               	movwf	PIR_Main@LightsStatus
  4068                           
  4069                           ;PIR_B1.c: 30: if (_PIR.Enable == 1) {
  4070  0042  1683               	bsf	3,5	;RP0=1, select bank1
  4071  0043  1303               	bcf	3,6	;RP1=0, select bank1
  4072  0044  1C20               	btfss	__PIR^(0+128),0
  4073  0045  29C3               	goto	l1035
  4074                           
  4075                           ;PIR_B1.c: 31: if (error == 0) {
  4076  0046  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0047  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0048  08E2               	movf	PIR_Main@error,f
  4079  0049  1D03               	skipz
  4080  004A  2881               	goto	l1036
  4081                           
  4082                           ;PIR_B1.c: 33: if (cds == 1) {
  4083  004B  0865               	movf	PIR_Main@cds,w
  4084  004C  3A01               	xorlw	1
  4085  004D  1D03               	skipz
  4086  004E  2853               	goto	l1037
  4087                           
  4088                           ;PIR_B1.c: 34: _PIR.Available = 1;
  4089  004F  1683               	bsf	3,5	;RP0=1, select bank1
  4090  0050  1303               	bcf	3,6	;RP1=0, select bank1
  4091  0051  17A0               	bsf	__PIR^(0+128),7
  4092                           
  4093                           ;PIR_B1.c: 35: } else {
  4094  0052  2871               	goto	l4814
  4095  0053                     l1037:	
  4096                           
  4097                           ;PIR_B1.c: 36: _PIR.Available = 0;
  4098  0053  1683               	bsf	3,5	;RP0=1, select bank1
  4099  0054  1303               	bcf	3,6	;RP1=0, select bank1
  4100  0055  13A0               	bcf	__PIR^(0+128),7
  4101                           
  4102                           ;PIR_B1.c: 37: if (_PIR.OK == 1) {
  4103  0056  1DA0               	btfss	__PIR^(0+128),3
  4104  0057  2871               	goto	l4814
  4105                           
  4106                           ;PIR_B1.c: 45: if (getDimmerLights_Status(1) == 1) {
  4107  0058  3001               	movlw	1
  4108  0059  158A  25EC  118A   	fcall	_getDimmerLights_Status
  4109  005C  3A01               	xorlw	1
  4110  005D  1D03               	skipz
  4111  005E  2863               	goto	l4812
  4112                           
  4113                           ;PIR_B1.c: 46: Dimmer.PIR_Trigger = 1;
  4114  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4115  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4116  0061  16AD               	bsf	_Dimmer,5
  4117                           
  4118                           ;PIR_B1.c: 47: Dimmer.PIR_Sw = 0;
  4119  0062  122D               	bcf	_Dimmer,4
  4120  0063                     l4812:	
  4121                           
  4122                           ;PIR_B1.c: 48: }
  4123                           ;PIR_B1.c: 52: setLED(1, 0);
  4124  0063  1283               	bcf	3,5	;RP0=0, select bank0
  4125  0064  1303               	bcf	3,6	;RP1=0, select bank0
  4126  0065  01DB               	clrf	setLED@command
  4127  0066  3001               	movlw	1
  4128  0067  118A  255C  118A   	fcall	_setLED
  4129                           
  4130                           ;PIR_B1.c: 53: setLED(2, 0);
  4131  006A  1283               	bcf	3,5	;RP0=0, select bank0
  4132  006B  1303               	bcf	3,6	;RP1=0, select bank0
  4133  006C  01DB               	clrf	setLED@command
  4134  006D  3002               	movlw	2
  4135  006E  118A  255C  118A   	fcall	_setLED
  4136  0071                     l4814:	
  4137                           
  4138                           ;PIR_B1.c: 54: }
  4139                           ;PIR_B1.c: 55: }
  4140                           ;PIR_B1.c: 59: if (_PIR.Detect == 0) {
  4141  0071  1683               	bsf	3,5	;RP0=1, select bank1
  4142  0072  1303               	bcf	3,6	;RP1=0, select bank1
  4143  0073  1A20               	btfsc	__PIR^(0+128),4
  4144  0074  2887               	goto	l1043
  4145                           
  4146                           ;PIR_B1.c: 60: _PIR.Detect = 1;
  4147  0075  1620               	bsf	__PIR^(0+128),4
  4148                           
  4149                           ;PIR_B1.c: 61: if (_PIR.OK == 0) {
  4150  0076  19A0               	btfsc	__PIR^(0+128),3
  4151  0077  2887               	goto	l1043
  4152                           
  4153                           ;PIR_B1.c: 62: setLED(1, 1);
  4154  0078  1283               	bcf	3,5	;RP0=0, select bank0
  4155  0079  1303               	bcf	3,6	;RP1=0, select bank0
  4156  007A  01DB               	clrf	setLED@command
  4157  007B  0ADB               	incf	setLED@command,f
  4158  007C  3001               	movlw	1
  4159  007D  118A  255C  118A   	fcall	_setLED
  4160                           
  4161                           ;PIR_B1.c: 63: }
  4162                           ;PIR_B1.c: 64: }
  4163                           ;PIR_B1.c: 65: } else {
  4164  0080  2887               	goto	l1043
  4165  0081                     l1036:	
  4166                           
  4167                           ;PIR_B1.c: 66: if (_PIR.Detect == 1) {
  4168  0081  1683               	bsf	3,5	;RP0=1, select bank1
  4169  0082  1303               	bcf	3,6	;RP1=0, select bank1
  4170  0083  1E20               	btfss	__PIR^(0+128),4
  4171  0084  2887               	goto	l1043
  4172                           
  4173                           ;PIR_B1.c: 67: _PIR.Detect = 0;
  4174  0085  1220               	bcf	__PIR^(0+128),4
  4175                           
  4176                           ;PIR_B1.c: 68: _PIR.Available = 0;
  4177  0086  13A0               	bcf	__PIR^(0+128),7
  4178  0087                     l1043:	
  4179                           
  4180                           ;PIR_B1.c: 86: }
  4181                           ;PIR_B1.c: 87: }
  4182                           ;PIR_B1.c: 89: if (_PIR.ADtoGO == 0) {
  4183  0087  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0088  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0089  18A0               	btfsc	__PIR^(0+128),1
  4186  008A  289A               	goto	l1045
  4187                           
  4188                           ;PIR_B1.c: 90: _PIR.Time++;
  4189  008B  3001               	movlw	1
  4190  008C  1283               	bcf	3,5	;RP0=0, select bank0
  4191  008D  1303               	bcf	3,6	;RP1=0, select bank0
  4192  008E  00DE               	movwf	??_PIR_Main
  4193  008F  085E               	movf	??_PIR_Main,w
  4194  0090  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0091  1303               	bcf	3,6	;RP1=0, select bank1
  4196  0092  07A5               	addwf	(__PIR^(0+128)+5),f
  4197                           
  4198                           ;PIR_B1.c: 91: if (_PIR.Time == (100 / 20)) {
  4199  0093  0825               	movf	(__PIR^(0+128)+5),w
  4200  0094  3A05               	xorlw	5
  4201  0095  1D03               	skipz
  4202  0096  296A               	goto	l4896
  4203                           
  4204                           ;PIR_B1.c: 92: _PIR.Time = 0;
  4205  0097  01A5               	clrf	(__PIR^(0+128)+5)
  4206                           
  4207                           ;PIR_B1.c: 93: _PIR.ADtoGO = 1;
  4208  0098  14A0               	bsf	__PIR^(0+128),1
  4209                           
  4210                           ;PIR_B1.c: 94: }
  4211                           ;PIR_B1.c: 95: } else {
  4212  0099  296A               	goto	l4896
  4213  009A                     l1045:	
  4214                           
  4215                           ;PIR_B1.c: 96: if (_PIR.GO == 1) {
  4216  009A  1D20               	btfss	__PIR^(0+128),2
  4217  009B  296A               	goto	l4896
  4218                           
  4219                           ;PIR_B1.c: 97: _PIR.GO = 0;
  4220  009C  1120               	bcf	__PIR^(0+128),2
  4221                           
  4222                           ;PIR_B1.c: 98: _PIR.ADtoGO = 0;
  4223  009D  10A0               	bcf	__PIR^(0+128),1
  4224                           
  4225                           ;PIR_B1.c: 99: if (_PIR.Available == 1) {
  4226  009E  1BA0               	btfsc	__PIR^(0+128),7
  4227                           
  4228                           ;PIR_B1.c: 100: if (_PIR.OK == 1) {
  4229  009F  1DA0               	btfss	__PIR^(0+128),3
  4230  00A0  296A               	goto	l4896
  4231                           
  4232                           ;PIR_B1.c: 102: _PIR.Time++;
  4233  00A1  3001               	movlw	1
  4234  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  4235  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  4236  00A4  00DE               	movwf	??_PIR_Main
  4237  00A5  085E               	movf	??_PIR_Main,w
  4238  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  4239  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  4240  00A8  07A5               	addwf	(__PIR^(0+128)+5),f
  4241                           
  4242                           ;PIR_B1.c: 103: if (_PIR.Time == 60) {
  4243  00A9  0825               	movf	(__PIR^(0+128)+5),w
  4244  00AA  3A3C               	xorlw	60
  4245  00AB  1D03               	skipz
  4246  00AC  28E1               	goto	l4870
  4247                           
  4248                           ;PIR_B1.c: 104: _PIR.Time = 0;
  4249  00AD  01A5               	clrf	(__PIR^(0+128)+5)
  4250                           
  4251                           ;PIR_B1.c: 105: if (_PIR.RangeCount >= 90) {
  4252  00AE  305A               	movlw	90
  4253  00AF  024B               	subwf	(__PIR^(0+128)+43),w
  4254  00B0  1C03               	skipc
  4255  00B1  28BD               	goto	l4852
  4256                           
  4257                           ;PIR_B1.c: 106: _PIR.RangeTime1 = 0;
  4258  00B2  01CA               	clrf	(__PIR^(0+128)+42)
  4259                           
  4260                           ;PIR_B1.c: 108: if (_PIR.RangeValue == 25) {
  4261  00B3  084C               	movf	(__PIR^(0+128)+44),w
  4262  00B4  3A19               	xorlw	25
  4263  00B5  1903               	btfsc	3,2
  4264  00B6  28D2               	goto	L10
  4265                           
  4266                           ;PIR_B1.c: 110: } else if (_PIR.RangeValue == (25+10)) {
  4267                           
  4268                           ;PIR_B1.c: 109: _PIR.RangeValue = (25+10);
  4269  00B7  084C               	movf	(__PIR^(0+128)+44),w
  4270  00B8  3A23               	xorlw	35
  4271  00B9  1D03               	skipz
  4272  00BA  28E0               	goto	l4868
  4273                           
  4274                           ;PIR_B1.c: 111: _PIR.RangeValue = (25+20);
  4275  00BB  302D               	movlw	45
  4276  00BC  28D9               	goto	L9
  4277  00BD                     l4852:	
  4278                           ;PIR_B1.c: 112: }
  4279                           ;PIR_B1.c: 113: } else if (_PIR.RangeCount <= 10) {
  4280                           
  4281  00BD  300B               	movlw	11
  4282  00BE  024B               	subwf	(__PIR^(0+128)+43),w
  4283  00BF  1803               	skipnc
  4284  00C0  28E0               	goto	l4868
  4285                           
  4286                           ;PIR_B1.c: 114: _PIR.RangeTime1++;
  4287  00C1  3001               	movlw	1
  4288  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  4289  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  4290  00C4  00DE               	movwf	??_PIR_Main
  4291  00C5  085E               	movf	??_PIR_Main,w
  4292  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  4293  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  4294  00C8  07CA               	addwf	(__PIR^(0+128)+42),f
  4295                           
  4296                           ;PIR_B1.c: 115: if (_PIR.RangeTime1 == 2) {
  4297  00C9  084A               	movf	(__PIR^(0+128)+42),w
  4298  00CA  3A02               	xorlw	2
  4299  00CB  1D03               	skipz
  4300  00CC  28E0               	goto	l4868
  4301                           
  4302                           ;PIR_B1.c: 116: _PIR.RangeTime1 = 0;
  4303  00CD  01CA               	clrf	(__PIR^(0+128)+42)
  4304                           
  4305                           ;PIR_B1.c: 118: if (_PIR.RangeValue == (25+20)) {
  4306  00CE  084C               	movf	(__PIR^(0+128)+44),w
  4307  00CF  3A2D               	xorlw	45
  4308  00D0  1D03               	skipz
  4309  00D1  28D4               	goto	l4864
  4310  00D2                     L10:	
  4311                           
  4312                           ;PIR_B1.c: 119: _PIR.RangeValue = (25+10);
  4313  00D2  3023               	movlw	35
  4314  00D3  28D9               	goto	L9
  4315  00D4                     l4864:	
  4316                           ;PIR_B1.c: 120: } else if (_PIR.RangeValue == (25+10)) {
  4317                           
  4318  00D4  084C               	movf	(__PIR^(0+128)+44),w
  4319  00D5  3A23               	xorlw	35
  4320  00D6  1D03               	skipz
  4321  00D7  28E0               	goto	l4868
  4322                           
  4323                           ;PIR_B1.c: 121: _PIR.RangeValue = 25;
  4324  00D8  3019               	movlw	25
  4325  00D9                     L9:	
  4326  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  4327  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  4328  00DB  00DE               	movwf	??_PIR_Main
  4329  00DC  085E               	movf	??_PIR_Main,w
  4330  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  4331  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  4332  00DF  00CC               	movwf	(__PIR^(0+128)+44)
  4333  00E0                     l4868:	
  4334                           
  4335                           ;PIR_B1.c: 122: }
  4336                           ;PIR_B1.c: 123: }
  4337                           ;PIR_B1.c: 124: }
  4338                           ;PIR_B1.c: 125: _PIR.RangeCount = 0;
  4339  00E0  01CB               	clrf	(__PIR^(0+128)+43)
  4340  00E1                     l4870:	
  4341                           
  4342                           ;PIR_B1.c: 126: }
  4343                           ;PIR_B1.c: 129: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4344                           ;PIR_B1.c: 130: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4345  00E1  084C               	movf	(__PIR^(0+128)+44),w
  4346  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4347  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4348  00E4  00DE               	movwf	??_PIR_Main
  4349  00E5  01DF               	clrf	??_PIR_Main+1
  4350  00E6  09DE               	comf	??_PIR_Main,f
  4351  00E7  09DF               	comf	??_PIR_Main+1,f
  4352  00E8  0ADE               	incf	??_PIR_Main,f
  4353  00E9  1903               	skipnz
  4354  00EA  0ADF               	incf	??_PIR_Main+1,f
  4355  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  4356  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  4357  00ED  0826               	movf	(__PIR^(0+128)+6),w
  4358  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  4359  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  4360  00F0  075E               	addwf	??_PIR_Main,w
  4361  00F1  00E0               	movwf	??_PIR_Main+2
  4362  00F2  085F               	movf	??_PIR_Main+1,w
  4363  00F3  1803               	skipnc
  4364  00F4  0A5F               	incf	??_PIR_Main+1,w
  4365  00F5  00E1               	movwf	??_PIR_Main+3
  4366  00F6  0861               	movf	??_PIR_Main+3,w
  4367  00F7  3A80               	xorlw	128
  4368  00F8  3C80               	sublw	128
  4369  00F9  1D03               	skipz
  4370  00FA  28FF               	goto	u5955
  4371  00FB  0860               	movf	??_PIR_Main+2,w
  4372  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  4373  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  4374  00FE  0221               	subwf	(__PIR^(0+128)+1),w
  4375  00FF                     u5955:	
  4376  00FF  1C03               	skipc
  4377  0100  292C               	goto	l4880
  4378  0101  1683               	bsf	3,5	;RP0=1, select bank1
  4379  0102  1303               	bcf	3,6	;RP1=0, select bank1
  4380  0103  0826               	movf	(__PIR^(0+128)+6),w
  4381  0104  074C               	addwf	(__PIR^(0+128)+44),w
  4382  0105  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0106  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0107  00DE               	movwf	??_PIR_Main
  4385  0108  01DF               	clrf	??_PIR_Main+1
  4386  0109  0DDF               	rlf	??_PIR_Main+1,f
  4387  010A  085F               	movf	??_PIR_Main+1,w
  4388  010B  3A80               	xorlw	128
  4389  010C  00E0               	movwf	??_PIR_Main+2
  4390  010D  3080               	movlw	128
  4391  010E  0260               	subwf	??_PIR_Main+2,w
  4392  010F  1D03               	skipz
  4393  0110  2917               	goto	u5965
  4394  0111  1683               	bsf	3,5	;RP0=1, select bank1
  4395  0112  1303               	bcf	3,6	;RP1=0, select bank1
  4396  0113  0821               	movf	(__PIR^(0+128)+1),w
  4397  0114  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0115  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0116  025E               	subwf	??_PIR_Main,w
  4400  0117                     u5965:	
  4401  0117  1C03               	skipc
  4402  0118  292C               	goto	l4880
  4403                           
  4404                           ;PIR_B1.c: 132: _PIR.Count = 0;
  4405  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4406  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4407  011B  01C1               	clrf	(__PIR^(0+128)+33)
  4408  011C  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4409                           
  4410                           ;PIR_B1.c: 138: setLED(1, 0);
  4411  011D  1283               	bcf	3,5	;RP0=0, select bank0
  4412  011E  1303               	bcf	3,6	;RP1=0, select bank0
  4413  011F  01DB               	clrf	setLED@command
  4414  0120  3001               	movlw	1
  4415  0121  118A  255C  118A   	fcall	_setLED
  4416                           
  4417                           ;PIR_B1.c: 139: setLED(2, 0);
  4418  0124  1283               	bcf	3,5	;RP0=0, select bank0
  4419  0125  1303               	bcf	3,6	;RP1=0, select bank0
  4420  0126  01DB               	clrf	setLED@command
  4421  0127  3002               	movlw	2
  4422  0128  118A  255C  118A   	fcall	_setLED
  4423                           
  4424                           ;PIR_B1.c: 140: } else {
  4425  012B  296A               	goto	l4896
  4426  012C                     l4880:	
  4427                           
  4428                           ;PIR_B1.c: 142: _PIR.RangeCount++;
  4429  012C  3001               	movlw	1
  4430  012D  1283               	bcf	3,5	;RP0=0, select bank0
  4431  012E  1303               	bcf	3,6	;RP1=0, select bank0
  4432  012F  00DE               	movwf	??_PIR_Main
  4433  0130  085E               	movf	??_PIR_Main,w
  4434  0131  1683               	bsf	3,5	;RP0=1, select bank1
  4435  0132  1303               	bcf	3,6	;RP1=0, select bank1
  4436  0133  07CB               	addwf	(__PIR^(0+128)+43),f
  4437                           
  4438                           ;PIR_B1.c: 143: _PIR.Count++;
  4439  0134  3001               	movlw	1
  4440  0135  07C1               	addwf	(__PIR^(0+128)+33),f
  4441  0136  1803               	skipnc
  4442  0137  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4443  0138  3000               	movlw	0
  4444  0139  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4445                           
  4446                           ;PIR_B1.c: 145: _PIR.TriggerValue = LightsStatus == 1 ? 3 : 3;
  4447  013A  1283               	bcf	3,5	;RP0=0, select bank0
  4448  013B  1303               	bcf	3,6	;RP1=0, select bank0
  4449  013C  0866               	movf	PIR_Main@LightsStatus,w
  4450  013D  3A01               	xorlw	1
  4451  013E  1903               	skipnz
  4452  013F  2940               	goto	l4888
  4453  0140                     l4888:	
  4454  0140  3003               	movlw	3
  4455  0141  00E3               	movwf	_PIR_Main$3359
  4456  0142  3000               	movlw	0
  4457  0143  00E4               	movwf	_PIR_Main$3359+1
  4458  0144  0863               	movf	_PIR_Main$3359,w
  4459  0145  00DE               	movwf	??_PIR_Main
  4460  0146  085E               	movf	??_PIR_Main,w
  4461  0147  1683               	bsf	3,5	;RP0=1, select bank1
  4462  0148  1303               	bcf	3,6	;RP1=0, select bank1
  4463  0149  00C3               	movwf	(__PIR^(0+128)+35)
  4464                           
  4465                           ;PIR_B1.c: 147: if (_PIR.Count == _PIR.TriggerValue) {
  4466  014A  0843               	movf	(__PIR^(0+128)+35),w
  4467  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4468  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4469  014D  00DE               	movwf	??_PIR_Main
  4470  014E  01DF               	clrf	??_PIR_Main+1
  4471  014F  1683               	bsf	3,5	;RP0=1, select bank1
  4472  0150  1303               	bcf	3,6	;RP1=0, select bank1
  4473  0151  0842               	movf	((__PIR+1)^(0+128)+33),w
  4474  0152  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0153  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0154  065F               	xorwf	??_PIR_Main+1,w
  4477  0155  1D03               	skipz
  4478  0156  295D               	goto	u5985
  4479  0157  1683               	bsf	3,5	;RP0=1, select bank1
  4480  0158  1303               	bcf	3,6	;RP1=0, select bank1
  4481  0159  0841               	movf	(__PIR^(0+128)+33),w
  4482  015A  1283               	bcf	3,5	;RP0=0, select bank0
  4483  015B  1303               	bcf	3,6	;RP1=0, select bank0
  4484  015C  065E               	xorwf	??_PIR_Main,w
  4485  015D                     u5985:	
  4486  015D  1D03               	skipz
  4487  015E  296A               	goto	l4896
  4488                           
  4489                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4490  015F  1683               	bsf	3,5	;RP0=1, select bank1
  4491  0160  1303               	bcf	3,6	;RP1=0, select bank1
  4492  0161  01C1               	clrf	(__PIR^(0+128)+33)
  4493  0162  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4494                           
  4495                           ;PIR_B1.c: 150: _PIR.CloseTimeSeconds = 0;
  4496  0163  01C6               	clrf	(__PIR^(0+128)+38)
  4497                           
  4498                           ;PIR_B1.c: 151: _PIR.CloseTimeMinutes = 0;
  4499  0164  01C4               	clrf	(__PIR^(0+128)+36)
  4500  0165  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4501                           
  4502                           ;PIR_B1.c: 167: Dimmer.PIR_Trigger = 1;
  4503  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0168  16AD               	bsf	_Dimmer,5
  4506                           
  4507                           ;PIR_B1.c: 168: Dimmer.PIR_Sw = 1;
  4508  0169  162D               	bsf	_Dimmer,4
  4509  016A                     l4896:	
  4510                           
  4511                           ;PIR_B1.c: 213: }
  4512                           ;PIR_B1.c: 214: }
  4513                           ;PIR_B1.c: 215: }
  4514                           ;PIR_B1.c: 216: }
  4515                           ;PIR_B1.c: 217: }
  4516                           ;PIR_B1.c: 218: }
  4517                           ;PIR_B1.c: 219: if (_PIR.OK == 0) {
  4518  016A  1683               	bsf	3,5	;RP0=1, select bank1
  4519  016B  1303               	bcf	3,6	;RP1=0, select bank1
  4520  016C  19A0               	btfsc	__PIR^(0+128),3
  4521  016D  2997               	goto	l4912
  4522                           
  4523                           ;PIR_B1.c: 220: _PIR.Count++;
  4524  016E  3001               	movlw	1
  4525  016F  07C1               	addwf	(__PIR^(0+128)+33),f
  4526  0170  1803               	skipnc
  4527  0171  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4528  0172  3000               	movlw	0
  4529  0173  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4530                           
  4531                           ;PIR_B1.c: 221: if (_PIR.Count == (30000 / 20)) {
  4532  0174  3005               	movlw	5
  4533  0175  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4534  0176  1D03               	skipz
  4535  0177  297A               	goto	u6005
  4536  0178  30DC               	movlw	220
  4537  0179  0641               	xorwf	(__PIR^(0+128)+33),w
  4538  017A                     u6005:	
  4539  017A  1D03               	skipz
  4540  017B  0008               	return
  4541                           
  4542                           ;PIR_B1.c: 222: _PIR.Count = 0;
  4543  017C  01C1               	clrf	(__PIR^(0+128)+33)
  4544  017D  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4545                           
  4546                           ;PIR_B1.c: 223: _PIR.OK = 1;
  4547  017E  15A0               	bsf	__PIR^(0+128),3
  4548                           
  4549                           ;PIR_B1.c: 224: setLED(1, 0);
  4550  017F  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0180  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0181  01DB               	clrf	setLED@command
  4553  0182  3001               	movlw	1
  4554  0183  118A  255C  118A   	fcall	_setLED
  4555                           
  4556                           ;PIR_B1.c: 225: if (cds == 0) {
  4557  0186  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0187  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0188  08E5               	movf	PIR_Main@cds,f
  4560  0189  1D03               	skipz
  4561  018A  0008               	return
  4562                           
  4563                           ;PIR_B1.c: 235: if (getDimmerLights_Status(1) == 1) {
  4564  018B  3001               	movlw	1
  4565  018C  158A  25EC  118A   	fcall	_getDimmerLights_Status
  4566  018F  3A01               	xorlw	1
  4567  0190  1D03               	skipz
  4568  0191  0008               	return
  4569                           
  4570                           ;PIR_B1.c: 236: Dimmer.PIR_Trigger = 1;
  4571  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4572  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4573  0194  16AD               	bsf	_Dimmer,5
  4574                           
  4575                           ;PIR_B1.c: 237: Dimmer.PIR_Sw = 0;
  4576  0195  122D               	bcf	_Dimmer,4
  4577                           
  4578                           ;PIR_B1.c: 238: }
  4579                           ;PIR_B1.c: 242: }
  4580                           ;PIR_B1.c: 243: }
  4581                           ;PIR_B1.c: 244: } else {
  4582  0196  0008               	return
  4583  0197                     l4912:	
  4584                           
  4585                           ;PIR_B1.c: 245: if (LightsStatus == 1) {
  4586  0197  1283               	bcf	3,5	;RP0=0, select bank0
  4587  0198  0866               	movf	PIR_Main@LightsStatus,w
  4588  0199  3A01               	xorlw	1
  4589  019A  1D03               	skipz
  4590  019B  0008               	return
  4591                           
  4592                           ;PIR_B1.c: 246: _PIR.CloseTimeSeconds++;
  4593  019C  3001               	movlw	1
  4594  019D  00DE               	movwf	??_PIR_Main
  4595  019E  085E               	movf	??_PIR_Main,w
  4596  019F  1683               	bsf	3,5	;RP0=1, select bank1
  4597  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  4598  01A1  07C6               	addwf	(__PIR^(0+128)+38),f
  4599                           
  4600                           ;PIR_B1.c: 247: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4601  01A2  0846               	movf	(__PIR^(0+128)+38),w
  4602  01A3  3A32               	xorlw	50
  4603  01A4  1D03               	skipz
  4604  01A5  0008               	return
  4605                           
  4606                           ;PIR_B1.c: 248: _PIR.CloseTimeSeconds = 0;
  4607  01A6  01C6               	clrf	(__PIR^(0+128)+38)
  4608                           
  4609                           ;PIR_B1.c: 249: _PIR.CloseTimeMinutes++;
  4610  01A7  3001               	movlw	1
  4611  01A8  07C4               	addwf	(__PIR^(0+128)+36),f
  4612  01A9  1803               	skipnc
  4613  01AA  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4614  01AB  3000               	movlw	0
  4615  01AC  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4616                           
  4617                           ;PIR_B1.c: 250: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4618  01AD  0848               	movf	((__PIR+1)^(0+128)+39),w
  4619  01AE  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4620  01AF  1D03               	skipz
  4621  01B0  29B3               	goto	u6055
  4622  01B1  0847               	movf	(__PIR^(0+128)+39),w
  4623  01B2  0644               	xorwf	(__PIR^(0+128)+36),w
  4624  01B3                     u6055:	
  4625  01B3  1D03               	skipz
  4626  01B4  0008               	return
  4627                           
  4628                           ;PIR_B1.c: 251: _PIR.CloseTimeMinutes = 0;
  4629  01B5  01C4               	clrf	(__PIR^(0+128)+36)
  4630  01B6  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4631                           
  4632                           ;PIR_B1.c: 265: if (getDimmerLights_Status(1) == 1) {
  4633  01B7  3001               	movlw	1
  4634  01B8  158A  25EC  118A   	fcall	_getDimmerLights_Status
  4635  01BB  3A01               	xorlw	1
  4636  01BC  1D03               	skipz
  4637  01BD  0008               	return
  4638                           
  4639                           ;PIR_B1.c: 266: Dimmer.PIR_Trigger = 1;
  4640  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  4641  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  4642  01C0  16AD               	bsf	_Dimmer,5
  4643                           
  4644                           ;PIR_B1.c: 267: Dimmer.PIR_Sw = 0;
  4645  01C1  122D               	bcf	_Dimmer,4
  4646                           
  4647                           ;PIR_B1.c: 268: }
  4648                           ;PIR_B1.c: 271: }
  4649                           ;PIR_B1.c: 272: }
  4650                           ;PIR_B1.c: 273: }
  4651                           ;PIR_B1.c: 274: }
  4652                           ;PIR_B1.c: 275: } else {
  4653  01C2  0008               	return
  4654  01C3                     l1035:	
  4655                           
  4656                           ;PIR_B1.c: 276: if (myMain.PowerON == 1) {
  4657  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4658  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4659  01C5  1C27               	btfss	_myMain,0
  4660  01C6  0008               	return
  4661                           
  4662                           ;PIR_B1.c: 277: _PIR.Enable = 1;
  4663  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  4664  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  4665  01C9  1420               	bsf	__PIR^(0+128),0
  4666                           
  4667                           ;PIR_B1.c: 278: setLED(1, 1);
  4668  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  4669  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  4670  01CC  01DB               	clrf	setLED@command
  4671  01CD  0ADB               	incf	setLED@command,f
  4672  01CE  3001               	movlw	1
  4673  01CF  118A  255C         	fcall	_setLED
  4674                           
  4675                           ;PIR_B1.c: 290: Dimmer.PIR_Trigger = 1;
  4676  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4677  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4678  01D3  16AD               	bsf	_Dimmer,5
  4679                           
  4680                           ;PIR_B1.c: 291: Dimmer.PIR_Sw = 1;
  4681  01D4  162D               	bsf	_Dimmer,4
  4682  01D5  0008               	return
  4683  01D6                     __end_of_PIR_Main:	
  4684                           
  4685                           	psect	text18
  4686  0D3B                     __ptext18:	
  4687 ;; *************** function _getCDS_Status *****************
  4688 ;; Defined at:
  4689 ;;		line 42 in file "../src/CDS_B1.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;		None
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  status          1    0[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      unsigned char 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4703 ;;      Params:         0       0       0       0
  4704 ;;      Locals:         0       1       0       0
  4705 ;;      Temps:          0       0       0       0
  4706 ;;      Totals:         0       1       0       0
  4707 ;;Total ram usage:        1 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    3
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_PIR_Main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           
  4718                           ;psect for function _getCDS_Status
  4719  0D3B                     _getCDS_Status:	
  4720                           
  4721                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4725  0D3B  3000               	movlw	0
  4726  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0D3E  1A32               	btfsc	__CDS,4
  4729  0D3F  3001               	movlw	1
  4730  0D40  00D9               	movwf	getCDS_Status@status
  4731                           
  4732                           ;CDS_B1.c: 44: return status;
  4733  0D41  0859               	movf	getCDS_Status@status,w
  4734  0D42  0008               	return
  4735  0D43                     __end_of_getCDS_Status:	
  4736                           
  4737                           	psect	text19
  4738  0D88                     __ptext19:	
  4739 ;; *************** function _PIR_Initialization *****************
  4740 ;; Defined at:
  4741 ;;		line 7 in file "../src/PIR_B1.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;		None               void
  4748 ;; Registers used:
  4749 ;;		wreg
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4755 ;;      Params:         0       0       0       0
  4756 ;;      Locals:         0       0       0       0
  4757 ;;      Temps:          0       1       0       0
  4758 ;;      Totals:         0       1       0       0
  4759 ;;Total ram usage:        1 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    3
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _PIR_Initialization
  4771  0D88                     _PIR_Initialization:	
  4772                           
  4773                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _PIR_Initialization: [wreg]
  4777  0D88  3019               	movlw	25
  4778  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4779  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4780  0D8B  00D9               	movwf	??_PIR_Initialization
  4781  0D8C  0859               	movf	??_PIR_Initialization,w
  4782  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  4783  0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  4784  0D8F  00CC               	movwf	(__PIR^(0+128)+44)
  4785                           
  4786                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4787  0D90  3005               	movlw	5
  4788  0D91  00C7               	movwf	(__PIR^(0+128)+39)
  4789  0D92  3000               	movlw	0
  4790  0D93  00C8               	movwf	(__PIR^(0+128)+40)
  4791  0D94  0008               	return
  4792  0D95                     __end_of_PIR_Initialization:	
  4793                           
  4794                           	psect	text20
  4795  0DCD                     __ptext20:	
  4796 ;; *************** function _Mcu_Initialization *****************
  4797 ;; Defined at:
  4798 ;;		line 30 in file "../src/MCU_B1.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;		None               void
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4812 ;;      Params:         0       0       0       0
  4813 ;;      Locals:         0       0       0       0
  4814 ;;      Temps:          0       0       0       0
  4815 ;;      Totals:         0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    4
  4819 ;; This function calls:
  4820 ;;		_ADC_Set
  4821 ;;		_Fosc_Set
  4822 ;;		_IO_Set
  4823 ;;		_TMR1_Set
  4824 ;;		_WDT_Set
  4825 ;; This function is called by:
  4826 ;;		_main
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           
  4831                           ;psect for function _Mcu_Initialization
  4832  0DCD                     _Mcu_Initialization:	
  4833                           
  4834                           ;MCU_B1.c: 32: Fosc_Set();
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4838  0DCD  158A  2521  158A   	fcall	_Fosc_Set
  4839                           
  4840                           ;MCU_B1.c: 34: IO_Set();
  4841  0DD0  158A  26C6  158A   	fcall	_IO_Set
  4842                           
  4843                           ;MCU_B1.c: 36: ;;
  4844                           ;MCU_B1.c: 38: TMR1_Set();
  4845  0DD3  158A  25B1  158A   	fcall	_TMR1_Set
  4846                           
  4847                           ;MCU_B1.c: 40: ADC_Set();
  4848  0DD6  158A  2534  158A   	fcall	_ADC_Set
  4849                           
  4850                           ;MCU_B1.c: 42: ;;
  4851                           ;MCU_B1.c: 44: ;;
  4852                           ;MCU_B1.c: 46: ;;
  4853                           ;MCU_B1.c: 48: ;;
  4854                           ;MCU_B1.c: 50: ;;
  4855                           ;MCU_B1.c: 52: WDT_Set();
  4856  0DD9  158A  25BF         	fcall	_WDT_Set
  4857  0DDB  0008               	return
  4858  0DDC                     __end_of_Mcu_Initialization:	
  4859                           
  4860                           	psect	text21
  4861  0DBF                     __ptext21:	
  4862 ;; *************** function _WDT_Set *****************
  4863 ;; Defined at:
  4864 ;;		line 1089 in file "../src/MCU_B1.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;		None               void
  4871 ;; Registers used:
  4872 ;;		wreg
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4878 ;;      Params:         0       0       0       0
  4879 ;;      Locals:         0       0       0       0
  4880 ;;      Temps:          0       1       0       0
  4881 ;;      Totals:         0       1       0       0
  4882 ;;Total ram usage:        1 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    3
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_Mcu_Initialization
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _WDT_Set
  4894  0DBF                     _WDT_Set:	
  4895                           
  4896                           ;MCU_B1.c: 1091: PSA = 1;
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _WDT_Set: [wreg]
  4900  0DBF  1683               	bsf	3,5	;RP0=1, select bank1
  4901  0DC0  1303               	bcf	3,6	;RP1=0, select bank1
  4902  0DC1  1581               	bsf	1,3	;volatile
  4903                           
  4904                           ;MCU_B1.c: 1092: PS0 = 1;
  4905  0DC2  1401               	bsf	1,0	;volatile
  4906                           
  4907                           ;MCU_B1.c: 1093: PS1 = 1;
  4908  0DC3  1481               	bsf	1,1	;volatile
  4909                           
  4910                           ;MCU_B1.c: 1094: PS2 = 1;
  4911  0DC4  1501               	bsf	1,2	;volatile
  4912                           
  4913                           ;MCU_B1.c: 1098: WDT.Enable = 1;
  4914  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  4915  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  4916  0DC7  143E               	bsf	_WDT,0
  4917                           
  4918                           ;MCU_B1.c: 1099: WDT.Timer = 10;
  4919  0DC8  300A               	movlw	10
  4920  0DC9  00D9               	movwf	??_WDT_Set
  4921  0DCA  0859               	movf	??_WDT_Set,w
  4922  0DCB  00BF               	movwf	_WDT+1
  4923  0DCC  0008               	return
  4924  0DCD                     __end_of_WDT_Set:	
  4925                           
  4926                           	psect	text22
  4927  0DB1                     __ptext22:	
  4928 ;; *************** function _TMR1_Set *****************
  4929 ;; Defined at:
  4930 ;;		line 226 in file "../src/MCU_B1.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;		None               void
  4937 ;; Registers used:
  4938 ;;		wreg
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4944 ;;      Params:         0       0       0       0
  4945 ;;      Locals:         0       0       0       0
  4946 ;;      Temps:          0       0       0       0
  4947 ;;      Totals:         0       0       0       0
  4948 ;;Total ram usage:        0 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    3
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_Mcu_Initialization
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           
  4959                           ;psect for function _TMR1_Set
  4960  0DB1                     _TMR1_Set:	
  4961                           
  4962                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _TMR1_Set: [wreg]
  4966  0DB1  3041               	movlw	65
  4967  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0DB4  0090               	movwf	16	;volatile
  4970                           
  4971                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  4972  0DB5  30FA               	movlw	250
  4973  0DB6  008F               	movwf	15	;volatile
  4974                           
  4975                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  4976  0DB7  3038               	movlw	56
  4977  0DB8  008E               	movwf	14	;volatile
  4978                           
  4979                           ;MCU_B1.c: 230: TMR1IE = 1;
  4980  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  4981  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  4982  0DBB  140C               	bsf	12,0	;volatile
  4983                           
  4984                           ;MCU_B1.c: 231: PEIE = 1;
  4985  0DBC  170B               	bsf	11,6	;volatile
  4986                           
  4987                           ;MCU_B1.c: 232: GIE = 1;
  4988  0DBD  178B               	bsf	11,7	;volatile
  4989  0DBE  0008               	return
  4990  0DBF                     __end_of_TMR1_Set:	
  4991                           
  4992                           	psect	text23
  4993  0EC6                     __ptext23:	
  4994 ;; *************** function _IO_Set *****************
  4995 ;; Defined at:
  4996 ;;		line 60 in file "../src/MCU_B1.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		wreg, status,2
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5010 ;;      Params:         0       0       0       0
  5011 ;;      Locals:         0       0       0       0
  5012 ;;      Temps:          0       0       0       0
  5013 ;;      Totals:         0       0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    3
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_Mcu_Initialization
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _IO_Set
  5026  0EC6                     _IO_Set:	
  5027                           
  5028                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in _IO_Set: [wreg+status,2]
  5032  0EC6  30AF               	movlw	175
  5033  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  5034  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  5035  0EC9  0085               	movwf	5	;volatile
  5036                           
  5037                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5038  0ECA  3001               	movlw	1
  5039  0ECB  0086               	movwf	6	;volatile
  5040                           
  5041                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5042  0ECC  0187               	clrf	7	;volatile
  5043                           
  5044                           ;MCU_B1.c: 65: ANSELA = 0b10000111;;
  5045  0ECD  3087               	movlw	135
  5046  0ECE  1683               	bsf	3,5	;RP0=1, select bank3
  5047  0ECF  1703               	bsf	3,6	;RP1=1, select bank3
  5048  0ED0  0085               	movwf	5	;volatile
  5049                           
  5050                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5051  0ED1  3001               	movlw	1
  5052  0ED2  0086               	movwf	6	;volatile
  5053                           
  5054                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5055  0ED3  30AF               	movlw	175
  5056  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  5058  0ED6  0085               	movwf	5	;volatile
  5059                           
  5060                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5061  0ED7  3001               	movlw	1
  5062  0ED8  0086               	movwf	6	;volatile
  5063                           
  5064                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5065  0ED9  0187               	clrf	7	;volatile
  5066                           
  5067                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5068  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  5069  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  5070  0EDC  0195               	clrf	21	;volatile
  5071  0EDD  0008               	return
  5072  0EDE                     __end_of_IO_Set:	
  5073                           
  5074                           	psect	text24
  5075  0D21                     __ptext24:	
  5076 ;; *************** function _Fosc_Set *****************
  5077 ;; Defined at:
  5078 ;;		line 56 in file "../src/MCU_B1.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;		None               void
  5085 ;; Registers used:
  5086 ;;		wreg
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5092 ;;      Params:         0       0       0       0
  5093 ;;      Locals:         0       0       0       0
  5094 ;;      Temps:          0       0       0       0
  5095 ;;      Totals:         0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    3
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_Mcu_Initialization
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function _Fosc_Set
  5108  0D21                     _Fosc_Set:	
  5109                           
  5110                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _Fosc_Set: [wreg]
  5114  0D21  303C               	movlw	60
  5115  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  5116  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  5117  0D24  0090               	movwf	16	;volatile
  5118  0D25  0008               	return
  5119  0D26                     __end_of_Fosc_Set:	
  5120                           
  5121                           	psect	text25
  5122  0D34                     __ptext25:	
  5123 ;; *************** function _ADC_Set *****************
  5124 ;; Defined at:
  5125 ;;		line 425 in file "../src/MCU_B1.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;		None
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;		None
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		wreg
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5139 ;;      Params:         0       0       0       0
  5140 ;;      Locals:         0       0       0       0
  5141 ;;      Temps:          0       0       0       0
  5142 ;;      Totals:         0       0       0       0
  5143 ;;Total ram usage:        0 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    3
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_Mcu_Initialization
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _ADC_Set
  5155  0D34                     _ADC_Set:	
  5156                           
  5157                           ;MCU_B1.c: 426: ADCON1 = 0x73;
  5158                           
  5159                           ;incstack = 0
  5160                           ; Regs used in _ADC_Set: [wreg]
  5161  0D34  3073               	movlw	115
  5162  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  5163  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  5164  0D37  009F               	movwf	31	;volatile
  5165                           
  5166                           ;MCU_B1.c: 427: FVRCON = 0xc1;
  5167  0D38  30C1               	movlw	193
  5168  0D39  009D               	movwf	29	;volatile
  5169  0D3A  0008               	return
  5170  0D3B                     __end_of_ADC_Set:	
  5171                           
  5172                           	psect	text26
  5173  0D0F                     __ptext26:	
  5174 ;; *************** function _LED_Main *****************
  5175 ;; Defined at:
  5176 ;;		line 47 in file "../src/LED_B1.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5190 ;;      Params:         0       0       0       0
  5191 ;;      Locals:         0       0       0       0
  5192 ;;      Temps:          0       0       0       0
  5193 ;;      Totals:         0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    6
  5197 ;; This function calls:
  5198 ;;		_setPIRLED_Main
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _LED_Main
  5206  0D0F                     _LED_Main:	
  5207                           
  5208                           ;LED_B1.c: 50: setPIRLED_Main();
  5209                           
  5210                           ;incstack = 0
  5211                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5212  0D0F  118A  24EB         	fcall	_setPIRLED_Main
  5213  0D11  0008               	return
  5214  0D12                     __end_of_LED_Main:	
  5215                           
  5216                           	psect	text27
  5217  04EB                     __ptext27:	
  5218 ;; *************** function _setPIRLED_Main *****************
  5219 ;; Defined at:
  5220 ;;		line 253 in file "../src/LED_B1.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  count           1    5[BANK0 ] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5234 ;;      Params:         0       0       0       0
  5235 ;;      Locals:         0       1       0       0
  5236 ;;      Temps:          0       1       0       0
  5237 ;;      Totals:         0       2       0       0
  5238 ;;Total ram usage:        2 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    5
  5241 ;; This function calls:
  5242 ;;		_setLED
  5243 ;; This function is called by:
  5244 ;;		_LED_Main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _setPIRLED_Main
  5250  04EB                     _setPIRLED_Main:	
  5251                           
  5252                           ;LED_B1.c: 254: char count;
  5253                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5257  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  5258  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  5259  04ED  1C37               	btfss	_PIRLED,0
  5260  04EE  0008               	return
  5261                           
  5262                           ;LED_B1.c: 256: PIRLED.Time++;
  5263  04EF  3001               	movlw	1
  5264  04F0  07B9               	addwf	_PIRLED+2,f
  5265  04F1  1803               	skipnc
  5266  04F2  0ABA               	incf	_PIRLED+3,f
  5267  04F3  3000               	movlw	0
  5268  04F4  07BA               	addwf	_PIRLED+3,f
  5269                           
  5270                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 20) {
  5271  04F5  3000               	movlw	0
  5272  04F6  023A               	subwf	_PIRLED+3,w
  5273  04F7  3019               	movlw	25
  5274  04F8  1903               	skipnz
  5275  04F9  0239               	subwf	_PIRLED+2,w
  5276  04FA  1C03               	skipc
  5277  04FB  0008               	return
  5278                           
  5279                           ;LED_B1.c: 258: PIRLED.Time = 0;
  5280  04FC  01B9               	clrf	_PIRLED+2
  5281  04FD  01BA               	clrf	_PIRLED+3
  5282                           
  5283                           ;LED_B1.c: 259: setLED(1, 0);
  5284  04FE  01DB               	clrf	setLED@command
  5285  04FF  3001               	movlw	1
  5286  0500  118A  255C  118A   	fcall	_setLED
  5287                           
  5288                           ;LED_B1.c: 260: setLED(2, 0);
  5289  0503  1283               	bcf	3,5	;RP0=0, select bank0
  5290  0504  1303               	bcf	3,6	;RP1=0, select bank0
  5291  0505  01DB               	clrf	setLED@command
  5292  0506  3002               	movlw	2
  5293  0507  118A  255C  118A   	fcall	_setLED
  5294                           
  5295                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  5296  050A  1283               	bcf	3,5	;RP0=0, select bank0
  5297  050B  1303               	bcf	3,6	;RP1=0, select bank0
  5298  050C  1CB7               	btfss	_PIRLED,1
  5299  050D  2D12               	goto	l4472
  5300                           
  5301                           ;LED_B1.c: 262: count = 4;
  5302  050E  3004               	movlw	4
  5303  050F  00DD               	movwf	??_setPIRLED_Main
  5304  0510  085D               	movf	??_setPIRLED_Main,w
  5305  0511  00DE               	movwf	setPIRLED_Main@count
  5306  0512                     l4472:	
  5307                           
  5308                           ;LED_B1.c: 263: }
  5309                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  5310  0512  1D37               	btfss	_PIRLED,2
  5311  0513  2D18               	goto	l4476
  5312                           
  5313                           ;LED_B1.c: 265: count = 6;
  5314  0514  3006               	movlw	6
  5315  0515  00DD               	movwf	??_setPIRLED_Main
  5316  0516  085D               	movf	??_setPIRLED_Main,w
  5317  0517  00DE               	movwf	setPIRLED_Main@count
  5318  0518                     l4476:	
  5319                           
  5320                           ;LED_B1.c: 266: }
  5321                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  5322  0518  1DB7               	btfss	_PIRLED,3
  5323  0519  2D1E               	goto	l4480
  5324                           
  5325                           ;LED_B1.c: 268: count = 8;
  5326  051A  3008               	movlw	8
  5327  051B  00DD               	movwf	??_setPIRLED_Main
  5328  051C  085D               	movf	??_setPIRLED_Main,w
  5329  051D  00DE               	movwf	setPIRLED_Main@count
  5330  051E                     l4480:	
  5331                           
  5332                           ;LED_B1.c: 269: }
  5333                           ;LED_B1.c: 270: PIRLED.Count++;
  5334  051E  3001               	movlw	1
  5335  051F  00DD               	movwf	??_setPIRLED_Main
  5336  0520  085D               	movf	??_setPIRLED_Main,w
  5337  0521  07B8               	addwf	_PIRLED+1,f
  5338                           
  5339                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5340  0522  0838               	movf	_PIRLED+1,w
  5341  0523  3A01               	xorlw	1
  5342  0524  1903               	skipnz
  5343  0525  2D2A               	goto	l4486
  5344  0526  0838               	movf	_PIRLED+1,w
  5345  0527  3A02               	xorlw	2
  5346  0528  1D03               	skipz
  5347  0529  2D3E               	goto	l4490
  5348  052A                     l4486:	
  5349                           
  5350                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5351  052A  1003               	clrc
  5352  052B  1E37               	btfss	_PIRLED,4
  5353  052C  1403               	setc
  5354  052D  1C03               	btfss	3,0
  5355  052E  2D33               	goto	u5180
  5356  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5357  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5358  0531  1637               	bsf	_PIRLED,4
  5359  0532  2D36               	goto	l4488
  5360  0533                     u5180:	
  5361  0533  1283               	bcf	3,5	;RP0=0, select bank0
  5362  0534  1303               	bcf	3,6	;RP1=0, select bank0
  5363  0535  1237               	bcf	_PIRLED,4
  5364  0536                     l4488:	
  5365                           
  5366                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  5367  0536  3000               	movlw	0
  5368  0537  1A37               	btfsc	_PIRLED,4
  5369  0538  3001               	movlw	1
  5370  0539  00DB               	movwf	setLED@command
  5371  053A  3002               	movlw	2
  5372  053B  118A  255C         	fcall	_setLED
  5373                           
  5374                           ;LED_B1.c: 274: } else {
  5375  053D  0008               	return
  5376  053E                     l4490:	
  5377                           
  5378                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5379  053E  1003               	clrc
  5380  053F  1283               	bcf	3,5	;RP0=0, select bank0
  5381  0540  1303               	bcf	3,6	;RP1=0, select bank0
  5382  0541  1E37               	btfss	_PIRLED,4
  5383  0542  1403               	setc
  5384  0543  1C03               	btfss	3,0
  5385  0544  2D49               	goto	u5200
  5386  0545  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0546  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0547  1637               	bsf	_PIRLED,4
  5389  0548  2D4C               	goto	l4492
  5390  0549                     u5200:	
  5391  0549  1283               	bcf	3,5	;RP0=0, select bank0
  5392  054A  1303               	bcf	3,6	;RP1=0, select bank0
  5393  054B  1237               	bcf	_PIRLED,4
  5394  054C                     l4492:	
  5395                           
  5396                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  5397  054C  3000               	movlw	0
  5398  054D  1A37               	btfsc	_PIRLED,4
  5399  054E  3001               	movlw	1
  5400  054F  00DB               	movwf	setLED@command
  5401  0550  3001               	movlw	1
  5402  0551  118A  255C  118A   	fcall	_setLED
  5403                           
  5404                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  5405  0554  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0555  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0556  0838               	movf	_PIRLED+1,w
  5408  0557  065E               	xorwf	setPIRLED_Main@count,w
  5409  0558  1D03               	skipz
  5410  0559  0008               	return
  5411                           
  5412                           ;LED_B1.c: 278: PIRLED.Count = 0;
  5413  055A  01B8               	clrf	_PIRLED+1
  5414  055B  0008               	return
  5415  055C                     __end_of_setPIRLED_Main:	
  5416                           
  5417                           	psect	text28
  5418  0D6F                     __ptext28:	
  5419 ;; *************** function _LED_Initialization *****************
  5420 ;; Defined at:
  5421 ;;		line 31 in file "../src/LED_B1.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;		None               void
  5428 ;; Registers used:
  5429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5435 ;;      Params:         0       0       0       0
  5436 ;;      Locals:         0       0       0       0
  5437 ;;      Temps:          0       0       0       0
  5438 ;;      Totals:         0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    6
  5442 ;; This function calls:
  5443 ;;		_setLED_Initialization
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           
  5450                           ;psect for function _LED_Initialization
  5451  0D6F                     _LED_Initialization:	
  5452                           
  5453                           ;LED_B1.c: 33: setLED_Initialization(1);
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5457  0D6F  3001               	movlw	1
  5458  0D70  158A  261F  158A   	fcall	_setLED_Initialization
  5459                           
  5460                           ;LED_B1.c: 36: setLED_Initialization(2);
  5461  0D73  3002               	movlw	2
  5462  0D74  158A  261F  158A   	fcall	_setLED_Initialization
  5463                           
  5464                           ;LED_B1.c: 42: setLED_Initialization(99);
  5465  0D77  3063               	movlw	99
  5466  0D78  158A  261F         	fcall	_setLED_Initialization
  5467  0D7A  0008               	return
  5468  0D7B                     __end_of_LED_Initialization:	
  5469                           
  5470                           	psect	text29
  5471  0E1F                     __ptext29:	
  5472 ;; *************** function _setLED_Initialization *****************
  5473 ;; Defined at:
  5474 ;;		line 69 in file "../src/LED_B1.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  led             1    wreg     unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  led             1    4[BANK0 ] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;		None               void
  5481 ;; Registers used:
  5482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5488 ;;      Params:         0       0       0       0
  5489 ;;      Locals:         0       1       0       0
  5490 ;;      Temps:          0       0       0       0
  5491 ;;      Totals:         0       1       0       0
  5492 ;;Total ram usage:        1 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    5
  5495 ;; This function calls:
  5496 ;;		_LedPointSelect
  5497 ;;		_setLED
  5498 ;; This function is called by:
  5499 ;;		_LED_Initialization
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function _setLED_Initialization
  5505  0E1F                     _setLED_Initialization:	
  5506                           
  5507                           ;incstack = 0
  5508                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5509                           ;setLED_Initialization@led stored from wreg
  5510  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  5511  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  5512  0E21  00DD               	movwf	setLED_Initialization@led
  5513                           
  5514                           ;LED_B1.c: 70: LedPointSelect(led);
  5515  0E22  085D               	movf	setLED_Initialization@led,w
  5516  0E23  158A  2712  158A   	fcall	_LedPointSelect
  5517                           
  5518                           ;LED_B1.c: 71: LED->Enable = 1;
  5519  0E26  0873               	movf	_LED,w
  5520  0E27  0084               	movwf	4
  5521  0E28  1383               	bcf	3,7	;select IRP bank0
  5522  0E29  1400               	bsf	0,0
  5523                           
  5524                           ;LED_B1.c: 72: setLED(led, 0);
  5525  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5526  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5527  0E2C  01DB               	clrf	setLED@command
  5528  0E2D  085D               	movf	setLED_Initialization@led,w
  5529  0E2E  118A  255C         	fcall	_setLED
  5530  0E30  0008               	return
  5531  0E31                     __end_of_setLED_Initialization:	
  5532                           
  5533                           	psect	text30
  5534  030E                     __ptext30:	
  5535 ;; *************** function _Exception_Main *****************
  5536 ;; Defined at:
  5537 ;;		line 505 in file "../src/Main_B1.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  i               2   10[BANK0 ] int 
  5542 ;;  i               2    8[BANK0 ] int 
  5543 ;;  lights          1   12[BANK0 ] unsigned char 
  5544 ;;  error           1    7[BANK0 ] unsigned char 
  5545 ;;  count           1    6[BANK0 ] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;		None               void
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5555 ;;      Params:         0       0       0       0
  5556 ;;      Locals:         0       7       0       0
  5557 ;;      Temps:          0       1       0       0
  5558 ;;      Totals:         0       8       0       0
  5559 ;;Total ram usage:        8 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    5
  5562 ;; This function calls:
  5563 ;;		_getDimmerLights_Line
  5564 ;;		_getDimmerLights_Status
  5565 ;;		_getMain_All_Error_Status
  5566 ;;		_getMain_All_LightsStatus
  5567 ;;		_setDimmerLights_SwOff
  5568 ;;		_setLED
  5569 ;; This function is called by:
  5570 ;;		_main
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           
  5575                           ;psect for function _Exception_Main
  5576  030E                     _Exception_Main:	
  5577                           
  5578                           ;Main_B1.c: 506: char error = getMain_All_Error_Status(0);
  5579                           
  5580                           ;incstack = 0
  5581                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5582  030E  3000               	movlw	0
  5583  030F  158A  26DE  118A   	fcall	_getMain_All_Error_Status
  5584  0312  1283               	bcf	3,5	;RP0=0, select bank0
  5585  0313  1303               	bcf	3,6	;RP1=0, select bank0
  5586  0314  00DE               	movwf	??_Exception_Main
  5587  0315  085E               	movf	??_Exception_Main,w
  5588  0316  00E0               	movwf	Exception_Main@error
  5589                           
  5590                           ;Main_B1.c: 507: char lights = 0, count = 1;
  5591  0317  01E5               	clrf	Exception_Main@lights
  5592  0318  01DF               	clrf	Exception_Main@count
  5593  0319  0ADF               	incf	Exception_Main@count,f
  5594                           
  5595                           ;Main_B1.c: 508: if (myMain.Error_Run == 1) {
  5596  031A  1DAA               	btfss	_myMain+3,3
  5597  031B  2B28               	goto	l4952
  5598                           
  5599                           ;Main_B1.c: 509: if (error == 0) {
  5600  031C  08E0               	movf	Exception_Main@error,f
  5601  031D  1D03               	skipz
  5602  031E  0008               	return
  5603                           
  5604                           ;Main_B1.c: 510: myMain.Error_Run = 0;
  5605  031F  11AA               	bcf	_myMain+3,3
  5606                           
  5607                           ;Main_B1.c: 515: setLED(99, 10);
  5608  0320  300A               	movlw	10
  5609  0321  00DE               	movwf	??_Exception_Main
  5610  0322  085E               	movf	??_Exception_Main,w
  5611  0323  00DB               	movwf	setLED@command
  5612  0324  3063               	movlw	99
  5613  0325  118A  255C         	fcall	_setLED
  5614                           
  5615                           ;Main_B1.c: 517: }
  5616                           ;Main_B1.c: 518: } else {
  5617  0327  0008               	return
  5618  0328                     l4952:	
  5619                           
  5620                           ;Main_B1.c: 519: if (error != 0) {
  5621  0328  1283               	bcf	3,5	;RP0=0, select bank0
  5622  0329  1303               	bcf	3,6	;RP1=0, select bank0
  5623  032A  0860               	movf	Exception_Main@error,w
  5624  032B  1903               	btfsc	3,2
  5625  032C  0008               	return
  5626                           
  5627                           ;Main_B1.c: 520: myMain.Error_Run = 1;
  5628  032D  15AA               	bsf	_myMain+3,3
  5629                           
  5630                           ;Main_B1.c: 523: setLED(99, 11);
  5631  032E  300B               	movlw	11
  5632  032F  00DE               	movwf	??_Exception_Main
  5633  0330  085E               	movf	??_Exception_Main,w
  5634  0331  00DB               	movwf	setLED@command
  5635  0332  3063               	movlw	99
  5636  0333  118A  255C  118A   	fcall	_setLED
  5637                           
  5638                           ;Main_B1.c: 525: switch (error) {
  5639  0336  2BC4               	goto	l4996
  5640  0337                     l4958:	
  5641                           ;Main_B1.c: 526: case 2:
  5642                           
  5643                           
  5644                           ;Main_B1.c: 527: if (getMain_All_LightsStatus() == 1) {
  5645  0337  158A  257B  118A   	fcall	_getMain_All_LightsStatus
  5646                           
  5647                           ;Main_B1.c: 529: }
  5648                           ;Main_B1.c: 531: for (int i = 0; i < count; i++) {
  5649                           
  5650                           ;Main_B1.c: 528: ;;
  5651  033A  1283               	bcf	3,5	;RP0=0, select bank0
  5652  033B  1303               	bcf	3,6	;RP1=0, select bank0
  5653  033C  01E1               	clrf	Exception_Main@i
  5654  033D  01E2               	clrf	Exception_Main@i+1
  5655  033E                     l4970:	
  5656  033E  0862               	movf	Exception_Main@i+1,w
  5657  033F  3A80               	xorlw	128
  5658  0340  00DE               	movwf	??_Exception_Main
  5659  0341  3080               	movlw	128
  5660  0342  025E               	subwf	??_Exception_Main,w
  5661  0343  1D03               	skipz
  5662  0344  2B47               	goto	u6125
  5663  0345  085F               	movf	Exception_Main@count,w
  5664  0346  0261               	subwf	Exception_Main@i,w
  5665  0347                     u6125:	
  5666  0347  1803               	btfsc	3,0
  5667  0348  2B6A               	goto	u6120
  5668                           
  5669                           ;Main_B1.c: 533: if (getDimmerLights_Status(i + 1) == 1) {
  5670  0349  1283               	bcf	3,5	;RP0=0, select bank0
  5671  034A  1303               	bcf	3,6	;RP1=0, select bank0
  5672  034B  0861               	movf	Exception_Main@i,w
  5673  034C  3E01               	addlw	1
  5674  034D  158A  25EC  118A   	fcall	_getDimmerLights_Status
  5675  0350  3A01               	xorlw	1
  5676  0351  1D03               	skipz
  5677  0352  2B61               	goto	l4968
  5678                           
  5679                           ;Main_B1.c: 534: DimmerLights->SwFlag = 1;
  5680  0353  0872               	movf	_DimmerLights,w
  5681  0354  0084               	movwf	4
  5682  0355  1383               	bcf	3,7	;select IRP bank0
  5683  0356  1400               	bsf	0,0
  5684                           
  5685                           ;Main_B1.c: 535: DimmerLights->Status = 0;
  5686  0357  0A72               	incf	_DimmerLights,w
  5687  0358  0084               	movwf	4
  5688  0359  1000               	bcf	0,0
  5689                           
  5690                           ;Main_B1.c: 536: setDimmerLights_SwOff(i + 1);
  5691  035A  1283               	bcf	3,5	;RP0=0, select bank0
  5692  035B  1303               	bcf	3,6	;RP1=0, select bank0
  5693  035C  0861               	movf	Exception_Main@i,w
  5694  035D  3E01               	addlw	1
  5695  035E  158A  27D8  118A   	fcall	_setDimmerLights_SwOff
  5696  0361                     l4968:	
  5697  0361  3001               	movlw	1
  5698  0362  1283               	bcf	3,5	;RP0=0, select bank0
  5699  0363  1303               	bcf	3,6	;RP1=0, select bank0
  5700  0364  07E1               	addwf	Exception_Main@i,f
  5701  0365  1803               	skipnc
  5702  0366  0AE2               	incf	Exception_Main@i+1,f
  5703  0367  3000               	movlw	0
  5704  0368  07E2               	addwf	Exception_Main@i+1,f
  5705  0369  2B3E               	goto	l4970
  5706  036A                     u6120:	
  5707  036A  1283               	bcf	3,5	;RP0=0, select bank0
  5708  036B  1303               	bcf	3,6	;RP1=0, select bank0
  5709  036C  0008               	return
  5710  036D                     l4972:	
  5711                           ;Main_B1.c: 540: case 3:
  5712                           
  5713                           ;Main_B1.c: 537: }
  5714                           ;Main_B1.c: 538: }
  5715                           ;Main_B1.c: 539: break;
  5716                           
  5717                           
  5718                           ;Main_B1.c: 542: ;;
  5719                           ;Main_B1.c: 543: lights = getDimmerLights_Line();
  5720  036D  158A  25A3  118A   	fcall	_getDimmerLights_Line
  5721  0370  1283               	bcf	3,5	;RP0=0, select bank0
  5722  0371  1303               	bcf	3,6	;RP1=0, select bank0
  5723  0372  00DE               	movwf	??_Exception_Main
  5724  0373  085E               	movf	??_Exception_Main,w
  5725  0374  00E5               	movwf	Exception_Main@lights
  5726                           
  5727                           ;Main_B1.c: 544: if (lights == 0) {
  5728  0375  08E5               	movf	Exception_Main@lights,f
  5729  0376  1D03               	skipz
  5730  0377  2BA9               	goto	l4988
  5731                           
  5732                           ;Main_B1.c: 546: for (int i = 0; i < count; i++) {
  5733  0378  01E3               	clrf	Exception_Main@i_2601
  5734  0379  01E4               	clrf	Exception_Main@i_2601+1
  5735  037A                     l4986:	
  5736  037A  0864               	movf	Exception_Main@i_2601+1,w
  5737  037B  3A80               	xorlw	128
  5738  037C  00DE               	movwf	??_Exception_Main
  5739  037D  3080               	movlw	128
  5740  037E  025E               	subwf	??_Exception_Main,w
  5741  037F  1D03               	skipz
  5742  0380  2B83               	goto	u6155
  5743  0381  085F               	movf	Exception_Main@count,w
  5744  0382  0263               	subwf	Exception_Main@i_2601,w
  5745  0383                     u6155:	
  5746  0383  1803               	btfsc	3,0
  5747  0384  2BA6               	goto	u6150
  5748                           
  5749                           ;Main_B1.c: 548: if (getDimmerLights_Status(i + 1) == 1) {
  5750  0385  1283               	bcf	3,5	;RP0=0, select bank0
  5751  0386  1303               	bcf	3,6	;RP1=0, select bank0
  5752  0387  0863               	movf	Exception_Main@i_2601,w
  5753  0388  3E01               	addlw	1
  5754  0389  158A  25EC  118A   	fcall	_getDimmerLights_Status
  5755  038C  3A01               	xorlw	1
  5756  038D  1D03               	skipz
  5757  038E  2B9D               	goto	l4984
  5758                           
  5759                           ;Main_B1.c: 549: DimmerLights->SwFlag = 1;
  5760  038F  0872               	movf	_DimmerLights,w
  5761  0390  0084               	movwf	4
  5762  0391  1383               	bcf	3,7	;select IRP bank0
  5763  0392  1400               	bsf	0,0
  5764                           
  5765                           ;Main_B1.c: 550: DimmerLights->Status = 0;
  5766  0393  0A72               	incf	_DimmerLights,w
  5767  0394  0084               	movwf	4
  5768  0395  1000               	bcf	0,0
  5769                           
  5770                           ;Main_B1.c: 551: setDimmerLights_SwOff(i + 1);
  5771  0396  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0397  1303               	bcf	3,6	;RP1=0, select bank0
  5773  0398  0863               	movf	Exception_Main@i_2601,w
  5774  0399  3E01               	addlw	1
  5775  039A  158A  27D8  118A   	fcall	_setDimmerLights_SwOff
  5776  039D                     l4984:	
  5777  039D  3001               	movlw	1
  5778  039E  1283               	bcf	3,5	;RP0=0, select bank0
  5779  039F  1303               	bcf	3,6	;RP1=0, select bank0
  5780  03A0  07E3               	addwf	Exception_Main@i_2601,f
  5781  03A1  1803               	skipnc
  5782  03A2  0AE4               	incf	Exception_Main@i_2601+1,f
  5783  03A3  3000               	movlw	0
  5784  03A4  07E4               	addwf	Exception_Main@i_2601+1,f
  5785  03A5  2B7A               	goto	l4986
  5786  03A6                     u6150:	
  5787  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  5788  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  5789  03A8  0008               	return
  5790  03A9                     l4988:	
  5791                           ;Main_B1.c: 552: }
  5792                           ;Main_B1.c: 553: }
  5793                           ;Main_B1.c: 554: } else {
  5794                           
  5795                           
  5796                           ;Main_B1.c: 556: if (getDimmerLights_Status(lights) == 1) {
  5797  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  5798  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  5799  03AB  0865               	movf	Exception_Main@lights,w
  5800  03AC  158A  25EC  118A   	fcall	_getDimmerLights_Status
  5801  03AF  3A01               	xorlw	1
  5802  03B0  1903               	btfsc	3,2
  5803  03B1  2BB5               	goto	l4990
  5804  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  5805  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  5806  03B4  0008               	return
  5807  03B5                     l4990:	
  5808                           
  5809                           ;Main_B1.c: 558: DimmerLights->SwFlag = 1;
  5810  03B5  0872               	movf	_DimmerLights,w
  5811  03B6  0084               	movwf	4
  5812  03B7  1383               	bcf	3,7	;select IRP bank0
  5813  03B8  1400               	bsf	0,0
  5814                           
  5815                           ;Main_B1.c: 559: DimmerLights->Status = 0;
  5816  03B9  0A72               	incf	_DimmerLights,w
  5817  03BA  0084               	movwf	4
  5818  03BB  1000               	bcf	0,0
  5819                           
  5820                           ;Main_B1.c: 560: setDimmerLights_SwOff(lights);
  5821  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  5822  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  5823  03BE  0865               	movf	Exception_Main@lights,w
  5824  03BF  158A  27D8         	fcall	_setDimmerLights_SwOff
  5825  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  5826  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  5827  03C3  0008               	return
  5828  03C4                     l4996:	
  5829                           ;Main_B1.c: 564: }
  5830                           
  5831                           ;Main_B1.c: 561: }
  5832                           ;Main_B1.c: 562: }
  5833                           ;Main_B1.c: 563: break;
  5834                           
  5835  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  5836  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  5837  03C6  0860               	movf	Exception_Main@error,w
  5838                           
  5839                           ; Switch size 1, requested type "space"
  5840                           ; Number of cases is 2, Range of values is 2 to 3
  5841                           ; switch strategies available:
  5842                           ; Name         Instructions Cycles
  5843                           ; simple_byte            7     4 (average)
  5844                           ; direct_byte           14    10 (fixed)
  5845                           ; jumptable            263     9 (fixed)
  5846                           ;	Chosen strategy is simple_byte
  5847  03C7  3A02               	xorlw	2	; case 2
  5848  03C8  1903               	skipnz
  5849  03C9  2B37               	goto	l4958
  5850  03CA  3A01               	xorlw	1	; case 3
  5851  03CB  1903               	skipnz
  5852  03CC  2B6D               	goto	l4972
  5853  03CD  2BCF               	goto	l845
  5854  03CE  0008               	return
  5855  03CF                     l845:	
  5856  03CF  0008               	return
  5857  03D0                     __end_of_Exception_Main:	
  5858                           
  5859                           	psect	text31
  5860  055C                     __ptext31:	
  5861 ;; *************** function _setLED *****************
  5862 ;; Defined at:
  5863 ;;		line 76 in file "../src/LED_B1.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  led             1    wreg     unsigned char 
  5866 ;;  command         1    2[BANK0 ] unsigned char 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  led             1    3[BANK0 ] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;		None               void
  5871 ;; Registers used:
  5872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5878 ;;      Params:         0       1       0       0
  5879 ;;      Locals:         0       1       0       0
  5880 ;;      Temps:          0       0       0       0
  5881 ;;      Totals:         0       2       0       0
  5882 ;;Total ram usage:        2 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    4
  5885 ;; This function calls:
  5886 ;;		_LedPointSelect
  5887 ;; This function is called by:
  5888 ;;		_setLED_Initialization
  5889 ;;		_setPIRLED_Main
  5890 ;;		_Exception_Main
  5891 ;;		_PIR_Main
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           
  5896                           ;psect for function _setLED
  5897  055C                     _setLED:	
  5898                           
  5899                           ;incstack = 0
  5900                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5901                           ;setLED@led stored from wreg
  5902  055C  1283               	bcf	3,5	;RP0=0, select bank0
  5903  055D  1303               	bcf	3,6	;RP1=0, select bank0
  5904  055E  00DC               	movwf	setLED@led
  5905                           
  5906                           ;LED_B1.c: 77: LedPointSelect(led);
  5907  055F  085C               	movf	setLED@led,w
  5908  0560  158A  2712  118A   	fcall	_LedPointSelect
  5909                           
  5910                           ;LED_B1.c: 78: if (command == 0) {
  5911  0563  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0564  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0565  08DB               	movf	setLED@command,f
  5914  0566  1D03               	skipz
  5915  0567  2D75               	goto	l4214
  5916                           
  5917                           ;LED_B1.c: 80: if (led == 1) {
  5918  0568  085C               	movf	setLED@led,w
  5919  0569  3A01               	xorlw	1
  5920  056A  1D03               	skipz
  5921  056B  2D6D               	goto	l4206
  5922                           
  5923                           ;LED_B1.c: 84: RB4 = 1;
  5924  056C  1606               	bsf	6,4	;volatile
  5925  056D                     l4206:	
  5926                           
  5927                           ;LED_B1.c: 86: }
  5928                           ;LED_B1.c: 89: if (led == 2) {
  5929  056D  085C               	movf	setLED@led,w
  5930  056E  3A02               	xorlw	2
  5931  056F  1903               	btfsc	3,2
  5932                           
  5933                           ;LED_B1.c: 93: RB5 = 1;
  5934  0570  1686               	bsf	6,5	;volatile
  5935                           
  5936                           ;LED_B1.c: 95: }
  5937                           ;LED_B1.c: 107: if (led == 99) {
  5938  0571  085C               	movf	setLED@led,w
  5939  0572  3A63               	xorlw	99
  5940  0573  1903               	btfsc	3,2
  5941                           
  5942                           ;LED_B1.c: 111: RB3 = 1;
  5943  0574  1586               	bsf	6,3	;volatile
  5944  0575                     l4214:	
  5945                           
  5946                           ;LED_B1.c: 113: }
  5947                           ;LED_B1.c: 115: }
  5948                           ;LED_B1.c: 116: if (command == 1) {
  5949  0575  085B               	movf	setLED@command,w
  5950  0576  3A01               	xorlw	1
  5951  0577  1D03               	skipz
  5952  0578  2D86               	goto	l4228
  5953                           
  5954                           ;LED_B1.c: 118: if (led == 1) {
  5955  0579  085C               	movf	setLED@led,w
  5956  057A  3A01               	xorlw	1
  5957  057B  1D03               	skipz
  5958  057C  2D7E               	goto	l4220
  5959                           
  5960                           ;LED_B1.c: 122: RB4 = 0;
  5961  057D  1206               	bcf	6,4	;volatile
  5962  057E                     l4220:	
  5963                           
  5964                           ;LED_B1.c: 124: }
  5965                           ;LED_B1.c: 127: if (led == 2) {
  5966  057E  085C               	movf	setLED@led,w
  5967  057F  3A02               	xorlw	2
  5968  0580  1903               	btfsc	3,2
  5969                           
  5970                           ;LED_B1.c: 131: RB5 = 0;
  5971  0581  1286               	bcf	6,5	;volatile
  5972                           
  5973                           ;LED_B1.c: 133: }
  5974                           ;LED_B1.c: 145: if (led == 99) {
  5975  0582  085C               	movf	setLED@led,w
  5976  0583  3A63               	xorlw	99
  5977  0584  1903               	btfsc	3,2
  5978                           
  5979                           ;LED_B1.c: 149: RB3 = 0;
  5980  0585  1186               	bcf	6,3	;volatile
  5981  0586                     l4228:	
  5982                           
  5983                           ;LED_B1.c: 151: }
  5984                           ;LED_B1.c: 153: }
  5985                           ;LED_B1.c: 154: if (command == 10) {
  5986  0586  085B               	movf	setLED@command,w
  5987  0587  3A0A               	xorlw	10
  5988  0588  1D03               	skipz
  5989  0589  2DA1               	goto	l4246
  5990                           
  5991                           ;LED_B1.c: 155: LED->GO = 0;
  5992  058A  0873               	movf	_LED,w
  5993  058B  0084               	movwf	4
  5994  058C  1383               	bcf	3,7	;select IRP bank0
  5995  058D  1080               	bcf	0,1
  5996                           
  5997                           ;LED_B1.c: 156: LED->Time = 0;
  5998  058E  0A73               	incf	_LED,w
  5999  058F  0084               	movwf	4
  6000  0590  0180               	clrf	0
  6001  0591  0A84               	incf	4,f
  6002  0592  0180               	clrf	0
  6003                           
  6004                           ;LED_B1.c: 158: if (led == 1) {
  6005  0593  085C               	movf	setLED@led,w
  6006  0594  3A01               	xorlw	1
  6007  0595  1D03               	skipz
  6008  0596  2D99               	goto	l4238
  6009                           
  6010                           ;LED_B1.c: 162: RB4 = 1;
  6011  0597  1606               	bsf	6,4	;volatile
  6012                           
  6013                           ;LED_B1.c: 164: }
  6014  0598  2D9D               	goto	l4242
  6015  0599                     l4238:	
  6016                           
  6017                           ;LED_B1.c: 167: else if (led == 2) {
  6018  0599  085C               	movf	setLED@led,w
  6019  059A  3A02               	xorlw	2
  6020  059B  1903               	btfsc	3,2
  6021                           
  6022                           ;LED_B1.c: 171: RB5 = 1;
  6023  059C  1686               	bsf	6,5	;volatile
  6024  059D                     l4242:	
  6025                           
  6026                           ;LED_B1.c: 173: }
  6027                           ;LED_B1.c: 185: if (led == 99) {
  6028  059D  085C               	movf	setLED@led,w
  6029  059E  3A63               	xorlw	99
  6030  059F  1903               	btfsc	3,2
  6031                           
  6032                           ;LED_B1.c: 189: RB3 = 1;
  6033  05A0  1586               	bsf	6,3	;volatile
  6034  05A1                     l4246:	
  6035                           
  6036                           ;LED_B1.c: 191: }
  6037                           ;LED_B1.c: 193: }
  6038                           ;LED_B1.c: 194: if (command == 11) {
  6039  05A1  085B               	movf	setLED@command,w
  6040  05A2  3A0B               	xorlw	11
  6041  05A3  1D03               	skipz
  6042  05A4  2DA9               	goto	l4250
  6043                           
  6044                           ;LED_B1.c: 195: LED->GO = 1;
  6045  05A5  0873               	movf	_LED,w
  6046  05A6  0084               	movwf	4
  6047  05A7  1383               	bcf	3,7	;select IRP bank0
  6048  05A8  1480               	bsf	0,1
  6049  05A9                     l4250:	
  6050                           
  6051                           ;LED_B1.c: 196: }
  6052                           ;LED_B1.c: 198: if (command == 111) {
  6053  05A9  085B               	movf	setLED@command,w
  6054  05AA  3A6F               	xorlw	111
  6055  05AB  1D03               	skipz
  6056  05AC  2DC7               	goto	l4276
  6057                           
  6058                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6059  05AD  01B8               	clrf	_PIRLED+1
  6060                           
  6061                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6062  05AE  01B9               	clrf	_PIRLED+2
  6063  05AF  01BA               	clrf	_PIRLED+3
  6064                           
  6065                           ;LED_B1.c: 201: PIRLED.status = 0;
  6066  05B0  1237               	bcf	_PIRLED,4
  6067                           
  6068                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6069  05B1  1437               	bsf	_PIRLED,0
  6070                           
  6071                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6072  05B2  10B7               	bcf	_PIRLED,1
  6073                           
  6074                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6075  05B3  1137               	bcf	_PIRLED,2
  6076                           
  6077                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6078  05B4  11B7               	bcf	_PIRLED,3
  6079                           
  6080                           ;LED_B1.c: 206: if (led == 1) {
  6081  05B5  085C               	movf	setLED@led,w
  6082  05B6  3A01               	xorlw	1
  6083  05B7  1D03               	skipz
  6084  05B8  2DBB               	goto	l4268
  6085                           
  6086                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6087  05B9  14B7               	bsf	_PIRLED,1
  6088                           
  6089                           ;LED_B1.c: 208: } else if (led == 2) {
  6090  05BA  0008               	return
  6091  05BB                     l4268:	
  6092  05BB  085C               	movf	setLED@led,w
  6093  05BC  3A02               	xorlw	2
  6094  05BD  1D03               	skipz
  6095  05BE  2DC1               	goto	l4272
  6096                           
  6097                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6098  05BF  1537               	bsf	_PIRLED,2
  6099                           
  6100                           ;LED_B1.c: 210: } else if (led == 3) {
  6101  05C0  0008               	return
  6102  05C1                     l4272:	
  6103  05C1  085C               	movf	setLED@led,w
  6104  05C2  3A03               	xorlw	3
  6105  05C3  1D03               	skipz
  6106  05C4  0008               	return
  6107                           
  6108                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6109  05C5  15B7               	bsf	_PIRLED,3
  6110                           
  6111                           ;LED_B1.c: 212: }
  6112                           ;LED_B1.c: 213: } else if (command == 110) {
  6113  05C6  0008               	return
  6114  05C7                     l4276:	
  6115  05C7  085B               	movf	setLED@command,w
  6116  05C8  3A6E               	xorlw	110
  6117  05C9  1D03               	skipz
  6118  05CA  0008               	return
  6119                           
  6120                           ;LED_B1.c: 214: PIRLED.GO = 0;
  6121  05CB  1037               	bcf	_PIRLED,0
  6122  05CC  0008               	return
  6123  05CD                     __end_of_setLED:	
  6124                           
  6125                           	psect	text32
  6126  0F12                     __ptext32:	
  6127 ;; *************** function _LedPointSelect *****************
  6128 ;; Defined at:
  6129 ;;		line 7 in file "../src/LED_B1.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  led             1    wreg     unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  led             1    1[BANK0 ] unsigned char 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;		None               void
  6136 ;; Registers used:
  6137 ;;		wreg
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6143 ;;      Params:         0       0       0       0
  6144 ;;      Locals:         0       1       0       0
  6145 ;;      Temps:          0       1       0       0
  6146 ;;      Totals:         0       2       0       0
  6147 ;;Total ram usage:        2 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    3
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_setLED_Initialization
  6154 ;;		_setLED
  6155 ;;		_setLED_Main
  6156 ;; This function uses a non-reentrant model
  6157 ;;
  6158                           
  6159                           
  6160                           ;psect for function _LedPointSelect
  6161  0F12                     _LedPointSelect:	
  6162                           
  6163                           ;incstack = 0
  6164                           ; Regs used in _LedPointSelect: [wreg]
  6165                           ;LedPointSelect@led stored from wreg
  6166  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  6167  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  6168  0F14  00DA               	movwf	LedPointSelect@led
  6169                           
  6170                           ;LED_B1.c: 9: if (led == 1) {
  6171  0F15  085A               	movf	LedPointSelect@led,w
  6172  0F16  3A01               	xorlw	1
  6173  0F17  1D03               	skipz
  6174  0F18  2F1D               	goto	l482
  6175                           
  6176                           ;LED_B1.c: 10: LED = &VarLED1;
  6177  0F19  3051               	movlw	_VarLED1& (0+255)
  6178  0F1A  00D9               	movwf	??_LedPointSelect
  6179  0F1B  0859               	movf	??_LedPointSelect,w
  6180  0F1C  00F3               	movwf	_LED
  6181  0F1D                     l482:	
  6182                           
  6183                           ;LED_B1.c: 11: }
  6184                           ;LED_B1.c: 14: if (led == 2) {
  6185  0F1D  085A               	movf	LedPointSelect@led,w
  6186  0F1E  3A02               	xorlw	2
  6187  0F1F  1D03               	skipz
  6188  0F20  2F25               	goto	l483
  6189                           
  6190                           ;LED_B1.c: 15: LED = &VarLED2;
  6191  0F21  3055               	movlw	_VarLED2& (0+255)
  6192  0F22  00D9               	movwf	??_LedPointSelect
  6193  0F23  0859               	movf	??_LedPointSelect,w
  6194  0F24  00F3               	movwf	_LED
  6195  0F25                     l483:	
  6196                           
  6197                           ;LED_B1.c: 16: }
  6198                           ;LED_B1.c: 24: if (led == 99) {
  6199  0F25  085A               	movf	LedPointSelect@led,w
  6200  0F26  3A63               	xorlw	99
  6201  0F27  1D03               	skipz
  6202  0F28  0008               	return
  6203                           
  6204                           ;LED_B1.c: 25: LED = &VarErrLED;
  6205  0F29  304D               	movlw	_VarErrLED& (0+255)
  6206  0F2A  00D9               	movwf	??_LedPointSelect
  6207  0F2B  0859               	movf	??_LedPointSelect,w
  6208  0F2C  00F3               	movwf	_LED
  6209  0F2D  0008               	return
  6210  0F2E                     __end_of_LedPointSelect:	
  6211                           
  6212                           	psect	text33
  6213  0EDE                     __ptext33:	
  6214 ;; *************** function _getMain_All_Error_Status *****************
  6215 ;; Defined at:
  6216 ;;		line 424 in file "../src/Main_B1.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  command         1    wreg     unsigned char 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  command         1    1[BANK0 ] unsigned char 
  6221 ;;  status          1    4[BANK0 ] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      unsigned char 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6231 ;;      Params:         0       0       0       0
  6232 ;;      Locals:         0       4       0       0
  6233 ;;      Temps:          0       1       0       0
  6234 ;;      Totals:         0       5       0       0
  6235 ;;Total ram usage:        5 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    3
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_Exception_Main
  6242 ;;		_setTemp_Main
  6243 ;;		_PIR_Main
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _getMain_All_Error_Status
  6249  0EDE                     _getMain_All_Error_Status:	
  6250                           
  6251                           ;incstack = 0
  6252                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6253                           ;getMain_All_Error_Status@command stored from wreg
  6254  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  6255  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  6256  0EE0  00DA               	movwf	getMain_All_Error_Status@command
  6257                           
  6258                           ;Main_B1.c: 425: char status = 0;
  6259  0EE1  01DD               	clrf	getMain_All_Error_Status@status
  6260                           
  6261                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6262  0EE2  08DD               	movf	getMain_All_Error_Status@status,f
  6263  0EE3  1D03               	skipz
  6264  0EE4  2EF6               	goto	l814
  6265  0EE5  085A               	movf	getMain_All_Error_Status@command,w
  6266  0EE6  3A02               	xorlw	2
  6267  0EE7  1903               	skipnz
  6268  0EE8  2EF6               	goto	l814
  6269                           
  6270                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6271  0EE9  18C1               	btfsc	_Temp,1
  6272  0EEA  2EEE               	goto	l4300
  6273  0EEB  01DB               	clrf	_getMain_All_Error_Status$2590
  6274  0EEC  01DC               	clrf	_getMain_All_Error_Status$2590+1
  6275  0EED  2EF2               	goto	l818
  6276  0EEE                     l4300:	
  6277  0EEE  3002               	movlw	2
  6278  0EEF  00DB               	movwf	_getMain_All_Error_Status$2590
  6279  0EF0  3000               	movlw	0
  6280  0EF1  00DC               	movwf	_getMain_All_Error_Status$2590+1
  6281  0EF2                     l818:	
  6282  0EF2  085B               	movf	_getMain_All_Error_Status$2590,w
  6283  0EF3  00D9               	movwf	??_getMain_All_Error_Status
  6284  0EF4  0859               	movf	??_getMain_All_Error_Status,w
  6285  0EF5  00DD               	movwf	getMain_All_Error_Status@status
  6286  0EF6                     l814:	
  6287                           
  6288                           ;Main_B1.c: 438: }
  6289                           ;Main_B1.c: 461: return status;
  6290  0EF6  085D               	movf	getMain_All_Error_Status@status,w
  6291  0EF7  0008               	return
  6292  0EF8                     __end_of_getMain_All_Error_Status:	
  6293                           
  6294                           	psect	text34
  6295  0DA3                     __ptext34:	
  6296 ;; *************** function _getDimmerLights_Line *****************
  6297 ;; Defined at:
  6298 ;;		line 979 in file "../src/Dimmer_B1.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  line            1    0[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      unsigned char 
  6305 ;; Registers used:
  6306 ;;		wreg, status,2
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6312 ;;      Params:         0       0       0       0
  6313 ;;      Locals:         0       1       0       0
  6314 ;;      Temps:          0       0       0       0
  6315 ;;      Totals:         0       1       0       0
  6316 ;;Total ram usage:        1 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:    3
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_Exception_Main
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           
  6327                           ;psect for function _getDimmerLights_Line
  6328  0DA3                     _getDimmerLights_Line:	
  6329                           
  6330                           ;Dimmer_B1.c: 980: char line = 0;
  6331                           
  6332                           ;incstack = 0
  6333                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  6334  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  6336  0DA5  01D9               	clrf	getDimmerLights_Line@line
  6337                           
  6338                           ;Dimmer_B1.c: 982: if (DimmerLights1.Line == 1) {
  6339  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  6340  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  6341  0DA8  1CCF               	btfss	(_DimmerLights1^(0+128)+1),1
  6342  0DA9  2DAE               	goto	l4448
  6343                           
  6344                           ;Dimmer_B1.c: 983: line = 1;
  6345  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  6346  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  6347  0DAC  01D9               	clrf	getDimmerLights_Line@line
  6348  0DAD  0AD9               	incf	getDimmerLights_Line@line,f
  6349  0DAE                     l4448:	
  6350                           
  6351                           ;Dimmer_B1.c: 984: }
  6352                           ;Dimmer_B1.c: 996: return line;
  6353  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0DAF  0859               	movf	getDimmerLights_Line@line,w
  6355  0DB0  0008               	return
  6356  0DB1                     __end_of_getDimmerLights_Line:	
  6357                           
  6358                           	psect	text35
  6359  0D2D                     __ptext35:	
  6360 ;; *************** function _DimmerLights_Main *****************
  6361 ;; Defined at:
  6362 ;;		line 736 in file "../src/Dimmer_B1.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;		None               void
  6369 ;; Registers used:
  6370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6376 ;;      Params:         0       0       0       0
  6377 ;;      Locals:         0       0       0       0
  6378 ;;      Temps:          0       0       0       0
  6379 ;;      Totals:         0       0       0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    6
  6383 ;; This function calls:
  6384 ;;		_DimmerLights_PIR_Control
  6385 ;;		_setDimmerLights_Main
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _DimmerLights_Main
  6393  0D2D                     _DimmerLights_Main:	
  6394                           
  6395                           ;Dimmer_B1.c: 747: setDimmerLights_Main(1);
  6396                           
  6397                           ;incstack = 0
  6398                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6399  0D2D  3001               	movlw	1
  6400  0D2E  118A  25CD  158A   	fcall	_setDimmerLights_Main
  6401                           
  6402                           ;Dimmer_B1.c: 759: DimmerLights_PIR_Control();
  6403  0D31  118A  23D0         	fcall	_DimmerLights_PIR_Control
  6404  0D33  0008               	return
  6405  0D34                     __end_of_DimmerLights_Main:	
  6406                           
  6407                           	psect	text36
  6408  05CD                     __ptext36:	
  6409 ;; *************** function _setDimmerLights_Main *****************
  6410 ;; Defined at:
  6411 ;;		line 765 in file "../src/Dimmer_B1.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  lights          1    wreg     unsigned char 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  lights          1    9[BANK0 ] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;		None               void
  6418 ;; Registers used:
  6419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6425 ;;      Params:         0       0       0       0
  6426 ;;      Locals:         0       1       0       0
  6427 ;;      Temps:          0       0       0       0
  6428 ;;      Totals:         0       1       0       0
  6429 ;;Total ram usage:        1 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    5
  6432 ;; This function calls:
  6433 ;;		_DimmerLights_SelectPointer
  6434 ;;		_getDimmerLights_Allow_Condition
  6435 ;;		_getMain_All_LightsStatus
  6436 ;;		_setDimmerLights_Dimming
  6437 ;;		_setDimmerLights_OnOff
  6438 ;; This function is called by:
  6439 ;;		_DimmerLights_Main
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           
  6444                           ;psect for function _setDimmerLights_Main
  6445  05CD                     _setDimmerLights_Main:	
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6449                           ;setDimmerLights_Main@lights stored from wreg
  6450  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  6451  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  6452  05CF  00E2               	movwf	setDimmerLights_Main@lights
  6453                           
  6454                           ;Dimmer_B1.c: 767: DimmerLights_SelectPointer(lights);
  6455  05D0  0862               	movf	setDimmerLights_Main@lights,w
  6456  05D1  158A  254B  118A   	fcall	_DimmerLights_SelectPointer
  6457                           
  6458                           ;Dimmer_B1.c: 768: if (DimmerLights->Trigger == 1) {
  6459  05D4  0872               	movf	_DimmerLights,w
  6460  05D5  0084               	movwf	4
  6461  05D6  1383               	bcf	3,7	;select IRP bank0
  6462  05D7  1C80               	btfss	0,1
  6463  05D8  2DF9               	goto	l4384
  6464                           
  6465                           ;Dimmer_B1.c: 769: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6466  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  6467  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  6468  05DB  0862               	movf	setDimmerLights_Main@lights,w
  6469  05DC  158A  251C  118A   	fcall	_getDimmerLights_Allow_Condition
  6470  05DF  3800               	iorlw	0
  6471  05E0  1D03               	skipz
  6472  05E1  0008               	return
  6473                           
  6474                           ;Dimmer_B1.c: 770: DimmerLights->Trigger = 0;
  6475  05E2  0872               	movf	_DimmerLights,w
  6476  05E3  0084               	movwf	4
  6477  05E4  1383               	bcf	3,7	;select IRP bank0
  6478  05E5  1080               	bcf	0,1
  6479                           
  6480                           ;Dimmer_B1.c: 771: if (DimmerLights->Switch == 1) {
  6481  05E6  0872               	movf	_DimmerLights,w
  6482  05E7  0084               	movwf	4
  6483  05E8  1D00               	btfss	0,2
  6484  05E9  2DF2               	goto	l4382
  6485                           
  6486                           ;Dimmer_B1.c: 772: setDimmerLights_OnOff(lights, 1);
  6487  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  6488  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  6489  05EC  01DC               	clrf	setDimmerLights_OnOff@command
  6490  05ED  0ADC               	incf	setDimmerLights_OnOff@command,f
  6491  05EE  0862               	movf	setDimmerLights_Main@lights,w
  6492  05EF  118A  27A3         	fcall	_setDimmerLights_OnOff
  6493                           
  6494                           ;Dimmer_B1.c: 773: } else {
  6495  05F1  0008               	return
  6496  05F2                     l4382:	
  6497                           
  6498                           ;Dimmer_B1.c: 774: setDimmerLights_OnOff(lights, 0);
  6499  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  6500  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  6501  05F4  01DC               	clrf	setDimmerLights_OnOff@command
  6502  05F5  0862               	movf	setDimmerLights_Main@lights,w
  6503  05F6  118A  27A3         	fcall	_setDimmerLights_OnOff
  6504                           
  6505                           ;Dimmer_B1.c: 775: }
  6506                           ;Dimmer_B1.c: 776: }
  6507                           ;Dimmer_B1.c: 777: } else {
  6508  05F8  0008               	return
  6509  05F9                     l4384:	
  6510                           
  6511                           ;Dimmer_B1.c: 778: if (getMain_All_LightsStatus() == 1) {
  6512  05F9  158A  257B  118A   	fcall	_getMain_All_LightsStatus
  6513  05FC  3A01               	xorlw	1
  6514  05FD  1D03               	skipz
  6515  05FE  2E24               	goto	l4396
  6516                           
  6517                           ;Dimmer_B1.c: 779: if (DimmerLights->DimmingTrigger == 1) {
  6518  05FF  0872               	movf	_DimmerLights,w
  6519  0600  0084               	movwf	4
  6520  0601  1383               	bcf	3,7	;select IRP bank0
  6521  0602  1E00               	btfss	0,4
  6522  0603  0008               	return
  6523                           
  6524                           ;Dimmer_B1.c: 780: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6525  0604  1283               	bcf	3,5	;RP0=0, select bank0
  6526  0605  1303               	bcf	3,6	;RP1=0, select bank0
  6527  0606  0862               	movf	setDimmerLights_Main@lights,w
  6528  0607  158A  251C  118A   	fcall	_getDimmerLights_Allow_Condition
  6529  060A  3800               	iorlw	0
  6530  060B  1D03               	skipz
  6531  060C  0008               	return
  6532                           
  6533                           ;Dimmer_B1.c: 781: DimmerLights->DimmingTrigger = 0;
  6534  060D  0872               	movf	_DimmerLights,w
  6535  060E  0084               	movwf	4
  6536  060F  1383               	bcf	3,7	;select IRP bank0
  6537  0610  1200               	bcf	0,4
  6538                           
  6539                           ;Dimmer_B1.c: 782: if (DimmerLights->DimmingSwitch == 1) {
  6540  0611  0872               	movf	_DimmerLights,w
  6541  0612  0084               	movwf	4
  6542  0613  1E80               	btfss	0,5
  6543  0614  2E1D               	goto	l4394
  6544                           
  6545                           ;Dimmer_B1.c: 783: setDimmerLights_Dimming(lights, 1);
  6546  0615  1283               	bcf	3,5	;RP0=0, select bank0
  6547  0616  1303               	bcf	3,6	;RP1=0, select bank0
  6548  0617  01DF               	clrf	setDimmerLights_Dimming@status
  6549  0618  0ADF               	incf	setDimmerLights_Dimming@status,f
  6550  0619  0862               	movf	setDimmerLights_Main@lights,w
  6551  061A  158A  278B         	fcall	_setDimmerLights_Dimming
  6552                           
  6553                           ;Dimmer_B1.c: 784: } else {
  6554  061C  0008               	return
  6555  061D                     l4394:	
  6556                           
  6557                           ;Dimmer_B1.c: 785: setDimmerLights_Dimming(lights, 0);
  6558  061D  1283               	bcf	3,5	;RP0=0, select bank0
  6559  061E  1303               	bcf	3,6	;RP1=0, select bank0
  6560  061F  01DF               	clrf	setDimmerLights_Dimming@status
  6561  0620  0862               	movf	setDimmerLights_Main@lights,w
  6562  0621  158A  278B         	fcall	_setDimmerLights_Dimming
  6563                           
  6564                           ;Dimmer_B1.c: 786: }
  6565                           ;Dimmer_B1.c: 787: }
  6566                           ;Dimmer_B1.c: 788: }
  6567                           ;Dimmer_B1.c: 789: } else {
  6568  0623  0008               	return
  6569  0624                     l4396:	
  6570                           
  6571                           ;Dimmer_B1.c: 790: if (DimmerLights->DimmingTrigger == 1) {
  6572  0624  0872               	movf	_DimmerLights,w
  6573  0625  0084               	movwf	4
  6574  0626  1383               	bcf	3,7	;select IRP bank0
  6575  0627  1E00               	btfss	0,4
  6576  0628  0008               	return
  6577                           
  6578                           ;Dimmer_B1.c: 791: DimmerLights->DimmingTrigger = 0;
  6579  0629  0872               	movf	_DimmerLights,w
  6580  062A  0084               	movwf	4
  6581  062B  1200               	bcf	0,4
  6582  062C  0008               	return
  6583  062D                     __end_of_setDimmerLights_Main:	
  6584                           
  6585                           	psect	text37
  6586  07A3                     __ptext37:	
  6587 ;; *************** function _setDimmerLights_OnOff *****************
  6588 ;; Defined at:
  6589 ;;		line 799 in file "../src/Dimmer_B1.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  lights          1    wreg     unsigned char 
  6592 ;;  command         1    3[BANK0 ] unsigned char 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;  lights          1    4[BANK0 ] unsigned char 
  6595 ;; Return value:  Size  Location     Type
  6596 ;;		None               void
  6597 ;; Registers used:
  6598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6599 ;; Tracked objects:
  6600 ;;		On entry : 0/0
  6601 ;;		On exit  : 0/0
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6604 ;;      Params:         0       1       0       0
  6605 ;;      Locals:         0       1       0       0
  6606 ;;      Temps:          0       0       0       0
  6607 ;;      Totals:         0       2       0       0
  6608 ;;Total ram usage:        2 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    4
  6611 ;; This function calls:
  6612 ;;		_getCmd_Status
  6613 ;;		_getMain_All_LightsStatus
  6614 ;;		_setCmd_Status
  6615 ;;		_setDimmerIntr_ControlStatus
  6616 ;; This function is called by:
  6617 ;;		_setDimmerLights_Main
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           
  6622                           ;psect for function _setDimmerLights_OnOff
  6623  07A3                     _setDimmerLights_OnOff:	
  6624                           
  6625                           ;incstack = 0
  6626                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6627                           ;setDimmerLights_OnOff@lights stored from wreg
  6628  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  6629  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  6630  07A5  00DD               	movwf	setDimmerLights_OnOff@lights
  6631                           
  6632                           ;Dimmer_B1.c: 801: if (command == 1) {
  6633  07A6  085C               	movf	setDimmerLights_OnOff@command,w
  6634  07A7  3A01               	xorlw	1
  6635  07A8  1D03               	skipz
  6636  07A9  2FB4               	goto	l4172
  6637                           
  6638                           ;Dimmer_B1.c: 802: setDimmerIntr_ControlStatus(lights, 1);
  6639  07AA  01D9               	clrf	setDimmerIntr_ControlStatus@command
  6640  07AB  0AD9               	incf	setDimmerIntr_ControlStatus@command,f
  6641  07AC  085D               	movf	setDimmerLights_OnOff@lights,w
  6642  07AD  158A  2698  118A   	fcall	_setDimmerIntr_ControlStatus
  6643                           
  6644                           ;Dimmer_B1.c: 810: Dimmer.PIR_Open_Status = 1;
  6645  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  6646  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  6647  07B2  14AE               	bsf	_Dimmer+1,1
  6648                           
  6649                           ;Dimmer_B1.c: 830: } else if (command == 0) {
  6650  07B3  2FBC               	goto	l4176
  6651  07B4                     l4172:	
  6652  07B4  08DC               	movf	setDimmerLights_OnOff@command,f
  6653  07B5  1D03               	skipz
  6654  07B6  2FBC               	goto	l4176
  6655                           
  6656                           ;Dimmer_B1.c: 831: setDimmerIntr_ControlStatus(lights, 0);
  6657  07B7  01D9               	clrf	setDimmerIntr_ControlStatus@command
  6658  07B8  085D               	movf	setDimmerLights_OnOff@lights,w
  6659  07B9  158A  2698  118A   	fcall	_setDimmerIntr_ControlStatus
  6660  07BC                     l4176:	
  6661                           
  6662                           ;Dimmer_B1.c: 864: }
  6663                           ;Dimmer_B1.c: 867: ;;
  6664                           ;Dimmer_B1.c: 869: if (getCmd_Status(1) == 1) {
  6665  07BC  3001               	movlw	1
  6666  07BD  158A  25FD  118A   	fcall	_getCmd_Status
  6667  07C0  3A01               	xorlw	1
  6668  07C1  1D03               	skipz
  6669  07C2  0008               	return
  6670                           
  6671                           ;Dimmer_B1.c: 870: if (getMain_All_LightsStatus() == 0) {
  6672  07C3  158A  257B  118A   	fcall	_getMain_All_LightsStatus
  6673  07C6  3800               	iorlw	0
  6674  07C7  1D03               	skipz
  6675  07C8  0008               	return
  6676                           
  6677                           ;Dimmer_B1.c: 871: setCmd_Status(1, 0);
  6678  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  6679  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  6680  07CB  01D9               	clrf	setCmd_Status@cmd
  6681  07CC  3001               	movlw	1
  6682  07CD  158A  2682         	fcall	_setCmd_Status
  6683                           
  6684                           ;Dimmer_B1.c: 875: }
  6685                           ;Dimmer_B1.c: 876: } else {
  6686                           
  6687                           ;Dimmer_B1.c: 872: ;;
  6688                           ;Dimmer_B1.c: 873: ;;
  6689                           ;Dimmer_B1.c: 874: ;;
  6690  07CF  0008               	return
  6691  07D0                     __end_of_setDimmerLights_OnOff:	
  6692                           ;Dimmer_B1.c: 877: ;;
  6693                           
  6694                           
  6695                           	psect	text38
  6696  0E98                     __ptext38:	
  6697 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6698 ;; Defined at:
  6699 ;;		line 31 in file "../src/Dimmer_B1.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  lights          1    wreg     unsigned char 
  6702 ;;  command         1    0[BANK0 ] unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  lights          1    2[BANK0 ] unsigned char 
  6705 ;; Return value:  Size  Location     Type
  6706 ;;		None               void
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6714 ;;      Params:         0       1       0       0
  6715 ;;      Locals:         0       1       0       0
  6716 ;;      Temps:          0       1       0       0
  6717 ;;      Totals:         0       3       0       0
  6718 ;;Total ram usage:        3 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    3
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_setDimmerLights_OnOff
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           
  6729                           ;psect for function _setDimmerIntr_ControlStatus
  6730  0E98                     _setDimmerIntr_ControlStatus:	
  6731                           
  6732                           ;incstack = 0
  6733                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6734                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6735  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  6736  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  6737  0E9A  00DB               	movwf	setDimmerIntr_ControlStatus@lights
  6738                           
  6739                           ;Dimmer_B1.c: 33: if (lights == 1) {
  6740  0E9B  085B               	movf	setDimmerIntr_ControlStatus@lights,w
  6741  0E9C  3A01               	xorlw	1
  6742  0E9D  1D03               	skipz
  6743  0E9E  0008               	return
  6744                           
  6745                           ;Dimmer_B1.c: 34: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6746  0E9F  0859               	movf	setDimmerIntr_ControlStatus@command,w
  6747  0EA0  3A01               	xorlw	1
  6748  0EA1  3000               	movlw	0
  6749  0EA2  1903               	skipnz
  6750  0EA3  3001               	movlw	1
  6751  0EA4  00DA               	movwf	??_setDimmerIntr_ControlStatus
  6752  0EA5  0DDA               	rlf	??_setDimmerIntr_ControlStatus,f
  6753  0EA6  0DDA               	rlf	??_setDimmerIntr_ControlStatus,f
  6754  0EA7  0DDA               	rlf	??_setDimmerIntr_ControlStatus,f
  6755  0EA8  0820               	movf	_DimmerIntr1,w
  6756  0EA9  065A               	xorwf	??_setDimmerIntr_ControlStatus,w
  6757  0EAA  39F7               	andlw	-9
  6758  0EAB  065A               	xorwf	??_setDimmerIntr_ControlStatus,w
  6759  0EAC  00A0               	movwf	_DimmerIntr1
  6760  0EAD  0008               	return
  6761  0EAE                     __end_of_setDimmerIntr_ControlStatus:	
  6762                           
  6763                           	psect	text39
  6764  0E82                     __ptext39:	
  6765 ;; *************** function _setCmd_Status *****************
  6766 ;; Defined at:
  6767 ;;		line 596 in file "../src/Main_B1.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  number          1    wreg     unsigned char 
  6770 ;;  cmd             1    0[BANK0 ] unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  number          1    2[BANK0 ] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;		None               void
  6775 ;; Registers used:
  6776 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6782 ;;      Params:         0       1       0       0
  6783 ;;      Locals:         0       1       0       0
  6784 ;;      Temps:          0       1       0       0
  6785 ;;      Totals:         0       3       0       0
  6786 ;;Total ram usage:        3 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    3
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_setDimmerLights_OnOff
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _setCmd_Status
  6798  0E82                     _setCmd_Status:	
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6802                           ;setCmd_Status@number stored from wreg
  6803  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  6804  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  6805  0E84  00DB               	movwf	setCmd_Status@number
  6806                           
  6807                           ;Main_B1.c: 597: switch (number) {
  6808  0E85  2E92               	goto	l4118
  6809  0E86                     l4114:	
  6810                           ;Main_B1.c: 598: case 1:
  6811                           
  6812                           
  6813                           ;Main_B1.c: 599: Cmd.all_off = cmd == 1 ? 1 : 0;
  6814  0E86  0859               	movf	setCmd_Status@cmd,w
  6815  0E87  3A01               	xorlw	1
  6816  0E88  3000               	movlw	0
  6817  0E89  1903               	skipnz
  6818  0E8A  3001               	movlw	1
  6819  0E8B  00DA               	movwf	??_setCmd_Status
  6820  0E8C  0870               	movf	_Cmd,w
  6821  0E8D  065A               	xorwf	??_setCmd_Status,w
  6822  0E8E  39FE               	andlw	-2
  6823  0E8F  065A               	xorwf	??_setCmd_Status,w
  6824  0E90  00F0               	movwf	_Cmd
  6825                           
  6826                           ;Main_B1.c: 601: }
  6827                           
  6828                           ;Main_B1.c: 600: break;
  6829  0E91  0008               	return
  6830  0E92                     l4118:	
  6831  0E92  085B               	movf	setCmd_Status@number,w
  6832                           
  6833                           ; Switch size 1, requested type "space"
  6834                           ; Number of cases is 1, Range of values is 1 to 1
  6835                           ; switch strategies available:
  6836                           ; Name         Instructions Cycles
  6837                           ; simple_byte            4     3 (average)
  6838                           ; direct_byte           12    10 (fixed)
  6839                           ; jumptable            263     9 (fixed)
  6840                           ;	Chosen strategy is simple_byte
  6841  0E93  3A01               	xorlw	1	; case 1
  6842  0E94  1903               	skipnz
  6843  0E95  2E86               	goto	l4114
  6844  0E96  2E97               	goto	l851
  6845  0E97                     l851:	
  6846  0E97  0008               	return
  6847  0E98                     __end_of_setCmd_Status:	
  6848                           
  6849                           	psect	text40
  6850  0D7B                     __ptext40:	
  6851 ;; *************** function _getMain_All_LightsStatus *****************
  6852 ;; Defined at:
  6853 ;;		line 373 in file "../src/Main_B1.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  status          1    0[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6867 ;;      Params:         0       0       0       0
  6868 ;;      Locals:         0       1       0       0
  6869 ;;      Temps:          0       0       0       0
  6870 ;;      Totals:         0       1       0       0
  6871 ;;Total ram usage:        1 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    3
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_setDimmerLights_Main
  6878 ;;		_setDimmerLights_OnOff
  6879 ;;		_Exception_Main
  6880 ;;		_setTemp_Main
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           
  6885                           ;psect for function _getMain_All_LightsStatus
  6886  0D7B                     _getMain_All_LightsStatus:	
  6887                           
  6888                           ;Main_B1.c: 374: char status = 0;
  6889                           
  6890                           ;incstack = 0
  6891                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6892  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  6894  0D7D  01D9               	clrf	getMain_All_LightsStatus@status
  6895                           
  6896                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6897  0D7E  3000               	movlw	0
  6898  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  6899  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  6900  0D81  184F               	btfsc	(_DimmerLights1^(0+128)+1),0
  6901  0D82  3001               	movlw	1
  6902  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  6903  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  6904  0D85  00D9               	movwf	getMain_All_LightsStatus@status
  6905                           
  6906                           ;Main_B1.c: 420: return status;
  6907  0D86  0859               	movf	getMain_All_LightsStatus@status,w
  6908  0D87  0008               	return
  6909  0D88                     __end_of_getMain_All_LightsStatus:	
  6910                           
  6911                           	psect	text41
  6912  0DFD                     __ptext41:	
  6913 ;; *************** function _getCmd_Status *****************
  6914 ;; Defined at:
  6915 ;;		line 604 in file "../src/Main_B1.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  number          1    wreg     unsigned char 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  number          1    0[BANK0 ] unsigned char 
  6920 ;;  cmd             1    1[BANK0 ] unsigned char 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  1    wreg      unsigned char 
  6923 ;; Registers used:
  6924 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6930 ;;      Params:         0       0       0       0
  6931 ;;      Locals:         0       2       0       0
  6932 ;;      Temps:          0       0       0       0
  6933 ;;      Totals:         0       2       0       0
  6934 ;;Total ram usage:        2 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    3
  6937 ;; This function calls:
  6938 ;;		Nothing
  6939 ;; This function is called by:
  6940 ;;		_setDimmerLights_OnOff
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function _getCmd_Status
  6946  0DFD                     _getCmd_Status:	
  6947                           
  6948                           ;incstack = 0
  6949                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6950                           ;getCmd_Status@number stored from wreg
  6951  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  6952  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  6953  0DFF  00D9               	movwf	getCmd_Status@number
  6954                           
  6955                           ;Main_B1.c: 605: char cmd = 0;
  6956  0E00  01DA               	clrf	getCmd_Status@cmd
  6957                           
  6958                           ;Main_B1.c: 606: switch (number) {
  6959  0E01  2E07               	goto	l4106
  6960  0E02                     l4102:	
  6961                           ;Main_B1.c: 607: case 1:
  6962                           
  6963                           
  6964                           ;Main_B1.c: 608: cmd = Cmd.all_off == 1 ? 1 : 0;
  6965  0E02  3000               	movlw	0
  6966  0E03  1870               	btfsc	_Cmd,0
  6967  0E04  3001               	movlw	1
  6968  0E05  00DA               	movwf	getCmd_Status@cmd
  6969                           
  6970                           ;Main_B1.c: 610: }
  6971                           
  6972                           ;Main_B1.c: 609: break;
  6973  0E06  2E0C               	goto	l4108
  6974  0E07                     l4106:	
  6975  0E07  0859               	movf	getCmd_Status@number,w
  6976                           
  6977                           ; Switch size 1, requested type "space"
  6978                           ; Number of cases is 1, Range of values is 1 to 1
  6979                           ; switch strategies available:
  6980                           ; Name         Instructions Cycles
  6981                           ; simple_byte            4     3 (average)
  6982                           ; direct_byte           12    10 (fixed)
  6983                           ; jumptable            263     9 (fixed)
  6984                           ;	Chosen strategy is simple_byte
  6985  0E08  3A01               	xorlw	1	; case 1
  6986  0E09  1903               	skipnz
  6987  0E0A  2E02               	goto	l4102
  6988  0E0B  2E0C               	goto	l4108
  6989  0E0C                     l4108:	
  6990                           
  6991                           ;Main_B1.c: 611: return cmd;
  6992  0E0C  085A               	movf	getCmd_Status@cmd,w
  6993  0E0D  0008               	return
  6994  0E0E                     __end_of_getCmd_Status:	
  6995                           
  6996                           	psect	text42
  6997  0F8B                     __ptext42:	
  6998 ;; *************** function _setDimmerLights_Dimming *****************
  6999 ;; Defined at:
  7000 ;;		line 884 in file "../src/Dimmer_B1.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  lights          1    wreg     unsigned char 
  7003 ;;  status          1    6[BANK0 ] unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  lights          1    8[BANK0 ] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;		None               void
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7015 ;;      Params:         0       1       0       0
  7016 ;;      Locals:         0       1       0       0
  7017 ;;      Temps:          0       1       0       0
  7018 ;;      Totals:         0       3       0       0
  7019 ;;Total ram usage:        3 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    4
  7022 ;; This function calls:
  7023 ;;		_getDimmerIntr_DimmingValue
  7024 ;;		_setDimmerIntr_Dimming_Sw
  7025 ;;		_setDimmerIntr_MaxmumValue
  7026 ;; This function is called by:
  7027 ;;		_setDimmerLights_Main
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           
  7032                           ;psect for function _setDimmerLights_Dimming
  7033  0F8B                     _setDimmerLights_Dimming:	
  7034                           
  7035                           ;incstack = 0
  7036                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  7037                           ;setDimmerLights_Dimming@lights stored from wreg
  7038  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  7039  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  7040  0F8D  00E1               	movwf	setDimmerLights_Dimming@lights
  7041                           
  7042                           ;Dimmer_B1.c: 885: if (status == 1) {
  7043  0F8E  085F               	movf	setDimmerLights_Dimming@status,w
  7044  0F8F  3A01               	xorlw	1
  7045  0F90  1D03               	skipz
  7046  0F91  2F98               	goto	l4186
  7047                           
  7048                           ;Dimmer_B1.c: 886: setDimmerIntr_Dimming_Sw(lights, 1);
  7049  0F92  01D9               	clrf	setDimmerIntr_Dimming_Sw@command
  7050  0F93  0AD9               	incf	setDimmerIntr_Dimming_Sw@command,f
  7051  0F94  0861               	movf	setDimmerLights_Dimming@lights,w
  7052  0F95  158A  2644         	fcall	_setDimmerIntr_Dimming_Sw
  7053                           
  7054                           ;Dimmer_B1.c: 891: ;;
  7055                           ;Dimmer_B1.c: 892: } else if (status == 0) {
  7056  0F97  0008               	return
  7057  0F98                     l4186:	
  7058  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  7059  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  7060  0F9A  08DF               	movf	setDimmerLights_Dimming@status,f
  7061  0F9B  1D03               	skipz
  7062  0F9C  0008               	return
  7063                           
  7064                           ;Dimmer_B1.c: 893: setDimmerIntr_Dimming_Sw(lights, 0);
  7065  0F9D  01D9               	clrf	setDimmerIntr_Dimming_Sw@command
  7066  0F9E  0861               	movf	setDimmerLights_Dimming@lights,w
  7067  0F9F  158A  2644  158A   	fcall	_setDimmerIntr_Dimming_Sw
  7068                           
  7069                           ;Dimmer_B1.c: 900: setDimmerIntr_MaxmumValue(lights, getDimmerIntr_DimmingValue(lights))
      +                          ;
  7070  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  7071  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  7072  0FA4  0861               	movf	setDimmerLights_Dimming@lights,w
  7073  0FA5  158A  2595  158A   	fcall	_getDimmerIntr_DimmingValue
  7074  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  7075  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  7076  0FAA  00E0               	movwf	??_setDimmerLights_Dimming
  7077  0FAB  0860               	movf	??_setDimmerLights_Dimming,w
  7078  0FAC  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7079  0FAD  0861               	movf	setDimmerLights_Dimming@lights,w
  7080  0FAE  158A  2563         	fcall	_setDimmerIntr_MaxmumValue
  7081                           
  7082                           ;Dimmer_B1.c: 901: ;;
  7083                           ;Dimmer_B1.c: 911: ;;
  7084                           ;Dimmer_B1.c: 912: ;;
  7085  0FB0  0008               	return
  7086  0FB1                     __end_of_setDimmerLights_Dimming:	
  7087                           
  7088                           	psect	text43
  7089  0E44                     __ptext43:	
  7090 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  7091 ;; Defined at:
  7092 ;;		line 166 in file "../src/Dimmer_B1.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  lights          1    wreg     unsigned char 
  7095 ;;  command         1    0[BANK0 ] unsigned char 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  lights          1    2[BANK0 ] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;		None               void
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7107 ;;      Params:         0       1       0       0
  7108 ;;      Locals:         0       1       0       0
  7109 ;;      Temps:          0       1       0       0
  7110 ;;      Totals:         0       3       0       0
  7111 ;;Total ram usage:        3 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    3
  7114 ;; This function calls:
  7115 ;;		Nothing
  7116 ;; This function is called by:
  7117 ;;		_setDimmerLights_Dimming
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           
  7122                           ;psect for function _setDimmerIntr_Dimming_Sw
  7123  0E44                     _setDimmerIntr_Dimming_Sw:	
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  7127                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  7128  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  7129  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  7130  0E46  00DB               	movwf	setDimmerIntr_Dimming_Sw@lights
  7131                           
  7132                           ;Dimmer_B1.c: 168: if (lights == 1) {
  7133  0E47  085B               	movf	setDimmerIntr_Dimming_Sw@lights,w
  7134  0E48  3A01               	xorlw	1
  7135  0E49  1D03               	skipz
  7136  0E4A  0008               	return
  7137                           
  7138                           ;Dimmer_B1.c: 169: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  7139  0E4B  0859               	movf	setDimmerIntr_Dimming_Sw@command,w
  7140  0E4C  3A01               	xorlw	1
  7141  0E4D  3000               	movlw	0
  7142  0E4E  1903               	skipnz
  7143  0E4F  3001               	movlw	1
  7144  0E50  00DA               	movwf	??_setDimmerIntr_Dimming_Sw
  7145  0E51  0EDA               	swapf	??_setDimmerIntr_Dimming_Sw,f
  7146  0E52  0820               	movf	_DimmerIntr1,w
  7147  0E53  065A               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7148  0E54  39EF               	andlw	-17
  7149  0E55  065A               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7150  0E56  00A0               	movwf	_DimmerIntr1
  7151  0E57  0008               	return
  7152  0E58                     __end_of_setDimmerIntr_Dimming_Sw:	
  7153                           
  7154                           	psect	text44
  7155  0D95                     __ptext44:	
  7156 ;; *************** function _getDimmerIntr_DimmingValue *****************
  7157 ;; Defined at:
  7158 ;;		line 67 in file "../src/Dimmer_B1.c"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;  lights          1    wreg     unsigned char 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  lights          1    1[BANK0 ] unsigned char 
  7163 ;;  value           1    2[BANK0 ] unsigned char 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      unsigned char 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7173 ;;      Params:         0       0       0       0
  7174 ;;      Locals:         0       2       0       0
  7175 ;;      Temps:          0       1       0       0
  7176 ;;      Totals:         0       3       0       0
  7177 ;;Total ram usage:        3 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    3
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_setDimmerLights_Dimming
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           
  7188                           ;psect for function _getDimmerIntr_DimmingValue
  7189  0D95                     _getDimmerIntr_DimmingValue:	
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  7193                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  7194  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  7195  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  7196  0D97  00DA               	movwf	getDimmerIntr_DimmingValue@lights
  7197                           
  7198                           ;Dimmer_B1.c: 68: char value = 0;
  7199  0D98  01DB               	clrf	getDimmerIntr_DimmingValue@value
  7200                           
  7201                           ;Dimmer_B1.c: 70: if (lights == 1) {
  7202  0D99  085A               	movf	getDimmerIntr_DimmingValue@lights,w
  7203  0D9A  3A01               	xorlw	1
  7204  0D9B  1D03               	skipz
  7205  0D9C  2DA1               	goto	l253
  7206                           
  7207                           ;Dimmer_B1.c: 71: value = DimmerIntr1.DimmingValue;
  7208  0D9D  0824               	movf	_DimmerIntr1+4,w
  7209  0D9E  00D9               	movwf	??_getDimmerIntr_DimmingValue
  7210  0D9F  0859               	movf	??_getDimmerIntr_DimmingValue,w
  7211  0DA0  00DB               	movwf	getDimmerIntr_DimmingValue@value
  7212  0DA1                     l253:	
  7213                           
  7214                           ;Dimmer_B1.c: 72: }
  7215                           ;Dimmer_B1.c: 84: return value;
  7216  0DA1  085B               	movf	getDimmerIntr_DimmingValue@value,w
  7217  0DA2  0008               	return
  7218  0DA3                     __end_of_getDimmerIntr_DimmingValue:	
  7219                           
  7220                           	psect	text45
  7221  0D1C                     __ptext45:	
  7222 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7223 ;; Defined at:
  7224 ;;		line 917 in file "../src/Dimmer_B1.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  lights          1    wreg     unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  lights          1    0[COMMON] unsigned char 
  7229 ;;  allow           1    0[BANK0 ] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      unsigned char 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7239 ;;      Params:         0       0       0       0
  7240 ;;      Locals:         0       1       0       0
  7241 ;;      Temps:          0       0       0       0
  7242 ;;      Totals:         0       1       0       0
  7243 ;;Total ram usage:        1 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    3
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_setDimmerLights_Main
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _getDimmerLights_Allow_Condition
  7255  0D1C                     _getDimmerLights_Allow_Condition:	
  7256                           
  7257                           ;Dimmer_B1.c: 918: char allow = 0;
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7261  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  7262  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  7263  0D1E  01D9               	clrf	getDimmerLights_Allow_Condition@allow
  7264                           
  7265                           ;Dimmer_B1.c: 951: return allow;
  7266  0D1F  0859               	movf	getDimmerLights_Allow_Condition@allow,w
  7267  0D20  0008               	return
  7268  0D21                     __end_of_getDimmerLights_Allow_Condition:	
  7269                           
  7270                           	psect	text46
  7271  03D0                     __ptext46:	
  7272 ;; *************** function _DimmerLights_PIR_Control *****************
  7273 ;; Defined at:
  7274 ;;		line 1454 in file "../src/Dimmer_B1.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;		None               void
  7281 ;; Registers used:
  7282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7288 ;;      Params:         0       0       0       0
  7289 ;;      Locals:         0       0       0       0
  7290 ;;      Temps:          0       1       0       0
  7291 ;;      Totals:         0       1       0       0
  7292 ;;Total ram usage:        1 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    5
  7295 ;; This function calls:
  7296 ;;		_getDimmerLights_Status
  7297 ;;		_setDimmerIntr_DimmingValue
  7298 ;;		_setDimmerIntr_Dimming_RF
  7299 ;;		_setDimmerIntr_MaxmumValue
  7300 ;;		_setDimmerLights_SwOff
  7301 ;;		_setDimmerLights_SwOn
  7302 ;; This function is called by:
  7303 ;;		_DimmerLights_Main
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function _DimmerLights_PIR_Control
  7309  03D0                     _DimmerLights_PIR_Control:	
  7310                           
  7311                           ;Dimmer_B1.c: 1456: if (Dimmer.PIR_Trigger == 1) {
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7315  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  7316  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  7317  03D2  1EAD               	btfss	_Dimmer,5
  7318  03D3  2C41               	goto	l4428
  7319                           
  7320                           ;Dimmer_B1.c: 1457: Dimmer.PIR_Trigger = 0;
  7321  03D4  12AD               	bcf	_Dimmer,5
  7322                           
  7323                           ;Dimmer_B1.c: 1458: if (Dimmer.PIR_Sw == 1) {
  7324  03D5  1E2D               	btfss	_Dimmer,4
  7325  03D6  2C0D               	goto	l418
  7326                           
  7327                           ;Dimmer_B1.c: 1460: if (getDimmerLights_Status(1) == 0) {
  7328  03D7  3001               	movlw	1
  7329  03D8  158A  25EC  118A   	fcall	_getDimmerLights_Status
  7330  03DB  3800               	iorlw	0
  7331  03DC  1D03               	skipz
  7332  03DD  2BF1               	goto	l419
  7333                           
  7334                           ;Dimmer_B1.c: 1461: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.8)));
  7335  03DE  3048               	movlw	72
  7336  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  7337  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  7338  03E1  00DF               	movwf	??_DimmerLights_PIR_Control
  7339  03E2  085F               	movf	??_DimmerLights_PIR_Control,w
  7340  03E3  00D9               	movwf	setDimmerIntr_DimmingValue@value
  7341  03E4  3001               	movlw	1
  7342  03E5  158A  2557  118A   	fcall	_setDimmerIntr_DimmingValue
  7343                           
  7344                           ;Dimmer_B1.c: 1462: setDimmerLights_SwOn(1);
  7345  03E8  3001               	movlw	1
  7346  03E9  158A  2768  118A   	fcall	_setDimmerLights_SwOn
  7347                           
  7348                           ;Dimmer_B1.c: 1463: setDimmerLights_SwOff(1);
  7349  03EC  3001               	movlw	1
  7350  03ED  158A  27D8  118A   	fcall	_setDimmerLights_SwOff
  7351                           
  7352                           ;Dimmer_B1.c: 1464: } else {
  7353  03F0  2C41               	goto	l4428
  7354  03F1                     l419:	
  7355                           
  7356                           ;Dimmer_B1.c: 1465: if (Dimmer.PIR_Lights_Status == 1) {
  7357  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  7358  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  7359  03F3  1D2E               	btfss	_Dimmer+1,2
  7360  03F4  2C41               	goto	l4428
  7361                           
  7362                           ;Dimmer_B1.c: 1466: Dimmer.PIR_Lights_Status = 0;
  7363  03F5  112E               	bcf	_Dimmer+1,2
  7364                           
  7365                           ;Dimmer_B1.c: 1467: Dimmer.PIR_Close_Status = 0;
  7366  03F6  102E               	bcf	_Dimmer+1,0
  7367                           
  7368                           ;Dimmer_B1.c: 1468: DimmerLights1.Trigger = 0;
  7369  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  7370  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  7371  03F9  10CE               	bcf	_DimmerLights1^(0+128),1
  7372                           
  7373                           ;Dimmer_B1.c: 1470: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.8)));
  7374  03FA  3018               	movlw	24
  7375  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  7376  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  7377  03FD  00DF               	movwf	??_DimmerLights_PIR_Control
  7378  03FE  085F               	movf	??_DimmerLights_PIR_Control,w
  7379  03FF  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7380  0400  3001               	movlw	1
  7381  0401  158A  2563  118A   	fcall	_setDimmerIntr_MaxmumValue
  7382                           
  7383                           ;Dimmer_B1.c: 1471: setDimmerIntr_Dimming_RF(1, 1);
  7384  0404  1283               	bcf	3,5	;RP0=0, select bank0
  7385  0405  1303               	bcf	3,6	;RP1=0, select bank0
  7386  0406  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7387  0407  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7388  0408  3001               	movlw	1
  7389  0409  158A  266C  118A   	fcall	_setDimmerIntr_Dimming_RF
  7390                           
  7391                           ;Dimmer_B1.c: 1472: }
  7392                           ;Dimmer_B1.c: 1473: }
  7393                           ;Dimmer_B1.c: 1474: } else if (Dimmer.PIR_Sw == 0) {
  7394  040C  2C41               	goto	l4428
  7395  040D                     l418:	
  7396  040D  1A2D               	btfsc	_Dimmer,4
  7397  040E  2C41               	goto	l4428
  7398                           
  7399                           ;Dimmer_B1.c: 1475: if (getDimmerLights_Status(1) == 1) {
  7400  040F  3001               	movlw	1
  7401  0410  158A  25EC  118A   	fcall	_getDimmerLights_Status
  7402  0413  3A01               	xorlw	1
  7403  0414  1D03               	skipz
  7404  0415  2C41               	goto	l4428
  7405                           
  7406                           ;Dimmer_B1.c: 1476: if (Dimmer.PIR_Lights_Status == 0) {
  7407  0416  1283               	bcf	3,5	;RP0=0, select bank0
  7408  0417  1303               	bcf	3,6	;RP1=0, select bank0
  7409  0418  192E               	btfsc	_Dimmer+1,2
  7410  0419  2C2C               	goto	l4424
  7411                           
  7412                           ;Dimmer_B1.c: 1477: Dimmer.PIR_Lights_Status = 1;
  7413  041A  152E               	bsf	_Dimmer+1,2
  7414                           
  7415                           ;Dimmer_B1.c: 1478: setDimmerIntr_MaxmumValue(1, ((char)((100-(char)(((70-10)/2)+10))*0.
      +                          8)));
  7416  041B  3030               	movlw	48
  7417  041C  00DF               	movwf	??_DimmerLights_PIR_Control
  7418  041D  085F               	movf	??_DimmerLights_PIR_Control,w
  7419  041E  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7420  041F  3001               	movlw	1
  7421  0420  158A  2563  118A   	fcall	_setDimmerIntr_MaxmumValue
  7422                           
  7423                           ;Dimmer_B1.c: 1479: setDimmerIntr_Dimming_RF(1, 1);
  7424  0423  1283               	bcf	3,5	;RP0=0, select bank0
  7425  0424  1303               	bcf	3,6	;RP1=0, select bank0
  7426  0425  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7427  0426  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7428  0427  3001               	movlw	1
  7429  0428  158A  266C  118A   	fcall	_setDimmerIntr_Dimming_RF
  7430                           
  7431                           ;Dimmer_B1.c: 1480: } else {
  7432  042B  2C41               	goto	l4428
  7433  042C                     l4424:	
  7434                           
  7435                           ;Dimmer_B1.c: 1481: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.8)));
  7436  042C  3048               	movlw	72
  7437  042D  1283               	bcf	3,5	;RP0=0, select bank0
  7438  042E  1303               	bcf	3,6	;RP1=0, select bank0
  7439  042F  00DF               	movwf	??_DimmerLights_PIR_Control
  7440  0430  085F               	movf	??_DimmerLights_PIR_Control,w
  7441  0431  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7442  0432  3001               	movlw	1
  7443  0433  158A  2563  118A   	fcall	_setDimmerIntr_MaxmumValue
  7444                           
  7445                           ;Dimmer_B1.c: 1482: setDimmerIntr_Dimming_RF(1, 1);
  7446  0436  1283               	bcf	3,5	;RP0=0, select bank0
  7447  0437  1303               	bcf	3,6	;RP1=0, select bank0
  7448  0438  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7449  0439  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7450  043A  3001               	movlw	1
  7451  043B  158A  266C  118A   	fcall	_setDimmerIntr_Dimming_RF
  7452                           
  7453                           ;Dimmer_B1.c: 1483: Dimmer.PIR_Close_Status = 1;
  7454  043E  1283               	bcf	3,5	;RP0=0, select bank0
  7455  043F  1303               	bcf	3,6	;RP1=0, select bank0
  7456  0440  142E               	bsf	_Dimmer+1,0
  7457  0441                     l4428:	
  7458                           
  7459                           ;Dimmer_B1.c: 1484: }
  7460                           ;Dimmer_B1.c: 1485: }
  7461                           ;Dimmer_B1.c: 1486: }
  7462                           ;Dimmer_B1.c: 1487: }
  7463                           ;Dimmer_B1.c: 1488: if (Dimmer.PIR_Open_Status == 1) {
  7464  0441  1283               	bcf	3,5	;RP0=0, select bank0
  7465  0442  1303               	bcf	3,6	;RP1=0, select bank0
  7466  0443  1CAE               	btfss	_Dimmer+1,1
  7467  0444  2C56               	goto	l4434
  7468                           
  7469                           ;Dimmer_B1.c: 1489: Dimmer.PIR_Open_Status = 0;
  7470  0445  10AE               	bcf	_Dimmer+1,1
  7471                           
  7472                           ;Dimmer_B1.c: 1490: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.8)));
  7473  0446  3018               	movlw	24
  7474  0447  00DF               	movwf	??_DimmerLights_PIR_Control
  7475  0448  085F               	movf	??_DimmerLights_PIR_Control,w
  7476  0449  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7477  044A  3001               	movlw	1
  7478  044B  158A  2563  118A   	fcall	_setDimmerIntr_MaxmumValue
  7479                           
  7480                           ;Dimmer_B1.c: 1491: setDimmerIntr_Dimming_RF(1, 1);
  7481  044E  1283               	bcf	3,5	;RP0=0, select bank0
  7482  044F  1303               	bcf	3,6	;RP1=0, select bank0
  7483  0450  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7484  0451  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7485  0452  3001               	movlw	1
  7486  0453  158A  266C  118A   	fcall	_setDimmerIntr_Dimming_RF
  7487  0456                     l4434:	
  7488                           
  7489                           ;Dimmer_B1.c: 1492: }
  7490                           ;Dimmer_B1.c: 1493: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7491  0456  1283               	bcf	3,5	;RP0=0, select bank0
  7492  0457  1303               	bcf	3,6	;RP1=0, select bank0
  7493  0458  1C2E               	btfss	_Dimmer+1,0
  7494  0459  0008               	return
  7495  045A  1B20               	btfsc	_DimmerIntr1,6
  7496  045B  0008               	return
  7497                           
  7498                           ;Dimmer_B1.c: 1494: Dimmer.PIR_Close_Status = 0;
  7499  045C  102E               	bcf	_Dimmer+1,0
  7500                           
  7501                           ;Dimmer_B1.c: 1495: setDimmerLights_SwOn(1);
  7502  045D  3001               	movlw	1
  7503  045E  158A  2768  118A   	fcall	_setDimmerLights_SwOn
  7504                           
  7505                           ;Dimmer_B1.c: 1496: setDimmerLights_SwOff(1);
  7506  0461  3001               	movlw	1
  7507  0462  158A  27D8         	fcall	_setDimmerLights_SwOff
  7508  0464  0008               	return
  7509  0465                     __end_of_DimmerLights_PIR_Control:	
  7510                           
  7511                           	psect	text47
  7512  0F68                     __ptext47:	
  7513 ;; *************** function _setDimmerLights_SwOn *****************
  7514 ;; Defined at:
  7515 ;;		line 653 in file "../src/Dimmer_B1.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  sw              1    wreg     unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  sw              1    2[BANK0 ] unsigned char 
  7520 ;;  idle            1    3[BANK0 ] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;		None               void
  7523 ;; Registers used:
  7524 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7530 ;;      Params:         0       0       0       0
  7531 ;;      Locals:         0       2       0       0
  7532 ;;      Temps:          0       0       0       0
  7533 ;;      Totals:         0       2       0       0
  7534 ;;Total ram usage:        2 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    4
  7537 ;; This function calls:
  7538 ;;		_DimmerLights_SelectPointer
  7539 ;; This function is called by:
  7540 ;;		_DimmerLights_PIR_Control
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           
  7545                           ;psect for function _setDimmerLights_SwOn
  7546  0F68                     _setDimmerLights_SwOn:	
  7547                           
  7548                           ;incstack = 0
  7549                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7550                           ;setDimmerLights_SwOn@sw stored from wreg
  7551  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  7552  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  7553  0F6A  00DB               	movwf	setDimmerLights_SwOn@sw
  7554                           
  7555                           ;Dimmer_B1.c: 654: char idle = 0;
  7556  0F6B  01DC               	clrf	setDimmerLights_SwOn@idle
  7557                           
  7558                           ;Dimmer_B1.c: 679: DimmerLights_SelectPointer(sw);
  7559  0F6C  085B               	movf	setDimmerLights_SwOn@sw,w
  7560  0F6D  158A  254B  158A   	fcall	_DimmerLights_SelectPointer
  7561                           
  7562                           ;Dimmer_B1.c: 680: if (idle == 0) {
  7563  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  7564  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  7565  0F72  08DC               	movf	setDimmerLights_SwOn@idle,f
  7566  0F73  1D03               	skipz
  7567  0F74  0008               	return
  7568                           
  7569                           ;Dimmer_B1.c: 681: DimmerLights->SwFlag = 1;
  7570  0F75  0872               	movf	_DimmerLights,w
  7571  0F76  0084               	movwf	4
  7572  0F77  1383               	bcf	3,7	;select IRP bank0
  7573  0F78  1400               	bsf	0,0
  7574                           
  7575                           ;Dimmer_B1.c: 682: if (DimmerLights->Status == 0) {
  7576  0F79  0A72               	incf	_DimmerLights,w
  7577  0F7A  0084               	movwf	4
  7578  0F7B  1800               	btfsc	0,0
  7579  0F7C  2F87               	goto	l4146
  7580                           
  7581                           ;Dimmer_B1.c: 683: DimmerLights->Status = 1;
  7582  0F7D  0A72               	incf	_DimmerLights,w
  7583  0F7E  0084               	movwf	4
  7584  0F7F  1400               	bsf	0,0
  7585                           
  7586                           ;Dimmer_B1.c: 684: DimmerLights->Trigger = 1;
  7587  0F80  0872               	movf	_DimmerLights,w
  7588  0F81  0084               	movwf	4
  7589  0F82  1480               	bsf	0,1
  7590                           
  7591                           ;Dimmer_B1.c: 685: DimmerLights->Switch = 1;
  7592  0F83  0872               	movf	_DimmerLights,w
  7593  0F84  0084               	movwf	4
  7594  0F85  1500               	bsf	0,2
  7595                           
  7596                           ;Dimmer_B1.c: 686: } else {
  7597  0F86  0008               	return
  7598  0F87                     l4146:	
  7599                           
  7600                           ;Dimmer_B1.c: 687: DimmerLights->Status = 0;
  7601  0F87  0A72               	incf	_DimmerLights,w
  7602  0F88  0084               	movwf	4
  7603  0F89  1000               	bcf	0,0
  7604  0F8A  0008               	return
  7605  0F8B                     __end_of_setDimmerLights_SwOn:	
  7606                           ;Dimmer_B1.c: 688: }
  7607                           ;Dimmer_B1.c: 689: ;;
  7608                           
  7609                           
  7610                           	psect	text48
  7611  0FD8                     __ptext48:	
  7612 ;; *************** function _setDimmerLights_SwOff *****************
  7613 ;; Defined at:
  7614 ;;		line 694 in file "../src/Dimmer_B1.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  sw              1    wreg     unsigned char 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  sw              1    2[BANK0 ] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;		None               void
  7621 ;; Registers used:
  7622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7628 ;;      Params:         0       0       0       0
  7629 ;;      Locals:         0       1       0       0
  7630 ;;      Temps:          0       0       0       0
  7631 ;;      Totals:         0       1       0       0
  7632 ;;Total ram usage:        1 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    4
  7635 ;; This function calls:
  7636 ;;		_DimmerLights_SelectPointer
  7637 ;; This function is called by:
  7638 ;;		_DimmerLights_PIR_Control
  7639 ;;		_Exception_Main
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           
  7644                           ;psect for function _setDimmerLights_SwOff
  7645  0FD8                     _setDimmerLights_SwOff:	
  7646                           
  7647                           ;incstack = 0
  7648                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7649                           ;setDimmerLights_SwOff@sw stored from wreg
  7650  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  7651  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  7652  0FDA  00DB               	movwf	setDimmerLights_SwOff@sw
  7653                           
  7654                           ;Dimmer_B1.c: 695: DimmerLights_SelectPointer(sw);
  7655  0FDB  085B               	movf	setDimmerLights_SwOff@sw,w
  7656  0FDC  158A  254B  158A   	fcall	_DimmerLights_SelectPointer
  7657                           
  7658                           ;Dimmer_B1.c: 697: if (DimmerLights->SwFlag == 1) {
  7659  0FDF  0872               	movf	_DimmerLights,w
  7660  0FE0  0084               	movwf	4
  7661  0FE1  1383               	bcf	3,7	;select IRP bank0
  7662  0FE2  1C00               	btfss	0,0
  7663  0FE3  0008               	return
  7664                           
  7665                           ;Dimmer_B1.c: 698: DimmerLights->SwFlag = 0;
  7666  0FE4  0872               	movf	_DimmerLights,w
  7667  0FE5  0084               	movwf	4
  7668  0FE6  1000               	bcf	0,0
  7669                           
  7670                           ;Dimmer_B1.c: 699: if (DimmerLights->Status == 1) {
  7671  0FE7  0A72               	incf	_DimmerLights,w
  7672  0FE8  0084               	movwf	4
  7673  0FE9  1C00               	btfss	0,0
  7674  0FEA  2FF9               	goto	l4158
  7675                           
  7676                           ;Dimmer_B1.c: 700: if (DimmerLights->DimmingSwFlag == 1) {
  7677  0FEB  0872               	movf	_DimmerLights,w
  7678  0FEC  0084               	movwf	4
  7679  0FED  1D80               	btfss	0,3
  7680  0FEE  0008               	return
  7681                           
  7682                           ;Dimmer_B1.c: 701: DimmerLights->DimmingSwFlag = 0;
  7683  0FEF  0872               	movf	_DimmerLights,w
  7684  0FF0  0084               	movwf	4
  7685  0FF1  1180               	bcf	0,3
  7686                           
  7687                           ;Dimmer_B1.c: 703: DimmerLights->DimmingTrigger = 1;
  7688  0FF2  0872               	movf	_DimmerLights,w
  7689  0FF3  0084               	movwf	4
  7690  0FF4  1600               	bsf	0,4
  7691                           
  7692                           ;Dimmer_B1.c: 704: DimmerLights->DimmingSwitch = 0;
  7693  0FF5  0872               	movf	_DimmerLights,w
  7694  0FF6  0084               	movwf	4
  7695  0FF7  1280               	bcf	0,5
  7696                           
  7697                           ;Dimmer_B1.c: 705: }
  7698                           ;Dimmer_B1.c: 706: } else {
  7699  0FF8  0008               	return
  7700  0FF9                     l4158:	
  7701                           
  7702                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = 1;
  7703  0FF9  0872               	movf	_DimmerLights,w
  7704  0FFA  0084               	movwf	4
  7705  0FFB  1480               	bsf	0,1
  7706                           
  7707                           ;Dimmer_B1.c: 709: DimmerLights->Switch = 0;
  7708  0FFC  0872               	movf	_DimmerLights,w
  7709  0FFD  0084               	movwf	4
  7710  0FFE  1100               	bcf	0,2
  7711  0FFF  0008               	return
  7712  1000                     __end_of_setDimmerLights_SwOff:	
  7713                           
  7714                           	psect	text49
  7715  0D63                     __ptext49:	
  7716 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7717 ;; Defined at:
  7718 ;;		line 89 in file "../src/Dimmer_B1.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;  lights          1    wreg     unsigned char 
  7721 ;;  value           1    3[BANK0 ] unsigned char 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  lights          1    5[BANK0 ] unsigned char 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;		None               void
  7726 ;; Registers used:
  7727 ;;		wreg
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7733 ;;      Params:         0       1       0       0
  7734 ;;      Locals:         0       1       0       0
  7735 ;;      Temps:          0       1       0       0
  7736 ;;      Totals:         0       3       0       0
  7737 ;;Total ram usage:        3 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    3
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_setDimmerLights_Dimming
  7744 ;;		_DimmerLights_PIR_Control
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function _setDimmerIntr_MaxmumValue
  7750  0D63                     _setDimmerIntr_MaxmumValue:	
  7751                           
  7752                           ;incstack = 0
  7753                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7754                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7755  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  7756  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  7757  0D65  00DE               	movwf	setDimmerIntr_MaxmumValue@lights
  7758                           
  7759                           ;Dimmer_B1.c: 91: if (lights == 1) {
  7760  0D66  085E               	movf	setDimmerIntr_MaxmumValue@lights,w
  7761  0D67  3A01               	xorlw	1
  7762  0D68  1D03               	skipz
  7763  0D69  0008               	return
  7764                           
  7765                           ;Dimmer_B1.c: 92: DimmerIntr1.MaxmumValue = value;
  7766  0D6A  085C               	movf	setDimmerIntr_MaxmumValue@value,w
  7767  0D6B  00DD               	movwf	??_setDimmerIntr_MaxmumValue
  7768  0D6C  085D               	movf	??_setDimmerIntr_MaxmumValue,w
  7769  0D6D  00A5               	movwf	_DimmerIntr1+5
  7770  0D6E  0008               	return
  7771  0D6F                     __end_of_setDimmerIntr_MaxmumValue:	
  7772                           
  7773                           	psect	text50
  7774  0E6C                     __ptext50:	
  7775 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7776 ;; Defined at:
  7777 ;;		line 184 in file "../src/Dimmer_B1.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  lights          1    wreg     unsigned char 
  7780 ;;  command         1    0[BANK0 ] unsigned char 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  lights          1    2[BANK0 ] unsigned char 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;		None               void
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7792 ;;      Params:         0       1       0       0
  7793 ;;      Locals:         0       1       0       0
  7794 ;;      Temps:          0       1       0       0
  7795 ;;      Totals:         0       3       0       0
  7796 ;;Total ram usage:        3 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    3
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_DimmerLights_PIR_Control
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           
  7807                           ;psect for function _setDimmerIntr_Dimming_RF
  7808  0E6C                     _setDimmerIntr_Dimming_RF:	
  7809                           
  7810                           ;incstack = 0
  7811                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7812                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7813  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  7814  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  7815  0E6E  00DB               	movwf	setDimmerIntr_Dimming_RF@lights
  7816                           
  7817                           ;Dimmer_B1.c: 186: if (lights == 1) {
  7818  0E6F  085B               	movf	setDimmerIntr_Dimming_RF@lights,w
  7819  0E70  3A01               	xorlw	1
  7820  0E71  1D03               	skipz
  7821  0E72  0008               	return
  7822                           
  7823                           ;Dimmer_B1.c: 187: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7824  0E73  0859               	movf	setDimmerIntr_Dimming_RF@command,w
  7825  0E74  3A01               	xorlw	1
  7826  0E75  3000               	movlw	0
  7827  0E76  1903               	skipnz
  7828  0E77  3001               	movlw	1
  7829  0E78  00DA               	movwf	??_setDimmerIntr_Dimming_RF
  7830  0E79  0EDA               	swapf	??_setDimmerIntr_Dimming_RF,f
  7831  0E7A  0DDA               	rlf	??_setDimmerIntr_Dimming_RF,f
  7832  0E7B  0DDA               	rlf	??_setDimmerIntr_Dimming_RF,f
  7833  0E7C  0820               	movf	_DimmerIntr1,w
  7834  0E7D  065A               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7835  0E7E  39BF               	andlw	-65
  7836  0E7F  065A               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7837  0E80  00A0               	movwf	_DimmerIntr1
  7838  0E81  0008               	return
  7839  0E82                     __end_of_setDimmerIntr_Dimming_RF:	
  7840                           
  7841                           	psect	text51
  7842  0D57                     __ptext51:	
  7843 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7844 ;; Defined at:
  7845 ;;		line 49 in file "../src/Dimmer_B1.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  lights          1    wreg     unsigned char 
  7848 ;;  value           1    0[BANK0 ] unsigned char 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  lights          1    2[BANK0 ] unsigned char 
  7851 ;; Return value:  Size  Location     Type
  7852 ;;		None               void
  7853 ;; Registers used:
  7854 ;;		wreg
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7860 ;;      Params:         0       1       0       0
  7861 ;;      Locals:         0       1       0       0
  7862 ;;      Temps:          0       1       0       0
  7863 ;;      Totals:         0       3       0       0
  7864 ;;Total ram usage:        3 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:    3
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_DimmerLights_PIR_Control
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _setDimmerIntr_DimmingValue
  7876  0D57                     _setDimmerIntr_DimmingValue:	
  7877                           
  7878                           ;incstack = 0
  7879                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7880                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7881  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  7882  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  7883  0D59  00DB               	movwf	setDimmerIntr_DimmingValue@lights
  7884                           
  7885                           ;Dimmer_B1.c: 51: if (lights == 1) {
  7886  0D5A  085B               	movf	setDimmerIntr_DimmingValue@lights,w
  7887  0D5B  3A01               	xorlw	1
  7888  0D5C  1D03               	skipz
  7889  0D5D  0008               	return
  7890                           
  7891                           ;Dimmer_B1.c: 52: DimmerIntr1.DimmingValue = value;
  7892  0D5E  0859               	movf	setDimmerIntr_DimmingValue@value,w
  7893  0D5F  00DA               	movwf	??_setDimmerIntr_DimmingValue
  7894  0D60  085A               	movf	??_setDimmerIntr_DimmingValue,w
  7895  0D61  00A4               	movwf	_DimmerIntr1+4
  7896  0D62  0008               	return
  7897  0D63                     __end_of_setDimmerIntr_DimmingValue:	
  7898                           
  7899                           	psect	text52
  7900  0DEC                     __ptext52:	
  7901 ;; *************** function _getDimmerLights_Status *****************
  7902 ;; Defined at:
  7903 ;;		line 1007 in file "../src/Dimmer_B1.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  lights          1    wreg     unsigned char 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  lights          1    2[BANK0 ] unsigned char 
  7908 ;;  status          1    3[BANK0 ] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      unsigned char 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7918 ;;      Params:         0       0       0       0
  7919 ;;      Locals:         0       2       0       0
  7920 ;;      Temps:          0       0       0       0
  7921 ;;      Totals:         0       2       0       0
  7922 ;;Total ram usage:        2 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    4
  7925 ;; This function calls:
  7926 ;;		_DimmerLights_SelectPointer
  7927 ;; This function is called by:
  7928 ;;		_DimmerLights_PIR_Control
  7929 ;;		_Exception_Main
  7930 ;;		_PIR_Main
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           
  7935                           ;psect for function _getDimmerLights_Status
  7936  0DEC                     _getDimmerLights_Status:	
  7937                           
  7938                           ;incstack = 0
  7939                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7940                           ;getDimmerLights_Status@lights stored from wreg
  7941  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  7942  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  7943  0DEE  00DB               	movwf	getDimmerLights_Status@lights
  7944                           
  7945                           ;Dimmer_B1.c: 1008: DimmerLights_SelectPointer(lights);
  7946  0DEF  085B               	movf	getDimmerLights_Status@lights,w
  7947  0DF0  158A  254B         	fcall	_DimmerLights_SelectPointer
  7948                           
  7949                           ;Dimmer_B1.c: 1009: char status = DimmerLights->Status == 1 ? 1 : 0;
  7950  0DF2  0A72               	incf	_DimmerLights,w
  7951  0DF3  0084               	movwf	4
  7952  0DF4  3000               	movlw	0
  7953  0DF5  1383               	bcf	3,7	;select IRP bank0
  7954  0DF6  1800               	btfsc	0,0
  7955  0DF7  3001               	movlw	1
  7956  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  7957  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  7958  0DFA  00DC               	movwf	getDimmerLights_Status@status
  7959                           
  7960                           ;Dimmer_B1.c: 1010: return status;
  7961  0DFB  085C               	movf	getDimmerLights_Status@status,w
  7962  0DFC  0008               	return
  7963  0DFD                     __end_of_getDimmerLights_Status:	
  7964                           
  7965                           	psect	text53
  7966  0D4B                     __ptext53:	
  7967 ;; *************** function _DimmerLights_SelectPointer *****************
  7968 ;; Defined at:
  7969 ;;		line 576 in file "../src/Dimmer_B1.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;  lights          1    wreg     unsigned char 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  lights          1    1[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;		None               void
  7976 ;; Registers used:
  7977 ;;		wreg
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7983 ;;      Params:         0       0       0       0
  7984 ;;      Locals:         0       1       0       0
  7985 ;;      Temps:          0       1       0       0
  7986 ;;      Totals:         0       2       0       0
  7987 ;;Total ram usage:        2 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    3
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_setDimmerLights_SwOn
  7994 ;;		_setDimmerLights_SwOff
  7995 ;;		_setDimmerLights_Main
  7996 ;;		_getDimmerLights_Status
  7997 ;;		_setDimmerLights_DimmingOn
  7998 ;;		_setDimmerLights_Status
  7999 ;;		_setDimmerLights_DimmingRun
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           
  8004                           ;psect for function _DimmerLights_SelectPointer
  8005  0D4B                     _DimmerLights_SelectPointer:	
  8006                           
  8007                           ;incstack = 0
  8008                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  8009                           ;DimmerLights_SelectPointer@lights stored from wreg
  8010  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  8011  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  8012  0D4D  00DA               	movwf	DimmerLights_SelectPointer@lights
  8013                           
  8014                           ;Dimmer_B1.c: 578: if (lights == 1) {
  8015  0D4E  085A               	movf	DimmerLights_SelectPointer@lights,w
  8016  0D4F  3A01               	xorlw	1
  8017  0D50  1D03               	skipz
  8018  0D51  0008               	return
  8019                           
  8020                           ;Dimmer_B1.c: 579: DimmerLights = &DimmerLights1;
  8021  0D52  30CE               	movlw	_DimmerLights1& (0+255)
  8022  0D53  00D9               	movwf	??_DimmerLights_SelectPointer
  8023  0D54  0859               	movf	??_DimmerLights_SelectPointer,w
  8024  0D55  00F2               	movwf	_DimmerLights
  8025  0D56  0008               	return
  8026  0D57                     __end_of_DimmerLights_SelectPointer:	
  8027                           
  8028                           	psect	text54
  8029  0D26                     __ptext54:	
  8030 ;; *************** function _DimmerLights_Initialization *****************
  8031 ;; Defined at:
  8032 ;;		line 597 in file "../src/Dimmer_B1.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;		None               void
  8039 ;; Registers used:
  8040 ;;		wreg, status,2, status,0, pclath, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8046 ;;      Params:         0       0       0       0
  8047 ;;      Locals:         0       0       0       0
  8048 ;;      Temps:          0       0       0       0
  8049 ;;      Totals:         0       0       0       0
  8050 ;;Total ram usage:        0 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    4
  8053 ;; This function calls:
  8054 ;;		_DimmerIntr_Initialization
  8055 ;;		_setDimmerLights_Initialization
  8056 ;; This function is called by:
  8057 ;;		_main
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           
  8062                           ;psect for function _DimmerLights_Initialization
  8063  0D26                     _DimmerLights_Initialization:	
  8064                           
  8065                           ;Dimmer_B1.c: 599: setDimmerLights_Initialization(1);
  8066                           
  8067                           ;incstack = 0
  8068                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  8069  0D26  3001               	movlw	1
  8070  0D27  158A  250C  158A   	fcall	_setDimmerLights_Initialization
  8071                           
  8072                           ;Dimmer_B1.c: 609: DimmerIntr_Initialization();
  8073  0D2A  158A  2631         	fcall	_DimmerIntr_Initialization
  8074  0D2C  0008               	return
  8075  0D2D                     __end_of_DimmerLights_Initialization:	
  8076                           
  8077                           	psect	text55
  8078  0D0C                     __ptext55:	
  8079 ;; *************** function _setDimmerLights_Initialization *****************
  8080 ;; Defined at:
  8081 ;;		line 613 in file "../src/Dimmer_B1.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  lights          1    wreg     unsigned char 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  lights          1    0[COMMON] unsigned char 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;		None               void
  8088 ;; Registers used:
  8089 ;;		wreg
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8095 ;;      Params:         0       0       0       0
  8096 ;;      Locals:         0       0       0       0
  8097 ;;      Temps:          0       0       0       0
  8098 ;;      Totals:         0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    3
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_DimmerLights_Initialization
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           
  8110                           ;psect for function _setDimmerLights_Initialization
  8111  0D0C                     _setDimmerLights_Initialization:	
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  8115  0D0C  0008               	return
  8116  0D0D                     __end_of_setDimmerLights_Initialization:	
  8117                           
  8118                           	psect	text56
  8119  0E31                     __ptext56:	
  8120 ;; *************** function _DimmerIntr_Initialization *****************
  8121 ;; Defined at:
  8122 ;;		line 7 in file "../src/Dimmer_B1.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;		None               void
  8129 ;; Registers used:
  8130 ;;		wreg
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8136 ;;      Params:         0       0       0       0
  8137 ;;      Locals:         0       0       0       0
  8138 ;;      Temps:          0       1       0       0
  8139 ;;      Totals:         0       1       0       0
  8140 ;;Total ram usage:        1 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    3
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_DimmerLights_Initialization
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           
  8151                           ;psect for function _DimmerIntr_Initialization
  8152  0E31                     _DimmerIntr_Initialization:	
  8153                           
  8154                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  8155                           
  8156                           ;incstack = 0
  8157                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  8158  0E31  3007               	movlw	7
  8159  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  8160  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  8161  0E34  00D9               	movwf	??_DimmerIntr_Initialization
  8162  0E35  0859               	movf	??_DimmerIntr_Initialization,w
  8163  0E36  00A3               	movwf	_DimmerIntr1+3
  8164                           
  8165                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.8));
  8166  0E37  3018               	movlw	24
  8167  0E38  00D9               	movwf	??_DimmerIntr_Initialization
  8168  0E39  0859               	movf	??_DimmerIntr_Initialization,w
  8169  0E3A  00A5               	movwf	_DimmerIntr1+5
  8170                           
  8171                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.8));
  8172  0E3B  3048               	movlw	72
  8173  0E3C  00D9               	movwf	??_DimmerIntr_Initialization
  8174  0E3D  0859               	movf	??_DimmerIntr_Initialization,w
  8175  0E3E  00A6               	movwf	_DimmerIntr1+6
  8176                           
  8177                           ;Dimmer_B1.c: 13: DimmerIntr1.DimmingValue = ((char)((100-70)*0.8));
  8178  0E3F  3018               	movlw	24
  8179  0E40  00D9               	movwf	??_DimmerIntr_Initialization
  8180  0E41  0859               	movf	??_DimmerIntr_Initialization,w
  8181  0E42  00A4               	movwf	_DimmerIntr1+4
  8182  0E43  0008               	return
  8183  0E44                     __end_of_DimmerIntr_Initialization:	
  8184                           
  8185                           	psect	text57
  8186  076F                     __ptext57:	
  8187 ;; *************** function _CDS_Main *****************
  8188 ;; Defined at:
  8189 ;;		line 11 in file "../src/CDS_B1.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;		None               void
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8203 ;;      Params:         0       0       0       0
  8204 ;;      Locals:         0       0       0       0
  8205 ;;      Temps:          0       3       0       0
  8206 ;;      Totals:         0       3       0       0
  8207 ;;Total ram usage:        3 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:    3
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           
  8218                           ;psect for function _CDS_Main
  8219  076F                     _CDS_Main:	
  8220                           
  8221                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8222                           
  8223                           ;incstack = 0
  8224                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8225  076F  1283               	bcf	3,5	;RP0=0, select bank0
  8226  0770  1303               	bcf	3,6	;RP1=0, select bank0
  8227  0771  1C32               	btfss	__CDS,0
  8228  0772  0008               	return
  8229                           
  8230                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8231  0773  18B2               	btfsc	__CDS,1
  8232  0774  2F82               	goto	l123
  8233                           
  8234                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8235  0775  19B2               	btfsc	__CDS,3
  8236  0776  0008               	return
  8237                           
  8238                           ;CDS_B1.c: 16: _CDS.Time++;
  8239  0777  3001               	movlw	1
  8240  0778  00D9               	movwf	??_CDS_Main
  8241  0779  0859               	movf	??_CDS_Main,w
  8242  077A  07B3               	addwf	__CDS+1,f
  8243                           
  8244                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8245  077B  3005               	movlw	5
  8246  077C  0233               	subwf	__CDS+1,w
  8247  077D  1C03               	skipc
  8248  077E  0008               	return
  8249                           
  8250                           ;CDS_B1.c: 18: {
  8251                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8252  077F  01B3               	clrf	__CDS+1
  8253                           
  8254                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8255  0780  15B2               	bsf	__CDS,3
  8256                           
  8257                           ;CDS_B1.c: 21: }
  8258                           ;CDS_B1.c: 22: }
  8259                           ;CDS_B1.c: 23: } else {
  8260  0781  0008               	return
  8261  0782                     l123:	
  8262                           
  8263                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8264  0782  1CB2               	btfss	__CDS,1
  8265  0783  0008               	return
  8266                           
  8267                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8268  0784  10B2               	bcf	__CDS,1
  8269                           
  8270                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8271  0785  1A32               	btfsc	__CDS,4
  8272  0786  2F8D               	goto	l4638
  8273                           
  8274                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8275  0787  0834               	movf	__CDS+2,w
  8276  0788  0235               	subwf	__CDS+3,w
  8277  0789  1C03               	skipc
  8278  078A  0008               	return
  8279                           
  8280                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8281  078B  1632               	bsf	__CDS,4
  8282                           
  8283                           ;CDS_B1.c: 29: }
  8284                           ;CDS_B1.c: 30: } else {
  8285  078C  0008               	return
  8286  078D                     l4638:	
  8287                           
  8288                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8289  078D  0834               	movf	__CDS+2,w
  8290  078E  3E9C               	addlw	156
  8291  078F  00D9               	movwf	??_CDS_Main
  8292  0790  30FF               	movlw	255
  8293  0791  1803               	skipnc
  8294  0792  3000               	movlw	0
  8295  0793  00DA               	movwf	??_CDS_Main+1
  8296  0794  085A               	movf	??_CDS_Main+1,w
  8297  0795  3A80               	xorlw	128
  8298  0796  00DB               	movwf	??_CDS_Main+2
  8299  0797  3080               	movlw	128
  8300  0798  025B               	subwf	??_CDS_Main+2,w
  8301  0799  1D03               	skipz
  8302  079A  2F9D               	goto	u5505
  8303  079B  0835               	movf	__CDS+3,w
  8304  079C  0259               	subwf	??_CDS_Main,w
  8305  079D                     u5505:	
  8306  079D  1C03               	skipc
  8307  079E  0008               	return
  8308                           
  8309                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8310  079F  1283               	bcf	3,5	;RP0=0, select bank0
  8311  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  8312  07A1  1232               	bcf	__CDS,4
  8313  07A2  0008               	return
  8314  07A3                     __end_of_CDS_Main:	
  8315                           
  8316                           	psect	text58
  8317  0D18                     __ptext58:	
  8318 ;; *************** function _CDS_Initialization *****************
  8319 ;; Defined at:
  8320 ;;		line 7 in file "../src/CDS_B1.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;		None               void
  8327 ;; Registers used:
  8328 ;;		None
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8334 ;;      Params:         0       0       0       0
  8335 ;;      Locals:         0       0       0       0
  8336 ;;      Temps:          0       0       0       0
  8337 ;;      Totals:         0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    3
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_main
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           
  8349                           ;psect for function _CDS_Initialization
  8350  0D18                     _CDS_Initialization:	
  8351                           
  8352                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8353                           
  8354                           ;incstack = 0
  8355                           ; Regs used in _CDS_Initialization: []
  8356  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  8357  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  8358  0D1A  1432               	bsf	__CDS,0
  8359  0D1B  0008               	return
  8360  0D1C                     __end_of_CDS_Initialization:	
  8361                           
  8362                           	psect	text59
  8363  0EAE                     __ptext59:	
  8364 ;; *************** function _ISR *****************
  8365 ;; Defined at:
  8366 ;;		line 116 in file "../src/MCU_B1.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;		None
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;		None               void
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8380 ;;      Params:         0       0       0       0
  8381 ;;      Locals:         0       0       0       0
  8382 ;;      Temps:          4       0       0       0
  8383 ;;      Totals:         4       0       0       0
  8384 ;;Total ram usage:        4 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    2
  8387 ;; This function calls:
  8388 ;;		_TMR1_ISR
  8389 ;; This function is called by:
  8390 ;;		Interrupt level 1
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function _ISR
  8396  0EAE                     _ISR:	
  8397                           
  8398                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8399  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  8400  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  8401  0EB0  1C0C               	btfss	12,0	;volatile
  8402  0EB1  2EB9               	goto	i1l665
  8403  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  8404  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  8405  0EB4  1C0C               	btfss	12,0	;volatile
  8406  0EB5  2EB9               	goto	i1l665
  8407                           
  8408                           ;MCU_B1.c: 126: TMR1_ISR();
  8409  0EB6  158A  274A  158A   	fcall	_TMR1_ISR
  8410  0EB9                     i1l665:	
  8411                           ;MCU_B1.c: 127: }
  8412                           ;MCU_B1.c: 148: return;
  8413                           
  8414  0EB9  0879               	movf	??_ISR+3,w
  8415  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  8416  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  8417  0EBC  00FF               	movwf	127
  8418  0EBD  0878               	movf	??_ISR+2,w
  8419  0EBE  008A               	movwf	10
  8420  0EBF  0877               	movf	??_ISR+1,w
  8421  0EC0  0084               	movwf	4
  8422  0EC1  0E76               	swapf	??_ISR^(0+-128),w
  8423  0EC2  0083               	movwf	3
  8424  0EC3  0EFE               	swapf	126,f
  8425  0EC4  0E7E               	swapf	126,w
  8426  0EC5  0009               	retfie
  8427  0EC6                     __end_of_ISR:	
  8428                           
  8429                           	psect	intentry
  8430  0004                     __pintentry:	
  8431                           ;incstack = 0
  8432                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8433                           
  8434  0004                     interrupt_function:	
  8435  007E                     saved_w	set	btemp
  8436  0004  00FE               	movwf	btemp
  8437  0005  0E03               	swapf	3,w
  8438  0006  00F6               	movwf	??_ISR
  8439  0007  0804               	movf	4,w
  8440  0008  00F7               	movwf	??_ISR+1
  8441  0009  080A               	movf	10,w
  8442  000A  00F8               	movwf	??_ISR+2
  8443  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8444  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8445  000D  087F               	movf	btemp+1,w
  8446  000E  00F9               	movwf	??_ISR+3
  8447  000F  158A  2EAE         	ljmp	_ISR
  8448                           
  8449                           	psect	text60
  8450  0F4A                     __ptext60:	
  8451 ;; *************** function _TMR1_ISR *****************
  8452 ;; Defined at:
  8453 ;;		line 236 in file "../src/MCU_B1.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;		None               void
  8460 ;; Registers used:
  8461 ;;		wreg, status,2, status,0, pclath, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8467 ;;      Params:         0       0       0       0
  8468 ;;      Locals:         0       0       0       0
  8469 ;;      Temps:          0       0       0       0
  8470 ;;      Totals:         0       0       0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    1
  8474 ;; This function calls:
  8475 ;;		_DimmerLights_IOC_1
  8476 ;;		_DimmerLights_TMR_1
  8477 ;; This function is called by:
  8478 ;;		_ISR
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           
  8483                           ;psect for function _TMR1_ISR
  8484  0F4A                     _TMR1_ISR:	
  8485                           
  8486                           ;MCU_B1.c: 238: TMR1H = (int)((65536-1480)/256);
  8487                           
  8488                           ;incstack = 0
  8489                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8490  0F4A  30FA               	movlw	250
  8491  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  8492  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  8493  0F4D  008F               	movwf	15	;volatile
  8494                           
  8495                           ;MCU_B1.c: 239: TMR1L = (int)((65536-1480)%256);
  8496  0F4E  3038               	movlw	56
  8497  0F4F  008E               	movwf	14	;volatile
  8498                           
  8499                           ;MCU_B1.c: 240: TMR1IF = 0;
  8500  0F50  100C               	bcf	12,0	;volatile
  8501                           
  8502                           ;MCU_B1.c: 245: DimmerLights_IOC_1();
  8503  0F51  158A  25DC  158A   	fcall	_DimmerLights_IOC_1
  8504                           
  8505                           ;MCU_B1.c: 257: DimmerLights_TMR_1();
  8506  0F54  118A  26DD  158A   	fcall	_DimmerLights_TMR_1
  8507                           
  8508                           ;MCU_B1.c: 271: Timer1.Count++;
  8509  0F57  3001               	movlw	1
  8510  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  8511  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  8512  0F5A  07BC               	addwf	_Timer1+1,f
  8513  0F5B  1803               	skipnc
  8514  0F5C  0ABD               	incf	_Timer1+2,f
  8515  0F5D  3000               	movlw	0
  8516  0F5E  07BD               	addwf	_Timer1+2,f
  8517                           
  8518                           ;MCU_B1.c: 272: if (Timer1.Count == (int)(20*10)) {
  8519  0F5F  30C8               	movlw	200
  8520  0F60  063C               	xorwf	_Timer1+1,w
  8521  0F61  043D               	iorwf	_Timer1+2,w
  8522  0F62  1D03               	skipz
  8523  0F63  0008               	return
  8524                           
  8525                           ;MCU_B1.c: 273: Timer1.Count = 0;
  8526  0F64  01BC               	clrf	_Timer1+1
  8527  0F65  01BD               	clrf	_Timer1+2
  8528                           
  8529                           ;MCU_B1.c: 274: Timer1.Timeout = 1;
  8530  0F66  143B               	bsf	_Timer1,0
  8531  0F67  0008               	return
  8532  0F68                     __end_of_TMR1_ISR:	
  8533                           
  8534                           	psect	text61
  8535  06DD                     __ptext61:	
  8536 ;; *************** function _DimmerLights_TMR_1 *****************
  8537 ;; Defined at:
  8538 ;;		line 1208 in file "../src/Dimmer_B1.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;		None
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;		None               void
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8552 ;;      Params:         0       0       0       0
  8553 ;;      Locals:         0       0       0       0
  8554 ;;      Temps:          1       0       0       0
  8555 ;;      Totals:         1       0       0       0
  8556 ;;Total ram usage:        1 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_TMR1_ISR
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           
  8566                           ;psect for function _DimmerLights_TMR_1
  8567  06DD                     _DimmerLights_TMR_1:	
  8568                           
  8569                           ;Dimmer_B1.c: 1209: if (DimmerIntr1.Start == 1) {
  8570                           
  8571                           ;incstack = 0
  8572                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8573  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  8574  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  8575  06DF  1D20               	btfss	_DimmerIntr1,2
  8576  06E0  2EEB               	goto	i1l3310
  8577                           
  8578                           ;Dimmer_B1.c: 1210: DimmerIntr1.Count++;
  8579  06E1  3001               	movlw	1
  8580  06E2  00F5               	movwf	??_DimmerLights_TMR_1
  8581  06E3  0875               	movf	??_DimmerLights_TMR_1,w
  8582  06E4  07A1               	addwf	_DimmerIntr1+1,f
  8583                           
  8584                           ;Dimmer_B1.c: 1211: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) + 1) {
  8585  06E5  3049               	movlw	73
  8586  06E6  0221               	subwf	_DimmerIntr1+1,w
  8587  06E7  1C03               	skipc
  8588  06E8  2EEB               	goto	i1l3310
  8589                           
  8590                           ;Dimmer_B1.c: 1212: DimmerIntr1.Count = 0;
  8591  06E9  01A1               	clrf	_DimmerIntr1+1
  8592                           
  8593                           ;Dimmer_B1.c: 1213: DimmerIntr1.Start = 0;
  8594  06EA  1120               	bcf	_DimmerIntr1,2
  8595  06EB                     i1l3310:	
  8596                           
  8597                           ;Dimmer_B1.c: 1214: }
  8598                           ;Dimmer_B1.c: 1215: }
  8599                           ;Dimmer_B1.c: 1217: if (DimmerIntr1.GO == 1) {
  8600  06EB  1C20               	btfss	_DimmerIntr1,0
  8601  06EC  2EF7               	goto	i1l385
  8602                           
  8603                           ;Dimmer_B1.c: 1218: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8604  06ED  0824               	movf	_DimmerIntr1+4,w
  8605  06EE  0221               	subwf	_DimmerIntr1+1,w
  8606  06EF  1C03               	skipc
  8607  06F0  2F26               	goto	i1l388
  8608                           
  8609                           ;Dimmer_B1.c: 1219: DimmerIntr1.GO = 0;
  8610  06F1  1020               	bcf	_DimmerIntr1,0
  8611                           
  8612                           ;Dimmer_B1.c: 1220: DimmerIntr1.Tune = 1;
  8613  06F2  14A0               	bsf	_DimmerIntr1,1
  8614                           
  8615                           ;Dimmer_B1.c: 1222: if (DimmerIntr1.ControlStatus == 1) {
  8616  06F3  1DA0               	btfss	_DimmerIntr1,3
  8617  06F4  2F26               	goto	i1l388
  8618                           
  8619                           ;Dimmer_B1.c: 1223: RB2 = 1;
  8620  06F5  1506               	bsf	6,2	;volatile
  8621                           
  8622                           ;Dimmer_B1.c: 1225: }
  8623                           ;Dimmer_B1.c: 1226: }
  8624                           ;Dimmer_B1.c: 1227: } else {
  8625  06F6  2F26               	goto	i1l388
  8626  06F7                     i1l385:	
  8627                           
  8628                           ;Dimmer_B1.c: 1228: if (DimmerIntr1.Tune == 1) {
  8629  06F7  1CA0               	btfss	_DimmerIntr1,1
  8630  06F8  2F26               	goto	i1l388
  8631                           
  8632                           ;Dimmer_B1.c: 1229: DimmerIntr1.Tune = 0;
  8633  06F9  10A0               	bcf	_DimmerIntr1,1
  8634                           
  8635                           ;Dimmer_B1.c: 1230: DimmerIntr1.TuneTime++;
  8636  06FA  3001               	movlw	1
  8637  06FB  00F5               	movwf	??_DimmerLights_TMR_1
  8638  06FC  0875               	movf	??_DimmerLights_TMR_1,w
  8639  06FD  07A2               	addwf	_DimmerIntr1+2,f
  8640                           
  8641                           ;Dimmer_B1.c: 1231: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8642  06FE  0823               	movf	_DimmerIntr1+3,w
  8643  06FF  0222               	subwf	_DimmerIntr1+2,w
  8644  0700  1C03               	skipc
  8645  0701  2F26               	goto	i1l388
  8646                           
  8647                           ;Dimmer_B1.c: 1232: DimmerIntr1.TuneTime = 0;
  8648  0702  01A2               	clrf	_DimmerIntr1+2
  8649                           
  8650                           ;Dimmer_B1.c: 1233: if (DimmerIntr1.Dimming_Sw == 1) {
  8651  0703  1E20               	btfss	_DimmerIntr1,4
  8652  0704  2F13               	goto	i1l391
  8653                           
  8654                           ;Dimmer_B1.c: 1234: if (DimmerIntr1.Dimming_Status == 0) {
  8655  0705  1AA0               	btfsc	_DimmerIntr1,5
  8656  0706  2F0D               	goto	i1l3334
  8657                           
  8658                           ;Dimmer_B1.c: 1235: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.8))) {
  8659  0707  3019               	movlw	25
  8660  0708  0224               	subwf	_DimmerIntr1+4,w
  8661  0709  1803               	btfsc	3,0
  8662  070A  2F19               	goto	i1l3340
  8663                           
  8664                           ;Dimmer_B1.c: 1238: DimmerIntr1.Dimming_Status = 1;
  8665                           
  8666                           ;Dimmer_B1.c: 1237: } else {
  8667                           
  8668                           ;Dimmer_B1.c: 1236: DimmerIntr1.DimmingValue--;
  8669  070B  16A0               	bsf	_DimmerIntr1,5
  8670                           
  8671                           ;Dimmer_B1.c: 1239: }
  8672                           ;Dimmer_B1.c: 1240: } else {
  8673  070C  2F26               	goto	i1l388
  8674  070D                     i1l3334:	
  8675                           
  8676                           ;Dimmer_B1.c: 1241: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.8))) {
  8677  070D  3048               	movlw	72
  8678  070E  0224               	subwf	_DimmerIntr1+4,w
  8679  070F  1C03               	btfss	3,0
  8680  0710  2F20               	goto	i1l3344
  8681                           
  8682                           ;Dimmer_B1.c: 1244: DimmerIntr1.Dimming_Status = 0;
  8683                           
  8684                           ;Dimmer_B1.c: 1243: } else {
  8685                           
  8686                           ;Dimmer_B1.c: 1242: DimmerIntr1.DimmingValue++;
  8687  0711  12A0               	bcf	_DimmerIntr1,5
  8688                           
  8689                           ;Dimmer_B1.c: 1245: }
  8690                           ;Dimmer_B1.c: 1246: }
  8691                           ;Dimmer_B1.c: 1247: } else if (DimmerIntr1.Dimming_RF == 1) {
  8692  0712  2F26               	goto	i1l388
  8693  0713                     i1l391:	
  8694  0713  1F20               	btfss	_DimmerIntr1,6
  8695  0714  2F26               	goto	i1l388
  8696                           
  8697                           ;Dimmer_B1.c: 1248: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8698  0715  0824               	movf	_DimmerIntr1+4,w
  8699  0716  0225               	subwf	_DimmerIntr1+5,w
  8700  0717  1803               	skipnc
  8701  0718  2F1C               	goto	i1l3342
  8702  0719                     i1l3340:	
  8703                           
  8704                           ;Dimmer_B1.c: 1249: DimmerIntr1.DimmingValue--;
  8705  0719  3001               	movlw	1
  8706  071A  02A4               	subwf	_DimmerIntr1+4,f
  8707                           
  8708                           ;Dimmer_B1.c: 1250: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8709  071B  2F26               	goto	i1l388
  8710  071C                     i1l3342:	
  8711  071C  0825               	movf	_DimmerIntr1+5,w
  8712  071D  0224               	subwf	_DimmerIntr1+4,w
  8713  071E  1803               	skipnc
  8714  071F  2F25               	goto	i1l402
  8715  0720                     i1l3344:	
  8716                           
  8717                           ;Dimmer_B1.c: 1251: DimmerIntr1.DimmingValue++;
  8718  0720  3001               	movlw	1
  8719  0721  00F5               	movwf	??_DimmerLights_TMR_1
  8720  0722  0875               	movf	??_DimmerLights_TMR_1,w
  8721  0723  07A4               	addwf	_DimmerIntr1+4,f
  8722                           
  8723                           ;Dimmer_B1.c: 1252: } else {
  8724  0724  2F26               	goto	i1l388
  8725  0725                     i1l402:	
  8726                           
  8727                           ;Dimmer_B1.c: 1253: DimmerIntr1.Dimming_RF = 0;
  8728  0725  1320               	bcf	_DimmerIntr1,6
  8729  0726                     i1l388:	
  8730                           
  8731                           ;Dimmer_B1.c: 1254: }
  8732                           ;Dimmer_B1.c: 1255: }
  8733                           ;Dimmer_B1.c: 1256: }
  8734                           ;Dimmer_B1.c: 1257: }
  8735                           ;Dimmer_B1.c: 1258: }
  8736                           ;Dimmer_B1.c: 1259: if (RB2 == 1) {
  8737  0726  1D06               	btfss	6,2	;volatile
  8738  0727  0008               	return
  8739                           
  8740                           ;Dimmer_B1.c: 1260: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) - 10) {
  8741  0728  303E               	movlw	62
  8742  0729  0221               	subwf	_DimmerIntr1+1,w
  8743  072A  1C03               	skipc
  8744  072B  0008               	return
  8745                           
  8746                           ;Dimmer_B1.c: 1261: RB2 = 0;
  8747  072C  1106               	bcf	6,2	;volatile
  8748                           
  8749                           ;Dimmer_B1.c: 1262: RB4 = 0;
  8750  072D  1206               	bcf	6,4	;volatile
  8751  072E  0008               	return
  8752  072F                     __end_of_DimmerLights_TMR_1:	
  8753                           
  8754                           	psect	text62
  8755  0DDC                     __ptext62:	
  8756 ;; *************** function _DimmerLights_IOC_1 *****************
  8757 ;; Defined at:
  8758 ;;		line 1267 in file "../src/Dimmer_B1.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;		None               void
  8765 ;; Registers used:
  8766 ;;		None
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8772 ;;      Params:         0       0       0       0
  8773 ;;      Locals:         0       0       0       0
  8774 ;;      Temps:          0       0       0       0
  8775 ;;      Totals:         0       0       0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_TMR1_ISR
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function _DimmerLights_IOC_1
  8787  0DDC                     _DimmerLights_IOC_1:	
  8788                           
  8789                           ;Dimmer_B1.c: 1270: if (RA7 == 1) {
  8790                           
  8791                           ;incstack = 0
  8792                           ; Regs used in _DimmerLights_IOC_1: []
  8793  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  8794  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  8795  0DDE  1F85               	btfss	5,7	;volatile
  8796  0DDF  2DE4               	goto	i1l409
  8797                           
  8798                           ;Dimmer_B1.c: 1271: if (Dimmer.PIR_DimmerSignal == 1) {
  8799  0DE0  1DAD               	btfss	_Dimmer,3
  8800  0DE1  0008               	return
  8801                           
  8802                           ;Dimmer_B1.c: 1272: Dimmer.PIR_DimmerSignal = 0;
  8803  0DE2  11AD               	bcf	_Dimmer,3
  8804                           
  8805                           ;Dimmer_B1.c: 1273: }
  8806                           ;Dimmer_B1.c: 1274: } else {
  8807  0DE3  0008               	return
  8808  0DE4                     i1l409:	
  8809                           
  8810                           ;Dimmer_B1.c: 1275: if (Dimmer.PIR_DimmerSignal == 0) {
  8811  0DE4  19AD               	btfsc	_Dimmer,3
  8812  0DE5  0008               	return
  8813                           
  8814                           ;Dimmer_B1.c: 1276: Dimmer.PIR_DimmerSignal = 1;
  8815  0DE6  15AD               	bsf	_Dimmer,3
  8816                           
  8817                           ;Dimmer_B1.c: 1278: if (DimmerIntr1.Start == 0) {
  8818  0DE7  1920               	btfsc	_DimmerIntr1,2
  8819  0DE8  0008               	return
  8820                           
  8821                           ;Dimmer_B1.c: 1279: DimmerIntr1.Start = 1;
  8822  0DE9  1520               	bsf	_DimmerIntr1,2
  8823                           
  8824                           ;Dimmer_B1.c: 1280: DimmerIntr1.GO = 1;
  8825  0DEA  1420               	bsf	_DimmerIntr1,0
  8826  0DEB  0008               	return
  8827  0DEC                     __end_of_DimmerLights_IOC_1:	
  8828  007E                     btemp	set	126	;btemp
  8829  007E                     wtemp	set	126
  8830  007E                     wtemp0	set	126
  8831  0080                     wtemp1	set	128
  8832  0082                     wtemp2	set	130
  8833  0084                     wtemp3	set	132
  8834  0086                     wtemp4	set	134
  8835  0088                     wtemp5	set	136
  8836  007F                     wtemp6	set	127
  8837  007E                     ttemp	set	126
  8838  007E                     ttemp0	set	126
  8839  0081                     ttemp1	set	129
  8840  0084                     ttemp2	set	132
  8841  0087                     ttemp3	set	135
  8842  007F                     ttemp4	set	127
  8843  007E                     ltemp	set	126
  8844  007E                     ltemp0	set	126
  8845  0082                     ltemp1	set	130
  8846  0086                     ltemp2	set	134
  8847  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     21      78
    BANK1            80      0      54
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_setDimmerIntr_MaxmumValue
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _setDimmerIntr_MaxmumValue->_getDimmerIntr_DimmingValue
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   18903
                                             16 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     613
                                              2 BANK0      3     3      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2470
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     754
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     582
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1037
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         2     2      0    1037
                                              9 BANK0      2     2      0
                            ___awdiv
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             9     9      0    2608
                                              5 BANK0      9     9      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2178
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2178
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2293
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2293
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       8     8      0    2964
                                              5 BANK0      8     8      0
               _getDimmerLights_Line
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2138
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Line                                 1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    3986
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2506
                                              9 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              3     2      1    1314
                                              6 BANK0      3     2      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              6 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              3 BANK0      3     2      1
         _getDimmerIntr_DimmingValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
         _getDimmerIntr_DimmingValue (ARG)
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerIntr_DimmingValue (ARG)
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Line
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      36       7       67.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      8E      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Jan 12 17:09:14 2015

                            _WDT_Clearing 0002                     __end_of_setCmd_Status 0E98  
                            ___awdiv@sign 005F                                        fsr 0004  
                    _getDimmerLights_Line 0DA3                      _setDimmerLights_Main 05CD  
                                     l123 0782                      _setDimmerLights_SwOn 0F68  
                                     l253 0DA1                                       l418 040D  
                                     l419 03F1                                       l482 0F1D  
                                     l483 0F25                                       l814 0EF6  
                                     l818 0EF2                                       l851 0E97  
                                     l845 03CF                                       l963 04E7  
                                     l968 04E4                                       _GIE 005F  
    __size_of_DimmerLights_Initialization 0007                                       _RB2 0032  
                                     _LED 0073                                       _RB3 0033  
                                     _RB4 0034                                       _RB5 0035  
                                     _RA7 002F                                       _PS0 0408  
                                     _PS1 0409                                       _PS2 040A  
                                     _ISR 0EAE                                       _PSA 040B  
                                     _WDT 003E                                       _Cmd 0070  
            getDimmerLights_Status@lights 005B                ??_setDimmerIntr_Dimming_RF 005A  
              ??_setDimmerIntr_Dimming_Sw 005A           setDimmerIntr_Dimming_RF@command 0059  
                                     fsr0 0004                                       indf 0000  
                         __end_of_ADC_Set 0D3B      setDimmerLights_Initialization@lights 0075  
            getDimmerLights_Status@status 005C       __end_of_setDimmerIntr_ControlStatus 0EAE  
             _setDimmerIntr_ControlStatus 0E98                                      ?_ISR 0075  
                   _setDimmerLights_OnOff 07A3                                      l1043 0087  
                                    l1035 01C3                                      l1036 0081  
                                    l1045 009A                                      l1037 0053  
                                    l4102 0E02                                      l4106 0E07  
                                    l4114 0E86                                      l4108 0E0C  
                                    l4300 0EEE                                      l4220 057E  
                                    l4118 0E92                                      l4206 056D  
                                    l4214 0575                                      l4312 0639  
                                    l4146 0F87                                      l4250 05A9  
                                    l4242 059D                                      l4330 065A  
                                    l4172 07B4                                      l4228 0586  
                                    l4340 067B                                      l5052 06BB  
                                    l4158 0FF9                                      l4238 0599  
                                    l4246 05A1                                      l4318 0644  
                                    l5046 069F                                      l4424 042C  
                                    l4176 07BC                                      l4272 05C1  
                                    l4344 0683                                      l4336 0670  
                                    l4328 064C                                      l4360 0F3E  
                                    l4600 0739                                      l4434 0456  
                                    l4186 0F98                                      l4602 0747  
                                    l4428 0441                                      l4268 05BB  
                                    l4276 05C7                                      l4364 0F44  
                                    l4612 0768                                      l4382 05F2  
                                    l4358 0F3B                                      l4384 05F9  
                                    l4448 0DAE                                      l4480 051E  
                                    l4472 0512                                      l4560 04B9  
                                    l4544 0483                                      l4608 075D  
                                    l4720 024D                                      l4712 023D  
                                    l4394 061D                                      l4490 053E  
                                    l4396 0624                                      l4492 054C  
                                    l4476 0518                                      l4812 0063  
                                    l4740 0288                                      l4724 0255  
                                    l4716 0245                                      l4708 0235  
                                    l4638 078D                                      l4486 052A  
                                    l4814 0071                                      l4750 02B6  
                                    l4734 026C                                      l4488 0536  
                                    l4912 0197                                      l4576 04D4  
                                    l4586 04E3                                      l4770 030C  
                                    l4852 00BD                                      l4764 02FE  
                                    l4756 02D2                     _setDimmerLights_SwOff 0FD8  
                                    l4870 00E1                                      l4686 0FCF  
                                    l4952 0328                                      l4880 012C  
                                    l4864 00D4                                      l4784 0F08  
                                    l4970 033E                                      l4972 036D  
                                    l4868 00E0                                      l4990 03B5  
                                    l4958 0337                                      l4984 039D  
                                    l4968 0361                                      l4888 0140  
                                    l4896 016A                                      l4986 037A  
                                    l4988 03A9                                      l4996 03C4  
                   _myMain_Initialization 0D0E                              __CFG_WDTE$ON 0000  
                                    u5200 0549                                      u6005 017A  
                                    u6120 036A                                      _PEIE 005E  
                                    u5180 0533                                      u6125 0347  
                                    u5405 0754                                      u6150 03A6  
                                    u6055 01B3                                      u5415 075E  
                                    u5505 079D                                      u6155 0383  
                                    u5375 073C                                      u4835 064F  
                                    u5395 0748                                      u4765 0E66  
                                    u4855 065B                                      u4865 0667  
                                    u4875 0671                                      u5955 00FF  
                                    u5965 0117                                      u5985 015D  
                                    __CDS 0032                                      _WPUB 0095  
                                    __PIR 00A0                                      _Temp 0041  
                                    _main 068A                                      btemp 007E  
                         __end_of_WDT_Set 0DCD                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                          __end_of_CDS_Main 07A3  
            __size_of_Temp_Initialization 0003                                     ??_ISR 0076  
 __end_of_getDimmerLights_Allow_Condition 0D21  __size_of_getDimmerLights_Allow_Condition 0005  
       ??_getDimmerLights_Allow_Condition 0059          ?_getDimmerLights_Allow_Condition 0075  
         _getDimmerLights_Allow_Condition 0D1C                    _getDimmerLights_Status 0DEC  
                           __CFG_PLLEN$ON 0000                          __end_of_LED_Main 0D12  
                   ?_getDimmerLights_Line 0075                                _DimmerIntr 0071  
                   ?_setDimmerLights_Main 0075                          ??_setPIRLED_Main 005D  
                   ?_setDimmerLights_SwOn 0075                                     ?_main 0069  
                         __end_of___awdiv 068A                                     _ADRES 001E  
                         ___awdiv@divisor 0059                                     _T1CON 0010  
                         __end_of___lwdiv 076F                                     i1l402 0725  
                                   i1l409 0DE4                                     i1l391 0713  
                                   i1l385 06F7                                     i1l388 0726  
                                   i1l665 0EB9                           ___awdiv@counter 005E  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                 __end_of_Timeout_Counter 0E6C                                     _Light 0040  
                        __end_of_PIR_Main 01D6                          __end_of_TMR1_ISR 0F68  
                        __end_of_TMR1_Set 0DBF                                     _getAD 0F2E  
                        __end_of_WDT_Main 0E1F                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 0012  
           __end_of_setLED_Initialization 0E31                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                       getPIR_AD@channel1 0067                         getPIR_AD@channel2 0062  
                       setTemp_Main@error 0063                           __initialization 0013  
                            __end_of_main 06DD                          __end_of_Fosc_Set 0D26  
          getMain_All_LightsStatus@status 0059              setDimmerLights_OnOff@command 005C  
                          _Exception_Main 030E                                 ??_ADC_Set 0059  
                                  ??_main 006D               ?_setDimmerIntr_DimmingValue 0059  
            ??_DimmerLights_SelectPointer 0059        setDimmerIntr_ControlStatus@command 0059  
                 _setDimmerLights_Dimming 0F8B                               _DimmerIntr1 0020  
                _getMain_All_LightsStatus 0D7B                    ?_setDimmerLights_OnOff 005C  
                                  ?_getAD 0059                    ?_setDimmerLights_SwOff 0075  
                  ?_myMain_Initialization 0075                                    _ADCON0 001F  
                                  _ADCON1 009F                          ___awdiv@dividend 005B  
                               ??_WDT_Set 0059                                    _ANSELA 0185  
                                  _ANSELB 0186                  _getMain_All_Error_Status 0EDE  
                                  i1l3310 06EB                                    i1l3340 0719  
                                  i1l3342 071C                                    i1l3334 070D  
                                  i1l3344 0720                                    _FVRCON 009D  
    getDimmerLights_Allow_Condition@allow 0059                                    _PIRLED 0037  
                                  _OSCCON 0090                                    _TMR1IE 0460  
                                  _TMR1IF 0060                                    _IO_Set 0EC6  
                    Exception_Main@i_2601 0063               ??_setDimmerIntr_MaxmumValue 005D  
                                  _Dimmer 002D                     __end_of_getCmd_Status 0E0E  
              __end_of_Mcu_Initialization 0DDC                                    _Timer1 003B  
             __size_of_CDS_Initialization 0004                    __end_of_Exception_Main 03D0  
                    Exception_Main@lights 0065                                 ??___awdiv 005D  
                  ??_getDimmerLights_Line 0059                                 ??___lwdiv 005D  
                  ??_setDimmerLights_Main 0062                    ??_setDimmerLights_SwOn 005B  
                                  _setLED 055C                                    _myMain 0027  
       __size_of_DimmerLights_PIR_Control 0095                          ___awdiv@quotient 0060  
                      __size_of_Temp_Main 0003                 ?_DimmerLights_PIR_Control 0075  
        ??_setDimmerLights_Initialization 0059           ?_setDimmerLights_Initialization 0075  
        __end_of_setDimmerIntr_Dimming_RF 0E82          __end_of_setDimmerIntr_Dimming_Sw 0E58  
                                  saved_w 007E                          ?_Timeout_Counter 0075  
             __size_of_DimmerLights_IOC_1 0010               __size_of_DimmerLights_TMR_1 0052  
                 __size_of_LedPointSelect 001C                                 ?_CDS_Main 0075  
         setDimmerIntr_Dimming_Sw@command 0059               __size_of_PIR_Initialization 000D  
                 __end_of__initialization 0024           getDimmerIntr_DimmingValue@value 005B  
         setDimmerIntr_DimmingValue@value 0059                                 ?_LED_Main 0075  
                           ?_my_MainTimer 0075              ?_DimmerLights_Initialization 0075  
              ?_DimmerIntr_Initialization 0075                            __pcstackCOMMON 0075  
                      __size_of_getCDS_AD 002A                           ?_Exception_Main 0075  
                           __end_of_getAD 0F4A                                 ?_PIR_Main 0075  
                               ?_TMR1_ISR 0075                                 ?_TMR1_Set 0075  
                      _LED_Initialization 0D6F                        __size_of_getPIR_AD 0138  
               ??_setDimmerLights_Dimming 0060                                 ?_WDT_Main 0075  
       setDimmerIntr_ControlStatus@lights 005B                 _setDimmerIntr_MaxmumValue 0D63  
              __end_of_set_TimeoutCleared 0800           setDimmerIntr_MaxmumValue@lights 005E  
                     ?_LED_Initialization 0075                                   ??_getAD 005A  
                     _Temp_Initialization 0D12                                ??_CDS_Main 0059  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                               ?_Fosc_Set 0075                         __end_of_Temp_Main 0D18  
                                 ?_IO_Set 0075                           __CFG_VCAPEN$DIS 0000  
                          ??_my_MainTimer 0059                                ??_LED_Main 005F  
                    ??_LED_Initialization 005E                              _DimmerLights 0072  
                       LedPointSelect@led 005A                   ?_getDimmerLights_Status 0075  
                              __pmaintext 068A                      ?_Temp_Initialization 0075  
       __end_of_DimmerIntr_Initialization 0E44                      PIR_Main@LightsStatus 0066  
           ??_DimmerLights_Initialization 005A                                ??_PIR_Main 005E  
                              ??_TMR1_ISR 0076                             ?_setTemp_Main 0075  
                              ??_TMR1_Set 0059                                __pintentry 0004  
                                 ?_setLED 005B                                   _ADC_Set 0D34  
                              _getTemp_AD 0FB1        __end_of_DimmerLights_SelectPointer 0D57  
              _DimmerLights_SelectPointer 0D4B                                ??_WDT_Main 0059  
                  __size_of_getCDS_Status 0008             setDimmerLights_Dimming@lights 0061  
           setDimmerLights_Dimming@status 005F     getDimmerLights_Allow_Condition@lights 0075  
                       __end_of_getCDS_AD 07FA                                   _WDT_Set 0DBF  
                  __size_of_setCmd_Status 0016                                ??_Fosc_Set 0059  
                       __end_of_getPIR_AD 030E           __end_of_setDimmerLights_Dimming 0FB1  
                     getCmd_Status@number 0059                           __size_of_IO_Set 0018  
                     setCmd_Status@number 005B         __size_of_setDimmerIntr_Dimming_RF 0016  
       __size_of_setDimmerIntr_Dimming_Sw 0014                                getCDS_AD@i 005E  
                              getCDS_AD@j 005F                 ?_setDimmerIntr_Dimming_RF 0059  
               ?_setDimmerIntr_Dimming_Sw 0059                                   _VarLED1 0051  
                                 _VarLED2 0055            __end_of_getDimmerLights_Status 0DFD  
                   ??_Temp_Initialization 0059                            ??_setTemp_Main 0062  
                                 ___awdiv 062D                                   ___lwdiv 072F  
              ??_getMain_All_LightsStatus 0059                               PIR_Main@cds 0065  
                         __size_of_setLED 0071                                   __ptext0 0000  
                                 __ptext1 0EF8                                   __ptext2 0D0E  
                                 __ptext3 0FB1                                   __ptext4 01D6  
                                 __ptext5 072F                                   __ptext6 07D0  
                                 __ptext7 0F2E                                   __ptext8 07FA  
                                 __ptext9 0E58                                getPIR_AD@i 0068  
                              getPIR_AD@j 0066                              __size_of_ISR 0018  
              ??_getMain_All_Error_Status 0059                   ??_setDimmerLights_OnOff 005D  
                 ??_setDimmerLights_SwOff 005B                   ??_myMain_Initialization 0059  
                       _DimmerLights_Main 0D2D                  ??_setTemp_Initialization 0059  
                      ?_DimmerLights_Main 0075                            _LedPointSelect 0F12  
                                 clrloop0 0D44                      end_of_initialization 0024  
                     ??_DimmerLights_Main 0063                    setDimmerLights_SwOn@sw 005B  
                           _getCDS_Status 0D3B          __end_of_DimmerLights_PIR_Control 0465  
                   _setLED_Initialization 0E1F                             _setCmd_Status 0E82  
                             ?_getTemp_AD 0075                  setLED_Initialization@led 005D  
               __end_of_DimmerLights_Main 0D34                        _Mcu_Initialization 0DCD  
                    __end_of_my_MainTimer 0F12                    __end_of_LedPointSelect 0F2E  
                     setPIRLED_Main@count 005E          setDimmerIntr_DimmingValue@lights 005B  
        getDimmerIntr_DimmingValue@lights 005A                       ?_Mcu_Initialization 0075  
                 __size_of_setPIRLED_Main 0071        __size_of_setDimmerIntr_MaxmumValue 000C  
          setDimmerIntr_Dimming_RF@lights 005B           getMain_All_Error_Status@command 005A  
                       __size_of_CDS_Main 0034                            ?_getCDS_Status 0075  
                        ??_Exception_Main 005E                            __end_of_IO_Set 0EDE  
              __end_of_CDS_Initialization 0D1C                         __size_of_LED_Main 0003  
             ??_DimmerIntr_Initialization 0059                      ??_Mcu_Initialization 005A  
                           ?_WDT_Clearing 0075                            ?_setCmd_Status 0059  
     __size_of_getDimmerIntr_DimmingValue 000E                         __size_of_PIR_Main 01AF  
                       __size_of_TMR1_ISR 001E             __size_of_getDimmerLights_Line 000E  
        DimmerLights_SelectPointer@lights 005A                         __size_of_TMR1_Set 000E  
           __size_of_setDimmerLights_Main 0060                            __end_of_setLED 05CD  
           __size_of_setDimmerLights_SwOn 0023                __end_of_DimmerLights_IOC_1 0DEC  
                       __size_of_WDT_Main 0011                __end_of_DimmerLights_TMR_1 072F  
                     start_initialization 0013                           ?_LedPointSelect 0075  
                             __end_of_ISR 0EC6                    __size_of_getCmd_Status 0011  
              __end_of_PIR_Initialization 0D95              ?_setDimmerIntr_ControlStatus 0059  
         __size_of_setTemp_Initialization 0001                       getCDS_Status@status 0059  
                    __end_of_setTemp_Main 04EB                        _set_TimeoutCleared 07FA  
       __end_of_setDimmerIntr_MaxmumValue 0D6F                                  ??_IO_Set 0059  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 004D  
                     __size_of_getTemp_AD 0027                    ?_setLED_Initialization 0075  
                       __size_of_Fosc_Set 0005                                 _Temp_Main 0D15  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 0059  
                     Exception_Main@count 005F                       Exception_Main@error 0060  
                _DimmerLights_PIR_Control 03D0          __end_of_getMain_All_LightsStatus 0D88  
                                ??_setLED 005C                                  ?_ADC_Set 0075  
             ?_DimmerLights_SelectPointer 0075          __end_of_getMain_All_Error_Status 0EF8  
              __size_of_DimmerLights_Main 0007            setDimmerIntr_Dimming_Sw@lights 005B  
                             __pbssCOMMON 0070                                 ___latbits 0001  
                           __pcstackBANK0 0059                      ??_set_TimeoutCleared 0059  
               _DimmerIntr_Initialization 0E31                                  ?_WDT_Set 0075  
                         ??_getCDS_Status 0059             ??_setDimmerIntr_ControlStatus 005A  
          setDimmerIntr_MaxmumValue@value 005C                             _DimmerLights1 00CE  
                           PIR_Main@error 0062                                 _getCDS_AD 07D0  
                               _getPIR_AD 01D6               __size_of_LED_Initialization 000C  
                         Exception_Main@i 0061                                ?_Temp_Main 0075  
                        ___lwdiv@dividend 005B                             _getCmd_Status 0DFD  
                         ??_setCmd_Status 005A                    _setTemp_Initialization 0D0D  
                           _PIR_Main$3359 0063                  ?_setDimmerLights_Dimming 005F  
                                ?___awdiv 0059                     __size_of_my_MainTimer 001A  
                                ?___lwdiv 0059                  getDimmerLights_Line@line 0059  
      __end_of_getDimmerIntr_DimmingValue 0DA3              ??_setDimmerIntr_DimmingValue 005A  
              _getDimmerIntr_DimmingValue 0D95            __size_of_setDimmerLights_OnOff 002D  
           __end_of_setDimmerLights_OnOff 07D0            __size_of_setDimmerLights_SwOff 0028  
          __size_of_myMain_Initialization 0001             __end_of_setDimmerLights_SwOff 1000  
           __end_of_myMain_Initialization 0D0F                            __size_of_getAD 001C  
                        ___lwdiv@quotient 005F                            _setPIRLED_Main 04EB  
                                _CDS_Main 076F               __end_of_Temp_Initialization 0D15  
                       interrupt_function 0004                                ?_getCDS_AD 005B  
                                _LED_Main 0D0F                                 clear_ram0 0D43  
                            _my_MainTimer 0EF8                                ?_getPIR_AD 0062  
     __end_of_DimmerLights_Initialization 0D2D               _DimmerLights_Initialization 0D26  
                          ?_getCmd_Status 0075                                  _GO_nDONE 00F9  
                       ??_Timeout_Counter 0059      __size_of_setDimmerIntr_ControlStatus 0016  
     __size_of_setDimmerIntr_DimmingValue 000C                                  _PIR_Main 0027  
                                _TMR1_ISR 0F4A                                  _TMR1_Set 0DB1  
                            ??_getTemp_AD 005B                                  _WDT_Main 0E0E  
                        __size_of_ADC_Set 0007                     __size_of_setTemp_Main 0086  
                  __end_of_setPIRLED_Main 055C            getMain_All_Error_Status@status 005D  
                             getAD@adcon0 005A                               getAD@adcon1 0059  
                    __end_of_WDT_Clearing 0004         __size_of_getMain_All_LightsStatus 000D  
               ?_getMain_All_LightsStatus 0075                  _setDimmerIntr_Dimming_RF 0E6C  
             setDimmerLights_OnOff@lights 005D                  _setDimmerIntr_Dimming_Sw 0E44  
                                _Fosc_Set 0D21                          __size_of_WDT_Set 000E  
       __size_of_getMain_All_Error_Status 001A                 ?_getMain_All_Error_Status 0075  
                      __end_of_getTemp_AD 0FD8       __size_of_DimmerLights_SelectPointer 000C  
                                _SwDetect 0074                               ??_Temp_Main 0064  
                        getCmd_Status@cmd 005A                          setCmd_Status@cmd 0059  
           _getMain_All_Error_Status$2590 005B                                 setLED@led 005C  
                            _setTemp_Main 0465                          __size_of___awdiv 005D  
                        __size_of___lwdiv 0040                  setDimmerLights_SwOn@idle 005C  
                        ??_LedPointSelect 0059                        _CDS_Initialization 0D18  
                       getTemp_AD@channel 005D                           ?_setPIRLED_Main 0075  
                         ___lwdiv@divisor 0059                       ?_CDS_Initialization 0075  
                         ___lwdiv@counter 005E                                  __ptext10 0E0E  
                                __ptext11 0002                                  __ptext20 0DCD  
                                __ptext12 0D15                                  __ptext21 0DBF  
                                __ptext13 0465                                  __ptext30 030E  
                                __ptext22 0DB1                                  __ptext14 062D  
                                __ptext31 055C                                  __ptext23 0EC6  
                                __ptext15 0D12                                  __ptext40 0D7B  
                                __ptext32 0F12                                  __ptext24 0D21  
                                __ptext16 0D0D                                  __ptext41 0DFD  
                                __ptext33 0EDE                                  __ptext25 0D34  
                                __ptext17 0027                                  __ptext50 0E6C  
                                __ptext42 0F8B                                  __ptext34 0DA3  
                                __ptext26 0D0F                                  __ptext18 0D3B  
                                __ptext51 0D57                                  __ptext43 0E44  
                                __ptext35 0D2D                                  __ptext27 04EB  
                                __ptext19 0D88                                  __ptext60 0F4A  
                                __ptext52 0DEC                                  __ptext44 0D95  
                                __ptext36 05CD                                  __ptext28 0D6F  
                                __ptext61 06DD                                  __ptext53 0D4B  
                                __ptext45 0D1C                                  __ptext37 07A3  
                                __ptext29 0E1F                                  __ptext62 0DDC  
                                __ptext54 0D26                                  __ptext46 03D0  
                                __ptext38 0E98                                  __ptext55 0D0C  
                                __ptext47 0F68                                  __ptext39 0E82  
                                __ptext56 0E31                                  __ptext48 0FD8  
                                __ptext57 076F                                  __ptext49 0D63  
                                __ptext58 0D18                                  __ptext59 0EAE  
                 ??_setLED_Initialization 005D                  ??_getDimmerLights_Status 005B  
            __end_of_getDimmerLights_Line 0DB1              __end_of_setDimmerLights_Main 062D  
                      _DimmerLights_IOC_1 0DDC              __end_of_setDimmerLights_SwOn 0F8B  
              ??_DimmerLights_PIR_Control 005F                               ??_getCDS_AD 005C  
                           setLED@command 005B                             __size_of_main 0053  
      __size_of_DimmerIntr_Initialization 0013                           ??_getCmd_Status 0059  
                      _DimmerLights_TMR_1 06DD                setDimmerLights_Main@lights 0062  
                             ??_getPIR_AD 0063                        _PIR_Initialization 0D88  
                    ??_CDS_Initialization 0059                       ?_DimmerLights_IOC_1 0075  
                     ?_DimmerLights_TMR_1 0075               __size_of_Mcu_Initialization 000F  
                     ?_PIR_Initialization 0075                                  main@argc 0069  
                                main@argv 006B        __end_of_setDimmerIntr_DimmingValue 0D63  
              _setDimmerIntr_DimmingValue 0D57                      ??_DimmerLights_IOC_1 0075  
                    ??_DimmerLights_TMR_1 0075              ??_getDimmerIntr_DimmingValue 0059  
                 setDimmerLights_SwOff@sw 005B                      ??_PIR_Initialization 0059  
                                intlevel1 0000    __end_of_setDimmerLights_Initialization 0D0D  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0D0C  
              ?_setDimmerIntr_MaxmumValue 005C                   ?_setTemp_Initialization 0075  
                 __size_of_Exception_Main 00C2                     __size_of_WDT_Clearing 0002  
             ?_getDimmerIntr_DimmingValue 0075          __size_of_setDimmerLights_Dimming 0026  
             __size_of_set_TimeoutCleared 0006                        __CFG_FOSC$INTOSCIO 0000  
                         _Timeout_Counter 0E58           __size_of_getDimmerLights_Status 0011  
              __end_of_LED_Initialization 0D7B                     __end_of_getCDS_Status 0D43  
          __end_of_setTemp_Initialization 0D0E                         getCDS_AD@channel1 0060  
                       getCDS_AD@channel2 005B  
