

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Feb 23 08:19:55 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0186                     	;# 
   144  018C                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0096                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009F                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0186                     	;# 
   213  018C                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0096                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009F                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0186                     	;# 
   282  018C                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0096                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009F                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  0185                     	;# 
   350  0186                     	;# 
   351  018C                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  0089                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  008E                     	;# 
   394  008F                     	;# 
   395  0090                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0093                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0095                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0096                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009F                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  0185                     	;# 
   419  0186                     	;# 
   420  018C                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  008F                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0095                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0096                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009F                     	;# 
   479  0108                     	;# 
   480  0109                     	;# 
   481  010C                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0186                     	;# 
   489  018C                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0096                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009F                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010D                     	;# 
   554  010E                     	;# 
   555  010F                     	;# 
   556  0185                     	;# 
   557  0186                     	;# 
   558  018C                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0096                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009F                     	;# 
   617  0108                     	;# 
   618  0109                     	;# 
   619  010C                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0186                     	;# 
   627  018C                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0014                     	;# 
   649  0015                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  0081                     	;# 
   663  0085                     	;# 
   664  0086                     	;# 
   665  0087                     	;# 
   666  0089                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0096                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009F                     	;# 
   686  0108                     	;# 
   687  0109                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0186                     	;# 
   696  018C                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000E                     	;# 
   712  000F                     	;# 
   713  0010                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0014                     	;# 
   718  0015                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001D                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  0081                     	;# 
   732  0085                     	;# 
   733  0086                     	;# 
   734  0087                     	;# 
   735  0089                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0096                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009F                     	;# 
   755  0108                     	;# 
   756  0109                     	;# 
   757  010C                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010F                     	;# 
   763  0185                     	;# 
   764  0186                     	;# 
   765  018C                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0095                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0096                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009F                     	;# 
   824  0108                     	;# 
   825  0109                     	;# 
   826  010C                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0186                     	;# 
   834  018C                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000D                     	;# 
   848  000E                     	;# 
   849  000E                     	;# 
   850  000F                     	;# 
   851  0010                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0013                     	;# 
   855  0014                     	;# 
   856  0015                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0017                     	;# 
   860  0018                     	;# 
   861  0019                     	;# 
   862  001A                     	;# 
   863  001B                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  001D                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  0081                     	;# 
   870  0085                     	;# 
   871  0086                     	;# 
   872  0087                     	;# 
   873  0089                     	;# 
   874  008C                     	;# 
   875  008D                     	;# 
   876  008E                     	;# 
   877  008F                     	;# 
   878  0090                     	;# 
   879  0091                     	;# 
   880  0092                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0096                     	;# 
   888  0098                     	;# 
   889  0099                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009F                     	;# 
   893  0108                     	;# 
   894  0109                     	;# 
   895  010C                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010D                     	;# 
   899  010E                     	;# 
   900  010F                     	;# 
   901  0185                     	;# 
   902  0186                     	;# 
   903  018C                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0009                     	;# 
   913  000A                     	;# 
   914  000B                     	;# 
   915  000C                     	;# 
   916  000D                     	;# 
   917  000E                     	;# 
   918  000E                     	;# 
   919  000F                     	;# 
   920  0010                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0014                     	;# 
   925  0015                     	;# 
   926  0015                     	;# 
   927  0016                     	;# 
   928  0017                     	;# 
   929  0018                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001B                     	;# 
   934  001C                     	;# 
   935  001D                     	;# 
   936  001E                     	;# 
   937  001F                     	;# 
   938  0081                     	;# 
   939  0085                     	;# 
   940  0086                     	;# 
   941  0087                     	;# 
   942  0089                     	;# 
   943  008C                     	;# 
   944  008D                     	;# 
   945  008E                     	;# 
   946  008F                     	;# 
   947  0090                     	;# 
   948  0091                     	;# 
   949  0092                     	;# 
   950  0093                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0095                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009C                     	;# 
   960  009D                     	;# 
   961  009F                     	;# 
   962  0108                     	;# 
   963  0109                     	;# 
   964  010C                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  010F                     	;# 
   970  0185                     	;# 
   971  0186                     	;# 
   972  018C                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  000E                     	;# 
   988  000F                     	;# 
   989  0010                     	;# 
   990  0011                     	;# 
   991  0012                     	;# 
   992  0013                     	;# 
   993  0014                     	;# 
   994  0015                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  001D                     	;# 
  1005  001E                     	;# 
  1006  001F                     	;# 
  1007  0081                     	;# 
  1008  0085                     	;# 
  1009  0086                     	;# 
  1010  0087                     	;# 
  1011  0089                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  008F                     	;# 
  1016  0090                     	;# 
  1017  0091                     	;# 
  1018  0092                     	;# 
  1019  0093                     	;# 
  1020  0093                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0096                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009C                     	;# 
  1029  009D                     	;# 
  1030  009F                     	;# 
  1031  0108                     	;# 
  1032  0109                     	;# 
  1033  010C                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  010F                     	;# 
  1039  0185                     	;# 
  1040  0186                     	;# 
  1041  018C                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  000E                     	;# 
  1057  000F                     	;# 
  1058  0010                     	;# 
  1059  0011                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0015                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0017                     	;# 
  1067  0018                     	;# 
  1068  0019                     	;# 
  1069  001A                     	;# 
  1070  001B                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001D                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  0081                     	;# 
  1077  0085                     	;# 
  1078  0086                     	;# 
  1079  0087                     	;# 
  1080  0089                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  008F                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0093                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0095                     	;# 
  1093  0096                     	;# 
  1094  0096                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009F                     	;# 
  1100  0108                     	;# 
  1101  0109                     	;# 
  1102  010C                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  010F                     	;# 
  1108  0185                     	;# 
  1109  0186                     	;# 
  1110  018C                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000D                     	;# 
  1124  000E                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0015                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  001A                     	;# 
  1139  001B                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  0081                     	;# 
  1146  0085                     	;# 
  1147  0086                     	;# 
  1148  0087                     	;# 
  1149  0089                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008F                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0093                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0096                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009F                     	;# 
  1169  0108                     	;# 
  1170  0109                     	;# 
  1171  010C                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  0185                     	;# 
  1178  0186                     	;# 
  1179  018C                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000E                     	;# 
  1195  000F                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  0081                     	;# 
  1215  0085                     	;# 
  1216  0086                     	;# 
  1217  0087                     	;# 
  1218  0089                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008F                     	;# 
  1223  0090                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0096                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009F                     	;# 
  1238  0108                     	;# 
  1239  0109                     	;# 
  1240  010C                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0185                     	;# 
  1247  0186                     	;# 
  1248  018C                     	;# 
  1249  0000                     	;# 
  1250  0001                     	;# 
  1251  0002                     	;# 
  1252  0003                     	;# 
  1253  0004                     	;# 
  1254  0005                     	;# 
  1255  0006                     	;# 
  1256  0007                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  000E                     	;# 
  1264  000F                     	;# 
  1265  0010                     	;# 
  1266  0011                     	;# 
  1267  0012                     	;# 
  1268  0013                     	;# 
  1269  0014                     	;# 
  1270  0015                     	;# 
  1271  0015                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001B                     	;# 
  1279  001C                     	;# 
  1280  001D                     	;# 
  1281  001E                     	;# 
  1282  001F                     	;# 
  1283  0081                     	;# 
  1284  0085                     	;# 
  1285  0086                     	;# 
  1286  0087                     	;# 
  1287  0089                     	;# 
  1288  008C                     	;# 
  1289  008D                     	;# 
  1290  008E                     	;# 
  1291  008F                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0093                     	;# 
  1297  0094                     	;# 
  1298  0095                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0096                     	;# 
  1302  0098                     	;# 
  1303  0099                     	;# 
  1304  009C                     	;# 
  1305  009D                     	;# 
  1306  009F                     	;# 
  1307  0108                     	;# 
  1308  0109                     	;# 
  1309  010C                     	;# 
  1310  010C                     	;# 
  1311  010D                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010F                     	;# 
  1315  0185                     	;# 
  1316  0186                     	;# 
  1317  018C                     	;# 
  1318  001F                     _ADCON0	set	31
  1319  001E                     _ADRES	set	30
  1320  0005                     _PORTA	set	5
  1321  0006                     _PORTB	set	6
  1322  0007                     _PORTC	set	7
  1323  0010                     _T1CON	set	16
  1324  000F                     _TMR1H	set	15
  1325  000E                     _TMR1L	set	14
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002F                     _RA7	set	47
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0060                     _TMR1IF	set	96
  1335  009F                     _ADCON1	set	159
  1336  009D                     _FVRCON	set	157
  1337  0090                     _OSCCON	set	144
  1338  0085                     _TRISA	set	133
  1339  0086                     _TRISB	set	134
  1340  0087                     _TRISC	set	135
  1341  0095                     _WPUB	set	149
  1342  0408                     _PS0	set	1032
  1343  0409                     _PS1	set	1033
  1344  040A                     _PS2	set	1034
  1345  040B                     _PSA	set	1035
  1346  0460                     _TMR1IE	set	1120
  1347  0185                     _ANSELA	set	389
  1348  0186                     _ANSELB	set	390
  1349                           
  1350                           	psect	text0
  1351  0000                     __ptext0:	
  1352                           ; #config settings
  1353                           
  1354                           
  1355                           ;psect for function _DimmerLights_IOC_1
  1356  0000                     
  1357                           	psect	cinit
  1358  0013                     start_initialization:	
  1359  0013                     __initialization:	
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1363  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1364  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1365  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1366  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369  0018  1383               	bcf	3,7	;select IRP bank0
  1370  0019  3020               	movlw	low __pbssBANK0
  1371  001A  0084               	movwf	4
  1372  001B  3057               	movlw	low (__pbssBANK0+55)
  1373  001C  158A  25B6  118A   	fcall	clear_ram0
  1374                           
  1375                           ; Clear objects allocated to BANK1
  1376  001F  30A0               	movlw	low __pbssBANK1
  1377  0020  0084               	movwf	4
  1378  0021  30D2               	movlw	low (__pbssBANK1+50)
  1379  0022  158A  25B6         	fcall	clear_ram0
  1380  0024                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0024                     __end_of__initialization:	
  1384  0024  0183               	clrf	3
  1385  0025  118A  2DEA         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0070                     __pbssCOMMON:	
  1389  0070                     _Cmd:	
  1390  0070                     	ds	1
  1391  0071                     _DimmerIntr:	
  1392  0071                     	ds	1
  1393  0072                     _DimmerLights:	
  1394  0072                     	ds	1
  1395  0073                     _LED:	
  1396  0073                     	ds	1
  1397  0074                     _SwDetect:	
  1398  0074                     	ds	1
  1399                           
  1400                           	psect	bssBANK0
  1401  0020                     __pbssBANK0:	
  1402  0020                     _DimmerIntr1:	
  1403  0020                     	ds	12
  1404  002C                     _Dimmer:	
  1405  002C                     	ds	5
  1406  0031                     _myMain:	
  1407  0031                     	ds	5
  1408  0036                     _PIRLED:	
  1409  0036                     	ds	4
  1410  003A                     __CDS:	
  1411  003A                     	ds	4
  1412  003E                     _Timer1:	
  1413  003E                     	ds	3
  1414  0041                     _WDT:	
  1415  0041                     	ds	2
  1416  0043                     _Light:	
  1417  0043                     	ds	1
  1418  0044                     _Temp:	
  1419  0044                     	ds	7
  1420  004B                     _VarErrLED:	
  1421  004B                     	ds	4
  1422  004F                     _VarLED1:	
  1423  004F                     	ds	4
  1424  0053                     _VarLED2:	
  1425  0053                     	ds	4
  1426                           
  1427                           	psect	bssBANK1
  1428  00A0                     __pbssBANK1:	
  1429  00A0                     __PIR:	
  1430  00A0                     	ds	42
  1431  00CA                     _DimmerLights1:	
  1432  00CA                     	ds	8
  1433                           
  1434                           	psect	clrtext
  1435  0DB6                     clear_ram0:	
  1436                           ;	Called with FSR containing the base address, and
  1437                           ;	W with the last address+1
  1438                           
  1439  0DB6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1440  0DB7                     clrloop0:	
  1441  0DB7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1442  0DB8  0A84               	incf	4,f	;increment pointer
  1443  0DB9  0604               	xorwf	4,w	;XOR with final address
  1444  0DBA  1903               	btfsc	3,2	;have we reached the end yet?
  1445  0DBB  3400               	retlw	0	;all done for this memory range, return
  1446  0DBC  0604               	xorwf	4,w	;XOR again to restore value
  1447  0DBD  2DB7               	goto	clrloop0	;do the next byte
  1448                           
  1449                           	psect	cstackCOMMON
  1450  0075                     __pcstackCOMMON:	
  1451  0075                     ?_setDimmerLights_Initialization:	
  1452  0075                     ?_setDimmerLights_Main:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     ?_DimmerLights_PIR_Control:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0075                     ?_setLED_Initialization:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0075                     ?_setPIRLED_Main:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0075                     ?_Fosc_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0075                     ?_IO_Set:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0075                     ?_TMR1_Set:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0075                     ?_ADC_Set:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0075                     ?_WDT_Set:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0075                     ?_TMR1_ISR:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0075                     ?_Timeout_Counter:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0075                     ?_set_TimeoutCleared:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0075                     ?_WDT_Clearing:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0075                     ?_myMain_Initialization:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0075                     ?_Temp_Initialization:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0075                     ?_PIR_Initialization:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0075                     ?_getTemp_AD:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0075                     ?_my_MainTimer:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0075                     ?_Temp_Main:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0075                     ?_PIR_Main:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0075                     ?_Exception_Main:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0075                     ?_setTemp_Initialization:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0075                     ?_setTemp_Main:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0075                     ?_CDS_Initialization:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0075                     ?_CDS_Main:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0075                     ?_DimmerIntr_Initialization:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0075                     ?_DimmerLights_SelectPointer:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0075                     ?_DimmerLights_Initialization:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0075                     ?_setDimmerLights_SwOn:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0075                     ?_setDimmerLights_SwOff:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0075                     ?_DimmerLights_Main:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0075                     ?_DimmerLights_TMR_1:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0075                     ??_DimmerLights_TMR_1:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0075                     ?_DimmerLights_IOC_1:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0075                     ??_DimmerLights_IOC_1:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0075                     ?_LedPointSelect:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0075                     ?_LED_Initialization:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0075                     ?_LED_Main:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0075                     ?_Mcu_Initialization:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0075                     ?_ISR:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0075                     ?_WDT_Main:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0075                     ?_getDimmerLights_Allow_Condition:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0075                     ?_getMain_All_LightsStatus:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0075                     ?_getCmd_Status:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0075                     ?_getCDS_Status:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0075                     ?_getDimmerIntr_DimmingValue:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0075                     ?_getDimmerLights_Status:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0075                     ?_getMain_All_Error_Status:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0075                     setDimmerLights_Initialization@lights:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0075                     getDimmerLights_Allow_Condition@lights:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x0
  1604  0075                     	ds	1
  1605  0076                     ??_TMR1_ISR:	
  1606  0076                     ??_ISR:	
  1607                           ; 0 bytes @ 0x1
  1608                           
  1609                           
  1610                           ; 0 bytes @ 0x1
  1611  0076                     	ds	4
  1612                           
  1613                           	psect	cstackBANK0
  1614  0057                     __pcstackBANK0:	
  1615  0057                     ??_setDimmerLights_Initialization:	
  1616  0057                     ??_getDimmerLights_Allow_Condition:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0057                     ??_getMain_All_LightsStatus:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0057                     ??_getCmd_Status:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0057                     ?_setCmd_Status:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0057                     ??_Fosc_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0057                     ??_IO_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0057                     ??_TMR1_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0057                     ??_ADC_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0057                     ??_WDT_Set:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0057                     ??_Timeout_Counter:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0057                     ??_set_TimeoutCleared:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0057                     ??_WDT_Clearing:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0057                     ??_myMain_Initialization:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0057                     ??_Temp_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0057                     ??_PIR_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0057                     ??_my_MainTimer:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0057                     ??_setTemp_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0057                     ??_CDS_Initialization:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0057                     ??_CDS_Main:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0057                     ??_getCDS_Status:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0057                     ??_DimmerIntr_Initialization:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0057                     ?_setDimmerIntr_ControlStatus:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0057                     ?_setDimmerIntr_DimmingValue:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0057                     ??_getDimmerIntr_DimmingValue:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0057                     ?_setDimmerIntr_MaxmumValue:	
  1689                           ; 0 bytes @ 0x0
  1690                           
  1691  0057                     ?_setDimmerIntr_Dimming_Sw:	
  1692                           ; 0 bytes @ 0x0
  1693                           
  1694  0057                     ?_setDimmerIntr_Dimming_RF:	
  1695                           ; 0 bytes @ 0x0
  1696                           
  1697  0057                     ??_DimmerLights_SelectPointer:	
  1698                           ; 0 bytes @ 0x0
  1699                           
  1700  0057                     ??_LedPointSelect:	
  1701                           ; 0 bytes @ 0x0
  1702                           
  1703  0057                     ??_WDT_Main:	
  1704                           ; 0 bytes @ 0x0
  1705                           
  1706  0057                     ??_getMain_All_Error_Status:	
  1707                           ; 0 bytes @ 0x0
  1708                           
  1709  0057                     ?_getAD:	
  1710                           ; 0 bytes @ 0x0
  1711                           
  1712  0057                     ?___awdiv:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0057                     ?___lwdiv:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718  0057                     getCDS_Status@status:	
  1719                           ; 2 bytes @ 0x0
  1720                           
  1721  0057                     setDimmerIntr_ControlStatus@command:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0057                     setDimmerIntr_DimmingValue@value:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0057                     setDimmerIntr_MaxmumValue@value:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0057                     setDimmerIntr_Dimming_Sw@command:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0057                     setDimmerIntr_Dimming_RF@command:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0057                     getDimmerLights_Allow_Condition@allow:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0057                     getAD@adcon1:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0057                     getMain_All_LightsStatus@status:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0057                     setCmd_Status@cmd:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0057                     getCmd_Status@number:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0057                     ___awdiv@divisor:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0057                     ___lwdiv@divisor:	
  1755                           ; 2 bytes @ 0x0
  1756                           
  1757                           
  1758                           ; 2 bytes @ 0x0
  1759  0057                     	ds	1
  1760  0058                     ??_getAD:	
  1761  0058                     ??_setCmd_Status:	
  1762                           ; 0 bytes @ 0x1
  1763                           
  1764  0058                     ??_setDimmerIntr_ControlStatus:	
  1765                           ; 0 bytes @ 0x1
  1766                           
  1767  0058                     ??_setDimmerIntr_DimmingValue:	
  1768                           ; 0 bytes @ 0x1
  1769                           
  1770  0058                     ??_setDimmerIntr_MaxmumValue:	
  1771                           ; 0 bytes @ 0x1
  1772                           
  1773  0058                     ??_setDimmerIntr_Dimming_Sw:	
  1774                           ; 0 bytes @ 0x1
  1775                           
  1776  0058                     ??_setDimmerIntr_Dimming_RF:	
  1777                           ; 0 bytes @ 0x1
  1778                           
  1779  0058                     ??_DimmerLights_Initialization:	
  1780                           ; 0 bytes @ 0x1
  1781                           
  1782  0058                     ??_Mcu_Initialization:	
  1783                           ; 0 bytes @ 0x1
  1784                           
  1785  0058                     getDimmerIntr_DimmingValue@lights:	
  1786                           ; 0 bytes @ 0x1
  1787                           
  1788  0058                     DimmerLights_SelectPointer@lights:	
  1789                           ; 1 bytes @ 0x1
  1790                           
  1791  0058                     LedPointSelect@led:	
  1792                           ; 1 bytes @ 0x1
  1793                           
  1794  0058                     getAD@adcon0:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797  0058                     getMain_All_Error_Status@command:	
  1798                           ; 1 bytes @ 0x1
  1799                           
  1800  0058                     getCmd_Status@cmd:	
  1801                           ; 1 bytes @ 0x1
  1802                           
  1803                           
  1804                           ; 1 bytes @ 0x1
  1805  0058                     	ds	1
  1806  0059                     ?_setLED:	
  1807  0059                     ??_getTemp_AD:	
  1808                           ; 0 bytes @ 0x2
  1809                           
  1810  0059                     ?_getCDS_AD:	
  1811                           ; 0 bytes @ 0x2
  1812                           
  1813  0059                     ??_setDimmerLights_SwOn:	
  1814                           ; 0 bytes @ 0x2
  1815                           
  1816  0059                     ??_setDimmerLights_SwOff:	
  1817                           ; 0 bytes @ 0x2
  1818                           
  1819  0059                     ??_getDimmerLights_Status:	
  1820                           ; 0 bytes @ 0x2
  1821                           
  1822  0059                     getCDS_AD@channel2:	
  1823                           ; 0 bytes @ 0x2
  1824                           
  1825  0059                     setDimmerIntr_ControlStatus@lights:	
  1826                           ; 1 bytes @ 0x2
  1827                           
  1828  0059                     setDimmerIntr_DimmingValue@lights:	
  1829                           ; 1 bytes @ 0x2
  1830                           
  1831  0059                     getDimmerIntr_DimmingValue@value:	
  1832                           ; 1 bytes @ 0x2
  1833                           
  1834  0059                     setDimmerIntr_MaxmumValue@lights:	
  1835                           ; 1 bytes @ 0x2
  1836                           
  1837  0059                     setDimmerIntr_Dimming_Sw@lights:	
  1838                           ; 1 bytes @ 0x2
  1839                           
  1840  0059                     setDimmerIntr_Dimming_RF@lights:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843  0059                     setDimmerLights_SwOn@sw:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846  0059                     setDimmerLights_SwOff@sw:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849  0059                     getDimmerLights_Status@lights:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852  0059                     setLED@command:	
  1853                           ; 1 bytes @ 0x2
  1854                           
  1855  0059                     setCmd_Status@number:	
  1856                           ; 1 bytes @ 0x2
  1857                           
  1858  0059                     _getMain_All_Error_Status$2565:	
  1859                           ; 1 bytes @ 0x2
  1860                           
  1861  0059                     ___awdiv@dividend:	
  1862                           ; 2 bytes @ 0x2
  1863                           
  1864  0059                     ___lwdiv@dividend:	
  1865                           ; 2 bytes @ 0x2
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x2
  1869  0059                     	ds	1
  1870  005A                     ?_setDimmerLights_OnOff:	
  1871  005A                     ?_setDimmerLights_Dimming:	
  1872                           ; 0 bytes @ 0x3
  1873                           
  1874  005A                     ??_setLED:	
  1875                           ; 0 bytes @ 0x3
  1876                           
  1877  005A                     ??_getCDS_AD:	
  1878                           ; 0 bytes @ 0x3
  1879                           
  1880  005A                     setDimmerLights_SwOn@idle:	
  1881                           ; 0 bytes @ 0x3
  1882                           
  1883  005A                     setDimmerLights_OnOff@command:	
  1884                           ; 1 bytes @ 0x3
  1885                           
  1886  005A                     setDimmerLights_Dimming@status:	
  1887                           ; 1 bytes @ 0x3
  1888                           
  1889  005A                     getDimmerLights_Status@status:	
  1890                           ; 1 bytes @ 0x3
  1891                           
  1892  005A                     setLED@led:	
  1893                           ; 1 bytes @ 0x3
  1894                           
  1895                           
  1896                           ; 1 bytes @ 0x3
  1897  005A                     	ds	1
  1898  005B                     ??_DimmerLights_PIR_Control:	
  1899  005B                     ??_setDimmerLights_OnOff:	
  1900                           ; 0 bytes @ 0x4
  1901                           
  1902  005B                     ??_setDimmerLights_Dimming:	
  1903                           ; 0 bytes @ 0x4
  1904                           
  1905  005B                     ??_setLED_Initialization:	
  1906                           ; 0 bytes @ 0x4
  1907                           
  1908  005B                     ??_setPIRLED_Main:	
  1909                           ; 0 bytes @ 0x4
  1910                           
  1911  005B                     ??___awdiv:	
  1912                           ; 0 bytes @ 0x4
  1913                           
  1914  005B                     ??___lwdiv:	
  1915                           ; 0 bytes @ 0x4
  1916                           
  1917  005B                     setDimmerLights_OnOff@lights:	
  1918                           ; 0 bytes @ 0x4
  1919                           
  1920  005B                     setLED_Initialization@led:	
  1921                           ; 1 bytes @ 0x4
  1922                           
  1923  005B                     getMain_All_Error_Status@status:	
  1924                           ; 1 bytes @ 0x4
  1925                           
  1926  005B                     getTemp_AD@channel:	
  1927                           ; 1 bytes @ 0x4
  1928                           
  1929                           
  1930                           ; 1 bytes @ 0x4
  1931  005B                     	ds	1
  1932  005C                     ??_PIR_Main:	
  1933  005C                     ??_Exception_Main:	
  1934                           ; 0 bytes @ 0x5
  1935                           
  1936  005C                     ??_setTemp_Main:	
  1937                           ; 0 bytes @ 0x5
  1938                           
  1939  005C                     ??_LED_Initialization:	
  1940                           ; 0 bytes @ 0x5
  1941                           
  1942  005C                     getCDS_AD@i:	
  1943                           ; 0 bytes @ 0x5
  1944                           
  1945  005C                     setDimmerLights_Dimming@value:	
  1946                           ; 1 bytes @ 0x5
  1947                           
  1948  005C                     setPIRLED_Main@count:	
  1949                           ; 1 bytes @ 0x5
  1950                           
  1951  005C                     getTemp_AD@ADRES:	
  1952                           ; 1 bytes @ 0x5
  1953                           
  1954  005C                     ___awdiv@counter:	
  1955                           ; 1 bytes @ 0x5
  1956                           
  1957  005C                     ___lwdiv@counter:	
  1958                           ; 1 bytes @ 0x5
  1959                           
  1960                           
  1961                           ; 1 bytes @ 0x5
  1962  005C                     	ds	1
  1963  005D                     ??_LED_Main:	
  1964  005D                     getCDS_AD@j:	
  1965                           ; 0 bytes @ 0x6
  1966                           
  1967  005D                     setDimmerLights_Dimming@lights:	
  1968                           ; 1 bytes @ 0x6
  1969                           
  1970  005D                     Exception_Main@lights:	
  1971                           ; 1 bytes @ 0x6
  1972                           
  1973  005D                     setTemp_Main@error:	
  1974                           ; 1 bytes @ 0x6
  1975                           
  1976  005D                     ___awdiv@sign:	
  1977                           ; 1 bytes @ 0x6
  1978                           
  1979  005D                     ___lwdiv@quotient:	
  1980                           ; 1 bytes @ 0x6
  1981                           
  1982                           
  1983                           ; 2 bytes @ 0x6
  1984  005D                     	ds	1
  1985  005E                     ??_setDimmerLights_Main:	
  1986  005E                     getCDS_AD@channel1:	
  1987                           ; 0 bytes @ 0x7
  1988                           
  1989  005E                     setDimmerLights_Main@lights:	
  1990                           ; 1 bytes @ 0x7
  1991                           
  1992  005E                     Exception_Main@count:	
  1993                           ; 1 bytes @ 0x7
  1994                           
  1995  005E                     setTemp_Main@TempGO:	
  1996                           ; 1 bytes @ 0x7
  1997                           
  1998  005E                     ___awdiv@quotient:	
  1999                           ; 1 bytes @ 0x7
  2000                           
  2001                           
  2002                           ; 2 bytes @ 0x7
  2003  005E                     	ds	1
  2004  005F                     ??_DimmerLights_Main:	
  2005  005F                     Exception_Main@status:	
  2006                           ; 0 bytes @ 0x8
  2007                           
  2008  005F                     setTemp_Main@SafeValue:	
  2009                           ; 1 bytes @ 0x8
  2010                           
  2011                           
  2012                           ; 1 bytes @ 0x8
  2013  005F                     	ds	1
  2014  0060                     ?_getPIR_AD:	
  2015  0060                     Exception_Main@error:	
  2016                           ; 0 bytes @ 0x9
  2017                           
  2018  0060                     setTemp_Main@DangerValue:	
  2019                           ; 1 bytes @ 0x9
  2020                           
  2021  0060                     getPIR_AD@channel2:	
  2022                           ; 1 bytes @ 0x9
  2023                           
  2024                           
  2025                           ; 1 bytes @ 0x9
  2026  0060                     	ds	1
  2027  0061                     ??_getPIR_AD:	
  2028  0061                     setTemp_Main@AD:	
  2029                           ; 0 bytes @ 0xA
  2030                           
  2031  0061                     PIR_Main@error:	
  2032                           ; 1 bytes @ 0xA
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0xA
  2036  0061                     	ds	1
  2037  0062                     ??_Temp_Main:	
  2038  0062                     PIR_Main@cds:	
  2039                           ; 0 bytes @ 0xB
  2040                           
  2041                           
  2042                           ; 1 bytes @ 0xB
  2043  0062                     	ds	1
  2044  0063                     PIR_Main@Enable_Switch:	
  2045                           
  2046                           ; 1 bytes @ 0xC
  2047  0063                     	ds	1
  2048  0064                     getPIR_AD@j:	
  2049  0064                     _PIR_Main$3333:	
  2050                           ; 1 bytes @ 0xD
  2051                           
  2052                           
  2053                           ; 2 bytes @ 0xD
  2054  0064                     	ds	1
  2055  0065                     getPIR_AD@channel1:	
  2056                           
  2057                           ; 1 bytes @ 0xE
  2058  0065                     	ds	1
  2059  0066                     PIR_Main@TriggerValue:	
  2060  0066                     getPIR_AD@VRAD1:	
  2061                           ; 1 bytes @ 0xF
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0xF
  2065  0066                     	ds	1
  2066  0067                     PIR_Main@LightsStatus:	
  2067  0067                     getPIR_AD@VRAD:	
  2068                           ; 1 bytes @ 0x10
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x10
  2072  0067                     	ds	1
  2073  0068                     getPIR_AD@i:	
  2074                           
  2075                           ; 1 bytes @ 0x11
  2076  0068                     	ds	1
  2077  0069                     ?_main:	
  2078  0069                     main@argc:	
  2079                           ; 2 bytes @ 0x12
  2080                           
  2081                           
  2082                           ; 2 bytes @ 0x12
  2083  0069                     	ds	2
  2084  006B                     main@argv:	
  2085                           
  2086                           ; 2 bytes @ 0x14
  2087  006B                     	ds	2
  2088  006D                     ??_main:	
  2089                           
  2090                           ; 0 bytes @ 0x16
  2091  006D                     	ds	1
  2092                           
  2093                           	psect	maintext
  2094  05EA                     __pmaintext:	
  2095 ;;
  2096 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2097 ;;
  2098 ;; *************** function _main *****************
  2099 ;; Defined at:
  2100 ;;		line 7 in file "../src/Main_B1.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  argc            2   18[BANK0 ] int 
  2103 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2   18[BANK0 ] int 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 17F/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2115 ;;      Params:         0       4       0       0
  2116 ;;      Locals:         0       0       0       0
  2117 ;;      Temps:          0       1       0       0
  2118 ;;      Totals:         0       5       0       0
  2119 ;;Total ram usage:        5 bytes
  2120 ;; Hardware stack levels required when called:    7
  2121 ;; This function calls:
  2122 ;;		_CDS_Initialization
  2123 ;;		_CDS_Main
  2124 ;;		_DimmerLights_Initialization
  2125 ;;		_DimmerLights_Main
  2126 ;;		_Exception_Main
  2127 ;;		_LED_Initialization
  2128 ;;		_LED_Main
  2129 ;;		_Mcu_Initialization
  2130 ;;		_PIR_Initialization
  2131 ;;		_PIR_Main
  2132 ;;		_Temp_Initialization
  2133 ;;		_Temp_Main
  2134 ;;		_WDT_Main
  2135 ;;		_getCDS_AD
  2136 ;;		_getPIR_AD
  2137 ;;		_getTemp_AD
  2138 ;;		_myMain_Initialization
  2139 ;;		_my_MainTimer
  2140 ;; This function is called by:
  2141 ;;		Startup code after reset
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _main
  2147  05EA                     _main:	
  2148                           
  2149                           ;Main_B1.c: 8: myMain_Initialization();
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2153  05EA  158A  257B  118A   	fcall	_myMain_Initialization
  2154                           
  2155                           ;Main_B1.c: 9: Mcu_Initialization();
  2156  05ED  158A  2632  118A   	fcall	_Mcu_Initialization
  2157                           
  2158                           ;Main_B1.c: 10: ;;
  2159                           ;Main_B1.c: 11: LED_Initialization();
  2160  05F0  158A  25E2  118A   	fcall	_LED_Initialization
  2161                           
  2162                           ;Main_B1.c: 12: ;;
  2163                           ;Main_B1.c: 14: ;;
  2164                           ;Main_B1.c: 15: Temp_Initialization();
  2165  05F3  158A  257F  118A   	fcall	_Temp_Initialization
  2166                           
  2167                           ;Main_B1.c: 16: ;;
  2168                           ;Main_B1.c: 17: ;;
  2169                           ;Main_B1.c: 18: ;;
  2170                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2171  05F6  158A  2599  118A   	fcall	_DimmerLights_Initialization
  2172                           
  2173                           ;Main_B1.c: 21: ;;
  2174                           ;Main_B1.c: 22: CDS_Initialization();
  2175  05F9  158A  2585  118A   	fcall	_CDS_Initialization
  2176                           
  2177                           ;Main_B1.c: 23: PIR_Initialization();
  2178  05FC  158A  25FB  118A   	fcall	_PIR_Initialization
  2179  05FF                     l4957:	
  2180                           ;Main_B1.c: 24: ;;
  2181                           ;Main_B1.c: 25: ;;
  2182                           ;Main_B1.c: 26: ;;
  2183                           ;Main_B1.c: 27: ;;
  2184                           ;Main_B1.c: 28: ;;
  2185                           ;Main_B1.c: 30: while (1) {
  2186                           
  2187                           
  2188                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2189  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0601  1C31               	btfss	_myMain,0
  2192  0602  2E1B               	goto	l4963
  2193                           
  2194                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2195  0603  3011               	movlw	17
  2196  0604  118A  2773  118A   	fcall	_getTemp_AD
  2197                           
  2198                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2199  0607  3031               	movlw	49
  2200  0608  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0609  1303               	bcf	3,6	;RP1=0, select bank0
  2202  060A  00ED               	movwf	??_main
  2203  060B  086D               	movf	??_main,w
  2204  060C  00D9               	movwf	getCDS_AD@channel2
  2205  060D  3009               	movlw	9
  2206  060E  158A  27BB  118A   	fcall	_getCDS_AD
  2207                           
  2208                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2209  0611  300D               	movlw	13
  2210  0612  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0613  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0614  00ED               	movwf	??_main
  2213  0615  086D               	movf	??_main,w
  2214  0616  00E0               	movwf	getPIR_AD@channel2
  2215  0617  3005               	movlw	5
  2216  0618  118A  220E  118A   	fcall	_getPIR_AD
  2217  061B                     l4963:	
  2218                           
  2219                           ;Main_B1.c: 57: }
  2220                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2221  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2222  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2223  061D  1C3E               	btfss	_Timer1,0
  2224  061E  2DFF               	goto	l4957
  2225                           
  2226                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2227  061F  103E               	bcf	_Timer1,0
  2228                           
  2229                           ;Main_B1.c: 96: my_MainTimer();
  2230  0620  158A  274D  118A   	fcall	_my_MainTimer
  2231                           
  2232                           ;Main_B1.c: 97: WDT_Main();
  2233  0623  158A  2663  118A   	fcall	_WDT_Main
  2234                           
  2235                           ;Main_B1.c: 98: ;;
  2236                           ;Main_B1.c: 99: ;;
  2237                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2238  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0628  1C31               	btfss	_myMain,0
  2241  0629  2DFF               	goto	l4957
  2242                           
  2243                           ;Main_B1.c: 101: ;;
  2244                           ;Main_B1.c: 103: LED_Main();
  2245  062A  158A  257C  118A   	fcall	_LED_Main
  2246                           
  2247                           ;Main_B1.c: 104: ;;
  2248                           ;Main_B1.c: 106: ;;
  2249                           ;Main_B1.c: 107: Temp_Main();
  2250  062D  158A  2582  118A   	fcall	_Temp_Main
  2251                           
  2252                           ;Main_B1.c: 108: ;;
  2253                           ;Main_B1.c: 109: ;;
  2254                           ;Main_B1.c: 111: ;;
  2255                           ;Main_B1.c: 112: DimmerLights_Main();
  2256  0630  158A  25A0  118A   	fcall	_DimmerLights_Main
  2257                           
  2258                           ;Main_B1.c: 113: ;;
  2259                           ;Main_B1.c: 114: CDS_Main();
  2260  0633  118A  2712  118A   	fcall	_CDS_Main
  2261                           
  2262                           ;Main_B1.c: 115: PIR_Main();
  2263  0636  118A  2027  118A   	fcall	_PIR_Main
  2264                           
  2265                           ;Main_B1.c: 117: ;;
  2266                           ;Main_B1.c: 118: ;;
  2267                           ;Main_B1.c: 119: ;;
  2268                           ;Main_B1.c: 120: ;;
  2269                           ;Main_B1.c: 121: Exception_Main();
  2270  0639  118A  268E  118A   	fcall	_Exception_Main
  2271  063C  2DFF               	goto	l4957
  2272  063D                     __end_of_main:	
  2273                           ;Main_B1.c: 128: }
  2274                           ;Main_B1.c: 129: }
  2275                           ;Main_B1.c: 163: }
  2276                           ;Main_B1.c: 164: return (0);
  2277                           ;	Return value of _main is never used
  2278                           
  2279                           
  2280                           	psect	text1
  2281  0F4D                     __ptext1:	
  2282 ;; *************** function _my_MainTimer *****************
  2283 ;; Defined at:
  2284 ;;		line 185 in file "../src/Main_B1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2298 ;;      Params:         0       0       0       0
  2299 ;;      Locals:         0       0       0       0
  2300 ;;      Temps:          0       1       0       0
  2301 ;;      Totals:         0       1       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _my_MainTimer
  2314  0F4D                     _my_MainTimer:	
  2315                           
  2316                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2320  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0F4F  1831               	btfsc	_myMain,0
  2323  0F50  2F5D               	goto	l4717
  2324                           
  2325                           ;Main_B1.c: 188: myMain.PowerCount++;
  2326  0F51  3001               	movlw	1
  2327  0F52  00D7               	movwf	??_my_MainTimer
  2328  0F53  0857               	movf	??_my_MainTimer,w
  2329  0F54  07B2               	addwf	_myMain+1,f
  2330                           
  2331                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2332  0F55  0832               	movf	_myMain+1,w
  2333  0F56  3A4B               	xorlw	75
  2334  0F57  1D03               	skipz
  2335  0F58  0008               	return
  2336                           
  2337                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2338  0F59  01B2               	clrf	_myMain+1
  2339                           
  2340                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2341  0F5A  1431               	bsf	_myMain,0
  2342                           
  2343                           ;Main_B1.c: 196: ;;
  2344                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2345  0F5B  1631               	bsf	_myMain,4
  2346                           
  2347                           ;Main_B1.c: 206: }
  2348                           ;Main_B1.c: 207: } else {
  2349  0F5C  0008               	return
  2350  0F5D                     l4717:	
  2351                           
  2352                           ;Main_B1.c: 208: myMain.PowerCount++;
  2353  0F5D  3001               	movlw	1
  2354  0F5E  00D7               	movwf	??_my_MainTimer
  2355  0F5F  0857               	movf	??_my_MainTimer,w
  2356  0F60  07B2               	addwf	_myMain+1,f
  2357                           
  2358                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2359  0F61  0832               	movf	_myMain+1,w
  2360  0F62  3A32               	xorlw	50
  2361  0F63  1D03               	skipz
  2362  0F64  0008               	return
  2363                           
  2364                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2365  0F65  01B2               	clrf	_myMain+1
  2366  0F66  0008               	return
  2367  0F67                     __end_of_my_MainTimer:	
  2368                           
  2369                           	psect	text2
  2370  0D7B                     __ptext2:	
  2371 ;; *************** function _myMain_Initialization *****************
  2372 ;; Defined at:
  2373 ;;		line 170 in file "../src/Main_B1.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		None
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         0       0       0       0
  2388 ;;      Locals:         0       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    3
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _myMain_Initialization
  2403  0D7B                     _myMain_Initialization:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _myMain_Initialization: []
  2407  0D7B  0008               	return
  2408  0D7C                     __end_of_myMain_Initialization:	
  2409                           
  2410                           	psect	text3
  2411  0773                     __ptext3:	
  2412 ;; *************** function _getTemp_AD *****************
  2413 ;; Defined at:
  2414 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  channel         1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  channel         1    4[BANK0 ] unsigned char 
  2419 ;;  ADRES           1    5[BANK0 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2429 ;;      Params:         0       0       0       0
  2430 ;;      Locals:         0       2       0       0
  2431 ;;      Temps:          0       2       0       0
  2432 ;;      Totals:         0       4       0       0
  2433 ;;Total ram usage:        4 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    5
  2436 ;; This function calls:
  2437 ;;		_getAD
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _getTemp_AD
  2445  0773                     _getTemp_AD:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2449                           ;getTemp_AD@channel stored from wreg
  2450  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0775  00DB               	movwf	getTemp_AD@channel
  2453                           
  2454                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2455  0776  01DC               	clrf	getTemp_AD@ADRES
  2456                           
  2457                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2458  0777  1D44               	btfss	_Temp,2
  2459  0778  2F91               	goto	l4625
  2460                           
  2461                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2462  0779  3070               	movlw	112
  2463  077A  00D9               	movwf	??_getTemp_AD
  2464  077B  0859               	movf	??_getTemp_AD,w
  2465  077C  00D7               	movwf	getAD@adcon1
  2466  077D  085B               	movf	getTemp_AD@channel,w
  2467  077E  158A  279F  118A   	fcall	_getAD
  2468  0781  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0782  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0783  00DA               	movwf	??_getTemp_AD+1
  2471  0784  085A               	movf	??_getTemp_AD+1,w
  2472  0785  00DC               	movwf	getTemp_AD@ADRES
  2473                           
  2474                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2475  0786  085C               	movf	getTemp_AD@ADRES,w
  2476  0787  1903               	btfsc	3,2
  2477  0788  2F91               	goto	l4625
  2478                           
  2479                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2480  0789  085C               	movf	getTemp_AD@ADRES,w
  2481  078A  024A               	subwf	_Temp+6,w
  2482  078B  1803               	skipnc
  2483  078C  2F91               	goto	l4625
  2484                           
  2485                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2486  078D  085C               	movf	getTemp_AD@ADRES,w
  2487  078E  00D9               	movwf	??_getTemp_AD
  2488  078F  0859               	movf	??_getTemp_AD,w
  2489  0790  00CA               	movwf	_Temp+6
  2490  0791                     l4625:	
  2491                           
  2492                           ;OverTemperature_B1.c: 32: }
  2493                           ;OverTemperature_B1.c: 33: }
  2494                           ;OverTemperature_B1.c: 34: }
  2495                           ;OverTemperature_B1.c: 41: ADRES = getAD(channel, 0x70);
  2496  0791  3070               	movlw	112
  2497  0792  00D9               	movwf	??_getTemp_AD
  2498  0793  0859               	movf	??_getTemp_AD,w
  2499  0794  00D7               	movwf	getAD@adcon1
  2500  0795  085B               	movf	getTemp_AD@channel,w
  2501  0796  158A  279F         	fcall	_getAD
  2502  0798  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0799  1303               	bcf	3,6	;RP1=0, select bank0
  2504  079A  00DA               	movwf	??_getTemp_AD+1
  2505  079B  085A               	movf	??_getTemp_AD+1,w
  2506  079C  00DC               	movwf	getTemp_AD@ADRES
  2507  079D  0008               	return
  2508  079E                     __end_of_getTemp_AD:	
  2509                           
  2510                           	psect	text4
  2511  020E                     __ptext4:	
  2512 ;; *************** function _getPIR_AD *****************
  2513 ;; Defined at:
  2514 ;;		line 342 in file "../src/PIR_B1.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  channel1        1    wreg     unsigned char 
  2517 ;;  channel2        1    9[BANK0 ] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  channel1        1   14[BANK0 ] unsigned char 
  2520 ;;  i               1   17[BANK0 ] unsigned char 
  2521 ;;  VRAD            1   16[BANK0 ] unsigned char 
  2522 ;;  VRAD1           1   15[BANK0 ] unsigned char 
  2523 ;;  j               1   13[BANK0 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2533 ;;      Params:         0       1       0       0
  2534 ;;      Locals:         0       5       0       0
  2535 ;;      Temps:          0       3       0       0
  2536 ;;      Totals:         0       9       0       0
  2537 ;;Total ram usage:        9 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    5
  2540 ;; This function calls:
  2541 ;;		___awdiv
  2542 ;;		___lwdiv
  2543 ;;		_getAD
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _getPIR_AD
  2551  020E                     _getPIR_AD:	
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2555                           ;getPIR_AD@channel1 stored from wreg
  2556  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2557  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0210  00E5               	movwf	getPIR_AD@channel1
  2559                           
  2560                           ;PIR_B1.c: 343: char i = 0, j = 0;
  2561  0211  01E8               	clrf	getPIR_AD@i
  2562  0212  01E4               	clrf	getPIR_AD@j
  2563                           
  2564                           ;PIR_B1.c: 344: char VRAD = 0, VRAD1 = 0;
  2565  0213  01E7               	clrf	getPIR_AD@VRAD
  2566  0214  01E6               	clrf	getPIR_AD@VRAD1
  2567                           
  2568                           ;PIR_B1.c: 345: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2569  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0217  1CA0               	btfss	__PIR^(0+128),1
  2572  0218  0008               	return
  2573  0219  1920               	btfsc	__PIR^(0+128),2
  2574  021A  0008               	return
  2575                           
  2576                           ;PIR_B1.c: 346: _PIR.GO = 1;
  2577  021B  1520               	bsf	__PIR^(0+128),2
  2578                           
  2579                           ;PIR_B1.c: 353: VRAD1 = getAD(channel1, 0x70);
  2580  021C  3070               	movlw	112
  2581  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2582  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2583  021F  00E1               	movwf	??_getPIR_AD
  2584  0220  0861               	movf	??_getPIR_AD,w
  2585  0221  00D7               	movwf	getAD@adcon1
  2586  0222  0865               	movf	getPIR_AD@channel1,w
  2587  0223  158A  279F  118A   	fcall	_getAD
  2588  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0228  00E2               	movwf	??_getPIR_AD+1
  2591  0229  0862               	movf	??_getPIR_AD+1,w
  2592  022A  00E6               	movwf	getPIR_AD@VRAD1
  2593                           
  2594                           ;PIR_B1.c: 354: VRAD = VRAD1 / 25;
  2595  022B  3019               	movlw	25
  2596  022C  00D7               	movwf	___awdiv@divisor
  2597  022D  3000               	movlw	0
  2598  022E  00D8               	movwf	___awdiv@divisor+1
  2599  022F  0866               	movf	getPIR_AD@VRAD1,w
  2600  0230  00E1               	movwf	??_getPIR_AD
  2601  0231  01E2               	clrf	??_getPIR_AD+1
  2602  0232  0861               	movf	??_getPIR_AD,w
  2603  0233  00D9               	movwf	___awdiv@dividend
  2604  0234  0862               	movf	??_getPIR_AD+1,w
  2605  0235  00DA               	movwf	___awdiv@dividend+1
  2606  0236  118A  258D  118A   	fcall	___awdiv
  2607  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2608  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2609  023B  0857               	movf	?___awdiv,w
  2610  023C  00E3               	movwf	??_getPIR_AD+2
  2611  023D  0863               	movf	??_getPIR_AD+2,w
  2612  023E  00E7               	movwf	getPIR_AD@VRAD
  2613                           
  2614                           ;PIR_B1.c: 355: _PIR.SignalAD = getAD(channel2, 0x70);
  2615  023F  3070               	movlw	112
  2616  0240  00E1               	movwf	??_getPIR_AD
  2617  0241  0861               	movf	??_getPIR_AD,w
  2618  0242  00D7               	movwf	getAD@adcon1
  2619  0243  0860               	movf	getPIR_AD@channel2,w
  2620  0244  158A  279F  118A   	fcall	_getAD
  2621  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0249  00E2               	movwf	??_getPIR_AD+1
  2624  024A  0862               	movf	??_getPIR_AD+1,w
  2625  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2626  024C  1303               	bcf	3,6	;RP1=0, select bank1
  2627  024D  00A1               	movwf	(__PIR^(0+128)+1)
  2628                           
  2629                           ;PIR_B1.c: 369: if (VRAD < 1) {
  2630  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2631  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0250  08E7               	movf	getPIR_AD@VRAD,f
  2633  0251  1D03               	skipz
  2634  0252  2A55               	goto	l4641
  2635                           
  2636                           ;PIR_B1.c: 370: _PIR.CloseTimeValue = 5;
  2637  0253  3005               	movlw	5
  2638  0254  2A5B               	goto	L1
  2639  0255                     l4641:	
  2640                           ;PIR_B1.c: 371: } else if (VRAD < 3) {
  2641                           
  2642  0255  3003               	movlw	3
  2643  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0257  0267               	subwf	getPIR_AD@VRAD,w
  2645  0258  1803               	skipnc
  2646  0259  2A60               	goto	l4645
  2647                           
  2648                           ;PIR_B1.c: 372: _PIR.CloseTimeValue = 60;
  2649  025A  303C               	movlw	60
  2650  025B                     L1:	
  2651  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2652  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2653  025D  00C3               	movwf	(__PIR^(0+128)+35)
  2654  025E  3000               	movlw	0
  2655  025F  2A86               	goto	L5
  2656  0260                     l4645:	
  2657                           ;PIR_B1.c: 373: } else if (VRAD < 5) {
  2658                           
  2659  0260  3005               	movlw	5
  2660  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0262  0267               	subwf	getPIR_AD@VRAD,w
  2662  0263  1803               	skipnc
  2663  0264  2A6B               	goto	l4649
  2664                           
  2665                           ;PIR_B1.c: 374: _PIR.CloseTimeValue = 300;
  2666  0265  302C               	movlw	44
  2667  0266  1683               	bsf	3,5	;RP0=1, select bank1
  2668  0267  1303               	bcf	3,6	;RP1=0, select bank1
  2669  0268  00C3               	movwf	(__PIR^(0+128)+35)
  2670  0269  3001               	movlw	1
  2671  026A  2A86               	goto	L5
  2672  026B                     l4649:	
  2673                           ;PIR_B1.c: 375: } else if (VRAD < 7) {
  2674                           
  2675  026B  3007               	movlw	7
  2676  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2677  026D  0267               	subwf	getPIR_AD@VRAD,w
  2678  026E  1803               	skipnc
  2679  026F  2A76               	goto	l4653
  2680                           
  2681                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 600;
  2682  0270  3058               	movlw	88
  2683  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0273  00C3               	movwf	(__PIR^(0+128)+35)
  2686  0274  3002               	movlw	2
  2687  0275  2A86               	goto	L5
  2688  0276                     l4653:	
  2689                           ;PIR_B1.c: 377: } else if (VRAD < 9) {
  2690                           
  2691  0276  3009               	movlw	9
  2692  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0278  0267               	subwf	getPIR_AD@VRAD,w
  2694  0279  1803               	skipnc
  2695  027A  2A81               	goto	l4657
  2696                           
  2697                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 900;
  2698  027B  3084               	movlw	132
  2699  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2700  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2701  027E  00C3               	movwf	(__PIR^(0+128)+35)
  2702  027F  3003               	movlw	3
  2703  0280  2A86               	goto	L5
  2704  0281                     l4657:	
  2705                           ;PIR_B1.c: 379: } else {
  2706                           
  2707                           
  2708                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 1200;
  2709  0281  30B0               	movlw	176
  2710  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2712  0284  00C3               	movwf	(__PIR^(0+128)+35)
  2713  0285  3004               	movlw	4
  2714  0286                     L5:	
  2715  0286  00C4               	movwf	(__PIR^(0+128)+36)
  2716                           
  2717                           ;PIR_B1.c: 381: }
  2718                           ;PIR_B1.c: 390: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2719  0287  0821               	movf	(__PIR^(0+128)+1),w
  2720  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2721  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2722  028A  00E1               	movwf	??_getPIR_AD
  2723  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2724  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2725  028D  0824               	movf	(__PIR^(0+128)+4),w
  2726  028E  3EA5               	addlw	(__PIR+5)& (0+255)
  2727  028F  0084               	movwf	4
  2728  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0292  0861               	movf	??_getPIR_AD,w
  2731  0293  1383               	bcf	3,7	;select IRP bank1
  2732  0294  0080               	movwf	0
  2733                           
  2734                           ;PIR_B1.c: 391: for (i = 0; i < 10; i++) {
  2735  0295  01E8               	clrf	getPIR_AD@i
  2736  0296  300A               	movlw	10
  2737  0297  0268               	subwf	getPIR_AD@i,w
  2738  0298  1803               	btfsc	3,0
  2739  0299  2AB6               	goto	l4673
  2740  029A                     l4667:	
  2741                           
  2742                           ;PIR_B1.c: 392: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2743  029A  0868               	movf	getPIR_AD@i,w
  2744  029B  3EA5               	addlw	(__PIR+5)& (0+255)
  2745  029C  0084               	movwf	4
  2746  029D  0800               	movf	0,w
  2747  029E  00E1               	movwf	??_getPIR_AD
  2748  029F  01E2               	clrf	??_getPIR_AD+1
  2749  02A0  0861               	movf	??_getPIR_AD,w
  2750  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2751  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2752  02A3  07AF               	addwf	(__PIR^(0+128)+15),f
  2753  02A4  1803               	skipnc
  2754  02A5  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2755  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2756  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2757  02A8  0862               	movf	??_getPIR_AD+1,w
  2758  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2759  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2760  02AB  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2761  02AC  3001               	movlw	1
  2762  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2763  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2764  02AF  00E1               	movwf	??_getPIR_AD
  2765  02B0  0861               	movf	??_getPIR_AD,w
  2766  02B1  07E8               	addwf	getPIR_AD@i,f
  2767  02B2  300A               	movlw	10
  2768  02B3  0268               	subwf	getPIR_AD@i,w
  2769  02B4  1C03               	skipc
  2770  02B5  2A9A               	goto	l4667
  2771  02B6                     l4673:	
  2772                           
  2773                           ;PIR_B1.c: 393: }
  2774                           ;PIR_B1.c: 394: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2775  02B6  300A               	movlw	10
  2776  02B7  00D7               	movwf	___lwdiv@divisor
  2777  02B8  3000               	movlw	0
  2778  02B9  00D8               	movwf	___lwdiv@divisor+1
  2779  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2780  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2781  02BC  0830               	movf	((__PIR+1)^(0+128)+15),w
  2782  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2783  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2784  02BF  01DA               	clrf	___lwdiv@dividend+1
  2785  02C0  07DA               	addwf	___lwdiv@dividend+1,f
  2786  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2787  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2788  02C3  082F               	movf	(__PIR^(0+128)+15),w
  2789  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2790  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2791  02C6  01D9               	clrf	___lwdiv@dividend
  2792  02C7  07D9               	addwf	___lwdiv@dividend,f
  2793  02C8  118A  26D2  118A   	fcall	___lwdiv
  2794  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2795  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2796  02CD  0857               	movf	?___lwdiv,w
  2797  02CE  00E1               	movwf	??_getPIR_AD
  2798  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2799  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2800  02D1  0831               	movf	(__PIR^(0+128)+17),w
  2801  02D2  3EB2               	addlw	(__PIR+18)& (0+255)
  2802  02D3  0084               	movwf	4
  2803  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2804  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2805  02D6  0861               	movf	??_getPIR_AD,w
  2806  02D7  1383               	bcf	3,7	;select IRP bank1
  2807  02D8  0080               	movwf	0
  2808                           
  2809                           ;PIR_B1.c: 395: _PIR.TenAverageValue = 0;
  2810  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2811  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2812  02DB  01AF               	clrf	(__PIR^(0+128)+15)
  2813  02DC  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2814                           
  2815                           ;PIR_B1.c: 397: for (i = 0; i <= 9; i++) {
  2816  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2817  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2818  02DF  01E8               	clrf	getPIR_AD@i
  2819  02E0  300A               	movlw	10
  2820  02E1  0268               	subwf	getPIR_AD@i,w
  2821  02E2  1803               	btfsc	3,0
  2822  02E3  2B00               	goto	l4689
  2823  02E4                     l4683:	
  2824                           
  2825                           ;PIR_B1.c: 398: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2826  02E4  0868               	movf	getPIR_AD@i,w
  2827  02E5  3EB2               	addlw	(__PIR+18)& (0+255)
  2828  02E6  0084               	movwf	4
  2829  02E7  0800               	movf	0,w
  2830  02E8  00E1               	movwf	??_getPIR_AD
  2831  02E9  01E2               	clrf	??_getPIR_AD+1
  2832  02EA  0861               	movf	??_getPIR_AD,w
  2833  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2834  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2835  02ED  07BC               	addwf	(__PIR^(0+128)+28),f
  2836  02EE  1803               	skipnc
  2837  02EF  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2838  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2839  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2840  02F2  0862               	movf	??_getPIR_AD+1,w
  2841  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2842  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2843  02F5  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2844  02F6  3001               	movlw	1
  2845  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2846  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2847  02F9  00E1               	movwf	??_getPIR_AD
  2848  02FA  0861               	movf	??_getPIR_AD,w
  2849  02FB  07E8               	addwf	getPIR_AD@i,f
  2850  02FC  300A               	movlw	10
  2851  02FD  0268               	subwf	getPIR_AD@i,w
  2852  02FE  1C03               	skipc
  2853  02FF  2AE4               	goto	l4683
  2854  0300                     l4689:	
  2855                           
  2856                           ;PIR_B1.c: 399: }
  2857                           ;PIR_B1.c: 400: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2858  0300  300A               	movlw	10
  2859  0301  00D7               	movwf	___lwdiv@divisor
  2860  0302  3000               	movlw	0
  2861  0303  00D8               	movwf	___lwdiv@divisor+1
  2862  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2864  0306  083D               	movf	((__PIR+1)^(0+128)+28),w
  2865  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2866  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0309  01DA               	clrf	___lwdiv@dividend+1
  2868  030A  07DA               	addwf	___lwdiv@dividend+1,f
  2869  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2870  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2871  030D  083C               	movf	(__PIR^(0+128)+28),w
  2872  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2873  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0310  01D9               	clrf	___lwdiv@dividend
  2875  0311  07D9               	addwf	___lwdiv@dividend,f
  2876  0312  118A  26D2  118A   	fcall	___lwdiv
  2877  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0317  0857               	movf	?___lwdiv,w
  2880  0318  00E1               	movwf	??_getPIR_AD
  2881  0319  0861               	movf	??_getPIR_AD,w
  2882  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2883  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2884  031C  00A3               	movwf	(__PIR^(0+128)+3)
  2885                           
  2886                           ;PIR_B1.c: 401: _PIR.HundredAverageValue = 0;
  2887  031D  01BC               	clrf	(__PIR^(0+128)+28)
  2888  031E  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2889                           
  2890                           ;PIR_B1.c: 403: if (_PIR.TenCount < 10) {
  2891  031F  300A               	movlw	10
  2892  0320  0224               	subwf	(__PIR^(0+128)+4),w
  2893  0321  1803               	skipnc
  2894  0322  2B2C               	goto	l4697
  2895                           
  2896                           ;PIR_B1.c: 404: _PIR.TenCount++;
  2897  0323  3001               	movlw	1
  2898  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0326  00E1               	movwf	??_getPIR_AD
  2901  0327  0861               	movf	??_getPIR_AD,w
  2902  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2904  032A  07A4               	addwf	(__PIR^(0+128)+4),f
  2905                           
  2906                           ;PIR_B1.c: 405: } else {
  2907  032B  0008               	return
  2908  032C                     l4697:	
  2909                           
  2910                           ;PIR_B1.c: 406: _PIR.TenCount = 0;
  2911  032C  01A4               	clrf	(__PIR^(0+128)+4)
  2912                           
  2913                           ;PIR_B1.c: 407: if (_PIR.HundreCount < 10)
  2914  032D  300A               	movlw	10
  2915  032E  0231               	subwf	(__PIR^(0+128)+17),w
  2916  032F  1803               	skipnc
  2917  0330  2B3A               	goto	l4703
  2918                           
  2919                           ;PIR_B1.c: 408: _PIR.HundreCount++;
  2920  0331  3001               	movlw	1
  2921  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0334  00E1               	movwf	??_getPIR_AD
  2924  0335  0861               	movf	??_getPIR_AD,w
  2925  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0338  07B1               	addwf	(__PIR^(0+128)+17),f
  2928  0339  0008               	return
  2929  033A                     l4703:	
  2930                           
  2931                           ;PIR_B1.c: 409: else
  2932                           ;PIR_B1.c: 410: _PIR.HundreCount = 0;
  2933  033A  01B1               	clrf	(__PIR^(0+128)+17)
  2934  033B  0008               	return
  2935  033C                     __end_of_getPIR_AD:	
  2936                           
  2937                           	psect	text5
  2938  06D2                     __ptext5:	
  2939 ;; *************** function ___lwdiv *****************
  2940 ;; Defined at:
  2941 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  divisor         2    0[BANK0 ] unsigned int 
  2944 ;;  dividend        2    2[BANK0 ] unsigned int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  quotient        2    6[BANK0 ] unsigned int 
  2947 ;;  counter         1    5[BANK0 ] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2    0[BANK0 ] unsigned int 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2957 ;;      Params:         0       4       0       0
  2958 ;;      Locals:         0       3       0       0
  2959 ;;      Temps:          0       1       0       0
  2960 ;;      Totals:         0       8       0       0
  2961 ;;Total ram usage:        8 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    3
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_getPIR_AD
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           
  2972                           ;psect for function ___lwdiv
  2973  06D2                     ___lwdiv:	
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2977  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2978  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2979  06D4  01DD               	clrf	___lwdiv@quotient
  2980  06D5  01DE               	clrf	___lwdiv@quotient+1
  2981  06D6  0858               	movf	___lwdiv@divisor+1,w
  2982  06D7  0457               	iorwf	___lwdiv@divisor,w
  2983  06D8  1903               	skipnz
  2984  06D9  2F0B               	goto	l4553
  2985  06DA  01DC               	clrf	___lwdiv@counter
  2986  06DB  0ADC               	incf	___lwdiv@counter,f
  2987  06DC                     l4541:	
  2988  06DC  1BD8               	btfsc	___lwdiv@divisor+1,7
  2989  06DD  2EEA               	goto	l4543
  2990  06DE  3001               	movlw	1
  2991  06DF                     u5325:	
  2992  06DF  1003               	clrc
  2993  06E0  0DD7               	rlf	___lwdiv@divisor,f
  2994  06E1  0DD8               	rlf	___lwdiv@divisor+1,f
  2995  06E2  3EFF               	addlw	-1
  2996  06E3  1D03               	skipz
  2997  06E4  2EDF               	goto	u5325
  2998  06E5  3001               	movlw	1
  2999  06E6  00DB               	movwf	??___lwdiv
  3000  06E7  085B               	movf	??___lwdiv,w
  3001  06E8  07DC               	addwf	___lwdiv@counter,f
  3002  06E9  2EDC               	goto	l4541
  3003  06EA                     l4543:	
  3004  06EA  3001               	movlw	1
  3005  06EB                     u5345:	
  3006  06EB  1003               	clrc
  3007  06EC  0DDD               	rlf	___lwdiv@quotient,f
  3008  06ED  0DDE               	rlf	___lwdiv@quotient+1,f
  3009  06EE  3EFF               	addlw	-1
  3010  06EF  1D03               	skipz
  3011  06F0  2EEB               	goto	u5345
  3012  06F1  0858               	movf	___lwdiv@divisor+1,w
  3013  06F2  025A               	subwf	___lwdiv@dividend+1,w
  3014  06F3  1D03               	skipz
  3015  06F4  2EF7               	goto	u5355
  3016  06F5  0857               	movf	___lwdiv@divisor,w
  3017  06F6  0259               	subwf	___lwdiv@dividend,w
  3018  06F7                     u5355:	
  3019  06F7  1C03               	skipc
  3020  06F8  2F00               	goto	l4549
  3021  06F9  0857               	movf	___lwdiv@divisor,w
  3022  06FA  02D9               	subwf	___lwdiv@dividend,f
  3023  06FB  0858               	movf	___lwdiv@divisor+1,w
  3024  06FC  1C03               	skipc
  3025  06FD  03DA               	decf	___lwdiv@dividend+1,f
  3026  06FE  02DA               	subwf	___lwdiv@dividend+1,f
  3027  06FF  145D               	bsf	___lwdiv@quotient,0
  3028  0700                     l4549:	
  3029  0700  3001               	movlw	1
  3030  0701                     u5365:	
  3031  0701  1003               	clrc
  3032  0702  0CD8               	rrf	___lwdiv@divisor+1,f
  3033  0703  0CD7               	rrf	___lwdiv@divisor,f
  3034  0704  3EFF               	addlw	-1
  3035  0705  1D03               	skipz
  3036  0706  2F01               	goto	u5365
  3037  0707  3001               	movlw	1
  3038  0708  02DC               	subwf	___lwdiv@counter,f
  3039  0709  1D03               	btfss	3,2
  3040  070A  2EEA               	goto	l4543
  3041  070B                     l4553:	
  3042  070B  085E               	movf	___lwdiv@quotient+1,w
  3043  070C  01D8               	clrf	?___lwdiv+1
  3044  070D  07D8               	addwf	?___lwdiv+1,f
  3045  070E  085D               	movf	___lwdiv@quotient,w
  3046  070F  01D7               	clrf	?___lwdiv
  3047  0710  07D7               	addwf	?___lwdiv,f
  3048  0711  0008               	return
  3049  0712                     __end_of___lwdiv:	
  3050                           
  3051                           	psect	text6
  3052  058D                     __ptext6:	
  3053 ;; *************** function ___awdiv *****************
  3054 ;; Defined at:
  3055 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  divisor         2    0[BANK0 ] int 
  3058 ;;  dividend        2    2[BANK0 ] int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  quotient        2    7[BANK0 ] int 
  3061 ;;  sign            1    6[BANK0 ] unsigned char 
  3062 ;;  counter         1    5[BANK0 ] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    0[BANK0 ] int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3072 ;;      Params:         0       4       0       0
  3073 ;;      Locals:         0       4       0       0
  3074 ;;      Temps:          0       1       0       0
  3075 ;;      Totals:         0       9       0       0
  3076 ;;Total ram usage:        9 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    3
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_getPIR_AD
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function ___awdiv
  3088  058D                     ___awdiv:	
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3092  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3093  058E  1303               	bcf	3,6	;RP1=0, select bank0
  3094  058F  01DD               	clrf	___awdiv@sign
  3095  0590  1FD8               	btfss	___awdiv@divisor+1,7
  3096  0591  2D99               	goto	l4495
  3097  0592  09D7               	comf	___awdiv@divisor,f
  3098  0593  09D8               	comf	___awdiv@divisor+1,f
  3099  0594  0AD7               	incf	___awdiv@divisor,f
  3100  0595  1903               	skipnz
  3101  0596  0AD8               	incf	___awdiv@divisor+1,f
  3102  0597  01DD               	clrf	___awdiv@sign
  3103  0598  0ADD               	incf	___awdiv@sign,f
  3104  0599                     l4495:	
  3105  0599  1FDA               	btfss	___awdiv@dividend+1,7
  3106  059A  2DA4               	goto	l4501
  3107  059B  09D9               	comf	___awdiv@dividend,f
  3108  059C  09DA               	comf	___awdiv@dividend+1,f
  3109  059D  0AD9               	incf	___awdiv@dividend,f
  3110  059E  1903               	skipnz
  3111  059F  0ADA               	incf	___awdiv@dividend+1,f
  3112  05A0  3001               	movlw	1
  3113  05A1  00DB               	movwf	??___awdiv
  3114  05A2  085B               	movf	??___awdiv,w
  3115  05A3  06DD               	xorwf	___awdiv@sign,f
  3116  05A4                     l4501:	
  3117  05A4  01DE               	clrf	___awdiv@quotient
  3118  05A5  01DF               	clrf	___awdiv@quotient+1
  3119  05A6  0858               	movf	___awdiv@divisor+1,w
  3120  05A7  0457               	iorwf	___awdiv@divisor,w
  3121  05A8  1903               	skipnz
  3122  05A9  2DDB               	goto	l4523
  3123  05AA  01DC               	clrf	___awdiv@counter
  3124  05AB  0ADC               	incf	___awdiv@counter,f
  3125  05AC                     l4511:	
  3126  05AC  1BD8               	btfsc	___awdiv@divisor+1,7
  3127  05AD  2DBA               	goto	l4513
  3128  05AE  3001               	movlw	1
  3129  05AF                     u5245:	
  3130  05AF  1003               	clrc
  3131  05B0  0DD7               	rlf	___awdiv@divisor,f
  3132  05B1  0DD8               	rlf	___awdiv@divisor+1,f
  3133  05B2  3EFF               	addlw	-1
  3134  05B3  1D03               	skipz
  3135  05B4  2DAF               	goto	u5245
  3136  05B5  3001               	movlw	1
  3137  05B6  00DB               	movwf	??___awdiv
  3138  05B7  085B               	movf	??___awdiv,w
  3139  05B8  07DC               	addwf	___awdiv@counter,f
  3140  05B9  2DAC               	goto	l4511
  3141  05BA                     l4513:	
  3142  05BA  3001               	movlw	1
  3143  05BB                     u5265:	
  3144  05BB  1003               	clrc
  3145  05BC  0DDE               	rlf	___awdiv@quotient,f
  3146  05BD  0DDF               	rlf	___awdiv@quotient+1,f
  3147  05BE  3EFF               	addlw	-1
  3148  05BF  1D03               	skipz
  3149  05C0  2DBB               	goto	u5265
  3150  05C1  0858               	movf	___awdiv@divisor+1,w
  3151  05C2  025A               	subwf	___awdiv@dividend+1,w
  3152  05C3  1D03               	skipz
  3153  05C4  2DC7               	goto	u5275
  3154  05C5  0857               	movf	___awdiv@divisor,w
  3155  05C6  0259               	subwf	___awdiv@dividend,w
  3156  05C7                     u5275:	
  3157  05C7  1C03               	skipc
  3158  05C8  2DD0               	goto	l4519
  3159  05C9  0857               	movf	___awdiv@divisor,w
  3160  05CA  02D9               	subwf	___awdiv@dividend,f
  3161  05CB  0858               	movf	___awdiv@divisor+1,w
  3162  05CC  1C03               	skipc
  3163  05CD  03DA               	decf	___awdiv@dividend+1,f
  3164  05CE  02DA               	subwf	___awdiv@dividend+1,f
  3165  05CF  145E               	bsf	___awdiv@quotient,0
  3166  05D0                     l4519:	
  3167  05D0  3001               	movlw	1
  3168  05D1                     u5285:	
  3169  05D1  1003               	clrc
  3170  05D2  0CD8               	rrf	___awdiv@divisor+1,f
  3171  05D3  0CD7               	rrf	___awdiv@divisor,f
  3172  05D4  3EFF               	addlw	-1
  3173  05D5  1D03               	skipz
  3174  05D6  2DD1               	goto	u5285
  3175  05D7  3001               	movlw	1
  3176  05D8  02DC               	subwf	___awdiv@counter,f
  3177  05D9  1D03               	btfss	3,2
  3178  05DA  2DBA               	goto	l4513
  3179  05DB                     l4523:	
  3180  05DB  085D               	movf	___awdiv@sign,w
  3181  05DC  1903               	btfsc	3,2
  3182  05DD  2DE3               	goto	l4527
  3183  05DE  09DE               	comf	___awdiv@quotient,f
  3184  05DF  09DF               	comf	___awdiv@quotient+1,f
  3185  05E0  0ADE               	incf	___awdiv@quotient,f
  3186  05E1  1903               	skipnz
  3187  05E2  0ADF               	incf	___awdiv@quotient+1,f
  3188  05E3                     l4527:	
  3189  05E3  085F               	movf	___awdiv@quotient+1,w
  3190  05E4  01D8               	clrf	?___awdiv+1
  3191  05E5  07D8               	addwf	?___awdiv+1,f
  3192  05E6  085E               	movf	___awdiv@quotient,w
  3193  05E7  01D7               	clrf	?___awdiv
  3194  05E8  07D7               	addwf	?___awdiv,f
  3195  05E9  0008               	return
  3196  05EA                     __end_of___awdiv:	
  3197                           
  3198                           	psect	text7
  3199  0FBB                     __ptext7:	
  3200 ;; *************** function _getCDS_AD *****************
  3201 ;; Defined at:
  3202 ;;		line 48 in file "../src/CDS_B1.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  channel1        1    wreg     unsigned char 
  3205 ;;  channel2        1    2[BANK0 ] unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  channel1        1    7[BANK0 ] unsigned char 
  3208 ;;  j               1    6[BANK0 ] unsigned char 
  3209 ;;  i               1    5[BANK0 ] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;		None               void
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0, pclath, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3219 ;;      Params:         0       1       0       0
  3220 ;;      Locals:         0       3       0       0
  3221 ;;      Temps:          0       2       0       0
  3222 ;;      Totals:         0       6       0       0
  3223 ;;Total ram usage:        6 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    5
  3226 ;; This function calls:
  3227 ;;		_getAD
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           
  3234                           ;psect for function _getCDS_AD
  3235  0FBB                     _getCDS_AD:	
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3239                           ;getCDS_AD@channel1 stored from wreg
  3240  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0FBD  00DE               	movwf	getCDS_AD@channel1
  3243                           
  3244                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3245  0FBE  01DC               	clrf	getCDS_AD@i
  3246  0FBF  01DD               	clrf	getCDS_AD@j
  3247                           
  3248                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3249  0FC0  1DBA               	btfss	__CDS,3
  3250  0FC1  0008               	return
  3251                           
  3252                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3253  0FC2  14BA               	bsf	__CDS,1
  3254                           
  3255                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3256  0FC3  3070               	movlw	112
  3257  0FC4  00DA               	movwf	??_getCDS_AD
  3258  0FC5  085A               	movf	??_getCDS_AD,w
  3259  0FC6  00D7               	movwf	getAD@adcon1
  3260  0FC7  085E               	movf	getCDS_AD@channel1,w
  3261  0FC8  158A  279F  158A   	fcall	_getAD
  3262  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0FCD  00DB               	movwf	??_getCDS_AD+1
  3265  0FCE  085B               	movf	??_getCDS_AD+1,w
  3266  0FCF  00BC               	movwf	__CDS+2
  3267                           
  3268                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3269  0FD0  3070               	movlw	112
  3270  0FD1  00DA               	movwf	??_getCDS_AD
  3271  0FD2  085A               	movf	??_getCDS_AD,w
  3272  0FD3  00D7               	movwf	getAD@adcon1
  3273  0FD4  0859               	movf	getCDS_AD@channel2,w
  3274  0FD5  158A  279F         	fcall	_getAD
  3275  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0FD9  00DB               	movwf	??_getCDS_AD+1
  3278  0FDA  085B               	movf	??_getCDS_AD+1,w
  3279  0FDB  00BD               	movwf	__CDS+3
  3280  0FDC  0008               	return
  3281  0FDD                     __end_of_getCDS_AD:	
  3282                           
  3283                           	psect	text8
  3284  0F9F                     __ptext8:	
  3285 ;; *************** function _getAD *****************
  3286 ;; Defined at:
  3287 ;;		line 434 in file "../src/MCU_B1.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  adcon0          1    wreg     unsigned char 
  3290 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3302 ;;      Params:         0       1       0       0
  3303 ;;      Locals:         0       1       0       0
  3304 ;;      Temps:          0       0       0       0
  3305 ;;      Totals:         0       2       0       0
  3306 ;;Total ram usage:        2 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    4
  3309 ;; This function calls:
  3310 ;;		_Timeout_Counter
  3311 ;;		_set_TimeoutCleared
  3312 ;; This function is called by:
  3313 ;;		_getCDS_AD
  3314 ;;		_getTemp_AD
  3315 ;;		_getPIR_AD
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _getAD
  3321  0F9F                     _getAD:	
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3325                           ;getAD@adcon0 stored from wreg
  3326  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0FA1  00D8               	movwf	getAD@adcon0
  3329                           
  3330                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3331  0FA2  0858               	movf	getAD@adcon0,w
  3332  0FA3  009F               	movwf	31	;volatile
  3333                           
  3334                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3335  0FA4  0857               	movf	getAD@adcon1,w
  3336  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0FA6  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0FA7  009F               	movwf	31	;volatile
  3339                           
  3340                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3341  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0FAA  149F               	bsf	31,1	;volatile
  3344                           
  3345                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3346  0FAB  2FAF               	goto	l4259
  3347  0FAC                     l4257:	
  3348                           
  3349                           ;MCU_B1.c: 439: Timeout_Counter();
  3350  0FAC  158A  26AD  158A   	fcall	_Timeout_Counter
  3351  0FAF                     l4259:	
  3352  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0FB1  1C9F               	btfss	31,1	;volatile
  3355  0FB2  2FB5               	goto	l4263
  3356  0FB3  1D33               	btfss	_myMain+2,2
  3357  0FB4  2FAC               	goto	l4257
  3358  0FB5                     l4263:	
  3359                           
  3360                           ;MCU_B1.c: 440: };
  3361                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3362  0FB5  158A  2593         	fcall	_set_TimeoutCleared
  3363                           
  3364                           ;MCU_B1.c: 442: return ADRES;
  3365  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0FB9  081E               	movf	30,w	;volatile
  3368  0FBA  0008               	return
  3369  0FBB                     __end_of_getAD:	
  3370                           
  3371                           	psect	text9
  3372  0D93                     __ptext9:	
  3373 ;; *************** function _set_TimeoutCleared *****************
  3374 ;; Defined at:
  3375 ;;		line 281 in file "../src/Main_B1.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;		None               void
  3382 ;; Registers used:
  3383 ;;		status,2
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3389 ;;      Params:         0       0       0       0
  3390 ;;      Locals:         0       0       0       0
  3391 ;;      Temps:          0       0       0       0
  3392 ;;      Totals:         0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_getAD
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _set_TimeoutCleared
  3405  0D93                     _set_TimeoutCleared:	
  3406                           
  3407                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3408                           
  3409                           ;incstack = 0
  3410                           ; Regs used in _set_TimeoutCleared: [status,2]
  3411  0D93  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0D94  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0D95  1133               	bcf	_myMain+2,2
  3414                           
  3415                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3416  0D96  01B4               	clrf	_myMain+3
  3417  0D97  01B5               	clrf	_myMain+4
  3418  0D98  0008               	return
  3419  0D99                     __end_of_set_TimeoutCleared:	
  3420                           
  3421                           	psect	text10
  3422  0EAD                     __ptext10:	
  3423 ;; *************** function _Timeout_Counter *****************
  3424 ;; Defined at:
  3425 ;;		line 272 in file "../src/Main_B1.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, status,2
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3439 ;;      Params:         0       0       0       0
  3440 ;;      Locals:         0       0       0       0
  3441 ;;      Temps:          0       0       0       0
  3442 ;;      Totals:         0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    3
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_getAD
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _Timeout_Counter
  3455  0EAD                     _Timeout_Counter:	
  3456                           
  3457                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3461  0EAD  3001               	movlw	1
  3462  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0EB0  07B4               	addwf	_myMain+3,f
  3465  0EB1  1803               	skipnc
  3466  0EB2  0AB5               	incf	_myMain+4,f
  3467  0EB3  3000               	movlw	0
  3468  0EB4  07B5               	addwf	_myMain+4,f
  3469                           
  3470                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3471  0EB5  3061               	movlw	97
  3472  0EB6  0635               	xorwf	_myMain+4,w
  3473  0EB7  1D03               	skipz
  3474  0EB8  2EBB               	goto	u4705
  3475  0EB9  30A8               	movlw	168
  3476  0EBA  0634               	xorwf	_myMain+3,w
  3477  0EBB                     u4705:	
  3478  0EBB  1D03               	skipz
  3479  0EBC  0008               	return
  3480                           
  3481                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3482  0EBD  01B4               	clrf	_myMain+3
  3483  0EBE  01B5               	clrf	_myMain+4
  3484                           
  3485                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3486  0EBF  1533               	bsf	_myMain+2,2
  3487  0EC0  0008               	return
  3488  0EC1                     __end_of_Timeout_Counter:	
  3489                           
  3490                           	psect	text11
  3491  0E63                     __ptext11:	
  3492 ;; *************** function _WDT_Main *****************
  3493 ;; Defined at:
  3494 ;;		line 1116 in file "../src/MCU_B1.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3508 ;;      Params:         0       0       0       0
  3509 ;;      Locals:         0       0       0       0
  3510 ;;      Temps:          0       1       0       0
  3511 ;;      Totals:         0       1       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    4
  3515 ;; This function calls:
  3516 ;;		_WDT_Clearing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _WDT_Main
  3524  0E63                     _WDT_Main:	
  3525                           
  3526                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3530  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0E65  1C41               	btfss	_WDT,0
  3533  0E66  0008               	return
  3534                           
  3535                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3536  0E67  3001               	movlw	1
  3537  0E68  02C2               	subwf	_WDT+1,f
  3538  0E69  0842               	movf	_WDT+1,w
  3539  0E6A  3AFF               	xorlw	255
  3540  0E6B  1903               	skipnz
  3541  0E6C  0008               	return
  3542                           
  3543                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3544  0E6D  3064               	movlw	100
  3545  0E6E  00D7               	movwf	??_WDT_Main
  3546  0E6F  0857               	movf	??_WDT_Main,w
  3547  0E70  00C2               	movwf	_WDT+1
  3548                           
  3549                           ;MCU_B1.c: 1120: WDT_Clearing();
  3550  0E71  118A  2002         	fcall	_WDT_Clearing
  3551  0E73  0008               	return
  3552  0E74                     __end_of_WDT_Main:	
  3553                           
  3554                           	psect	text12
  3555  0002                     __ptext12:	
  3556 ;; *************** function _WDT_Clearing *****************
  3557 ;; Defined at:
  3558 ;;		line 1126 in file "../src/MCU_B1.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;		None               void
  3565 ;; Registers used:
  3566 ;;		None
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3572 ;;      Params:         0       0       0       0
  3573 ;;      Locals:         0       0       0       0
  3574 ;;      Temps:          0       0       0       0
  3575 ;;      Totals:         0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    3
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_WDT_Main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _WDT_Clearing
  3588  0002                     _WDT_Clearing:	
  3589                           
  3590                           ;incstack = 0
  3591                           ; Regs used in _WDT_Clearing: []
  3592  0002  0064               	clrwdt	;# 
  3593  0003  0008               	return
  3594  0004                     __end_of_WDT_Clearing:	
  3595                           
  3596                           	psect	text13
  3597  0D82                     __ptext13:	
  3598 ;; *************** function _Temp_Main *****************
  3599 ;; Defined at:
  3600 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;		None               void
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3614 ;;      Params:         0       0       0       0
  3615 ;;      Locals:         0       0       0       0
  3616 ;;      Temps:          0       0       0       0
  3617 ;;      Totals:         0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    5
  3621 ;; This function calls:
  3622 ;;		_setTemp_Main
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           
  3629                           ;psect for function _Temp_Main
  3630  0D82                     _Temp_Main:	
  3631                           
  3632                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3633                           
  3634                           ;incstack = 0
  3635                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3636  0D82  118A  23D0         	fcall	_setTemp_Main
  3637  0D84  0008               	return
  3638  0D85                     __end_of_Temp_Main:	
  3639                           
  3640                           	psect	text14
  3641  03D0                     __ptext14:	
  3642 ;; *************** function _setTemp_Main *****************
  3643 ;; Defined at:
  3644 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  AD              1   10[BANK0 ] unsigned char 
  3649 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3650 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3651 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3652 ;;  error           1    6[BANK0 ] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;		None               void
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3662 ;;      Params:         0       0       0       0
  3663 ;;      Locals:         0       5       0       0
  3664 ;;      Temps:          0       1       0       0
  3665 ;;      Totals:         0       6       0       0
  3666 ;;Total ram usage:        6 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    4
  3669 ;; This function calls:
  3670 ;;		_getMain_All_Error_Status
  3671 ;;		_getMain_All_LightsStatus
  3672 ;; This function is called by:
  3673 ;;		_Temp_Main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _setTemp_Main
  3679  03D0                     _setTemp_Main:	
  3680                           
  3681                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3685  03D0  3000               	movlw	0
  3686  03D1  158A  2733  118A   	fcall	_getMain_All_Error_Status
  3687  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3688  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3689  03D6  00DC               	movwf	??_setTemp_Main
  3690  03D7  085C               	movf	??_setTemp_Main,w
  3691  03D8  00DD               	movwf	setTemp_Main@error
  3692                           
  3693                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3694  03D9  01DF               	clrf	setTemp_Main@SafeValue
  3695  03DA  01E0               	clrf	setTemp_Main@DangerValue
  3696                           
  3697                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3698  03DB  158A  25EE  118A   	fcall	_getMain_All_LightsStatus
  3699  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3700  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3701  03E0  00DC               	movwf	??_setTemp_Main
  3702  03E1  085C               	movf	??_setTemp_Main,w
  3703  03E2  00DE               	movwf	setTemp_Main@TempGO
  3704                           
  3705                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3706  03E3  1C44               	btfss	_Temp,0
  3707  03E4  2C47               	goto	l942
  3708                           
  3709                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3710  03E5  1944               	btfsc	_Temp,2
  3711  03E6  2C03               	goto	l4449
  3712                           
  3713                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3714  03E7  085E               	movf	setTemp_Main@TempGO,w
  3715  03E8  3A01               	xorlw	1
  3716  03E9  1D03               	skipz
  3717  03EA  2BED               	goto	l948
  3718  03EB  1CC4               	btfss	_Temp,1
  3719  03EC  2BEF               	goto	l4441
  3720  03ED                     l948:	
  3721  03ED  1CC4               	btfss	_Temp,1
  3722  03EE  2C00               	goto	l4447
  3723  03EF                     l4441:	
  3724                           
  3725                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3726  03EF  3001               	movlw	1
  3727  03F0  07C5               	addwf	_Temp+1,f
  3728  03F1  1803               	skipnc
  3729  03F2  0AC6               	incf	_Temp+2,f
  3730  03F3  3000               	movlw	0
  3731  03F4  07C6               	addwf	_Temp+2,f
  3732                           
  3733                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3734  03F5  3000               	movlw	0
  3735  03F6  0246               	subwf	_Temp+2,w
  3736  03F7  30FA               	movlw	250
  3737  03F8  1903               	skipnz
  3738  03F9  0245               	subwf	_Temp+1,w
  3739  03FA  1C03               	skipc
  3740  03FB  0008               	return
  3741                           
  3742                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3743  03FC  01C5               	clrf	_Temp+1
  3744  03FD  01C6               	clrf	_Temp+2
  3745                           
  3746                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3747  03FE  1544               	bsf	_Temp,2
  3748                           
  3749                           ;OverTemperature_B1.c: 83: }
  3750                           ;OverTemperature_B1.c: 84: } else {
  3751  03FF  0008               	return
  3752  0400                     l4447:	
  3753                           
  3754                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3755  0400  01C5               	clrf	_Temp+1
  3756  0401  01C6               	clrf	_Temp+2
  3757                           
  3758                           ;OverTemperature_B1.c: 86: }
  3759                           ;OverTemperature_B1.c: 87: } else {
  3760  0402  0008               	return
  3761  0403                     l4449:	
  3762                           
  3763                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3764  0403  3001               	movlw	1
  3765  0404  07C5               	addwf	_Temp+1,f
  3766  0405  1803               	skipnc
  3767  0406  0AC6               	incf	_Temp+2,f
  3768  0407  3000               	movlw	0
  3769  0408  07C6               	addwf	_Temp+2,f
  3770                           
  3771                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3772  0409  3000               	movlw	0
  3773  040A  0246               	subwf	_Temp+2,w
  3774  040B  3005               	movlw	5
  3775  040C  1903               	skipnz
  3776  040D  0245               	subwf	_Temp+1,w
  3777  040E  1C03               	skipc
  3778  040F  0008               	return
  3779                           
  3780                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3781  0410  01C5               	clrf	_Temp+1
  3782  0411  01C6               	clrf	_Temp+2
  3783                           
  3784                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3785  0412  084A               	movf	_Temp+6,w
  3786  0413  1903               	btfsc	3,2
  3787  0414  2C43               	goto	l953
  3788                           
  3789                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3790  0415  1144               	bcf	_Temp,2
  3791                           
  3792                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3793  0416  084A               	movf	_Temp+6,w
  3794  0417  00DC               	movwf	??_setTemp_Main
  3795  0418  085C               	movf	??_setTemp_Main,w
  3796  0419  00E1               	movwf	setTemp_Main@AD
  3797                           
  3798                           ;OverTemperature_B1.c: 109: SafeValue = 0x73;
  3799  041A  3073               	movlw	115
  3800  041B  00DC               	movwf	??_setTemp_Main
  3801  041C  085C               	movf	??_setTemp_Main,w
  3802  041D  00DF               	movwf	setTemp_Main@SafeValue
  3803                           
  3804                           ;OverTemperature_B1.c: 110: DangerValue = 0x64;
  3805  041E  3064               	movlw	100
  3806  041F  00DC               	movwf	??_setTemp_Main
  3807  0420  085C               	movf	??_setTemp_Main,w
  3808  0421  00E0               	movwf	setTemp_Main@DangerValue
  3809                           
  3810                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3811  0422  1CC4               	btfss	_Temp,1
  3812  0423  2C33               	goto	l4473
  3813                           
  3814                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3815  0424  085F               	movf	setTemp_Main@SafeValue,w
  3816  0425  0261               	subwf	setTemp_Main@AD,w
  3817  0426  1C03               	skipc
  3818  0427  2C42               	goto	l4483
  3819                           
  3820                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3821  0428  3001               	movlw	1
  3822  0429  00DC               	movwf	??_setTemp_Main
  3823  042A  085C               	movf	??_setTemp_Main,w
  3824  042B  07C7               	addwf	_Temp+3,f
  3825                           
  3826                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3827  042C  3003               	movlw	3
  3828  042D  0247               	subwf	_Temp+3,w
  3829  042E  1C03               	skipc
  3830  042F  2C43               	goto	l953
  3831                           
  3832                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3833  0430  01C7               	clrf	_Temp+3
  3834                           
  3835                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3836  0431  10C4               	bcf	_Temp,1
  3837                           
  3838                           ;OverTemperature_B1.c: 126: }
  3839                           ;OverTemperature_B1.c: 127: } else {
  3840                           
  3841                           ;OverTemperature_B1.c: 125: ;;
  3842  0432  2C43               	goto	l953
  3843  0433                     l4473:	
  3844                           ;OverTemperature_B1.c: 129: }
  3845                           ;OverTemperature_B1.c: 130: } else {
  3846                           
  3847                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3848                           
  3849                           
  3850                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3851  0433  0861               	movf	setTemp_Main@AD,w
  3852  0434  0260               	subwf	setTemp_Main@DangerValue,w
  3853  0435  1C03               	skipc
  3854  0436  2C42               	goto	l4483
  3855                           
  3856                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3857  0437  3001               	movlw	1
  3858  0438  00DC               	movwf	??_setTemp_Main
  3859  0439  085C               	movf	??_setTemp_Main,w
  3860  043A  07C7               	addwf	_Temp+3,f
  3861                           
  3862                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3863  043B  3003               	movlw	3
  3864  043C  0247               	subwf	_Temp+3,w
  3865  043D  1C03               	skipc
  3866  043E  2C43               	goto	l953
  3867                           
  3868                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3869  043F  01C7               	clrf	_Temp+3
  3870                           
  3871                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3872  0440  14C4               	bsf	_Temp,1
  3873                           
  3874                           ;OverTemperature_B1.c: 136: }
  3875                           ;OverTemperature_B1.c: 137: } else {
  3876  0441  2C43               	goto	l953
  3877  0442                     l4483:	
  3878                           
  3879                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3880  0442  01C7               	clrf	_Temp+3
  3881  0443                     l953:	
  3882                           ;OverTemperature_B1.c: 139: }
  3883                           ;OverTemperature_B1.c: 140: }
  3884                           ;OverTemperature_B1.c: 141: ;;
  3885                           ;OverTemperature_B1.c: 142: ;;
  3886                           
  3887                           
  3888                           ;OverTemperature_B1.c: 158: }
  3889                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3890  0443  01C8               	clrf	_Temp+4
  3891                           
  3892                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3893  0444  01C9               	clrf	_Temp+5
  3894                           
  3895                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3896  0445  01CA               	clrf	_Temp+6
  3897                           
  3898                           ;OverTemperature_B1.c: 162: }
  3899                           ;OverTemperature_B1.c: 163: }
  3900                           ;OverTemperature_B1.c: 166: } else {
  3901  0446  0008               	return
  3902  0447                     l942:	
  3903                           
  3904                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3905  0447  1C31               	btfss	_myMain,0
  3906  0448  0008               	return
  3907                           
  3908                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3909  0449  1444               	bsf	_Temp,0
  3910  044A  0008               	return
  3911  044B                     __end_of_setTemp_Main:	
  3912                           
  3913                           	psect	text15
  3914  0D7F                     __ptext15:	
  3915 ;; *************** function _Temp_Initialization *****************
  3916 ;; Defined at:
  3917 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3931 ;;      Params:         0       0       0       0
  3932 ;;      Locals:         0       0       0       0
  3933 ;;      Temps:          0       0       0       0
  3934 ;;      Totals:         0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    4
  3938 ;; This function calls:
  3939 ;;		_setTemp_Initialization
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _Temp_Initialization
  3947  0D7F                     _Temp_Initialization:	
  3948                           
  3949                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3953  0D7F  158A  257A         	fcall	_setTemp_Initialization
  3954  0D81  0008               	return
  3955  0D82                     __end_of_Temp_Initialization:	
  3956                           
  3957                           	psect	text16
  3958  0D7A                     __ptext16:	
  3959 ;; *************** function _setTemp_Initialization *****************
  3960 ;; Defined at:
  3961 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		None
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3975 ;;      Params:         0       0       0       0
  3976 ;;      Locals:         0       0       0       0
  3977 ;;      Temps:          0       0       0       0
  3978 ;;      Totals:         0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    3
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_Temp_Initialization
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _setTemp_Initialization
  3991  0D7A                     _setTemp_Initialization:	
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in _setTemp_Initialization: []
  3995  0D7A  0008               	return
  3996  0D7B                     __end_of_setTemp_Initialization:	
  3997                           
  3998                           	psect	text17
  3999  0027                     __ptext17:	
  4000 ;; *************** function _PIR_Main *****************
  4001 ;; Defined at:
  4002 ;;		line 13 in file "../src/PIR_B1.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  LightsStatus    1   16[BANK0 ] unsigned char 
  4007 ;;  TriggerValue    1   15[BANK0 ] unsigned char 
  4008 ;;  Enable_Switc    1   12[BANK0 ] unsigned char 
  4009 ;;  cds             1   11[BANK0 ] unsigned char 
  4010 ;;  error           1   10[BANK0 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4020 ;;      Params:         0       0       0       0
  4021 ;;      Locals:         0       7       0       0
  4022 ;;      Temps:          0       5       0       0
  4023 ;;      Totals:         0      12       0       0
  4024 ;;Total ram usage:       12 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    5
  4027 ;; This function calls:
  4028 ;;		_getCDS_Status
  4029 ;;		_getDimmerLights_Status
  4030 ;;		_getMain_All_Error_Status
  4031 ;;		_setLED
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _PIR_Main
  4039  0027                     _PIR_Main:	
  4040                           
  4041                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4045  0027  3000               	movlw	0
  4046  0028  158A  2733  118A   	fcall	_getMain_All_Error_Status
  4047  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4048  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4049  002D  00DC               	movwf	??_PIR_Main
  4050  002E  085C               	movf	??_PIR_Main,w
  4051  002F  00E1               	movwf	PIR_Main@error
  4052                           
  4053                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4054  0030  158A  25AE  118A   	fcall	_getCDS_Status
  4055  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0035  00DC               	movwf	??_PIR_Main
  4058  0036  085C               	movf	??_PIR_Main,w
  4059  0037  00E2               	movwf	PIR_Main@cds
  4060                           
  4061                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4062  0038  01E7               	clrf	PIR_Main@LightsStatus
  4063                           
  4064                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4065  0039  01E3               	clrf	PIR_Main@Enable_Switch
  4066  003A  0AE3               	incf	PIR_Main@Enable_Switch,f
  4067                           
  4068                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4069  003B  01E6               	clrf	PIR_Main@TriggerValue
  4070                           
  4071                           ;PIR_B1.c: 31: LightsStatus = getDimmerLights_Status(1);
  4072  003C  3001               	movlw	1
  4073  003D  158A  2641  118A   	fcall	_getDimmerLights_Status
  4074  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4076  0042  00DC               	movwf	??_PIR_Main
  4077  0043  085C               	movf	??_PIR_Main,w
  4078  0044  00E7               	movwf	PIR_Main@LightsStatus
  4079                           
  4080                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4081  0045  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0046  1303               	bcf	3,6	;RP1=0, select bank1
  4083  0047  1C20               	btfss	__PIR^(0+128),0
  4084  0048  29FB               	goto	l1018
  4085                           
  4086                           ;PIR_B1.c: 36: if (error == 0) {
  4087  0049  1283               	bcf	3,5	;RP0=0, select bank0
  4088  004A  1303               	bcf	3,6	;RP1=0, select bank0
  4089  004B  08E1               	movf	PIR_Main@error,f
  4090  004C  1D03               	skipz
  4091  004D  2889               	goto	l1019
  4092                           
  4093                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4094  004E  0862               	movf	PIR_Main@cds,w
  4095  004F  3A01               	xorlw	1
  4096  0050  1D03               	skipz
  4097  0051  285A               	goto	l1020
  4098  0052  0863               	movf	PIR_Main@Enable_Switch,w
  4099  0053  3A01               	xorlw	1
  4100  0054  1D03               	skipz
  4101  0055  285A               	goto	l1020
  4102                           
  4103                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4104  0056  1683               	bsf	3,5	;RP0=1, select bank1
  4105  0057  1303               	bcf	3,6	;RP1=0, select bank1
  4106  0058  17A0               	bsf	__PIR^(0+128),7
  4107                           
  4108                           ;PIR_B1.c: 40: } else {
  4109  0059  2879               	goto	l1021
  4110  005A                     l1020:	
  4111                           
  4112                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4113  005A  1683               	bsf	3,5	;RP0=1, select bank1
  4114  005B  1303               	bcf	3,6	;RP1=0, select bank1
  4115  005C  13A0               	bcf	__PIR^(0+128),7
  4116                           
  4117                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4118  005D  1DA0               	btfss	__PIR^(0+128),3
  4119  005E  2879               	goto	l1021
  4120                           
  4121                           ;PIR_B1.c: 45: setLED(1, 0);
  4122  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4124  0061  01D9               	clrf	setLED@command
  4125  0062  3001               	movlw	1
  4126  0063  118A  24BC  118A   	fcall	_setLED
  4127                           
  4128                           ;PIR_B1.c: 46: setLED(2, 0);
  4129  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4130  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4131  0068  01D9               	clrf	setLED@command
  4132  0069  3002               	movlw	2
  4133  006A  118A  24BC  118A   	fcall	_setLED
  4134                           
  4135                           ;PIR_B1.c: 59: if (getDimmerLights_Status(1) == 1) {
  4136  006D  3001               	movlw	1
  4137  006E  158A  2641  118A   	fcall	_getDimmerLights_Status
  4138  0071  3A01               	xorlw	1
  4139  0072  1D03               	skipz
  4140  0073  2879               	goto	l1021
  4141                           
  4142                           ;PIR_B1.c: 60: Dimmer.PIR_Trigger = 1;
  4143  0074  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0075  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0076  16AC               	bsf	_Dimmer,5
  4146                           
  4147                           ;PIR_B1.c: 61: Dimmer.PIR_Sw = 0;
  4148  0077  122C               	bcf	_Dimmer,4
  4149                           
  4150                           ;PIR_B1.c: 62: Dimmer.PIR_Lights_Status = 1;
  4151  0078  152D               	bsf	_Dimmer+1,2
  4152  0079                     l1021:	
  4153                           
  4154                           ;PIR_B1.c: 63: }
  4155                           ;PIR_B1.c: 67: }
  4156                           ;PIR_B1.c: 68: }
  4157                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4158  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4159  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4160  007B  1A20               	btfsc	__PIR^(0+128),4
  4161  007C  288F               	goto	l1026
  4162                           
  4163                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4164  007D  1620               	bsf	__PIR^(0+128),4
  4165                           
  4166                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4167  007E  19A0               	btfsc	__PIR^(0+128),3
  4168  007F  288F               	goto	l1026
  4169                           
  4170                           ;PIR_B1.c: 76: setLED(1, 1);
  4171  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4173  0082  01D9               	clrf	setLED@command
  4174  0083  0AD9               	incf	setLED@command,f
  4175  0084  3001               	movlw	1
  4176  0085  118A  24BC  118A   	fcall	_setLED
  4177                           
  4178                           ;PIR_B1.c: 77: }
  4179                           ;PIR_B1.c: 80: }
  4180                           ;PIR_B1.c: 81: } else {
  4181  0088  288F               	goto	l1026
  4182  0089                     l1019:	
  4183                           
  4184                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4185  0089  1683               	bsf	3,5	;RP0=1, select bank1
  4186  008A  1303               	bcf	3,6	;RP1=0, select bank1
  4187  008B  1E20               	btfss	__PIR^(0+128),4
  4188  008C  288F               	goto	l1026
  4189                           
  4190                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4191  008D  1220               	bcf	__PIR^(0+128),4
  4192                           
  4193                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4194  008E  13A0               	bcf	__PIR^(0+128),7
  4195  008F                     l1026:	
  4196                           
  4197                           ;PIR_B1.c: 102: }
  4198                           ;PIR_B1.c: 103: }
  4199                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4200  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4201  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4202  0091  18A0               	btfsc	__PIR^(0+128),1
  4203  0092  28A2               	goto	l1028
  4204                           
  4205                           ;PIR_B1.c: 106: _PIR.Time++;
  4206  0093  3001               	movlw	1
  4207  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4208  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4209  0096  00DC               	movwf	??_PIR_Main
  4210  0097  085C               	movf	??_PIR_Main,w
  4211  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4212  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4213  009A  07A2               	addwf	(__PIR^(0+128)+2),f
  4214                           
  4215                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4216  009B  0822               	movf	(__PIR^(0+128)+2),w
  4217  009C  3A05               	xorlw	5
  4218  009D  1D03               	skipz
  4219  009E  29A1               	goto	l4837
  4220                           
  4221                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4222  009F  01A2               	clrf	(__PIR^(0+128)+2)
  4223                           
  4224                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4225  00A0  14A0               	bsf	__PIR^(0+128),1
  4226                           
  4227                           ;PIR_B1.c: 110: }
  4228                           ;PIR_B1.c: 111: } else {
  4229  00A1  29A1               	goto	l4837
  4230  00A2                     l1028:	
  4231                           
  4232                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4233  00A2  1D20               	btfss	__PIR^(0+128),2
  4234  00A3  29A1               	goto	l4837
  4235                           
  4236                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4237  00A4  1120               	bcf	__PIR^(0+128),2
  4238                           
  4239                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4240  00A5  10A0               	bcf	__PIR^(0+128),1
  4241                           
  4242                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4243  00A6  1BA0               	btfsc	__PIR^(0+128),7
  4244                           
  4245                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4246  00A7  1DA0               	btfss	__PIR^(0+128),3
  4247  00A8  29A1               	goto	l4837
  4248                           
  4249                           ;PIR_B1.c: 118: _PIR.Time++;
  4250  00A9  3001               	movlw	1
  4251  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4252  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4253  00AC  00DC               	movwf	??_PIR_Main
  4254  00AD  085C               	movf	??_PIR_Main,w
  4255  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  4256  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  4257  00B0  07A2               	addwf	(__PIR^(0+128)+2),f
  4258                           
  4259                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4260  00B1  0822               	movf	(__PIR^(0+128)+2),w
  4261  00B2  3A3C               	xorlw	60
  4262  00B3  1D03               	skipz
  4263  00B4  28E9               	goto	l4805
  4264                           
  4265                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4266  00B5  01A2               	clrf	(__PIR^(0+128)+2)
  4267                           
  4268                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4269  00B6  305A               	movlw	90
  4270  00B7  0247               	subwf	(__PIR^(0+128)+39),w
  4271  00B8  1C03               	skipc
  4272  00B9  28C5               	goto	l4787
  4273                           
  4274                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4275  00BA  01C6               	clrf	(__PIR^(0+128)+38)
  4276                           
  4277                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4278  00BB  0848               	movf	(__PIR^(0+128)+40),w
  4279  00BC  3A19               	xorlw	25
  4280  00BD  1903               	btfsc	3,2
  4281  00BE  28DA               	goto	L11
  4282                           
  4283                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4284                           
  4285                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4286  00BF  0848               	movf	(__PIR^(0+128)+40),w
  4287  00C0  3A23               	xorlw	35
  4288  00C1  1D03               	skipz
  4289  00C2  28E8               	goto	l4803
  4290                           
  4291                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4292  00C3  302D               	movlw	45
  4293  00C4  28E1               	goto	L8
  4294  00C5                     l4787:	
  4295                           ;PIR_B1.c: 128: }
  4296                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4297                           
  4298  00C5  300B               	movlw	11
  4299  00C6  0247               	subwf	(__PIR^(0+128)+39),w
  4300  00C7  1803               	skipnc
  4301  00C8  28E8               	goto	l4803
  4302                           
  4303                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4304  00C9  3001               	movlw	1
  4305  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4306  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4307  00CC  00DC               	movwf	??_PIR_Main
  4308  00CD  085C               	movf	??_PIR_Main,w
  4309  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4310  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  4311  00D0  07C6               	addwf	(__PIR^(0+128)+38),f
  4312                           
  4313                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4314  00D1  0846               	movf	(__PIR^(0+128)+38),w
  4315  00D2  3A02               	xorlw	2
  4316  00D3  1D03               	skipz
  4317  00D4  28E8               	goto	l4803
  4318                           
  4319                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4320  00D5  01C6               	clrf	(__PIR^(0+128)+38)
  4321                           
  4322                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4323  00D6  0848               	movf	(__PIR^(0+128)+40),w
  4324  00D7  3A2D               	xorlw	45
  4325  00D8  1D03               	skipz
  4326  00D9  28DC               	goto	l4799
  4327  00DA                     L11:	
  4328                           
  4329                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4330  00DA  3023               	movlw	35
  4331  00DB  28E1               	goto	L8
  4332  00DC                     l4799:	
  4333                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4334                           
  4335  00DC  0848               	movf	(__PIR^(0+128)+40),w
  4336  00DD  3A23               	xorlw	35
  4337  00DE  1D03               	skipz
  4338  00DF  28E8               	goto	l4803
  4339                           
  4340                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4341  00E0  3019               	movlw	25
  4342  00E1                     L8:	
  4343  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4344  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4345  00E3  00DC               	movwf	??_PIR_Main
  4346  00E4  085C               	movf	??_PIR_Main,w
  4347  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4348  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  4349  00E7  00C8               	movwf	(__PIR^(0+128)+40)
  4350  00E8                     l4803:	
  4351                           
  4352                           ;PIR_B1.c: 138: }
  4353                           ;PIR_B1.c: 139: }
  4354                           ;PIR_B1.c: 140: }
  4355                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4356  00E8  01C7               	clrf	(__PIR^(0+128)+39)
  4357  00E9                     l4805:	
  4358                           
  4359                           ;PIR_B1.c: 142: }
  4360                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4361                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4362  00E9  0848               	movf	(__PIR^(0+128)+40),w
  4363  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4364  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4365  00EC  00DC               	movwf	??_PIR_Main
  4366  00ED  01DD               	clrf	??_PIR_Main+1
  4367  00EE  09DC               	comf	??_PIR_Main,f
  4368  00EF  09DD               	comf	??_PIR_Main+1,f
  4369  00F0  0ADC               	incf	??_PIR_Main,f
  4370  00F1  1903               	skipnz
  4371  00F2  0ADD               	incf	??_PIR_Main+1,f
  4372  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  4373  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  4374  00F5  0823               	movf	(__PIR^(0+128)+3),w
  4375  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4376  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4377  00F8  075C               	addwf	??_PIR_Main,w
  4378  00F9  00DE               	movwf	??_PIR_Main+2
  4379  00FA  085D               	movf	??_PIR_Main+1,w
  4380  00FB  1803               	skipnc
  4381  00FC  0A5D               	incf	??_PIR_Main+1,w
  4382  00FD  00DF               	movwf	??_PIR_Main+3
  4383  00FE  085F               	movf	??_PIR_Main+3,w
  4384  00FF  3A80               	xorlw	128
  4385  0100  3C80               	sublw	128
  4386  0101  1D03               	skipz
  4387  0102  2907               	goto	u5905
  4388  0103  085E               	movf	??_PIR_Main+2,w
  4389  0104  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0105  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0106  0221               	subwf	(__PIR^(0+128)+1),w
  4392  0107                     u5905:	
  4393  0107  1C03               	skipc
  4394  0108  2929               	goto	l4815
  4395  0109  1683               	bsf	3,5	;RP0=1, select bank1
  4396  010A  1303               	bcf	3,6	;RP1=0, select bank1
  4397  010B  0823               	movf	(__PIR^(0+128)+3),w
  4398  010C  0748               	addwf	(__PIR^(0+128)+40),w
  4399  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4400  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4401  010F  00DC               	movwf	??_PIR_Main
  4402  0110  01DD               	clrf	??_PIR_Main+1
  4403  0111  0DDD               	rlf	??_PIR_Main+1,f
  4404  0112  085D               	movf	??_PIR_Main+1,w
  4405  0113  3A80               	xorlw	128
  4406  0114  00DE               	movwf	??_PIR_Main+2
  4407  0115  3080               	movlw	128
  4408  0116  025E               	subwf	??_PIR_Main+2,w
  4409  0117  1D03               	skipz
  4410  0118  291F               	goto	u5915
  4411  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4412  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4413  011B  0821               	movf	(__PIR^(0+128)+1),w
  4414  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4415  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4416  011E  025C               	subwf	??_PIR_Main,w
  4417  011F                     u5915:	
  4418  011F  1C03               	skipc
  4419  0120  2929               	goto	l4815
  4420                           
  4421                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4422  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4423  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4424  0123  01BE               	clrf	(__PIR^(0+128)+30)
  4425  0124  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4426                           
  4427                           ;PIR_B1.c: 155: setLED(1, 0);
  4428  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0127  01D9               	clrf	setLED@command
  4431  0128  298A               	goto	L12
  4432  0129                     l4815:	
  4433                           ;PIR_B1.c: 159: } else {
  4434                           
  4435                           ;PIR_B1.c: 156: setLED(2, 0);
  4436                           
  4437                           
  4438                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4439  0129  3001               	movlw	1
  4440  012A  1283               	bcf	3,5	;RP0=0, select bank0
  4441  012B  1303               	bcf	3,6	;RP1=0, select bank0
  4442  012C  00DC               	movwf	??_PIR_Main
  4443  012D  085C               	movf	??_PIR_Main,w
  4444  012E  1683               	bsf	3,5	;RP0=1, select bank1
  4445  012F  1303               	bcf	3,6	;RP1=0, select bank1
  4446  0130  07C7               	addwf	(__PIR^(0+128)+39),f
  4447                           
  4448                           ;PIR_B1.c: 163: _PIR.Count++;
  4449  0131  3001               	movlw	1
  4450  0132  07BE               	addwf	(__PIR^(0+128)+30),f
  4451  0133  1803               	skipnc
  4452  0134  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4453  0135  3000               	movlw	0
  4454  0136  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4455                           
  4456                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4457  0137  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0138  1303               	bcf	3,6	;RP1=0, select bank0
  4459  0139  0867               	movf	PIR_Main@LightsStatus,w
  4460  013A  3A01               	xorlw	1
  4461  013B  1903               	skipnz
  4462  013C  293D               	goto	l4823
  4463  013D                     l4823:	
  4464  013D  3003               	movlw	3
  4465  013E  00E4               	movwf	_PIR_Main$3333
  4466  013F  3000               	movlw	0
  4467  0140  00E5               	movwf	_PIR_Main$3333+1
  4468  0141  0864               	movf	_PIR_Main$3333,w
  4469  0142  00DC               	movwf	??_PIR_Main
  4470  0143  085C               	movf	??_PIR_Main,w
  4471  0144  00E6               	movwf	PIR_Main@TriggerValue
  4472                           
  4473                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4474  0145  0866               	movf	PIR_Main@TriggerValue,w
  4475  0146  00DC               	movwf	??_PIR_Main
  4476  0147  01DD               	clrf	??_PIR_Main+1
  4477  0148  1683               	bsf	3,5	;RP0=1, select bank1
  4478  0149  1303               	bcf	3,6	;RP1=0, select bank1
  4479  014A  083F               	movf	((__PIR+1)^(0+128)+30),w
  4480  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4481  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4482  014D  065D               	xorwf	??_PIR_Main+1,w
  4483  014E  1D03               	skipz
  4484  014F  2956               	goto	u5935
  4485  0150  1683               	bsf	3,5	;RP0=1, select bank1
  4486  0151  1303               	bcf	3,6	;RP1=0, select bank1
  4487  0152  083E               	movf	(__PIR^(0+128)+30),w
  4488  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0155  065C               	xorwf	??_PIR_Main,w
  4491  0156                     u5935:	
  4492  0156  1D03               	skipz
  4493  0157  29A1               	goto	l4837
  4494                           
  4495                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4496  0158  1683               	bsf	3,5	;RP0=1, select bank1
  4497  0159  1303               	bcf	3,6	;RP1=0, select bank1
  4498  015A  01BE               	clrf	(__PIR^(0+128)+30)
  4499  015B  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4500                           
  4501                           ;PIR_B1.c: 187: Dimmer.PIR_Trigger = 1;
  4502  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4503  015D  1303               	bcf	3,6	;RP1=0, select bank0
  4504  015E  16AC               	bsf	_Dimmer,5
  4505                           
  4506                           ;PIR_B1.c: 188: Dimmer.PIR_Sw = 1;
  4507  015F  162C               	bsf	_Dimmer,4
  4508                           
  4509                           ;PIR_B1.c: 193: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4510  0160  1683               	bsf	3,5	;RP0=1, select bank1
  4511  0161  1303               	bcf	3,6	;RP1=0, select bank1
  4512  0162  0848               	movf	(__PIR^(0+128)+40),w
  4513  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4515  0165  00DC               	movwf	??_PIR_Main
  4516  0166  01DD               	clrf	??_PIR_Main+1
  4517  0167  09DC               	comf	??_PIR_Main,f
  4518  0168  09DD               	comf	??_PIR_Main+1,f
  4519  0169  0ADC               	incf	??_PIR_Main,f
  4520  016A  1903               	skipnz
  4521  016B  0ADD               	incf	??_PIR_Main+1,f
  4522  016C  1683               	bsf	3,5	;RP0=1, select bank1
  4523  016D  1303               	bcf	3,6	;RP1=0, select bank1
  4524  016E  0823               	movf	(__PIR^(0+128)+3),w
  4525  016F  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0170  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0171  075C               	addwf	??_PIR_Main,w
  4528  0172  00DE               	movwf	??_PIR_Main+2
  4529  0173  085D               	movf	??_PIR_Main+1,w
  4530  0174  1803               	skipnc
  4531  0175  0A5D               	incf	??_PIR_Main+1,w
  4532  0176  00DF               	movwf	??_PIR_Main+3
  4533  0177  085F               	movf	??_PIR_Main+3,w
  4534  0178  3A80               	xorlw	128
  4535  0179  00E0               	movwf	??_PIR_Main+4
  4536  017A  3080               	movlw	128
  4537  017B  0260               	subwf	??_PIR_Main+4,w
  4538  017C  1D03               	skipz
  4539  017D  2984               	goto	u5945
  4540  017E  1683               	bsf	3,5	;RP0=1, select bank1
  4541  017F  1303               	bcf	3,6	;RP1=0, select bank1
  4542  0180  0821               	movf	(__PIR^(0+128)+1),w
  4543  0181  1283               	bcf	3,5	;RP0=0, select bank0
  4544  0182  1303               	bcf	3,6	;RP1=0, select bank0
  4545  0183  025E               	subwf	??_PIR_Main+2,w
  4546  0184                     u5945:	
  4547  0184  1C03               	skipc
  4548  0185  2992               	goto	l4835
  4549                           
  4550                           ;PIR_B1.c: 194: setLED(1, 1);
  4551  0186  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0187  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0188  01D9               	clrf	setLED@command
  4554  0189  0AD9               	incf	setLED@command,f
  4555  018A                     L12:	
  4556  018A  3001               	movlw	1
  4557  018B  118A  24BC  118A   	fcall	_setLED
  4558                           
  4559                           ;PIR_B1.c: 195: setLED(2, 0);
  4560  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4561  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4562  0190  01D9               	clrf	setLED@command
  4563  0191  299D               	goto	L9
  4564  0192                     l4835:	
  4565                           ;PIR_B1.c: 196: } else {
  4566                           
  4567                           
  4568                           ;PIR_B1.c: 197: setLED(1, 0);
  4569  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4570  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4571  0194  01D9               	clrf	setLED@command
  4572  0195  3001               	movlw	1
  4573  0196  118A  24BC  118A   	fcall	_setLED
  4574                           
  4575                           ;PIR_B1.c: 198: setLED(2, 1);
  4576  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4577  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4578  019B  01D9               	clrf	setLED@command
  4579  019C  0AD9               	incf	setLED@command,f
  4580  019D                     L9:	
  4581  019D  3002               	movlw	2
  4582  019E  118A  24BC  118A   	fcall	_setLED
  4583  01A1                     l4837:	
  4584                           
  4585                           ;PIR_B1.c: 199: }
  4586                           ;PIR_B1.c: 241: }
  4587                           ;PIR_B1.c: 242: }
  4588                           ;PIR_B1.c: 243: }
  4589                           ;PIR_B1.c: 244: }
  4590                           ;PIR_B1.c: 245: }
  4591                           ;PIR_B1.c: 246: }
  4592                           ;PIR_B1.c: 247: if (_PIR.OK == 0) {
  4593  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  4594  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  4595  01A3  19A0               	btfsc	__PIR^(0+128),3
  4596  01A4  29C9               	goto	l4851
  4597                           
  4598                           ;PIR_B1.c: 248: _PIR.Count++;
  4599  01A5  3001               	movlw	1
  4600  01A6  07BE               	addwf	(__PIR^(0+128)+30),f
  4601  01A7  1803               	skipnc
  4602  01A8  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4603  01A9  3000               	movlw	0
  4604  01AA  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4605                           
  4606                           ;PIR_B1.c: 249: if (_PIR.Count == (30000 / 20)) {
  4607  01AB  3005               	movlw	5
  4608  01AC  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4609  01AD  1D03               	skipz
  4610  01AE  29B1               	goto	u5965
  4611  01AF  30DC               	movlw	220
  4612  01B0  063E               	xorwf	(__PIR^(0+128)+30),w
  4613  01B1                     u5965:	
  4614  01B1  1D03               	skipz
  4615  01B2  0008               	return
  4616                           
  4617                           ;PIR_B1.c: 250: _PIR.Count = 0;
  4618  01B3  01BE               	clrf	(__PIR^(0+128)+30)
  4619  01B4  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4620                           
  4621                           ;PIR_B1.c: 251: _PIR.OK = 1;
  4622  01B5  15A0               	bsf	__PIR^(0+128),3
  4623                           
  4624                           ;PIR_B1.c: 253: setLED(1, 0);
  4625  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  4626  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  4627  01B8  01D9               	clrf	setLED@command
  4628  01B9  3001               	movlw	1
  4629  01BA  118A  24BC  118A   	fcall	_setLED
  4630                           
  4631                           ;PIR_B1.c: 268: if (getDimmerLights_Status(1) == 1) {
  4632  01BD  3001               	movlw	1
  4633  01BE  158A  2641  118A   	fcall	_getDimmerLights_Status
  4634  01C1  3A01               	xorlw	1
  4635  01C2  1D03               	skipz
  4636  01C3  0008               	return
  4637                           
  4638                           ;PIR_B1.c: 269: Dimmer.PIR_Trigger = 1;
  4639  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  4640  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  4641  01C6  16AC               	bsf	_Dimmer,5
  4642                           
  4643                           ;PIR_B1.c: 270: Dimmer.PIR_Sw = 0;
  4644  01C7  122C               	bcf	_Dimmer,4
  4645                           
  4646                           ;PIR_B1.c: 271: }
  4647                           ;PIR_B1.c: 276: }
  4648                           ;PIR_B1.c: 277: } else {
  4649  01C8  0008               	return
  4650  01C9                     l4851:	
  4651                           
  4652                           ;PIR_B1.c: 278: if (LightsStatus == 1) {
  4653  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  4654  01CA  0867               	movf	PIR_Main@LightsStatus,w
  4655  01CB  3A01               	xorlw	1
  4656  01CC  1D03               	skipz
  4657  01CD  29F5               	goto	l4869
  4658                           
  4659                           ;PIR_B1.c: 279: _PIR.CloseTimeSeconds++;
  4660  01CE  3001               	movlw	1
  4661  01CF  00DC               	movwf	??_PIR_Main
  4662  01D0  085C               	movf	??_PIR_Main,w
  4663  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  4664  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  4665  01D3  07C2               	addwf	(__PIR^(0+128)+34),f
  4666                           
  4667                           ;PIR_B1.c: 280: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4668  01D4  0842               	movf	(__PIR^(0+128)+34),w
  4669  01D5  3A32               	xorlw	50
  4670  01D6  1D03               	skipz
  4671  01D7  0008               	return
  4672                           
  4673                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds = 0;
  4674  01D8  01C2               	clrf	(__PIR^(0+128)+34)
  4675                           
  4676                           ;PIR_B1.c: 282: _PIR.CloseTimeMinutes++;
  4677  01D9  3001               	movlw	1
  4678  01DA  07C0               	addwf	(__PIR^(0+128)+32),f
  4679  01DB  1803               	skipnc
  4680  01DC  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4681  01DD  3000               	movlw	0
  4682  01DE  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4683                           
  4684                           ;PIR_B1.c: 283: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4685  01DF  0844               	movf	((__PIR+1)^(0+128)+35),w
  4686  01E0  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4687  01E1  1D03               	skipz
  4688  01E2  29E5               	goto	u6005
  4689  01E3  0843               	movf	(__PIR^(0+128)+35),w
  4690  01E4  0640               	xorwf	(__PIR^(0+128)+32),w
  4691  01E5                     u6005:	
  4692  01E5  1D03               	skipz
  4693  01E6  0008               	return
  4694                           
  4695                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes = 0;
  4696  01E7  01C0               	clrf	(__PIR^(0+128)+32)
  4697  01E8  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4698                           
  4699                           ;PIR_B1.c: 300: if (getDimmerLights_Status(1) == 1) {
  4700  01E9  3001               	movlw	1
  4701  01EA  158A  2641  118A   	fcall	_getDimmerLights_Status
  4702  01ED  3A01               	xorlw	1
  4703  01EE  1D03               	skipz
  4704  01EF  0008               	return
  4705                           
  4706                           ;PIR_B1.c: 301: Dimmer.PIR_Trigger = 1;
  4707  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  4708  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  4709  01F2  16AC               	bsf	_Dimmer,5
  4710                           
  4711                           ;PIR_B1.c: 302: Dimmer.PIR_Sw = 0;
  4712  01F3  122C               	bcf	_Dimmer,4
  4713                           
  4714                           ;PIR_B1.c: 303: }
  4715                           ;PIR_B1.c: 306: }
  4716                           ;PIR_B1.c: 307: }
  4717                           ;PIR_B1.c: 308: } else {
  4718  01F4  0008               	return
  4719  01F5                     l4869:	
  4720                           
  4721                           ;PIR_B1.c: 309: _PIR.CloseTimeSeconds = 0;
  4722  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  4723  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  4724  01F7  01C2               	clrf	(__PIR^(0+128)+34)
  4725                           
  4726                           ;PIR_B1.c: 310: _PIR.CloseTimeMinutes = 0;
  4727  01F8  01C0               	clrf	(__PIR^(0+128)+32)
  4728  01F9  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4729                           
  4730                           ;PIR_B1.c: 311: }
  4731                           ;PIR_B1.c: 312: }
  4732                           ;PIR_B1.c: 313: } else {
  4733  01FA  0008               	return
  4734  01FB                     l1018:	
  4735                           
  4736                           ;PIR_B1.c: 314: if (myMain.PowerON == 1) {
  4737  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  4738  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  4739  01FD  1C31               	btfss	_myMain,0
  4740  01FE  0008               	return
  4741                           
  4742                           ;PIR_B1.c: 315: _PIR.Enable = 1;
  4743  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  4744  0200  1303               	bcf	3,6	;RP1=0, select bank1
  4745  0201  1420               	bsf	__PIR^(0+128),0
  4746                           
  4747                           ;PIR_B1.c: 317: setLED(1, 1);
  4748  0202  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0203  1303               	bcf	3,6	;RP1=0, select bank0
  4750  0204  01D9               	clrf	setLED@command
  4751  0205  0AD9               	incf	setLED@command,f
  4752  0206  3001               	movlw	1
  4753  0207  118A  24BC         	fcall	_setLED
  4754                           
  4755                           ;PIR_B1.c: 332: Dimmer.PIR_Trigger = 1;
  4756  0209  1283               	bcf	3,5	;RP0=0, select bank0
  4757  020A  1303               	bcf	3,6	;RP1=0, select bank0
  4758  020B  16AC               	bsf	_Dimmer,5
  4759                           
  4760                           ;PIR_B1.c: 333: Dimmer.PIR_Sw = 1;
  4761  020C  162C               	bsf	_Dimmer,4
  4762  020D  0008               	return
  4763  020E                     __end_of_PIR_Main:	
  4764                           
  4765                           	psect	text18
  4766  0DAE                     __ptext18:	
  4767 ;; *************** function _getCDS_Status *****************
  4768 ;; Defined at:
  4769 ;;		line 42 in file "../src/CDS_B1.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  status          1    0[BANK0 ] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      unsigned char 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4783 ;;      Params:         0       0       0       0
  4784 ;;      Locals:         0       1       0       0
  4785 ;;      Temps:          0       0       0       0
  4786 ;;      Totals:         0       1       0       0
  4787 ;;Total ram usage:        1 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    3
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_PIR_Main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _getCDS_Status
  4799  0DAE                     _getCDS_Status:	
  4800                           
  4801                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4805  0DAE  3000               	movlw	0
  4806  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4807  0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4808  0DB1  1A3A               	btfsc	__CDS,4
  4809  0DB2  3001               	movlw	1
  4810  0DB3  00D7               	movwf	getCDS_Status@status
  4811                           
  4812                           ;CDS_B1.c: 44: return status;
  4813  0DB4  0857               	movf	getCDS_Status@status,w
  4814  0DB5  0008               	return
  4815  0DB6                     __end_of_getCDS_Status:	
  4816                           
  4817                           	psect	text19
  4818  0DFB                     __ptext19:	
  4819 ;; *************** function _PIR_Initialization *****************
  4820 ;; Defined at:
  4821 ;;		line 7 in file "../src/PIR_B1.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;		None               void
  4828 ;; Registers used:
  4829 ;;		wreg
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4835 ;;      Params:         0       0       0       0
  4836 ;;      Locals:         0       0       0       0
  4837 ;;      Temps:          0       1       0       0
  4838 ;;      Totals:         0       1       0       0
  4839 ;;Total ram usage:        1 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    3
  4842 ;; This function calls:
  4843 ;;		Nothing
  4844 ;; This function is called by:
  4845 ;;		_main
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _PIR_Initialization
  4851  0DFB                     _PIR_Initialization:	
  4852                           
  4853                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _PIR_Initialization: [wreg]
  4857  0DFB  3019               	movlw	25
  4858  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0DFE  00D7               	movwf	??_PIR_Initialization
  4861  0DFF  0857               	movf	??_PIR_Initialization,w
  4862  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  4863  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  4864  0E02  00C8               	movwf	(__PIR^(0+128)+40)
  4865                           
  4866                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4867  0E03  3005               	movlw	5
  4868  0E04  00C3               	movwf	(__PIR^(0+128)+35)
  4869  0E05  3000               	movlw	0
  4870  0E06  00C4               	movwf	(__PIR^(0+128)+36)
  4871  0E07  0008               	return
  4872  0E08                     __end_of_PIR_Initialization:	
  4873                           
  4874                           	psect	text20
  4875  0E32                     __ptext20:	
  4876 ;; *************** function _Mcu_Initialization *****************
  4877 ;; Defined at:
  4878 ;;		line 30 in file "../src/MCU_B1.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;		None
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;		None               void
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0, pclath, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4892 ;;      Params:         0       0       0       0
  4893 ;;      Locals:         0       0       0       0
  4894 ;;      Temps:          0       0       0       0
  4895 ;;      Totals:         0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:    4
  4899 ;; This function calls:
  4900 ;;		_ADC_Set
  4901 ;;		_Fosc_Set
  4902 ;;		_IO_Set
  4903 ;;		_TMR1_Set
  4904 ;;		_WDT_Set
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _Mcu_Initialization
  4912  0E32                     _Mcu_Initialization:	
  4913                           
  4914                           ;MCU_B1.c: 32: Fosc_Set();
  4915                           
  4916                           ;incstack = 0
  4917                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4918  0E32  158A  258E  158A   	fcall	_Fosc_Set
  4919                           
  4920                           ;MCU_B1.c: 34: IO_Set();
  4921  0E35  158A  271B  158A   	fcall	_IO_Set
  4922                           
  4923                           ;MCU_B1.c: 36: ;;
  4924                           ;MCU_B1.c: 38: TMR1_Set();
  4925  0E38  158A  2616  158A   	fcall	_TMR1_Set
  4926                           
  4927                           ;MCU_B1.c: 40: ADC_Set();
  4928  0E3B  158A  25A7  158A   	fcall	_ADC_Set
  4929                           
  4930                           ;MCU_B1.c: 42: ;;
  4931                           ;MCU_B1.c: 44: ;;
  4932                           ;MCU_B1.c: 46: ;;
  4933                           ;MCU_B1.c: 48: ;;
  4934                           ;MCU_B1.c: 50: ;;
  4935                           ;MCU_B1.c: 52: WDT_Set();
  4936  0E3E  158A  2624         	fcall	_WDT_Set
  4937  0E40  0008               	return
  4938  0E41                     __end_of_Mcu_Initialization:	
  4939                           
  4940                           	psect	text21
  4941  0E24                     __ptext21:	
  4942 ;; *************** function _WDT_Set *****************
  4943 ;; Defined at:
  4944 ;;		line 1102 in file "../src/MCU_B1.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;		None               void
  4951 ;; Registers used:
  4952 ;;		wreg
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 0/0
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4958 ;;      Params:         0       0       0       0
  4959 ;;      Locals:         0       0       0       0
  4960 ;;      Temps:          0       1       0       0
  4961 ;;      Totals:         0       1       0       0
  4962 ;;Total ram usage:        1 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    3
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_Mcu_Initialization
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _WDT_Set
  4974  0E24                     _WDT_Set:	
  4975                           
  4976                           ;MCU_B1.c: 1104: PSA = 1;
  4977                           
  4978                           ;incstack = 0
  4979                           ; Regs used in _WDT_Set: [wreg]
  4980  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  4981  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  4982  0E26  1581               	bsf	1,3	;volatile
  4983                           
  4984                           ;MCU_B1.c: 1105: PS0 = 1;
  4985  0E27  1401               	bsf	1,0	;volatile
  4986                           
  4987                           ;MCU_B1.c: 1106: PS1 = 1;
  4988  0E28  1481               	bsf	1,1	;volatile
  4989                           
  4990                           ;MCU_B1.c: 1107: PS2 = 1;
  4991  0E29  1501               	bsf	1,2	;volatile
  4992                           
  4993                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  4994  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0E2C  1441               	bsf	_WDT,0
  4997                           
  4998                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  4999  0E2D  300A               	movlw	10
  5000  0E2E  00D7               	movwf	??_WDT_Set
  5001  0E2F  0857               	movf	??_WDT_Set,w
  5002  0E30  00C2               	movwf	_WDT+1
  5003  0E31  0008               	return
  5004  0E32                     __end_of_WDT_Set:	
  5005                           
  5006                           	psect	text22
  5007  0E16                     __ptext22:	
  5008 ;; *************** function _TMR1_Set *****************
  5009 ;; Defined at:
  5010 ;;		line 226 in file "../src/MCU_B1.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;		None               void
  5017 ;; Registers used:
  5018 ;;		wreg
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5024 ;;      Params:         0       0       0       0
  5025 ;;      Locals:         0       0       0       0
  5026 ;;      Temps:          0       0       0       0
  5027 ;;      Totals:         0       0       0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    3
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_Mcu_Initialization
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _TMR1_Set
  5040  0E16                     _TMR1_Set:	
  5041                           
  5042                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _TMR1_Set: [wreg]
  5046  0E16  3041               	movlw	65
  5047  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  5048  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  5049  0E19  0090               	movwf	16	;volatile
  5050                           
  5051                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5052  0E1A  30FA               	movlw	250
  5053  0E1B  008F               	movwf	15	;volatile
  5054                           
  5055                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5056  0E1C  3038               	movlw	56
  5057  0E1D  008E               	movwf	14	;volatile
  5058                           
  5059                           ;MCU_B1.c: 230: TMR1IE = 1;
  5060  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  5061  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  5062  0E20  140C               	bsf	12,0	;volatile
  5063                           
  5064                           ;MCU_B1.c: 231: PEIE = 1;
  5065  0E21  170B               	bsf	11,6	;volatile
  5066                           
  5067                           ;MCU_B1.c: 232: GIE = 1;
  5068  0E22  178B               	bsf	11,7	;volatile
  5069  0E23  0008               	return
  5070  0E24                     __end_of_TMR1_Set:	
  5071                           
  5072                           	psect	text23
  5073  0F1B                     __ptext23:	
  5074 ;; *************** function _IO_Set *****************
  5075 ;; Defined at:
  5076 ;;		line 60 in file "../src/MCU_B1.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;		None               void
  5083 ;; Registers used:
  5084 ;;		wreg, status,2
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5090 ;;      Params:         0       0       0       0
  5091 ;;      Locals:         0       0       0       0
  5092 ;;      Temps:          0       0       0       0
  5093 ;;      Totals:         0       0       0       0
  5094 ;;Total ram usage:        0 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    3
  5097 ;; This function calls:
  5098 ;;		Nothing
  5099 ;; This function is called by:
  5100 ;;		_Mcu_Initialization
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104                           
  5105                           ;psect for function _IO_Set
  5106  0F1B                     _IO_Set:	
  5107                           
  5108                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5109                           
  5110                           ;incstack = 0
  5111                           ; Regs used in _IO_Set: [wreg+status,2]
  5112  0F1B  30AF               	movlw	175
  5113  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  5114  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  5115  0F1E  0085               	movwf	5	;volatile
  5116                           
  5117                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5118  0F1F  3001               	movlw	1
  5119  0F20  0086               	movwf	6	;volatile
  5120                           
  5121                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5122  0F21  0187               	clrf	7	;volatile
  5123                           
  5124                           ;MCU_B1.c: 65: ANSELA = 0b10100111;;
  5125  0F22  30A7               	movlw	167
  5126  0F23  1683               	bsf	3,5	;RP0=1, select bank3
  5127  0F24  1703               	bsf	3,6	;RP1=1, select bank3
  5128  0F25  0085               	movwf	5	;volatile
  5129                           
  5130                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5131  0F26  3001               	movlw	1
  5132  0F27  0086               	movwf	6	;volatile
  5133                           
  5134                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5135  0F28  30AF               	movlw	175
  5136  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0F2B  0085               	movwf	5	;volatile
  5139                           
  5140                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5141  0F2C  3001               	movlw	1
  5142  0F2D  0086               	movwf	6	;volatile
  5143                           
  5144                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5145  0F2E  0187               	clrf	7	;volatile
  5146                           
  5147                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5148  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  5149  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  5150  0F31  0195               	clrf	21	;volatile
  5151  0F32  0008               	return
  5152  0F33                     __end_of_IO_Set:	
  5153                           
  5154                           	psect	text24
  5155  0D8E                     __ptext24:	
  5156 ;; *************** function _Fosc_Set *****************
  5157 ;; Defined at:
  5158 ;;		line 56 in file "../src/MCU_B1.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;		None               void
  5165 ;; Registers used:
  5166 ;;		wreg
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5172 ;;      Params:         0       0       0       0
  5173 ;;      Locals:         0       0       0       0
  5174 ;;      Temps:          0       0       0       0
  5175 ;;      Totals:         0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    3
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		_Mcu_Initialization
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           
  5187                           ;psect for function _Fosc_Set
  5188  0D8E                     _Fosc_Set:	
  5189                           
  5190                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5191                           
  5192                           ;incstack = 0
  5193                           ; Regs used in _Fosc_Set: [wreg]
  5194  0D8E  303C               	movlw	60
  5195  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  5196  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  5197  0D91  0090               	movwf	16	;volatile
  5198  0D92  0008               	return
  5199  0D93                     __end_of_Fosc_Set:	
  5200                           
  5201                           	psect	text25
  5202  0DA7                     __ptext25:	
  5203 ;; *************** function _ADC_Set *****************
  5204 ;; Defined at:
  5205 ;;		line 427 in file "../src/MCU_B1.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;		None               void
  5212 ;; Registers used:
  5213 ;;		wreg
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5219 ;;      Params:         0       0       0       0
  5220 ;;      Locals:         0       0       0       0
  5221 ;;      Temps:          0       0       0       0
  5222 ;;      Totals:         0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    3
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_Mcu_Initialization
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           
  5234                           ;psect for function _ADC_Set
  5235  0DA7                     _ADC_Set:	
  5236                           
  5237                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _ADC_Set: [wreg]
  5241  0DA7  3073               	movlw	115
  5242  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  5243  0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  5244  0DAA  009F               	movwf	31	;volatile
  5245                           
  5246                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5247  0DAB  30C1               	movlw	193
  5248  0DAC  009D               	movwf	29	;volatile
  5249  0DAD  0008               	return
  5250  0DAE                     __end_of_ADC_Set:	
  5251                           
  5252                           	psect	text26
  5253  0D7C                     __ptext26:	
  5254 ;; *************** function _LED_Main *****************
  5255 ;; Defined at:
  5256 ;;		line 47 in file "../src/LED_B1.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;		None               void
  5263 ;; Registers used:
  5264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5270 ;;      Params:         0       0       0       0
  5271 ;;      Locals:         0       0       0       0
  5272 ;;      Temps:          0       0       0       0
  5273 ;;      Totals:         0       0       0       0
  5274 ;;Total ram usage:        0 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    6
  5277 ;; This function calls:
  5278 ;;		_setPIRLED_Main
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           
  5285                           ;psect for function _LED_Main
  5286  0D7C                     _LED_Main:	
  5287                           
  5288                           ;LED_B1.c: 55: setPIRLED_Main();
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5292  0D7C  118A  244B         	fcall	_setPIRLED_Main
  5293  0D7E  0008               	return
  5294  0D7F                     __end_of_LED_Main:	
  5295                           
  5296                           	psect	text27
  5297  044B                     __ptext27:	
  5298 ;; *************** function _setPIRLED_Main *****************
  5299 ;; Defined at:
  5300 ;;		line 265 in file "../src/LED_B1.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  count           1    5[BANK0 ] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;		None               void
  5307 ;; Registers used:
  5308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5314 ;;      Params:         0       0       0       0
  5315 ;;      Locals:         0       1       0       0
  5316 ;;      Temps:          0       1       0       0
  5317 ;;      Totals:         0       2       0       0
  5318 ;;Total ram usage:        2 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    5
  5321 ;; This function calls:
  5322 ;;		_setLED
  5323 ;; This function is called by:
  5324 ;;		_LED_Main
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           
  5329                           ;psect for function _setPIRLED_Main
  5330  044B                     _setPIRLED_Main:	
  5331                           
  5332                           ;LED_B1.c: 267: char count;
  5333                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  5334                           
  5335                           ;incstack = 0
  5336                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5337  044B  1283               	bcf	3,5	;RP0=0, select bank0
  5338  044C  1303               	bcf	3,6	;RP1=0, select bank0
  5339  044D  1C36               	btfss	_PIRLED,0
  5340  044E  0008               	return
  5341                           
  5342                           ;LED_B1.c: 269: PIRLED.Time++;
  5343  044F  3001               	movlw	1
  5344  0450  07B8               	addwf	_PIRLED+2,f
  5345  0451  1803               	skipnc
  5346  0452  0AB9               	incf	_PIRLED+3,f
  5347  0453  3000               	movlw	0
  5348  0454  07B9               	addwf	_PIRLED+3,f
  5349                           
  5350                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  5351  0455  3000               	movlw	0
  5352  0456  0239               	subwf	_PIRLED+3,w
  5353  0457  3019               	movlw	25
  5354  0458  1903               	skipnz
  5355  0459  0238               	subwf	_PIRLED+2,w
  5356  045A  1C03               	skipc
  5357  045B  0008               	return
  5358                           
  5359                           ;LED_B1.c: 271: PIRLED.Time = 0;
  5360  045C  01B8               	clrf	_PIRLED+2
  5361  045D  01B9               	clrf	_PIRLED+3
  5362                           
  5363                           ;LED_B1.c: 272: setLED(1, 0);
  5364  045E  01D9               	clrf	setLED@command
  5365  045F  3001               	movlw	1
  5366  0460  118A  24BC  118A   	fcall	_setLED
  5367                           
  5368                           ;LED_B1.c: 273: setLED(2, 0);
  5369  0463  1283               	bcf	3,5	;RP0=0, select bank0
  5370  0464  1303               	bcf	3,6	;RP1=0, select bank0
  5371  0465  01D9               	clrf	setLED@command
  5372  0466  3002               	movlw	2
  5373  0467  118A  24BC  118A   	fcall	_setLED
  5374                           
  5375                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  5376  046A  1283               	bcf	3,5	;RP0=0, select bank0
  5377  046B  1303               	bcf	3,6	;RP1=0, select bank0
  5378  046C  1CB6               	btfss	_PIRLED,1
  5379  046D  2C72               	goto	l4365
  5380                           
  5381                           ;LED_B1.c: 275: count = 4;
  5382  046E  3004               	movlw	4
  5383  046F  00DB               	movwf	??_setPIRLED_Main
  5384  0470  085B               	movf	??_setPIRLED_Main,w
  5385  0471  00DC               	movwf	setPIRLED_Main@count
  5386  0472                     l4365:	
  5387                           
  5388                           ;LED_B1.c: 276: }
  5389                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  5390  0472  1D36               	btfss	_PIRLED,2
  5391  0473  2C78               	goto	l4369
  5392                           
  5393                           ;LED_B1.c: 278: count = 6;
  5394  0474  3006               	movlw	6
  5395  0475  00DB               	movwf	??_setPIRLED_Main
  5396  0476  085B               	movf	??_setPIRLED_Main,w
  5397  0477  00DC               	movwf	setPIRLED_Main@count
  5398  0478                     l4369:	
  5399                           
  5400                           ;LED_B1.c: 279: }
  5401                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  5402  0478  1DB6               	btfss	_PIRLED,3
  5403  0479  2C7E               	goto	l4373
  5404                           
  5405                           ;LED_B1.c: 281: count = 8;
  5406  047A  3008               	movlw	8
  5407  047B  00DB               	movwf	??_setPIRLED_Main
  5408  047C  085B               	movf	??_setPIRLED_Main,w
  5409  047D  00DC               	movwf	setPIRLED_Main@count
  5410  047E                     l4373:	
  5411                           
  5412                           ;LED_B1.c: 282: }
  5413                           ;LED_B1.c: 283: PIRLED.Count++;
  5414  047E  3001               	movlw	1
  5415  047F  00DB               	movwf	??_setPIRLED_Main
  5416  0480  085B               	movf	??_setPIRLED_Main,w
  5417  0481  07B7               	addwf	_PIRLED+1,f
  5418                           
  5419                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5420  0482  0837               	movf	_PIRLED+1,w
  5421  0483  3A01               	xorlw	1
  5422  0484  1903               	skipnz
  5423  0485  2C8A               	goto	l4379
  5424  0486  0837               	movf	_PIRLED+1,w
  5425  0487  3A02               	xorlw	2
  5426  0488  1D03               	skipz
  5427  0489  2C9E               	goto	l4383
  5428  048A                     l4379:	
  5429                           
  5430                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5431  048A  1003               	clrc
  5432  048B  1E36               	btfss	_PIRLED,4
  5433  048C  1403               	setc
  5434  048D  1C03               	btfss	3,0
  5435  048E  2C93               	goto	u5020
  5436  048F  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0490  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0491  1636               	bsf	_PIRLED,4
  5439  0492  2C96               	goto	l4381
  5440  0493                     u5020:	
  5441  0493  1283               	bcf	3,5	;RP0=0, select bank0
  5442  0494  1303               	bcf	3,6	;RP1=0, select bank0
  5443  0495  1236               	bcf	_PIRLED,4
  5444  0496                     l4381:	
  5445                           
  5446                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  5447  0496  3000               	movlw	0
  5448  0497  1A36               	btfsc	_PIRLED,4
  5449  0498  3001               	movlw	1
  5450  0499  00D9               	movwf	setLED@command
  5451  049A  3002               	movlw	2
  5452  049B  118A  24BC         	fcall	_setLED
  5453                           
  5454                           ;LED_B1.c: 287: } else {
  5455  049D  0008               	return
  5456  049E                     l4383:	
  5457                           
  5458                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5459  049E  1003               	clrc
  5460  049F  1283               	bcf	3,5	;RP0=0, select bank0
  5461  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  5462  04A1  1E36               	btfss	_PIRLED,4
  5463  04A2  1403               	setc
  5464  04A3  1C03               	btfss	3,0
  5465  04A4  2CA9               	goto	u5040
  5466  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  5467  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  5468  04A7  1636               	bsf	_PIRLED,4
  5469  04A8  2CAC               	goto	l4385
  5470  04A9                     u5040:	
  5471  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  5472  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  5473  04AB  1236               	bcf	_PIRLED,4
  5474  04AC                     l4385:	
  5475                           
  5476                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  5477  04AC  3000               	movlw	0
  5478  04AD  1A36               	btfsc	_PIRLED,4
  5479  04AE  3001               	movlw	1
  5480  04AF  00D9               	movwf	setLED@command
  5481  04B0  3001               	movlw	1
  5482  04B1  118A  24BC  118A   	fcall	_setLED
  5483                           
  5484                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  5485  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5486  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5487  04B6  0837               	movf	_PIRLED+1,w
  5488  04B7  065C               	xorwf	setPIRLED_Main@count,w
  5489  04B8  1D03               	skipz
  5490  04B9  0008               	return
  5491                           
  5492                           ;LED_B1.c: 291: PIRLED.Count = 0;
  5493  04BA  01B7               	clrf	_PIRLED+1
  5494  04BB  0008               	return
  5495  04BC                     __end_of_setPIRLED_Main:	
  5496                           
  5497                           	psect	text28
  5498  0DE2                     __ptext28:	
  5499 ;; *************** function _LED_Initialization *****************
  5500 ;; Defined at:
  5501 ;;		line 31 in file "../src/LED_B1.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5515 ;;      Params:         0       0       0       0
  5516 ;;      Locals:         0       0       0       0
  5517 ;;      Temps:          0       0       0       0
  5518 ;;      Totals:         0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    6
  5522 ;; This function calls:
  5523 ;;		_setLED_Initialization
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _LED_Initialization
  5531  0DE2                     _LED_Initialization:	
  5532                           
  5533                           ;LED_B1.c: 33: setLED_Initialization(1);
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5537  0DE2  3001               	movlw	1
  5538  0DE3  158A  2674  158A   	fcall	_setLED_Initialization
  5539                           
  5540                           ;LED_B1.c: 36: setLED_Initialization(2);
  5541  0DE6  3002               	movlw	2
  5542  0DE7  158A  2674  158A   	fcall	_setLED_Initialization
  5543                           
  5544                           ;LED_B1.c: 42: setLED_Initialization(99);
  5545  0DEA  3063               	movlw	99
  5546  0DEB  158A  2674         	fcall	_setLED_Initialization
  5547  0DED  0008               	return
  5548  0DEE                     __end_of_LED_Initialization:	
  5549                           
  5550                           	psect	text29
  5551  0E74                     __ptext29:	
  5552 ;; *************** function _setLED_Initialization *****************
  5553 ;; Defined at:
  5554 ;;		line 74 in file "../src/LED_B1.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  led             1    wreg     unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  led             1    4[BANK0 ] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;		None               void
  5561 ;; Registers used:
  5562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5568 ;;      Params:         0       0       0       0
  5569 ;;      Locals:         0       1       0       0
  5570 ;;      Temps:          0       0       0       0
  5571 ;;      Totals:         0       1       0       0
  5572 ;;Total ram usage:        1 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    5
  5575 ;; This function calls:
  5576 ;;		_LedPointSelect
  5577 ;;		_setLED
  5578 ;; This function is called by:
  5579 ;;		_LED_Initialization
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function _setLED_Initialization
  5585  0E74                     _setLED_Initialization:	
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5589                           ;setLED_Initialization@led stored from wreg
  5590  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0E76  00DB               	movwf	setLED_Initialization@led
  5593                           
  5594                           ;LED_B1.c: 75: LedPointSelect(led);
  5595  0E77  085B               	movf	setLED_Initialization@led,w
  5596  0E78  158A  2783  158A   	fcall	_LedPointSelect
  5597                           
  5598                           ;LED_B1.c: 76: LED->Enable = 1;
  5599  0E7B  0873               	movf	_LED,w
  5600  0E7C  0084               	movwf	4
  5601  0E7D  1383               	bcf	3,7	;select IRP bank0
  5602  0E7E  1400               	bsf	0,0
  5603                           
  5604                           ;LED_B1.c: 77: setLED(led, 0);
  5605  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  5606  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  5607  0E81  01D9               	clrf	setLED@command
  5608  0E82  085B               	movf	setLED_Initialization@led,w
  5609  0E83  118A  24BC         	fcall	_setLED
  5610  0E85  0008               	return
  5611  0E86                     __end_of_setLED_Initialization:	
  5612                           
  5613                           	psect	text30
  5614  068E                     __ptext30:	
  5615 ;; *************** function _Exception_Main *****************
  5616 ;; Defined at:
  5617 ;;		line 499 in file "../src/Main_B1.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  error           1    9[BANK0 ] unsigned char 
  5622 ;;  status          1    8[BANK0 ] unsigned char 
  5623 ;;  count           1    7[BANK0 ] unsigned char 
  5624 ;;  lights          1    6[BANK0 ] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;		None               void
  5627 ;; Registers used:
  5628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5634 ;;      Params:         0       0       0       0
  5635 ;;      Locals:         0       4       0       0
  5636 ;;      Temps:          0       1       0       0
  5637 ;;      Totals:         0       5       0       0
  5638 ;;Total ram usage:        5 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    5
  5641 ;; This function calls:
  5642 ;;		_getDimmerLights_Status
  5643 ;;		_getMain_All_Error_Status
  5644 ;;		_setLED
  5645 ;; This function is called by:
  5646 ;;		_main
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _Exception_Main
  5652  068E                     _Exception_Main:	
  5653                           
  5654                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5658  068E  3000               	movlw	0
  5659  068F  158A  2733  118A   	fcall	_getMain_All_Error_Status
  5660  0692  1283               	bcf	3,5	;RP0=0, select bank0
  5661  0693  1303               	bcf	3,6	;RP1=0, select bank0
  5662  0694  00DC               	movwf	??_Exception_Main
  5663  0695  085C               	movf	??_Exception_Main,w
  5664  0696  00E0               	movwf	Exception_Main@error
  5665                           
  5666                           ;Main_B1.c: 501: char lights = 0, count = 1;
  5667  0697  01DD               	clrf	Exception_Main@lights
  5668  0698  01DE               	clrf	Exception_Main@count
  5669  0699  0ADE               	incf	Exception_Main@count,f
  5670                           
  5671                           ;Main_B1.c: 502: char status = 0;
  5672  069A  01DF               	clrf	Exception_Main@status
  5673                           
  5674                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  5675  069B  1DB3               	btfss	_myMain+2,3
  5676  069C  2EA9               	goto	l4895
  5677                           
  5678                           ;Main_B1.c: 505: if (error == 0) {
  5679  069D  08E0               	movf	Exception_Main@error,f
  5680  069E  1D03               	skipz
  5681  069F  0008               	return
  5682                           
  5683                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  5684  06A0  11B3               	bcf	_myMain+2,3
  5685                           
  5686                           ;Main_B1.c: 511: setLED(error, 110);
  5687  06A1  306E               	movlw	110
  5688  06A2  00DC               	movwf	??_Exception_Main
  5689  06A3  085C               	movf	??_Exception_Main,w
  5690  06A4  00D9               	movwf	setLED@command
  5691  06A5  0860               	movf	Exception_Main@error,w
  5692  06A6  118A  24BC         	fcall	_setLED
  5693                           
  5694                           ;Main_B1.c: 522: }
  5695                           ;Main_B1.c: 523: } else {
  5696  06A8  0008               	return
  5697  06A9                     l4895:	
  5698                           
  5699                           ;Main_B1.c: 524: if (error != 0) {
  5700  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  5701  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  5702  06AB  0860               	movf	Exception_Main@error,w
  5703  06AC  1903               	btfsc	3,2
  5704  06AD  0008               	return
  5705                           
  5706                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  5707  06AE  15B3               	bsf	_myMain+2,3
  5708                           
  5709                           ;Main_B1.c: 529: setLED(error, 111);
  5710  06AF  306F               	movlw	111
  5711  06B0  00DC               	movwf	??_Exception_Main
  5712  06B1  085C               	movf	??_Exception_Main,w
  5713  06B2  00D9               	movwf	setLED@command
  5714  06B3  0860               	movf	Exception_Main@error,w
  5715  06B4  118A  24BC  118A   	fcall	_setLED
  5716                           
  5717                           ;Main_B1.c: 538: switch (error) {
  5718  06B7  2EC6               	goto	l4907
  5719  06B8                     l4901:	
  5720                           ;Main_B1.c: 539: case 2:
  5721                           
  5722                           
  5723                           ;Main_B1.c: 542: if (getDimmerLights_Status(1) == 1) {
  5724  06B8  3001               	movlw	1
  5725  06B9  158A  2641  118A   	fcall	_getDimmerLights_Status
  5726  06BC  3A01               	xorlw	1
  5727  06BD  1903               	btfsc	3,2
  5728  06BE  2EC2               	goto	l4903
  5729  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5730  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5731  06C1  0008               	return
  5732  06C2                     l4903:	
  5733                           
  5734                           ;Main_B1.c: 543: Dimmer.PIR_Close_Status = 1;
  5735  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  5736  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  5737  06C4  142D               	bsf	_Dimmer+1,0
  5738                           
  5739                           ;Main_B1.c: 586: }
  5740                           
  5741                           ;Main_B1.c: 585: break;
  5742                           
  5743                           ;Main_B1.c: 561: case 3:
  5744                           
  5745                           ;Main_B1.c: 544: }
  5746                           ;Main_B1.c: 560: break;
  5747  06C5  0008               	return
  5748  06C6                     l4907:	
  5749  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  5750  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  5751  06C8  0860               	movf	Exception_Main@error,w
  5752                           
  5753                           ; Switch size 1, requested type "space"
  5754                           ; Number of cases is 2, Range of values is 2 to 3
  5755                           ; switch strategies available:
  5756                           ; Name         Instructions Cycles
  5757                           ; simple_byte            7     4 (average)
  5758                           ; direct_byte           14    10 (fixed)
  5759                           ; jumptable            263     9 (fixed)
  5760                           ;	Chosen strategy is simple_byte
  5761  06C9  3A02               	xorlw	2	; case 2
  5762  06CA  1903               	skipnz
  5763  06CB  2EB8               	goto	l4901
  5764  06CC  3A01               	xorlw	1	; case 3
  5765  06CD  1903               	skipnz
  5766  06CE  2ED1               	goto	l826
  5767  06CF  2ED1               	goto	l826
  5768  06D0  0008               	return
  5769  06D1                     l826:	
  5770  06D1  0008               	return
  5771  06D2                     __end_of_Exception_Main:	
  5772                           
  5773                           	psect	text31
  5774  04BC                     __ptext31:	
  5775 ;; *************** function _setLED *****************
  5776 ;; Defined at:
  5777 ;;		line 81 in file "../src/LED_B1.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  led             1    wreg     unsigned char 
  5780 ;;  command         1    2[BANK0 ] unsigned char 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  led             1    3[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;		None               void
  5785 ;; Registers used:
  5786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5792 ;;      Params:         0       1       0       0
  5793 ;;      Locals:         0       1       0       0
  5794 ;;      Temps:          0       0       0       0
  5795 ;;      Totals:         0       2       0       0
  5796 ;;Total ram usage:        2 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    4
  5799 ;; This function calls:
  5800 ;;		_LedPointSelect
  5801 ;; This function is called by:
  5802 ;;		_setLED_Initialization
  5803 ;;		_setPIRLED_Main
  5804 ;;		_Exception_Main
  5805 ;;		_PIR_Main
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           
  5810                           ;psect for function _setLED
  5811  04BC                     _setLED:	
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5815                           ;setLED@led stored from wreg
  5816  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  5817  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  5818  04BE  00DA               	movwf	setLED@led
  5819                           
  5820                           ;LED_B1.c: 82: LedPointSelect(led);
  5821  04BF  085A               	movf	setLED@led,w
  5822  04C0  158A  2783  118A   	fcall	_LedPointSelect
  5823                           
  5824                           ;LED_B1.c: 83: if (command == 0) {
  5825  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5826  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5827  04C5  08D9               	movf	setLED@command,f
  5828  04C6  1D03               	skipz
  5829  04C7  2CD5               	goto	l4157
  5830                           
  5831                           ;LED_B1.c: 85: if (led == 1) {
  5832  04C8  085A               	movf	setLED@led,w
  5833  04C9  3A01               	xorlw	1
  5834  04CA  1D03               	skipz
  5835  04CB  2CCD               	goto	l4149
  5836                           
  5837                           ;LED_B1.c: 89: RB4 = 1;
  5838  04CC  1606               	bsf	6,4	;volatile
  5839  04CD                     l4149:	
  5840                           
  5841                           ;LED_B1.c: 91: }
  5842                           ;LED_B1.c: 94: if (led == 2) {
  5843  04CD  085A               	movf	setLED@led,w
  5844  04CE  3A02               	xorlw	2
  5845  04CF  1903               	btfsc	3,2
  5846                           
  5847                           ;LED_B1.c: 98: RB5 = 1;
  5848  04D0  1686               	bsf	6,5	;volatile
  5849                           
  5850                           ;LED_B1.c: 100: }
  5851                           ;LED_B1.c: 112: if (led == 99) {
  5852  04D1  085A               	movf	setLED@led,w
  5853  04D2  3A63               	xorlw	99
  5854  04D3  1903               	btfsc	3,2
  5855                           
  5856                           ;LED_B1.c: 116: RB3 = 1;
  5857  04D4  1586               	bsf	6,3	;volatile
  5858  04D5                     l4157:	
  5859                           
  5860                           ;LED_B1.c: 118: }
  5861                           ;LED_B1.c: 120: }
  5862                           ;LED_B1.c: 121: if (command == 1) {
  5863  04D5  0859               	movf	setLED@command,w
  5864  04D6  3A01               	xorlw	1
  5865  04D7  1D03               	skipz
  5866  04D8  2CE6               	goto	l4171
  5867                           
  5868                           ;LED_B1.c: 123: if (led == 1) {
  5869  04D9  085A               	movf	setLED@led,w
  5870  04DA  3A01               	xorlw	1
  5871  04DB  1D03               	skipz
  5872  04DC  2CDE               	goto	l4163
  5873                           
  5874                           ;LED_B1.c: 127: RB4 = 0;
  5875  04DD  1206               	bcf	6,4	;volatile
  5876  04DE                     l4163:	
  5877                           
  5878                           ;LED_B1.c: 129: }
  5879                           ;LED_B1.c: 132: if (led == 2) {
  5880  04DE  085A               	movf	setLED@led,w
  5881  04DF  3A02               	xorlw	2
  5882  04E0  1903               	btfsc	3,2
  5883                           
  5884                           ;LED_B1.c: 136: RB5 = 0;
  5885  04E1  1286               	bcf	6,5	;volatile
  5886                           
  5887                           ;LED_B1.c: 138: }
  5888                           ;LED_B1.c: 150: if (led == 99) {
  5889  04E2  085A               	movf	setLED@led,w
  5890  04E3  3A63               	xorlw	99
  5891  04E4  1903               	btfsc	3,2
  5892                           
  5893                           ;LED_B1.c: 154: RB3 = 0;
  5894  04E5  1186               	bcf	6,3	;volatile
  5895  04E6                     l4171:	
  5896                           
  5897                           ;LED_B1.c: 156: }
  5898                           ;LED_B1.c: 158: }
  5899                           ;LED_B1.c: 159: if (command == 10) {
  5900  04E6  0859               	movf	setLED@command,w
  5901  04E7  3A0A               	xorlw	10
  5902  04E8  1D03               	skipz
  5903  04E9  2D01               	goto	l4189
  5904                           
  5905                           ;LED_B1.c: 160: LED->GO = 0;
  5906  04EA  0873               	movf	_LED,w
  5907  04EB  0084               	movwf	4
  5908  04EC  1383               	bcf	3,7	;select IRP bank0
  5909  04ED  1080               	bcf	0,1
  5910                           
  5911                           ;LED_B1.c: 161: LED->Time = 0;
  5912  04EE  0A73               	incf	_LED,w
  5913  04EF  0084               	movwf	4
  5914  04F0  0180               	clrf	0
  5915  04F1  0A84               	incf	4,f
  5916  04F2  0180               	clrf	0
  5917                           
  5918                           ;LED_B1.c: 163: if (led == 1) {
  5919  04F3  085A               	movf	setLED@led,w
  5920  04F4  3A01               	xorlw	1
  5921  04F5  1D03               	skipz
  5922  04F6  2CF9               	goto	l4181
  5923                           
  5924                           ;LED_B1.c: 167: RB4 = 1;
  5925  04F7  1606               	bsf	6,4	;volatile
  5926                           
  5927                           ;LED_B1.c: 169: }
  5928  04F8  2CFD               	goto	l4185
  5929  04F9                     l4181:	
  5930                           
  5931                           ;LED_B1.c: 172: else if (led == 2) {
  5932  04F9  085A               	movf	setLED@led,w
  5933  04FA  3A02               	xorlw	2
  5934  04FB  1903               	btfsc	3,2
  5935                           
  5936                           ;LED_B1.c: 176: RB5 = 1;
  5937  04FC  1686               	bsf	6,5	;volatile
  5938  04FD                     l4185:	
  5939                           
  5940                           ;LED_B1.c: 178: }
  5941                           ;LED_B1.c: 190: if (led == 99) {
  5942  04FD  085A               	movf	setLED@led,w
  5943  04FE  3A63               	xorlw	99
  5944  04FF  1903               	btfsc	3,2
  5945                           
  5946                           ;LED_B1.c: 194: RB3 = 1;
  5947  0500  1586               	bsf	6,3	;volatile
  5948  0501                     l4189:	
  5949                           
  5950                           ;LED_B1.c: 196: }
  5951                           ;LED_B1.c: 198: }
  5952                           ;LED_B1.c: 199: if (command == 11) {
  5953  0501  0859               	movf	setLED@command,w
  5954  0502  3A0B               	xorlw	11
  5955  0503  1D03               	skipz
  5956  0504  2D09               	goto	l4193
  5957                           
  5958                           ;LED_B1.c: 200: LED->GO = 1;
  5959  0505  0873               	movf	_LED,w
  5960  0506  0084               	movwf	4
  5961  0507  1383               	bcf	3,7	;select IRP bank0
  5962  0508  1480               	bsf	0,1
  5963  0509                     l4193:	
  5964                           
  5965                           ;LED_B1.c: 201: }
  5966                           ;LED_B1.c: 205: if (command == 111) {
  5967  0509  0859               	movf	setLED@command,w
  5968  050A  3A6F               	xorlw	111
  5969  050B  1D03               	skipz
  5970  050C  2D27               	goto	l4219
  5971                           
  5972                           ;LED_B1.c: 206: PIRLED.Count = 0;
  5973  050D  01B7               	clrf	_PIRLED+1
  5974                           
  5975                           ;LED_B1.c: 207: PIRLED.Time = 0;
  5976  050E  01B8               	clrf	_PIRLED+2
  5977  050F  01B9               	clrf	_PIRLED+3
  5978                           
  5979                           ;LED_B1.c: 208: PIRLED.status = 0;
  5980  0510  1236               	bcf	_PIRLED,4
  5981                           
  5982                           ;LED_B1.c: 209: PIRLED.GO = 1;
  5983  0511  1436               	bsf	_PIRLED,0
  5984                           
  5985                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  5986  0512  10B6               	bcf	_PIRLED,1
  5987                           
  5988                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  5989  0513  1136               	bcf	_PIRLED,2
  5990                           
  5991                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  5992  0514  11B6               	bcf	_PIRLED,3
  5993                           
  5994                           ;LED_B1.c: 213: if (led == 1) {
  5995  0515  085A               	movf	setLED@led,w
  5996  0516  3A01               	xorlw	1
  5997  0517  1D03               	skipz
  5998  0518  2D1B               	goto	l4211
  5999                           
  6000                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  6001  0519  14B6               	bsf	_PIRLED,1
  6002                           
  6003                           ;LED_B1.c: 215: } else if (led == 2) {
  6004  051A  0008               	return
  6005  051B                     l4211:	
  6006  051B  085A               	movf	setLED@led,w
  6007  051C  3A02               	xorlw	2
  6008  051D  1D03               	skipz
  6009  051E  2D21               	goto	l4215
  6010                           
  6011                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  6012  051F  1536               	bsf	_PIRLED,2
  6013                           
  6014                           ;LED_B1.c: 217: } else if (led == 3) {
  6015  0520  0008               	return
  6016  0521                     l4215:	
  6017  0521  085A               	movf	setLED@led,w
  6018  0522  3A03               	xorlw	3
  6019  0523  1D03               	skipz
  6020  0524  0008               	return
  6021                           
  6022                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  6023  0525  15B6               	bsf	_PIRLED,3
  6024                           
  6025                           ;LED_B1.c: 219: }
  6026                           ;LED_B1.c: 220: } else if (command == 110) {
  6027  0526  0008               	return
  6028  0527                     l4219:	
  6029  0527  0859               	movf	setLED@command,w
  6030  0528  3A6E               	xorlw	110
  6031  0529  1D03               	skipz
  6032  052A  0008               	return
  6033                           
  6034                           ;LED_B1.c: 221: PIRLED.GO = 0;
  6035  052B  1036               	bcf	_PIRLED,0
  6036  052C  0008               	return
  6037  052D                     __end_of_setLED:	
  6038                           
  6039                           	psect	text32
  6040  0F83                     __ptext32:	
  6041 ;; *************** function _LedPointSelect *****************
  6042 ;; Defined at:
  6043 ;;		line 7 in file "../src/LED_B1.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  led             1    wreg     unsigned char 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  led             1    1[BANK0 ] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;		None               void
  6050 ;; Registers used:
  6051 ;;		wreg
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6057 ;;      Params:         0       0       0       0
  6058 ;;      Locals:         0       1       0       0
  6059 ;;      Temps:          0       1       0       0
  6060 ;;      Totals:         0       2       0       0
  6061 ;;Total ram usage:        2 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    3
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_setLED_Initialization
  6068 ;;		_setLED
  6069 ;;		_setLED_Main
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _LedPointSelect
  6075  0F83                     _LedPointSelect:	
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in _LedPointSelect: [wreg]
  6079                           ;LedPointSelect@led stored from wreg
  6080  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  6081  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  6082  0F85  00D8               	movwf	LedPointSelect@led
  6083                           
  6084                           ;LED_B1.c: 9: if (led == 1) {
  6085  0F86  0858               	movf	LedPointSelect@led,w
  6086  0F87  3A01               	xorlw	1
  6087  0F88  1D03               	skipz
  6088  0F89  2F8E               	goto	l481
  6089                           
  6090                           ;LED_B1.c: 10: LED = &VarLED1;
  6091  0F8A  304F               	movlw	_VarLED1& (0+255)
  6092  0F8B  00D7               	movwf	??_LedPointSelect
  6093  0F8C  0857               	movf	??_LedPointSelect,w
  6094  0F8D  00F3               	movwf	_LED
  6095  0F8E                     l481:	
  6096                           
  6097                           ;LED_B1.c: 11: }
  6098                           ;LED_B1.c: 14: if (led == 2) {
  6099  0F8E  0858               	movf	LedPointSelect@led,w
  6100  0F8F  3A02               	xorlw	2
  6101  0F90  1D03               	skipz
  6102  0F91  2F96               	goto	l482
  6103                           
  6104                           ;LED_B1.c: 15: LED = &VarLED2;
  6105  0F92  3053               	movlw	_VarLED2& (0+255)
  6106  0F93  00D7               	movwf	??_LedPointSelect
  6107  0F94  0857               	movf	??_LedPointSelect,w
  6108  0F95  00F3               	movwf	_LED
  6109  0F96                     l482:	
  6110                           
  6111                           ;LED_B1.c: 16: }
  6112                           ;LED_B1.c: 24: if (led == 99) {
  6113  0F96  0858               	movf	LedPointSelect@led,w
  6114  0F97  3A63               	xorlw	99
  6115  0F98  1D03               	skipz
  6116  0F99  0008               	return
  6117                           
  6118                           ;LED_B1.c: 25: LED = &VarErrLED;
  6119  0F9A  304B               	movlw	_VarErrLED& (0+255)
  6120  0F9B  00D7               	movwf	??_LedPointSelect
  6121  0F9C  0857               	movf	??_LedPointSelect,w
  6122  0F9D  00F3               	movwf	_LED
  6123  0F9E  0008               	return
  6124  0F9F                     __end_of_LedPointSelect:	
  6125                           
  6126                           	psect	text33
  6127  0F33                     __ptext33:	
  6128 ;; *************** function _getMain_All_Error_Status *****************
  6129 ;; Defined at:
  6130 ;;		line 424 in file "../src/Main_B1.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  command         1    wreg     unsigned char 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  command         1    1[BANK0 ] unsigned char 
  6135 ;;  status          1    4[BANK0 ] unsigned char 
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  1    wreg      unsigned char 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6145 ;;      Params:         0       0       0       0
  6146 ;;      Locals:         0       4       0       0
  6147 ;;      Temps:          0       1       0       0
  6148 ;;      Totals:         0       5       0       0
  6149 ;;Total ram usage:        5 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    3
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_Exception_Main
  6156 ;;		_setTemp_Main
  6157 ;;		_PIR_Main
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           
  6162                           ;psect for function _getMain_All_Error_Status
  6163  0F33                     _getMain_All_Error_Status:	
  6164                           
  6165                           ;incstack = 0
  6166                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6167                           ;getMain_All_Error_Status@command stored from wreg
  6168  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  6169  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  6170  0F35  00D8               	movwf	getMain_All_Error_Status@command
  6171                           
  6172                           ;Main_B1.c: 425: char status = 0;
  6173  0F36  01DB               	clrf	getMain_All_Error_Status@status
  6174                           
  6175                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6176  0F37  08DB               	movf	getMain_All_Error_Status@status,f
  6177  0F38  1D03               	skipz
  6178  0F39  2F4B               	goto	l806
  6179  0F3A  0858               	movf	getMain_All_Error_Status@command,w
  6180  0F3B  3A02               	xorlw	2
  6181  0F3C  1903               	skipnz
  6182  0F3D  2F4B               	goto	l806
  6183                           
  6184                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6185  0F3E  18C4               	btfsc	_Temp,1
  6186  0F3F  2F43               	goto	l4243
  6187  0F40  01D9               	clrf	_getMain_All_Error_Status$2565
  6188  0F41  01DA               	clrf	_getMain_All_Error_Status$2565+1
  6189  0F42  2F47               	goto	l810
  6190  0F43                     l4243:	
  6191  0F43  3002               	movlw	2
  6192  0F44  00D9               	movwf	_getMain_All_Error_Status$2565
  6193  0F45  3000               	movlw	0
  6194  0F46  00DA               	movwf	_getMain_All_Error_Status$2565+1
  6195  0F47                     l810:	
  6196  0F47  0859               	movf	_getMain_All_Error_Status$2565,w
  6197  0F48  00D7               	movwf	??_getMain_All_Error_Status
  6198  0F49  0857               	movf	??_getMain_All_Error_Status,w
  6199  0F4A  00DB               	movwf	getMain_All_Error_Status@status
  6200  0F4B                     l806:	
  6201                           
  6202                           ;Main_B1.c: 438: }
  6203                           ;Main_B1.c: 455: return status;
  6204  0F4B  085B               	movf	getMain_All_Error_Status@status,w
  6205  0F4C  0008               	return
  6206  0F4D                     __end_of_getMain_All_Error_Status:	
  6207                           
  6208                           	psect	text34
  6209  0DA0                     __ptext34:	
  6210 ;; *************** function _DimmerLights_Main *****************
  6211 ;; Defined at:
  6212 ;;		line 774 in file "../src/Dimmer_B1.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;		None               void
  6219 ;; Registers used:
  6220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6226 ;;      Params:         0       0       0       0
  6227 ;;      Locals:         0       0       0       0
  6228 ;;      Temps:          0       0       0       0
  6229 ;;      Totals:         0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    6
  6233 ;; This function calls:
  6234 ;;		_DimmerLights_PIR_Control
  6235 ;;		_setDimmerLights_Main
  6236 ;; This function is called by:
  6237 ;;		_main
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           
  6242                           ;psect for function _DimmerLights_Main
  6243  0DA0                     _DimmerLights_Main:	
  6244                           
  6245                           ;Dimmer_B1.c: 785: setDimmerLights_Main(1);
  6246                           
  6247                           ;incstack = 0
  6248                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6249  0DA0  3001               	movlw	1
  6250  0DA1  118A  252D  158A   	fcall	_setDimmerLights_Main
  6251                           
  6252                           ;Dimmer_B1.c: 797: DimmerLights_PIR_Control();
  6253  0DA4  118A  233C         	fcall	_DimmerLights_PIR_Control
  6254  0DA6  0008               	return
  6255  0DA7                     __end_of_DimmerLights_Main:	
  6256                           
  6257                           	psect	text35
  6258  052D                     __ptext35:	
  6259 ;; *************** function _setDimmerLights_Main *****************
  6260 ;; Defined at:
  6261 ;;		line 803 in file "../src/Dimmer_B1.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  lights          1    wreg     unsigned char 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  lights          1    7[BANK0 ] unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;		None               void
  6268 ;; Registers used:
  6269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6275 ;;      Params:         0       0       0       0
  6276 ;;      Locals:         0       1       0       0
  6277 ;;      Temps:          0       0       0       0
  6278 ;;      Totals:         0       1       0       0
  6279 ;;Total ram usage:        1 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; Hardware stack levels required when called:    5
  6282 ;; This function calls:
  6283 ;;		_DimmerLights_SelectPointer
  6284 ;;		_getDimmerLights_Allow_Condition
  6285 ;;		_getMain_All_LightsStatus
  6286 ;;		_setDimmerLights_Dimming
  6287 ;;		_setDimmerLights_OnOff
  6288 ;; This function is called by:
  6289 ;;		_DimmerLights_Main
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           
  6294                           ;psect for function _setDimmerLights_Main
  6295  052D                     _setDimmerLights_Main:	
  6296                           
  6297                           ;incstack = 0
  6298                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6299                           ;setDimmerLights_Main@lights stored from wreg
  6300  052D  1283               	bcf	3,5	;RP0=0, select bank0
  6301  052E  1303               	bcf	3,6	;RP1=0, select bank0
  6302  052F  00DE               	movwf	setDimmerLights_Main@lights
  6303                           
  6304                           ;Dimmer_B1.c: 805: DimmerLights_SelectPointer(lights);
  6305  0530  085E               	movf	setDimmerLights_Main@lights,w
  6306  0531  158A  25BE  118A   	fcall	_DimmerLights_SelectPointer
  6307                           
  6308                           ;Dimmer_B1.c: 806: if (DimmerLights->Trigger == 1) {
  6309  0534  0872               	movf	_DimmerLights,w
  6310  0535  0084               	movwf	4
  6311  0536  1383               	bcf	3,7	;select IRP bank0
  6312  0537  1C80               	btfss	0,1
  6313  0538  2D59               	goto	l4287
  6314                           
  6315                           ;Dimmer_B1.c: 807: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6316  0539  1283               	bcf	3,5	;RP0=0, select bank0
  6317  053A  1303               	bcf	3,6	;RP1=0, select bank0
  6318  053B  085E               	movf	setDimmerLights_Main@lights,w
  6319  053C  158A  2589  118A   	fcall	_getDimmerLights_Allow_Condition
  6320  053F  3800               	iorlw	0
  6321  0540  1D03               	skipz
  6322  0541  0008               	return
  6323                           
  6324                           ;Dimmer_B1.c: 808: DimmerLights->Trigger = 0;
  6325  0542  0872               	movf	_DimmerLights,w
  6326  0543  0084               	movwf	4
  6327  0544  1383               	bcf	3,7	;select IRP bank0
  6328  0545  1080               	bcf	0,1
  6329                           
  6330                           ;Dimmer_B1.c: 809: if (DimmerLights->Switch == 1) {
  6331  0546  0872               	movf	_DimmerLights,w
  6332  0547  0084               	movwf	4
  6333  0548  1D00               	btfss	0,2
  6334  0549  2D52               	goto	l4285
  6335                           
  6336                           ;Dimmer_B1.c: 810: setDimmerLights_OnOff(lights, 1);
  6337  054A  1283               	bcf	3,5	;RP0=0, select bank0
  6338  054B  1303               	bcf	3,6	;RP1=0, select bank0
  6339  054C  01DA               	clrf	setDimmerLights_OnOff@command
  6340  054D  0ADA               	incf	setDimmerLights_OnOff@command,f
  6341  054E  085E               	movf	setDimmerLights_Main@lights,w
  6342  054F  118A  2746         	fcall	_setDimmerLights_OnOff
  6343                           
  6344                           ;Dimmer_B1.c: 811: } else {
  6345  0551  0008               	return
  6346  0552                     l4285:	
  6347                           
  6348                           ;Dimmer_B1.c: 812: setDimmerLights_OnOff(lights, 0);
  6349  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6350  0553  1303               	bcf	3,6	;RP1=0, select bank0
  6351  0554  01DA               	clrf	setDimmerLights_OnOff@command
  6352  0555  085E               	movf	setDimmerLights_Main@lights,w
  6353  0556  118A  2746         	fcall	_setDimmerLights_OnOff
  6354                           
  6355                           ;Dimmer_B1.c: 813: }
  6356                           ;Dimmer_B1.c: 814: }
  6357                           ;Dimmer_B1.c: 815: } else {
  6358  0558  0008               	return
  6359  0559                     l4287:	
  6360                           
  6361                           ;Dimmer_B1.c: 816: if (getMain_All_LightsStatus() == 1) {
  6362  0559  158A  25EE  118A   	fcall	_getMain_All_LightsStatus
  6363  055C  3A01               	xorlw	1
  6364  055D  1D03               	skipz
  6365  055E  2D84               	goto	l4299
  6366                           
  6367                           ;Dimmer_B1.c: 817: if (DimmerLights->DimmingTrigger == 1) {
  6368  055F  0872               	movf	_DimmerLights,w
  6369  0560  0084               	movwf	4
  6370  0561  1383               	bcf	3,7	;select IRP bank0
  6371  0562  1E00               	btfss	0,4
  6372  0563  0008               	return
  6373                           
  6374                           ;Dimmer_B1.c: 818: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6375  0564  1283               	bcf	3,5	;RP0=0, select bank0
  6376  0565  1303               	bcf	3,6	;RP1=0, select bank0
  6377  0566  085E               	movf	setDimmerLights_Main@lights,w
  6378  0567  158A  2589  118A   	fcall	_getDimmerLights_Allow_Condition
  6379  056A  3800               	iorlw	0
  6380  056B  1D03               	skipz
  6381  056C  0008               	return
  6382                           
  6383                           ;Dimmer_B1.c: 819: DimmerLights->DimmingTrigger = 0;
  6384  056D  0872               	movf	_DimmerLights,w
  6385  056E  0084               	movwf	4
  6386  056F  1383               	bcf	3,7	;select IRP bank0
  6387  0570  1200               	bcf	0,4
  6388                           
  6389                           ;Dimmer_B1.c: 820: if (DimmerLights->DimmingSwitch == 1) {
  6390  0571  0872               	movf	_DimmerLights,w
  6391  0572  0084               	movwf	4
  6392  0573  1E80               	btfss	0,5
  6393  0574  2D7D               	goto	l4297
  6394                           
  6395                           ;Dimmer_B1.c: 821: setDimmerLights_Dimming(lights, 1);
  6396  0575  1283               	bcf	3,5	;RP0=0, select bank0
  6397  0576  1303               	bcf	3,6	;RP1=0, select bank0
  6398  0577  01DA               	clrf	setDimmerLights_Dimming@status
  6399  0578  0ADA               	incf	setDimmerLights_Dimming@status,f
  6400  0579  085E               	movf	setDimmerLights_Main@lights,w
  6401  057A  118A  279E         	fcall	_setDimmerLights_Dimming
  6402                           
  6403                           ;Dimmer_B1.c: 822: } else {
  6404  057C  0008               	return
  6405  057D                     l4297:	
  6406                           
  6407                           ;Dimmer_B1.c: 823: setDimmerLights_Dimming(lights, 0);
  6408  057D  1283               	bcf	3,5	;RP0=0, select bank0
  6409  057E  1303               	bcf	3,6	;RP1=0, select bank0
  6410  057F  01DA               	clrf	setDimmerLights_Dimming@status
  6411  0580  085E               	movf	setDimmerLights_Main@lights,w
  6412  0581  118A  279E         	fcall	_setDimmerLights_Dimming
  6413                           
  6414                           ;Dimmer_B1.c: 824: }
  6415                           ;Dimmer_B1.c: 825: }
  6416                           ;Dimmer_B1.c: 826: }
  6417                           ;Dimmer_B1.c: 827: } else {
  6418  0583  0008               	return
  6419  0584                     l4299:	
  6420                           
  6421                           ;Dimmer_B1.c: 828: if (DimmerLights->DimmingTrigger == 1) {
  6422  0584  0872               	movf	_DimmerLights,w
  6423  0585  0084               	movwf	4
  6424  0586  1383               	bcf	3,7	;select IRP bank0
  6425  0587  1E00               	btfss	0,4
  6426  0588  0008               	return
  6427                           
  6428                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 0;
  6429  0589  0872               	movf	_DimmerLights,w
  6430  058A  0084               	movwf	4
  6431  058B  1200               	bcf	0,4
  6432  058C  0008               	return
  6433  058D                     __end_of_setDimmerLights_Main:	
  6434                           
  6435                           	psect	text36
  6436  0746                     __ptext36:	
  6437 ;; *************** function _setDimmerLights_OnOff *****************
  6438 ;; Defined at:
  6439 ;;		line 837 in file "../src/Dimmer_B1.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  lights          1    wreg     unsigned char 
  6442 ;;  command         1    3[BANK0 ] unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  lights          1    4[BANK0 ] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6454 ;;      Params:         0       1       0       0
  6455 ;;      Locals:         0       1       0       0
  6456 ;;      Temps:          0       0       0       0
  6457 ;;      Totals:         0       2       0       0
  6458 ;;Total ram usage:        2 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    4
  6461 ;; This function calls:
  6462 ;;		_getCmd_Status
  6463 ;;		_getMain_All_LightsStatus
  6464 ;;		_setCmd_Status
  6465 ;;		_setDimmerIntr_ControlStatus
  6466 ;; This function is called by:
  6467 ;;		_setDimmerLights_Main
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _setDimmerLights_OnOff
  6473  0746                     _setDimmerLights_OnOff:	
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6477                           ;setDimmerLights_OnOff@lights stored from wreg
  6478  0746  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0747  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0748  00DB               	movwf	setDimmerLights_OnOff@lights
  6481                           
  6482                           ;Dimmer_B1.c: 839: if (command == 1) {
  6483  0749  085A               	movf	setDimmerLights_OnOff@command,w
  6484  074A  3A01               	xorlw	1
  6485  074B  1D03               	skipz
  6486  074C  2F57               	goto	l4111
  6487                           
  6488                           ;Dimmer_B1.c: 840: setDimmerIntr_ControlStatus(lights, 1);
  6489  074D  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6490  074E  0AD7               	incf	setDimmerIntr_ControlStatus@command,f
  6491  074F  085B               	movf	setDimmerLights_OnOff@lights,w
  6492  0750  158A  26ED  118A   	fcall	_setDimmerIntr_ControlStatus
  6493                           
  6494                           ;Dimmer_B1.c: 848: Dimmer.PIR_Open_Status = 1;
  6495  0753  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0754  1303               	bcf	3,6	;RP1=0, select bank0
  6497  0755  14AD               	bsf	_Dimmer+1,1
  6498                           
  6499                           ;Dimmer_B1.c: 895: } else if (command == 0) {
  6500  0756  2F5F               	goto	l4115
  6501  0757                     l4111:	
  6502  0757  08DA               	movf	setDimmerLights_OnOff@command,f
  6503  0758  1D03               	skipz
  6504  0759  2F5F               	goto	l4115
  6505                           
  6506                           ;Dimmer_B1.c: 896: setDimmerIntr_ControlStatus(lights, 0);
  6507  075A  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6508  075B  085B               	movf	setDimmerLights_OnOff@lights,w
  6509  075C  158A  26ED  118A   	fcall	_setDimmerIntr_ControlStatus
  6510  075F                     l4115:	
  6511                           
  6512                           ;Dimmer_B1.c: 929: }
  6513                           ;Dimmer_B1.c: 932: ;;
  6514                           ;Dimmer_B1.c: 934: if (getCmd_Status(1) == 1) {
  6515  075F  3001               	movlw	1
  6516  0760  158A  2652  118A   	fcall	_getCmd_Status
  6517  0763  3A01               	xorlw	1
  6518  0764  1D03               	skipz
  6519  0765  0008               	return
  6520                           
  6521                           ;Dimmer_B1.c: 935: if (getMain_All_LightsStatus() == 0) {
  6522  0766  158A  25EE  118A   	fcall	_getMain_All_LightsStatus
  6523  0769  3800               	iorlw	0
  6524  076A  1D03               	skipz
  6525  076B  0008               	return
  6526                           
  6527                           ;Dimmer_B1.c: 936: setCmd_Status(1, 0);
  6528  076C  1283               	bcf	3,5	;RP0=0, select bank0
  6529  076D  1303               	bcf	3,6	;RP1=0, select bank0
  6530  076E  01D7               	clrf	setCmd_Status@cmd
  6531  076F  3001               	movlw	1
  6532  0770  158A  26D7         	fcall	_setCmd_Status
  6533                           
  6534                           ;Dimmer_B1.c: 940: }
  6535                           ;Dimmer_B1.c: 941: } else {
  6536                           
  6537                           ;Dimmer_B1.c: 937: ;;
  6538                           ;Dimmer_B1.c: 938: ;;
  6539                           ;Dimmer_B1.c: 939: ;;
  6540  0772  0008               	return
  6541  0773                     __end_of_setDimmerLights_OnOff:	
  6542                           ;Dimmer_B1.c: 942: ;;
  6543                           
  6544                           
  6545                           	psect	text37
  6546  0EED                     __ptext37:	
  6547 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6548 ;; Defined at:
  6549 ;;		line 69 in file "../src/Dimmer_B1.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;  lights          1    wreg     unsigned char 
  6552 ;;  command         1    0[BANK0 ] unsigned char 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  lights          1    2[BANK0 ] unsigned char 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;		None               void
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6564 ;;      Params:         0       1       0       0
  6565 ;;      Locals:         0       1       0       0
  6566 ;;      Temps:          0       1       0       0
  6567 ;;      Totals:         0       3       0       0
  6568 ;;Total ram usage:        3 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    3
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_setDimmerLights_OnOff
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           
  6579                           ;psect for function _setDimmerIntr_ControlStatus
  6580  0EED                     _setDimmerIntr_ControlStatus:	
  6581                           
  6582                           ;incstack = 0
  6583                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6584                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6585  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  6586  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  6587  0EEF  00D9               	movwf	setDimmerIntr_ControlStatus@lights
  6588                           
  6589                           ;Dimmer_B1.c: 71: if (lights == 1) {
  6590  0EF0  0859               	movf	setDimmerIntr_ControlStatus@lights,w
  6591  0EF1  3A01               	xorlw	1
  6592  0EF2  1D03               	skipz
  6593  0EF3  0008               	return
  6594                           
  6595                           ;Dimmer_B1.c: 72: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6596  0EF4  0857               	movf	setDimmerIntr_ControlStatus@command,w
  6597  0EF5  3A01               	xorlw	1
  6598  0EF6  3000               	movlw	0
  6599  0EF7  1903               	skipnz
  6600  0EF8  3001               	movlw	1
  6601  0EF9  00D8               	movwf	??_setDimmerIntr_ControlStatus
  6602  0EFA  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6603  0EFB  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6604  0EFC  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6605  0EFD  0820               	movf	_DimmerIntr1,w
  6606  0EFE  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6607  0EFF  39F7               	andlw	-9
  6608  0F00  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6609  0F01  00A0               	movwf	_DimmerIntr1
  6610  0F02  0008               	return
  6611  0F03                     __end_of_setDimmerIntr_ControlStatus:	
  6612                           
  6613                           	psect	text38
  6614  0ED7                     __ptext38:	
  6615 ;; *************** function _setCmd_Status *****************
  6616 ;; Defined at:
  6617 ;;		line 651 in file "../src/Main_B1.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  number          1    wreg     unsigned char 
  6620 ;;  cmd             1    0[BANK0 ] unsigned char 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  number          1    2[BANK0 ] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;		None               void
  6625 ;; Registers used:
  6626 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6632 ;;      Params:         0       1       0       0
  6633 ;;      Locals:         0       1       0       0
  6634 ;;      Temps:          0       1       0       0
  6635 ;;      Totals:         0       3       0       0
  6636 ;;Total ram usage:        3 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    3
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_setDimmerLights_OnOff
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function _setCmd_Status
  6648  0ED7                     _setCmd_Status:	
  6649                           
  6650                           ;incstack = 0
  6651                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6652                           ;setCmd_Status@number stored from wreg
  6653  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  6654  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  6655  0ED9  00D9               	movwf	setCmd_Status@number
  6656                           
  6657                           ;Main_B1.c: 652: switch (number) {
  6658  0EDA  2EE7               	goto	l4057
  6659  0EDB                     l4053:	
  6660                           ;Main_B1.c: 653: case 1:
  6661                           
  6662                           
  6663                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
  6664  0EDB  0857               	movf	setCmd_Status@cmd,w
  6665  0EDC  3A01               	xorlw	1
  6666  0EDD  3000               	movlw	0
  6667  0EDE  1903               	skipnz
  6668  0EDF  3001               	movlw	1
  6669  0EE0  00D8               	movwf	??_setCmd_Status
  6670  0EE1  0870               	movf	_Cmd,w
  6671  0EE2  0658               	xorwf	??_setCmd_Status,w
  6672  0EE3  39FE               	andlw	-2
  6673  0EE4  0658               	xorwf	??_setCmd_Status,w
  6674  0EE5  00F0               	movwf	_Cmd
  6675                           
  6676                           ;Main_B1.c: 656: }
  6677                           
  6678                           ;Main_B1.c: 655: break;
  6679  0EE6  0008               	return
  6680  0EE7                     l4057:	
  6681  0EE7  0859               	movf	setCmd_Status@number,w
  6682                           
  6683                           ; Switch size 1, requested type "space"
  6684                           ; Number of cases is 1, Range of values is 1 to 1
  6685                           ; switch strategies available:
  6686                           ; Name         Instructions Cycles
  6687                           ; simple_byte            4     3 (average)
  6688                           ; direct_byte           12    10 (fixed)
  6689                           ; jumptable            263     9 (fixed)
  6690                           ;	Chosen strategy is simple_byte
  6691  0EE8  3A01               	xorlw	1	; case 1
  6692  0EE9  1903               	skipnz
  6693  0EEA  2EDB               	goto	l4053
  6694  0EEB  2EEC               	goto	l832
  6695  0EEC                     l832:	
  6696  0EEC  0008               	return
  6697  0EED                     __end_of_setCmd_Status:	
  6698                           
  6699                           	psect	text39
  6700  0DEE                     __ptext39:	
  6701 ;; *************** function _getMain_All_LightsStatus *****************
  6702 ;; Defined at:
  6703 ;;		line 373 in file "../src/Main_B1.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  status          1    0[BANK0 ] unsigned char 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      unsigned char 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6717 ;;      Params:         0       0       0       0
  6718 ;;      Locals:         0       1       0       0
  6719 ;;      Temps:          0       0       0       0
  6720 ;;      Totals:         0       1       0       0
  6721 ;;Total ram usage:        1 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    3
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_setDimmerLights_Main
  6728 ;;		_setDimmerLights_OnOff
  6729 ;;		_setTemp_Main
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function _getMain_All_LightsStatus
  6735  0DEE                     _getMain_All_LightsStatus:	
  6736                           
  6737                           ;Main_B1.c: 374: char status = 0;
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6741  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  6742  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  6743  0DF0  01D7               	clrf	getMain_All_LightsStatus@status
  6744                           
  6745                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6746  0DF1  3000               	movlw	0
  6747  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  6748  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  6749  0DF4  184B               	btfsc	(_DimmerLights1^(0+128)+1),0
  6750  0DF5  3001               	movlw	1
  6751  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  6752  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  6753  0DF8  00D7               	movwf	getMain_All_LightsStatus@status
  6754                           
  6755                           ;Main_B1.c: 420: return status;
  6756  0DF9  0857               	movf	getMain_All_LightsStatus@status,w
  6757  0DFA  0008               	return
  6758  0DFB                     __end_of_getMain_All_LightsStatus:	
  6759                           
  6760                           	psect	text40
  6761  0E52                     __ptext40:	
  6762 ;; *************** function _getCmd_Status *****************
  6763 ;; Defined at:
  6764 ;;		line 659 in file "../src/Main_B1.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  number          1    wreg     unsigned char 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  number          1    0[BANK0 ] unsigned char 
  6769 ;;  cmd             1    1[BANK0 ] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      unsigned char 
  6772 ;; Registers used:
  6773 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6779 ;;      Params:         0       0       0       0
  6780 ;;      Locals:         0       2       0       0
  6781 ;;      Temps:          0       0       0       0
  6782 ;;      Totals:         0       2       0       0
  6783 ;;Total ram usage:        2 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    3
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_setDimmerLights_OnOff
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           
  6794                           ;psect for function _getCmd_Status
  6795  0E52                     _getCmd_Status:	
  6796                           
  6797                           ;incstack = 0
  6798                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6799                           ;getCmd_Status@number stored from wreg
  6800  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  6801  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  6802  0E54  00D7               	movwf	getCmd_Status@number
  6803                           
  6804                           ;Main_B1.c: 660: char cmd = 0;
  6805  0E55  01D8               	clrf	getCmd_Status@cmd
  6806                           
  6807                           ;Main_B1.c: 661: switch (number) {
  6808  0E56  2E5C               	goto	l4045
  6809  0E57                     l4041:	
  6810                           ;Main_B1.c: 662: case 1:
  6811                           
  6812                           
  6813                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
  6814  0E57  3000               	movlw	0
  6815  0E58  1870               	btfsc	_Cmd,0
  6816  0E59  3001               	movlw	1
  6817  0E5A  00D8               	movwf	getCmd_Status@cmd
  6818                           
  6819                           ;Main_B1.c: 665: }
  6820                           
  6821                           ;Main_B1.c: 664: break;
  6822  0E5B  2E61               	goto	l4047
  6823  0E5C                     l4045:	
  6824  0E5C  0857               	movf	getCmd_Status@number,w
  6825                           
  6826                           ; Switch size 1, requested type "space"
  6827                           ; Number of cases is 1, Range of values is 1 to 1
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte            4     3 (average)
  6831                           ; direct_byte           12    10 (fixed)
  6832                           ; jumptable            263     9 (fixed)
  6833                           ;	Chosen strategy is simple_byte
  6834  0E5D  3A01               	xorlw	1	; case 1
  6835  0E5E  1903               	skipnz
  6836  0E5F  2E57               	goto	l4041
  6837  0E60  2E61               	goto	l4047
  6838  0E61                     l4047:	
  6839                           
  6840                           ;Main_B1.c: 666: return cmd;
  6841  0E61  0858               	movf	getCmd_Status@cmd,w
  6842  0E62  0008               	return
  6843  0E63                     __end_of_getCmd_Status:	
  6844                           
  6845                           	psect	text41
  6846  079E                     __ptext41:	
  6847 ;; *************** function _setDimmerLights_Dimming *****************
  6848 ;; Defined at:
  6849 ;;		line 948 in file "../src/Dimmer_B1.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  lights          1    wreg     unsigned char 
  6852 ;;  status          1    3[BANK0 ] unsigned char 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  lights          1    6[BANK0 ] unsigned char 
  6855 ;;  value           1    5[BANK0 ] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;		None               void
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0, pclath, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6865 ;;      Params:         0       1       0       0
  6866 ;;      Locals:         0       2       0       0
  6867 ;;      Temps:          0       1       0       0
  6868 ;;      Totals:         0       4       0       0
  6869 ;;Total ram usage:        4 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    4
  6872 ;; This function calls:
  6873 ;;		_getDimmerIntr_DimmingValue
  6874 ;;		_setDimmerIntr_Dimming_Sw
  6875 ;;		_setDimmerIntr_MaxmumValue
  6876 ;; This function is called by:
  6877 ;;		_setDimmerLights_Main
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           
  6882                           ;psect for function _setDimmerLights_Dimming
  6883  079E                     _setDimmerLights_Dimming:	
  6884                           
  6885                           ;incstack = 0
  6886                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6887                           ;setDimmerLights_Dimming@lights stored from wreg
  6888  079E  1283               	bcf	3,5	;RP0=0, select bank0
  6889  079F  1303               	bcf	3,6	;RP1=0, select bank0
  6890  07A0  00DD               	movwf	setDimmerLights_Dimming@lights
  6891                           
  6892                           ;Dimmer_B1.c: 949: if (status == 1) {
  6893  07A1  085A               	movf	setDimmerLights_Dimming@status,w
  6894  07A2  3A01               	xorlw	1
  6895  07A3  1D03               	skipz
  6896  07A4  2FAB               	goto	l4125
  6897                           
  6898                           ;Dimmer_B1.c: 950: setDimmerIntr_Dimming_Sw(lights, 1);
  6899  07A5  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6900  07A6  0AD7               	incf	setDimmerIntr_Dimming_Sw@command,f
  6901  07A7  085D               	movf	setDimmerLights_Dimming@lights,w
  6902  07A8  158A  2699         	fcall	_setDimmerIntr_Dimming_Sw
  6903                           
  6904                           ;Dimmer_B1.c: 955: ;;
  6905                           ;Dimmer_B1.c: 956: } else if (status == 0) {
  6906  07AA  0008               	return
  6907  07AB                     l4125:	
  6908  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  6909  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  6910  07AD  08DA               	movf	setDimmerLights_Dimming@status,f
  6911  07AE  1D03               	skipz
  6912  07AF  0008               	return
  6913                           
  6914                           ;Dimmer_B1.c: 957: setDimmerIntr_Dimming_Sw(lights, 0);
  6915  07B0  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6916  07B1  085D               	movf	setDimmerLights_Dimming@lights,w
  6917  07B2  158A  2699  118A   	fcall	_setDimmerIntr_Dimming_Sw
  6918                           
  6919                           ;Dimmer_B1.c: 963: char value = getDimmerIntr_DimmingValue(lights);
  6920  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  6921  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  6922  07B7  085D               	movf	setDimmerLights_Dimming@lights,w
  6923  07B8  158A  2608  118A   	fcall	_getDimmerIntr_DimmingValue
  6924  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  6925  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  6926  07BD  00DB               	movwf	??_setDimmerLights_Dimming
  6927  07BE  085B               	movf	??_setDimmerLights_Dimming,w
  6928  07BF  00DC               	movwf	setDimmerLights_Dimming@value
  6929                           
  6930                           ;Dimmer_B1.c: 964: setDimmerIntr_MaxmumValue(lights, value);
  6931  07C0  085C               	movf	setDimmerLights_Dimming@value,w
  6932  07C1  00DB               	movwf	??_setDimmerLights_Dimming
  6933  07C2  085B               	movf	??_setDimmerLights_Dimming,w
  6934  07C3  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  6935  07C4  085D               	movf	setDimmerLights_Dimming@lights,w
  6936  07C5  158A  25D6         	fcall	_setDimmerIntr_MaxmumValue
  6937                           
  6938                           ;Dimmer_B1.c: 965: ;;
  6939                           ;Dimmer_B1.c: 972: ;;
  6940                           ;Dimmer_B1.c: 976: ;;
  6941                           ;Dimmer_B1.c: 977: ;;
  6942  07C7  0008               	return
  6943  07C8                     __end_of_setDimmerLights_Dimming:	
  6944                           
  6945                           	psect	text42
  6946  0E99                     __ptext42:	
  6947 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6948 ;; Defined at:
  6949 ;;		line 204 in file "../src/Dimmer_B1.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  lights          1    wreg     unsigned char 
  6952 ;;  command         1    0[BANK0 ] unsigned char 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  lights          1    2[BANK0 ] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;		None               void
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6964 ;;      Params:         0       1       0       0
  6965 ;;      Locals:         0       1       0       0
  6966 ;;      Temps:          0       1       0       0
  6967 ;;      Totals:         0       3       0       0
  6968 ;;Total ram usage:        3 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    3
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_setDimmerLights_Dimming
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           
  6979                           ;psect for function _setDimmerIntr_Dimming_Sw
  6980  0E99                     _setDimmerIntr_Dimming_Sw:	
  6981                           
  6982                           ;incstack = 0
  6983                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6984                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6985  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  6986  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  6987  0E9B  00D9               	movwf	setDimmerIntr_Dimming_Sw@lights
  6988                           
  6989                           ;Dimmer_B1.c: 206: if (lights == 1) {
  6990  0E9C  0859               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6991  0E9D  3A01               	xorlw	1
  6992  0E9E  1D03               	skipz
  6993  0E9F  0008               	return
  6994                           
  6995                           ;Dimmer_B1.c: 207: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6996  0EA0  0857               	movf	setDimmerIntr_Dimming_Sw@command,w
  6997  0EA1  3A01               	xorlw	1
  6998  0EA2  3000               	movlw	0
  6999  0EA3  1903               	skipnz
  7000  0EA4  3001               	movlw	1
  7001  0EA5  00D8               	movwf	??_setDimmerIntr_Dimming_Sw
  7002  0EA6  0ED8               	swapf	??_setDimmerIntr_Dimming_Sw,f
  7003  0EA7  0820               	movf	_DimmerIntr1,w
  7004  0EA8  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7005  0EA9  39EF               	andlw	-17
  7006  0EAA  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7007  0EAB  00A0               	movwf	_DimmerIntr1
  7008  0EAC  0008               	return
  7009  0EAD                     __end_of_setDimmerIntr_Dimming_Sw:	
  7010                           
  7011                           	psect	text43
  7012  0E08                     __ptext43:	
  7013 ;; *************** function _getDimmerIntr_DimmingValue *****************
  7014 ;; Defined at:
  7015 ;;		line 105 in file "../src/Dimmer_B1.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  lights          1    wreg     unsigned char 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  lights          1    1[BANK0 ] unsigned char 
  7020 ;;  value           1    2[BANK0 ] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      unsigned char 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7030 ;;      Params:         0       0       0       0
  7031 ;;      Locals:         0       2       0       0
  7032 ;;      Temps:          0       1       0       0
  7033 ;;      Totals:         0       3       0       0
  7034 ;;Total ram usage:        3 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    3
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_setDimmerLights_Dimming
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           
  7045                           ;psect for function _getDimmerIntr_DimmingValue
  7046  0E08                     _getDimmerIntr_DimmingValue:	
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  7050                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  7051  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  7052  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  7053  0E0A  00D8               	movwf	getDimmerIntr_DimmingValue@lights
  7054                           
  7055                           ;Dimmer_B1.c: 106: char value = 0;
  7056  0E0B  01D9               	clrf	getDimmerIntr_DimmingValue@value
  7057                           
  7058                           ;Dimmer_B1.c: 108: if (lights == 1) {
  7059  0E0C  0858               	movf	getDimmerIntr_DimmingValue@lights,w
  7060  0E0D  3A01               	xorlw	1
  7061  0E0E  1D03               	skipz
  7062  0E0F  2E14               	goto	l252
  7063                           
  7064                           ;Dimmer_B1.c: 109: value = DimmerIntr1.DimmingValue;
  7065  0E10  0825               	movf	_DimmerIntr1+5,w
  7066  0E11  00D7               	movwf	??_getDimmerIntr_DimmingValue
  7067  0E12  0857               	movf	??_getDimmerIntr_DimmingValue,w
  7068  0E13  00D9               	movwf	getDimmerIntr_DimmingValue@value
  7069  0E14                     l252:	
  7070                           
  7071                           ;Dimmer_B1.c: 110: }
  7072                           ;Dimmer_B1.c: 122: return value;
  7073  0E14  0859               	movf	getDimmerIntr_DimmingValue@value,w
  7074  0E15  0008               	return
  7075  0E16                     __end_of_getDimmerIntr_DimmingValue:	
  7076                           
  7077                           	psect	text44
  7078  0D89                     __ptext44:	
  7079 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7080 ;; Defined at:
  7081 ;;		line 983 in file "../src/Dimmer_B1.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  lights          1    wreg     unsigned char 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  lights          1    0[COMMON] unsigned char 
  7086 ;;  allow           1    0[BANK0 ] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      unsigned char 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7096 ;;      Params:         0       0       0       0
  7097 ;;      Locals:         0       1       0       0
  7098 ;;      Temps:          0       0       0       0
  7099 ;;      Totals:         0       1       0       0
  7100 ;;Total ram usage:        1 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    3
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_setDimmerLights_Main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _getDimmerLights_Allow_Condition
  7112  0D89                     _getDimmerLights_Allow_Condition:	
  7113                           
  7114                           ;Dimmer_B1.c: 984: char allow = 0;
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7118  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  7119  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7120  0D8B  01D7               	clrf	getDimmerLights_Allow_Condition@allow
  7121                           
  7122                           ;Dimmer_B1.c: 1017: return allow;
  7123  0D8C  0857               	movf	getDimmerLights_Allow_Condition@allow,w
  7124  0D8D  0008               	return
  7125  0D8E                     __end_of_getDimmerLights_Allow_Condition:	
  7126                           
  7127                           	psect	text45
  7128  033C                     __ptext45:	
  7129 ;; *************** function _DimmerLights_PIR_Control *****************
  7130 ;; Defined at:
  7131 ;;		line 1738 in file "../src/Dimmer_B1.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;		None
  7136 ;; Return value:  Size  Location     Type
  7137 ;;		None               void
  7138 ;; Registers used:
  7139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7145 ;;      Params:         0       0       0       0
  7146 ;;      Locals:         0       0       0       0
  7147 ;;      Temps:          0       1       0       0
  7148 ;;      Totals:         0       1       0       0
  7149 ;;Total ram usage:        1 bytes
  7150 ;; Hardware stack levels used:    1
  7151 ;; Hardware stack levels required when called:    5
  7152 ;; This function calls:
  7153 ;;		_getDimmerLights_Status
  7154 ;;		_setDimmerIntr_DimmingValue
  7155 ;;		_setDimmerIntr_Dimming_RF
  7156 ;;		_setDimmerIntr_MaxmumValue
  7157 ;;		_setDimmerLights_SwOff
  7158 ;;		_setDimmerLights_SwOn
  7159 ;; This function is called by:
  7160 ;;		_DimmerLights_Main
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function _DimmerLights_PIR_Control
  7166  033C                     _DimmerLights_PIR_Control:	
  7167                           
  7168                           ;Dimmer_B1.c: 1740: if (Dimmer.PIR_Trigger == 1) {
  7169                           
  7170                           ;incstack = 0
  7171                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7172  033C  1283               	bcf	3,5	;RP0=0, select bank0
  7173  033D  1303               	bcf	3,6	;RP1=0, select bank0
  7174  033E  1EAC               	btfss	_Dimmer,5
  7175  033F  2BAC               	goto	l4331
  7176                           
  7177                           ;Dimmer_B1.c: 1741: Dimmer.PIR_Trigger = 0;
  7178  0340  12AC               	bcf	_Dimmer,5
  7179                           
  7180                           ;Dimmer_B1.c: 1742: if (Dimmer.PIR_Sw == 1) {
  7181  0341  1E2C               	btfss	_Dimmer,4
  7182  0342  2B79               	goto	l417
  7183                           
  7184                           ;Dimmer_B1.c: 1744: if (getDimmerLights_Status(1) == 0) {
  7185  0343  3001               	movlw	1
  7186  0344  158A  2641  118A   	fcall	_getDimmerLights_Status
  7187  0347  3800               	iorlw	0
  7188  0348  1D03               	skipz
  7189  0349  2B5D               	goto	l418
  7190                           
  7191                           ;Dimmer_B1.c: 1745: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.6)));
  7192  034A  3036               	movlw	54
  7193  034B  1283               	bcf	3,5	;RP0=0, select bank0
  7194  034C  1303               	bcf	3,6	;RP1=0, select bank0
  7195  034D  00DB               	movwf	??_DimmerLights_PIR_Control
  7196  034E  085B               	movf	??_DimmerLights_PIR_Control,w
  7197  034F  00D7               	movwf	setDimmerIntr_DimmingValue@value
  7198  0350  3001               	movlw	1
  7199  0351  158A  25CA  118A   	fcall	_setDimmerIntr_DimmingValue
  7200                           
  7201                           ;Dimmer_B1.c: 1746: setDimmerLights_SwOn(1);
  7202  0354  3001               	movlw	1
  7203  0355  158A  27DD  118A   	fcall	_setDimmerLights_SwOn
  7204                           
  7205                           ;Dimmer_B1.c: 1747: setDimmerLights_SwOff(1);
  7206  0358  3001               	movlw	1
  7207  0359  118A  27C8  118A   	fcall	_setDimmerLights_SwOff
  7208                           
  7209                           ;Dimmer_B1.c: 1748: } else {
  7210  035C  2BAC               	goto	l4331
  7211  035D                     l418:	
  7212                           
  7213                           ;Dimmer_B1.c: 1749: if (Dimmer.PIR_Lights_Status == 1) {
  7214  035D  1283               	bcf	3,5	;RP0=0, select bank0
  7215  035E  1303               	bcf	3,6	;RP1=0, select bank0
  7216  035F  1D2D               	btfss	_Dimmer+1,2
  7217  0360  2BAC               	goto	l4331
  7218                           
  7219                           ;Dimmer_B1.c: 1750: Dimmer.PIR_Lights_Status = 0;
  7220  0361  112D               	bcf	_Dimmer+1,2
  7221                           
  7222                           ;Dimmer_B1.c: 1751: Dimmer.PIR_Close_Status = 0;
  7223  0362  102D               	bcf	_Dimmer+1,0
  7224                           
  7225                           ;Dimmer_B1.c: 1752: DimmerLights1.Trigger = 0;
  7226  0363  1683               	bsf	3,5	;RP0=1, select bank1
  7227  0364  1303               	bcf	3,6	;RP1=0, select bank1
  7228  0365  10CA               	bcf	_DimmerLights1^(0+128),1
  7229                           
  7230                           ;Dimmer_B1.c: 1754: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7231  0366  3012               	movlw	18
  7232  0367  1283               	bcf	3,5	;RP0=0, select bank0
  7233  0368  1303               	bcf	3,6	;RP1=0, select bank0
  7234  0369  00DB               	movwf	??_DimmerLights_PIR_Control
  7235  036A  085B               	movf	??_DimmerLights_PIR_Control,w
  7236  036B  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7237  036C  3001               	movlw	1
  7238  036D  158A  25D6  118A   	fcall	_setDimmerIntr_MaxmumValue
  7239                           
  7240                           ;Dimmer_B1.c: 1755: setDimmerIntr_Dimming_RF(1, 1);
  7241  0370  1283               	bcf	3,5	;RP0=0, select bank0
  7242  0371  1303               	bcf	3,6	;RP1=0, select bank0
  7243  0372  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7244  0373  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7245  0374  3001               	movlw	1
  7246  0375  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7247                           
  7248                           ;Dimmer_B1.c: 1756: }
  7249                           ;Dimmer_B1.c: 1757: }
  7250                           ;Dimmer_B1.c: 1758: } else if (Dimmer.PIR_Sw == 0) {
  7251  0378  2BAC               	goto	l4331
  7252  0379                     l417:	
  7253  0379  1A2C               	btfsc	_Dimmer,4
  7254  037A  2BAC               	goto	l4331
  7255                           
  7256                           ;Dimmer_B1.c: 1759: if (getDimmerLights_Status(1) == 1) {
  7257  037B  3001               	movlw	1
  7258  037C  158A  2641  118A   	fcall	_getDimmerLights_Status
  7259  037F  3A01               	xorlw	1
  7260  0380  1D03               	skipz
  7261  0381  2BAC               	goto	l4331
  7262                           
  7263                           ;Dimmer_B1.c: 1760: if (Dimmer.PIR_Lights_Status == 0) {
  7264  0382  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0383  1303               	bcf	3,6	;RP1=0, select bank0
  7266  0384  192D               	btfsc	_Dimmer+1,2
  7267  0385  2B98               	goto	l424
  7268                           
  7269                           ;Dimmer_B1.c: 1761: Dimmer.PIR_Lights_Status = 1;
  7270  0386  152D               	bsf	_Dimmer+1,2
  7271                           
  7272                           ;Dimmer_B1.c: 1762: setDimmerIntr_MaxmumValue(1, (((char)((100-10)*0.6))-((char)((100-70
      +                          )*0.6))));
  7273  0387  3024               	movlw	36
  7274  0388  00DB               	movwf	??_DimmerLights_PIR_Control
  7275  0389  085B               	movf	??_DimmerLights_PIR_Control,w
  7276  038A  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7277  038B  3001               	movlw	1
  7278  038C  158A  25D6  118A   	fcall	_setDimmerIntr_MaxmumValue
  7279                           
  7280                           ;Dimmer_B1.c: 1763: setDimmerIntr_Dimming_RF(1, 1);
  7281  038F  1283               	bcf	3,5	;RP0=0, select bank0
  7282  0390  1303               	bcf	3,6	;RP1=0, select bank0
  7283  0391  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7284  0392  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7285  0393  3001               	movlw	1
  7286  0394  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7287                           
  7288                           ;Dimmer_B1.c: 1764: } else {
  7289  0397  2BAC               	goto	l4331
  7290  0398                     l424:	
  7291                           
  7292                           ;Dimmer_B1.c: 1765: Dimmer.PIR_Lights_Status = 0;
  7293  0398  112D               	bcf	_Dimmer+1,2
  7294                           
  7295                           ;Dimmer_B1.c: 1766: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.6)));
  7296  0399  3036               	movlw	54
  7297  039A  00DB               	movwf	??_DimmerLights_PIR_Control
  7298  039B  085B               	movf	??_DimmerLights_PIR_Control,w
  7299  039C  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7300  039D  3001               	movlw	1
  7301  039E  158A  25D6  118A   	fcall	_setDimmerIntr_MaxmumValue
  7302                           
  7303                           ;Dimmer_B1.c: 1767: setDimmerIntr_Dimming_RF(1, 1);
  7304  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  7305  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  7306  03A3  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7307  03A4  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7308  03A5  3001               	movlw	1
  7309  03A6  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7310                           
  7311                           ;Dimmer_B1.c: 1768: Dimmer.PIR_Close_Status = 1;
  7312  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  7313  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  7314  03AB  142D               	bsf	_Dimmer+1,0
  7315  03AC                     l4331:	
  7316                           
  7317                           ;Dimmer_B1.c: 1769: }
  7318                           ;Dimmer_B1.c: 1770: }
  7319                           ;Dimmer_B1.c: 1771: }
  7320                           ;Dimmer_B1.c: 1772: }
  7321                           ;Dimmer_B1.c: 1773: if (Dimmer.PIR_Open_Status == 1) {
  7322  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7323  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  7324  03AE  1CAD               	btfss	_Dimmer+1,1
  7325  03AF  2BC1               	goto	l4337
  7326                           
  7327                           ;Dimmer_B1.c: 1774: Dimmer.PIR_Open_Status = 0;
  7328  03B0  10AD               	bcf	_Dimmer+1,1
  7329                           
  7330                           ;Dimmer_B1.c: 1775: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7331  03B1  3012               	movlw	18
  7332  03B2  00DB               	movwf	??_DimmerLights_PIR_Control
  7333  03B3  085B               	movf	??_DimmerLights_PIR_Control,w
  7334  03B4  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7335  03B5  3001               	movlw	1
  7336  03B6  158A  25D6  118A   	fcall	_setDimmerIntr_MaxmumValue
  7337                           
  7338                           ;Dimmer_B1.c: 1776: setDimmerIntr_Dimming_RF(1, 1);
  7339  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  7340  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  7341  03BB  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7342  03BC  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7343  03BD  3001               	movlw	1
  7344  03BE  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7345  03C1                     l4337:	
  7346                           
  7347                           ;Dimmer_B1.c: 1777: }
  7348                           ;Dimmer_B1.c: 1778: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7349  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  7350  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  7351  03C3  1C2D               	btfss	_Dimmer+1,0
  7352  03C4  0008               	return
  7353  03C5  1B20               	btfsc	_DimmerIntr1,6
  7354  03C6  0008               	return
  7355                           
  7356                           ;Dimmer_B1.c: 1779: Dimmer.PIR_Close_Status = 0;
  7357  03C7  102D               	bcf	_Dimmer+1,0
  7358                           
  7359                           ;Dimmer_B1.c: 1780: setDimmerLights_SwOn(1);
  7360  03C8  3001               	movlw	1
  7361  03C9  158A  27DD  118A   	fcall	_setDimmerLights_SwOn
  7362                           
  7363                           ;Dimmer_B1.c: 1781: setDimmerLights_SwOff(1);
  7364  03CC  3001               	movlw	1
  7365  03CD  118A  27C8         	fcall	_setDimmerLights_SwOff
  7366  03CF  0008               	return
  7367  03D0                     __end_of_DimmerLights_PIR_Control:	
  7368                           
  7369                           	psect	text46
  7370  0FDD                     __ptext46:	
  7371 ;; *************** function _setDimmerLights_SwOn *****************
  7372 ;; Defined at:
  7373 ;;		line 691 in file "../src/Dimmer_B1.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  sw              1    wreg     unsigned char 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  sw              1    2[BANK0 ] unsigned char 
  7378 ;;  idle            1    3[BANK0 ] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;		None               void
  7381 ;; Registers used:
  7382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7388 ;;      Params:         0       0       0       0
  7389 ;;      Locals:         0       2       0       0
  7390 ;;      Temps:          0       0       0       0
  7391 ;;      Totals:         0       2       0       0
  7392 ;;Total ram usage:        2 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    4
  7395 ;; This function calls:
  7396 ;;		_DimmerLights_SelectPointer
  7397 ;; This function is called by:
  7398 ;;		_DimmerLights_PIR_Control
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _setDimmerLights_SwOn
  7404  0FDD                     _setDimmerLights_SwOn:	
  7405                           
  7406                           ;incstack = 0
  7407                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7408                           ;setDimmerLights_SwOn@sw stored from wreg
  7409  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  7410  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  7411  0FDF  00D9               	movwf	setDimmerLights_SwOn@sw
  7412                           
  7413                           ;Dimmer_B1.c: 692: char idle = 0;
  7414  0FE0  01DA               	clrf	setDimmerLights_SwOn@idle
  7415                           
  7416                           ;Dimmer_B1.c: 717: DimmerLights_SelectPointer(sw);
  7417  0FE1  0859               	movf	setDimmerLights_SwOn@sw,w
  7418  0FE2  158A  25BE  158A   	fcall	_DimmerLights_SelectPointer
  7419                           
  7420                           ;Dimmer_B1.c: 718: if (idle == 0) {
  7421  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  7422  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  7423  0FE7  08DA               	movf	setDimmerLights_SwOn@idle,f
  7424  0FE8  1D03               	skipz
  7425  0FE9  0008               	return
  7426                           
  7427                           ;Dimmer_B1.c: 719: DimmerLights->SwFlag = 1;
  7428  0FEA  0872               	movf	_DimmerLights,w
  7429  0FEB  0084               	movwf	4
  7430  0FEC  1383               	bcf	3,7	;select IRP bank0
  7431  0FED  1400               	bsf	0,0
  7432                           
  7433                           ;Dimmer_B1.c: 720: if (DimmerLights->Status == 0) {
  7434  0FEE  0A72               	incf	_DimmerLights,w
  7435  0FEF  0084               	movwf	4
  7436  0FF0  1800               	btfsc	0,0
  7437  0FF1  2FFC               	goto	l4085
  7438                           
  7439                           ;Dimmer_B1.c: 721: DimmerLights->Status = 1;
  7440  0FF2  0A72               	incf	_DimmerLights,w
  7441  0FF3  0084               	movwf	4
  7442  0FF4  1400               	bsf	0,0
  7443                           
  7444                           ;Dimmer_B1.c: 722: DimmerLights->Trigger = 1;
  7445  0FF5  0872               	movf	_DimmerLights,w
  7446  0FF6  0084               	movwf	4
  7447  0FF7  1480               	bsf	0,1
  7448                           
  7449                           ;Dimmer_B1.c: 723: DimmerLights->Switch = 1;
  7450  0FF8  0872               	movf	_DimmerLights,w
  7451  0FF9  0084               	movwf	4
  7452  0FFA  1500               	bsf	0,2
  7453                           
  7454                           ;Dimmer_B1.c: 724: } else {
  7455  0FFB  0008               	return
  7456  0FFC                     l4085:	
  7457                           
  7458                           ;Dimmer_B1.c: 725: DimmerLights->Status = 0;
  7459  0FFC  0A72               	incf	_DimmerLights,w
  7460  0FFD  0084               	movwf	4
  7461  0FFE  1000               	bcf	0,0
  7462  0FFF  0008               	return
  7463  1000                     __end_of_setDimmerLights_SwOn:	
  7464                           ;Dimmer_B1.c: 726: }
  7465                           ;Dimmer_B1.c: 727: ;;
  7466                           
  7467                           
  7468                           	psect	text47
  7469  07C8                     __ptext47:	
  7470 ;; *************** function _setDimmerLights_SwOff *****************
  7471 ;; Defined at:
  7472 ;;		line 732 in file "../src/Dimmer_B1.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  sw              1    wreg     unsigned char 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  sw              1    2[BANK0 ] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;		None               void
  7479 ;; Registers used:
  7480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7486 ;;      Params:         0       0       0       0
  7487 ;;      Locals:         0       1       0       0
  7488 ;;      Temps:          0       0       0       0
  7489 ;;      Totals:         0       1       0       0
  7490 ;;Total ram usage:        1 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    4
  7493 ;; This function calls:
  7494 ;;		_DimmerLights_SelectPointer
  7495 ;; This function is called by:
  7496 ;;		_DimmerLights_PIR_Control
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           
  7501                           ;psect for function _setDimmerLights_SwOff
  7502  07C8                     _setDimmerLights_SwOff:	
  7503                           
  7504                           ;incstack = 0
  7505                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7506                           ;setDimmerLights_SwOff@sw stored from wreg
  7507  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  7508  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  7509  07CA  00D9               	movwf	setDimmerLights_SwOff@sw
  7510                           
  7511                           ;Dimmer_B1.c: 733: DimmerLights_SelectPointer(sw);
  7512  07CB  0859               	movf	setDimmerLights_SwOff@sw,w
  7513  07CC  158A  25BE  118A   	fcall	_DimmerLights_SelectPointer
  7514                           
  7515                           ;Dimmer_B1.c: 735: if (DimmerLights->SwFlag == 1) {
  7516  07CF  0872               	movf	_DimmerLights,w
  7517  07D0  0084               	movwf	4
  7518  07D1  1383               	bcf	3,7	;select IRP bank0
  7519  07D2  1C00               	btfss	0,0
  7520  07D3  0008               	return
  7521                           
  7522                           ;Dimmer_B1.c: 736: DimmerLights->SwFlag = 0;
  7523  07D4  0872               	movf	_DimmerLights,w
  7524  07D5  0084               	movwf	4
  7525  07D6  1000               	bcf	0,0
  7526                           
  7527                           ;Dimmer_B1.c: 737: if (DimmerLights->Status == 1) {
  7528  07D7  0A72               	incf	_DimmerLights,w
  7529  07D8  0084               	movwf	4
  7530  07D9  1C00               	btfss	0,0
  7531  07DA  2FE9               	goto	l4097
  7532                           
  7533                           ;Dimmer_B1.c: 738: if (DimmerLights->DimmingSwFlag == 1) {
  7534  07DB  0872               	movf	_DimmerLights,w
  7535  07DC  0084               	movwf	4
  7536  07DD  1D80               	btfss	0,3
  7537  07DE  0008               	return
  7538                           
  7539                           ;Dimmer_B1.c: 739: DimmerLights->DimmingSwFlag = 0;
  7540  07DF  0872               	movf	_DimmerLights,w
  7541  07E0  0084               	movwf	4
  7542  07E1  1180               	bcf	0,3
  7543                           
  7544                           ;Dimmer_B1.c: 741: DimmerLights->DimmingTrigger = 1;
  7545  07E2  0872               	movf	_DimmerLights,w
  7546  07E3  0084               	movwf	4
  7547  07E4  1600               	bsf	0,4
  7548                           
  7549                           ;Dimmer_B1.c: 742: DimmerLights->DimmingSwitch = 0;
  7550  07E5  0872               	movf	_DimmerLights,w
  7551  07E6  0084               	movwf	4
  7552  07E7  1280               	bcf	0,5
  7553                           
  7554                           ;Dimmer_B1.c: 743: }
  7555                           ;Dimmer_B1.c: 744: } else {
  7556  07E8  0008               	return
  7557  07E9                     l4097:	
  7558                           
  7559                           ;Dimmer_B1.c: 746: DimmerLights->Trigger = 1;
  7560  07E9  0872               	movf	_DimmerLights,w
  7561  07EA  0084               	movwf	4
  7562  07EB  1480               	bsf	0,1
  7563                           
  7564                           ;Dimmer_B1.c: 747: DimmerLights->Switch = 0;
  7565  07EC  0872               	movf	_DimmerLights,w
  7566  07ED  0084               	movwf	4
  7567  07EE  1100               	bcf	0,2
  7568  07EF  0008               	return
  7569  07F0                     __end_of_setDimmerLights_SwOff:	
  7570                           
  7571                           	psect	text48
  7572  0DD6                     __ptext48:	
  7573 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7574 ;; Defined at:
  7575 ;;		line 127 in file "../src/Dimmer_B1.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  lights          1    wreg     unsigned char 
  7578 ;;  value           1    0[BANK0 ] unsigned char 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  lights          1    2[BANK0 ] unsigned char 
  7581 ;; Return value:  Size  Location     Type
  7582 ;;		None               void
  7583 ;; Registers used:
  7584 ;;		wreg
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7590 ;;      Params:         0       1       0       0
  7591 ;;      Locals:         0       1       0       0
  7592 ;;      Temps:          0       1       0       0
  7593 ;;      Totals:         0       3       0       0
  7594 ;;Total ram usage:        3 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    3
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_setDimmerLights_Dimming
  7601 ;;		_DimmerLights_PIR_Control
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           
  7606                           ;psect for function _setDimmerIntr_MaxmumValue
  7607  0DD6                     _setDimmerIntr_MaxmumValue:	
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7611                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7612  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  7613  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  7614  0DD8  00D9               	movwf	setDimmerIntr_MaxmumValue@lights
  7615                           
  7616                           ;Dimmer_B1.c: 129: if (lights == 1) {
  7617  0DD9  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
  7618  0DDA  3A01               	xorlw	1
  7619  0DDB  1D03               	skipz
  7620  0DDC  0008               	return
  7621                           
  7622                           ;Dimmer_B1.c: 130: DimmerIntr1.MaxmumValue = value;
  7623  0DDD  0857               	movf	setDimmerIntr_MaxmumValue@value,w
  7624  0DDE  00D8               	movwf	??_setDimmerIntr_MaxmumValue
  7625  0DDF  0858               	movf	??_setDimmerIntr_MaxmumValue,w
  7626  0DE0  00A6               	movwf	_DimmerIntr1+6
  7627  0DE1  0008               	return
  7628  0DE2                     __end_of_setDimmerIntr_MaxmumValue:	
  7629                           
  7630                           	psect	text49
  7631  0EC1                     __ptext49:	
  7632 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7633 ;; Defined at:
  7634 ;;		line 222 in file "../src/Dimmer_B1.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  lights          1    wreg     unsigned char 
  7637 ;;  command         1    0[BANK0 ] unsigned char 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;  lights          1    2[BANK0 ] unsigned char 
  7640 ;; Return value:  Size  Location     Type
  7641 ;;		None               void
  7642 ;; Registers used:
  7643 ;;		wreg, status,2, status,0
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7649 ;;      Params:         0       1       0       0
  7650 ;;      Locals:         0       1       0       0
  7651 ;;      Temps:          0       1       0       0
  7652 ;;      Totals:         0       3       0       0
  7653 ;;Total ram usage:        3 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    3
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_DimmerLights_PIR_Control
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           
  7664                           ;psect for function _setDimmerIntr_Dimming_RF
  7665  0EC1                     _setDimmerIntr_Dimming_RF:	
  7666                           
  7667                           ;incstack = 0
  7668                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7669                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7670  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  7671  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  7672  0EC3  00D9               	movwf	setDimmerIntr_Dimming_RF@lights
  7673                           
  7674                           ;Dimmer_B1.c: 224: if (lights == 1) {
  7675  0EC4  0859               	movf	setDimmerIntr_Dimming_RF@lights,w
  7676  0EC5  3A01               	xorlw	1
  7677  0EC6  1D03               	skipz
  7678  0EC7  0008               	return
  7679                           
  7680                           ;Dimmer_B1.c: 225: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7681  0EC8  0857               	movf	setDimmerIntr_Dimming_RF@command,w
  7682  0EC9  3A01               	xorlw	1
  7683  0ECA  3000               	movlw	0
  7684  0ECB  1903               	skipnz
  7685  0ECC  3001               	movlw	1
  7686  0ECD  00D8               	movwf	??_setDimmerIntr_Dimming_RF
  7687  0ECE  0ED8               	swapf	??_setDimmerIntr_Dimming_RF,f
  7688  0ECF  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7689  0ED0  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7690  0ED1  0820               	movf	_DimmerIntr1,w
  7691  0ED2  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7692  0ED3  39BF               	andlw	-65
  7693  0ED4  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7694  0ED5  00A0               	movwf	_DimmerIntr1
  7695  0ED6  0008               	return
  7696  0ED7                     __end_of_setDimmerIntr_Dimming_RF:	
  7697                           
  7698                           	psect	text50
  7699  0DCA                     __ptext50:	
  7700 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7701 ;; Defined at:
  7702 ;;		line 87 in file "../src/Dimmer_B1.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  lights          1    wreg     unsigned char 
  7705 ;;  value           1    0[BANK0 ] unsigned char 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  lights          1    2[BANK0 ] unsigned char 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;		None               void
  7710 ;; Registers used:
  7711 ;;		wreg
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7717 ;;      Params:         0       1       0       0
  7718 ;;      Locals:         0       1       0       0
  7719 ;;      Temps:          0       1       0       0
  7720 ;;      Totals:         0       3       0       0
  7721 ;;Total ram usage:        3 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    3
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_DimmerLights_PIR_Control
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _setDimmerIntr_DimmingValue
  7733  0DCA                     _setDimmerIntr_DimmingValue:	
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7737                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7738  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7739  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7740  0DCC  00D9               	movwf	setDimmerIntr_DimmingValue@lights
  7741                           
  7742                           ;Dimmer_B1.c: 89: if (lights == 1) {
  7743  0DCD  0859               	movf	setDimmerIntr_DimmingValue@lights,w
  7744  0DCE  3A01               	xorlw	1
  7745  0DCF  1D03               	skipz
  7746  0DD0  0008               	return
  7747                           
  7748                           ;Dimmer_B1.c: 90: DimmerIntr1.DimmingValue = value;
  7749  0DD1  0857               	movf	setDimmerIntr_DimmingValue@value,w
  7750  0DD2  00D8               	movwf	??_setDimmerIntr_DimmingValue
  7751  0DD3  0858               	movf	??_setDimmerIntr_DimmingValue,w
  7752  0DD4  00A5               	movwf	_DimmerIntr1+5
  7753  0DD5  0008               	return
  7754  0DD6                     __end_of_setDimmerIntr_DimmingValue:	
  7755                           
  7756                           	psect	text51
  7757  0E41                     __ptext51:	
  7758 ;; *************** function _getDimmerLights_Status *****************
  7759 ;; Defined at:
  7760 ;;		line 1073 in file "../src/Dimmer_B1.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  lights          1    wreg     unsigned char 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  lights          1    2[BANK0 ] unsigned char 
  7765 ;;  status          1    3[BANK0 ] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      unsigned char 
  7768 ;; Registers used:
  7769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7775 ;;      Params:         0       0       0       0
  7776 ;;      Locals:         0       2       0       0
  7777 ;;      Temps:          0       0       0       0
  7778 ;;      Totals:         0       2       0       0
  7779 ;;Total ram usage:        2 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    4
  7782 ;; This function calls:
  7783 ;;		_DimmerLights_SelectPointer
  7784 ;; This function is called by:
  7785 ;;		_DimmerLights_PIR_Control
  7786 ;;		_Exception_Main
  7787 ;;		_PIR_Main
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _getDimmerLights_Status
  7793  0E41                     _getDimmerLights_Status:	
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7797                           ;getDimmerLights_Status@lights stored from wreg
  7798  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  7799  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  7800  0E43  00D9               	movwf	getDimmerLights_Status@lights
  7801                           
  7802                           ;Dimmer_B1.c: 1074: DimmerLights_SelectPointer(lights);
  7803  0E44  0859               	movf	getDimmerLights_Status@lights,w
  7804  0E45  158A  25BE         	fcall	_DimmerLights_SelectPointer
  7805                           
  7806                           ;Dimmer_B1.c: 1075: char status = DimmerLights->Status == 1 ? 1 : 0;
  7807  0E47  0A72               	incf	_DimmerLights,w
  7808  0E48  0084               	movwf	4
  7809  0E49  3000               	movlw	0
  7810  0E4A  1383               	bcf	3,7	;select IRP bank0
  7811  0E4B  1800               	btfsc	0,0
  7812  0E4C  3001               	movlw	1
  7813  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  7814  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  7815  0E4F  00DA               	movwf	getDimmerLights_Status@status
  7816                           
  7817                           ;Dimmer_B1.c: 1076: return status;
  7818  0E50  085A               	movf	getDimmerLights_Status@status,w
  7819  0E51  0008               	return
  7820  0E52                     __end_of_getDimmerLights_Status:	
  7821                           
  7822                           	psect	text52
  7823  0DBE                     __ptext52:	
  7824 ;; *************** function _DimmerLights_SelectPointer *****************
  7825 ;; Defined at:
  7826 ;;		line 614 in file "../src/Dimmer_B1.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  lights          1    wreg     unsigned char 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  lights          1    1[BANK0 ] unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;		None               void
  7833 ;; Registers used:
  7834 ;;		wreg
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7840 ;;      Params:         0       0       0       0
  7841 ;;      Locals:         0       1       0       0
  7842 ;;      Temps:          0       1       0       0
  7843 ;;      Totals:         0       2       0       0
  7844 ;;Total ram usage:        2 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    3
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_setDimmerLights_SwOn
  7851 ;;		_setDimmerLights_SwOff
  7852 ;;		_setDimmerLights_Main
  7853 ;;		_getDimmerLights_Status
  7854 ;;		_setDimmerLights_DimmingOn
  7855 ;;		_setDimmerLights_Status
  7856 ;;		_setDimmerLights_DimmingRun
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           
  7861                           ;psect for function _DimmerLights_SelectPointer
  7862  0DBE                     _DimmerLights_SelectPointer:	
  7863                           
  7864                           ;incstack = 0
  7865                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7866                           ;DimmerLights_SelectPointer@lights stored from wreg
  7867  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  7868  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  7869  0DC0  00D8               	movwf	DimmerLights_SelectPointer@lights
  7870                           
  7871                           ;Dimmer_B1.c: 616: if (lights == 1) {
  7872  0DC1  0858               	movf	DimmerLights_SelectPointer@lights,w
  7873  0DC2  3A01               	xorlw	1
  7874  0DC3  1D03               	skipz
  7875  0DC4  0008               	return
  7876                           
  7877                           ;Dimmer_B1.c: 617: DimmerLights = &DimmerLights1;
  7878  0DC5  30CA               	movlw	_DimmerLights1& (0+255)
  7879  0DC6  00D7               	movwf	??_DimmerLights_SelectPointer
  7880  0DC7  0857               	movf	??_DimmerLights_SelectPointer,w
  7881  0DC8  00F2               	movwf	_DimmerLights
  7882  0DC9  0008               	return
  7883  0DCA                     __end_of_DimmerLights_SelectPointer:	
  7884                           
  7885                           	psect	text53
  7886  0D99                     __ptext53:	
  7887 ;; *************** function _DimmerLights_Initialization *****************
  7888 ;; Defined at:
  7889 ;;		line 635 in file "../src/Dimmer_B1.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;		None
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;		None
  7894 ;; Return value:  Size  Location     Type
  7895 ;;		None               void
  7896 ;; Registers used:
  7897 ;;		wreg, status,2, status,0, pclath, cstack
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7903 ;;      Params:         0       0       0       0
  7904 ;;      Locals:         0       0       0       0
  7905 ;;      Temps:          0       0       0       0
  7906 ;;      Totals:         0       0       0       0
  7907 ;;Total ram usage:        0 bytes
  7908 ;; Hardware stack levels used:    1
  7909 ;; Hardware stack levels required when called:    4
  7910 ;; This function calls:
  7911 ;;		_DimmerIntr_Initialization
  7912 ;;		_setDimmerLights_Initialization
  7913 ;; This function is called by:
  7914 ;;		_main
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           
  7919                           ;psect for function _DimmerLights_Initialization
  7920  0D99                     _DimmerLights_Initialization:	
  7921                           
  7922                           ;Dimmer_B1.c: 637: setDimmerLights_Initialization(1);
  7923                           
  7924                           ;incstack = 0
  7925                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7926  0D99  3001               	movlw	1
  7927  0D9A  158A  2579  158A   	fcall	_setDimmerLights_Initialization
  7928                           
  7929                           ;Dimmer_B1.c: 647: DimmerIntr_Initialization();
  7930  0D9D  158A  2686         	fcall	_DimmerIntr_Initialization
  7931  0D9F  0008               	return
  7932  0DA0                     __end_of_DimmerLights_Initialization:	
  7933                           
  7934                           	psect	text54
  7935  0D79                     __ptext54:	
  7936 ;; *************** function _setDimmerLights_Initialization *****************
  7937 ;; Defined at:
  7938 ;;		line 651 in file "../src/Dimmer_B1.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  lights          1    wreg     unsigned char 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  lights          1    0[COMMON] unsigned char 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;		None               void
  7945 ;; Registers used:
  7946 ;;		wreg
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7952 ;;      Params:         0       0       0       0
  7953 ;;      Locals:         0       0       0       0
  7954 ;;      Temps:          0       0       0       0
  7955 ;;      Totals:         0       0       0       0
  7956 ;;Total ram usage:        0 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:    3
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_DimmerLights_Initialization
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function _setDimmerLights_Initialization
  7968  0D79                     _setDimmerLights_Initialization:	
  7969                           
  7970                           ;incstack = 0
  7971                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7972  0D79  0008               	return
  7973  0D7A                     __end_of_setDimmerLights_Initialization:	
  7974                           
  7975                           	psect	text55
  7976  0E86                     __ptext55:	
  7977 ;; *************** function _DimmerIntr_Initialization *****************
  7978 ;; Defined at:
  7979 ;;		line 7 in file "../src/Dimmer_B1.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;		None               void
  7986 ;; Registers used:
  7987 ;;		wreg
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7993 ;;      Params:         0       0       0       0
  7994 ;;      Locals:         0       0       0       0
  7995 ;;      Temps:          0       1       0       0
  7996 ;;      Totals:         0       1       0       0
  7997 ;;Total ram usage:        1 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    3
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_DimmerLights_Initialization
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           
  8008                           ;psect for function _DimmerIntr_Initialization
  8009  0E86                     _DimmerIntr_Initialization:	
  8010                           
  8011                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  8012                           
  8013                           ;incstack = 0
  8014                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  8015  0E86  3007               	movlw	7
  8016  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  8017  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  8018  0E89  00D7               	movwf	??_DimmerIntr_Initialization
  8019  0E8A  0857               	movf	??_DimmerIntr_Initialization,w
  8020  0E8B  00A4               	movwf	_DimmerIntr1+4
  8021                           
  8022                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.6));
  8023  0E8C  3012               	movlw	18
  8024  0E8D  00D7               	movwf	??_DimmerIntr_Initialization
  8025  0E8E  0857               	movf	??_DimmerIntr_Initialization,w
  8026  0E8F  00A6               	movwf	_DimmerIntr1+6
  8027                           
  8028                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.6));
  8029  0E90  3036               	movlw	54
  8030  0E91  00D7               	movwf	??_DimmerIntr_Initialization
  8031  0E92  0857               	movf	??_DimmerIntr_Initialization,w
  8032  0E93  00A7               	movwf	_DimmerIntr1+7
  8033                           
  8034                           ;Dimmer_B1.c: 61: if (myMain.InitDimmer == 1) {
  8035  0E94  1E33               	btfss	_myMain+2,4
  8036  0E95  0008               	return
  8037                           
  8038                           ;Dimmer_B1.c: 62: myMain.InitDimmer = 0;
  8039  0E96  1233               	bcf	_myMain+2,4
  8040                           
  8041                           ;Dimmer_B1.c: 63: myMain.SaveDimmer = 1;
  8042  0E97  16B3               	bsf	_myMain+2,5
  8043  0E98  0008               	return
  8044  0E99                     __end_of_DimmerIntr_Initialization:	
  8045                           ;Dimmer_B1.c: 64: ;;
  8046                           
  8047                           
  8048                           	psect	text56
  8049  0712                     __ptext56:	
  8050 ;; *************** function _CDS_Main *****************
  8051 ;; Defined at:
  8052 ;;		line 11 in file "../src/CDS_B1.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;		None               void
  8059 ;; Registers used:
  8060 ;;		wreg, status,2, status,0
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8066 ;;      Params:         0       0       0       0
  8067 ;;      Locals:         0       0       0       0
  8068 ;;      Temps:          0       3       0       0
  8069 ;;      Totals:         0       3       0       0
  8070 ;;Total ram usage:        3 bytes
  8071 ;; Hardware stack levels used:    1
  8072 ;; Hardware stack levels required when called:    3
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_main
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function _CDS_Main
  8082  0712                     _CDS_Main:	
  8083                           
  8084                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8085                           
  8086                           ;incstack = 0
  8087                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8088  0712  1283               	bcf	3,5	;RP0=0, select bank0
  8089  0713  1303               	bcf	3,6	;RP1=0, select bank0
  8090  0714  1C3A               	btfss	__CDS,0
  8091  0715  0008               	return
  8092                           
  8093                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8094  0716  18BA               	btfsc	__CDS,1
  8095  0717  2F25               	goto	l123
  8096                           
  8097                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8098  0718  19BA               	btfsc	__CDS,3
  8099  0719  0008               	return
  8100                           
  8101                           ;CDS_B1.c: 16: _CDS.Time++;
  8102  071A  3001               	movlw	1
  8103  071B  00D7               	movwf	??_CDS_Main
  8104  071C  0857               	movf	??_CDS_Main,w
  8105  071D  07BB               	addwf	__CDS+1,f
  8106                           
  8107                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8108  071E  3005               	movlw	5
  8109  071F  023B               	subwf	__CDS+1,w
  8110  0720  1C03               	skipc
  8111  0721  0008               	return
  8112                           
  8113                           ;CDS_B1.c: 18: {
  8114                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8115  0722  01BB               	clrf	__CDS+1
  8116                           
  8117                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8118  0723  15BA               	bsf	__CDS,3
  8119                           
  8120                           ;CDS_B1.c: 21: }
  8121                           ;CDS_B1.c: 22: }
  8122                           ;CDS_B1.c: 23: } else {
  8123  0724  0008               	return
  8124  0725                     l123:	
  8125                           
  8126                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8127  0725  1CBA               	btfss	__CDS,1
  8128  0726  0008               	return
  8129                           
  8130                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8131  0727  10BA               	bcf	__CDS,1
  8132                           
  8133                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8134  0728  1A3A               	btfsc	__CDS,4
  8135  0729  2F30               	goto	l4579
  8136                           
  8137                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8138  072A  083C               	movf	__CDS+2,w
  8139  072B  023D               	subwf	__CDS+3,w
  8140  072C  1C03               	skipc
  8141  072D  0008               	return
  8142                           
  8143                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8144  072E  163A               	bsf	__CDS,4
  8145                           
  8146                           ;CDS_B1.c: 29: }
  8147                           ;CDS_B1.c: 30: } else {
  8148  072F  0008               	return
  8149  0730                     l4579:	
  8150                           
  8151                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8152  0730  083C               	movf	__CDS+2,w
  8153  0731  3E9C               	addlw	156
  8154  0732  00D7               	movwf	??_CDS_Main
  8155  0733  30FF               	movlw	255
  8156  0734  1803               	skipnc
  8157  0735  3000               	movlw	0
  8158  0736  00D8               	movwf	??_CDS_Main+1
  8159  0737  0858               	movf	??_CDS_Main+1,w
  8160  0738  3A80               	xorlw	128
  8161  0739  00D9               	movwf	??_CDS_Main+2
  8162  073A  3080               	movlw	128
  8163  073B  0259               	subwf	??_CDS_Main+2,w
  8164  073C  1D03               	skipz
  8165  073D  2F40               	goto	u5455
  8166  073E  083D               	movf	__CDS+3,w
  8167  073F  0257               	subwf	??_CDS_Main,w
  8168  0740                     u5455:	
  8169  0740  1C03               	skipc
  8170  0741  0008               	return
  8171                           
  8172                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8173  0742  1283               	bcf	3,5	;RP0=0, select bank0
  8174  0743  1303               	bcf	3,6	;RP1=0, select bank0
  8175  0744  123A               	bcf	__CDS,4
  8176  0745  0008               	return
  8177  0746                     __end_of_CDS_Main:	
  8178                           
  8179                           	psect	text57
  8180  0D85                     __ptext57:	
  8181 ;; *************** function _CDS_Initialization *****************
  8182 ;; Defined at:
  8183 ;;		line 7 in file "../src/CDS_B1.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;		None
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;		None
  8188 ;; Return value:  Size  Location     Type
  8189 ;;		None               void
  8190 ;; Registers used:
  8191 ;;		None
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8197 ;;      Params:         0       0       0       0
  8198 ;;      Locals:         0       0       0       0
  8199 ;;      Temps:          0       0       0       0
  8200 ;;      Totals:         0       0       0       0
  8201 ;;Total ram usage:        0 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:    3
  8204 ;; This function calls:
  8205 ;;		Nothing
  8206 ;; This function is called by:
  8207 ;;		_main
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           
  8212                           ;psect for function _CDS_Initialization
  8213  0D85                     _CDS_Initialization:	
  8214                           
  8215                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8216                           
  8217                           ;incstack = 0
  8218                           ; Regs used in _CDS_Initialization: []
  8219  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  8220  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  8221  0D87  143A               	bsf	__CDS,0
  8222  0D88  0008               	return
  8223  0D89                     __end_of_CDS_Initialization:	
  8224                           
  8225                           	psect	text58
  8226  0F03                     __ptext58:	
  8227 ;; *************** function _ISR *****************
  8228 ;; Defined at:
  8229 ;;		line 116 in file "../src/MCU_B1.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;		None               void
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, pclath, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8243 ;;      Params:         0       0       0       0
  8244 ;;      Locals:         0       0       0       0
  8245 ;;      Temps:          4       0       0       0
  8246 ;;      Totals:         4       0       0       0
  8247 ;;Total ram usage:        4 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    2
  8250 ;; This function calls:
  8251 ;;		_TMR1_ISR
  8252 ;; This function is called by:
  8253 ;;		Interrupt level 1
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function _ISR
  8259  0F03                     _ISR:	
  8260                           
  8261                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8262  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  8263  0F04  1303               	bcf	3,6	;RP1=0, select bank1
  8264  0F05  1C0C               	btfss	12,0	;volatile
  8265  0F06  2F0E               	goto	i1l664
  8266  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0F09  1C0C               	btfss	12,0	;volatile
  8269  0F0A  2F0E               	goto	i1l664
  8270                           
  8271                           ;MCU_B1.c: 126: TMR1_ISR();
  8272  0F0B  158A  2767  158A   	fcall	_TMR1_ISR
  8273  0F0E                     i1l664:	
  8274                           ;MCU_B1.c: 127: }
  8275                           ;MCU_B1.c: 148: return;
  8276                           
  8277  0F0E  0879               	movf	??_ISR+3,w
  8278  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  8279  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  8280  0F11  00FF               	movwf	127
  8281  0F12  0878               	movf	??_ISR+2,w
  8282  0F13  008A               	movwf	10
  8283  0F14  0877               	movf	??_ISR+1,w
  8284  0F15  0084               	movwf	4
  8285  0F16  0E76               	swapf	??_ISR^(0+-128),w
  8286  0F17  0083               	movwf	3
  8287  0F18  0EFE               	swapf	126,f
  8288  0F19  0E7E               	swapf	126,w
  8289  0F1A  0009               	retfie
  8290  0F1B                     __end_of_ISR:	
  8291                           
  8292                           	psect	intentry
  8293  0004                     __pintentry:	
  8294                           ;incstack = 0
  8295                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8296                           
  8297  0004                     interrupt_function:	
  8298  007E                     saved_w	set	btemp
  8299  0004  00FE               	movwf	btemp
  8300  0005  0E03               	swapf	3,w
  8301  0006  00F6               	movwf	??_ISR
  8302  0007  0804               	movf	4,w
  8303  0008  00F7               	movwf	??_ISR+1
  8304  0009  080A               	movf	10,w
  8305  000A  00F8               	movwf	??_ISR+2
  8306  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8307  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8308  000D  087F               	movf	btemp+1,w
  8309  000E  00F9               	movwf	??_ISR+3
  8310  000F  158A  2F03         	ljmp	_ISR
  8311                           
  8312                           	psect	text59
  8313  0F67                     __ptext59:	
  8314 ;; *************** function _TMR1_ISR *****************
  8315 ;; Defined at:
  8316 ;;		line 236 in file "../src/MCU_B1.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;		None               void
  8323 ;; Registers used:
  8324 ;;		wreg, status,2, status,0, pclath, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8330 ;;      Params:         0       0       0       0
  8331 ;;      Locals:         0       0       0       0
  8332 ;;      Temps:          0       0       0       0
  8333 ;;      Totals:         0       0       0       0
  8334 ;;Total ram usage:        0 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    1
  8337 ;; This function calls:
  8338 ;;		_DimmerLights_IOC_1
  8339 ;;		_DimmerLights_TMR_1
  8340 ;; This function is called by:
  8341 ;;		_ISR
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           
  8346                           ;psect for function _TMR1_ISR
  8347  0F67                     _TMR1_ISR:	
  8348                           
  8349                           ;MCU_B1.c: 242: DimmerLights_IOC_1();
  8350                           
  8351                           ;incstack = 0
  8352                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8353  0F67  118A  27F0  158A   	fcall	_DimmerLights_IOC_1
  8354                           
  8355                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
  8356  0F6A  118A  263D  158A   	fcall	_DimmerLights_TMR_1
  8357                           
  8358                           ;MCU_B1.c: 268: Timer1.Count++;
  8359  0F6D  3001               	movlw	1
  8360  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  8361  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  8362  0F70  07BF               	addwf	_Timer1+1,f
  8363  0F71  1803               	skipnc
  8364  0F72  0AC0               	incf	_Timer1+2,f
  8365  0F73  3000               	movlw	0
  8366  0F74  07C0               	addwf	_Timer1+2,f
  8367                           
  8368                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  8369  0F75  30C8               	movlw	200
  8370  0F76  063F               	xorwf	_Timer1+1,w
  8371  0F77  0440               	iorwf	_Timer1+2,w
  8372  0F78  1D03               	skipz
  8373  0F79  2F7D               	goto	i1l3539
  8374                           
  8375                           ;MCU_B1.c: 270: Timer1.Count = 0;
  8376  0F7A  01BF               	clrf	_Timer1+1
  8377  0F7B  01C0               	clrf	_Timer1+2
  8378                           
  8379                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  8380  0F7C  143E               	bsf	_Timer1,0
  8381  0F7D                     i1l3539:	
  8382                           
  8383                           ;MCU_B1.c: 272: }
  8384                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  8385  0F7D  30FA               	movlw	250
  8386  0F7E  008F               	movwf	15	;volatile
  8387                           
  8388                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  8389  0F7F  3038               	movlw	56
  8390  0F80  008E               	movwf	14	;volatile
  8391                           
  8392                           ;MCU_B1.c: 276: TMR1IF = 0;
  8393  0F81  100C               	bcf	12,0	;volatile
  8394  0F82  0008               	return
  8395  0F83                     __end_of_TMR1_ISR:	
  8396                           
  8397                           	psect	text60
  8398  063D                     __ptext60:	
  8399 ;; *************** function _DimmerLights_TMR_1 *****************
  8400 ;; Defined at:
  8401 ;;		line 1270 in file "../src/Dimmer_B1.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;		None               void
  8408 ;; Registers used:
  8409 ;;		wreg, status,2, status,0
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8415 ;;      Params:         0       0       0       0
  8416 ;;      Locals:         0       0       0       0
  8417 ;;      Temps:          1       0       0       0
  8418 ;;      Totals:         1       0       0       0
  8419 ;;Total ram usage:        1 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_TMR1_ISR
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           
  8429                           ;psect for function _DimmerLights_TMR_1
  8430  063D                     _DimmerLights_TMR_1:	
  8431                           
  8432                           ;Dimmer_B1.c: 1271: if (DimmerIntr1.Start == 1) {
  8433                           
  8434                           ;incstack = 0
  8435                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8436  063D  1283               	bcf	3,5	;RP0=0, select bank0
  8437  063E  1303               	bcf	3,6	;RP1=0, select bank0
  8438  063F  1D20               	btfss	_DimmerIntr1,2
  8439  0640  2E4B               	goto	i1l3225
  8440                           
  8441                           ;Dimmer_B1.c: 1272: DimmerIntr1.Count++;
  8442  0641  3001               	movlw	1
  8443  0642  00F5               	movwf	??_DimmerLights_TMR_1
  8444  0643  0875               	movf	??_DimmerLights_TMR_1,w
  8445  0644  07A2               	addwf	_DimmerIntr1+2,f
  8446                           
  8447                           ;Dimmer_B1.c: 1273: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) + 1) {
  8448  0645  3037               	movlw	55
  8449  0646  0222               	subwf	_DimmerIntr1+2,w
  8450  0647  1C03               	skipc
  8451  0648  2E4B               	goto	i1l3225
  8452                           
  8453                           ;Dimmer_B1.c: 1274: DimmerIntr1.Count = 0;
  8454  0649  01A2               	clrf	_DimmerIntr1+2
  8455                           
  8456                           ;Dimmer_B1.c: 1275: DimmerIntr1.Start = 0;
  8457  064A  1120               	bcf	_DimmerIntr1,2
  8458  064B                     i1l3225:	
  8459                           
  8460                           ;Dimmer_B1.c: 1276: }
  8461                           ;Dimmer_B1.c: 1277: }
  8462                           ;Dimmer_B1.c: 1279: if (DimmerIntr1.GO == 1) {
  8463  064B  1C20               	btfss	_DimmerIntr1,0
  8464  064C  2E57               	goto	i1l384
  8465                           
  8466                           ;Dimmer_B1.c: 1280: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8467  064D  0825               	movf	_DimmerIntr1+5,w
  8468  064E  0222               	subwf	_DimmerIntr1+2,w
  8469  064F  1C03               	skipc
  8470  0650  2E86               	goto	i1l387
  8471                           
  8472                           ;Dimmer_B1.c: 1281: DimmerIntr1.GO = 0;
  8473  0651  1020               	bcf	_DimmerIntr1,0
  8474                           
  8475                           ;Dimmer_B1.c: 1282: DimmerIntr1.Tune = 1;
  8476  0652  14A0               	bsf	_DimmerIntr1,1
  8477                           
  8478                           ;Dimmer_B1.c: 1284: if (DimmerIntr1.ControlStatus == 1) {
  8479  0653  1DA0               	btfss	_DimmerIntr1,3
  8480  0654  2E86               	goto	i1l387
  8481                           
  8482                           ;Dimmer_B1.c: 1285: RB2 = 1;
  8483  0655  1506               	bsf	6,2	;volatile
  8484                           
  8485                           ;Dimmer_B1.c: 1287: }
  8486                           ;Dimmer_B1.c: 1288: }
  8487                           ;Dimmer_B1.c: 1289: } else {
  8488  0656  2E86               	goto	i1l387
  8489  0657                     i1l384:	
  8490                           
  8491                           ;Dimmer_B1.c: 1290: if (DimmerIntr1.Tune == 1) {
  8492  0657  1CA0               	btfss	_DimmerIntr1,1
  8493  0658  2E86               	goto	i1l387
  8494                           
  8495                           ;Dimmer_B1.c: 1291: DimmerIntr1.Tune = 0;
  8496  0659  10A0               	bcf	_DimmerIntr1,1
  8497                           
  8498                           ;Dimmer_B1.c: 1292: DimmerIntr1.TuneTime++;
  8499  065A  3001               	movlw	1
  8500  065B  00F5               	movwf	??_DimmerLights_TMR_1
  8501  065C  0875               	movf	??_DimmerLights_TMR_1,w
  8502  065D  07A3               	addwf	_DimmerIntr1+3,f
  8503                           
  8504                           ;Dimmer_B1.c: 1293: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8505  065E  0824               	movf	_DimmerIntr1+4,w
  8506  065F  0223               	subwf	_DimmerIntr1+3,w
  8507  0660  1C03               	skipc
  8508  0661  2E86               	goto	i1l387
  8509                           
  8510                           ;Dimmer_B1.c: 1294: DimmerIntr1.TuneTime = 0;
  8511  0662  01A3               	clrf	_DimmerIntr1+3
  8512                           
  8513                           ;Dimmer_B1.c: 1295: if (DimmerIntr1.Dimming_Sw == 1) {
  8514  0663  1E20               	btfss	_DimmerIntr1,4
  8515  0664  2E73               	goto	i1l390
  8516                           
  8517                           ;Dimmer_B1.c: 1296: if (DimmerIntr1.Dimming_Status == 0) {
  8518  0665  1AA0               	btfsc	_DimmerIntr1,5
  8519  0666  2E6D               	goto	i1l3249
  8520                           
  8521                           ;Dimmer_B1.c: 1297: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.6))) {
  8522  0667  3013               	movlw	19
  8523  0668  0225               	subwf	_DimmerIntr1+5,w
  8524  0669  1803               	btfsc	3,0
  8525  066A  2E79               	goto	i1l3255
  8526                           
  8527                           ;Dimmer_B1.c: 1300: DimmerIntr1.Dimming_Status = 1;
  8528                           
  8529                           ;Dimmer_B1.c: 1299: } else {
  8530                           
  8531                           ;Dimmer_B1.c: 1298: DimmerIntr1.DimmingValue--;
  8532  066B  16A0               	bsf	_DimmerIntr1,5
  8533                           
  8534                           ;Dimmer_B1.c: 1301: }
  8535                           ;Dimmer_B1.c: 1302: } else {
  8536  066C  2E86               	goto	i1l387
  8537  066D                     i1l3249:	
  8538                           
  8539                           ;Dimmer_B1.c: 1303: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.6))) {
  8540  066D  3036               	movlw	54
  8541  066E  0225               	subwf	_DimmerIntr1+5,w
  8542  066F  1C03               	btfss	3,0
  8543  0670  2E80               	goto	i1l3259
  8544                           
  8545                           ;Dimmer_B1.c: 1306: DimmerIntr1.Dimming_Status = 0;
  8546                           
  8547                           ;Dimmer_B1.c: 1305: } else {
  8548                           
  8549                           ;Dimmer_B1.c: 1304: DimmerIntr1.DimmingValue++;
  8550  0671  12A0               	bcf	_DimmerIntr1,5
  8551                           
  8552                           ;Dimmer_B1.c: 1307: }
  8553                           ;Dimmer_B1.c: 1308: }
  8554                           ;Dimmer_B1.c: 1309: } else if (DimmerIntr1.Dimming_RF == 1) {
  8555  0672  2E86               	goto	i1l387
  8556  0673                     i1l390:	
  8557  0673  1F20               	btfss	_DimmerIntr1,6
  8558  0674  2E86               	goto	i1l387
  8559                           
  8560                           ;Dimmer_B1.c: 1310: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8561  0675  0825               	movf	_DimmerIntr1+5,w
  8562  0676  0226               	subwf	_DimmerIntr1+6,w
  8563  0677  1803               	skipnc
  8564  0678  2E7C               	goto	i1l3257
  8565  0679                     i1l3255:	
  8566                           
  8567                           ;Dimmer_B1.c: 1311: DimmerIntr1.DimmingValue--;
  8568  0679  3001               	movlw	1
  8569  067A  02A5               	subwf	_DimmerIntr1+5,f
  8570                           
  8571                           ;Dimmer_B1.c: 1312: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8572  067B  2E86               	goto	i1l387
  8573  067C                     i1l3257:	
  8574  067C  0826               	movf	_DimmerIntr1+6,w
  8575  067D  0225               	subwf	_DimmerIntr1+5,w
  8576  067E  1803               	skipnc
  8577  067F  2E85               	goto	i1l401
  8578  0680                     i1l3259:	
  8579                           
  8580                           ;Dimmer_B1.c: 1313: DimmerIntr1.DimmingValue++;
  8581  0680  3001               	movlw	1
  8582  0681  00F5               	movwf	??_DimmerLights_TMR_1
  8583  0682  0875               	movf	??_DimmerLights_TMR_1,w
  8584  0683  07A5               	addwf	_DimmerIntr1+5,f
  8585                           
  8586                           ;Dimmer_B1.c: 1314: } else {
  8587  0684  2E86               	goto	i1l387
  8588  0685                     i1l401:	
  8589                           
  8590                           ;Dimmer_B1.c: 1315: DimmerIntr1.Dimming_RF = 0;
  8591  0685  1320               	bcf	_DimmerIntr1,6
  8592  0686                     i1l387:	
  8593                           
  8594                           ;Dimmer_B1.c: 1316: }
  8595                           ;Dimmer_B1.c: 1317: }
  8596                           ;Dimmer_B1.c: 1318: }
  8597                           ;Dimmer_B1.c: 1319: }
  8598                           ;Dimmer_B1.c: 1320: }
  8599                           ;Dimmer_B1.c: 1321: if (RB2 == 1) {
  8600  0686  1D06               	btfss	6,2	;volatile
  8601  0687  0008               	return
  8602                           
  8603                           ;Dimmer_B1.c: 1322: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) - 10) {
  8604  0688  302C               	movlw	44
  8605  0689  0222               	subwf	_DimmerIntr1+2,w
  8606  068A  1C03               	skipc
  8607  068B  0008               	return
  8608                           
  8609                           ;Dimmer_B1.c: 1323: RB2 = 0;
  8610  068C  1106               	bcf	6,2	;volatile
  8611  068D  0008               	return
  8612  068E                     __end_of_DimmerLights_TMR_1:	
  8613                           
  8614                           	psect	text61
  8615  07F0                     __ptext61:	
  8616 ;; *************** function _DimmerLights_IOC_1 *****************
  8617 ;; Defined at:
  8618 ;;		line 1329 in file "../src/Dimmer_B1.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;		None
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;		None               void
  8625 ;; Registers used:
  8626 ;;		None
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8632 ;;      Params:         0       0       0       0
  8633 ;;      Locals:         0       0       0       0
  8634 ;;      Temps:          0       0       0       0
  8635 ;;      Totals:         0       0       0       0
  8636 ;;Total ram usage:        0 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_TMR1_ISR
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           
  8646                           ;psect for function _DimmerLights_IOC_1
  8647  07F0                     _DimmerLights_IOC_1:	
  8648                           
  8649                           ;Dimmer_B1.c: 1332: if (RA7 == 1) {
  8650                           
  8651                           ;incstack = 0
  8652                           ; Regs used in _DimmerLights_IOC_1: []
  8653  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  8654  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  8655  07F2  1F85               	btfss	5,7	;volatile
  8656  07F3  2FF8               	goto	i1l408
  8657                           
  8658                           ;Dimmer_B1.c: 1333: if (Dimmer.PIR_DimmerSignal == 1) {
  8659  07F4  1DAC               	btfss	_Dimmer,3
  8660  07F5  0008               	return
  8661                           
  8662                           ;Dimmer_B1.c: 1334: Dimmer.PIR_DimmerSignal = 0;
  8663  07F6  11AC               	bcf	_Dimmer,3
  8664                           
  8665                           ;Dimmer_B1.c: 1335: }
  8666                           ;Dimmer_B1.c: 1336: } else {
  8667  07F7  0008               	return
  8668  07F8                     i1l408:	
  8669                           
  8670                           ;Dimmer_B1.c: 1337: if (Dimmer.PIR_DimmerSignal == 0) {
  8671  07F8  19AC               	btfsc	_Dimmer,3
  8672  07F9  0008               	return
  8673                           
  8674                           ;Dimmer_B1.c: 1338: Dimmer.PIR_DimmerSignal = 1;
  8675  07FA  15AC               	bsf	_Dimmer,3
  8676                           
  8677                           ;Dimmer_B1.c: 1340: if (DimmerIntr1.Start == 0) {
  8678  07FB  1920               	btfsc	_DimmerIntr1,2
  8679  07FC  0008               	return
  8680                           
  8681                           ;Dimmer_B1.c: 1341: DimmerIntr1.Start = 1;
  8682  07FD  1520               	bsf	_DimmerIntr1,2
  8683                           
  8684                           ;Dimmer_B1.c: 1342: DimmerIntr1.GO = 1;
  8685  07FE  1420               	bsf	_DimmerIntr1,0
  8686  07FF  0008               	return
  8687  0800                     __end_of_DimmerLights_IOC_1:	
  8688  007E                     btemp	set	126	;btemp
  8689  007E                     wtemp	set	126
  8690  007E                     wtemp0	set	126
  8691  0080                     wtemp1	set	128
  8692  0082                     wtemp2	set	130
  8693  0084                     wtemp3	set	132
  8694  0086                     wtemp4	set	134
  8695  0088                     wtemp5	set	136
  8696  007F                     wtemp6	set	127
  8697  007E                     ttemp	set	126
  8698  007E                     ttemp0	set	126
  8699  0081                     ttemp1	set	129
  8700  0084                     ttemp2	set	132
  8701  0087                     ttemp3	set	135
  8702  007F                     ttemp4	set	127
  8703  007E                     ltemp	set	126
  8704  007E                     ltemp0	set	126
  8705  0082                     ltemp1	set	130
  8706  0086                     ltemp2	set	134
  8707  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     23      78
    BANK1            80      0      50
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_getDimmerIntr_DimmingValue
    _setDimmerLights_Dimming->_setDimmerIntr_Dimming_Sw
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_getDimmerLights_Status
    _DimmerLights_PIR_Control->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19961
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     850
                                              2 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2564
                                              9 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     858
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     686
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     349
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     349
                                              5 BANK0      6     6      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3064
                                              5 BANK0     12    12      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2594
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2594
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2709
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2709
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    2953
                                              5 BANK0      5     5      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2554
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    4020
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2540
                                              7 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1    1348
                                              3 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              4 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      8A      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Feb 23 08:19:55 2015

                            _WDT_Clearing 0002                     __end_of_setCmd_Status 0EED  
                            ___awdiv@sign 005D                            setTemp_Main@AD 0061  
                                      fsr 0004                      _setDimmerLights_Main 052D  
                                     l123 0725                      _setDimmerLights_SwOn 0FDD  
                                     l252 0E14                                       l424 0398  
                                     l417 0379                                       l418 035D  
                                     l481 0F8E                                       l810 0F47  
                                     l482 0F96                                       l806 0F4B  
                                     l832 0EEC                                       l826 06D1  
                                     l942 0447                                       l953 0443  
                                     l948 03ED                                       _GIE 005F  
    __size_of_DimmerLights_Initialization 0007                                       _RB2 0032  
                                     _LED 0073                                       _RB3 0033  
                                     _RB4 0034                                       _RB5 0035  
                                     _RA7 002F                                       _PS0 0408  
                                     _PS1 0409                                       _PS2 040A  
                                     _ISR 0F03                                       _PSA 040B  
                                     _WDT 0041                                       _Cmd 0070  
            getDimmerLights_Status@lights 0059                ??_setDimmerIntr_Dimming_RF 0058  
              ??_setDimmerIntr_Dimming_Sw 0058           setDimmerIntr_Dimming_RF@command 0057  
                                     fsr0 0004                                       indf 0000  
                         __end_of_ADC_Set 0DAE      setDimmerLights_Initialization@lights 0075  
            getDimmerLights_Status@status 005A       __end_of_setDimmerIntr_ControlStatus 0F03  
             _setDimmerIntr_ControlStatus 0EED                                      ?_ISR 0075  
                   _setDimmerLights_OnOff 0746                                      l1020 005A  
                                    l1021 0079                                      l1026 008F  
                                    l1018 01FB                                      l1019 0089  
                                    l1028 00A2                                      l4111 0757  
                                    l4041 0E57                                      l4115 075F  
                                    l4211 051B                                      l4125 07AB  
                                    l4045 0E5C                                      l4053 0EDB  
                                    l4047 0E61                                      l4215 0521  
                                    l4057 0EE7                                      l4331 03AC  
                                    l4243 0F43                                      l4219 0527  
                                    l4163 04DE                                      l4171 04E6  
                                    l4085 0FFC                                      l4181 04F9  
                                    l4149 04CD                                      l4157 04D5  
                                    l4501 05A4                                      l4263 0FB5  
                                    l4511 05AC                                      l4097 07E9  
                                    l4337 03C1                                      l4193 0509  
                                    l4185 04FD                                      l4441 03EF  
                                    l4257 0FAC                                      l4513 05BA  
                                    l4259 0FAF                                      l4523 05DB  
                                    l4285 0552                                      l4189 0501  
                                    l4381 0496                                      l4373 047E  
                                    l4365 0472                                      l4541 06DC  
                                    l4287 0559                                      l4383 049E  
                                    l4447 0400                                      l4527 05E3  
                                    l4519 05D0                                      l4543 06EA  
                                    l4703 033A                                      l4297 057D  
                                    l4385 04AC                                      l4369 0478  
                                    l4473 0433                                      l4449 0403  
                                    l4553 070B                                      l4641 0255  
                                    l4625 0791                                      l4299 0584  
                                    l4379 048A                                      l4803 00E8  
                                    l4483 0442                                      l4901 06B8  
                                    l4805 00E9                                      l4549 0700  
                                    l4653 0276                                      l4645 0260  
                                    l4717 0F5D                                      l4903 06C2  
                                    l4823 013D                                      l4815 0129  
                                    l4495 0599                                      l4673 02B6  
                                    l4657 0281                                      l4649 026B  
                                    l4579 0730                                      l4907 06C6  
                                    l4851 01C9                                      l4835 0192  
                                    l4683 02E4                                      l4667 029A  
                   _setDimmerLights_SwOff 07C8                                      l4837 01A1  
                                    l4697 032C                                      l4689 0300  
                                    l4787 00C5                                      l4963 061B  
                                    l4869 01F5                                      l4957 05FF  
                                    l4895 06A9                                      l4799 00DC  
                   _myMain_Initialization 0D7B                              __CFG_WDTE$ON 0000  
                                    u5020 0493                                      u5040 04A9  
                                    u6005 01E5                                      _PEIE 005E  
                                    u5245 05AF                                      u5325 06DF  
                                    u4705 0EBB                                      u5265 05BB  
                                    u5345 06EB                                      u5275 05C7  
                                    u5355 06F7                                      u5285 05D1  
                                    u5365 0701                                      u5455 0740  
                                    u5905 0107                                      u5915 011F  
                                    u5935 0156                                      u5945 0184  
                                    u5965 01B1                                      __CDS 003A  
                                    _WPUB 0095                                      __PIR 00A0  
                                    _Temp 0044                                      _main 05EA  
                                    btemp 007E                           __end_of_WDT_Set 0E32  
                                    ltemp 007E                                      start 0011  
                                    ttemp 007E                                      wtemp 007E  
                        __end_of_CDS_Main 0746              __size_of_Temp_Initialization 0003  
                                   ??_ISR 0076   __end_of_getDimmerLights_Allow_Condition 0D8E  
__size_of_getDimmerLights_Allow_Condition 0005         ??_getDimmerLights_Allow_Condition 0057  
        ?_getDimmerLights_Allow_Condition 0075           _getDimmerLights_Allow_Condition 0D89  
                  _getDimmerLights_Status 0E41                             __CFG_PLLEN$ON 0000  
                        __end_of_LED_Main 0D7F                                _DimmerIntr 0071  
                   ?_setDimmerLights_Main 0075                          ??_setPIRLED_Main 005B  
                   ?_setDimmerLights_SwOn 0075                                     ?_main 0069  
                         __end_of___awdiv 05EA                                     _ADRES 001E  
                         ___awdiv@divisor 0057                                     _T1CON 0010  
                         __end_of___lwdiv 0712                                     i1l401 0685  
                                   i1l408 07F8                                     i1l390 0673  
                                   i1l384 0657                                     i1l387 0686  
                                   i1l664 0F0E                           ___awdiv@counter 005C  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                 __end_of_Timeout_Counter 0EC1                                     _Light 0043  
                        __end_of_PIR_Main 020E                          __end_of_TMR1_ISR 0F83  
                        __end_of_TMR1_Set 0E24                                     _getAD 0F9F  
                        __end_of_WDT_Main 0E74                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 0012  
           __end_of_setLED_Initialization 0E86                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                       getPIR_AD@channel1 0065                         getPIR_AD@channel2 0060  
                       setTemp_Main@error 005D                           __initialization 0013  
                            __end_of_main 063D                          __end_of_Fosc_Set 0D93  
          getMain_All_LightsStatus@status 0057              setDimmerLights_OnOff@command 005A  
                          _Exception_Main 068E                                 ??_ADC_Set 0057  
                                  ??_main 006D                     PIR_Main@Enable_Switch 0063  
             ?_setDimmerIntr_DimmingValue 0057              ??_DimmerLights_SelectPointer 0057  
      setDimmerIntr_ControlStatus@command 0057                   _setDimmerLights_Dimming 079E  
                             _DimmerIntr1 0020                  _getMain_All_LightsStatus 0DEE  
                  ?_setDimmerLights_OnOff 005A                                    ?_getAD 0057  
                  ?_setDimmerLights_SwOff 0075                    ?_myMain_Initialization 0075  
                                  _ADCON0 001F                                    _ADCON1 009F  
                        ___awdiv@dividend 0059                                 ??_WDT_Set 0057  
                                  _ANSELA 0185                                    _ANSELB 0186  
                _getMain_All_Error_Status 0F33                                    i1l3225 064B  
                                  i1l3255 0679                                    i1l3257 067C  
                                  i1l3249 066D                                    i1l3259 0680  
                                  i1l3539 0F7D                                    _FVRCON 009D  
    getDimmerLights_Allow_Condition@allow 0057                                    _PIRLED 0036  
                                  _OSCCON 0090                                    _TMR1IE 0460  
                                  _TMR1IF 0060                                    _IO_Set 0F1B  
             ??_setDimmerIntr_MaxmumValue 0058                                    _Dimmer 002C  
                   __end_of_getCmd_Status 0E63                __end_of_Mcu_Initialization 0E41  
                                  _Timer1 003E               __size_of_CDS_Initialization 0004  
                  __end_of_Exception_Main 06D2                      Exception_Main@lights 005D  
                               ??___awdiv 005B                                 ??___lwdiv 005B  
                  ??_setDimmerLights_Main 005E                      Exception_Main@status 005F  
                  ??_setDimmerLights_SwOn 0059                                    _setLED 04BC  
                                  _myMain 0031         __size_of_DimmerLights_PIR_Control 0094  
                        ___awdiv@quotient 005E                        __size_of_Temp_Main 0003  
               ?_DimmerLights_PIR_Control 0075          ??_setDimmerLights_Initialization 0057  
         ?_setDimmerLights_Initialization 0075          __end_of_setDimmerIntr_Dimming_RF 0ED7  
        __end_of_setDimmerIntr_Dimming_Sw 0EAD                                    saved_w 007E  
                        ?_Timeout_Counter 0075               __size_of_DimmerLights_IOC_1 0010  
             __size_of_DimmerLights_TMR_1 0051                   __size_of_LedPointSelect 001C  
                               ?_CDS_Main 0075           setDimmerIntr_Dimming_Sw@command 0057  
                      setTemp_Main@TempGO 005E               __size_of_PIR_Initialization 000D  
                 __end_of__initialization 0024           getDimmerIntr_DimmingValue@value 0059  
         setDimmerIntr_DimmingValue@value 0057                                 ?_LED_Main 0075  
                           ?_my_MainTimer 0075              ?_DimmerLights_Initialization 0075  
              ?_DimmerIntr_Initialization 0075                            __pcstackCOMMON 0075  
                      __size_of_getCDS_AD 0022                           ?_Exception_Main 0075  
                           __end_of_getAD 0FBB                                 ?_PIR_Main 0075  
                               ?_TMR1_ISR 0075                                 ?_TMR1_Set 0075  
                      _LED_Initialization 0DE2                        __size_of_getPIR_AD 012E  
               ??_setDimmerLights_Dimming 005B                                 ?_WDT_Main 0075  
       setDimmerIntr_ControlStatus@lights 0059                 _setDimmerIntr_MaxmumValue 0DD6  
              __end_of_set_TimeoutCleared 0D99           setDimmerIntr_MaxmumValue@lights 0059  
                     ?_LED_Initialization 0075                                   ??_getAD 0058  
                     _Temp_Initialization 0D7F                                ??_CDS_Main 0057  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                               ?_Fosc_Set 0075                         __end_of_Temp_Main 0D85  
                                 ?_IO_Set 0075                           __CFG_VCAPEN$DIS 0000  
                          ??_my_MainTimer 0057                                ??_LED_Main 005D  
                    ??_LED_Initialization 005C                              _DimmerLights 0072  
                       LedPointSelect@led 0058                   ?_getDimmerLights_Status 0075  
                              __pmaintext 05EA                      ?_Temp_Initialization 0075  
       __end_of_DimmerIntr_Initialization 0E99                      PIR_Main@LightsStatus 0067  
           ??_DimmerLights_Initialization 0058                                ??_PIR_Main 005C  
                              ??_TMR1_ISR 0076                             ?_setTemp_Main 0075  
                              ??_TMR1_Set 0057                                __pintentry 0004  
                                 ?_setLED 0059                                   _ADC_Set 0DA7  
                              _getTemp_AD 0773        __end_of_DimmerLights_SelectPointer 0DCA  
              _DimmerLights_SelectPointer 0DBE                                ??_WDT_Main 0057  
                  __size_of_getCDS_Status 0008             setDimmerLights_Dimming@lights 005D  
           setDimmerLights_Dimming@status 005A     getDimmerLights_Allow_Condition@lights 0075  
                       __end_of_getCDS_AD 0FDD                                   _WDT_Set 0E24  
                           getPIR_AD@VRAD 0067                    __size_of_setCmd_Status 0016  
                              ??_Fosc_Set 0057                         __end_of_getPIR_AD 033C  
         __end_of_setDimmerLights_Dimming 07C8                       getCmd_Status@number 0057  
                         __size_of_IO_Set 0018                       setCmd_Status@number 0059  
       __size_of_setDimmerIntr_Dimming_RF 0016         __size_of_setDimmerIntr_Dimming_Sw 0014  
                              getCDS_AD@i 005C                                getCDS_AD@j 005D  
               ?_setDimmerIntr_Dimming_RF 0057                 ?_setDimmerIntr_Dimming_Sw 0057  
                                 _VarLED1 004F                                   _VarLED2 0053  
          __end_of_getDimmerLights_Status 0E52                     ??_Temp_Initialization 0057  
                          ??_setTemp_Main 005C                                   ___awdiv 058D  
                                 ___lwdiv 06D2                ??_getMain_All_LightsStatus 0057  
                             PIR_Main@cds 0062                           __size_of_setLED 0071  
                                 __ptext0 0000                                   __ptext1 0F4D  
                                 __ptext2 0D7B                                   __ptext3 0773  
                                 __ptext4 020E                                   __ptext5 06D2  
                                 __ptext6 058D                                   __ptext7 0FBB  
                                 __ptext8 0F9F                                   __ptext9 0D93  
                              getPIR_AD@i 0068                                getPIR_AD@j 0064  
                            __size_of_ISR 0018                ??_getMain_All_Error_Status 0057  
                 ??_setDimmerLights_OnOff 005B                   ??_setDimmerLights_SwOff 0059  
                 ??_myMain_Initialization 0057                         _DimmerLights_Main 0DA0  
                ??_setTemp_Initialization 0057                        ?_DimmerLights_Main 0075  
                          _LedPointSelect 0F83                           getTemp_AD@ADRES 005C  
                                 clrloop0 0DB7                      end_of_initialization 0024  
                     ??_DimmerLights_Main 005F                    setDimmerLights_SwOn@sw 0059  
                           _getCDS_Status 0DAE          __end_of_DimmerLights_PIR_Control 03D0  
                   _setLED_Initialization 0E74                             _setCmd_Status 0ED7  
                             ?_getTemp_AD 0075                  setLED_Initialization@led 005B  
                 setTemp_Main@DangerValue 0060                 __end_of_DimmerLights_Main 0DA7  
                      _Mcu_Initialization 0E32                      __end_of_my_MainTimer 0F67  
                  __end_of_LedPointSelect 0F9F                       setPIRLED_Main@count 005C  
        setDimmerIntr_DimmingValue@lights 0059          getDimmerIntr_DimmingValue@lights 0058  
                     ?_Mcu_Initialization 0075                   __size_of_setPIRLED_Main 0071  
      __size_of_setDimmerIntr_MaxmumValue 000C            setDimmerIntr_Dimming_RF@lights 0059  
         getMain_All_Error_Status@command 0058                         __size_of_CDS_Main 0034  
                          ?_getCDS_Status 0075                          ??_Exception_Main 005C  
                          __end_of_IO_Set 0F33                __end_of_CDS_Initialization 0D89  
                       __size_of_LED_Main 0003               ??_DimmerIntr_Initialization 0057  
                    ??_Mcu_Initialization 0058                             ?_WDT_Clearing 0075  
                          ?_setCmd_Status 0057       __size_of_getDimmerIntr_DimmingValue 000E  
                       __size_of_PIR_Main 01E7                         __size_of_TMR1_ISR 001C  
        DimmerLights_SelectPointer@lights 0058                         __size_of_TMR1_Set 000E  
           __size_of_setDimmerLights_Main 0060                            __end_of_setLED 052D  
           __size_of_setDimmerLights_SwOn 0023                __end_of_DimmerLights_IOC_1 0800  
                       __size_of_WDT_Main 0011                __end_of_DimmerLights_TMR_1 068E  
                     start_initialization 0013                           ?_LedPointSelect 0075  
                             __end_of_ISR 0F1B                    __size_of_getCmd_Status 0011  
              __end_of_PIR_Initialization 0E08              ?_setDimmerIntr_ControlStatus 0057  
         __size_of_setTemp_Initialization 0001                       getCDS_Status@status 0057  
                    __end_of_setTemp_Main 044B                        _set_TimeoutCleared 0D93  
       __end_of_setDimmerIntr_MaxmumValue 0DE2                                  ??_IO_Set 0057  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 004B  
                     __size_of_getTemp_AD 002B                    ?_setLED_Initialization 0075  
                       __size_of_Fosc_Set 0005                                 _Temp_Main 0D82  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 0057  
                     Exception_Main@count 005E                       Exception_Main@error 0060  
                _DimmerLights_PIR_Control 033C          __end_of_getMain_All_LightsStatus 0DFB  
                                ??_setLED 005A                                  ?_ADC_Set 0075  
             ?_DimmerLights_SelectPointer 0075          __end_of_getMain_All_Error_Status 0F4D  
              __size_of_DimmerLights_Main 0007            setDimmerIntr_Dimming_Sw@lights 0059  
                             __pbssCOMMON 0070                                 ___latbits 0001  
                           __pcstackBANK0 0057                      ??_set_TimeoutCleared 0057  
               _DimmerIntr_Initialization 0E86                                  ?_WDT_Set 0075  
                         ??_getCDS_Status 0057             ??_setDimmerIntr_ControlStatus 0058  
          setDimmerIntr_MaxmumValue@value 0057                             _DimmerLights1 00CA  
                           PIR_Main@error 0061                                 _getCDS_AD 0FBB  
                               _getPIR_AD 020E               __size_of_LED_Initialization 000C  
                              ?_Temp_Main 0075                          ___lwdiv@dividend 0059  
                           _getCmd_Status 0E52                           ??_setCmd_Status 0058  
                  _setTemp_Initialization 0D7A                             _PIR_Main$3333 0064  
                ?_setDimmerLights_Dimming 005A                                  ?___awdiv 0057  
                   __size_of_my_MainTimer 001A                                  ?___lwdiv 0057  
      __end_of_getDimmerIntr_DimmingValue 0E16              ??_setDimmerIntr_DimmingValue 0058  
              _getDimmerIntr_DimmingValue 0E08            __size_of_setDimmerLights_OnOff 002D  
           __end_of_setDimmerLights_OnOff 0773            __size_of_setDimmerLights_SwOff 0028  
          __size_of_myMain_Initialization 0001             __end_of_setDimmerLights_SwOff 07F0  
           __end_of_myMain_Initialization 0D7C                            __size_of_getAD 001C  
                        ___lwdiv@quotient 005D                            _setPIRLED_Main 044B  
                                _CDS_Main 0712               __end_of_Temp_Initialization 0D82  
                       interrupt_function 0004                                ?_getCDS_AD 0059  
                                _LED_Main 0D7C                                 clear_ram0 0DB6  
                            _my_MainTimer 0F4D                                ?_getPIR_AD 0060  
     __end_of_DimmerLights_Initialization 0DA0               _DimmerLights_Initialization 0D99  
                          ?_getCmd_Status 0075                                  _GO_nDONE 00F9  
                       ??_Timeout_Counter 0057      __size_of_setDimmerIntr_ControlStatus 0016  
                    PIR_Main@TriggerValue 0066       __size_of_setDimmerIntr_DimmingValue 000C  
                                _PIR_Main 0027                                  _TMR1_ISR 0F67  
                                _TMR1_Set 0E16                              ??_getTemp_AD 0059  
                                _WDT_Main 0E63                          __size_of_ADC_Set 0007  
                          getPIR_AD@VRAD1 0066                     __size_of_setTemp_Main 007B  
                  __end_of_setPIRLED_Main 04BC            getMain_All_Error_Status@status 005B  
                             getAD@adcon0 0058                               getAD@adcon1 0057  
                    __end_of_WDT_Clearing 0004         __size_of_getMain_All_LightsStatus 000D  
               ?_getMain_All_LightsStatus 0075                  _setDimmerIntr_Dimming_RF 0EC1  
             setDimmerLights_OnOff@lights 005B                  _setDimmerIntr_Dimming_Sw 0E99  
                                _Fosc_Set 0D8E                          __size_of_WDT_Set 000E  
       __size_of_getMain_All_Error_Status 001A                 ?_getMain_All_Error_Status 0075  
                      __end_of_getTemp_AD 079E       __size_of_DimmerLights_SelectPointer 000C  
                                _SwDetect 0074                               ??_Temp_Main 0062  
                        getCmd_Status@cmd 0058                          setCmd_Status@cmd 0057  
           _getMain_All_Error_Status$2565 0059                                 setLED@led 005A  
                            _setTemp_Main 03D0                          __size_of___awdiv 005D  
                        __size_of___lwdiv 0040                  setDimmerLights_SwOn@idle 005A  
                        ??_LedPointSelect 0057                        _CDS_Initialization 0D85  
                       getTemp_AD@channel 005B                           ?_setPIRLED_Main 0075  
                         ___lwdiv@divisor 0057                       ?_CDS_Initialization 0075  
                         ___lwdiv@counter 005C                                  __ptext10 0EAD  
                                __ptext11 0E63                                  __ptext20 0E32  
                                __ptext12 0002                                  __ptext21 0E24  
                                __ptext13 0D82                                  __ptext30 068E  
                                __ptext22 0E16                                  __ptext14 03D0  
                                __ptext31 04BC                                  __ptext23 0F1B  
                                __ptext15 0D7F                                  __ptext40 0E52  
                                __ptext32 0F83                                  __ptext24 0D8E  
                                __ptext16 0D7A                                  __ptext41 079E  
                                __ptext33 0F33                                  __ptext25 0DA7  
                                __ptext17 0027                                  __ptext50 0DCA  
                                __ptext42 0E99                                  __ptext34 0DA0  
                                __ptext26 0D7C                                  __ptext18 0DAE  
                                __ptext51 0E41                                  __ptext43 0E08  
                                __ptext35 052D                                  __ptext27 044B  
                                __ptext19 0DFB                                  __ptext60 063D  
                                __ptext52 0DBE                                  __ptext44 0D89  
                                __ptext36 0746                                  __ptext28 0DE2  
                                __ptext61 07F0                                  __ptext53 0D99  
                                __ptext45 033C                                  __ptext37 0EED  
                                __ptext29 0E74                                  __ptext54 0D79  
                                __ptext46 0FDD                                  __ptext38 0ED7  
                                __ptext55 0E86                                  __ptext47 07C8  
                                __ptext39 0DEE                                  __ptext56 0712  
                                __ptext48 0DD6                                  __ptext57 0D85  
                                __ptext49 0EC1                                  __ptext58 0F03  
                                __ptext59 0F67                   ??_setLED_Initialization 005B  
                ??_getDimmerLights_Status 0059              __end_of_setDimmerLights_Main 058D  
                      _DimmerLights_IOC_1 07F0              __end_of_setDimmerLights_SwOn 1000  
              ??_DimmerLights_PIR_Control 005B                               ??_getCDS_AD 005A  
                           setLED@command 0059                             __size_of_main 0053  
      __size_of_DimmerIntr_Initialization 0013                           ??_getCmd_Status 0057  
                      _DimmerLights_TMR_1 063D                setDimmerLights_Main@lights 005E  
                             ??_getPIR_AD 0061                        _PIR_Initialization 0DFB  
                    ??_CDS_Initialization 0057                       ?_DimmerLights_IOC_1 0075  
                     ?_DimmerLights_TMR_1 0075               __size_of_Mcu_Initialization 000F  
                     ?_PIR_Initialization 0075                                  main@argc 0069  
                                main@argv 006B              setDimmerLights_Dimming@value 005C  
      __end_of_setDimmerIntr_DimmingValue 0DD6                _setDimmerIntr_DimmingValue 0DCA  
                    ??_DimmerLights_IOC_1 0075                      ??_DimmerLights_TMR_1 0075  
            ??_getDimmerIntr_DimmingValue 0057                   setDimmerLights_SwOff@sw 0059  
                    ??_PIR_Initialization 0057                                  intlevel1 0000  
                   setTemp_Main@SafeValue 005F    __end_of_setDimmerLights_Initialization 0D7A  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0D79  
              ?_setDimmerIntr_MaxmumValue 0057                   ?_setTemp_Initialization 0075  
                 __size_of_Exception_Main 0044                     __size_of_WDT_Clearing 0002  
             ?_getDimmerIntr_DimmingValue 0075          __size_of_setDimmerLights_Dimming 002A  
             __size_of_set_TimeoutCleared 0006                        __CFG_FOSC$INTOSCIO 0000  
                         _Timeout_Counter 0EAD           __size_of_getDimmerLights_Status 0011  
              __end_of_LED_Initialization 0DEE                     __end_of_getCDS_Status 0DB6  
          __end_of_setTemp_Initialization 0D7B                         getCDS_AD@channel1 005E  
                       getCDS_AD@channel2 0059  
