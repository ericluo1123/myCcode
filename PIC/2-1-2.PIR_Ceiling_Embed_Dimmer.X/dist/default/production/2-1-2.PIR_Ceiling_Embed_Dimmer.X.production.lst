

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Feb 26 14:38:10 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0186                     	;# 
   144  018C                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0096                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009F                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0186                     	;# 
   213  018C                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0096                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009F                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0186                     	;# 
   282  018C                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0096                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009F                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  0185                     	;# 
   350  0186                     	;# 
   351  018C                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  0089                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  008E                     	;# 
   394  008F                     	;# 
   395  0090                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0093                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0095                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0096                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009F                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  0185                     	;# 
   419  0186                     	;# 
   420  018C                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  008F                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0095                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0096                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009F                     	;# 
   479  0108                     	;# 
   480  0109                     	;# 
   481  010C                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0186                     	;# 
   489  018C                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0096                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009F                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010D                     	;# 
   554  010E                     	;# 
   555  010F                     	;# 
   556  0185                     	;# 
   557  0186                     	;# 
   558  018C                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0096                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009F                     	;# 
   617  0108                     	;# 
   618  0109                     	;# 
   619  010C                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0186                     	;# 
   627  018C                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0014                     	;# 
   649  0015                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  0081                     	;# 
   663  0085                     	;# 
   664  0086                     	;# 
   665  0087                     	;# 
   666  0089                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0096                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009F                     	;# 
   686  0108                     	;# 
   687  0109                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0186                     	;# 
   696  018C                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000E                     	;# 
   712  000F                     	;# 
   713  0010                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0014                     	;# 
   718  0015                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001D                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  0081                     	;# 
   732  0085                     	;# 
   733  0086                     	;# 
   734  0087                     	;# 
   735  0089                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0096                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009F                     	;# 
   755  0108                     	;# 
   756  0109                     	;# 
   757  010C                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010F                     	;# 
   763  0185                     	;# 
   764  0186                     	;# 
   765  018C                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0095                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0096                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009F                     	;# 
   824  0108                     	;# 
   825  0109                     	;# 
   826  010C                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0186                     	;# 
   834  018C                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000D                     	;# 
   848  000E                     	;# 
   849  000E                     	;# 
   850  000F                     	;# 
   851  0010                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0013                     	;# 
   855  0014                     	;# 
   856  0015                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0017                     	;# 
   860  0018                     	;# 
   861  0019                     	;# 
   862  001A                     	;# 
   863  001B                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  001D                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  0081                     	;# 
   870  0085                     	;# 
   871  0086                     	;# 
   872  0087                     	;# 
   873  0089                     	;# 
   874  008C                     	;# 
   875  008D                     	;# 
   876  008E                     	;# 
   877  008F                     	;# 
   878  0090                     	;# 
   879  0091                     	;# 
   880  0092                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0096                     	;# 
   888  0098                     	;# 
   889  0099                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009F                     	;# 
   893  0108                     	;# 
   894  0109                     	;# 
   895  010C                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010D                     	;# 
   899  010E                     	;# 
   900  010F                     	;# 
   901  0185                     	;# 
   902  0186                     	;# 
   903  018C                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0009                     	;# 
   913  000A                     	;# 
   914  000B                     	;# 
   915  000C                     	;# 
   916  000D                     	;# 
   917  000E                     	;# 
   918  000E                     	;# 
   919  000F                     	;# 
   920  0010                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0014                     	;# 
   925  0015                     	;# 
   926  0015                     	;# 
   927  0016                     	;# 
   928  0017                     	;# 
   929  0018                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001B                     	;# 
   934  001C                     	;# 
   935  001D                     	;# 
   936  001E                     	;# 
   937  001F                     	;# 
   938  0081                     	;# 
   939  0085                     	;# 
   940  0086                     	;# 
   941  0087                     	;# 
   942  0089                     	;# 
   943  008C                     	;# 
   944  008D                     	;# 
   945  008E                     	;# 
   946  008F                     	;# 
   947  0090                     	;# 
   948  0091                     	;# 
   949  0092                     	;# 
   950  0093                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0095                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009C                     	;# 
   960  009D                     	;# 
   961  009F                     	;# 
   962  0108                     	;# 
   963  0109                     	;# 
   964  010C                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  010F                     	;# 
   970  0185                     	;# 
   971  0186                     	;# 
   972  018C                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  000E                     	;# 
   988  000F                     	;# 
   989  0010                     	;# 
   990  0011                     	;# 
   991  0012                     	;# 
   992  0013                     	;# 
   993  0014                     	;# 
   994  0015                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  001D                     	;# 
  1005  001E                     	;# 
  1006  001F                     	;# 
  1007  0081                     	;# 
  1008  0085                     	;# 
  1009  0086                     	;# 
  1010  0087                     	;# 
  1011  0089                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  008F                     	;# 
  1016  0090                     	;# 
  1017  0091                     	;# 
  1018  0092                     	;# 
  1019  0093                     	;# 
  1020  0093                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0096                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009C                     	;# 
  1029  009D                     	;# 
  1030  009F                     	;# 
  1031  0108                     	;# 
  1032  0109                     	;# 
  1033  010C                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  010F                     	;# 
  1039  0185                     	;# 
  1040  0186                     	;# 
  1041  018C                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  000E                     	;# 
  1057  000F                     	;# 
  1058  0010                     	;# 
  1059  0011                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0015                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0017                     	;# 
  1067  0018                     	;# 
  1068  0019                     	;# 
  1069  001A                     	;# 
  1070  001B                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001D                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  0081                     	;# 
  1077  0085                     	;# 
  1078  0086                     	;# 
  1079  0087                     	;# 
  1080  0089                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  008F                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0093                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0095                     	;# 
  1093  0096                     	;# 
  1094  0096                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009F                     	;# 
  1100  0108                     	;# 
  1101  0109                     	;# 
  1102  010C                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  010F                     	;# 
  1108  0185                     	;# 
  1109  0186                     	;# 
  1110  018C                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000D                     	;# 
  1124  000E                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0015                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  001A                     	;# 
  1139  001B                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  0081                     	;# 
  1146  0085                     	;# 
  1147  0086                     	;# 
  1148  0087                     	;# 
  1149  0089                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008F                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0093                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0096                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009F                     	;# 
  1169  0108                     	;# 
  1170  0109                     	;# 
  1171  010C                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  0185                     	;# 
  1178  0186                     	;# 
  1179  018C                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000E                     	;# 
  1195  000F                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  0081                     	;# 
  1215  0085                     	;# 
  1216  0086                     	;# 
  1217  0087                     	;# 
  1218  0089                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008F                     	;# 
  1223  0090                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0096                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009F                     	;# 
  1238  0108                     	;# 
  1239  0109                     	;# 
  1240  010C                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0185                     	;# 
  1247  0186                     	;# 
  1248  018C                     	;# 
  1249  0000                     	;# 
  1250  0001                     	;# 
  1251  0002                     	;# 
  1252  0003                     	;# 
  1253  0004                     	;# 
  1254  0005                     	;# 
  1255  0006                     	;# 
  1256  0007                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  000E                     	;# 
  1264  000F                     	;# 
  1265  0010                     	;# 
  1266  0011                     	;# 
  1267  0012                     	;# 
  1268  0013                     	;# 
  1269  0014                     	;# 
  1270  0015                     	;# 
  1271  0015                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001B                     	;# 
  1279  001C                     	;# 
  1280  001D                     	;# 
  1281  001E                     	;# 
  1282  001F                     	;# 
  1283  0081                     	;# 
  1284  0085                     	;# 
  1285  0086                     	;# 
  1286  0087                     	;# 
  1287  0089                     	;# 
  1288  008C                     	;# 
  1289  008D                     	;# 
  1290  008E                     	;# 
  1291  008F                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0093                     	;# 
  1297  0094                     	;# 
  1298  0095                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0096                     	;# 
  1302  0098                     	;# 
  1303  0099                     	;# 
  1304  009C                     	;# 
  1305  009D                     	;# 
  1306  009F                     	;# 
  1307  0108                     	;# 
  1308  0109                     	;# 
  1309  010C                     	;# 
  1310  010C                     	;# 
  1311  010D                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010F                     	;# 
  1315  0185                     	;# 
  1316  0186                     	;# 
  1317  018C                     	;# 
  1318  001F                     _ADCON0	set	31
  1319  001E                     _ADRES	set	30
  1320  0005                     _PORTA	set	5
  1321  0006                     _PORTB	set	6
  1322  0007                     _PORTC	set	7
  1323  0010                     _T1CON	set	16
  1324  000F                     _TMR1H	set	15
  1325  000E                     _TMR1L	set	14
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002F                     _RA7	set	47
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0060                     _TMR1IF	set	96
  1335  009F                     _ADCON1	set	159
  1336  009D                     _FVRCON	set	157
  1337  0090                     _OSCCON	set	144
  1338  0085                     _TRISA	set	133
  1339  0086                     _TRISB	set	134
  1340  0087                     _TRISC	set	135
  1341  0095                     _WPUB	set	149
  1342  0408                     _PS0	set	1032
  1343  0409                     _PS1	set	1033
  1344  040A                     _PS2	set	1034
  1345  040B                     _PSA	set	1035
  1346  0460                     _TMR1IE	set	1120
  1347  0185                     _ANSELA	set	389
  1348  0186                     _ANSELB	set	390
  1349                           
  1350                           	psect	text0
  1351  0000                     __ptext0:	
  1352                           ; #config settings
  1353                           
  1354                           
  1355                           ;psect for function _DimmerLights_IOC_1
  1356  0000                     
  1357                           	psect	cinit
  1358  0013                     start_initialization:	
  1359  0013                     __initialization:	
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1363  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1364  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1365  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1366  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369  0018  1383               	bcf	3,7	;select IRP bank0
  1370  0019  3020               	movlw	low __pbssBANK0
  1371  001A  0084               	movwf	4
  1372  001B  3057               	movlw	low (__pbssBANK0+55)
  1373  001C  158A  25C2  118A   	fcall	clear_ram0
  1374                           
  1375                           ; Clear objects allocated to BANK1
  1376  001F  30A0               	movlw	low __pbssBANK1
  1377  0020  0084               	movwf	4
  1378  0021  30D2               	movlw	low (__pbssBANK1+50)
  1379  0022  158A  25C2         	fcall	clear_ram0
  1380  0024                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0024                     __end_of__initialization:	
  1384  0024  0183               	clrf	3
  1385  0025  118A  2DEA         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0070                     __pbssCOMMON:	
  1389  0070                     _Cmd:	
  1390  0070                     	ds	1
  1391  0071                     _DimmerIntr:	
  1392  0071                     	ds	1
  1393  0072                     _DimmerLights:	
  1394  0072                     	ds	1
  1395  0073                     _LED:	
  1396  0073                     	ds	1
  1397  0074                     _SwDetect:	
  1398  0074                     	ds	1
  1399                           
  1400                           	psect	bssBANK0
  1401  0020                     __pbssBANK0:	
  1402  0020                     _DimmerIntr1:	
  1403  0020                     	ds	12
  1404  002C                     _Dimmer:	
  1405  002C                     	ds	5
  1406  0031                     _myMain:	
  1407  0031                     	ds	5
  1408  0036                     _PIRLED:	
  1409  0036                     	ds	4
  1410  003A                     __CDS:	
  1411  003A                     	ds	4
  1412  003E                     _Timer1:	
  1413  003E                     	ds	3
  1414  0041                     _WDT:	
  1415  0041                     	ds	2
  1416  0043                     _Light:	
  1417  0043                     	ds	1
  1418  0044                     _Temp:	
  1419  0044                     	ds	7
  1420  004B                     _VarErrLED:	
  1421  004B                     	ds	4
  1422  004F                     _VarLED1:	
  1423  004F                     	ds	4
  1424  0053                     _VarLED2:	
  1425  0053                     	ds	4
  1426                           
  1427                           	psect	bssBANK1
  1428  00A0                     __pbssBANK1:	
  1429  00A0                     __PIR:	
  1430  00A0                     	ds	42
  1431  00CA                     _DimmerLights1:	
  1432  00CA                     	ds	8
  1433                           
  1434                           	psect	clrtext
  1435  0DC2                     clear_ram0:	
  1436                           ;	Called with FSR containing the base address, and
  1437                           ;	W with the last address+1
  1438                           
  1439  0DC2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1440  0DC3                     clrloop0:	
  1441  0DC3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1442  0DC4  0A84               	incf	4,f	;increment pointer
  1443  0DC5  0604               	xorwf	4,w	;XOR with final address
  1444  0DC6  1903               	btfsc	3,2	;have we reached the end yet?
  1445  0DC7  3400               	retlw	0	;all done for this memory range, return
  1446  0DC8  0604               	xorwf	4,w	;XOR again to restore value
  1447  0DC9  2DC3               	goto	clrloop0	;do the next byte
  1448                           
  1449                           	psect	cstackCOMMON
  1450  0075                     __pcstackCOMMON:	
  1451  0075                     ?_setDimmerLights_Initialization:	
  1452  0075                     ?_setDimmerLights_Main:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     ?_DimmerLights_PIR_Control:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0075                     ?_setLED_Initialization:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0075                     ?_setPIRLED_Main:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0075                     ?_Fosc_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0075                     ?_IO_Set:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0075                     ?_TMR1_Set:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0075                     ?_ADC_Set:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0075                     ?_WDT_Set:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0075                     ?_TMR1_ISR:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0075                     ?_Timeout_Counter:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0075                     ?_set_TimeoutCleared:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0075                     ?_WDT_Clearing:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0075                     ?_myMain_Initialization:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0075                     ?_Temp_Initialization:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0075                     ?_PIR_Initialization:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0075                     ?_getTemp_AD:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0075                     ?_my_MainTimer:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0075                     ?_Temp_Main:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0075                     ?_PIR_Main:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0075                     ?_Exception_Main:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0075                     ?_setTemp_Initialization:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0075                     ?_setTemp_Main:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0075                     ?_CDS_Initialization:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0075                     ?_CDS_Main:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0075                     ?_DimmerIntr_Initialization:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0075                     ?_DimmerLights_SelectPointer:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0075                     ?_DimmerLights_Initialization:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0075                     ?_setDimmerLights_SwOn:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0075                     ?_setDimmerLights_SwOff:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0075                     ?_DimmerLights_Main:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0075                     ?_DimmerLights_TMR_1:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0075                     ??_DimmerLights_TMR_1:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0075                     ?_DimmerLights_IOC_1:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0075                     ??_DimmerLights_IOC_1:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0075                     ?_LedPointSelect:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0075                     ?_LED_Initialization:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0075                     ?_LED_Main:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0075                     ?_Mcu_Initialization:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0075                     ?_ISR:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0075                     ?_WDT_Main:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0075                     ?_getDimmerLights_Allow_Condition:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0075                     ?_getMain_All_LightsStatus:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0075                     ?_getCmd_Status:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0075                     ?_getCDS_Status:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0075                     ?_getDimmerIntr_DimmingValue:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0075                     ?_getDimmerLights_Status:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0075                     ?_getMain_All_Error_Status:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0075                     setDimmerLights_Initialization@lights:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0075                     getDimmerLights_Allow_Condition@lights:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x0
  1604  0075                     	ds	1
  1605  0076                     ??_TMR1_ISR:	
  1606  0076                     ??_ISR:	
  1607                           ; 0 bytes @ 0x1
  1608                           
  1609                           
  1610                           ; 0 bytes @ 0x1
  1611  0076                     	ds	4
  1612                           
  1613                           	psect	cstackBANK0
  1614  0057                     __pcstackBANK0:	
  1615  0057                     ??_setDimmerLights_Initialization:	
  1616  0057                     ??_getDimmerLights_Allow_Condition:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0057                     ??_getMain_All_LightsStatus:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0057                     ??_getCmd_Status:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0057                     ?_setCmd_Status:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0057                     ??_Fosc_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0057                     ??_IO_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0057                     ??_TMR1_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0057                     ??_ADC_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0057                     ??_WDT_Set:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0057                     ??_Timeout_Counter:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0057                     ??_set_TimeoutCleared:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0057                     ??_WDT_Clearing:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0057                     ??_myMain_Initialization:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0057                     ??_Temp_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0057                     ??_PIR_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0057                     ??_my_MainTimer:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0057                     ??_setTemp_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0057                     ??_CDS_Initialization:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0057                     ??_CDS_Main:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0057                     ??_getCDS_Status:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0057                     ??_DimmerIntr_Initialization:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0057                     ?_setDimmerIntr_ControlStatus:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0057                     ?_setDimmerIntr_DimmingValue:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0057                     ??_getDimmerIntr_DimmingValue:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0057                     ?_setDimmerIntr_MaxmumValue:	
  1689                           ; 0 bytes @ 0x0
  1690                           
  1691  0057                     ?_setDimmerIntr_Dimming_Sw:	
  1692                           ; 0 bytes @ 0x0
  1693                           
  1694  0057                     ?_setDimmerIntr_Dimming_RF:	
  1695                           ; 0 bytes @ 0x0
  1696                           
  1697  0057                     ??_DimmerLights_SelectPointer:	
  1698                           ; 0 bytes @ 0x0
  1699                           
  1700  0057                     ??_LedPointSelect:	
  1701                           ; 0 bytes @ 0x0
  1702                           
  1703  0057                     ??_WDT_Main:	
  1704                           ; 0 bytes @ 0x0
  1705                           
  1706  0057                     ??_getMain_All_Error_Status:	
  1707                           ; 0 bytes @ 0x0
  1708                           
  1709  0057                     ?_getAD:	
  1710                           ; 0 bytes @ 0x0
  1711                           
  1712  0057                     ?___awdiv:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0057                     ?___lwdiv:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718  0057                     getCDS_Status@status:	
  1719                           ; 2 bytes @ 0x0
  1720                           
  1721  0057                     setDimmerIntr_ControlStatus@command:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0057                     setDimmerIntr_DimmingValue@value:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0057                     setDimmerIntr_MaxmumValue@value:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0057                     setDimmerIntr_Dimming_Sw@command:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0057                     setDimmerIntr_Dimming_RF@command:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0057                     getDimmerLights_Allow_Condition@allow:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0057                     getAD@adcon1:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0057                     getMain_All_LightsStatus@status:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0057                     setCmd_Status@cmd:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0057                     getCmd_Status@number:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0057                     ___awdiv@divisor:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0057                     ___lwdiv@divisor:	
  1755                           ; 2 bytes @ 0x0
  1756                           
  1757                           
  1758                           ; 2 bytes @ 0x0
  1759  0057                     	ds	1
  1760  0058                     ??_getAD:	
  1761  0058                     ??_setCmd_Status:	
  1762                           ; 0 bytes @ 0x1
  1763                           
  1764  0058                     ??_setDimmerIntr_ControlStatus:	
  1765                           ; 0 bytes @ 0x1
  1766                           
  1767  0058                     ??_setDimmerIntr_DimmingValue:	
  1768                           ; 0 bytes @ 0x1
  1769                           
  1770  0058                     ??_setDimmerIntr_MaxmumValue:	
  1771                           ; 0 bytes @ 0x1
  1772                           
  1773  0058                     ??_setDimmerIntr_Dimming_Sw:	
  1774                           ; 0 bytes @ 0x1
  1775                           
  1776  0058                     ??_setDimmerIntr_Dimming_RF:	
  1777                           ; 0 bytes @ 0x1
  1778                           
  1779  0058                     ??_DimmerLights_Initialization:	
  1780                           ; 0 bytes @ 0x1
  1781                           
  1782  0058                     ??_Mcu_Initialization:	
  1783                           ; 0 bytes @ 0x1
  1784                           
  1785  0058                     getDimmerIntr_DimmingValue@lights:	
  1786                           ; 0 bytes @ 0x1
  1787                           
  1788  0058                     DimmerLights_SelectPointer@lights:	
  1789                           ; 1 bytes @ 0x1
  1790                           
  1791  0058                     LedPointSelect@led:	
  1792                           ; 1 bytes @ 0x1
  1793                           
  1794  0058                     getAD@adcon0:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797  0058                     getMain_All_Error_Status@command:	
  1798                           ; 1 bytes @ 0x1
  1799                           
  1800  0058                     getCmd_Status@cmd:	
  1801                           ; 1 bytes @ 0x1
  1802                           
  1803                           
  1804                           ; 1 bytes @ 0x1
  1805  0058                     	ds	1
  1806  0059                     ?_setLED:	
  1807  0059                     ??_getTemp_AD:	
  1808                           ; 0 bytes @ 0x2
  1809                           
  1810  0059                     ?_getCDS_AD:	
  1811                           ; 0 bytes @ 0x2
  1812                           
  1813  0059                     ??_setDimmerLights_SwOn:	
  1814                           ; 0 bytes @ 0x2
  1815                           
  1816  0059                     ??_setDimmerLights_SwOff:	
  1817                           ; 0 bytes @ 0x2
  1818                           
  1819  0059                     ??_getDimmerLights_Status:	
  1820                           ; 0 bytes @ 0x2
  1821                           
  1822  0059                     getCDS_AD@channel2:	
  1823                           ; 0 bytes @ 0x2
  1824                           
  1825  0059                     setDimmerIntr_ControlStatus@lights:	
  1826                           ; 1 bytes @ 0x2
  1827                           
  1828  0059                     setDimmerIntr_DimmingValue@lights:	
  1829                           ; 1 bytes @ 0x2
  1830                           
  1831  0059                     getDimmerIntr_DimmingValue@value:	
  1832                           ; 1 bytes @ 0x2
  1833                           
  1834  0059                     setDimmerIntr_MaxmumValue@lights:	
  1835                           ; 1 bytes @ 0x2
  1836                           
  1837  0059                     setDimmerIntr_Dimming_Sw@lights:	
  1838                           ; 1 bytes @ 0x2
  1839                           
  1840  0059                     setDimmerIntr_Dimming_RF@lights:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843  0059                     setDimmerLights_SwOn@sw:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846  0059                     setDimmerLights_SwOff@sw:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849  0059                     getDimmerLights_Status@lights:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852  0059                     setLED@command:	
  1853                           ; 1 bytes @ 0x2
  1854                           
  1855  0059                     setCmd_Status@number:	
  1856                           ; 1 bytes @ 0x2
  1857                           
  1858  0059                     _getMain_All_Error_Status$2565:	
  1859                           ; 1 bytes @ 0x2
  1860                           
  1861  0059                     ___awdiv@dividend:	
  1862                           ; 2 bytes @ 0x2
  1863                           
  1864  0059                     ___lwdiv@dividend:	
  1865                           ; 2 bytes @ 0x2
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x2
  1869  0059                     	ds	1
  1870  005A                     ?_setDimmerLights_OnOff:	
  1871  005A                     ?_setDimmerLights_Dimming:	
  1872                           ; 0 bytes @ 0x3
  1873                           
  1874  005A                     ??_setLED:	
  1875                           ; 0 bytes @ 0x3
  1876                           
  1877  005A                     ??_getCDS_AD:	
  1878                           ; 0 bytes @ 0x3
  1879                           
  1880  005A                     setDimmerLights_SwOn@idle:	
  1881                           ; 0 bytes @ 0x3
  1882                           
  1883  005A                     setDimmerLights_OnOff@command:	
  1884                           ; 1 bytes @ 0x3
  1885                           
  1886  005A                     setDimmerLights_Dimming@status:	
  1887                           ; 1 bytes @ 0x3
  1888                           
  1889  005A                     getDimmerLights_Status@status:	
  1890                           ; 1 bytes @ 0x3
  1891                           
  1892  005A                     setLED@led:	
  1893                           ; 1 bytes @ 0x3
  1894                           
  1895                           
  1896                           ; 1 bytes @ 0x3
  1897  005A                     	ds	1
  1898  005B                     ??_DimmerLights_PIR_Control:	
  1899  005B                     ??_setDimmerLights_OnOff:	
  1900                           ; 0 bytes @ 0x4
  1901                           
  1902  005B                     ??_setDimmerLights_Dimming:	
  1903                           ; 0 bytes @ 0x4
  1904                           
  1905  005B                     ??_setLED_Initialization:	
  1906                           ; 0 bytes @ 0x4
  1907                           
  1908  005B                     ??_setPIRLED_Main:	
  1909                           ; 0 bytes @ 0x4
  1910                           
  1911  005B                     ??___awdiv:	
  1912                           ; 0 bytes @ 0x4
  1913                           
  1914  005B                     ??___lwdiv:	
  1915                           ; 0 bytes @ 0x4
  1916                           
  1917  005B                     setDimmerLights_OnOff@lights:	
  1918                           ; 0 bytes @ 0x4
  1919                           
  1920  005B                     setLED_Initialization@led:	
  1921                           ; 1 bytes @ 0x4
  1922                           
  1923  005B                     getMain_All_Error_Status@status:	
  1924                           ; 1 bytes @ 0x4
  1925                           
  1926  005B                     getTemp_AD@channel:	
  1927                           ; 1 bytes @ 0x4
  1928                           
  1929                           
  1930                           ; 1 bytes @ 0x4
  1931  005B                     	ds	1
  1932  005C                     ??_PIR_Main:	
  1933  005C                     ??_Exception_Main:	
  1934                           ; 0 bytes @ 0x5
  1935                           
  1936  005C                     ??_setTemp_Main:	
  1937                           ; 0 bytes @ 0x5
  1938                           
  1939  005C                     ??_LED_Initialization:	
  1940                           ; 0 bytes @ 0x5
  1941                           
  1942  005C                     getCDS_AD@i:	
  1943                           ; 0 bytes @ 0x5
  1944                           
  1945  005C                     setDimmerLights_Dimming@value:	
  1946                           ; 1 bytes @ 0x5
  1947                           
  1948  005C                     setPIRLED_Main@count:	
  1949                           ; 1 bytes @ 0x5
  1950                           
  1951  005C                     getTemp_AD@ADRES:	
  1952                           ; 1 bytes @ 0x5
  1953                           
  1954  005C                     ___awdiv@counter:	
  1955                           ; 1 bytes @ 0x5
  1956                           
  1957  005C                     ___lwdiv@counter:	
  1958                           ; 1 bytes @ 0x5
  1959                           
  1960                           
  1961                           ; 1 bytes @ 0x5
  1962  005C                     	ds	1
  1963  005D                     ??_LED_Main:	
  1964  005D                     getCDS_AD@j:	
  1965                           ; 0 bytes @ 0x6
  1966                           
  1967  005D                     setDimmerLights_Dimming@lights:	
  1968                           ; 1 bytes @ 0x6
  1969                           
  1970  005D                     Exception_Main@lights:	
  1971                           ; 1 bytes @ 0x6
  1972                           
  1973  005D                     setTemp_Main@error:	
  1974                           ; 1 bytes @ 0x6
  1975                           
  1976  005D                     ___awdiv@sign:	
  1977                           ; 1 bytes @ 0x6
  1978                           
  1979  005D                     ___lwdiv@quotient:	
  1980                           ; 1 bytes @ 0x6
  1981                           
  1982                           
  1983                           ; 2 bytes @ 0x6
  1984  005D                     	ds	1
  1985  005E                     ??_setDimmerLights_Main:	
  1986  005E                     getCDS_AD@channel1:	
  1987                           ; 0 bytes @ 0x7
  1988                           
  1989  005E                     setDimmerLights_Main@lights:	
  1990                           ; 1 bytes @ 0x7
  1991                           
  1992  005E                     Exception_Main@count:	
  1993                           ; 1 bytes @ 0x7
  1994                           
  1995  005E                     setTemp_Main@TempGO:	
  1996                           ; 1 bytes @ 0x7
  1997                           
  1998  005E                     ___awdiv@quotient:	
  1999                           ; 1 bytes @ 0x7
  2000                           
  2001                           
  2002                           ; 2 bytes @ 0x7
  2003  005E                     	ds	1
  2004  005F                     ??_DimmerLights_Main:	
  2005  005F                     Exception_Main@status:	
  2006                           ; 0 bytes @ 0x8
  2007                           
  2008  005F                     setTemp_Main@SafeValue:	
  2009                           ; 1 bytes @ 0x8
  2010                           
  2011                           
  2012                           ; 1 bytes @ 0x8
  2013  005F                     	ds	1
  2014  0060                     ?_getPIR_AD:	
  2015  0060                     Exception_Main@error:	
  2016                           ; 0 bytes @ 0x9
  2017                           
  2018  0060                     setTemp_Main@DangerValue:	
  2019                           ; 1 bytes @ 0x9
  2020                           
  2021  0060                     getPIR_AD@channel2:	
  2022                           ; 1 bytes @ 0x9
  2023                           
  2024                           
  2025                           ; 1 bytes @ 0x9
  2026  0060                     	ds	1
  2027  0061                     ??_getPIR_AD:	
  2028  0061                     setTemp_Main@AD:	
  2029                           ; 0 bytes @ 0xA
  2030                           
  2031  0061                     PIR_Main@error:	
  2032                           ; 1 bytes @ 0xA
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0xA
  2036  0061                     	ds	1
  2037  0062                     ??_Temp_Main:	
  2038  0062                     PIR_Main@cds:	
  2039                           ; 0 bytes @ 0xB
  2040                           
  2041                           
  2042                           ; 1 bytes @ 0xB
  2043  0062                     	ds	1
  2044  0063                     PIR_Main@Enable_Switch:	
  2045                           
  2046                           ; 1 bytes @ 0xC
  2047  0063                     	ds	1
  2048  0064                     getPIR_AD@j:	
  2049  0064                     _PIR_Main$3333:	
  2050                           ; 1 bytes @ 0xD
  2051                           
  2052                           
  2053                           ; 2 bytes @ 0xD
  2054  0064                     	ds	1
  2055  0065                     getPIR_AD@channel1:	
  2056                           
  2057                           ; 1 bytes @ 0xE
  2058  0065                     	ds	1
  2059  0066                     PIR_Main@TriggerValue:	
  2060  0066                     getPIR_AD@VRAD1:	
  2061                           ; 1 bytes @ 0xF
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0xF
  2065  0066                     	ds	1
  2066  0067                     PIR_Main@LightsStatus:	
  2067  0067                     getPIR_AD@VRAD:	
  2068                           ; 1 bytes @ 0x10
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x10
  2072  0067                     	ds	1
  2073  0068                     getPIR_AD@i:	
  2074                           
  2075                           ; 1 bytes @ 0x11
  2076  0068                     	ds	1
  2077  0069                     ?_main:	
  2078  0069                     main@argc:	
  2079                           ; 2 bytes @ 0x12
  2080                           
  2081                           
  2082                           ; 2 bytes @ 0x12
  2083  0069                     	ds	2
  2084  006B                     main@argv:	
  2085                           
  2086                           ; 2 bytes @ 0x14
  2087  006B                     	ds	2
  2088  006D                     ??_main:	
  2089                           
  2090                           ; 0 bytes @ 0x16
  2091  006D                     	ds	1
  2092                           
  2093                           	psect	maintext
  2094  05EA                     __pmaintext:	
  2095 ;;
  2096 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2097 ;;
  2098 ;; *************** function _main *****************
  2099 ;; Defined at:
  2100 ;;		line 7 in file "../src/Main_B1.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  argc            2   18[BANK0 ] int 
  2103 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2   18[BANK0 ] int 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 17F/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2115 ;;      Params:         0       4       0       0
  2116 ;;      Locals:         0       0       0       0
  2117 ;;      Temps:          0       1       0       0
  2118 ;;      Totals:         0       5       0       0
  2119 ;;Total ram usage:        5 bytes
  2120 ;; Hardware stack levels required when called:    7
  2121 ;; This function calls:
  2122 ;;		_CDS_Initialization
  2123 ;;		_CDS_Main
  2124 ;;		_DimmerLights_Initialization
  2125 ;;		_DimmerLights_Main
  2126 ;;		_Exception_Main
  2127 ;;		_LED_Initialization
  2128 ;;		_LED_Main
  2129 ;;		_Mcu_Initialization
  2130 ;;		_PIR_Initialization
  2131 ;;		_PIR_Main
  2132 ;;		_Temp_Initialization
  2133 ;;		_Temp_Main
  2134 ;;		_WDT_Main
  2135 ;;		_getCDS_AD
  2136 ;;		_getPIR_AD
  2137 ;;		_getTemp_AD
  2138 ;;		_myMain_Initialization
  2139 ;;		_my_MainTimer
  2140 ;; This function is called by:
  2141 ;;		Startup code after reset
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _main
  2147  05EA                     _main:	
  2148                           
  2149                           ;Main_B1.c: 8: myMain_Initialization();
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2153  05EA  158A  2587  118A   	fcall	_myMain_Initialization
  2154                           
  2155                           ;Main_B1.c: 9: Mcu_Initialization();
  2156  05ED  158A  263E  118A   	fcall	_Mcu_Initialization
  2157                           
  2158                           ;Main_B1.c: 10: ;;
  2159                           ;Main_B1.c: 11: LED_Initialization();
  2160  05F0  158A  25EE  118A   	fcall	_LED_Initialization
  2161                           
  2162                           ;Main_B1.c: 12: ;;
  2163                           ;Main_B1.c: 14: ;;
  2164                           ;Main_B1.c: 15: Temp_Initialization();
  2165  05F3  158A  258B  118A   	fcall	_Temp_Initialization
  2166                           
  2167                           ;Main_B1.c: 16: ;;
  2168                           ;Main_B1.c: 17: ;;
  2169                           ;Main_B1.c: 18: ;;
  2170                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2171  05F6  158A  25A5  118A   	fcall	_DimmerLights_Initialization
  2172                           
  2173                           ;Main_B1.c: 21: ;;
  2174                           ;Main_B1.c: 22: CDS_Initialization();
  2175  05F9  158A  2591  118A   	fcall	_CDS_Initialization
  2176                           
  2177                           ;Main_B1.c: 23: PIR_Initialization();
  2178  05FC  158A  2607  118A   	fcall	_PIR_Initialization
  2179  05FF                     l4951:	
  2180                           ;Main_B1.c: 24: ;;
  2181                           ;Main_B1.c: 25: ;;
  2182                           ;Main_B1.c: 26: ;;
  2183                           ;Main_B1.c: 27: ;;
  2184                           ;Main_B1.c: 28: ;;
  2185                           ;Main_B1.c: 30: while (1) {
  2186                           
  2187                           
  2188                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2189  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0601  1C31               	btfss	_myMain,0
  2192  0602  2E1B               	goto	l4957
  2193                           
  2194                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2195  0603  3011               	movlw	17
  2196  0604  158A  27BF  118A   	fcall	_getTemp_AD
  2197                           
  2198                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2199  0607  3031               	movlw	49
  2200  0608  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0609  1303               	bcf	3,6	;RP1=0, select bank0
  2202  060A  00ED               	movwf	??_main
  2203  060B  086D               	movf	??_main,w
  2204  060C  00D9               	movwf	getCDS_AD@channel2
  2205  060D  3009               	movlw	9
  2206  060E  158A  27DE  118A   	fcall	_getCDS_AD
  2207                           
  2208                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2209  0611  300D               	movlw	13
  2210  0612  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0613  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0614  00ED               	movwf	??_main
  2213  0615  086D               	movf	??_main,w
  2214  0616  00E0               	movwf	getPIR_AD@channel2
  2215  0617  3005               	movlw	5
  2216  0618  118A  220E  118A   	fcall	_getPIR_AD
  2217  061B                     l4957:	
  2218                           
  2219                           ;Main_B1.c: 57: }
  2220                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2221  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2222  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2223  061D  1C3E               	btfss	_Timer1,0
  2224  061E  2DFF               	goto	l4951
  2225                           
  2226                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2227  061F  103E               	bcf	_Timer1,0
  2228                           
  2229                           ;Main_B1.c: 96: my_MainTimer();
  2230  0620  158A  2751  118A   	fcall	_my_MainTimer
  2231                           
  2232                           ;Main_B1.c: 97: WDT_Main();
  2233  0623  158A  267F  118A   	fcall	_WDT_Main
  2234                           
  2235                           ;Main_B1.c: 98: ;;
  2236                           ;Main_B1.c: 99: ;;
  2237                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2238  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0628  1C31               	btfss	_myMain,0
  2241  0629  2DFF               	goto	l4951
  2242                           
  2243                           ;Main_B1.c: 101: ;;
  2244                           ;Main_B1.c: 103: LED_Main();
  2245  062A  158A  2588  118A   	fcall	_LED_Main
  2246                           
  2247                           ;Main_B1.c: 104: ;;
  2248                           ;Main_B1.c: 106: ;;
  2249                           ;Main_B1.c: 107: Temp_Main();
  2250  062D  158A  258E  118A   	fcall	_Temp_Main
  2251                           
  2252                           ;Main_B1.c: 108: ;;
  2253                           ;Main_B1.c: 109: ;;
  2254                           ;Main_B1.c: 111: ;;
  2255                           ;Main_B1.c: 112: DimmerLights_Main();
  2256  0630  158A  25AC  118A   	fcall	_DimmerLights_Main
  2257                           
  2258                           ;Main_B1.c: 113: ;;
  2259                           ;Main_B1.c: 114: CDS_Main();
  2260  0633  118A  2712  118A   	fcall	_CDS_Main
  2261                           
  2262                           ;Main_B1.c: 115: PIR_Main();
  2263  0636  118A  2027  118A   	fcall	_PIR_Main
  2264                           
  2265                           ;Main_B1.c: 117: ;;
  2266                           ;Main_B1.c: 118: ;;
  2267                           ;Main_B1.c: 119: ;;
  2268                           ;Main_B1.c: 120: ;;
  2269                           ;Main_B1.c: 121: Exception_Main();
  2270  0639  118A  268E  118A   	fcall	_Exception_Main
  2271  063C  2DFF               	goto	l4951
  2272  063D                     __end_of_main:	
  2273                           ;Main_B1.c: 128: }
  2274                           ;Main_B1.c: 129: }
  2275                           ;Main_B1.c: 163: }
  2276                           ;Main_B1.c: 164: return (0);
  2277                           ;	Return value of _main is never used
  2278                           
  2279                           
  2280                           	psect	text1
  2281  0F51                     __ptext1:	
  2282 ;; *************** function _my_MainTimer *****************
  2283 ;; Defined at:
  2284 ;;		line 185 in file "../src/Main_B1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2298 ;;      Params:         0       0       0       0
  2299 ;;      Locals:         0       0       0       0
  2300 ;;      Temps:          0       1       0       0
  2301 ;;      Totals:         0       1       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _my_MainTimer
  2314  0F51                     _my_MainTimer:	
  2315                           
  2316                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2320  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0F53  1831               	btfsc	_myMain,0
  2323  0F54  2F61               	goto	l4711
  2324                           
  2325                           ;Main_B1.c: 188: myMain.PowerCount++;
  2326  0F55  3001               	movlw	1
  2327  0F56  00D7               	movwf	??_my_MainTimer
  2328  0F57  0857               	movf	??_my_MainTimer,w
  2329  0F58  07B2               	addwf	_myMain+1,f
  2330                           
  2331                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2332  0F59  0832               	movf	_myMain+1,w
  2333  0F5A  3A4B               	xorlw	75
  2334  0F5B  1D03               	skipz
  2335  0F5C  0008               	return
  2336                           
  2337                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2338  0F5D  01B2               	clrf	_myMain+1
  2339                           
  2340                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2341  0F5E  1431               	bsf	_myMain,0
  2342                           
  2343                           ;Main_B1.c: 196: ;;
  2344                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2345  0F5F  1631               	bsf	_myMain,4
  2346                           
  2347                           ;Main_B1.c: 206: }
  2348                           ;Main_B1.c: 207: } else {
  2349  0F60  0008               	return
  2350  0F61                     l4711:	
  2351                           
  2352                           ;Main_B1.c: 208: myMain.PowerCount++;
  2353  0F61  3001               	movlw	1
  2354  0F62  00D7               	movwf	??_my_MainTimer
  2355  0F63  0857               	movf	??_my_MainTimer,w
  2356  0F64  07B2               	addwf	_myMain+1,f
  2357                           
  2358                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2359  0F65  0832               	movf	_myMain+1,w
  2360  0F66  3A32               	xorlw	50
  2361  0F67  1D03               	skipz
  2362  0F68  0008               	return
  2363                           
  2364                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2365  0F69  01B2               	clrf	_myMain+1
  2366  0F6A  0008               	return
  2367  0F6B                     __end_of_my_MainTimer:	
  2368                           
  2369                           	psect	text2
  2370  0D87                     __ptext2:	
  2371 ;; *************** function _myMain_Initialization *****************
  2372 ;; Defined at:
  2373 ;;		line 170 in file "../src/Main_B1.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		None
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         0       0       0       0
  2388 ;;      Locals:         0       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    3
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _myMain_Initialization
  2403  0D87                     _myMain_Initialization:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _myMain_Initialization: []
  2407  0D87  0008               	return
  2408  0D88                     __end_of_myMain_Initialization:	
  2409                           
  2410                           	psect	text3
  2411  0FBF                     __ptext3:	
  2412 ;; *************** function _getTemp_AD *****************
  2413 ;; Defined at:
  2414 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  channel         1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  channel         1    4[BANK0 ] unsigned char 
  2419 ;;  ADRES           1    5[BANK0 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2429 ;;      Params:         0       0       0       0
  2430 ;;      Locals:         0       2       0       0
  2431 ;;      Temps:          0       2       0       0
  2432 ;;      Totals:         0       4       0       0
  2433 ;;Total ram usage:        4 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    5
  2436 ;; This function calls:
  2437 ;;		_getAD
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _getTemp_AD
  2445  0FBF                     _getTemp_AD:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2449                           ;getTemp_AD@channel stored from wreg
  2450  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0FC1  00DB               	movwf	getTemp_AD@channel
  2453                           
  2454                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2455  0FC2  01DC               	clrf	getTemp_AD@ADRES
  2456                           
  2457                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2458  0FC3  1D44               	btfss	_Temp,2
  2459  0FC4  0008               	return
  2460                           
  2461                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2462  0FC5  3070               	movlw	112
  2463  0FC6  00D9               	movwf	??_getTemp_AD
  2464  0FC7  0859               	movf	??_getTemp_AD,w
  2465  0FC8  00D7               	movwf	getAD@adcon1
  2466  0FC9  085B               	movf	getTemp_AD@channel,w
  2467  0FCA  158A  27A3  158A   	fcall	_getAD
  2468  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0FCF  00DA               	movwf	??_getTemp_AD+1
  2471  0FD0  085A               	movf	??_getTemp_AD+1,w
  2472  0FD1  00DC               	movwf	getTemp_AD@ADRES
  2473                           
  2474                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2475  0FD2  085C               	movf	getTemp_AD@ADRES,w
  2476  0FD3  1903               	btfsc	3,2
  2477  0FD4  0008               	return
  2478                           
  2479                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2480  0FD5  085C               	movf	getTemp_AD@ADRES,w
  2481  0FD6  024A               	subwf	_Temp+6,w
  2482  0FD7  1803               	skipnc
  2483  0FD8  0008               	return
  2484                           
  2485                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2486  0FD9  085C               	movf	getTemp_AD@ADRES,w
  2487  0FDA  00D9               	movwf	??_getTemp_AD
  2488  0FDB  0859               	movf	??_getTemp_AD,w
  2489  0FDC  00CA               	movwf	_Temp+6
  2490  0FDD  0008               	return
  2491  0FDE                     __end_of_getTemp_AD:	
  2492                           
  2493                           	psect	text4
  2494  020E                     __ptext4:	
  2495 ;; *************** function _getPIR_AD *****************
  2496 ;; Defined at:
  2497 ;;		line 342 in file "../src/PIR_B1.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  channel1        1    wreg     unsigned char 
  2500 ;;  channel2        1    9[BANK0 ] unsigned char 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  channel1        1   14[BANK0 ] unsigned char 
  2503 ;;  i               1   17[BANK0 ] unsigned char 
  2504 ;;  VRAD            1   16[BANK0 ] unsigned char 
  2505 ;;  VRAD1           1   15[BANK0 ] unsigned char 
  2506 ;;  j               1   13[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;		None               void
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2516 ;;      Params:         0       1       0       0
  2517 ;;      Locals:         0       5       0       0
  2518 ;;      Temps:          0       3       0       0
  2519 ;;      Totals:         0       9       0       0
  2520 ;;Total ram usage:        9 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    5
  2523 ;; This function calls:
  2524 ;;		___awdiv
  2525 ;;		___lwdiv
  2526 ;;		_getAD
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _getPIR_AD
  2534  020E                     _getPIR_AD:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2538                           ;getPIR_AD@channel1 stored from wreg
  2539  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2540  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0210  00E5               	movwf	getPIR_AD@channel1
  2542                           
  2543                           ;PIR_B1.c: 343: char i = 0, j = 0;
  2544  0211  01E8               	clrf	getPIR_AD@i
  2545  0212  01E4               	clrf	getPIR_AD@j
  2546                           
  2547                           ;PIR_B1.c: 344: char VRAD = 0, VRAD1 = 0;
  2548  0213  01E7               	clrf	getPIR_AD@VRAD
  2549  0214  01E6               	clrf	getPIR_AD@VRAD1
  2550                           
  2551                           ;PIR_B1.c: 345: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2552  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2554  0217  1CA0               	btfss	__PIR^(0+128),1
  2555  0218  0008               	return
  2556  0219  1920               	btfsc	__PIR^(0+128),2
  2557  021A  0008               	return
  2558                           
  2559                           ;PIR_B1.c: 346: _PIR.GO = 1;
  2560  021B  1520               	bsf	__PIR^(0+128),2
  2561                           
  2562                           ;PIR_B1.c: 353: VRAD1 = getAD(channel1, 0x70);
  2563  021C  3070               	movlw	112
  2564  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2565  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2566  021F  00E1               	movwf	??_getPIR_AD
  2567  0220  0861               	movf	??_getPIR_AD,w
  2568  0221  00D7               	movwf	getAD@adcon1
  2569  0222  0865               	movf	getPIR_AD@channel1,w
  2570  0223  158A  27A3  118A   	fcall	_getAD
  2571  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0228  00E2               	movwf	??_getPIR_AD+1
  2574  0229  0862               	movf	??_getPIR_AD+1,w
  2575  022A  00E6               	movwf	getPIR_AD@VRAD1
  2576                           
  2577                           ;PIR_B1.c: 354: VRAD = VRAD1 / 25;
  2578  022B  3019               	movlw	25
  2579  022C  00D7               	movwf	___awdiv@divisor
  2580  022D  3000               	movlw	0
  2581  022E  00D8               	movwf	___awdiv@divisor+1
  2582  022F  0866               	movf	getPIR_AD@VRAD1,w
  2583  0230  00E1               	movwf	??_getPIR_AD
  2584  0231  01E2               	clrf	??_getPIR_AD+1
  2585  0232  0861               	movf	??_getPIR_AD,w
  2586  0233  00D9               	movwf	___awdiv@dividend
  2587  0234  0862               	movf	??_getPIR_AD+1,w
  2588  0235  00DA               	movwf	___awdiv@dividend+1
  2589  0236  118A  258D  118A   	fcall	___awdiv
  2590  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2591  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2592  023B  0857               	movf	?___awdiv,w
  2593  023C  00E3               	movwf	??_getPIR_AD+2
  2594  023D  0863               	movf	??_getPIR_AD+2,w
  2595  023E  00E7               	movwf	getPIR_AD@VRAD
  2596                           
  2597                           ;PIR_B1.c: 355: _PIR.SignalAD = getAD(channel2, 0x70);
  2598  023F  3070               	movlw	112
  2599  0240  00E1               	movwf	??_getPIR_AD
  2600  0241  0861               	movf	??_getPIR_AD,w
  2601  0242  00D7               	movwf	getAD@adcon1
  2602  0243  0860               	movf	getPIR_AD@channel2,w
  2603  0244  158A  27A3  118A   	fcall	_getAD
  2604  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0249  00E2               	movwf	??_getPIR_AD+1
  2607  024A  0862               	movf	??_getPIR_AD+1,w
  2608  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2609  024C  1303               	bcf	3,6	;RP1=0, select bank1
  2610  024D  00A1               	movwf	(__PIR^(0+128)+1)
  2611                           
  2612                           ;PIR_B1.c: 369: if (VRAD < 1) {
  2613  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2614  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0250  08E7               	movf	getPIR_AD@VRAD,f
  2616  0251  1D03               	skipz
  2617  0252  2A55               	goto	l4635
  2618                           
  2619                           ;PIR_B1.c: 370: _PIR.CloseTimeValue = 5;
  2620  0253  3005               	movlw	5
  2621  0254  2A5B               	goto	L1
  2622  0255                     l4635:	
  2623                           ;PIR_B1.c: 371: } else if (VRAD < 3) {
  2624                           
  2625  0255  3003               	movlw	3
  2626  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0257  0267               	subwf	getPIR_AD@VRAD,w
  2628  0258  1803               	skipnc
  2629  0259  2A60               	goto	l4639
  2630                           
  2631                           ;PIR_B1.c: 372: _PIR.CloseTimeValue = 60;
  2632  025A  303C               	movlw	60
  2633  025B                     L1:	
  2634  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2635  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2636  025D  00C3               	movwf	(__PIR^(0+128)+35)
  2637  025E  3000               	movlw	0
  2638  025F  2A86               	goto	L5
  2639  0260                     l4639:	
  2640                           ;PIR_B1.c: 373: } else if (VRAD < 5) {
  2641                           
  2642  0260  3005               	movlw	5
  2643  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0262  0267               	subwf	getPIR_AD@VRAD,w
  2645  0263  1803               	skipnc
  2646  0264  2A6B               	goto	l4643
  2647                           
  2648                           ;PIR_B1.c: 374: _PIR.CloseTimeValue = 300;
  2649  0265  302C               	movlw	44
  2650  0266  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0267  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0268  00C3               	movwf	(__PIR^(0+128)+35)
  2653  0269  3001               	movlw	1
  2654  026A  2A86               	goto	L5
  2655  026B                     l4643:	
  2656                           ;PIR_B1.c: 375: } else if (VRAD < 7) {
  2657                           
  2658  026B  3007               	movlw	7
  2659  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2660  026D  0267               	subwf	getPIR_AD@VRAD,w
  2661  026E  1803               	skipnc
  2662  026F  2A76               	goto	l4647
  2663                           
  2664                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 600;
  2665  0270  3058               	movlw	88
  2666  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0273  00C3               	movwf	(__PIR^(0+128)+35)
  2669  0274  3002               	movlw	2
  2670  0275  2A86               	goto	L5
  2671  0276                     l4647:	
  2672                           ;PIR_B1.c: 377: } else if (VRAD < 9) {
  2673                           
  2674  0276  3009               	movlw	9
  2675  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0278  0267               	subwf	getPIR_AD@VRAD,w
  2677  0279  1803               	skipnc
  2678  027A  2A81               	goto	l4651
  2679                           
  2680                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 900;
  2681  027B  3084               	movlw	132
  2682  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2683  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2684  027E  00C3               	movwf	(__PIR^(0+128)+35)
  2685  027F  3003               	movlw	3
  2686  0280  2A86               	goto	L5
  2687  0281                     l4651:	
  2688                           ;PIR_B1.c: 379: } else {
  2689                           
  2690                           
  2691                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 1200;
  2692  0281  30B0               	movlw	176
  2693  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2695  0284  00C3               	movwf	(__PIR^(0+128)+35)
  2696  0285  3004               	movlw	4
  2697  0286                     L5:	
  2698  0286  00C4               	movwf	(__PIR^(0+128)+36)
  2699                           
  2700                           ;PIR_B1.c: 381: }
  2701                           ;PIR_B1.c: 390: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2702  0287  0821               	movf	(__PIR^(0+128)+1),w
  2703  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2705  028A  00E1               	movwf	??_getPIR_AD
  2706  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2707  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2708  028D  0824               	movf	(__PIR^(0+128)+4),w
  2709  028E  3EA5               	addlw	(__PIR+5)& (0+255)
  2710  028F  0084               	movwf	4
  2711  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0292  0861               	movf	??_getPIR_AD,w
  2714  0293  1383               	bcf	3,7	;select IRP bank1
  2715  0294  0080               	movwf	0
  2716                           
  2717                           ;PIR_B1.c: 391: for (i = 0; i < 10; i++) {
  2718  0295  01E8               	clrf	getPIR_AD@i
  2719  0296  300A               	movlw	10
  2720  0297  0268               	subwf	getPIR_AD@i,w
  2721  0298  1803               	btfsc	3,0
  2722  0299  2AB6               	goto	l4667
  2723  029A                     l4661:	
  2724                           
  2725                           ;PIR_B1.c: 392: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2726  029A  0868               	movf	getPIR_AD@i,w
  2727  029B  3EA5               	addlw	(__PIR+5)& (0+255)
  2728  029C  0084               	movwf	4
  2729  029D  0800               	movf	0,w
  2730  029E  00E1               	movwf	??_getPIR_AD
  2731  029F  01E2               	clrf	??_getPIR_AD+1
  2732  02A0  0861               	movf	??_getPIR_AD,w
  2733  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2734  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2735  02A3  07AF               	addwf	(__PIR^(0+128)+15),f
  2736  02A4  1803               	skipnc
  2737  02A5  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2738  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2739  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2740  02A8  0862               	movf	??_getPIR_AD+1,w
  2741  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2742  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2743  02AB  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2744  02AC  3001               	movlw	1
  2745  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2746  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2747  02AF  00E1               	movwf	??_getPIR_AD
  2748  02B0  0861               	movf	??_getPIR_AD,w
  2749  02B1  07E8               	addwf	getPIR_AD@i,f
  2750  02B2  300A               	movlw	10
  2751  02B3  0268               	subwf	getPIR_AD@i,w
  2752  02B4  1C03               	skipc
  2753  02B5  2A9A               	goto	l4661
  2754  02B6                     l4667:	
  2755                           
  2756                           ;PIR_B1.c: 393: }
  2757                           ;PIR_B1.c: 394: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2758  02B6  300A               	movlw	10
  2759  02B7  00D7               	movwf	___lwdiv@divisor
  2760  02B8  3000               	movlw	0
  2761  02B9  00D8               	movwf	___lwdiv@divisor+1
  2762  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2763  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  2764  02BC  0830               	movf	((__PIR+1)^(0+128)+15),w
  2765  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2766  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2767  02BF  01DA               	clrf	___lwdiv@dividend+1
  2768  02C0  07DA               	addwf	___lwdiv@dividend+1,f
  2769  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2770  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2771  02C3  082F               	movf	(__PIR^(0+128)+15),w
  2772  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2773  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2774  02C6  01D9               	clrf	___lwdiv@dividend
  2775  02C7  07D9               	addwf	___lwdiv@dividend,f
  2776  02C8  118A  26D2  118A   	fcall	___lwdiv
  2777  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2778  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2779  02CD  0857               	movf	?___lwdiv,w
  2780  02CE  00E1               	movwf	??_getPIR_AD
  2781  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2782  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2783  02D1  0831               	movf	(__PIR^(0+128)+17),w
  2784  02D2  3EB2               	addlw	(__PIR+18)& (0+255)
  2785  02D3  0084               	movwf	4
  2786  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2787  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2788  02D6  0861               	movf	??_getPIR_AD,w
  2789  02D7  1383               	bcf	3,7	;select IRP bank1
  2790  02D8  0080               	movwf	0
  2791                           
  2792                           ;PIR_B1.c: 395: _PIR.TenAverageValue = 0;
  2793  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2794  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2795  02DB  01AF               	clrf	(__PIR^(0+128)+15)
  2796  02DC  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2797                           
  2798                           ;PIR_B1.c: 397: for (i = 0; i <= 9; i++) {
  2799  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2800  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2801  02DF  01E8               	clrf	getPIR_AD@i
  2802  02E0  300A               	movlw	10
  2803  02E1  0268               	subwf	getPIR_AD@i,w
  2804  02E2  1803               	btfsc	3,0
  2805  02E3  2B00               	goto	l4683
  2806  02E4                     l4677:	
  2807                           
  2808                           ;PIR_B1.c: 398: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2809  02E4  0868               	movf	getPIR_AD@i,w
  2810  02E5  3EB2               	addlw	(__PIR+18)& (0+255)
  2811  02E6  0084               	movwf	4
  2812  02E7  0800               	movf	0,w
  2813  02E8  00E1               	movwf	??_getPIR_AD
  2814  02E9  01E2               	clrf	??_getPIR_AD+1
  2815  02EA  0861               	movf	??_getPIR_AD,w
  2816  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2817  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2818  02ED  07BC               	addwf	(__PIR^(0+128)+28),f
  2819  02EE  1803               	skipnc
  2820  02EF  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2821  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02F2  0862               	movf	??_getPIR_AD+1,w
  2824  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2825  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  2826  02F5  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2827  02F6  3001               	movlw	1
  2828  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2829  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2830  02F9  00E1               	movwf	??_getPIR_AD
  2831  02FA  0861               	movf	??_getPIR_AD,w
  2832  02FB  07E8               	addwf	getPIR_AD@i,f
  2833  02FC  300A               	movlw	10
  2834  02FD  0268               	subwf	getPIR_AD@i,w
  2835  02FE  1C03               	skipc
  2836  02FF  2AE4               	goto	l4677
  2837  0300                     l4683:	
  2838                           
  2839                           ;PIR_B1.c: 399: }
  2840                           ;PIR_B1.c: 400: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2841  0300  300A               	movlw	10
  2842  0301  00D7               	movwf	___lwdiv@divisor
  2843  0302  3000               	movlw	0
  2844  0303  00D8               	movwf	___lwdiv@divisor+1
  2845  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0306  083D               	movf	((__PIR+1)^(0+128)+28),w
  2848  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0309  01DA               	clrf	___lwdiv@dividend+1
  2851  030A  07DA               	addwf	___lwdiv@dividend+1,f
  2852  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2853  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2854  030D  083C               	movf	(__PIR^(0+128)+28),w
  2855  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2856  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0310  01D9               	clrf	___lwdiv@dividend
  2858  0311  07D9               	addwf	___lwdiv@dividend,f
  2859  0312  118A  26D2  118A   	fcall	___lwdiv
  2860  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0317  0857               	movf	?___lwdiv,w
  2863  0318  00E1               	movwf	??_getPIR_AD
  2864  0319  0861               	movf	??_getPIR_AD,w
  2865  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2866  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2867  031C  00A3               	movwf	(__PIR^(0+128)+3)
  2868                           
  2869                           ;PIR_B1.c: 401: _PIR.HundredAverageValue = 0;
  2870  031D  01BC               	clrf	(__PIR^(0+128)+28)
  2871  031E  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2872                           
  2873                           ;PIR_B1.c: 403: if (_PIR.TenCount < 10) {
  2874  031F  300A               	movlw	10
  2875  0320  0224               	subwf	(__PIR^(0+128)+4),w
  2876  0321  1803               	skipnc
  2877  0322  2B2C               	goto	l4691
  2878                           
  2879                           ;PIR_B1.c: 404: _PIR.TenCount++;
  2880  0323  3001               	movlw	1
  2881  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0326  00E1               	movwf	??_getPIR_AD
  2884  0327  0861               	movf	??_getPIR_AD,w
  2885  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2886  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2887  032A  07A4               	addwf	(__PIR^(0+128)+4),f
  2888                           
  2889                           ;PIR_B1.c: 405: } else {
  2890  032B  0008               	return
  2891  032C                     l4691:	
  2892                           
  2893                           ;PIR_B1.c: 406: _PIR.TenCount = 0;
  2894  032C  01A4               	clrf	(__PIR^(0+128)+4)
  2895                           
  2896                           ;PIR_B1.c: 407: if (_PIR.HundreCount < 10)
  2897  032D  300A               	movlw	10
  2898  032E  0231               	subwf	(__PIR^(0+128)+17),w
  2899  032F  1803               	skipnc
  2900  0330  2B3A               	goto	l4697
  2901                           
  2902                           ;PIR_B1.c: 408: _PIR.HundreCount++;
  2903  0331  3001               	movlw	1
  2904  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0334  00E1               	movwf	??_getPIR_AD
  2907  0335  0861               	movf	??_getPIR_AD,w
  2908  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2910  0338  07B1               	addwf	(__PIR^(0+128)+17),f
  2911  0339  0008               	return
  2912  033A                     l4697:	
  2913                           
  2914                           ;PIR_B1.c: 409: else
  2915                           ;PIR_B1.c: 410: _PIR.HundreCount = 0;
  2916  033A  01B1               	clrf	(__PIR^(0+128)+17)
  2917  033B  0008               	return
  2918  033C                     __end_of_getPIR_AD:	
  2919                           
  2920                           	psect	text5
  2921  06D2                     __ptext5:	
  2922 ;; *************** function ___lwdiv *****************
  2923 ;; Defined at:
  2924 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  divisor         2    0[BANK0 ] unsigned int 
  2927 ;;  dividend        2    2[BANK0 ] unsigned int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  quotient        2    6[BANK0 ] unsigned int 
  2930 ;;  counter         1    5[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    0[BANK0 ] unsigned int 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         0       4       0       0
  2941 ;;      Locals:         0       3       0       0
  2942 ;;      Temps:          0       1       0       0
  2943 ;;      Totals:         0       8       0       0
  2944 ;;Total ram usage:        8 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    3
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_getPIR_AD
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function ___lwdiv
  2956  06D2                     ___lwdiv:	
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2960  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  2961  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  2962  06D4  01DD               	clrf	___lwdiv@quotient
  2963  06D5  01DE               	clrf	___lwdiv@quotient+1
  2964  06D6  0858               	movf	___lwdiv@divisor+1,w
  2965  06D7  0457               	iorwf	___lwdiv@divisor,w
  2966  06D8  1903               	skipnz
  2967  06D9  2F0B               	goto	l4549
  2968  06DA  01DC               	clrf	___lwdiv@counter
  2969  06DB  0ADC               	incf	___lwdiv@counter,f
  2970  06DC                     l4537:	
  2971  06DC  1BD8               	btfsc	___lwdiv@divisor+1,7
  2972  06DD  2EEA               	goto	l4539
  2973  06DE  3001               	movlw	1
  2974  06DF                     u5325:	
  2975  06DF  1003               	clrc
  2976  06E0  0DD7               	rlf	___lwdiv@divisor,f
  2977  06E1  0DD8               	rlf	___lwdiv@divisor+1,f
  2978  06E2  3EFF               	addlw	-1
  2979  06E3  1D03               	skipz
  2980  06E4  2EDF               	goto	u5325
  2981  06E5  3001               	movlw	1
  2982  06E6  00DB               	movwf	??___lwdiv
  2983  06E7  085B               	movf	??___lwdiv,w
  2984  06E8  07DC               	addwf	___lwdiv@counter,f
  2985  06E9  2EDC               	goto	l4537
  2986  06EA                     l4539:	
  2987  06EA  3001               	movlw	1
  2988  06EB                     u5345:	
  2989  06EB  1003               	clrc
  2990  06EC  0DDD               	rlf	___lwdiv@quotient,f
  2991  06ED  0DDE               	rlf	___lwdiv@quotient+1,f
  2992  06EE  3EFF               	addlw	-1
  2993  06EF  1D03               	skipz
  2994  06F0  2EEB               	goto	u5345
  2995  06F1  0858               	movf	___lwdiv@divisor+1,w
  2996  06F2  025A               	subwf	___lwdiv@dividend+1,w
  2997  06F3  1D03               	skipz
  2998  06F4  2EF7               	goto	u5355
  2999  06F5  0857               	movf	___lwdiv@divisor,w
  3000  06F6  0259               	subwf	___lwdiv@dividend,w
  3001  06F7                     u5355:	
  3002  06F7  1C03               	skipc
  3003  06F8  2F00               	goto	l4545
  3004  06F9  0857               	movf	___lwdiv@divisor,w
  3005  06FA  02D9               	subwf	___lwdiv@dividend,f
  3006  06FB  0858               	movf	___lwdiv@divisor+1,w
  3007  06FC  1C03               	skipc
  3008  06FD  03DA               	decf	___lwdiv@dividend+1,f
  3009  06FE  02DA               	subwf	___lwdiv@dividend+1,f
  3010  06FF  145D               	bsf	___lwdiv@quotient,0
  3011  0700                     l4545:	
  3012  0700  3001               	movlw	1
  3013  0701                     u5365:	
  3014  0701  1003               	clrc
  3015  0702  0CD8               	rrf	___lwdiv@divisor+1,f
  3016  0703  0CD7               	rrf	___lwdiv@divisor,f
  3017  0704  3EFF               	addlw	-1
  3018  0705  1D03               	skipz
  3019  0706  2F01               	goto	u5365
  3020  0707  3001               	movlw	1
  3021  0708  02DC               	subwf	___lwdiv@counter,f
  3022  0709  1D03               	btfss	3,2
  3023  070A  2EEA               	goto	l4539
  3024  070B                     l4549:	
  3025  070B  085E               	movf	___lwdiv@quotient+1,w
  3026  070C  01D8               	clrf	?___lwdiv+1
  3027  070D  07D8               	addwf	?___lwdiv+1,f
  3028  070E  085D               	movf	___lwdiv@quotient,w
  3029  070F  01D7               	clrf	?___lwdiv
  3030  0710  07D7               	addwf	?___lwdiv,f
  3031  0711  0008               	return
  3032  0712                     __end_of___lwdiv:	
  3033                           
  3034                           	psect	text6
  3035  058D                     __ptext6:	
  3036 ;; *************** function ___awdiv *****************
  3037 ;; Defined at:
  3038 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  divisor         2    0[BANK0 ] int 
  3041 ;;  dividend        2    2[BANK0 ] int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  quotient        2    7[BANK0 ] int 
  3044 ;;  sign            1    6[BANK0 ] unsigned char 
  3045 ;;  counter         1    5[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2    0[BANK0 ] int 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3055 ;;      Params:         0       4       0       0
  3056 ;;      Locals:         0       4       0       0
  3057 ;;      Temps:          0       1       0       0
  3058 ;;      Totals:         0       9       0       0
  3059 ;;Total ram usage:        9 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    3
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_getPIR_AD
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function ___awdiv
  3071  058D                     ___awdiv:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3075  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3076  058E  1303               	bcf	3,6	;RP1=0, select bank0
  3077  058F  01DD               	clrf	___awdiv@sign
  3078  0590  1FD8               	btfss	___awdiv@divisor+1,7
  3079  0591  2D99               	goto	l4491
  3080  0592  09D7               	comf	___awdiv@divisor,f
  3081  0593  09D8               	comf	___awdiv@divisor+1,f
  3082  0594  0AD7               	incf	___awdiv@divisor,f
  3083  0595  1903               	skipnz
  3084  0596  0AD8               	incf	___awdiv@divisor+1,f
  3085  0597  01DD               	clrf	___awdiv@sign
  3086  0598  0ADD               	incf	___awdiv@sign,f
  3087  0599                     l4491:	
  3088  0599  1FDA               	btfss	___awdiv@dividend+1,7
  3089  059A  2DA4               	goto	l4497
  3090  059B  09D9               	comf	___awdiv@dividend,f
  3091  059C  09DA               	comf	___awdiv@dividend+1,f
  3092  059D  0AD9               	incf	___awdiv@dividend,f
  3093  059E  1903               	skipnz
  3094  059F  0ADA               	incf	___awdiv@dividend+1,f
  3095  05A0  3001               	movlw	1
  3096  05A1  00DB               	movwf	??___awdiv
  3097  05A2  085B               	movf	??___awdiv,w
  3098  05A3  06DD               	xorwf	___awdiv@sign,f
  3099  05A4                     l4497:	
  3100  05A4  01DE               	clrf	___awdiv@quotient
  3101  05A5  01DF               	clrf	___awdiv@quotient+1
  3102  05A6  0858               	movf	___awdiv@divisor+1,w
  3103  05A7  0457               	iorwf	___awdiv@divisor,w
  3104  05A8  1903               	skipnz
  3105  05A9  2DDB               	goto	l4519
  3106  05AA  01DC               	clrf	___awdiv@counter
  3107  05AB  0ADC               	incf	___awdiv@counter,f
  3108  05AC                     l4507:	
  3109  05AC  1BD8               	btfsc	___awdiv@divisor+1,7
  3110  05AD  2DBA               	goto	l4509
  3111  05AE  3001               	movlw	1
  3112  05AF                     u5245:	
  3113  05AF  1003               	clrc
  3114  05B0  0DD7               	rlf	___awdiv@divisor,f
  3115  05B1  0DD8               	rlf	___awdiv@divisor+1,f
  3116  05B2  3EFF               	addlw	-1
  3117  05B3  1D03               	skipz
  3118  05B4  2DAF               	goto	u5245
  3119  05B5  3001               	movlw	1
  3120  05B6  00DB               	movwf	??___awdiv
  3121  05B7  085B               	movf	??___awdiv,w
  3122  05B8  07DC               	addwf	___awdiv@counter,f
  3123  05B9  2DAC               	goto	l4507
  3124  05BA                     l4509:	
  3125  05BA  3001               	movlw	1
  3126  05BB                     u5265:	
  3127  05BB  1003               	clrc
  3128  05BC  0DDE               	rlf	___awdiv@quotient,f
  3129  05BD  0DDF               	rlf	___awdiv@quotient+1,f
  3130  05BE  3EFF               	addlw	-1
  3131  05BF  1D03               	skipz
  3132  05C0  2DBB               	goto	u5265
  3133  05C1  0858               	movf	___awdiv@divisor+1,w
  3134  05C2  025A               	subwf	___awdiv@dividend+1,w
  3135  05C3  1D03               	skipz
  3136  05C4  2DC7               	goto	u5275
  3137  05C5  0857               	movf	___awdiv@divisor,w
  3138  05C6  0259               	subwf	___awdiv@dividend,w
  3139  05C7                     u5275:	
  3140  05C7  1C03               	skipc
  3141  05C8  2DD0               	goto	l4515
  3142  05C9  0857               	movf	___awdiv@divisor,w
  3143  05CA  02D9               	subwf	___awdiv@dividend,f
  3144  05CB  0858               	movf	___awdiv@divisor+1,w
  3145  05CC  1C03               	skipc
  3146  05CD  03DA               	decf	___awdiv@dividend+1,f
  3147  05CE  02DA               	subwf	___awdiv@dividend+1,f
  3148  05CF  145E               	bsf	___awdiv@quotient,0
  3149  05D0                     l4515:	
  3150  05D0  3001               	movlw	1
  3151  05D1                     u5285:	
  3152  05D1  1003               	clrc
  3153  05D2  0CD8               	rrf	___awdiv@divisor+1,f
  3154  05D3  0CD7               	rrf	___awdiv@divisor,f
  3155  05D4  3EFF               	addlw	-1
  3156  05D5  1D03               	skipz
  3157  05D6  2DD1               	goto	u5285
  3158  05D7  3001               	movlw	1
  3159  05D8  02DC               	subwf	___awdiv@counter,f
  3160  05D9  1D03               	btfss	3,2
  3161  05DA  2DBA               	goto	l4509
  3162  05DB                     l4519:	
  3163  05DB  085D               	movf	___awdiv@sign,w
  3164  05DC  1903               	btfsc	3,2
  3165  05DD  2DE3               	goto	l4523
  3166  05DE  09DE               	comf	___awdiv@quotient,f
  3167  05DF  09DF               	comf	___awdiv@quotient+1,f
  3168  05E0  0ADE               	incf	___awdiv@quotient,f
  3169  05E1  1903               	skipnz
  3170  05E2  0ADF               	incf	___awdiv@quotient+1,f
  3171  05E3                     l4523:	
  3172  05E3  085F               	movf	___awdiv@quotient+1,w
  3173  05E4  01D8               	clrf	?___awdiv+1
  3174  05E5  07D8               	addwf	?___awdiv+1,f
  3175  05E6  085E               	movf	___awdiv@quotient,w
  3176  05E7  01D7               	clrf	?___awdiv
  3177  05E8  07D7               	addwf	?___awdiv,f
  3178  05E9  0008               	return
  3179  05EA                     __end_of___awdiv:	
  3180                           
  3181                           	psect	text7
  3182  0FDE                     __ptext7:	
  3183 ;; *************** function _getCDS_AD *****************
  3184 ;; Defined at:
  3185 ;;		line 48 in file "../src/CDS_B1.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  channel1        1    wreg     unsigned char 
  3188 ;;  channel2        1    2[BANK0 ] unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  channel1        1    7[BANK0 ] unsigned char 
  3191 ;;  j               1    6[BANK0 ] unsigned char 
  3192 ;;  i               1    5[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;		None               void
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3202 ;;      Params:         0       1       0       0
  3203 ;;      Locals:         0       3       0       0
  3204 ;;      Temps:          0       2       0       0
  3205 ;;      Totals:         0       6       0       0
  3206 ;;Total ram usage:        6 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    5
  3209 ;; This function calls:
  3210 ;;		_getAD
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _getCDS_AD
  3218  0FDE                     _getCDS_AD:	
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3222                           ;getCDS_AD@channel1 stored from wreg
  3223  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0FE0  00DE               	movwf	getCDS_AD@channel1
  3226                           
  3227                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3228  0FE1  01DC               	clrf	getCDS_AD@i
  3229  0FE2  01DD               	clrf	getCDS_AD@j
  3230                           
  3231                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3232  0FE3  1DBA               	btfss	__CDS,3
  3233  0FE4  0008               	return
  3234                           
  3235                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3236  0FE5  14BA               	bsf	__CDS,1
  3237                           
  3238                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3239  0FE6  3070               	movlw	112
  3240  0FE7  00DA               	movwf	??_getCDS_AD
  3241  0FE8  085A               	movf	??_getCDS_AD,w
  3242  0FE9  00D7               	movwf	getAD@adcon1
  3243  0FEA  085E               	movf	getCDS_AD@channel1,w
  3244  0FEB  158A  27A3  158A   	fcall	_getAD
  3245  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0FF0  00DB               	movwf	??_getCDS_AD+1
  3248  0FF1  085B               	movf	??_getCDS_AD+1,w
  3249  0FF2  00BC               	movwf	__CDS+2
  3250                           
  3251                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3252  0FF3  3070               	movlw	112
  3253  0FF4  00DA               	movwf	??_getCDS_AD
  3254  0FF5  085A               	movf	??_getCDS_AD,w
  3255  0FF6  00D7               	movwf	getAD@adcon1
  3256  0FF7  0859               	movf	getCDS_AD@channel2,w
  3257  0FF8  158A  27A3         	fcall	_getAD
  3258  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0FFC  00DB               	movwf	??_getCDS_AD+1
  3261  0FFD  085B               	movf	??_getCDS_AD+1,w
  3262  0FFE  00BD               	movwf	__CDS+3
  3263  0FFF  0008               	return
  3264  1000                     __end_of_getCDS_AD:	
  3265                           
  3266                           	psect	text8
  3267  0FA3                     __ptext8:	
  3268 ;; *************** function _getAD *****************
  3269 ;; Defined at:
  3270 ;;		line 434 in file "../src/MCU_B1.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  adcon0          1    wreg     unsigned char 
  3273 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3285 ;;      Params:         0       1       0       0
  3286 ;;      Locals:         0       1       0       0
  3287 ;;      Temps:          0       0       0       0
  3288 ;;      Totals:         0       2       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    4
  3292 ;; This function calls:
  3293 ;;		_Timeout_Counter
  3294 ;;		_set_TimeoutCleared
  3295 ;; This function is called by:
  3296 ;;		_getCDS_AD
  3297 ;;		_getTemp_AD
  3298 ;;		_getPIR_AD
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _getAD
  3304  0FA3                     _getAD:	
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3308                           ;getAD@adcon0 stored from wreg
  3309  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0FA5  00D8               	movwf	getAD@adcon0
  3312                           
  3313                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3314  0FA6  0858               	movf	getAD@adcon0,w
  3315  0FA7  009F               	movwf	31	;volatile
  3316                           
  3317                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3318  0FA8  0857               	movf	getAD@adcon1,w
  3319  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3320  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  3321  0FAB  009F               	movwf	31	;volatile
  3322                           
  3323                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3324  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0FAE  149F               	bsf	31,1	;volatile
  3327                           
  3328                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3329  0FAF  2FB3               	goto	l4255
  3330  0FB0                     l4253:	
  3331                           
  3332                           ;MCU_B1.c: 439: Timeout_Counter();
  3333  0FB0  158A  26C9  158A   	fcall	_Timeout_Counter
  3334  0FB3                     l4255:	
  3335  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0FB5  1C9F               	btfss	31,1	;volatile
  3338  0FB6  2FB9               	goto	l4259
  3339  0FB7  1D33               	btfss	_myMain+2,2
  3340  0FB8  2FB0               	goto	l4253
  3341  0FB9                     l4259:	
  3342                           
  3343                           ;MCU_B1.c: 440: };
  3344                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3345  0FB9  158A  259F         	fcall	_set_TimeoutCleared
  3346                           
  3347                           ;MCU_B1.c: 442: return ADRES;
  3348  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0FBD  081E               	movf	30,w	;volatile
  3351  0FBE  0008               	return
  3352  0FBF                     __end_of_getAD:	
  3353                           
  3354                           	psect	text9
  3355  0D9F                     __ptext9:	
  3356 ;; *************** function _set_TimeoutCleared *****************
  3357 ;; Defined at:
  3358 ;;		line 281 in file "../src/Main_B1.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;		None               void
  3365 ;; Registers used:
  3366 ;;		status,2
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3372 ;;      Params:         0       0       0       0
  3373 ;;      Locals:         0       0       0       0
  3374 ;;      Temps:          0       0       0       0
  3375 ;;      Totals:         0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    3
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_getAD
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _set_TimeoutCleared
  3388  0D9F                     _set_TimeoutCleared:	
  3389                           
  3390                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _set_TimeoutCleared: [status,2]
  3394  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0DA1  1133               	bcf	_myMain+2,2
  3397                           
  3398                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3399  0DA2  01B4               	clrf	_myMain+3
  3400  0DA3  01B5               	clrf	_myMain+4
  3401  0DA4  0008               	return
  3402  0DA5                     __end_of_set_TimeoutCleared:	
  3403                           
  3404                           	psect	text10
  3405  0EC9                     __ptext10:	
  3406 ;; *************** function _Timeout_Counter *****************
  3407 ;; Defined at:
  3408 ;;		line 272 in file "../src/Main_B1.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		wreg, status,2
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3422 ;;      Params:         0       0       0       0
  3423 ;;      Locals:         0       0       0       0
  3424 ;;      Temps:          0       0       0       0
  3425 ;;      Totals:         0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    3
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_getAD
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _Timeout_Counter
  3438  0EC9                     _Timeout_Counter:	
  3439                           
  3440                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3444  0EC9  3001               	movlw	1
  3445  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0ECC  07B4               	addwf	_myMain+3,f
  3448  0ECD  1803               	skipnc
  3449  0ECE  0AB5               	incf	_myMain+4,f
  3450  0ECF  3000               	movlw	0
  3451  0ED0  07B5               	addwf	_myMain+4,f
  3452                           
  3453                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3454  0ED1  3061               	movlw	97
  3455  0ED2  0635               	xorwf	_myMain+4,w
  3456  0ED3  1D03               	skipz
  3457  0ED4  2ED7               	goto	u4705
  3458  0ED5  30A8               	movlw	168
  3459  0ED6  0634               	xorwf	_myMain+3,w
  3460  0ED7                     u4705:	
  3461  0ED7  1D03               	skipz
  3462  0ED8  0008               	return
  3463                           
  3464                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3465  0ED9  01B4               	clrf	_myMain+3
  3466  0EDA  01B5               	clrf	_myMain+4
  3467                           
  3468                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3469  0EDB  1533               	bsf	_myMain+2,2
  3470  0EDC  0008               	return
  3471  0EDD                     __end_of_Timeout_Counter:	
  3472                           
  3473                           	psect	text11
  3474  0E7F                     __ptext11:	
  3475 ;; *************** function _WDT_Main *****************
  3476 ;; Defined at:
  3477 ;;		line 1116 in file "../src/MCU_B1.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3491 ;;      Params:         0       0       0       0
  3492 ;;      Locals:         0       0       0       0
  3493 ;;      Temps:          0       1       0       0
  3494 ;;      Totals:         0       1       0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    4
  3498 ;; This function calls:
  3499 ;;		_WDT_Clearing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _WDT_Main
  3507  0E7F                     _WDT_Main:	
  3508                           
  3509                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3513  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0E81  1C41               	btfss	_WDT,0
  3516  0E82  0008               	return
  3517                           
  3518                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3519  0E83  3001               	movlw	1
  3520  0E84  02C2               	subwf	_WDT+1,f
  3521  0E85  0842               	movf	_WDT+1,w
  3522  0E86  3AFF               	xorlw	255
  3523  0E87  1903               	skipnz
  3524  0E88  0008               	return
  3525                           
  3526                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3527  0E89  3064               	movlw	100
  3528  0E8A  00D7               	movwf	??_WDT_Main
  3529  0E8B  0857               	movf	??_WDT_Main,w
  3530  0E8C  00C2               	movwf	_WDT+1
  3531                           
  3532                           ;MCU_B1.c: 1120: WDT_Clearing();
  3533  0E8D  118A  2002         	fcall	_WDT_Clearing
  3534  0E8F  0008               	return
  3535  0E90                     __end_of_WDT_Main:	
  3536                           
  3537                           	psect	text12
  3538  0002                     __ptext12:	
  3539 ;; *************** function _WDT_Clearing *****************
  3540 ;; Defined at:
  3541 ;;		line 1126 in file "../src/MCU_B1.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;		None               void
  3548 ;; Registers used:
  3549 ;;		None
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3555 ;;      Params:         0       0       0       0
  3556 ;;      Locals:         0       0       0       0
  3557 ;;      Temps:          0       0       0       0
  3558 ;;      Totals:         0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    3
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_WDT_Main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function _WDT_Clearing
  3571  0002                     _WDT_Clearing:	
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in _WDT_Clearing: []
  3575  0002  0064               	clrwdt	;# 
  3576  0003  0008               	return
  3577  0004                     __end_of_WDT_Clearing:	
  3578                           
  3579                           	psect	text13
  3580  0D8E                     __ptext13:	
  3581 ;; *************** function _Temp_Main *****************
  3582 ;; Defined at:
  3583 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;		None               void
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3597 ;;      Params:         0       0       0       0
  3598 ;;      Locals:         0       0       0       0
  3599 ;;      Temps:          0       0       0       0
  3600 ;;      Totals:         0       0       0       0
  3601 ;;Total ram usage:        0 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    5
  3604 ;; This function calls:
  3605 ;;		_setTemp_Main
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _Temp_Main
  3613  0D8E                     _Temp_Main:	
  3614                           
  3615                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3619  0D8E  118A  23D0         	fcall	_setTemp_Main
  3620  0D90  0008               	return
  3621  0D91                     __end_of_Temp_Main:	
  3622                           
  3623                           	psect	text14
  3624  03D0                     __ptext14:	
  3625 ;; *************** function _setTemp_Main *****************
  3626 ;; Defined at:
  3627 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  AD              1   10[BANK0 ] unsigned char 
  3632 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3633 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3634 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3635 ;;  error           1    6[BANK0 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;		None               void
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3645 ;;      Params:         0       0       0       0
  3646 ;;      Locals:         0       5       0       0
  3647 ;;      Temps:          0       1       0       0
  3648 ;;      Totals:         0       6       0       0
  3649 ;;Total ram usage:        6 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    4
  3652 ;; This function calls:
  3653 ;;		_getMain_All_Error_Status
  3654 ;;		_getMain_All_LightsStatus
  3655 ;; This function is called by:
  3656 ;;		_Temp_Main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _setTemp_Main
  3662  03D0                     _setTemp_Main:	
  3663                           
  3664                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3665                           
  3666                           ;incstack = 0
  3667                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3668  03D0  3000               	movlw	0
  3669  03D1  158A  2737  118A   	fcall	_getMain_All_Error_Status
  3670  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3671  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3672  03D6  00DC               	movwf	??_setTemp_Main
  3673  03D7  085C               	movf	??_setTemp_Main,w
  3674  03D8  00DD               	movwf	setTemp_Main@error
  3675                           
  3676                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3677  03D9  01DF               	clrf	setTemp_Main@SafeValue
  3678  03DA  01E0               	clrf	setTemp_Main@DangerValue
  3679                           
  3680                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3681  03DB  158A  25FA  118A   	fcall	_getMain_All_LightsStatus
  3682  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3683  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3684  03E0  00DC               	movwf	??_setTemp_Main
  3685  03E1  085C               	movf	??_setTemp_Main,w
  3686  03E2  00DE               	movwf	setTemp_Main@TempGO
  3687                           
  3688                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3689  03E3  1C44               	btfss	_Temp,0
  3690  03E4  2C47               	goto	l942
  3691                           
  3692                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3693  03E5  1944               	btfsc	_Temp,2
  3694  03E6  2C03               	goto	l4445
  3695                           
  3696                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3697  03E7  085E               	movf	setTemp_Main@TempGO,w
  3698  03E8  3A01               	xorlw	1
  3699  03E9  1D03               	skipz
  3700  03EA  2BED               	goto	l948
  3701  03EB  1CC4               	btfss	_Temp,1
  3702  03EC  2BEF               	goto	l4437
  3703  03ED                     l948:	
  3704  03ED  1CC4               	btfss	_Temp,1
  3705  03EE  2C00               	goto	l4443
  3706  03EF                     l4437:	
  3707                           
  3708                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3709  03EF  3001               	movlw	1
  3710  03F0  07C5               	addwf	_Temp+1,f
  3711  03F1  1803               	skipnc
  3712  03F2  0AC6               	incf	_Temp+2,f
  3713  03F3  3000               	movlw	0
  3714  03F4  07C6               	addwf	_Temp+2,f
  3715                           
  3716                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3717  03F5  3000               	movlw	0
  3718  03F6  0246               	subwf	_Temp+2,w
  3719  03F7  30FA               	movlw	250
  3720  03F8  1903               	skipnz
  3721  03F9  0245               	subwf	_Temp+1,w
  3722  03FA  1C03               	skipc
  3723  03FB  0008               	return
  3724                           
  3725                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3726  03FC  01C5               	clrf	_Temp+1
  3727  03FD  01C6               	clrf	_Temp+2
  3728                           
  3729                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3730  03FE  1544               	bsf	_Temp,2
  3731                           
  3732                           ;OverTemperature_B1.c: 83: }
  3733                           ;OverTemperature_B1.c: 84: } else {
  3734  03FF  0008               	return
  3735  0400                     l4443:	
  3736                           
  3737                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3738  0400  01C5               	clrf	_Temp+1
  3739  0401  01C6               	clrf	_Temp+2
  3740                           
  3741                           ;OverTemperature_B1.c: 86: }
  3742                           ;OverTemperature_B1.c: 87: } else {
  3743  0402  0008               	return
  3744  0403                     l4445:	
  3745                           
  3746                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3747  0403  3001               	movlw	1
  3748  0404  07C5               	addwf	_Temp+1,f
  3749  0405  1803               	skipnc
  3750  0406  0AC6               	incf	_Temp+2,f
  3751  0407  3000               	movlw	0
  3752  0408  07C6               	addwf	_Temp+2,f
  3753                           
  3754                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3755  0409  3000               	movlw	0
  3756  040A  0246               	subwf	_Temp+2,w
  3757  040B  3005               	movlw	5
  3758  040C  1903               	skipnz
  3759  040D  0245               	subwf	_Temp+1,w
  3760  040E  1C03               	skipc
  3761  040F  0008               	return
  3762                           
  3763                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3764  0410  01C5               	clrf	_Temp+1
  3765  0411  01C6               	clrf	_Temp+2
  3766                           
  3767                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3768  0412  084A               	movf	_Temp+6,w
  3769  0413  1903               	btfsc	3,2
  3770  0414  2C43               	goto	l953
  3771                           
  3772                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3773  0415  1144               	bcf	_Temp,2
  3774                           
  3775                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3776  0416  084A               	movf	_Temp+6,w
  3777  0417  00DC               	movwf	??_setTemp_Main
  3778  0418  085C               	movf	??_setTemp_Main,w
  3779  0419  00E1               	movwf	setTemp_Main@AD
  3780                           
  3781                           ;OverTemperature_B1.c: 109: SafeValue = 0x73;
  3782  041A  3073               	movlw	115
  3783  041B  00DC               	movwf	??_setTemp_Main
  3784  041C  085C               	movf	??_setTemp_Main,w
  3785  041D  00DF               	movwf	setTemp_Main@SafeValue
  3786                           
  3787                           ;OverTemperature_B1.c: 110: DangerValue = 0x64;
  3788  041E  3064               	movlw	100
  3789  041F  00DC               	movwf	??_setTemp_Main
  3790  0420  085C               	movf	??_setTemp_Main,w
  3791  0421  00E0               	movwf	setTemp_Main@DangerValue
  3792                           
  3793                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3794  0422  1CC4               	btfss	_Temp,1
  3795  0423  2C33               	goto	l4469
  3796                           
  3797                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3798  0424  085F               	movf	setTemp_Main@SafeValue,w
  3799  0425  0261               	subwf	setTemp_Main@AD,w
  3800  0426  1C03               	skipc
  3801  0427  2C42               	goto	l4479
  3802                           
  3803                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3804  0428  3001               	movlw	1
  3805  0429  00DC               	movwf	??_setTemp_Main
  3806  042A  085C               	movf	??_setTemp_Main,w
  3807  042B  07C7               	addwf	_Temp+3,f
  3808                           
  3809                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3810  042C  3003               	movlw	3
  3811  042D  0247               	subwf	_Temp+3,w
  3812  042E  1C03               	skipc
  3813  042F  2C43               	goto	l953
  3814                           
  3815                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3816  0430  01C7               	clrf	_Temp+3
  3817                           
  3818                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3819  0431  10C4               	bcf	_Temp,1
  3820                           
  3821                           ;OverTemperature_B1.c: 126: }
  3822                           ;OverTemperature_B1.c: 127: } else {
  3823                           
  3824                           ;OverTemperature_B1.c: 125: ;;
  3825  0432  2C43               	goto	l953
  3826  0433                     l4469:	
  3827                           ;OverTemperature_B1.c: 129: }
  3828                           ;OverTemperature_B1.c: 130: } else {
  3829                           
  3830                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3831                           
  3832                           
  3833                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3834  0433  0861               	movf	setTemp_Main@AD,w
  3835  0434  0260               	subwf	setTemp_Main@DangerValue,w
  3836  0435  1C03               	skipc
  3837  0436  2C42               	goto	l4479
  3838                           
  3839                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3840  0437  3001               	movlw	1
  3841  0438  00DC               	movwf	??_setTemp_Main
  3842  0439  085C               	movf	??_setTemp_Main,w
  3843  043A  07C7               	addwf	_Temp+3,f
  3844                           
  3845                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3846  043B  3003               	movlw	3
  3847  043C  0247               	subwf	_Temp+3,w
  3848  043D  1C03               	skipc
  3849  043E  2C43               	goto	l953
  3850                           
  3851                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3852  043F  01C7               	clrf	_Temp+3
  3853                           
  3854                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3855  0440  14C4               	bsf	_Temp,1
  3856                           
  3857                           ;OverTemperature_B1.c: 136: }
  3858                           ;OverTemperature_B1.c: 137: } else {
  3859  0441  2C43               	goto	l953
  3860  0442                     l4479:	
  3861                           
  3862                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3863  0442  01C7               	clrf	_Temp+3
  3864  0443                     l953:	
  3865                           ;OverTemperature_B1.c: 139: }
  3866                           ;OverTemperature_B1.c: 140: }
  3867                           ;OverTemperature_B1.c: 141: ;;
  3868                           ;OverTemperature_B1.c: 142: ;;
  3869                           
  3870                           
  3871                           ;OverTemperature_B1.c: 158: }
  3872                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3873  0443  01C8               	clrf	_Temp+4
  3874                           
  3875                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3876  0444  01C9               	clrf	_Temp+5
  3877                           
  3878                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3879  0445  01CA               	clrf	_Temp+6
  3880                           
  3881                           ;OverTemperature_B1.c: 162: }
  3882                           ;OverTemperature_B1.c: 163: }
  3883                           ;OverTemperature_B1.c: 166: } else {
  3884  0446  0008               	return
  3885  0447                     l942:	
  3886                           
  3887                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3888  0447  1C31               	btfss	_myMain,0
  3889  0448  0008               	return
  3890                           
  3891                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3892  0449  1444               	bsf	_Temp,0
  3893  044A  0008               	return
  3894  044B                     __end_of_setTemp_Main:	
  3895                           
  3896                           	psect	text15
  3897  0D8B                     __ptext15:	
  3898 ;; *************** function _Temp_Initialization *****************
  3899 ;; Defined at:
  3900 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3914 ;;      Params:         0       0       0       0
  3915 ;;      Locals:         0       0       0       0
  3916 ;;      Temps:          0       0       0       0
  3917 ;;      Totals:         0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    4
  3921 ;; This function calls:
  3922 ;;		_setTemp_Initialization
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _Temp_Initialization
  3930  0D8B                     _Temp_Initialization:	
  3931                           
  3932                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3936  0D8B  158A  2586         	fcall	_setTemp_Initialization
  3937  0D8D  0008               	return
  3938  0D8E                     __end_of_Temp_Initialization:	
  3939                           
  3940                           	psect	text16
  3941  0D86                     __ptext16:	
  3942 ;; *************** function _setTemp_Initialization *****************
  3943 ;; Defined at:
  3944 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;		None               void
  3951 ;; Registers used:
  3952 ;;		None
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3958 ;;      Params:         0       0       0       0
  3959 ;;      Locals:         0       0       0       0
  3960 ;;      Temps:          0       0       0       0
  3961 ;;      Totals:         0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    3
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_Temp_Initialization
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function _setTemp_Initialization
  3974  0D86                     _setTemp_Initialization:	
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in _setTemp_Initialization: []
  3978  0D86  0008               	return
  3979  0D87                     __end_of_setTemp_Initialization:	
  3980                           
  3981                           	psect	text17
  3982  0027                     __ptext17:	
  3983 ;; *************** function _PIR_Main *****************
  3984 ;; Defined at:
  3985 ;;		line 13 in file "../src/PIR_B1.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  LightsStatus    1   16[BANK0 ] unsigned char 
  3990 ;;  TriggerValue    1   15[BANK0 ] unsigned char 
  3991 ;;  Enable_Switc    1   12[BANK0 ] unsigned char 
  3992 ;;  cds             1   11[BANK0 ] unsigned char 
  3993 ;;  error           1   10[BANK0 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4003 ;;      Params:         0       0       0       0
  4004 ;;      Locals:         0       7       0       0
  4005 ;;      Temps:          0       5       0       0
  4006 ;;      Totals:         0      12       0       0
  4007 ;;Total ram usage:       12 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    5
  4010 ;; This function calls:
  4011 ;;		_getCDS_Status
  4012 ;;		_getDimmerLights_Status
  4013 ;;		_getMain_All_Error_Status
  4014 ;;		_setLED
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _PIR_Main
  4022  0027                     _PIR_Main:	
  4023                           
  4024                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4028  0027  3000               	movlw	0
  4029  0028  158A  2737  118A   	fcall	_getMain_All_Error_Status
  4030  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4031  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4032  002D  00DC               	movwf	??_PIR_Main
  4033  002E  085C               	movf	??_PIR_Main,w
  4034  002F  00E1               	movwf	PIR_Main@error
  4035                           
  4036                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4037  0030  158A  25BA  118A   	fcall	_getCDS_Status
  4038  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0035  00DC               	movwf	??_PIR_Main
  4041  0036  085C               	movf	??_PIR_Main,w
  4042  0037  00E2               	movwf	PIR_Main@cds
  4043                           
  4044                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4045  0038  01E7               	clrf	PIR_Main@LightsStatus
  4046                           
  4047                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4048  0039  01E3               	clrf	PIR_Main@Enable_Switch
  4049  003A  0AE3               	incf	PIR_Main@Enable_Switch,f
  4050                           
  4051                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4052  003B  01E6               	clrf	PIR_Main@TriggerValue
  4053                           
  4054                           ;PIR_B1.c: 31: LightsStatus = getDimmerLights_Status(1);
  4055  003C  3001               	movlw	1
  4056  003D  158A  265D  118A   	fcall	_getDimmerLights_Status
  4057  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0042  00DC               	movwf	??_PIR_Main
  4060  0043  085C               	movf	??_PIR_Main,w
  4061  0044  00E7               	movwf	PIR_Main@LightsStatus
  4062                           
  4063                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4064  0045  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0046  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0047  1C20               	btfss	__PIR^(0+128),0
  4067  0048  29FB               	goto	l1018
  4068                           
  4069                           ;PIR_B1.c: 36: if (error == 0) {
  4070  0049  1283               	bcf	3,5	;RP0=0, select bank0
  4071  004A  1303               	bcf	3,6	;RP1=0, select bank0
  4072  004B  08E1               	movf	PIR_Main@error,f
  4073  004C  1D03               	skipz
  4074  004D  2889               	goto	l1019
  4075                           
  4076                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4077  004E  0862               	movf	PIR_Main@cds,w
  4078  004F  3A01               	xorlw	1
  4079  0050  1D03               	skipz
  4080  0051  285A               	goto	l1020
  4081  0052  0863               	movf	PIR_Main@Enable_Switch,w
  4082  0053  3A01               	xorlw	1
  4083  0054  1D03               	skipz
  4084  0055  285A               	goto	l1020
  4085                           
  4086                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4087  0056  1683               	bsf	3,5	;RP0=1, select bank1
  4088  0057  1303               	bcf	3,6	;RP1=0, select bank1
  4089  0058  17A0               	bsf	__PIR^(0+128),7
  4090                           
  4091                           ;PIR_B1.c: 40: } else {
  4092  0059  2879               	goto	l1021
  4093  005A                     l1020:	
  4094                           
  4095                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4096  005A  1683               	bsf	3,5	;RP0=1, select bank1
  4097  005B  1303               	bcf	3,6	;RP1=0, select bank1
  4098  005C  13A0               	bcf	__PIR^(0+128),7
  4099                           
  4100                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4101  005D  1DA0               	btfss	__PIR^(0+128),3
  4102  005E  2879               	goto	l1021
  4103                           
  4104                           ;PIR_B1.c: 45: setLED(1, 0);
  4105  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0061  01D9               	clrf	setLED@command
  4108  0062  3001               	movlw	1
  4109  0063  118A  24BC  118A   	fcall	_setLED
  4110                           
  4111                           ;PIR_B1.c: 46: setLED(2, 0);
  4112  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4113  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0068  01D9               	clrf	setLED@command
  4115  0069  3002               	movlw	2
  4116  006A  118A  24BC  118A   	fcall	_setLED
  4117                           
  4118                           ;PIR_B1.c: 59: if (getDimmerLights_Status(1) == 1) {
  4119  006D  3001               	movlw	1
  4120  006E  158A  265D  118A   	fcall	_getDimmerLights_Status
  4121  0071  3A01               	xorlw	1
  4122  0072  1D03               	skipz
  4123  0073  2879               	goto	l1021
  4124                           
  4125                           ;PIR_B1.c: 60: Dimmer.PIR_Trigger = 1;
  4126  0074  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0075  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0076  16AC               	bsf	_Dimmer,5
  4129                           
  4130                           ;PIR_B1.c: 61: Dimmer.PIR_Sw = 0;
  4131  0077  122C               	bcf	_Dimmer,4
  4132                           
  4133                           ;PIR_B1.c: 62: Dimmer.PIR_Lights_Status = 1;
  4134  0078  152D               	bsf	_Dimmer+1,2
  4135  0079                     l1021:	
  4136                           
  4137                           ;PIR_B1.c: 63: }
  4138                           ;PIR_B1.c: 67: }
  4139                           ;PIR_B1.c: 68: }
  4140                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4141  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4142  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4143  007B  1A20               	btfsc	__PIR^(0+128),4
  4144  007C  288F               	goto	l1026
  4145                           
  4146                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4147  007D  1620               	bsf	__PIR^(0+128),4
  4148                           
  4149                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4150  007E  19A0               	btfsc	__PIR^(0+128),3
  4151  007F  288F               	goto	l1026
  4152                           
  4153                           ;PIR_B1.c: 76: setLED(1, 1);
  4154  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4155  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4156  0082  01D9               	clrf	setLED@command
  4157  0083  0AD9               	incf	setLED@command,f
  4158  0084  3001               	movlw	1
  4159  0085  118A  24BC  118A   	fcall	_setLED
  4160                           
  4161                           ;PIR_B1.c: 77: }
  4162                           ;PIR_B1.c: 80: }
  4163                           ;PIR_B1.c: 81: } else {
  4164  0088  288F               	goto	l1026
  4165  0089                     l1019:	
  4166                           
  4167                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4168  0089  1683               	bsf	3,5	;RP0=1, select bank1
  4169  008A  1303               	bcf	3,6	;RP1=0, select bank1
  4170  008B  1E20               	btfss	__PIR^(0+128),4
  4171  008C  288F               	goto	l1026
  4172                           
  4173                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4174  008D  1220               	bcf	__PIR^(0+128),4
  4175                           
  4176                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4177  008E  13A0               	bcf	__PIR^(0+128),7
  4178  008F                     l1026:	
  4179                           
  4180                           ;PIR_B1.c: 102: }
  4181                           ;PIR_B1.c: 103: }
  4182                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4183  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0091  18A0               	btfsc	__PIR^(0+128),1
  4186  0092  28A2               	goto	l1028
  4187                           
  4188                           ;PIR_B1.c: 106: _PIR.Time++;
  4189  0093  3001               	movlw	1
  4190  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0096  00DC               	movwf	??_PIR_Main
  4193  0097  085C               	movf	??_PIR_Main,w
  4194  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4196  009A  07A2               	addwf	(__PIR^(0+128)+2),f
  4197                           
  4198                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4199  009B  0822               	movf	(__PIR^(0+128)+2),w
  4200  009C  3A05               	xorlw	5
  4201  009D  1D03               	skipz
  4202  009E  29A1               	goto	l4831
  4203                           
  4204                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4205  009F  01A2               	clrf	(__PIR^(0+128)+2)
  4206                           
  4207                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4208  00A0  14A0               	bsf	__PIR^(0+128),1
  4209                           
  4210                           ;PIR_B1.c: 110: }
  4211                           ;PIR_B1.c: 111: } else {
  4212  00A1  29A1               	goto	l4831
  4213  00A2                     l1028:	
  4214                           
  4215                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4216  00A2  1D20               	btfss	__PIR^(0+128),2
  4217  00A3  29A1               	goto	l4831
  4218                           
  4219                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4220  00A4  1120               	bcf	__PIR^(0+128),2
  4221                           
  4222                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4223  00A5  10A0               	bcf	__PIR^(0+128),1
  4224                           
  4225                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4226  00A6  1BA0               	btfsc	__PIR^(0+128),7
  4227                           
  4228                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4229  00A7  1DA0               	btfss	__PIR^(0+128),3
  4230  00A8  29A1               	goto	l4831
  4231                           
  4232                           ;PIR_B1.c: 118: _PIR.Time++;
  4233  00A9  3001               	movlw	1
  4234  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4235  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4236  00AC  00DC               	movwf	??_PIR_Main
  4237  00AD  085C               	movf	??_PIR_Main,w
  4238  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  4239  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  4240  00B0  07A2               	addwf	(__PIR^(0+128)+2),f
  4241                           
  4242                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4243  00B1  0822               	movf	(__PIR^(0+128)+2),w
  4244  00B2  3A3C               	xorlw	60
  4245  00B3  1D03               	skipz
  4246  00B4  28E9               	goto	l4799
  4247                           
  4248                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4249  00B5  01A2               	clrf	(__PIR^(0+128)+2)
  4250                           
  4251                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4252  00B6  305A               	movlw	90
  4253  00B7  0247               	subwf	(__PIR^(0+128)+39),w
  4254  00B8  1C03               	skipc
  4255  00B9  28C5               	goto	l4781
  4256                           
  4257                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4258  00BA  01C6               	clrf	(__PIR^(0+128)+38)
  4259                           
  4260                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4261  00BB  0848               	movf	(__PIR^(0+128)+40),w
  4262  00BC  3A19               	xorlw	25
  4263  00BD  1903               	btfsc	3,2
  4264  00BE  28DA               	goto	L11
  4265                           
  4266                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4267                           
  4268                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4269  00BF  0848               	movf	(__PIR^(0+128)+40),w
  4270  00C0  3A23               	xorlw	35
  4271  00C1  1D03               	skipz
  4272  00C2  28E8               	goto	l4797
  4273                           
  4274                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4275  00C3  302D               	movlw	45
  4276  00C4  28E1               	goto	L8
  4277  00C5                     l4781:	
  4278                           ;PIR_B1.c: 128: }
  4279                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4280                           
  4281  00C5  300B               	movlw	11
  4282  00C6  0247               	subwf	(__PIR^(0+128)+39),w
  4283  00C7  1803               	skipnc
  4284  00C8  28E8               	goto	l4797
  4285                           
  4286                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4287  00C9  3001               	movlw	1
  4288  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4289  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4290  00CC  00DC               	movwf	??_PIR_Main
  4291  00CD  085C               	movf	??_PIR_Main,w
  4292  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4293  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  4294  00D0  07C6               	addwf	(__PIR^(0+128)+38),f
  4295                           
  4296                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4297  00D1  0846               	movf	(__PIR^(0+128)+38),w
  4298  00D2  3A02               	xorlw	2
  4299  00D3  1D03               	skipz
  4300  00D4  28E8               	goto	l4797
  4301                           
  4302                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4303  00D5  01C6               	clrf	(__PIR^(0+128)+38)
  4304                           
  4305                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4306  00D6  0848               	movf	(__PIR^(0+128)+40),w
  4307  00D7  3A2D               	xorlw	45
  4308  00D8  1D03               	skipz
  4309  00D9  28DC               	goto	l4793
  4310  00DA                     L11:	
  4311                           
  4312                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4313  00DA  3023               	movlw	35
  4314  00DB  28E1               	goto	L8
  4315  00DC                     l4793:	
  4316                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4317                           
  4318  00DC  0848               	movf	(__PIR^(0+128)+40),w
  4319  00DD  3A23               	xorlw	35
  4320  00DE  1D03               	skipz
  4321  00DF  28E8               	goto	l4797
  4322                           
  4323                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4324  00E0  3019               	movlw	25
  4325  00E1                     L8:	
  4326  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4327  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4328  00E3  00DC               	movwf	??_PIR_Main
  4329  00E4  085C               	movf	??_PIR_Main,w
  4330  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4331  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  4332  00E7  00C8               	movwf	(__PIR^(0+128)+40)
  4333  00E8                     l4797:	
  4334                           
  4335                           ;PIR_B1.c: 138: }
  4336                           ;PIR_B1.c: 139: }
  4337                           ;PIR_B1.c: 140: }
  4338                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4339  00E8  01C7               	clrf	(__PIR^(0+128)+39)
  4340  00E9                     l4799:	
  4341                           
  4342                           ;PIR_B1.c: 142: }
  4343                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4344                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4345  00E9  0848               	movf	(__PIR^(0+128)+40),w
  4346  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4347  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4348  00EC  00DC               	movwf	??_PIR_Main
  4349  00ED  01DD               	clrf	??_PIR_Main+1
  4350  00EE  09DC               	comf	??_PIR_Main,f
  4351  00EF  09DD               	comf	??_PIR_Main+1,f
  4352  00F0  0ADC               	incf	??_PIR_Main,f
  4353  00F1  1903               	skipnz
  4354  00F2  0ADD               	incf	??_PIR_Main+1,f
  4355  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  4356  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  4357  00F5  0823               	movf	(__PIR^(0+128)+3),w
  4358  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4359  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4360  00F8  075C               	addwf	??_PIR_Main,w
  4361  00F9  00DE               	movwf	??_PIR_Main+2
  4362  00FA  085D               	movf	??_PIR_Main+1,w
  4363  00FB  1803               	skipnc
  4364  00FC  0A5D               	incf	??_PIR_Main+1,w
  4365  00FD  00DF               	movwf	??_PIR_Main+3
  4366  00FE  085F               	movf	??_PIR_Main+3,w
  4367  00FF  3A80               	xorlw	128
  4368  0100  3C80               	sublw	128
  4369  0101  1D03               	skipz
  4370  0102  2907               	goto	u5905
  4371  0103  085E               	movf	??_PIR_Main+2,w
  4372  0104  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0105  1303               	bcf	3,6	;RP1=0, select bank1
  4374  0106  0221               	subwf	(__PIR^(0+128)+1),w
  4375  0107                     u5905:	
  4376  0107  1C03               	skipc
  4377  0108  2929               	goto	l4809
  4378  0109  1683               	bsf	3,5	;RP0=1, select bank1
  4379  010A  1303               	bcf	3,6	;RP1=0, select bank1
  4380  010B  0823               	movf	(__PIR^(0+128)+3),w
  4381  010C  0748               	addwf	(__PIR^(0+128)+40),w
  4382  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4383  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4384  010F  00DC               	movwf	??_PIR_Main
  4385  0110  01DD               	clrf	??_PIR_Main+1
  4386  0111  0DDD               	rlf	??_PIR_Main+1,f
  4387  0112  085D               	movf	??_PIR_Main+1,w
  4388  0113  3A80               	xorlw	128
  4389  0114  00DE               	movwf	??_PIR_Main+2
  4390  0115  3080               	movlw	128
  4391  0116  025E               	subwf	??_PIR_Main+2,w
  4392  0117  1D03               	skipz
  4393  0118  291F               	goto	u5915
  4394  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4395  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4396  011B  0821               	movf	(__PIR^(0+128)+1),w
  4397  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4398  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4399  011E  025C               	subwf	??_PIR_Main,w
  4400  011F                     u5915:	
  4401  011F  1C03               	skipc
  4402  0120  2929               	goto	l4809
  4403                           
  4404                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4405  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4406  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4407  0123  01BE               	clrf	(__PIR^(0+128)+30)
  4408  0124  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4409                           
  4410                           ;PIR_B1.c: 155: setLED(1, 0);
  4411  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4412  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4413  0127  01D9               	clrf	setLED@command
  4414  0128  298A               	goto	L12
  4415  0129                     l4809:	
  4416                           ;PIR_B1.c: 159: } else {
  4417                           
  4418                           ;PIR_B1.c: 156: setLED(2, 0);
  4419                           
  4420                           
  4421                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4422  0129  3001               	movlw	1
  4423  012A  1283               	bcf	3,5	;RP0=0, select bank0
  4424  012B  1303               	bcf	3,6	;RP1=0, select bank0
  4425  012C  00DC               	movwf	??_PIR_Main
  4426  012D  085C               	movf	??_PIR_Main,w
  4427  012E  1683               	bsf	3,5	;RP0=1, select bank1
  4428  012F  1303               	bcf	3,6	;RP1=0, select bank1
  4429  0130  07C7               	addwf	(__PIR^(0+128)+39),f
  4430                           
  4431                           ;PIR_B1.c: 163: _PIR.Count++;
  4432  0131  3001               	movlw	1
  4433  0132  07BE               	addwf	(__PIR^(0+128)+30),f
  4434  0133  1803               	skipnc
  4435  0134  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4436  0135  3000               	movlw	0
  4437  0136  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4438                           
  4439                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4440  0137  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0138  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0139  0867               	movf	PIR_Main@LightsStatus,w
  4443  013A  3A01               	xorlw	1
  4444  013B  1903               	skipnz
  4445  013C  293D               	goto	l4817
  4446  013D                     l4817:	
  4447  013D  3003               	movlw	3
  4448  013E  00E4               	movwf	_PIR_Main$3333
  4449  013F  3000               	movlw	0
  4450  0140  00E5               	movwf	_PIR_Main$3333+1
  4451  0141  0864               	movf	_PIR_Main$3333,w
  4452  0142  00DC               	movwf	??_PIR_Main
  4453  0143  085C               	movf	??_PIR_Main,w
  4454  0144  00E6               	movwf	PIR_Main@TriggerValue
  4455                           
  4456                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4457  0145  0866               	movf	PIR_Main@TriggerValue,w
  4458  0146  00DC               	movwf	??_PIR_Main
  4459  0147  01DD               	clrf	??_PIR_Main+1
  4460  0148  1683               	bsf	3,5	;RP0=1, select bank1
  4461  0149  1303               	bcf	3,6	;RP1=0, select bank1
  4462  014A  083F               	movf	((__PIR+1)^(0+128)+30),w
  4463  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4464  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4465  014D  065D               	xorwf	??_PIR_Main+1,w
  4466  014E  1D03               	skipz
  4467  014F  2956               	goto	u5935
  4468  0150  1683               	bsf	3,5	;RP0=1, select bank1
  4469  0151  1303               	bcf	3,6	;RP1=0, select bank1
  4470  0152  083E               	movf	(__PIR^(0+128)+30),w
  4471  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0155  065C               	xorwf	??_PIR_Main,w
  4474  0156                     u5935:	
  4475  0156  1D03               	skipz
  4476  0157  29A1               	goto	l4831
  4477                           
  4478                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4479  0158  1683               	bsf	3,5	;RP0=1, select bank1
  4480  0159  1303               	bcf	3,6	;RP1=0, select bank1
  4481  015A  01BE               	clrf	(__PIR^(0+128)+30)
  4482  015B  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4483                           
  4484                           ;PIR_B1.c: 187: Dimmer.PIR_Trigger = 1;
  4485  015C  1283               	bcf	3,5	;RP0=0, select bank0
  4486  015D  1303               	bcf	3,6	;RP1=0, select bank0
  4487  015E  16AC               	bsf	_Dimmer,5
  4488                           
  4489                           ;PIR_B1.c: 188: Dimmer.PIR_Sw = 1;
  4490  015F  162C               	bsf	_Dimmer,4
  4491                           
  4492                           ;PIR_B1.c: 193: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4493  0160  1683               	bsf	3,5	;RP0=1, select bank1
  4494  0161  1303               	bcf	3,6	;RP1=0, select bank1
  4495  0162  0848               	movf	(__PIR^(0+128)+40),w
  4496  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0165  00DC               	movwf	??_PIR_Main
  4499  0166  01DD               	clrf	??_PIR_Main+1
  4500  0167  09DC               	comf	??_PIR_Main,f
  4501  0168  09DD               	comf	??_PIR_Main+1,f
  4502  0169  0ADC               	incf	??_PIR_Main,f
  4503  016A  1903               	skipnz
  4504  016B  0ADD               	incf	??_PIR_Main+1,f
  4505  016C  1683               	bsf	3,5	;RP0=1, select bank1
  4506  016D  1303               	bcf	3,6	;RP1=0, select bank1
  4507  016E  0823               	movf	(__PIR^(0+128)+3),w
  4508  016F  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0170  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0171  075C               	addwf	??_PIR_Main,w
  4511  0172  00DE               	movwf	??_PIR_Main+2
  4512  0173  085D               	movf	??_PIR_Main+1,w
  4513  0174  1803               	skipnc
  4514  0175  0A5D               	incf	??_PIR_Main+1,w
  4515  0176  00DF               	movwf	??_PIR_Main+3
  4516  0177  085F               	movf	??_PIR_Main+3,w
  4517  0178  3A80               	xorlw	128
  4518  0179  00E0               	movwf	??_PIR_Main+4
  4519  017A  3080               	movlw	128
  4520  017B  0260               	subwf	??_PIR_Main+4,w
  4521  017C  1D03               	skipz
  4522  017D  2984               	goto	u5945
  4523  017E  1683               	bsf	3,5	;RP0=1, select bank1
  4524  017F  1303               	bcf	3,6	;RP1=0, select bank1
  4525  0180  0821               	movf	(__PIR^(0+128)+1),w
  4526  0181  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0182  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0183  025E               	subwf	??_PIR_Main+2,w
  4529  0184                     u5945:	
  4530  0184  1C03               	skipc
  4531  0185  2992               	goto	l4829
  4532                           
  4533                           ;PIR_B1.c: 194: setLED(1, 1);
  4534  0186  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0187  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0188  01D9               	clrf	setLED@command
  4537  0189  0AD9               	incf	setLED@command,f
  4538  018A                     L12:	
  4539  018A  3001               	movlw	1
  4540  018B  118A  24BC  118A   	fcall	_setLED
  4541                           
  4542                           ;PIR_B1.c: 195: setLED(2, 0);
  4543  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4544  018F  1303               	bcf	3,6	;RP1=0, select bank0
  4545  0190  01D9               	clrf	setLED@command
  4546  0191  299D               	goto	L9
  4547  0192                     l4829:	
  4548                           ;PIR_B1.c: 196: } else {
  4549                           
  4550                           
  4551                           ;PIR_B1.c: 197: setLED(1, 0);
  4552  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0194  01D9               	clrf	setLED@command
  4555  0195  3001               	movlw	1
  4556  0196  118A  24BC  118A   	fcall	_setLED
  4557                           
  4558                           ;PIR_B1.c: 198: setLED(2, 1);
  4559  0199  1283               	bcf	3,5	;RP0=0, select bank0
  4560  019A  1303               	bcf	3,6	;RP1=0, select bank0
  4561  019B  01D9               	clrf	setLED@command
  4562  019C  0AD9               	incf	setLED@command,f
  4563  019D                     L9:	
  4564  019D  3002               	movlw	2
  4565  019E  118A  24BC  118A   	fcall	_setLED
  4566  01A1                     l4831:	
  4567                           
  4568                           ;PIR_B1.c: 199: }
  4569                           ;PIR_B1.c: 241: }
  4570                           ;PIR_B1.c: 242: }
  4571                           ;PIR_B1.c: 243: }
  4572                           ;PIR_B1.c: 244: }
  4573                           ;PIR_B1.c: 245: }
  4574                           ;PIR_B1.c: 246: }
  4575                           ;PIR_B1.c: 247: if (_PIR.OK == 0) {
  4576  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  4577  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  4578  01A3  19A0               	btfsc	__PIR^(0+128),3
  4579  01A4  29C9               	goto	l4845
  4580                           
  4581                           ;PIR_B1.c: 248: _PIR.Count++;
  4582  01A5  3001               	movlw	1
  4583  01A6  07BE               	addwf	(__PIR^(0+128)+30),f
  4584  01A7  1803               	skipnc
  4585  01A8  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4586  01A9  3000               	movlw	0
  4587  01AA  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4588                           
  4589                           ;PIR_B1.c: 249: if (_PIR.Count == (30000 / 20)) {
  4590  01AB  3005               	movlw	5
  4591  01AC  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4592  01AD  1D03               	skipz
  4593  01AE  29B1               	goto	u5965
  4594  01AF  30DC               	movlw	220
  4595  01B0  063E               	xorwf	(__PIR^(0+128)+30),w
  4596  01B1                     u5965:	
  4597  01B1  1D03               	skipz
  4598  01B2  0008               	return
  4599                           
  4600                           ;PIR_B1.c: 250: _PIR.Count = 0;
  4601  01B3  01BE               	clrf	(__PIR^(0+128)+30)
  4602  01B4  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4603                           
  4604                           ;PIR_B1.c: 251: _PIR.OK = 1;
  4605  01B5  15A0               	bsf	__PIR^(0+128),3
  4606                           
  4607                           ;PIR_B1.c: 253: setLED(1, 0);
  4608  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  4609  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  4610  01B8  01D9               	clrf	setLED@command
  4611  01B9  3001               	movlw	1
  4612  01BA  118A  24BC  118A   	fcall	_setLED
  4613                           
  4614                           ;PIR_B1.c: 268: if (getDimmerLights_Status(1) == 1) {
  4615  01BD  3001               	movlw	1
  4616  01BE  158A  265D  118A   	fcall	_getDimmerLights_Status
  4617  01C1  3A01               	xorlw	1
  4618  01C2  1D03               	skipz
  4619  01C3  0008               	return
  4620                           
  4621                           ;PIR_B1.c: 269: Dimmer.PIR_Trigger = 1;
  4622  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  4623  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  4624  01C6  16AC               	bsf	_Dimmer,5
  4625                           
  4626                           ;PIR_B1.c: 270: Dimmer.PIR_Sw = 0;
  4627  01C7  122C               	bcf	_Dimmer,4
  4628                           
  4629                           ;PIR_B1.c: 271: }
  4630                           ;PIR_B1.c: 276: }
  4631                           ;PIR_B1.c: 277: } else {
  4632  01C8  0008               	return
  4633  01C9                     l4845:	
  4634                           
  4635                           ;PIR_B1.c: 278: if (LightsStatus == 1) {
  4636  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  4637  01CA  0867               	movf	PIR_Main@LightsStatus,w
  4638  01CB  3A01               	xorlw	1
  4639  01CC  1D03               	skipz
  4640  01CD  29F5               	goto	l4863
  4641                           
  4642                           ;PIR_B1.c: 279: _PIR.CloseTimeSeconds++;
  4643  01CE  3001               	movlw	1
  4644  01CF  00DC               	movwf	??_PIR_Main
  4645  01D0  085C               	movf	??_PIR_Main,w
  4646  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  4647  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  4648  01D3  07C2               	addwf	(__PIR^(0+128)+34),f
  4649                           
  4650                           ;PIR_B1.c: 280: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4651  01D4  0842               	movf	(__PIR^(0+128)+34),w
  4652  01D5  3A32               	xorlw	50
  4653  01D6  1D03               	skipz
  4654  01D7  0008               	return
  4655                           
  4656                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds = 0;
  4657  01D8  01C2               	clrf	(__PIR^(0+128)+34)
  4658                           
  4659                           ;PIR_B1.c: 282: _PIR.CloseTimeMinutes++;
  4660  01D9  3001               	movlw	1
  4661  01DA  07C0               	addwf	(__PIR^(0+128)+32),f
  4662  01DB  1803               	skipnc
  4663  01DC  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4664  01DD  3000               	movlw	0
  4665  01DE  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4666                           
  4667                           ;PIR_B1.c: 283: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4668  01DF  0844               	movf	((__PIR+1)^(0+128)+35),w
  4669  01E0  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4670  01E1  1D03               	skipz
  4671  01E2  29E5               	goto	u6005
  4672  01E3  0843               	movf	(__PIR^(0+128)+35),w
  4673  01E4  0640               	xorwf	(__PIR^(0+128)+32),w
  4674  01E5                     u6005:	
  4675  01E5  1D03               	skipz
  4676  01E6  0008               	return
  4677                           
  4678                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes = 0;
  4679  01E7  01C0               	clrf	(__PIR^(0+128)+32)
  4680  01E8  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4681                           
  4682                           ;PIR_B1.c: 300: if (getDimmerLights_Status(1) == 1) {
  4683  01E9  3001               	movlw	1
  4684  01EA  158A  265D  118A   	fcall	_getDimmerLights_Status
  4685  01ED  3A01               	xorlw	1
  4686  01EE  1D03               	skipz
  4687  01EF  0008               	return
  4688                           
  4689                           ;PIR_B1.c: 301: Dimmer.PIR_Trigger = 1;
  4690  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  4691  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  4692  01F2  16AC               	bsf	_Dimmer,5
  4693                           
  4694                           ;PIR_B1.c: 302: Dimmer.PIR_Sw = 0;
  4695  01F3  122C               	bcf	_Dimmer,4
  4696                           
  4697                           ;PIR_B1.c: 303: }
  4698                           ;PIR_B1.c: 306: }
  4699                           ;PIR_B1.c: 307: }
  4700                           ;PIR_B1.c: 308: } else {
  4701  01F4  0008               	return
  4702  01F5                     l4863:	
  4703                           
  4704                           ;PIR_B1.c: 309: _PIR.CloseTimeSeconds = 0;
  4705  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  4706  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  4707  01F7  01C2               	clrf	(__PIR^(0+128)+34)
  4708                           
  4709                           ;PIR_B1.c: 310: _PIR.CloseTimeMinutes = 0;
  4710  01F8  01C0               	clrf	(__PIR^(0+128)+32)
  4711  01F9  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4712                           
  4713                           ;PIR_B1.c: 311: }
  4714                           ;PIR_B1.c: 312: }
  4715                           ;PIR_B1.c: 313: } else {
  4716  01FA  0008               	return
  4717  01FB                     l1018:	
  4718                           
  4719                           ;PIR_B1.c: 314: if (myMain.PowerON == 1) {
  4720  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  4721  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  4722  01FD  1C31               	btfss	_myMain,0
  4723  01FE  0008               	return
  4724                           
  4725                           ;PIR_B1.c: 315: _PIR.Enable = 1;
  4726  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  4727  0200  1303               	bcf	3,6	;RP1=0, select bank1
  4728  0201  1420               	bsf	__PIR^(0+128),0
  4729                           
  4730                           ;PIR_B1.c: 317: setLED(1, 1);
  4731  0202  1283               	bcf	3,5	;RP0=0, select bank0
  4732  0203  1303               	bcf	3,6	;RP1=0, select bank0
  4733  0204  01D9               	clrf	setLED@command
  4734  0205  0AD9               	incf	setLED@command,f
  4735  0206  3001               	movlw	1
  4736  0207  118A  24BC         	fcall	_setLED
  4737                           
  4738                           ;PIR_B1.c: 332: Dimmer.PIR_Trigger = 1;
  4739  0209  1283               	bcf	3,5	;RP0=0, select bank0
  4740  020A  1303               	bcf	3,6	;RP1=0, select bank0
  4741  020B  16AC               	bsf	_Dimmer,5
  4742                           
  4743                           ;PIR_B1.c: 333: Dimmer.PIR_Sw = 1;
  4744  020C  162C               	bsf	_Dimmer,4
  4745  020D  0008               	return
  4746  020E                     __end_of_PIR_Main:	
  4747                           
  4748                           	psect	text18
  4749  0DBA                     __ptext18:	
  4750 ;; *************** function _getCDS_Status *****************
  4751 ;; Defined at:
  4752 ;;		line 42 in file "../src/CDS_B1.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  status          1    0[BANK0 ] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      unsigned char 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4766 ;;      Params:         0       0       0       0
  4767 ;;      Locals:         0       1       0       0
  4768 ;;      Temps:          0       0       0       0
  4769 ;;      Totals:         0       1       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    3
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_PIR_Main
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _getCDS_Status
  4782  0DBA                     _getCDS_Status:	
  4783                           
  4784                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4788  0DBA  3000               	movlw	0
  4789  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0DBD  1A3A               	btfsc	__CDS,4
  4792  0DBE  3001               	movlw	1
  4793  0DBF  00D7               	movwf	getCDS_Status@status
  4794                           
  4795                           ;CDS_B1.c: 44: return status;
  4796  0DC0  0857               	movf	getCDS_Status@status,w
  4797  0DC1  0008               	return
  4798  0DC2                     __end_of_getCDS_Status:	
  4799                           
  4800                           	psect	text19
  4801  0E07                     __ptext19:	
  4802 ;; *************** function _PIR_Initialization *****************
  4803 ;; Defined at:
  4804 ;;		line 7 in file "../src/PIR_B1.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;		None               void
  4811 ;; Registers used:
  4812 ;;		wreg
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4818 ;;      Params:         0       0       0       0
  4819 ;;      Locals:         0       0       0       0
  4820 ;;      Temps:          0       1       0       0
  4821 ;;      Totals:         0       1       0       0
  4822 ;;Total ram usage:        1 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    3
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_main
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           
  4833                           ;psect for function _PIR_Initialization
  4834  0E07                     _PIR_Initialization:	
  4835                           
  4836                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4837                           
  4838                           ;incstack = 0
  4839                           ; Regs used in _PIR_Initialization: [wreg]
  4840  0E07  3019               	movlw	25
  4841  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  4842  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  4843  0E0A  00D7               	movwf	??_PIR_Initialization
  4844  0E0B  0857               	movf	??_PIR_Initialization,w
  4845  0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  4846  0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  4847  0E0E  00C8               	movwf	(__PIR^(0+128)+40)
  4848                           
  4849                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4850  0E0F  3005               	movlw	5
  4851  0E10  00C3               	movwf	(__PIR^(0+128)+35)
  4852  0E11  3000               	movlw	0
  4853  0E12  00C4               	movwf	(__PIR^(0+128)+36)
  4854  0E13  0008               	return
  4855  0E14                     __end_of_PIR_Initialization:	
  4856                           
  4857                           	psect	text20
  4858  0E3E                     __ptext20:	
  4859 ;; *************** function _Mcu_Initialization *****************
  4860 ;; Defined at:
  4861 ;;		line 30 in file "../src/MCU_B1.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;		None               void
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0, pclath, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4875 ;;      Params:         0       0       0       0
  4876 ;;      Locals:         0       0       0       0
  4877 ;;      Temps:          0       0       0       0
  4878 ;;      Totals:         0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    4
  4882 ;; This function calls:
  4883 ;;		_ADC_Set
  4884 ;;		_Fosc_Set
  4885 ;;		_IO_Set
  4886 ;;		_TMR1_Set
  4887 ;;		_WDT_Set
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _Mcu_Initialization
  4895  0E3E                     _Mcu_Initialization:	
  4896                           
  4897                           ;MCU_B1.c: 32: Fosc_Set();
  4898                           
  4899                           ;incstack = 0
  4900                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4901  0E3E  158A  259A  158A   	fcall	_Fosc_Set
  4902                           
  4903                           ;MCU_B1.c: 34: IO_Set();
  4904  0E41  118A  27E8  158A   	fcall	_IO_Set
  4905                           
  4906                           ;MCU_B1.c: 36: ;;
  4907                           ;MCU_B1.c: 38: TMR1_Set();
  4908  0E44  158A  2622  158A   	fcall	_TMR1_Set
  4909                           
  4910                           ;MCU_B1.c: 40: ADC_Set();
  4911  0E47  158A  25B3  158A   	fcall	_ADC_Set
  4912                           
  4913                           ;MCU_B1.c: 42: ;;
  4914                           ;MCU_B1.c: 44: ;;
  4915                           ;MCU_B1.c: 46: ;;
  4916                           ;MCU_B1.c: 48: ;;
  4917                           ;MCU_B1.c: 50: ;;
  4918                           ;MCU_B1.c: 52: WDT_Set();
  4919  0E4A  158A  2630         	fcall	_WDT_Set
  4920  0E4C  0008               	return
  4921  0E4D                     __end_of_Mcu_Initialization:	
  4922                           
  4923                           	psect	text21
  4924  0E30                     __ptext21:	
  4925 ;; *************** function _WDT_Set *****************
  4926 ;; Defined at:
  4927 ;;		line 1102 in file "../src/MCU_B1.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4941 ;;      Params:         0       0       0       0
  4942 ;;      Locals:         0       0       0       0
  4943 ;;      Temps:          0       1       0       0
  4944 ;;      Totals:         0       1       0       0
  4945 ;;Total ram usage:        1 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    3
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_Mcu_Initialization
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           
  4956                           ;psect for function _WDT_Set
  4957  0E30                     _WDT_Set:	
  4958                           
  4959                           ;MCU_B1.c: 1104: PSA = 1;
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _WDT_Set: [wreg]
  4963  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  4964  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  4965  0E32  1581               	bsf	1,3	;volatile
  4966                           
  4967                           ;MCU_B1.c: 1105: PS0 = 1;
  4968  0E33  1401               	bsf	1,0	;volatile
  4969                           
  4970                           ;MCU_B1.c: 1106: PS1 = 1;
  4971  0E34  1481               	bsf	1,1	;volatile
  4972                           
  4973                           ;MCU_B1.c: 1107: PS2 = 1;
  4974  0E35  1501               	bsf	1,2	;volatile
  4975                           
  4976                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  4977  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  4978  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  4979  0E38  1441               	bsf	_WDT,0
  4980                           
  4981                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  4982  0E39  300A               	movlw	10
  4983  0E3A  00D7               	movwf	??_WDT_Set
  4984  0E3B  0857               	movf	??_WDT_Set,w
  4985  0E3C  00C2               	movwf	_WDT+1
  4986  0E3D  0008               	return
  4987  0E3E                     __end_of_WDT_Set:	
  4988                           
  4989                           	psect	text22
  4990  0E22                     __ptext22:	
  4991 ;; *************** function _TMR1_Set *****************
  4992 ;; Defined at:
  4993 ;;		line 226 in file "../src/MCU_B1.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;		None               void
  5000 ;; Registers used:
  5001 ;;		wreg
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5007 ;;      Params:         0       0       0       0
  5008 ;;      Locals:         0       0       0       0
  5009 ;;      Temps:          0       0       0       0
  5010 ;;      Totals:         0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    3
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_Mcu_Initialization
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _TMR1_Set
  5023  0E22                     _TMR1_Set:	
  5024                           
  5025                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _TMR1_Set: [wreg]
  5029  0E22  3041               	movlw	65
  5030  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  5032  0E25  0090               	movwf	16	;volatile
  5033                           
  5034                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5035  0E26  30FA               	movlw	250
  5036  0E27  008F               	movwf	15	;volatile
  5037                           
  5038                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5039  0E28  3038               	movlw	56
  5040  0E29  008E               	movwf	14	;volatile
  5041                           
  5042                           ;MCU_B1.c: 230: TMR1IE = 1;
  5043  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  5044  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  5045  0E2C  140C               	bsf	12,0	;volatile
  5046                           
  5047                           ;MCU_B1.c: 231: PEIE = 1;
  5048  0E2D  170B               	bsf	11,6	;volatile
  5049                           
  5050                           ;MCU_B1.c: 232: GIE = 1;
  5051  0E2E  178B               	bsf	11,7	;volatile
  5052  0E2F  0008               	return
  5053  0E30                     __end_of_TMR1_Set:	
  5054                           
  5055                           	psect	text23
  5056  07E8                     __ptext23:	
  5057 ;; *************** function _IO_Set *****************
  5058 ;; Defined at:
  5059 ;;		line 60 in file "../src/MCU_B1.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, status,2
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5073 ;;      Params:         0       0       0       0
  5074 ;;      Locals:         0       0       0       0
  5075 ;;      Temps:          0       0       0       0
  5076 ;;      Totals:         0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    3
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_Mcu_Initialization
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _IO_Set
  5089  07E8                     _IO_Set:	
  5090                           
  5091                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _IO_Set: [wreg+status,2]
  5095  07E8  30AF               	movlw	175
  5096  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  5097  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  5098  07EB  0085               	movwf	5	;volatile
  5099                           
  5100                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5101  07EC  3001               	movlw	1
  5102  07ED  0086               	movwf	6	;volatile
  5103                           
  5104                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5105  07EE  0187               	clrf	7	;volatile
  5106                           
  5107                           ;MCU_B1.c: 65: ANSELA = 0b10100111;;
  5108  07EF  30A7               	movlw	167
  5109  07F0  1683               	bsf	3,5	;RP0=1, select bank3
  5110  07F1  1703               	bsf	3,6	;RP1=1, select bank3
  5111  07F2  0085               	movwf	5	;volatile
  5112                           
  5113                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5114  07F3  3001               	movlw	1
  5115  07F4  0086               	movwf	6	;volatile
  5116                           
  5117                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5118  07F5  30AF               	movlw	175
  5119  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  5120  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  5121  07F8  0085               	movwf	5	;volatile
  5122                           
  5123                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5124  07F9  3001               	movlw	1
  5125  07FA  0086               	movwf	6	;volatile
  5126                           
  5127                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5128  07FB  0187               	clrf	7	;volatile
  5129                           
  5130                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5131  07FC  1683               	bsf	3,5	;RP0=1, select bank1
  5132  07FD  1303               	bcf	3,6	;RP1=0, select bank1
  5133  07FE  0195               	clrf	21	;volatile
  5134  07FF  0008               	return
  5135  0800                     __end_of_IO_Set:	
  5136                           
  5137                           	psect	text24
  5138  0D9A                     __ptext24:	
  5139 ;; *************** function _Fosc_Set *****************
  5140 ;; Defined at:
  5141 ;;		line 56 in file "../src/MCU_B1.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;		None
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		wreg
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5155 ;;      Params:         0       0       0       0
  5156 ;;      Locals:         0       0       0       0
  5157 ;;      Temps:          0       0       0       0
  5158 ;;      Totals:         0       0       0       0
  5159 ;;Total ram usage:        0 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:    3
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_Mcu_Initialization
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           
  5170                           ;psect for function _Fosc_Set
  5171  0D9A                     _Fosc_Set:	
  5172                           
  5173                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5174                           
  5175                           ;incstack = 0
  5176                           ; Regs used in _Fosc_Set: [wreg]
  5177  0D9A  303C               	movlw	60
  5178  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  5179  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  5180  0D9D  0090               	movwf	16	;volatile
  5181  0D9E  0008               	return
  5182  0D9F                     __end_of_Fosc_Set:	
  5183                           
  5184                           	psect	text25
  5185  0DB3                     __ptext25:	
  5186 ;; *************** function _ADC_Set *****************
  5187 ;; Defined at:
  5188 ;;		line 427 in file "../src/MCU_B1.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;		None               void
  5195 ;; Registers used:
  5196 ;;		wreg
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5202 ;;      Params:         0       0       0       0
  5203 ;;      Locals:         0       0       0       0
  5204 ;;      Temps:          0       0       0       0
  5205 ;;      Totals:         0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    3
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_Mcu_Initialization
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _ADC_Set
  5218  0DB3                     _ADC_Set:	
  5219                           
  5220                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _ADC_Set: [wreg]
  5224  0DB3  3073               	movlw	115
  5225  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  5226  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  5227  0DB6  009F               	movwf	31	;volatile
  5228                           
  5229                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5230  0DB7  30C1               	movlw	193
  5231  0DB8  009D               	movwf	29	;volatile
  5232  0DB9  0008               	return
  5233  0DBA                     __end_of_ADC_Set:	
  5234                           
  5235                           	psect	text26
  5236  0D88                     __ptext26:	
  5237 ;; *************** function _LED_Main *****************
  5238 ;; Defined at:
  5239 ;;		line 47 in file "../src/LED_B1.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;		None               void
  5246 ;; Registers used:
  5247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5253 ;;      Params:         0       0       0       0
  5254 ;;      Locals:         0       0       0       0
  5255 ;;      Temps:          0       0       0       0
  5256 ;;      Totals:         0       0       0       0
  5257 ;;Total ram usage:        0 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    6
  5260 ;; This function calls:
  5261 ;;		_setPIRLED_Main
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           
  5268                           ;psect for function _LED_Main
  5269  0D88                     _LED_Main:	
  5270                           
  5271                           ;LED_B1.c: 55: setPIRLED_Main();
  5272                           
  5273                           ;incstack = 0
  5274                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5275  0D88  118A  244B         	fcall	_setPIRLED_Main
  5276  0D8A  0008               	return
  5277  0D8B                     __end_of_LED_Main:	
  5278                           
  5279                           	psect	text27
  5280  044B                     __ptext27:	
  5281 ;; *************** function _setPIRLED_Main *****************
  5282 ;; Defined at:
  5283 ;;		line 265 in file "../src/LED_B1.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  count           1    5[BANK0 ] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;		None               void
  5290 ;; Registers used:
  5291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5297 ;;      Params:         0       0       0       0
  5298 ;;      Locals:         0       1       0       0
  5299 ;;      Temps:          0       1       0       0
  5300 ;;      Totals:         0       2       0       0
  5301 ;;Total ram usage:        2 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    5
  5304 ;; This function calls:
  5305 ;;		_setLED
  5306 ;; This function is called by:
  5307 ;;		_LED_Main
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           
  5312                           ;psect for function _setPIRLED_Main
  5313  044B                     _setPIRLED_Main:	
  5314                           
  5315                           ;LED_B1.c: 267: char count;
  5316                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  5317                           
  5318                           ;incstack = 0
  5319                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5320  044B  1283               	bcf	3,5	;RP0=0, select bank0
  5321  044C  1303               	bcf	3,6	;RP1=0, select bank0
  5322  044D  1C36               	btfss	_PIRLED,0
  5323  044E  0008               	return
  5324                           
  5325                           ;LED_B1.c: 269: PIRLED.Time++;
  5326  044F  3001               	movlw	1
  5327  0450  07B8               	addwf	_PIRLED+2,f
  5328  0451  1803               	skipnc
  5329  0452  0AB9               	incf	_PIRLED+3,f
  5330  0453  3000               	movlw	0
  5331  0454  07B9               	addwf	_PIRLED+3,f
  5332                           
  5333                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  5334  0455  3000               	movlw	0
  5335  0456  0239               	subwf	_PIRLED+3,w
  5336  0457  3019               	movlw	25
  5337  0458  1903               	skipnz
  5338  0459  0238               	subwf	_PIRLED+2,w
  5339  045A  1C03               	skipc
  5340  045B  0008               	return
  5341                           
  5342                           ;LED_B1.c: 271: PIRLED.Time = 0;
  5343  045C  01B8               	clrf	_PIRLED+2
  5344  045D  01B9               	clrf	_PIRLED+3
  5345                           
  5346                           ;LED_B1.c: 272: setLED(1, 0);
  5347  045E  01D9               	clrf	setLED@command
  5348  045F  3001               	movlw	1
  5349  0460  118A  24BC  118A   	fcall	_setLED
  5350                           
  5351                           ;LED_B1.c: 273: setLED(2, 0);
  5352  0463  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0464  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0465  01D9               	clrf	setLED@command
  5355  0466  3002               	movlw	2
  5356  0467  118A  24BC  118A   	fcall	_setLED
  5357                           
  5358                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  5359  046A  1283               	bcf	3,5	;RP0=0, select bank0
  5360  046B  1303               	bcf	3,6	;RP1=0, select bank0
  5361  046C  1CB6               	btfss	_PIRLED,1
  5362  046D  2C72               	goto	l4361
  5363                           
  5364                           ;LED_B1.c: 275: count = 4;
  5365  046E  3004               	movlw	4
  5366  046F  00DB               	movwf	??_setPIRLED_Main
  5367  0470  085B               	movf	??_setPIRLED_Main,w
  5368  0471  00DC               	movwf	setPIRLED_Main@count
  5369  0472                     l4361:	
  5370                           
  5371                           ;LED_B1.c: 276: }
  5372                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  5373  0472  1D36               	btfss	_PIRLED,2
  5374  0473  2C78               	goto	l4365
  5375                           
  5376                           ;LED_B1.c: 278: count = 6;
  5377  0474  3006               	movlw	6
  5378  0475  00DB               	movwf	??_setPIRLED_Main
  5379  0476  085B               	movf	??_setPIRLED_Main,w
  5380  0477  00DC               	movwf	setPIRLED_Main@count
  5381  0478                     l4365:	
  5382                           
  5383                           ;LED_B1.c: 279: }
  5384                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  5385  0478  1DB6               	btfss	_PIRLED,3
  5386  0479  2C7E               	goto	l4369
  5387                           
  5388                           ;LED_B1.c: 281: count = 8;
  5389  047A  3008               	movlw	8
  5390  047B  00DB               	movwf	??_setPIRLED_Main
  5391  047C  085B               	movf	??_setPIRLED_Main,w
  5392  047D  00DC               	movwf	setPIRLED_Main@count
  5393  047E                     l4369:	
  5394                           
  5395                           ;LED_B1.c: 282: }
  5396                           ;LED_B1.c: 283: PIRLED.Count++;
  5397  047E  3001               	movlw	1
  5398  047F  00DB               	movwf	??_setPIRLED_Main
  5399  0480  085B               	movf	??_setPIRLED_Main,w
  5400  0481  07B7               	addwf	_PIRLED+1,f
  5401                           
  5402                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5403  0482  0837               	movf	_PIRLED+1,w
  5404  0483  3A01               	xorlw	1
  5405  0484  1903               	skipnz
  5406  0485  2C8A               	goto	l4375
  5407  0486  0837               	movf	_PIRLED+1,w
  5408  0487  3A02               	xorlw	2
  5409  0488  1D03               	skipz
  5410  0489  2C9E               	goto	l4379
  5411  048A                     l4375:	
  5412                           
  5413                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5414  048A  1003               	clrc
  5415  048B  1E36               	btfss	_PIRLED,4
  5416  048C  1403               	setc
  5417  048D  1C03               	btfss	3,0
  5418  048E  2C93               	goto	u5020
  5419  048F  1283               	bcf	3,5	;RP0=0, select bank0
  5420  0490  1303               	bcf	3,6	;RP1=0, select bank0
  5421  0491  1636               	bsf	_PIRLED,4
  5422  0492  2C96               	goto	l4377
  5423  0493                     u5020:	
  5424  0493  1283               	bcf	3,5	;RP0=0, select bank0
  5425  0494  1303               	bcf	3,6	;RP1=0, select bank0
  5426  0495  1236               	bcf	_PIRLED,4
  5427  0496                     l4377:	
  5428                           
  5429                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  5430  0496  3000               	movlw	0
  5431  0497  1A36               	btfsc	_PIRLED,4
  5432  0498  3001               	movlw	1
  5433  0499  00D9               	movwf	setLED@command
  5434  049A  3002               	movlw	2
  5435  049B  118A  24BC         	fcall	_setLED
  5436                           
  5437                           ;LED_B1.c: 287: } else {
  5438  049D  0008               	return
  5439  049E                     l4379:	
  5440                           
  5441                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5442  049E  1003               	clrc
  5443  049F  1283               	bcf	3,5	;RP0=0, select bank0
  5444  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  5445  04A1  1E36               	btfss	_PIRLED,4
  5446  04A2  1403               	setc
  5447  04A3  1C03               	btfss	3,0
  5448  04A4  2CA9               	goto	u5040
  5449  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  5450  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  5451  04A7  1636               	bsf	_PIRLED,4
  5452  04A8  2CAC               	goto	l4381
  5453  04A9                     u5040:	
  5454  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  5455  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  5456  04AB  1236               	bcf	_PIRLED,4
  5457  04AC                     l4381:	
  5458                           
  5459                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  5460  04AC  3000               	movlw	0
  5461  04AD  1A36               	btfsc	_PIRLED,4
  5462  04AE  3001               	movlw	1
  5463  04AF  00D9               	movwf	setLED@command
  5464  04B0  3001               	movlw	1
  5465  04B1  118A  24BC  118A   	fcall	_setLED
  5466                           
  5467                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  5468  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  5469  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  5470  04B6  0837               	movf	_PIRLED+1,w
  5471  04B7  065C               	xorwf	setPIRLED_Main@count,w
  5472  04B8  1D03               	skipz
  5473  04B9  0008               	return
  5474                           
  5475                           ;LED_B1.c: 291: PIRLED.Count = 0;
  5476  04BA  01B7               	clrf	_PIRLED+1
  5477  04BB  0008               	return
  5478  04BC                     __end_of_setPIRLED_Main:	
  5479                           
  5480                           	psect	text28
  5481  0DEE                     __ptext28:	
  5482 ;; *************** function _LED_Initialization *****************
  5483 ;; Defined at:
  5484 ;;		line 31 in file "../src/LED_B1.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;		None
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;		None
  5489 ;; Return value:  Size  Location     Type
  5490 ;;		None               void
  5491 ;; Registers used:
  5492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5498 ;;      Params:         0       0       0       0
  5499 ;;      Locals:         0       0       0       0
  5500 ;;      Temps:          0       0       0       0
  5501 ;;      Totals:         0       0       0       0
  5502 ;;Total ram usage:        0 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    6
  5505 ;; This function calls:
  5506 ;;		_setLED_Initialization
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           
  5513                           ;psect for function _LED_Initialization
  5514  0DEE                     _LED_Initialization:	
  5515                           
  5516                           ;LED_B1.c: 33: setLED_Initialization(1);
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5520  0DEE  3001               	movlw	1
  5521  0DEF  158A  2690  158A   	fcall	_setLED_Initialization
  5522                           
  5523                           ;LED_B1.c: 36: setLED_Initialization(2);
  5524  0DF2  3002               	movlw	2
  5525  0DF3  158A  2690  158A   	fcall	_setLED_Initialization
  5526                           
  5527                           ;LED_B1.c: 42: setLED_Initialization(99);
  5528  0DF6  3063               	movlw	99
  5529  0DF7  158A  2690         	fcall	_setLED_Initialization
  5530  0DF9  0008               	return
  5531  0DFA                     __end_of_LED_Initialization:	
  5532                           
  5533                           	psect	text29
  5534  0E90                     __ptext29:	
  5535 ;; *************** function _setLED_Initialization *****************
  5536 ;; Defined at:
  5537 ;;		line 74 in file "../src/LED_B1.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  led             1    wreg     unsigned char 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  led             1    4[BANK0 ] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;		None               void
  5544 ;; Registers used:
  5545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5551 ;;      Params:         0       0       0       0
  5552 ;;      Locals:         0       1       0       0
  5553 ;;      Temps:          0       0       0       0
  5554 ;;      Totals:         0       1       0       0
  5555 ;;Total ram usage:        1 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    5
  5558 ;; This function calls:
  5559 ;;		_LedPointSelect
  5560 ;;		_setLED
  5561 ;; This function is called by:
  5562 ;;		_LED_Initialization
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function _setLED_Initialization
  5568  0E90                     _setLED_Initialization:	
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5572                           ;setLED_Initialization@led stored from wreg
  5573  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  5575  0E92  00DB               	movwf	setLED_Initialization@led
  5576                           
  5577                           ;LED_B1.c: 75: LedPointSelect(led);
  5578  0E93  085B               	movf	setLED_Initialization@led,w
  5579  0E94  158A  2787  158A   	fcall	_LedPointSelect
  5580                           
  5581                           ;LED_B1.c: 76: LED->Enable = 1;
  5582  0E97  0873               	movf	_LED,w
  5583  0E98  0084               	movwf	4
  5584  0E99  1383               	bcf	3,7	;select IRP bank0
  5585  0E9A  1400               	bsf	0,0
  5586                           
  5587                           ;LED_B1.c: 77: setLED(led, 0);
  5588  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0E9D  01D9               	clrf	setLED@command
  5591  0E9E  085B               	movf	setLED_Initialization@led,w
  5592  0E9F  118A  24BC         	fcall	_setLED
  5593  0EA1  0008               	return
  5594  0EA2                     __end_of_setLED_Initialization:	
  5595                           
  5596                           	psect	text30
  5597  068E                     __ptext30:	
  5598 ;; *************** function _Exception_Main *****************
  5599 ;; Defined at:
  5600 ;;		line 499 in file "../src/Main_B1.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;		None
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  error           1    9[BANK0 ] unsigned char 
  5605 ;;  status          1    8[BANK0 ] unsigned char 
  5606 ;;  count           1    7[BANK0 ] unsigned char 
  5607 ;;  lights          1    6[BANK0 ] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;		None               void
  5610 ;; Registers used:
  5611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5617 ;;      Params:         0       0       0       0
  5618 ;;      Locals:         0       4       0       0
  5619 ;;      Temps:          0       1       0       0
  5620 ;;      Totals:         0       5       0       0
  5621 ;;Total ram usage:        5 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    5
  5624 ;; This function calls:
  5625 ;;		_getDimmerLights_Status
  5626 ;;		_getMain_All_Error_Status
  5627 ;;		_setLED
  5628 ;; This function is called by:
  5629 ;;		_main
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function _Exception_Main
  5635  068E                     _Exception_Main:	
  5636                           
  5637                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  5638                           
  5639                           ;incstack = 0
  5640                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5641  068E  3000               	movlw	0
  5642  068F  158A  2737  118A   	fcall	_getMain_All_Error_Status
  5643  0692  1283               	bcf	3,5	;RP0=0, select bank0
  5644  0693  1303               	bcf	3,6	;RP1=0, select bank0
  5645  0694  00DC               	movwf	??_Exception_Main
  5646  0695  085C               	movf	??_Exception_Main,w
  5647  0696  00E0               	movwf	Exception_Main@error
  5648                           
  5649                           ;Main_B1.c: 501: char lights = 0, count = 1;
  5650  0697  01DD               	clrf	Exception_Main@lights
  5651  0698  01DE               	clrf	Exception_Main@count
  5652  0699  0ADE               	incf	Exception_Main@count,f
  5653                           
  5654                           ;Main_B1.c: 502: char status = 0;
  5655  069A  01DF               	clrf	Exception_Main@status
  5656                           
  5657                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  5658  069B  1DB3               	btfss	_myMain+2,3
  5659  069C  2EA9               	goto	l4889
  5660                           
  5661                           ;Main_B1.c: 505: if (error == 0) {
  5662  069D  08E0               	movf	Exception_Main@error,f
  5663  069E  1D03               	skipz
  5664  069F  0008               	return
  5665                           
  5666                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  5667  06A0  11B3               	bcf	_myMain+2,3
  5668                           
  5669                           ;Main_B1.c: 511: setLED(error, 110);
  5670  06A1  306E               	movlw	110
  5671  06A2  00DC               	movwf	??_Exception_Main
  5672  06A3  085C               	movf	??_Exception_Main,w
  5673  06A4  00D9               	movwf	setLED@command
  5674  06A5  0860               	movf	Exception_Main@error,w
  5675  06A6  118A  24BC         	fcall	_setLED
  5676                           
  5677                           ;Main_B1.c: 522: }
  5678                           ;Main_B1.c: 523: } else {
  5679  06A8  0008               	return
  5680  06A9                     l4889:	
  5681                           
  5682                           ;Main_B1.c: 524: if (error != 0) {
  5683  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  5684  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  5685  06AB  0860               	movf	Exception_Main@error,w
  5686  06AC  1903               	btfsc	3,2
  5687  06AD  0008               	return
  5688                           
  5689                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  5690  06AE  15B3               	bsf	_myMain+2,3
  5691                           
  5692                           ;Main_B1.c: 529: setLED(error, 111);
  5693  06AF  306F               	movlw	111
  5694  06B0  00DC               	movwf	??_Exception_Main
  5695  06B1  085C               	movf	??_Exception_Main,w
  5696  06B2  00D9               	movwf	setLED@command
  5697  06B3  0860               	movf	Exception_Main@error,w
  5698  06B4  118A  24BC  118A   	fcall	_setLED
  5699                           
  5700                           ;Main_B1.c: 538: switch (error) {
  5701  06B7  2EC6               	goto	l4901
  5702  06B8                     l4895:	
  5703                           ;Main_B1.c: 539: case 2:
  5704                           
  5705                           
  5706                           ;Main_B1.c: 542: if (getDimmerLights_Status(1) == 1) {
  5707  06B8  3001               	movlw	1
  5708  06B9  158A  265D  118A   	fcall	_getDimmerLights_Status
  5709  06BC  3A01               	xorlw	1
  5710  06BD  1903               	btfsc	3,2
  5711  06BE  2EC2               	goto	l4897
  5712  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  5713  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  5714  06C1  0008               	return
  5715  06C2                     l4897:	
  5716                           
  5717                           ;Main_B1.c: 543: Dimmer.PIR_Close_Status = 1;
  5718  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  5719  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  5720  06C4  142D               	bsf	_Dimmer+1,0
  5721                           
  5722                           ;Main_B1.c: 586: }
  5723                           
  5724                           ;Main_B1.c: 585: break;
  5725                           
  5726                           ;Main_B1.c: 561: case 3:
  5727                           
  5728                           ;Main_B1.c: 544: }
  5729                           ;Main_B1.c: 560: break;
  5730  06C5  0008               	return
  5731  06C6                     l4901:	
  5732  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  5733  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  5734  06C8  0860               	movf	Exception_Main@error,w
  5735                           
  5736                           ; Switch size 1, requested type "space"
  5737                           ; Number of cases is 2, Range of values is 2 to 3
  5738                           ; switch strategies available:
  5739                           ; Name         Instructions Cycles
  5740                           ; simple_byte            7     4 (average)
  5741                           ; direct_byte           14    10 (fixed)
  5742                           ; jumptable            263     9 (fixed)
  5743                           ;	Chosen strategy is simple_byte
  5744  06C9  3A02               	xorlw	2	; case 2
  5745  06CA  1903               	skipnz
  5746  06CB  2EB8               	goto	l4895
  5747  06CC  3A01               	xorlw	1	; case 3
  5748  06CD  1903               	skipnz
  5749  06CE  2ED1               	goto	l826
  5750  06CF  2ED1               	goto	l826
  5751  06D0  0008               	return
  5752  06D1                     l826:	
  5753  06D1  0008               	return
  5754  06D2                     __end_of_Exception_Main:	
  5755                           
  5756                           	psect	text31
  5757  04BC                     __ptext31:	
  5758 ;; *************** function _setLED *****************
  5759 ;; Defined at:
  5760 ;;		line 81 in file "../src/LED_B1.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  led             1    wreg     unsigned char 
  5763 ;;  command         1    2[BANK0 ] unsigned char 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  led             1    3[BANK0 ] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;		None               void
  5768 ;; Registers used:
  5769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5775 ;;      Params:         0       1       0       0
  5776 ;;      Locals:         0       1       0       0
  5777 ;;      Temps:          0       0       0       0
  5778 ;;      Totals:         0       2       0       0
  5779 ;;Total ram usage:        2 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    4
  5782 ;; This function calls:
  5783 ;;		_LedPointSelect
  5784 ;; This function is called by:
  5785 ;;		_setLED_Initialization
  5786 ;;		_setPIRLED_Main
  5787 ;;		_Exception_Main
  5788 ;;		_PIR_Main
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function _setLED
  5794  04BC                     _setLED:	
  5795                           
  5796                           ;incstack = 0
  5797                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5798                           ;setLED@led stored from wreg
  5799  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  5800  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  5801  04BE  00DA               	movwf	setLED@led
  5802                           
  5803                           ;LED_B1.c: 82: LedPointSelect(led);
  5804  04BF  085A               	movf	setLED@led,w
  5805  04C0  158A  2787  118A   	fcall	_LedPointSelect
  5806                           
  5807                           ;LED_B1.c: 83: if (command == 0) {
  5808  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5809  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5810  04C5  08D9               	movf	setLED@command,f
  5811  04C6  1D03               	skipz
  5812  04C7  2CD5               	goto	l4153
  5813                           
  5814                           ;LED_B1.c: 85: if (led == 1) {
  5815  04C8  085A               	movf	setLED@led,w
  5816  04C9  3A01               	xorlw	1
  5817  04CA  1D03               	skipz
  5818  04CB  2CCD               	goto	l4145
  5819                           
  5820                           ;LED_B1.c: 89: RB4 = 1;
  5821  04CC  1606               	bsf	6,4	;volatile
  5822  04CD                     l4145:	
  5823                           
  5824                           ;LED_B1.c: 91: }
  5825                           ;LED_B1.c: 94: if (led == 2) {
  5826  04CD  085A               	movf	setLED@led,w
  5827  04CE  3A02               	xorlw	2
  5828  04CF  1903               	btfsc	3,2
  5829                           
  5830                           ;LED_B1.c: 98: RB5 = 1;
  5831  04D0  1686               	bsf	6,5	;volatile
  5832                           
  5833                           ;LED_B1.c: 100: }
  5834                           ;LED_B1.c: 112: if (led == 99) {
  5835  04D1  085A               	movf	setLED@led,w
  5836  04D2  3A63               	xorlw	99
  5837  04D3  1903               	btfsc	3,2
  5838                           
  5839                           ;LED_B1.c: 116: RB3 = 1;
  5840  04D4  1586               	bsf	6,3	;volatile
  5841  04D5                     l4153:	
  5842                           
  5843                           ;LED_B1.c: 118: }
  5844                           ;LED_B1.c: 120: }
  5845                           ;LED_B1.c: 121: if (command == 1) {
  5846  04D5  0859               	movf	setLED@command,w
  5847  04D6  3A01               	xorlw	1
  5848  04D7  1D03               	skipz
  5849  04D8  2CE6               	goto	l4167
  5850                           
  5851                           ;LED_B1.c: 123: if (led == 1) {
  5852  04D9  085A               	movf	setLED@led,w
  5853  04DA  3A01               	xorlw	1
  5854  04DB  1D03               	skipz
  5855  04DC  2CDE               	goto	l4159
  5856                           
  5857                           ;LED_B1.c: 127: RB4 = 0;
  5858  04DD  1206               	bcf	6,4	;volatile
  5859  04DE                     l4159:	
  5860                           
  5861                           ;LED_B1.c: 129: }
  5862                           ;LED_B1.c: 132: if (led == 2) {
  5863  04DE  085A               	movf	setLED@led,w
  5864  04DF  3A02               	xorlw	2
  5865  04E0  1903               	btfsc	3,2
  5866                           
  5867                           ;LED_B1.c: 136: RB5 = 0;
  5868  04E1  1286               	bcf	6,5	;volatile
  5869                           
  5870                           ;LED_B1.c: 138: }
  5871                           ;LED_B1.c: 150: if (led == 99) {
  5872  04E2  085A               	movf	setLED@led,w
  5873  04E3  3A63               	xorlw	99
  5874  04E4  1903               	btfsc	3,2
  5875                           
  5876                           ;LED_B1.c: 154: RB3 = 0;
  5877  04E5  1186               	bcf	6,3	;volatile
  5878  04E6                     l4167:	
  5879                           
  5880                           ;LED_B1.c: 156: }
  5881                           ;LED_B1.c: 158: }
  5882                           ;LED_B1.c: 159: if (command == 10) {
  5883  04E6  0859               	movf	setLED@command,w
  5884  04E7  3A0A               	xorlw	10
  5885  04E8  1D03               	skipz
  5886  04E9  2D01               	goto	l4185
  5887                           
  5888                           ;LED_B1.c: 160: LED->GO = 0;
  5889  04EA  0873               	movf	_LED,w
  5890  04EB  0084               	movwf	4
  5891  04EC  1383               	bcf	3,7	;select IRP bank0
  5892  04ED  1080               	bcf	0,1
  5893                           
  5894                           ;LED_B1.c: 161: LED->Time = 0;
  5895  04EE  0A73               	incf	_LED,w
  5896  04EF  0084               	movwf	4
  5897  04F0  0180               	clrf	0
  5898  04F1  0A84               	incf	4,f
  5899  04F2  0180               	clrf	0
  5900                           
  5901                           ;LED_B1.c: 163: if (led == 1) {
  5902  04F3  085A               	movf	setLED@led,w
  5903  04F4  3A01               	xorlw	1
  5904  04F5  1D03               	skipz
  5905  04F6  2CF9               	goto	l4177
  5906                           
  5907                           ;LED_B1.c: 167: RB4 = 1;
  5908  04F7  1606               	bsf	6,4	;volatile
  5909                           
  5910                           ;LED_B1.c: 169: }
  5911  04F8  2CFD               	goto	l4181
  5912  04F9                     l4177:	
  5913                           
  5914                           ;LED_B1.c: 172: else if (led == 2) {
  5915  04F9  085A               	movf	setLED@led,w
  5916  04FA  3A02               	xorlw	2
  5917  04FB  1903               	btfsc	3,2
  5918                           
  5919                           ;LED_B1.c: 176: RB5 = 1;
  5920  04FC  1686               	bsf	6,5	;volatile
  5921  04FD                     l4181:	
  5922                           
  5923                           ;LED_B1.c: 178: }
  5924                           ;LED_B1.c: 190: if (led == 99) {
  5925  04FD  085A               	movf	setLED@led,w
  5926  04FE  3A63               	xorlw	99
  5927  04FF  1903               	btfsc	3,2
  5928                           
  5929                           ;LED_B1.c: 194: RB3 = 1;
  5930  0500  1586               	bsf	6,3	;volatile
  5931  0501                     l4185:	
  5932                           
  5933                           ;LED_B1.c: 196: }
  5934                           ;LED_B1.c: 198: }
  5935                           ;LED_B1.c: 199: if (command == 11) {
  5936  0501  0859               	movf	setLED@command,w
  5937  0502  3A0B               	xorlw	11
  5938  0503  1D03               	skipz
  5939  0504  2D09               	goto	l4189
  5940                           
  5941                           ;LED_B1.c: 200: LED->GO = 1;
  5942  0505  0873               	movf	_LED,w
  5943  0506  0084               	movwf	4
  5944  0507  1383               	bcf	3,7	;select IRP bank0
  5945  0508  1480               	bsf	0,1
  5946  0509                     l4189:	
  5947                           
  5948                           ;LED_B1.c: 201: }
  5949                           ;LED_B1.c: 205: if (command == 111) {
  5950  0509  0859               	movf	setLED@command,w
  5951  050A  3A6F               	xorlw	111
  5952  050B  1D03               	skipz
  5953  050C  2D27               	goto	l4215
  5954                           
  5955                           ;LED_B1.c: 206: PIRLED.Count = 0;
  5956  050D  01B7               	clrf	_PIRLED+1
  5957                           
  5958                           ;LED_B1.c: 207: PIRLED.Time = 0;
  5959  050E  01B8               	clrf	_PIRLED+2
  5960  050F  01B9               	clrf	_PIRLED+3
  5961                           
  5962                           ;LED_B1.c: 208: PIRLED.status = 0;
  5963  0510  1236               	bcf	_PIRLED,4
  5964                           
  5965                           ;LED_B1.c: 209: PIRLED.GO = 1;
  5966  0511  1436               	bsf	_PIRLED,0
  5967                           
  5968                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  5969  0512  10B6               	bcf	_PIRLED,1
  5970                           
  5971                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  5972  0513  1136               	bcf	_PIRLED,2
  5973                           
  5974                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  5975  0514  11B6               	bcf	_PIRLED,3
  5976                           
  5977                           ;LED_B1.c: 213: if (led == 1) {
  5978  0515  085A               	movf	setLED@led,w
  5979  0516  3A01               	xorlw	1
  5980  0517  1D03               	skipz
  5981  0518  2D1B               	goto	l4207
  5982                           
  5983                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  5984  0519  14B6               	bsf	_PIRLED,1
  5985                           
  5986                           ;LED_B1.c: 215: } else if (led == 2) {
  5987  051A  0008               	return
  5988  051B                     l4207:	
  5989  051B  085A               	movf	setLED@led,w
  5990  051C  3A02               	xorlw	2
  5991  051D  1D03               	skipz
  5992  051E  2D21               	goto	l4211
  5993                           
  5994                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  5995  051F  1536               	bsf	_PIRLED,2
  5996                           
  5997                           ;LED_B1.c: 217: } else if (led == 3) {
  5998  0520  0008               	return
  5999  0521                     l4211:	
  6000  0521  085A               	movf	setLED@led,w
  6001  0522  3A03               	xorlw	3
  6002  0523  1D03               	skipz
  6003  0524  0008               	return
  6004                           
  6005                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  6006  0525  15B6               	bsf	_PIRLED,3
  6007                           
  6008                           ;LED_B1.c: 219: }
  6009                           ;LED_B1.c: 220: } else if (command == 110) {
  6010  0526  0008               	return
  6011  0527                     l4215:	
  6012  0527  0859               	movf	setLED@command,w
  6013  0528  3A6E               	xorlw	110
  6014  0529  1D03               	skipz
  6015  052A  0008               	return
  6016                           
  6017                           ;LED_B1.c: 221: PIRLED.GO = 0;
  6018  052B  1036               	bcf	_PIRLED,0
  6019  052C  0008               	return
  6020  052D                     __end_of_setLED:	
  6021                           
  6022                           	psect	text32
  6023  0F87                     __ptext32:	
  6024 ;; *************** function _LedPointSelect *****************
  6025 ;; Defined at:
  6026 ;;		line 7 in file "../src/LED_B1.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  led             1    wreg     unsigned char 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  led             1    1[BANK0 ] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;		None               void
  6033 ;; Registers used:
  6034 ;;		wreg
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6040 ;;      Params:         0       0       0       0
  6041 ;;      Locals:         0       1       0       0
  6042 ;;      Temps:          0       1       0       0
  6043 ;;      Totals:         0       2       0       0
  6044 ;;Total ram usage:        2 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    3
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_setLED_Initialization
  6051 ;;		_setLED
  6052 ;;		_setLED_Main
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _LedPointSelect
  6058  0F87                     _LedPointSelect:	
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _LedPointSelect: [wreg]
  6062                           ;LedPointSelect@led stored from wreg
  6063  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  6065  0F89  00D8               	movwf	LedPointSelect@led
  6066                           
  6067                           ;LED_B1.c: 9: if (led == 1) {
  6068  0F8A  0858               	movf	LedPointSelect@led,w
  6069  0F8B  3A01               	xorlw	1
  6070  0F8C  1D03               	skipz
  6071  0F8D  2F92               	goto	l481
  6072                           
  6073                           ;LED_B1.c: 10: LED = &VarLED1;
  6074  0F8E  304F               	movlw	_VarLED1& (0+255)
  6075  0F8F  00D7               	movwf	??_LedPointSelect
  6076  0F90  0857               	movf	??_LedPointSelect,w
  6077  0F91  00F3               	movwf	_LED
  6078  0F92                     l481:	
  6079                           
  6080                           ;LED_B1.c: 11: }
  6081                           ;LED_B1.c: 14: if (led == 2) {
  6082  0F92  0858               	movf	LedPointSelect@led,w
  6083  0F93  3A02               	xorlw	2
  6084  0F94  1D03               	skipz
  6085  0F95  2F9A               	goto	l482
  6086                           
  6087                           ;LED_B1.c: 15: LED = &VarLED2;
  6088  0F96  3053               	movlw	_VarLED2& (0+255)
  6089  0F97  00D7               	movwf	??_LedPointSelect
  6090  0F98  0857               	movf	??_LedPointSelect,w
  6091  0F99  00F3               	movwf	_LED
  6092  0F9A                     l482:	
  6093                           
  6094                           ;LED_B1.c: 16: }
  6095                           ;LED_B1.c: 24: if (led == 99) {
  6096  0F9A  0858               	movf	LedPointSelect@led,w
  6097  0F9B  3A63               	xorlw	99
  6098  0F9C  1D03               	skipz
  6099  0F9D  0008               	return
  6100                           
  6101                           ;LED_B1.c: 25: LED = &VarErrLED;
  6102  0F9E  304B               	movlw	_VarErrLED& (0+255)
  6103  0F9F  00D7               	movwf	??_LedPointSelect
  6104  0FA0  0857               	movf	??_LedPointSelect,w
  6105  0FA1  00F3               	movwf	_LED
  6106  0FA2  0008               	return
  6107  0FA3                     __end_of_LedPointSelect:	
  6108                           
  6109                           	psect	text33
  6110  0F37                     __ptext33:	
  6111 ;; *************** function _getMain_All_Error_Status *****************
  6112 ;; Defined at:
  6113 ;;		line 424 in file "../src/Main_B1.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  command         1    wreg     unsigned char 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  command         1    1[BANK0 ] unsigned char 
  6118 ;;  status          1    4[BANK0 ] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      unsigned char 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6128 ;;      Params:         0       0       0       0
  6129 ;;      Locals:         0       4       0       0
  6130 ;;      Temps:          0       1       0       0
  6131 ;;      Totals:         0       5       0       0
  6132 ;;Total ram usage:        5 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    3
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_Exception_Main
  6139 ;;		_setTemp_Main
  6140 ;;		_PIR_Main
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           
  6145                           ;psect for function _getMain_All_Error_Status
  6146  0F37                     _getMain_All_Error_Status:	
  6147                           
  6148                           ;incstack = 0
  6149                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6150                           ;getMain_All_Error_Status@command stored from wreg
  6151  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  6152  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  6153  0F39  00D8               	movwf	getMain_All_Error_Status@command
  6154                           
  6155                           ;Main_B1.c: 425: char status = 0;
  6156  0F3A  01DB               	clrf	getMain_All_Error_Status@status
  6157                           
  6158                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6159  0F3B  08DB               	movf	getMain_All_Error_Status@status,f
  6160  0F3C  1D03               	skipz
  6161  0F3D  2F4F               	goto	l806
  6162  0F3E  0858               	movf	getMain_All_Error_Status@command,w
  6163  0F3F  3A02               	xorlw	2
  6164  0F40  1903               	skipnz
  6165  0F41  2F4F               	goto	l806
  6166                           
  6167                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6168  0F42  18C4               	btfsc	_Temp,1
  6169  0F43  2F47               	goto	l4239
  6170  0F44  01D9               	clrf	_getMain_All_Error_Status$2565
  6171  0F45  01DA               	clrf	_getMain_All_Error_Status$2565+1
  6172  0F46  2F4B               	goto	l810
  6173  0F47                     l4239:	
  6174  0F47  3002               	movlw	2
  6175  0F48  00D9               	movwf	_getMain_All_Error_Status$2565
  6176  0F49  3000               	movlw	0
  6177  0F4A  00DA               	movwf	_getMain_All_Error_Status$2565+1
  6178  0F4B                     l810:	
  6179  0F4B  0859               	movf	_getMain_All_Error_Status$2565,w
  6180  0F4C  00D7               	movwf	??_getMain_All_Error_Status
  6181  0F4D  0857               	movf	??_getMain_All_Error_Status,w
  6182  0F4E  00DB               	movwf	getMain_All_Error_Status@status
  6183  0F4F                     l806:	
  6184                           
  6185                           ;Main_B1.c: 438: }
  6186                           ;Main_B1.c: 455: return status;
  6187  0F4F  085B               	movf	getMain_All_Error_Status@status,w
  6188  0F50  0008               	return
  6189  0F51                     __end_of_getMain_All_Error_Status:	
  6190                           
  6191                           	psect	text34
  6192  0DAC                     __ptext34:	
  6193 ;; *************** function _DimmerLights_Main *****************
  6194 ;; Defined at:
  6195 ;;		line 774 in file "../src/Dimmer_B1.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;		None               void
  6202 ;; Registers used:
  6203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6209 ;;      Params:         0       0       0       0
  6210 ;;      Locals:         0       0       0       0
  6211 ;;      Temps:          0       0       0       0
  6212 ;;      Totals:         0       0       0       0
  6213 ;;Total ram usage:        0 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    6
  6216 ;; This function calls:
  6217 ;;		_DimmerLights_PIR_Control
  6218 ;;		_setDimmerLights_Main
  6219 ;; This function is called by:
  6220 ;;		_main
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           
  6225                           ;psect for function _DimmerLights_Main
  6226  0DAC                     _DimmerLights_Main:	
  6227                           
  6228                           ;Dimmer_B1.c: 785: setDimmerLights_Main(1);
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6232  0DAC  3001               	movlw	1
  6233  0DAD  118A  252D  158A   	fcall	_setDimmerLights_Main
  6234                           
  6235                           ;Dimmer_B1.c: 797: DimmerLights_PIR_Control();
  6236  0DB0  118A  233C         	fcall	_DimmerLights_PIR_Control
  6237  0DB2  0008               	return
  6238  0DB3                     __end_of_DimmerLights_Main:	
  6239                           
  6240                           	psect	text35
  6241  052D                     __ptext35:	
  6242 ;; *************** function _setDimmerLights_Main *****************
  6243 ;; Defined at:
  6244 ;;		line 803 in file "../src/Dimmer_B1.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  lights          1    wreg     unsigned char 
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  lights          1    7[BANK0 ] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;		None               void
  6251 ;; Registers used:
  6252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6258 ;;      Params:         0       0       0       0
  6259 ;;      Locals:         0       1       0       0
  6260 ;;      Temps:          0       0       0       0
  6261 ;;      Totals:         0       1       0       0
  6262 ;;Total ram usage:        1 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    5
  6265 ;; This function calls:
  6266 ;;		_DimmerLights_SelectPointer
  6267 ;;		_getDimmerLights_Allow_Condition
  6268 ;;		_getMain_All_LightsStatus
  6269 ;;		_setDimmerLights_Dimming
  6270 ;;		_setDimmerLights_OnOff
  6271 ;; This function is called by:
  6272 ;;		_DimmerLights_Main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function _setDimmerLights_Main
  6278  052D                     _setDimmerLights_Main:	
  6279                           
  6280                           ;incstack = 0
  6281                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6282                           ;setDimmerLights_Main@lights stored from wreg
  6283  052D  1283               	bcf	3,5	;RP0=0, select bank0
  6284  052E  1303               	bcf	3,6	;RP1=0, select bank0
  6285  052F  00DE               	movwf	setDimmerLights_Main@lights
  6286                           
  6287                           ;Dimmer_B1.c: 805: DimmerLights_SelectPointer(lights);
  6288  0530  085E               	movf	setDimmerLights_Main@lights,w
  6289  0531  158A  25CA  118A   	fcall	_DimmerLights_SelectPointer
  6290                           
  6291                           ;Dimmer_B1.c: 806: if (DimmerLights->Trigger == 1) {
  6292  0534  0872               	movf	_DimmerLights,w
  6293  0535  0084               	movwf	4
  6294  0536  1383               	bcf	3,7	;select IRP bank0
  6295  0537  1C80               	btfss	0,1
  6296  0538  2D59               	goto	l4283
  6297                           
  6298                           ;Dimmer_B1.c: 807: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6299  0539  1283               	bcf	3,5	;RP0=0, select bank0
  6300  053A  1303               	bcf	3,6	;RP1=0, select bank0
  6301  053B  085E               	movf	setDimmerLights_Main@lights,w
  6302  053C  158A  2595  118A   	fcall	_getDimmerLights_Allow_Condition
  6303  053F  3800               	iorlw	0
  6304  0540  1D03               	skipz
  6305  0541  0008               	return
  6306                           
  6307                           ;Dimmer_B1.c: 808: DimmerLights->Trigger = 0;
  6308  0542  0872               	movf	_DimmerLights,w
  6309  0543  0084               	movwf	4
  6310  0544  1383               	bcf	3,7	;select IRP bank0
  6311  0545  1080               	bcf	0,1
  6312                           
  6313                           ;Dimmer_B1.c: 809: if (DimmerLights->Switch == 1) {
  6314  0546  0872               	movf	_DimmerLights,w
  6315  0547  0084               	movwf	4
  6316  0548  1D00               	btfss	0,2
  6317  0549  2D52               	goto	l4281
  6318                           
  6319                           ;Dimmer_B1.c: 810: setDimmerLights_OnOff(lights, 1);
  6320  054A  1283               	bcf	3,5	;RP0=0, select bank0
  6321  054B  1303               	bcf	3,6	;RP1=0, select bank0
  6322  054C  01DA               	clrf	setDimmerLights_OnOff@command
  6323  054D  0ADA               	incf	setDimmerLights_OnOff@command,f
  6324  054E  085E               	movf	setDimmerLights_Main@lights,w
  6325  054F  118A  2746         	fcall	_setDimmerLights_OnOff
  6326                           
  6327                           ;Dimmer_B1.c: 811: } else {
  6328  0551  0008               	return
  6329  0552                     l4281:	
  6330                           
  6331                           ;Dimmer_B1.c: 812: setDimmerLights_OnOff(lights, 0);
  6332  0552  1283               	bcf	3,5	;RP0=0, select bank0
  6333  0553  1303               	bcf	3,6	;RP1=0, select bank0
  6334  0554  01DA               	clrf	setDimmerLights_OnOff@command
  6335  0555  085E               	movf	setDimmerLights_Main@lights,w
  6336  0556  118A  2746         	fcall	_setDimmerLights_OnOff
  6337                           
  6338                           ;Dimmer_B1.c: 813: }
  6339                           ;Dimmer_B1.c: 814: }
  6340                           ;Dimmer_B1.c: 815: } else {
  6341  0558  0008               	return
  6342  0559                     l4283:	
  6343                           
  6344                           ;Dimmer_B1.c: 816: if (getMain_All_LightsStatus() == 1) {
  6345  0559  158A  25FA  118A   	fcall	_getMain_All_LightsStatus
  6346  055C  3A01               	xorlw	1
  6347  055D  1D03               	skipz
  6348  055E  2D84               	goto	l4295
  6349                           
  6350                           ;Dimmer_B1.c: 817: if (DimmerLights->DimmingTrigger == 1) {
  6351  055F  0872               	movf	_DimmerLights,w
  6352  0560  0084               	movwf	4
  6353  0561  1383               	bcf	3,7	;select IRP bank0
  6354  0562  1E00               	btfss	0,4
  6355  0563  0008               	return
  6356                           
  6357                           ;Dimmer_B1.c: 818: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6358  0564  1283               	bcf	3,5	;RP0=0, select bank0
  6359  0565  1303               	bcf	3,6	;RP1=0, select bank0
  6360  0566  085E               	movf	setDimmerLights_Main@lights,w
  6361  0567  158A  2595  118A   	fcall	_getDimmerLights_Allow_Condition
  6362  056A  3800               	iorlw	0
  6363  056B  1D03               	skipz
  6364  056C  0008               	return
  6365                           
  6366                           ;Dimmer_B1.c: 819: DimmerLights->DimmingTrigger = 0;
  6367  056D  0872               	movf	_DimmerLights,w
  6368  056E  0084               	movwf	4
  6369  056F  1383               	bcf	3,7	;select IRP bank0
  6370  0570  1200               	bcf	0,4
  6371                           
  6372                           ;Dimmer_B1.c: 820: if (DimmerLights->DimmingSwitch == 1) {
  6373  0571  0872               	movf	_DimmerLights,w
  6374  0572  0084               	movwf	4
  6375  0573  1E80               	btfss	0,5
  6376  0574  2D7D               	goto	l4293
  6377                           
  6378                           ;Dimmer_B1.c: 821: setDimmerLights_Dimming(lights, 1);
  6379  0575  1283               	bcf	3,5	;RP0=0, select bank0
  6380  0576  1303               	bcf	3,6	;RP1=0, select bank0
  6381  0577  01DA               	clrf	setDimmerLights_Dimming@status
  6382  0578  0ADA               	incf	setDimmerLights_Dimming@status,f
  6383  0579  085E               	movf	setDimmerLights_Main@lights,w
  6384  057A  118A  2773         	fcall	_setDimmerLights_Dimming
  6385                           
  6386                           ;Dimmer_B1.c: 822: } else {
  6387  057C  0008               	return
  6388  057D                     l4293:	
  6389                           
  6390                           ;Dimmer_B1.c: 823: setDimmerLights_Dimming(lights, 0);
  6391  057D  1283               	bcf	3,5	;RP0=0, select bank0
  6392  057E  1303               	bcf	3,6	;RP1=0, select bank0
  6393  057F  01DA               	clrf	setDimmerLights_Dimming@status
  6394  0580  085E               	movf	setDimmerLights_Main@lights,w
  6395  0581  118A  2773         	fcall	_setDimmerLights_Dimming
  6396                           
  6397                           ;Dimmer_B1.c: 824: }
  6398                           ;Dimmer_B1.c: 825: }
  6399                           ;Dimmer_B1.c: 826: }
  6400                           ;Dimmer_B1.c: 827: } else {
  6401  0583  0008               	return
  6402  0584                     l4295:	
  6403                           
  6404                           ;Dimmer_B1.c: 828: if (DimmerLights->DimmingTrigger == 1) {
  6405  0584  0872               	movf	_DimmerLights,w
  6406  0585  0084               	movwf	4
  6407  0586  1383               	bcf	3,7	;select IRP bank0
  6408  0587  1E00               	btfss	0,4
  6409  0588  0008               	return
  6410                           
  6411                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 0;
  6412  0589  0872               	movf	_DimmerLights,w
  6413  058A  0084               	movwf	4
  6414  058B  1200               	bcf	0,4
  6415  058C  0008               	return
  6416  058D                     __end_of_setDimmerLights_Main:	
  6417                           
  6418                           	psect	text36
  6419  0746                     __ptext36:	
  6420 ;; *************** function _setDimmerLights_OnOff *****************
  6421 ;; Defined at:
  6422 ;;		line 837 in file "../src/Dimmer_B1.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  lights          1    wreg     unsigned char 
  6425 ;;  command         1    3[BANK0 ] unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  lights          1    4[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;		None               void
  6430 ;; Registers used:
  6431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6437 ;;      Params:         0       1       0       0
  6438 ;;      Locals:         0       1       0       0
  6439 ;;      Temps:          0       0       0       0
  6440 ;;      Totals:         0       2       0       0
  6441 ;;Total ram usage:        2 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    4
  6444 ;; This function calls:
  6445 ;;		_getCmd_Status
  6446 ;;		_getMain_All_LightsStatus
  6447 ;;		_setCmd_Status
  6448 ;;		_setDimmerIntr_ControlStatus
  6449 ;; This function is called by:
  6450 ;;		_setDimmerLights_Main
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function _setDimmerLights_OnOff
  6456  0746                     _setDimmerLights_OnOff:	
  6457                           
  6458                           ;incstack = 0
  6459                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6460                           ;setDimmerLights_OnOff@lights stored from wreg
  6461  0746  1283               	bcf	3,5	;RP0=0, select bank0
  6462  0747  1303               	bcf	3,6	;RP1=0, select bank0
  6463  0748  00DB               	movwf	setDimmerLights_OnOff@lights
  6464                           
  6465                           ;Dimmer_B1.c: 839: if (command == 1) {
  6466  0749  085A               	movf	setDimmerLights_OnOff@command,w
  6467  074A  3A01               	xorlw	1
  6468  074B  1D03               	skipz
  6469  074C  2F57               	goto	l4107
  6470                           
  6471                           ;Dimmer_B1.c: 840: setDimmerIntr_ControlStatus(lights, 1);
  6472  074D  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6473  074E  0AD7               	incf	setDimmerIntr_ControlStatus@command,f
  6474  074F  085B               	movf	setDimmerLights_OnOff@lights,w
  6475  0750  158A  2709  118A   	fcall	_setDimmerIntr_ControlStatus
  6476                           
  6477                           ;Dimmer_B1.c: 848: Dimmer.PIR_Open_Status = 1;
  6478  0753  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0754  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0755  14AD               	bsf	_Dimmer+1,1
  6481                           
  6482                           ;Dimmer_B1.c: 895: } else if (command == 0) {
  6483  0756  2F5F               	goto	l4111
  6484  0757                     l4107:	
  6485  0757  08DA               	movf	setDimmerLights_OnOff@command,f
  6486  0758  1D03               	skipz
  6487  0759  2F5F               	goto	l4111
  6488                           
  6489                           ;Dimmer_B1.c: 896: setDimmerIntr_ControlStatus(lights, 0);
  6490  075A  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6491  075B  085B               	movf	setDimmerLights_OnOff@lights,w
  6492  075C  158A  2709  118A   	fcall	_setDimmerIntr_ControlStatus
  6493  075F                     l4111:	
  6494                           
  6495                           ;Dimmer_B1.c: 929: }
  6496                           ;Dimmer_B1.c: 932: ;;
  6497                           ;Dimmer_B1.c: 934: if (getCmd_Status(1) == 1) {
  6498  075F  3001               	movlw	1
  6499  0760  158A  266E  118A   	fcall	_getCmd_Status
  6500  0763  3A01               	xorlw	1
  6501  0764  1D03               	skipz
  6502  0765  0008               	return
  6503                           
  6504                           ;Dimmer_B1.c: 935: if (getMain_All_LightsStatus() == 0) {
  6505  0766  158A  25FA  118A   	fcall	_getMain_All_LightsStatus
  6506  0769  3800               	iorlw	0
  6507  076A  1D03               	skipz
  6508  076B  0008               	return
  6509                           
  6510                           ;Dimmer_B1.c: 936: setCmd_Status(1, 0);
  6511  076C  1283               	bcf	3,5	;RP0=0, select bank0
  6512  076D  1303               	bcf	3,6	;RP1=0, select bank0
  6513  076E  01D7               	clrf	setCmd_Status@cmd
  6514  076F  3001               	movlw	1
  6515  0770  158A  26F3         	fcall	_setCmd_Status
  6516                           
  6517                           ;Dimmer_B1.c: 940: }
  6518                           ;Dimmer_B1.c: 941: } else {
  6519                           
  6520                           ;Dimmer_B1.c: 937: ;;
  6521                           ;Dimmer_B1.c: 938: ;;
  6522                           ;Dimmer_B1.c: 939: ;;
  6523  0772  0008               	return
  6524  0773                     __end_of_setDimmerLights_OnOff:	
  6525                           ;Dimmer_B1.c: 942: ;;
  6526                           
  6527                           
  6528                           	psect	text37
  6529  0F09                     __ptext37:	
  6530 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6531 ;; Defined at:
  6532 ;;		line 69 in file "../src/Dimmer_B1.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  lights          1    wreg     unsigned char 
  6535 ;;  command         1    0[BANK0 ] unsigned char 
  6536 ;; Auto vars:     Size  Location     Type
  6537 ;;  lights          1    2[BANK0 ] unsigned char 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;		None               void
  6540 ;; Registers used:
  6541 ;;		wreg, status,2, status,0
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6547 ;;      Params:         0       1       0       0
  6548 ;;      Locals:         0       1       0       0
  6549 ;;      Temps:          0       1       0       0
  6550 ;;      Totals:         0       3       0       0
  6551 ;;Total ram usage:        3 bytes
  6552 ;; Hardware stack levels used:    1
  6553 ;; Hardware stack levels required when called:    3
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_setDimmerLights_OnOff
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function _setDimmerIntr_ControlStatus
  6563  0F09                     _setDimmerIntr_ControlStatus:	
  6564                           
  6565                           ;incstack = 0
  6566                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6567                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6568  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  6569  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  6570  0F0B  00D9               	movwf	setDimmerIntr_ControlStatus@lights
  6571                           
  6572                           ;Dimmer_B1.c: 71: if (lights == 1) {
  6573  0F0C  0859               	movf	setDimmerIntr_ControlStatus@lights,w
  6574  0F0D  3A01               	xorlw	1
  6575  0F0E  1D03               	skipz
  6576  0F0F  0008               	return
  6577                           
  6578                           ;Dimmer_B1.c: 72: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6579  0F10  0857               	movf	setDimmerIntr_ControlStatus@command,w
  6580  0F11  3A01               	xorlw	1
  6581  0F12  3000               	movlw	0
  6582  0F13  1903               	skipnz
  6583  0F14  3001               	movlw	1
  6584  0F15  00D8               	movwf	??_setDimmerIntr_ControlStatus
  6585  0F16  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6586  0F17  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6587  0F18  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6588  0F19  0820               	movf	_DimmerIntr1,w
  6589  0F1A  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6590  0F1B  39F7               	andlw	-9
  6591  0F1C  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6592  0F1D  00A0               	movwf	_DimmerIntr1
  6593  0F1E  0008               	return
  6594  0F1F                     __end_of_setDimmerIntr_ControlStatus:	
  6595                           
  6596                           	psect	text38
  6597  0EF3                     __ptext38:	
  6598 ;; *************** function _setCmd_Status *****************
  6599 ;; Defined at:
  6600 ;;		line 651 in file "../src/Main_B1.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  number          1    wreg     unsigned char 
  6603 ;;  cmd             1    0[BANK0 ] unsigned char 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  number          1    2[BANK0 ] unsigned char 
  6606 ;; Return value:  Size  Location     Type
  6607 ;;		None               void
  6608 ;; Registers used:
  6609 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6615 ;;      Params:         0       1       0       0
  6616 ;;      Locals:         0       1       0       0
  6617 ;;      Temps:          0       1       0       0
  6618 ;;      Totals:         0       3       0       0
  6619 ;;Total ram usage:        3 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    3
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_setDimmerLights_OnOff
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           
  6630                           ;psect for function _setCmd_Status
  6631  0EF3                     _setCmd_Status:	
  6632                           
  6633                           ;incstack = 0
  6634                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6635                           ;setCmd_Status@number stored from wreg
  6636  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  6637  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  6638  0EF5  00D9               	movwf	setCmd_Status@number
  6639                           
  6640                           ;Main_B1.c: 652: switch (number) {
  6641  0EF6  2F03               	goto	l4053
  6642  0EF7                     l4049:	
  6643                           ;Main_B1.c: 653: case 1:
  6644                           
  6645                           
  6646                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
  6647  0EF7  0857               	movf	setCmd_Status@cmd,w
  6648  0EF8  3A01               	xorlw	1
  6649  0EF9  3000               	movlw	0
  6650  0EFA  1903               	skipnz
  6651  0EFB  3001               	movlw	1
  6652  0EFC  00D8               	movwf	??_setCmd_Status
  6653  0EFD  0870               	movf	_Cmd,w
  6654  0EFE  0658               	xorwf	??_setCmd_Status,w
  6655  0EFF  39FE               	andlw	-2
  6656  0F00  0658               	xorwf	??_setCmd_Status,w
  6657  0F01  00F0               	movwf	_Cmd
  6658                           
  6659                           ;Main_B1.c: 656: }
  6660                           
  6661                           ;Main_B1.c: 655: break;
  6662  0F02  0008               	return
  6663  0F03                     l4053:	
  6664  0F03  0859               	movf	setCmd_Status@number,w
  6665                           
  6666                           ; Switch size 1, requested type "space"
  6667                           ; Number of cases is 1, Range of values is 1 to 1
  6668                           ; switch strategies available:
  6669                           ; Name         Instructions Cycles
  6670                           ; simple_byte            4     3 (average)
  6671                           ; direct_byte           12    10 (fixed)
  6672                           ; jumptable            263     9 (fixed)
  6673                           ;	Chosen strategy is simple_byte
  6674  0F04  3A01               	xorlw	1	; case 1
  6675  0F05  1903               	skipnz
  6676  0F06  2EF7               	goto	l4049
  6677  0F07  2F08               	goto	l832
  6678  0F08                     l832:	
  6679  0F08  0008               	return
  6680  0F09                     __end_of_setCmd_Status:	
  6681                           
  6682                           	psect	text39
  6683  0DFA                     __ptext39:	
  6684 ;; *************** function _getMain_All_LightsStatus *****************
  6685 ;; Defined at:
  6686 ;;		line 373 in file "../src/Main_B1.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  status          1    0[BANK0 ] unsigned char 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      unsigned char 
  6693 ;; Registers used:
  6694 ;;		wreg, status,2
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6700 ;;      Params:         0       0       0       0
  6701 ;;      Locals:         0       1       0       0
  6702 ;;      Temps:          0       0       0       0
  6703 ;;      Totals:         0       1       0       0
  6704 ;;Total ram usage:        1 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    3
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_setDimmerLights_Main
  6711 ;;		_setDimmerLights_OnOff
  6712 ;;		_setTemp_Main
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           
  6717                           ;psect for function _getMain_All_LightsStatus
  6718  0DFA                     _getMain_All_LightsStatus:	
  6719                           
  6720                           ;Main_B1.c: 374: char status = 0;
  6721                           
  6722                           ;incstack = 0
  6723                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6724  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  6726  0DFC  01D7               	clrf	getMain_All_LightsStatus@status
  6727                           
  6728                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6729  0DFD  3000               	movlw	0
  6730  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  6731  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  6732  0E00  184B               	btfsc	(_DimmerLights1^(0+128)+1),0
  6733  0E01  3001               	movlw	1
  6734  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  6735  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  6736  0E04  00D7               	movwf	getMain_All_LightsStatus@status
  6737                           
  6738                           ;Main_B1.c: 420: return status;
  6739  0E05  0857               	movf	getMain_All_LightsStatus@status,w
  6740  0E06  0008               	return
  6741  0E07                     __end_of_getMain_All_LightsStatus:	
  6742                           
  6743                           	psect	text40
  6744  0E6E                     __ptext40:	
  6745 ;; *************** function _getCmd_Status *****************
  6746 ;; Defined at:
  6747 ;;		line 659 in file "../src/Main_B1.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  number          1    wreg     unsigned char 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  number          1    0[BANK0 ] unsigned char 
  6752 ;;  cmd             1    1[BANK0 ] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      unsigned char 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6762 ;;      Params:         0       0       0       0
  6763 ;;      Locals:         0       2       0       0
  6764 ;;      Temps:          0       0       0       0
  6765 ;;      Totals:         0       2       0       0
  6766 ;;Total ram usage:        2 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    3
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_setDimmerLights_OnOff
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           
  6777                           ;psect for function _getCmd_Status
  6778  0E6E                     _getCmd_Status:	
  6779                           
  6780                           ;incstack = 0
  6781                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6782                           ;getCmd_Status@number stored from wreg
  6783  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  6784  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  6785  0E70  00D7               	movwf	getCmd_Status@number
  6786                           
  6787                           ;Main_B1.c: 660: char cmd = 0;
  6788  0E71  01D8               	clrf	getCmd_Status@cmd
  6789                           
  6790                           ;Main_B1.c: 661: switch (number) {
  6791  0E72  2E78               	goto	l4041
  6792  0E73                     l4037:	
  6793                           ;Main_B1.c: 662: case 1:
  6794                           
  6795                           
  6796                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
  6797  0E73  3000               	movlw	0
  6798  0E74  1870               	btfsc	_Cmd,0
  6799  0E75  3001               	movlw	1
  6800  0E76  00D8               	movwf	getCmd_Status@cmd
  6801                           
  6802                           ;Main_B1.c: 665: }
  6803                           
  6804                           ;Main_B1.c: 664: break;
  6805  0E77  2E7D               	goto	l4043
  6806  0E78                     l4041:	
  6807  0E78  0857               	movf	getCmd_Status@number,w
  6808                           
  6809                           ; Switch size 1, requested type "space"
  6810                           ; Number of cases is 1, Range of values is 1 to 1
  6811                           ; switch strategies available:
  6812                           ; Name         Instructions Cycles
  6813                           ; simple_byte            4     3 (average)
  6814                           ; direct_byte           12    10 (fixed)
  6815                           ; jumptable            263     9 (fixed)
  6816                           ;	Chosen strategy is simple_byte
  6817  0E79  3A01               	xorlw	1	; case 1
  6818  0E7A  1903               	skipnz
  6819  0E7B  2E73               	goto	l4037
  6820  0E7C  2E7D               	goto	l4043
  6821  0E7D                     l4043:	
  6822                           
  6823                           ;Main_B1.c: 666: return cmd;
  6824  0E7D  0858               	movf	getCmd_Status@cmd,w
  6825  0E7E  0008               	return
  6826  0E7F                     __end_of_getCmd_Status:	
  6827                           
  6828                           	psect	text41
  6829  0773                     __ptext41:	
  6830 ;; *************** function _setDimmerLights_Dimming *****************
  6831 ;; Defined at:
  6832 ;;		line 948 in file "../src/Dimmer_B1.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  lights          1    wreg     unsigned char 
  6835 ;;  status          1    3[BANK0 ] unsigned char 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  lights          1    6[BANK0 ] unsigned char 
  6838 ;;  value           1    5[BANK0 ] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;		None               void
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0, pclath, cstack
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6848 ;;      Params:         0       1       0       0
  6849 ;;      Locals:         0       2       0       0
  6850 ;;      Temps:          0       1       0       0
  6851 ;;      Totals:         0       4       0       0
  6852 ;;Total ram usage:        4 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    4
  6855 ;; This function calls:
  6856 ;;		_getDimmerIntr_DimmingValue
  6857 ;;		_setDimmerIntr_Dimming_Sw
  6858 ;;		_setDimmerIntr_MaxmumValue
  6859 ;; This function is called by:
  6860 ;;		_setDimmerLights_Main
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           
  6865                           ;psect for function _setDimmerLights_Dimming
  6866  0773                     _setDimmerLights_Dimming:	
  6867                           
  6868                           ;incstack = 0
  6869                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6870                           ;setDimmerLights_Dimming@lights stored from wreg
  6871  0773  1283               	bcf	3,5	;RP0=0, select bank0
  6872  0774  1303               	bcf	3,6	;RP1=0, select bank0
  6873  0775  00DD               	movwf	setDimmerLights_Dimming@lights
  6874                           
  6875                           ;Dimmer_B1.c: 949: if (status == 1) {
  6876  0776  085A               	movf	setDimmerLights_Dimming@status,w
  6877  0777  3A01               	xorlw	1
  6878  0778  1D03               	skipz
  6879  0779  2F80               	goto	l4121
  6880                           
  6881                           ;Dimmer_B1.c: 950: setDimmerIntr_Dimming_Sw(lights, 1);
  6882  077A  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6883  077B  0AD7               	incf	setDimmerIntr_Dimming_Sw@command,f
  6884  077C  085D               	movf	setDimmerLights_Dimming@lights,w
  6885  077D  158A  26B5         	fcall	_setDimmerIntr_Dimming_Sw
  6886                           
  6887                           ;Dimmer_B1.c: 955: ;;
  6888                           ;Dimmer_B1.c: 956: } else if (status == 0) {
  6889  077F  0008               	return
  6890  0780                     l4121:	
  6891  0780  1283               	bcf	3,5	;RP0=0, select bank0
  6892  0781  1303               	bcf	3,6	;RP1=0, select bank0
  6893  0782  08DA               	movf	setDimmerLights_Dimming@status,f
  6894  0783  1D03               	skipz
  6895  0784  0008               	return
  6896                           
  6897                           ;Dimmer_B1.c: 957: setDimmerIntr_Dimming_Sw(lights, 0);
  6898  0785  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6899  0786  085D               	movf	setDimmerLights_Dimming@lights,w
  6900  0787  158A  26B5  118A   	fcall	_setDimmerIntr_Dimming_Sw
  6901                           
  6902                           ;Dimmer_B1.c: 963: char value = getDimmerIntr_DimmingValue(lights);
  6903  078A  1283               	bcf	3,5	;RP0=0, select bank0
  6904  078B  1303               	bcf	3,6	;RP1=0, select bank0
  6905  078C  085D               	movf	setDimmerLights_Dimming@lights,w
  6906  078D  158A  2614  118A   	fcall	_getDimmerIntr_DimmingValue
  6907  0790  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0791  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0792  00DB               	movwf	??_setDimmerLights_Dimming
  6910  0793  085B               	movf	??_setDimmerLights_Dimming,w
  6911  0794  00DC               	movwf	setDimmerLights_Dimming@value
  6912                           
  6913                           ;Dimmer_B1.c: 964: setDimmerIntr_MaxmumValue(lights, value);
  6914  0795  085C               	movf	setDimmerLights_Dimming@value,w
  6915  0796  00DB               	movwf	??_setDimmerLights_Dimming
  6916  0797  085B               	movf	??_setDimmerLights_Dimming,w
  6917  0798  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  6918  0799  085D               	movf	setDimmerLights_Dimming@lights,w
  6919  079A  158A  25E2         	fcall	_setDimmerIntr_MaxmumValue
  6920                           
  6921                           ;Dimmer_B1.c: 965: ;;
  6922                           ;Dimmer_B1.c: 972: ;;
  6923                           ;Dimmer_B1.c: 976: ;;
  6924                           ;Dimmer_B1.c: 977: ;;
  6925  079C  0008               	return
  6926  079D                     __end_of_setDimmerLights_Dimming:	
  6927                           
  6928                           	psect	text42
  6929  0EB5                     __ptext42:	
  6930 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6931 ;; Defined at:
  6932 ;;		line 204 in file "../src/Dimmer_B1.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  lights          1    wreg     unsigned char 
  6935 ;;  command         1    0[BANK0 ] unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  lights          1    2[BANK0 ] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;		None               void
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6947 ;;      Params:         0       1       0       0
  6948 ;;      Locals:         0       1       0       0
  6949 ;;      Temps:          0       1       0       0
  6950 ;;      Totals:         0       3       0       0
  6951 ;;Total ram usage:        3 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    3
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_setDimmerLights_Dimming
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           
  6962                           ;psect for function _setDimmerIntr_Dimming_Sw
  6963  0EB5                     _setDimmerIntr_Dimming_Sw:	
  6964                           
  6965                           ;incstack = 0
  6966                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6967                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6968  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  6969  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  6970  0EB7  00D9               	movwf	setDimmerIntr_Dimming_Sw@lights
  6971                           
  6972                           ;Dimmer_B1.c: 206: if (lights == 1) {
  6973  0EB8  0859               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6974  0EB9  3A01               	xorlw	1
  6975  0EBA  1D03               	skipz
  6976  0EBB  0008               	return
  6977                           
  6978                           ;Dimmer_B1.c: 207: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6979  0EBC  0857               	movf	setDimmerIntr_Dimming_Sw@command,w
  6980  0EBD  3A01               	xorlw	1
  6981  0EBE  3000               	movlw	0
  6982  0EBF  1903               	skipnz
  6983  0EC0  3001               	movlw	1
  6984  0EC1  00D8               	movwf	??_setDimmerIntr_Dimming_Sw
  6985  0EC2  0ED8               	swapf	??_setDimmerIntr_Dimming_Sw,f
  6986  0EC3  0820               	movf	_DimmerIntr1,w
  6987  0EC4  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  6988  0EC5  39EF               	andlw	-17
  6989  0EC6  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  6990  0EC7  00A0               	movwf	_DimmerIntr1
  6991  0EC8  0008               	return
  6992  0EC9                     __end_of_setDimmerIntr_Dimming_Sw:	
  6993                           
  6994                           	psect	text43
  6995  0E14                     __ptext43:	
  6996 ;; *************** function _getDimmerIntr_DimmingValue *****************
  6997 ;; Defined at:
  6998 ;;		line 105 in file "../src/Dimmer_B1.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  lights          1    wreg     unsigned char 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;  lights          1    1[BANK0 ] unsigned char 
  7003 ;;  value           1    2[BANK0 ] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      unsigned char 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7013 ;;      Params:         0       0       0       0
  7014 ;;      Locals:         0       2       0       0
  7015 ;;      Temps:          0       1       0       0
  7016 ;;      Totals:         0       3       0       0
  7017 ;;Total ram usage:        3 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    3
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_setDimmerLights_Dimming
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           
  7028                           ;psect for function _getDimmerIntr_DimmingValue
  7029  0E14                     _getDimmerIntr_DimmingValue:	
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  7033                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  7034  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  7035  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  7036  0E16  00D8               	movwf	getDimmerIntr_DimmingValue@lights
  7037                           
  7038                           ;Dimmer_B1.c: 106: char value = 0;
  7039  0E17  01D9               	clrf	getDimmerIntr_DimmingValue@value
  7040                           
  7041                           ;Dimmer_B1.c: 108: if (lights == 1) {
  7042  0E18  0858               	movf	getDimmerIntr_DimmingValue@lights,w
  7043  0E19  3A01               	xorlw	1
  7044  0E1A  1D03               	skipz
  7045  0E1B  2E20               	goto	l252
  7046                           
  7047                           ;Dimmer_B1.c: 109: value = DimmerIntr1.DimmingValue;
  7048  0E1C  0825               	movf	_DimmerIntr1+5,w
  7049  0E1D  00D7               	movwf	??_getDimmerIntr_DimmingValue
  7050  0E1E  0857               	movf	??_getDimmerIntr_DimmingValue,w
  7051  0E1F  00D9               	movwf	getDimmerIntr_DimmingValue@value
  7052  0E20                     l252:	
  7053                           
  7054                           ;Dimmer_B1.c: 110: }
  7055                           ;Dimmer_B1.c: 122: return value;
  7056  0E20  0859               	movf	getDimmerIntr_DimmingValue@value,w
  7057  0E21  0008               	return
  7058  0E22                     __end_of_getDimmerIntr_DimmingValue:	
  7059                           
  7060                           	psect	text44
  7061  0D95                     __ptext44:	
  7062 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7063 ;; Defined at:
  7064 ;;		line 983 in file "../src/Dimmer_B1.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  lights          1    wreg     unsigned char 
  7067 ;; Auto vars:     Size  Location     Type
  7068 ;;  lights          1    0[COMMON] unsigned char 
  7069 ;;  allow           1    0[BANK0 ] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      unsigned char 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7079 ;;      Params:         0       0       0       0
  7080 ;;      Locals:         0       1       0       0
  7081 ;;      Temps:          0       0       0       0
  7082 ;;      Totals:         0       1       0       0
  7083 ;;Total ram usage:        1 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    3
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_setDimmerLights_Main
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function _getDimmerLights_Allow_Condition
  7095  0D95                     _getDimmerLights_Allow_Condition:	
  7096                           
  7097                           ;Dimmer_B1.c: 984: char allow = 0;
  7098                           
  7099                           ;incstack = 0
  7100                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7101  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  7102  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  7103  0D97  01D7               	clrf	getDimmerLights_Allow_Condition@allow
  7104                           
  7105                           ;Dimmer_B1.c: 1017: return allow;
  7106  0D98  0857               	movf	getDimmerLights_Allow_Condition@allow,w
  7107  0D99  0008               	return
  7108  0D9A                     __end_of_getDimmerLights_Allow_Condition:	
  7109                           
  7110                           	psect	text45
  7111  033C                     __ptext45:	
  7112 ;; *************** function _DimmerLights_PIR_Control *****************
  7113 ;; Defined at:
  7114 ;;		line 1738 in file "../src/Dimmer_B1.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;		None               void
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7128 ;;      Params:         0       0       0       0
  7129 ;;      Locals:         0       0       0       0
  7130 ;;      Temps:          0       1       0       0
  7131 ;;      Totals:         0       1       0       0
  7132 ;;Total ram usage:        1 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    5
  7135 ;; This function calls:
  7136 ;;		_getDimmerLights_Status
  7137 ;;		_setDimmerIntr_DimmingValue
  7138 ;;		_setDimmerIntr_Dimming_RF
  7139 ;;		_setDimmerIntr_MaxmumValue
  7140 ;;		_setDimmerLights_SwOff
  7141 ;;		_setDimmerLights_SwOn
  7142 ;; This function is called by:
  7143 ;;		_DimmerLights_Main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _DimmerLights_PIR_Control
  7149  033C                     _DimmerLights_PIR_Control:	
  7150                           
  7151                           ;Dimmer_B1.c: 1740: if (Dimmer.PIR_Trigger == 1) {
  7152                           
  7153                           ;incstack = 0
  7154                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7155  033C  1283               	bcf	3,5	;RP0=0, select bank0
  7156  033D  1303               	bcf	3,6	;RP1=0, select bank0
  7157  033E  1EAC               	btfss	_Dimmer,5
  7158  033F  2BAC               	goto	l4327
  7159                           
  7160                           ;Dimmer_B1.c: 1741: Dimmer.PIR_Trigger = 0;
  7161  0340  12AC               	bcf	_Dimmer,5
  7162                           
  7163                           ;Dimmer_B1.c: 1742: if (Dimmer.PIR_Sw == 1) {
  7164  0341  1E2C               	btfss	_Dimmer,4
  7165  0342  2B79               	goto	l417
  7166                           
  7167                           ;Dimmer_B1.c: 1744: if (getDimmerLights_Status(1) == 0) {
  7168  0343  3001               	movlw	1
  7169  0344  158A  265D  118A   	fcall	_getDimmerLights_Status
  7170  0347  3800               	iorlw	0
  7171  0348  1D03               	skipz
  7172  0349  2B5D               	goto	l418
  7173                           
  7174                           ;Dimmer_B1.c: 1745: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.6)));
  7175  034A  3036               	movlw	54
  7176  034B  1283               	bcf	3,5	;RP0=0, select bank0
  7177  034C  1303               	bcf	3,6	;RP1=0, select bank0
  7178  034D  00DB               	movwf	??_DimmerLights_PIR_Control
  7179  034E  085B               	movf	??_DimmerLights_PIR_Control,w
  7180  034F  00D7               	movwf	setDimmerIntr_DimmingValue@value
  7181  0350  3001               	movlw	1
  7182  0351  158A  25D6  118A   	fcall	_setDimmerIntr_DimmingValue
  7183                           
  7184                           ;Dimmer_B1.c: 1746: setDimmerLights_SwOn(1);
  7185  0354  3001               	movlw	1
  7186  0355  118A  27C5  118A   	fcall	_setDimmerLights_SwOn
  7187                           
  7188                           ;Dimmer_B1.c: 1747: setDimmerLights_SwOff(1);
  7189  0358  3001               	movlw	1
  7190  0359  118A  279D  118A   	fcall	_setDimmerLights_SwOff
  7191                           
  7192                           ;Dimmer_B1.c: 1748: } else {
  7193  035C  2BAC               	goto	l4327
  7194  035D                     l418:	
  7195                           
  7196                           ;Dimmer_B1.c: 1749: if (Dimmer.PIR_Lights_Status == 1) {
  7197  035D  1283               	bcf	3,5	;RP0=0, select bank0
  7198  035E  1303               	bcf	3,6	;RP1=0, select bank0
  7199  035F  1D2D               	btfss	_Dimmer+1,2
  7200  0360  2BAC               	goto	l4327
  7201                           
  7202                           ;Dimmer_B1.c: 1750: Dimmer.PIR_Lights_Status = 0;
  7203  0361  112D               	bcf	_Dimmer+1,2
  7204                           
  7205                           ;Dimmer_B1.c: 1751: Dimmer.PIR_Close_Status = 0;
  7206  0362  102D               	bcf	_Dimmer+1,0
  7207                           
  7208                           ;Dimmer_B1.c: 1752: DimmerLights1.Trigger = 0;
  7209  0363  1683               	bsf	3,5	;RP0=1, select bank1
  7210  0364  1303               	bcf	3,6	;RP1=0, select bank1
  7211  0365  10CA               	bcf	_DimmerLights1^(0+128),1
  7212                           
  7213                           ;Dimmer_B1.c: 1754: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7214  0366  3012               	movlw	18
  7215  0367  1283               	bcf	3,5	;RP0=0, select bank0
  7216  0368  1303               	bcf	3,6	;RP1=0, select bank0
  7217  0369  00DB               	movwf	??_DimmerLights_PIR_Control
  7218  036A  085B               	movf	??_DimmerLights_PIR_Control,w
  7219  036B  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7220  036C  3001               	movlw	1
  7221  036D  158A  25E2  118A   	fcall	_setDimmerIntr_MaxmumValue
  7222                           
  7223                           ;Dimmer_B1.c: 1755: setDimmerIntr_Dimming_RF(1, 1);
  7224  0370  1283               	bcf	3,5	;RP0=0, select bank0
  7225  0371  1303               	bcf	3,6	;RP1=0, select bank0
  7226  0372  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7227  0373  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7228  0374  3001               	movlw	1
  7229  0375  158A  26DD  118A   	fcall	_setDimmerIntr_Dimming_RF
  7230                           
  7231                           ;Dimmer_B1.c: 1756: }
  7232                           ;Dimmer_B1.c: 1757: }
  7233                           ;Dimmer_B1.c: 1758: } else if (Dimmer.PIR_Sw == 0) {
  7234  0378  2BAC               	goto	l4327
  7235  0379                     l417:	
  7236  0379  1A2C               	btfsc	_Dimmer,4
  7237  037A  2BAC               	goto	l4327
  7238                           
  7239                           ;Dimmer_B1.c: 1759: if (getDimmerLights_Status(1) == 1) {
  7240  037B  3001               	movlw	1
  7241  037C  158A  265D  118A   	fcall	_getDimmerLights_Status
  7242  037F  3A01               	xorlw	1
  7243  0380  1D03               	skipz
  7244  0381  2BAC               	goto	l4327
  7245                           
  7246                           ;Dimmer_B1.c: 1760: if (Dimmer.PIR_Lights_Status == 0) {
  7247  0382  1283               	bcf	3,5	;RP0=0, select bank0
  7248  0383  1303               	bcf	3,6	;RP1=0, select bank0
  7249  0384  192D               	btfsc	_Dimmer+1,2
  7250  0385  2B98               	goto	l424
  7251                           
  7252                           ;Dimmer_B1.c: 1761: Dimmer.PIR_Lights_Status = 1;
  7253  0386  152D               	bsf	_Dimmer+1,2
  7254                           
  7255                           ;Dimmer_B1.c: 1762: setDimmerIntr_MaxmumValue(1, (((char)((100-10)*0.6))-((char)((100-70
      +                          )*0.6))));
  7256  0387  3024               	movlw	36
  7257  0388  00DB               	movwf	??_DimmerLights_PIR_Control
  7258  0389  085B               	movf	??_DimmerLights_PIR_Control,w
  7259  038A  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7260  038B  3001               	movlw	1
  7261  038C  158A  25E2  118A   	fcall	_setDimmerIntr_MaxmumValue
  7262                           
  7263                           ;Dimmer_B1.c: 1763: setDimmerIntr_Dimming_RF(1, 1);
  7264  038F  1283               	bcf	3,5	;RP0=0, select bank0
  7265  0390  1303               	bcf	3,6	;RP1=0, select bank0
  7266  0391  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7267  0392  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7268  0393  3001               	movlw	1
  7269  0394  158A  26DD  118A   	fcall	_setDimmerIntr_Dimming_RF
  7270                           
  7271                           ;Dimmer_B1.c: 1764: } else {
  7272  0397  2BAC               	goto	l4327
  7273  0398                     l424:	
  7274                           
  7275                           ;Dimmer_B1.c: 1765: Dimmer.PIR_Lights_Status = 0;
  7276  0398  112D               	bcf	_Dimmer+1,2
  7277                           
  7278                           ;Dimmer_B1.c: 1766: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.6)));
  7279  0399  3036               	movlw	54
  7280  039A  00DB               	movwf	??_DimmerLights_PIR_Control
  7281  039B  085B               	movf	??_DimmerLights_PIR_Control,w
  7282  039C  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7283  039D  3001               	movlw	1
  7284  039E  158A  25E2  118A   	fcall	_setDimmerIntr_MaxmumValue
  7285                           
  7286                           ;Dimmer_B1.c: 1767: setDimmerIntr_Dimming_RF(1, 1);
  7287  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  7288  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  7289  03A3  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7290  03A4  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7291  03A5  3001               	movlw	1
  7292  03A6  158A  26DD  118A   	fcall	_setDimmerIntr_Dimming_RF
  7293                           
  7294                           ;Dimmer_B1.c: 1768: Dimmer.PIR_Close_Status = 1;
  7295  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  7296  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  7297  03AB  142D               	bsf	_Dimmer+1,0
  7298  03AC                     l4327:	
  7299                           
  7300                           ;Dimmer_B1.c: 1769: }
  7301                           ;Dimmer_B1.c: 1770: }
  7302                           ;Dimmer_B1.c: 1771: }
  7303                           ;Dimmer_B1.c: 1772: }
  7304                           ;Dimmer_B1.c: 1773: if (Dimmer.PIR_Open_Status == 1) {
  7305  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7306  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  7307  03AE  1CAD               	btfss	_Dimmer+1,1
  7308  03AF  2BC1               	goto	l4333
  7309                           
  7310                           ;Dimmer_B1.c: 1774: Dimmer.PIR_Open_Status = 0;
  7311  03B0  10AD               	bcf	_Dimmer+1,1
  7312                           
  7313                           ;Dimmer_B1.c: 1775: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7314  03B1  3012               	movlw	18
  7315  03B2  00DB               	movwf	??_DimmerLights_PIR_Control
  7316  03B3  085B               	movf	??_DimmerLights_PIR_Control,w
  7317  03B4  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7318  03B5  3001               	movlw	1
  7319  03B6  158A  25E2  118A   	fcall	_setDimmerIntr_MaxmumValue
  7320                           
  7321                           ;Dimmer_B1.c: 1776: setDimmerIntr_Dimming_RF(1, 1);
  7322  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  7323  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  7324  03BB  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7325  03BC  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7326  03BD  3001               	movlw	1
  7327  03BE  158A  26DD  118A   	fcall	_setDimmerIntr_Dimming_RF
  7328  03C1                     l4333:	
  7329                           
  7330                           ;Dimmer_B1.c: 1777: }
  7331                           ;Dimmer_B1.c: 1778: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7332  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  7333  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  7334  03C3  1C2D               	btfss	_Dimmer+1,0
  7335  03C4  0008               	return
  7336  03C5  1B20               	btfsc	_DimmerIntr1,6
  7337  03C6  0008               	return
  7338                           
  7339                           ;Dimmer_B1.c: 1779: Dimmer.PIR_Close_Status = 0;
  7340  03C7  102D               	bcf	_Dimmer+1,0
  7341                           
  7342                           ;Dimmer_B1.c: 1780: setDimmerLights_SwOn(1);
  7343  03C8  3001               	movlw	1
  7344  03C9  118A  27C5  118A   	fcall	_setDimmerLights_SwOn
  7345                           
  7346                           ;Dimmer_B1.c: 1781: setDimmerLights_SwOff(1);
  7347  03CC  3001               	movlw	1
  7348  03CD  118A  279D         	fcall	_setDimmerLights_SwOff
  7349  03CF  0008               	return
  7350  03D0                     __end_of_DimmerLights_PIR_Control:	
  7351                           
  7352                           	psect	text46
  7353  07C5                     __ptext46:	
  7354 ;; *************** function _setDimmerLights_SwOn *****************
  7355 ;; Defined at:
  7356 ;;		line 691 in file "../src/Dimmer_B1.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  sw              1    wreg     unsigned char 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  sw              1    2[BANK0 ] unsigned char 
  7361 ;;  idle            1    3[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;		None               void
  7364 ;; Registers used:
  7365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7371 ;;      Params:         0       0       0       0
  7372 ;;      Locals:         0       2       0       0
  7373 ;;      Temps:          0       0       0       0
  7374 ;;      Totals:         0       2       0       0
  7375 ;;Total ram usage:        2 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; Hardware stack levels required when called:    4
  7378 ;; This function calls:
  7379 ;;		_DimmerLights_SelectPointer
  7380 ;; This function is called by:
  7381 ;;		_DimmerLights_PIR_Control
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function _setDimmerLights_SwOn
  7387  07C5                     _setDimmerLights_SwOn:	
  7388                           
  7389                           ;incstack = 0
  7390                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7391                           ;setDimmerLights_SwOn@sw stored from wreg
  7392  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  7393  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  7394  07C7  00D9               	movwf	setDimmerLights_SwOn@sw
  7395                           
  7396                           ;Dimmer_B1.c: 692: char idle = 0;
  7397  07C8  01DA               	clrf	setDimmerLights_SwOn@idle
  7398                           
  7399                           ;Dimmer_B1.c: 717: DimmerLights_SelectPointer(sw);
  7400  07C9  0859               	movf	setDimmerLights_SwOn@sw,w
  7401  07CA  158A  25CA  118A   	fcall	_DimmerLights_SelectPointer
  7402                           
  7403                           ;Dimmer_B1.c: 718: if (idle == 0) {
  7404  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  7405  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  7406  07CF  08DA               	movf	setDimmerLights_SwOn@idle,f
  7407  07D0  1D03               	skipz
  7408  07D1  0008               	return
  7409                           
  7410                           ;Dimmer_B1.c: 719: DimmerLights->SwFlag = 1;
  7411  07D2  0872               	movf	_DimmerLights,w
  7412  07D3  0084               	movwf	4
  7413  07D4  1383               	bcf	3,7	;select IRP bank0
  7414  07D5  1400               	bsf	0,0
  7415                           
  7416                           ;Dimmer_B1.c: 720: if (DimmerLights->Status == 0) {
  7417  07D6  0A72               	incf	_DimmerLights,w
  7418  07D7  0084               	movwf	4
  7419  07D8  1800               	btfsc	0,0
  7420  07D9  2FE4               	goto	l4081
  7421                           
  7422                           ;Dimmer_B1.c: 721: DimmerLights->Status = 1;
  7423  07DA  0A72               	incf	_DimmerLights,w
  7424  07DB  0084               	movwf	4
  7425  07DC  1400               	bsf	0,0
  7426                           
  7427                           ;Dimmer_B1.c: 722: DimmerLights->Trigger = 1;
  7428  07DD  0872               	movf	_DimmerLights,w
  7429  07DE  0084               	movwf	4
  7430  07DF  1480               	bsf	0,1
  7431                           
  7432                           ;Dimmer_B1.c: 723: DimmerLights->Switch = 1;
  7433  07E0  0872               	movf	_DimmerLights,w
  7434  07E1  0084               	movwf	4
  7435  07E2  1500               	bsf	0,2
  7436                           
  7437                           ;Dimmer_B1.c: 724: } else {
  7438  07E3  0008               	return
  7439  07E4                     l4081:	
  7440                           
  7441                           ;Dimmer_B1.c: 725: DimmerLights->Status = 0;
  7442  07E4  0A72               	incf	_DimmerLights,w
  7443  07E5  0084               	movwf	4
  7444  07E6  1000               	bcf	0,0
  7445  07E7  0008               	return
  7446  07E8                     __end_of_setDimmerLights_SwOn:	
  7447                           ;Dimmer_B1.c: 726: }
  7448                           ;Dimmer_B1.c: 727: ;;
  7449                           
  7450                           
  7451                           	psect	text47
  7452  079D                     __ptext47:	
  7453 ;; *************** function _setDimmerLights_SwOff *****************
  7454 ;; Defined at:
  7455 ;;		line 732 in file "../src/Dimmer_B1.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  sw              1    wreg     unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  sw              1    2[BANK0 ] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;		None               void
  7462 ;; Registers used:
  7463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7469 ;;      Params:         0       0       0       0
  7470 ;;      Locals:         0       1       0       0
  7471 ;;      Temps:          0       0       0       0
  7472 ;;      Totals:         0       1       0       0
  7473 ;;Total ram usage:        1 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    4
  7476 ;; This function calls:
  7477 ;;		_DimmerLights_SelectPointer
  7478 ;; This function is called by:
  7479 ;;		_DimmerLights_PIR_Control
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _setDimmerLights_SwOff
  7485  079D                     _setDimmerLights_SwOff:	
  7486                           
  7487                           ;incstack = 0
  7488                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7489                           ;setDimmerLights_SwOff@sw stored from wreg
  7490  079D  1283               	bcf	3,5	;RP0=0, select bank0
  7491  079E  1303               	bcf	3,6	;RP1=0, select bank0
  7492  079F  00D9               	movwf	setDimmerLights_SwOff@sw
  7493                           
  7494                           ;Dimmer_B1.c: 733: DimmerLights_SelectPointer(sw);
  7495  07A0  0859               	movf	setDimmerLights_SwOff@sw,w
  7496  07A1  158A  25CA  118A   	fcall	_DimmerLights_SelectPointer
  7497                           
  7498                           ;Dimmer_B1.c: 735: if (DimmerLights->SwFlag == 1) {
  7499  07A4  0872               	movf	_DimmerLights,w
  7500  07A5  0084               	movwf	4
  7501  07A6  1383               	bcf	3,7	;select IRP bank0
  7502  07A7  1C00               	btfss	0,0
  7503  07A8  0008               	return
  7504                           
  7505                           ;Dimmer_B1.c: 736: DimmerLights->SwFlag = 0;
  7506  07A9  0872               	movf	_DimmerLights,w
  7507  07AA  0084               	movwf	4
  7508  07AB  1000               	bcf	0,0
  7509                           
  7510                           ;Dimmer_B1.c: 737: if (DimmerLights->Status == 1) {
  7511  07AC  0A72               	incf	_DimmerLights,w
  7512  07AD  0084               	movwf	4
  7513  07AE  1C00               	btfss	0,0
  7514  07AF  2FBE               	goto	l4093
  7515                           
  7516                           ;Dimmer_B1.c: 738: if (DimmerLights->DimmingSwFlag == 1) {
  7517  07B0  0872               	movf	_DimmerLights,w
  7518  07B1  0084               	movwf	4
  7519  07B2  1D80               	btfss	0,3
  7520  07B3  0008               	return
  7521                           
  7522                           ;Dimmer_B1.c: 739: DimmerLights->DimmingSwFlag = 0;
  7523  07B4  0872               	movf	_DimmerLights,w
  7524  07B5  0084               	movwf	4
  7525  07B6  1180               	bcf	0,3
  7526                           
  7527                           ;Dimmer_B1.c: 741: DimmerLights->DimmingTrigger = 1;
  7528  07B7  0872               	movf	_DimmerLights,w
  7529  07B8  0084               	movwf	4
  7530  07B9  1600               	bsf	0,4
  7531                           
  7532                           ;Dimmer_B1.c: 742: DimmerLights->DimmingSwitch = 0;
  7533  07BA  0872               	movf	_DimmerLights,w
  7534  07BB  0084               	movwf	4
  7535  07BC  1280               	bcf	0,5
  7536                           
  7537                           ;Dimmer_B1.c: 743: }
  7538                           ;Dimmer_B1.c: 744: } else {
  7539  07BD  0008               	return
  7540  07BE                     l4093:	
  7541                           
  7542                           ;Dimmer_B1.c: 746: DimmerLights->Trigger = 1;
  7543  07BE  0872               	movf	_DimmerLights,w
  7544  07BF  0084               	movwf	4
  7545  07C0  1480               	bsf	0,1
  7546                           
  7547                           ;Dimmer_B1.c: 747: DimmerLights->Switch = 0;
  7548  07C1  0872               	movf	_DimmerLights,w
  7549  07C2  0084               	movwf	4
  7550  07C3  1100               	bcf	0,2
  7551  07C4  0008               	return
  7552  07C5                     __end_of_setDimmerLights_SwOff:	
  7553                           
  7554                           	psect	text48
  7555  0DE2                     __ptext48:	
  7556 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7557 ;; Defined at:
  7558 ;;		line 127 in file "../src/Dimmer_B1.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  lights          1    wreg     unsigned char 
  7561 ;;  value           1    0[BANK0 ] unsigned char 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  lights          1    2[BANK0 ] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;		None               void
  7566 ;; Registers used:
  7567 ;;		wreg
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7573 ;;      Params:         0       1       0       0
  7574 ;;      Locals:         0       1       0       0
  7575 ;;      Temps:          0       1       0       0
  7576 ;;      Totals:         0       3       0       0
  7577 ;;Total ram usage:        3 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    3
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_setDimmerLights_Dimming
  7584 ;;		_DimmerLights_PIR_Control
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           
  7589                           ;psect for function _setDimmerIntr_MaxmumValue
  7590  0DE2                     _setDimmerIntr_MaxmumValue:	
  7591                           
  7592                           ;incstack = 0
  7593                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7594                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7595  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  7596  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  7597  0DE4  00D9               	movwf	setDimmerIntr_MaxmumValue@lights
  7598                           
  7599                           ;Dimmer_B1.c: 129: if (lights == 1) {
  7600  0DE5  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
  7601  0DE6  3A01               	xorlw	1
  7602  0DE7  1D03               	skipz
  7603  0DE8  0008               	return
  7604                           
  7605                           ;Dimmer_B1.c: 130: DimmerIntr1.MaxmumValue = value;
  7606  0DE9  0857               	movf	setDimmerIntr_MaxmumValue@value,w
  7607  0DEA  00D8               	movwf	??_setDimmerIntr_MaxmumValue
  7608  0DEB  0858               	movf	??_setDimmerIntr_MaxmumValue,w
  7609  0DEC  00A6               	movwf	_DimmerIntr1+6
  7610  0DED  0008               	return
  7611  0DEE                     __end_of_setDimmerIntr_MaxmumValue:	
  7612                           
  7613                           	psect	text49
  7614  0EDD                     __ptext49:	
  7615 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7616 ;; Defined at:
  7617 ;;		line 222 in file "../src/Dimmer_B1.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  lights          1    wreg     unsigned char 
  7620 ;;  command         1    0[BANK0 ] unsigned char 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  lights          1    2[BANK0 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;		None               void
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7632 ;;      Params:         0       1       0       0
  7633 ;;      Locals:         0       1       0       0
  7634 ;;      Temps:          0       1       0       0
  7635 ;;      Totals:         0       3       0       0
  7636 ;;Total ram usage:        3 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    3
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_DimmerLights_PIR_Control
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _setDimmerIntr_Dimming_RF
  7648  0EDD                     _setDimmerIntr_Dimming_RF:	
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7652                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7653  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  7654  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  7655  0EDF  00D9               	movwf	setDimmerIntr_Dimming_RF@lights
  7656                           
  7657                           ;Dimmer_B1.c: 224: if (lights == 1) {
  7658  0EE0  0859               	movf	setDimmerIntr_Dimming_RF@lights,w
  7659  0EE1  3A01               	xorlw	1
  7660  0EE2  1D03               	skipz
  7661  0EE3  0008               	return
  7662                           
  7663                           ;Dimmer_B1.c: 225: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7664  0EE4  0857               	movf	setDimmerIntr_Dimming_RF@command,w
  7665  0EE5  3A01               	xorlw	1
  7666  0EE6  3000               	movlw	0
  7667  0EE7  1903               	skipnz
  7668  0EE8  3001               	movlw	1
  7669  0EE9  00D8               	movwf	??_setDimmerIntr_Dimming_RF
  7670  0EEA  0ED8               	swapf	??_setDimmerIntr_Dimming_RF,f
  7671  0EEB  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7672  0EEC  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7673  0EED  0820               	movf	_DimmerIntr1,w
  7674  0EEE  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7675  0EEF  39BF               	andlw	-65
  7676  0EF0  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7677  0EF1  00A0               	movwf	_DimmerIntr1
  7678  0EF2  0008               	return
  7679  0EF3                     __end_of_setDimmerIntr_Dimming_RF:	
  7680                           
  7681                           	psect	text50
  7682  0DD6                     __ptext50:	
  7683 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7684 ;; Defined at:
  7685 ;;		line 87 in file "../src/Dimmer_B1.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;  lights          1    wreg     unsigned char 
  7688 ;;  value           1    0[BANK0 ] unsigned char 
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  lights          1    2[BANK0 ] unsigned char 
  7691 ;; Return value:  Size  Location     Type
  7692 ;;		None               void
  7693 ;; Registers used:
  7694 ;;		wreg
  7695 ;; Tracked objects:
  7696 ;;		On entry : 0/0
  7697 ;;		On exit  : 0/0
  7698 ;;		Unchanged: 0/0
  7699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7700 ;;      Params:         0       1       0       0
  7701 ;;      Locals:         0       1       0       0
  7702 ;;      Temps:          0       1       0       0
  7703 ;;      Totals:         0       3       0       0
  7704 ;;Total ram usage:        3 bytes
  7705 ;; Hardware stack levels used:    1
  7706 ;; Hardware stack levels required when called:    3
  7707 ;; This function calls:
  7708 ;;		Nothing
  7709 ;; This function is called by:
  7710 ;;		_DimmerLights_PIR_Control
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           
  7715                           ;psect for function _setDimmerIntr_DimmingValue
  7716  0DD6                     _setDimmerIntr_DimmingValue:	
  7717                           
  7718                           ;incstack = 0
  7719                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7720                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7721  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  7722  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  7723  0DD8  00D9               	movwf	setDimmerIntr_DimmingValue@lights
  7724                           
  7725                           ;Dimmer_B1.c: 89: if (lights == 1) {
  7726  0DD9  0859               	movf	setDimmerIntr_DimmingValue@lights,w
  7727  0DDA  3A01               	xorlw	1
  7728  0DDB  1D03               	skipz
  7729  0DDC  0008               	return
  7730                           
  7731                           ;Dimmer_B1.c: 90: DimmerIntr1.DimmingValue = value;
  7732  0DDD  0857               	movf	setDimmerIntr_DimmingValue@value,w
  7733  0DDE  00D8               	movwf	??_setDimmerIntr_DimmingValue
  7734  0DDF  0858               	movf	??_setDimmerIntr_DimmingValue,w
  7735  0DE0  00A5               	movwf	_DimmerIntr1+5
  7736  0DE1  0008               	return
  7737  0DE2                     __end_of_setDimmerIntr_DimmingValue:	
  7738                           
  7739                           	psect	text51
  7740  0E5D                     __ptext51:	
  7741 ;; *************** function _getDimmerLights_Status *****************
  7742 ;; Defined at:
  7743 ;;		line 1073 in file "../src/Dimmer_B1.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  lights          1    wreg     unsigned char 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  lights          1    2[BANK0 ] unsigned char 
  7748 ;;  status          1    3[BANK0 ] unsigned char 
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      unsigned char 
  7751 ;; Registers used:
  7752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7758 ;;      Params:         0       0       0       0
  7759 ;;      Locals:         0       2       0       0
  7760 ;;      Temps:          0       0       0       0
  7761 ;;      Totals:         0       2       0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    4
  7765 ;; This function calls:
  7766 ;;		_DimmerLights_SelectPointer
  7767 ;; This function is called by:
  7768 ;;		_DimmerLights_PIR_Control
  7769 ;;		_Exception_Main
  7770 ;;		_PIR_Main
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           
  7775                           ;psect for function _getDimmerLights_Status
  7776  0E5D                     _getDimmerLights_Status:	
  7777                           
  7778                           ;incstack = 0
  7779                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7780                           ;getDimmerLights_Status@lights stored from wreg
  7781  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  7782  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  7783  0E5F  00D9               	movwf	getDimmerLights_Status@lights
  7784                           
  7785                           ;Dimmer_B1.c: 1074: DimmerLights_SelectPointer(lights);
  7786  0E60  0859               	movf	getDimmerLights_Status@lights,w
  7787  0E61  158A  25CA         	fcall	_DimmerLights_SelectPointer
  7788                           
  7789                           ;Dimmer_B1.c: 1075: char status = DimmerLights->Status == 1 ? 1 : 0;
  7790  0E63  0A72               	incf	_DimmerLights,w
  7791  0E64  0084               	movwf	4
  7792  0E65  3000               	movlw	0
  7793  0E66  1383               	bcf	3,7	;select IRP bank0
  7794  0E67  1800               	btfsc	0,0
  7795  0E68  3001               	movlw	1
  7796  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  7797  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  7798  0E6B  00DA               	movwf	getDimmerLights_Status@status
  7799                           
  7800                           ;Dimmer_B1.c: 1076: return status;
  7801  0E6C  085A               	movf	getDimmerLights_Status@status,w
  7802  0E6D  0008               	return
  7803  0E6E                     __end_of_getDimmerLights_Status:	
  7804                           
  7805                           	psect	text52
  7806  0DCA                     __ptext52:	
  7807 ;; *************** function _DimmerLights_SelectPointer *****************
  7808 ;; Defined at:
  7809 ;;		line 614 in file "../src/Dimmer_B1.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  lights          1    wreg     unsigned char 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  lights          1    1[BANK0 ] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;		None               void
  7816 ;; Registers used:
  7817 ;;		wreg
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7823 ;;      Params:         0       0       0       0
  7824 ;;      Locals:         0       1       0       0
  7825 ;;      Temps:          0       1       0       0
  7826 ;;      Totals:         0       2       0       0
  7827 ;;Total ram usage:        2 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    3
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_setDimmerLights_SwOn
  7834 ;;		_setDimmerLights_SwOff
  7835 ;;		_setDimmerLights_Main
  7836 ;;		_getDimmerLights_Status
  7837 ;;		_setDimmerLights_DimmingOn
  7838 ;;		_setDimmerLights_Status
  7839 ;;		_setDimmerLights_DimmingRun
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _DimmerLights_SelectPointer
  7845  0DCA                     _DimmerLights_SelectPointer:	
  7846                           
  7847                           ;incstack = 0
  7848                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7849                           ;DimmerLights_SelectPointer@lights stored from wreg
  7850  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7851  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7852  0DCC  00D8               	movwf	DimmerLights_SelectPointer@lights
  7853                           
  7854                           ;Dimmer_B1.c: 616: if (lights == 1) {
  7855  0DCD  0858               	movf	DimmerLights_SelectPointer@lights,w
  7856  0DCE  3A01               	xorlw	1
  7857  0DCF  1D03               	skipz
  7858  0DD0  0008               	return
  7859                           
  7860                           ;Dimmer_B1.c: 617: DimmerLights = &DimmerLights1;
  7861  0DD1  30CA               	movlw	_DimmerLights1& (0+255)
  7862  0DD2  00D7               	movwf	??_DimmerLights_SelectPointer
  7863  0DD3  0857               	movf	??_DimmerLights_SelectPointer,w
  7864  0DD4  00F2               	movwf	_DimmerLights
  7865  0DD5  0008               	return
  7866  0DD6                     __end_of_DimmerLights_SelectPointer:	
  7867                           
  7868                           	psect	text53
  7869  0DA5                     __ptext53:	
  7870 ;; *************** function _DimmerLights_Initialization *****************
  7871 ;; Defined at:
  7872 ;;		line 635 in file "../src/Dimmer_B1.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;		None
  7877 ;; Return value:  Size  Location     Type
  7878 ;;		None               void
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0, pclath, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7886 ;;      Params:         0       0       0       0
  7887 ;;      Locals:         0       0       0       0
  7888 ;;      Temps:          0       0       0       0
  7889 ;;      Totals:         0       0       0       0
  7890 ;;Total ram usage:        0 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    4
  7893 ;; This function calls:
  7894 ;;		_DimmerIntr_Initialization
  7895 ;;		_setDimmerLights_Initialization
  7896 ;; This function is called by:
  7897 ;;		_main
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function _DimmerLights_Initialization
  7903  0DA5                     _DimmerLights_Initialization:	
  7904                           
  7905                           ;Dimmer_B1.c: 637: setDimmerLights_Initialization(1);
  7906                           
  7907                           ;incstack = 0
  7908                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7909  0DA5  3001               	movlw	1
  7910  0DA6  158A  2585  158A   	fcall	_setDimmerLights_Initialization
  7911                           
  7912                           ;Dimmer_B1.c: 647: DimmerIntr_Initialization();
  7913  0DA9  158A  26A2         	fcall	_DimmerIntr_Initialization
  7914  0DAB  0008               	return
  7915  0DAC                     __end_of_DimmerLights_Initialization:	
  7916                           
  7917                           	psect	text54
  7918  0D85                     __ptext54:	
  7919 ;; *************** function _setDimmerLights_Initialization *****************
  7920 ;; Defined at:
  7921 ;;		line 651 in file "../src/Dimmer_B1.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;  lights          1    wreg     unsigned char 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  lights          1    0[COMMON] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;		None               void
  7928 ;; Registers used:
  7929 ;;		wreg
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7935 ;;      Params:         0       0       0       0
  7936 ;;      Locals:         0       0       0       0
  7937 ;;      Temps:          0       0       0       0
  7938 ;;      Totals:         0       0       0       0
  7939 ;;Total ram usage:        0 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    3
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		_DimmerLights_Initialization
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function _setDimmerLights_Initialization
  7951  0D85                     _setDimmerLights_Initialization:	
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7955  0D85  0008               	return
  7956  0D86                     __end_of_setDimmerLights_Initialization:	
  7957                           
  7958                           	psect	text55
  7959  0EA2                     __ptext55:	
  7960 ;; *************** function _DimmerIntr_Initialization *****************
  7961 ;; Defined at:
  7962 ;;		line 7 in file "../src/Dimmer_B1.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;		None
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;		None               void
  7969 ;; Registers used:
  7970 ;;		wreg
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7976 ;;      Params:         0       0       0       0
  7977 ;;      Locals:         0       0       0       0
  7978 ;;      Temps:          0       1       0       0
  7979 ;;      Totals:         0       1       0       0
  7980 ;;Total ram usage:        1 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    3
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_DimmerLights_Initialization
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           
  7991                           ;psect for function _DimmerIntr_Initialization
  7992  0EA2                     _DimmerIntr_Initialization:	
  7993                           
  7994                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  7995                           
  7996                           ;incstack = 0
  7997                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  7998  0EA2  3007               	movlw	7
  7999  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  8000  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  8001  0EA5  00D7               	movwf	??_DimmerIntr_Initialization
  8002  0EA6  0857               	movf	??_DimmerIntr_Initialization,w
  8003  0EA7  00A4               	movwf	_DimmerIntr1+4
  8004                           
  8005                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.6));
  8006  0EA8  3012               	movlw	18
  8007  0EA9  00D7               	movwf	??_DimmerIntr_Initialization
  8008  0EAA  0857               	movf	??_DimmerIntr_Initialization,w
  8009  0EAB  00A6               	movwf	_DimmerIntr1+6
  8010                           
  8011                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.6));
  8012  0EAC  3036               	movlw	54
  8013  0EAD  00D7               	movwf	??_DimmerIntr_Initialization
  8014  0EAE  0857               	movf	??_DimmerIntr_Initialization,w
  8015  0EAF  00A7               	movwf	_DimmerIntr1+7
  8016                           
  8017                           ;Dimmer_B1.c: 61: if (myMain.InitDimmer == 1) {
  8018  0EB0  1E33               	btfss	_myMain+2,4
  8019  0EB1  0008               	return
  8020                           
  8021                           ;Dimmer_B1.c: 62: myMain.InitDimmer = 0;
  8022  0EB2  1233               	bcf	_myMain+2,4
  8023                           
  8024                           ;Dimmer_B1.c: 63: myMain.SaveDimmer = 1;
  8025  0EB3  16B3               	bsf	_myMain+2,5
  8026  0EB4  0008               	return
  8027  0EB5                     __end_of_DimmerIntr_Initialization:	
  8028                           ;Dimmer_B1.c: 64: ;;
  8029                           
  8030                           
  8031                           	psect	text56
  8032  0712                     __ptext56:	
  8033 ;; *************** function _CDS_Main *****************
  8034 ;; Defined at:
  8035 ;;		line 11 in file "../src/CDS_B1.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;		None               void
  8042 ;; Registers used:
  8043 ;;		wreg, status,2, status,0
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8049 ;;      Params:         0       0       0       0
  8050 ;;      Locals:         0       0       0       0
  8051 ;;      Temps:          0       3       0       0
  8052 ;;      Totals:         0       3       0       0
  8053 ;;Total ram usage:        3 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    3
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_main
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           
  8064                           ;psect for function _CDS_Main
  8065  0712                     _CDS_Main:	
  8066                           
  8067                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8068                           
  8069                           ;incstack = 0
  8070                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8071  0712  1283               	bcf	3,5	;RP0=0, select bank0
  8072  0713  1303               	bcf	3,6	;RP1=0, select bank0
  8073  0714  1C3A               	btfss	__CDS,0
  8074  0715  0008               	return
  8075                           
  8076                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8077  0716  18BA               	btfsc	__CDS,1
  8078  0717  2F25               	goto	l123
  8079                           
  8080                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8081  0718  19BA               	btfsc	__CDS,3
  8082  0719  0008               	return
  8083                           
  8084                           ;CDS_B1.c: 16: _CDS.Time++;
  8085  071A  3001               	movlw	1
  8086  071B  00D7               	movwf	??_CDS_Main
  8087  071C  0857               	movf	??_CDS_Main,w
  8088  071D  07BB               	addwf	__CDS+1,f
  8089                           
  8090                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8091  071E  3005               	movlw	5
  8092  071F  023B               	subwf	__CDS+1,w
  8093  0720  1C03               	skipc
  8094  0721  0008               	return
  8095                           
  8096                           ;CDS_B1.c: 18: {
  8097                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8098  0722  01BB               	clrf	__CDS+1
  8099                           
  8100                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8101  0723  15BA               	bsf	__CDS,3
  8102                           
  8103                           ;CDS_B1.c: 21: }
  8104                           ;CDS_B1.c: 22: }
  8105                           ;CDS_B1.c: 23: } else {
  8106  0724  0008               	return
  8107  0725                     l123:	
  8108                           
  8109                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8110  0725  1CBA               	btfss	__CDS,1
  8111  0726  0008               	return
  8112                           
  8113                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8114  0727  10BA               	bcf	__CDS,1
  8115                           
  8116                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8117  0728  1A3A               	btfsc	__CDS,4
  8118  0729  2F30               	goto	l4575
  8119                           
  8120                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8121  072A  083C               	movf	__CDS+2,w
  8122  072B  023D               	subwf	__CDS+3,w
  8123  072C  1C03               	skipc
  8124  072D  0008               	return
  8125                           
  8126                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8127  072E  163A               	bsf	__CDS,4
  8128                           
  8129                           ;CDS_B1.c: 29: }
  8130                           ;CDS_B1.c: 30: } else {
  8131  072F  0008               	return
  8132  0730                     l4575:	
  8133                           
  8134                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8135  0730  083C               	movf	__CDS+2,w
  8136  0731  3E9C               	addlw	156
  8137  0732  00D7               	movwf	??_CDS_Main
  8138  0733  30FF               	movlw	255
  8139  0734  1803               	skipnc
  8140  0735  3000               	movlw	0
  8141  0736  00D8               	movwf	??_CDS_Main+1
  8142  0737  0858               	movf	??_CDS_Main+1,w
  8143  0738  3A80               	xorlw	128
  8144  0739  00D9               	movwf	??_CDS_Main+2
  8145  073A  3080               	movlw	128
  8146  073B  0259               	subwf	??_CDS_Main+2,w
  8147  073C  1D03               	skipz
  8148  073D  2F40               	goto	u5455
  8149  073E  083D               	movf	__CDS+3,w
  8150  073F  0257               	subwf	??_CDS_Main,w
  8151  0740                     u5455:	
  8152  0740  1C03               	skipc
  8153  0741  0008               	return
  8154                           
  8155                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8156  0742  1283               	bcf	3,5	;RP0=0, select bank0
  8157  0743  1303               	bcf	3,6	;RP1=0, select bank0
  8158  0744  123A               	bcf	__CDS,4
  8159  0745  0008               	return
  8160  0746                     __end_of_CDS_Main:	
  8161                           
  8162                           	psect	text57
  8163  0D91                     __ptext57:	
  8164 ;; *************** function _CDS_Initialization *****************
  8165 ;; Defined at:
  8166 ;;		line 7 in file "../src/CDS_B1.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;		None               void
  8173 ;; Registers used:
  8174 ;;		None
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8180 ;;      Params:         0       0       0       0
  8181 ;;      Locals:         0       0       0       0
  8182 ;;      Temps:          0       0       0       0
  8183 ;;      Totals:         0       0       0       0
  8184 ;;Total ram usage:        0 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    3
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_main
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           
  8195                           ;psect for function _CDS_Initialization
  8196  0D91                     _CDS_Initialization:	
  8197                           
  8198                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8199                           
  8200                           ;incstack = 0
  8201                           ; Regs used in _CDS_Initialization: []
  8202  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  8203  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  8204  0D93  143A               	bsf	__CDS,0
  8205  0D94  0008               	return
  8206  0D95                     __end_of_CDS_Initialization:	
  8207                           
  8208                           	psect	text58
  8209  0F1F                     __ptext58:	
  8210 ;; *************** function _ISR *****************
  8211 ;; Defined at:
  8212 ;;		line 116 in file "../src/MCU_B1.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;		None               void
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0, pclath, cstack
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8226 ;;      Params:         0       0       0       0
  8227 ;;      Locals:         0       0       0       0
  8228 ;;      Temps:          4       0       0       0
  8229 ;;      Totals:         4       0       0       0
  8230 ;;Total ram usage:        4 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:    2
  8233 ;; This function calls:
  8234 ;;		_TMR1_ISR
  8235 ;; This function is called by:
  8236 ;;		Interrupt level 1
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           
  8241                           ;psect for function _ISR
  8242  0F1F                     _ISR:	
  8243                           
  8244                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8245  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  8246  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  8247  0F21  1C0C               	btfss	12,0	;volatile
  8248  0F22  2F2A               	goto	i1l664
  8249  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  8250  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  8251  0F25  1C0C               	btfss	12,0	;volatile
  8252  0F26  2F2A               	goto	i1l664
  8253                           
  8254                           ;MCU_B1.c: 126: TMR1_ISR();
  8255  0F27  158A  276B  158A   	fcall	_TMR1_ISR
  8256  0F2A                     i1l664:	
  8257                           ;MCU_B1.c: 127: }
  8258                           ;MCU_B1.c: 148: return;
  8259                           
  8260  0F2A  0879               	movf	??_ISR+3,w
  8261  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  8262  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  8263  0F2D  00FF               	movwf	127
  8264  0F2E  0878               	movf	??_ISR+2,w
  8265  0F2F  008A               	movwf	10
  8266  0F30  0877               	movf	??_ISR+1,w
  8267  0F31  0084               	movwf	4
  8268  0F32  0E76               	swapf	??_ISR^(0+-128),w
  8269  0F33  0083               	movwf	3
  8270  0F34  0EFE               	swapf	126,f
  8271  0F35  0E7E               	swapf	126,w
  8272  0F36  0009               	retfie
  8273  0F37                     __end_of_ISR:	
  8274                           
  8275                           	psect	intentry
  8276  0004                     __pintentry:	
  8277                           ;incstack = 0
  8278                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8279                           
  8280  0004                     interrupt_function:	
  8281  007E                     saved_w	set	btemp
  8282  0004  00FE               	movwf	btemp
  8283  0005  0E03               	swapf	3,w
  8284  0006  00F6               	movwf	??_ISR
  8285  0007  0804               	movf	4,w
  8286  0008  00F7               	movwf	??_ISR+1
  8287  0009  080A               	movf	10,w
  8288  000A  00F8               	movwf	??_ISR+2
  8289  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8290  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8291  000D  087F               	movf	btemp+1,w
  8292  000E  00F9               	movwf	??_ISR+3
  8293  000F  158A  2F1F         	ljmp	_ISR
  8294                           
  8295                           	psect	text59
  8296  0F6B                     __ptext59:	
  8297 ;; *************** function _TMR1_ISR *****************
  8298 ;; Defined at:
  8299 ;;		line 236 in file "../src/MCU_B1.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;		None               void
  8306 ;; Registers used:
  8307 ;;		wreg, status,2, status,0, pclath, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8313 ;;      Params:         0       0       0       0
  8314 ;;      Locals:         0       0       0       0
  8315 ;;      Temps:          0       0       0       0
  8316 ;;      Totals:         0       0       0       0
  8317 ;;Total ram usage:        0 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:    1
  8320 ;; This function calls:
  8321 ;;		_DimmerLights_IOC_1
  8322 ;;		_DimmerLights_TMR_1
  8323 ;; This function is called by:
  8324 ;;		_ISR
  8325 ;; This function uses a non-reentrant model
  8326 ;;
  8327                           
  8328                           
  8329                           ;psect for function _TMR1_ISR
  8330  0F6B                     _TMR1_ISR:	
  8331                           
  8332                           ;MCU_B1.c: 242: DimmerLights_IOC_1();
  8333                           
  8334                           ;incstack = 0
  8335                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8336  0F6B  158A  264D  158A   	fcall	_DimmerLights_IOC_1
  8337                           
  8338                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
  8339  0F6E  118A  263D  158A   	fcall	_DimmerLights_TMR_1
  8340                           
  8341                           ;MCU_B1.c: 268: Timer1.Count++;
  8342  0F71  3001               	movlw	1
  8343  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  8344  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  8345  0F74  07BF               	addwf	_Timer1+1,f
  8346  0F75  1803               	skipnc
  8347  0F76  0AC0               	incf	_Timer1+2,f
  8348  0F77  3000               	movlw	0
  8349  0F78  07C0               	addwf	_Timer1+2,f
  8350                           
  8351                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  8352  0F79  30C8               	movlw	200
  8353  0F7A  063F               	xorwf	_Timer1+1,w
  8354  0F7B  0440               	iorwf	_Timer1+2,w
  8355  0F7C  1D03               	skipz
  8356  0F7D  2F81               	goto	i1l3537
  8357                           
  8358                           ;MCU_B1.c: 270: Timer1.Count = 0;
  8359  0F7E  01BF               	clrf	_Timer1+1
  8360  0F7F  01C0               	clrf	_Timer1+2
  8361                           
  8362                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  8363  0F80  143E               	bsf	_Timer1,0
  8364  0F81                     i1l3537:	
  8365                           
  8366                           ;MCU_B1.c: 272: }
  8367                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  8368  0F81  30FA               	movlw	250
  8369  0F82  008F               	movwf	15	;volatile
  8370                           
  8371                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  8372  0F83  3038               	movlw	56
  8373  0F84  008E               	movwf	14	;volatile
  8374                           
  8375                           ;MCU_B1.c: 276: TMR1IF = 0;
  8376  0F85  100C               	bcf	12,0	;volatile
  8377  0F86  0008               	return
  8378  0F87                     __end_of_TMR1_ISR:	
  8379                           
  8380                           	psect	text60
  8381  063D                     __ptext60:	
  8382 ;; *************** function _DimmerLights_TMR_1 *****************
  8383 ;; Defined at:
  8384 ;;		line 1270 in file "../src/Dimmer_B1.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;		None
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;		None
  8389 ;; Return value:  Size  Location     Type
  8390 ;;		None               void
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8398 ;;      Params:         0       0       0       0
  8399 ;;      Locals:         0       0       0       0
  8400 ;;      Temps:          1       0       0       0
  8401 ;;      Totals:         1       0       0       0
  8402 ;;Total ram usage:        1 bytes
  8403 ;; Hardware stack levels used:    1
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_TMR1_ISR
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function _DimmerLights_TMR_1
  8413  063D                     _DimmerLights_TMR_1:	
  8414                           
  8415                           ;Dimmer_B1.c: 1271: if (DimmerIntr1.Start == 1) {
  8416                           
  8417                           ;incstack = 0
  8418                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8419  063D  1283               	bcf	3,5	;RP0=0, select bank0
  8420  063E  1303               	bcf	3,6	;RP1=0, select bank0
  8421  063F  1D20               	btfss	_DimmerIntr1,2
  8422  0640  2E4B               	goto	i1l3223
  8423                           
  8424                           ;Dimmer_B1.c: 1272: DimmerIntr1.Count++;
  8425  0641  3001               	movlw	1
  8426  0642  00F5               	movwf	??_DimmerLights_TMR_1
  8427  0643  0875               	movf	??_DimmerLights_TMR_1,w
  8428  0644  07A2               	addwf	_DimmerIntr1+2,f
  8429                           
  8430                           ;Dimmer_B1.c: 1273: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) + 1) {
  8431  0645  3037               	movlw	55
  8432  0646  0222               	subwf	_DimmerIntr1+2,w
  8433  0647  1C03               	skipc
  8434  0648  2E4B               	goto	i1l3223
  8435                           
  8436                           ;Dimmer_B1.c: 1274: DimmerIntr1.Count = 0;
  8437  0649  01A2               	clrf	_DimmerIntr1+2
  8438                           
  8439                           ;Dimmer_B1.c: 1275: DimmerIntr1.Start = 0;
  8440  064A  1120               	bcf	_DimmerIntr1,2
  8441  064B                     i1l3223:	
  8442                           
  8443                           ;Dimmer_B1.c: 1276: }
  8444                           ;Dimmer_B1.c: 1277: }
  8445                           ;Dimmer_B1.c: 1279: if (DimmerIntr1.GO == 1) {
  8446  064B  1C20               	btfss	_DimmerIntr1,0
  8447  064C  2E57               	goto	i1l384
  8448                           
  8449                           ;Dimmer_B1.c: 1280: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8450  064D  0825               	movf	_DimmerIntr1+5,w
  8451  064E  0222               	subwf	_DimmerIntr1+2,w
  8452  064F  1C03               	skipc
  8453  0650  2E86               	goto	i1l387
  8454                           
  8455                           ;Dimmer_B1.c: 1281: DimmerIntr1.GO = 0;
  8456  0651  1020               	bcf	_DimmerIntr1,0
  8457                           
  8458                           ;Dimmer_B1.c: 1282: DimmerIntr1.Tune = 1;
  8459  0652  14A0               	bsf	_DimmerIntr1,1
  8460                           
  8461                           ;Dimmer_B1.c: 1284: if (DimmerIntr1.ControlStatus == 1) {
  8462  0653  1DA0               	btfss	_DimmerIntr1,3
  8463  0654  2E86               	goto	i1l387
  8464                           
  8465                           ;Dimmer_B1.c: 1285: RB2 = 1;
  8466  0655  1506               	bsf	6,2	;volatile
  8467                           
  8468                           ;Dimmer_B1.c: 1287: }
  8469                           ;Dimmer_B1.c: 1288: }
  8470                           ;Dimmer_B1.c: 1289: } else {
  8471  0656  2E86               	goto	i1l387
  8472  0657                     i1l384:	
  8473                           
  8474                           ;Dimmer_B1.c: 1290: if (DimmerIntr1.Tune == 1) {
  8475  0657  1CA0               	btfss	_DimmerIntr1,1
  8476  0658  2E86               	goto	i1l387
  8477                           
  8478                           ;Dimmer_B1.c: 1291: DimmerIntr1.Tune = 0;
  8479  0659  10A0               	bcf	_DimmerIntr1,1
  8480                           
  8481                           ;Dimmer_B1.c: 1292: DimmerIntr1.TuneTime++;
  8482  065A  3001               	movlw	1
  8483  065B  00F5               	movwf	??_DimmerLights_TMR_1
  8484  065C  0875               	movf	??_DimmerLights_TMR_1,w
  8485  065D  07A3               	addwf	_DimmerIntr1+3,f
  8486                           
  8487                           ;Dimmer_B1.c: 1293: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8488  065E  0824               	movf	_DimmerIntr1+4,w
  8489  065F  0223               	subwf	_DimmerIntr1+3,w
  8490  0660  1C03               	skipc
  8491  0661  2E86               	goto	i1l387
  8492                           
  8493                           ;Dimmer_B1.c: 1294: DimmerIntr1.TuneTime = 0;
  8494  0662  01A3               	clrf	_DimmerIntr1+3
  8495                           
  8496                           ;Dimmer_B1.c: 1295: if (DimmerIntr1.Dimming_Sw == 1) {
  8497  0663  1E20               	btfss	_DimmerIntr1,4
  8498  0664  2E73               	goto	i1l390
  8499                           
  8500                           ;Dimmer_B1.c: 1296: if (DimmerIntr1.Dimming_Status == 0) {
  8501  0665  1AA0               	btfsc	_DimmerIntr1,5
  8502  0666  2E6D               	goto	i1l3247
  8503                           
  8504                           ;Dimmer_B1.c: 1297: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.6))) {
  8505  0667  3013               	movlw	19
  8506  0668  0225               	subwf	_DimmerIntr1+5,w
  8507  0669  1803               	btfsc	3,0
  8508  066A  2E79               	goto	i1l3253
  8509                           
  8510                           ;Dimmer_B1.c: 1300: DimmerIntr1.Dimming_Status = 1;
  8511                           
  8512                           ;Dimmer_B1.c: 1299: } else {
  8513                           
  8514                           ;Dimmer_B1.c: 1298: DimmerIntr1.DimmingValue--;
  8515  066B  16A0               	bsf	_DimmerIntr1,5
  8516                           
  8517                           ;Dimmer_B1.c: 1301: }
  8518                           ;Dimmer_B1.c: 1302: } else {
  8519  066C  2E86               	goto	i1l387
  8520  066D                     i1l3247:	
  8521                           
  8522                           ;Dimmer_B1.c: 1303: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.6))) {
  8523  066D  3036               	movlw	54
  8524  066E  0225               	subwf	_DimmerIntr1+5,w
  8525  066F  1C03               	btfss	3,0
  8526  0670  2E80               	goto	i1l3257
  8527                           
  8528                           ;Dimmer_B1.c: 1306: DimmerIntr1.Dimming_Status = 0;
  8529                           
  8530                           ;Dimmer_B1.c: 1305: } else {
  8531                           
  8532                           ;Dimmer_B1.c: 1304: DimmerIntr1.DimmingValue++;
  8533  0671  12A0               	bcf	_DimmerIntr1,5
  8534                           
  8535                           ;Dimmer_B1.c: 1307: }
  8536                           ;Dimmer_B1.c: 1308: }
  8537                           ;Dimmer_B1.c: 1309: } else if (DimmerIntr1.Dimming_RF == 1) {
  8538  0672  2E86               	goto	i1l387
  8539  0673                     i1l390:	
  8540  0673  1F20               	btfss	_DimmerIntr1,6
  8541  0674  2E86               	goto	i1l387
  8542                           
  8543                           ;Dimmer_B1.c: 1310: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8544  0675  0825               	movf	_DimmerIntr1+5,w
  8545  0676  0226               	subwf	_DimmerIntr1+6,w
  8546  0677  1803               	skipnc
  8547  0678  2E7C               	goto	i1l3255
  8548  0679                     i1l3253:	
  8549                           
  8550                           ;Dimmer_B1.c: 1311: DimmerIntr1.DimmingValue--;
  8551  0679  3001               	movlw	1
  8552  067A  02A5               	subwf	_DimmerIntr1+5,f
  8553                           
  8554                           ;Dimmer_B1.c: 1312: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8555  067B  2E86               	goto	i1l387
  8556  067C                     i1l3255:	
  8557  067C  0826               	movf	_DimmerIntr1+6,w
  8558  067D  0225               	subwf	_DimmerIntr1+5,w
  8559  067E  1803               	skipnc
  8560  067F  2E85               	goto	i1l401
  8561  0680                     i1l3257:	
  8562                           
  8563                           ;Dimmer_B1.c: 1313: DimmerIntr1.DimmingValue++;
  8564  0680  3001               	movlw	1
  8565  0681  00F5               	movwf	??_DimmerLights_TMR_1
  8566  0682  0875               	movf	??_DimmerLights_TMR_1,w
  8567  0683  07A5               	addwf	_DimmerIntr1+5,f
  8568                           
  8569                           ;Dimmer_B1.c: 1314: } else {
  8570  0684  2E86               	goto	i1l387
  8571  0685                     i1l401:	
  8572                           
  8573                           ;Dimmer_B1.c: 1315: DimmerIntr1.Dimming_RF = 0;
  8574  0685  1320               	bcf	_DimmerIntr1,6
  8575  0686                     i1l387:	
  8576                           
  8577                           ;Dimmer_B1.c: 1316: }
  8578                           ;Dimmer_B1.c: 1317: }
  8579                           ;Dimmer_B1.c: 1318: }
  8580                           ;Dimmer_B1.c: 1319: }
  8581                           ;Dimmer_B1.c: 1320: }
  8582                           ;Dimmer_B1.c: 1321: if (RB2 == 1) {
  8583  0686  1D06               	btfss	6,2	;volatile
  8584  0687  0008               	return
  8585                           
  8586                           ;Dimmer_B1.c: 1322: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) - 10) {
  8587  0688  302C               	movlw	44
  8588  0689  0222               	subwf	_DimmerIntr1+2,w
  8589  068A  1C03               	skipc
  8590  068B  0008               	return
  8591                           
  8592                           ;Dimmer_B1.c: 1323: RB2 = 0;
  8593  068C  1106               	bcf	6,2	;volatile
  8594  068D  0008               	return
  8595  068E                     __end_of_DimmerLights_TMR_1:	
  8596                           
  8597                           	psect	text61
  8598  0E4D                     __ptext61:	
  8599 ;; *************** function _DimmerLights_IOC_1 *****************
  8600 ;; Defined at:
  8601 ;;		line 1329 in file "../src/Dimmer_B1.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;		None
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;		None
  8606 ;; Return value:  Size  Location     Type
  8607 ;;		None               void
  8608 ;; Registers used:
  8609 ;;		None
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8615 ;;      Params:         0       0       0       0
  8616 ;;      Locals:         0       0       0       0
  8617 ;;      Temps:          0       0       0       0
  8618 ;;      Totals:         0       0       0       0
  8619 ;;Total ram usage:        0 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_TMR1_ISR
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           
  8629                           ;psect for function _DimmerLights_IOC_1
  8630  0E4D                     _DimmerLights_IOC_1:	
  8631                           
  8632                           ;Dimmer_B1.c: 1332: if (RA7 == 1) {
  8633                           
  8634                           ;incstack = 0
  8635                           ; Regs used in _DimmerLights_IOC_1: []
  8636  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  8637  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  8638  0E4F  1F85               	btfss	5,7	;volatile
  8639  0E50  2E55               	goto	i1l408
  8640                           
  8641                           ;Dimmer_B1.c: 1333: if (Dimmer.PIR_DimmerSignal == 1) {
  8642  0E51  1DAC               	btfss	_Dimmer,3
  8643  0E52  0008               	return
  8644                           
  8645                           ;Dimmer_B1.c: 1334: Dimmer.PIR_DimmerSignal = 0;
  8646  0E53  11AC               	bcf	_Dimmer,3
  8647                           
  8648                           ;Dimmer_B1.c: 1335: }
  8649                           ;Dimmer_B1.c: 1336: } else {
  8650  0E54  0008               	return
  8651  0E55                     i1l408:	
  8652                           
  8653                           ;Dimmer_B1.c: 1337: if (Dimmer.PIR_DimmerSignal == 0) {
  8654  0E55  19AC               	btfsc	_Dimmer,3
  8655  0E56  0008               	return
  8656                           
  8657                           ;Dimmer_B1.c: 1338: Dimmer.PIR_DimmerSignal = 1;
  8658  0E57  15AC               	bsf	_Dimmer,3
  8659                           
  8660                           ;Dimmer_B1.c: 1340: if (DimmerIntr1.Start == 0) {
  8661  0E58  1920               	btfsc	_DimmerIntr1,2
  8662  0E59  0008               	return
  8663                           
  8664                           ;Dimmer_B1.c: 1341: DimmerIntr1.Start = 1;
  8665  0E5A  1520               	bsf	_DimmerIntr1,2
  8666                           
  8667                           ;Dimmer_B1.c: 1342: DimmerIntr1.GO = 1;
  8668  0E5B  1420               	bsf	_DimmerIntr1,0
  8669  0E5C  0008               	return
  8670  0E5D                     __end_of_DimmerLights_IOC_1:	
  8671  007E                     btemp	set	126	;btemp
  8672  007E                     wtemp	set	126
  8673  007E                     wtemp0	set	126
  8674  0080                     wtemp1	set	128
  8675  0082                     wtemp2	set	130
  8676  0084                     wtemp3	set	132
  8677  0086                     wtemp4	set	134
  8678  0088                     wtemp5	set	136
  8679  007F                     wtemp6	set	127
  8680  007E                     ttemp	set	126
  8681  007E                     ttemp0	set	126
  8682  0081                     ttemp1	set	129
  8683  0084                     ttemp2	set	132
  8684  0087                     ttemp3	set	135
  8685  007F                     ttemp4	set	127
  8686  007E                     ltemp	set	126
  8687  007E                     ltemp0	set	126
  8688  0082                     ltemp1	set	130
  8689  0086                     ltemp2	set	134
  8690  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     23      78
    BANK1            80      0      50
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_getDimmerIntr_DimmingValue
    _setDimmerLights_Dimming->_setDimmerIntr_Dimming_Sw
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_getDimmerLights_Status
    _DimmerLights_PIR_Control->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19615
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     712
                                              2 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2460
                                              9 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     754
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     582
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     349
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     349
                                              5 BANK0      6     6      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3064
                                              5 BANK0     12    12      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2594
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2594
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2709
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2709
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    2953
                                              5 BANK0      5     5      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2554
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    4020
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2540
                                              7 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1    1348
                                              3 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              4 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      8A      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Feb 26 14:38:10 2015

                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 0F09                              ___awdiv@sign 005D  
                          setTemp_Main@AD 0061                                        fsr 0004  
                    _setDimmerLights_Main 052D                                       l123 0725  
                    _setDimmerLights_SwOn 07C5                                       l252 0E20  
                                     l424 0398                                       l417 0379  
                                     l418 035D                                       l481 0F92  
                                     l810 0F4B                                       l482 0F9A  
                                     l806 0F4F                                       l832 0F08  
                                     l826 06D1                                       l942 0447  
                                     l953 0443                                       l948 03ED  
                                     _GIE 005F      __size_of_DimmerLights_Initialization 0007  
                                     _RB2 0032                                       _LED 0073  
                                     _RB3 0033                                       _RB4 0034  
                                     _RB5 0035                                       _RA7 002F  
                                     _PS0 0408                                       _PS1 0409  
                                     _PS2 040A                                       _ISR 0F1F  
                                     _PSA 040B                                       _WDT 0041  
                                     _Cmd 0070              getDimmerLights_Status@lights 0059  
              ??_setDimmerIntr_Dimming_RF 0058                ??_setDimmerIntr_Dimming_Sw 0058  
         setDimmerIntr_Dimming_RF@command 0057                                       fsr0 0004  
                                     indf 0000                           __end_of_ADC_Set 0DBA  
    setDimmerLights_Initialization@lights 0075              getDimmerLights_Status@status 005A  
     __end_of_setDimmerIntr_ControlStatus 0F1F               _setDimmerIntr_ControlStatus 0F09  
                                    ?_ISR 0075                     _setDimmerLights_OnOff 0746  
                                    l1020 005A                                      l1021 0079  
                                    l1026 008F                                      l1018 01FB  
                                    l1019 0089                                      l1028 00A2  
                                    l4111 075F                                      l4121 0780  
                                    l4041 0E78                                      l4043 0E7D  
                                    l4107 0757                                      l4211 0521  
                                    l4037 0E73                                      l4053 0F03  
                                    l4207 051B                                      l4215 0527  
                                    l4081 07E4                                      l4049 0EF7  
                                    l4145 04CD                                      l4153 04D5  
                                    l4093 07BE                                      l4333 03C1  
                                    l4181 04FD                                      l4253 0FB0  
                                    l4327 03AC                                      l4239 0F47  
                                    l4159 04DE                                      l4167 04E6  
                                    l4255 0FB3                                      l4281 0552  
                                    l4177 04F9                                      l4185 0501  
                                    l4361 0472                                      l4283 0559  
                                    l4443 0400                                      l4259 0FB9  
                                    l4523 05E3                                      l4515 05D0  
                                    l4507 05AC                                      l4293 057D  
                                    l4189 0509                                      l4381 04AC  
                                    l4365 0478                                      l4437 03EF  
                                    l4445 0403                                      l4509 05BA  
                                    l4295 0584                                      l4375 048A  
                                    l4519 05DB                                      l4711 0F61  
                                    l4377 0496                                      l4369 047E  
                                    l4545 0700                                      l4537 06DC  
                                    l4379 049E                                      l4491 0599  
                                    l4539 06EA                                      l4651 0281  
                                    l4643 026B                                      l4635 0255  
                                    l4901 06C6                                      l4469 0433  
                                    l4549 070B                                      l4661 029A  
                                    l4575 0730                                      l4831 01A1  
                                    l4479 0442                                      l4647 0276  
                                    l4639 0260                                      l4817 013D  
                                    l4809 0129                                      l4497 05A4  
                                    l4691 032C                                      l4683 0300  
                                    l4667 02B6                     _setDimmerLights_SwOff 079D  
                                    l4845 01C9                                      l4829 0192  
                                    l4781 00C5                                      l4677 02E4  
                                    l4863 01F5                                      l4951 05FF  
                                    l4793 00DC                                      l4697 033A  
                                    l4797 00E8                                      l4957 061B  
                                    l4895 06B8                                      l4799 00E9  
                                    l4897 06C2                                      l4889 06A9  
                   _myMain_Initialization 0D87                              __CFG_WDTE$ON 0000  
                                    u5020 0493                                      u5040 04A9  
                                    u6005 01E5                                      _PEIE 005E  
                                    u5245 05AF                                      u5325 06DF  
                                    u4705 0ED7                                      u5265 05BB  
                                    u5345 06EB                                      u5275 05C7  
                                    u5355 06F7                                      u5285 05D1  
                                    u5365 0701                                      u5455 0740  
                                    u5905 0107                                      u5915 011F  
                                    u5935 0156                                      u5945 0184  
                                    u5965 01B1                                      __CDS 003A  
                                    _WPUB 0095                                      __PIR 00A0  
                                    _Temp 0044                                      _main 05EA  
                                    btemp 007E                           __end_of_WDT_Set 0E3E  
                                    ltemp 007E                                      start 0011  
                                    ttemp 007E                                      wtemp 007E  
                        __end_of_CDS_Main 0746              __size_of_Temp_Initialization 0003  
                                   ??_ISR 0076   __end_of_getDimmerLights_Allow_Condition 0D9A  
__size_of_getDimmerLights_Allow_Condition 0005         ??_getDimmerLights_Allow_Condition 0057  
        ?_getDimmerLights_Allow_Condition 0075           _getDimmerLights_Allow_Condition 0D95  
                  _getDimmerLights_Status 0E5D                             __CFG_PLLEN$ON 0000  
                        __end_of_LED_Main 0D8B                                _DimmerIntr 0071  
                   ?_setDimmerLights_Main 0075                          ??_setPIRLED_Main 005B  
                   ?_setDimmerLights_SwOn 0075                                     ?_main 0069  
                         __end_of___awdiv 05EA                                     _ADRES 001E  
                         ___awdiv@divisor 0057                                     _T1CON 0010  
                         __end_of___lwdiv 0712                                     i1l401 0685  
                                   i1l408 0E55                                     i1l390 0673  
                                   i1l384 0657                                     i1l387 0686  
                                   i1l664 0F2A                           ___awdiv@counter 005C  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                 __end_of_Timeout_Counter 0EDD                                     _Light 0043  
                        __end_of_PIR_Main 020E                          __end_of_TMR1_ISR 0F87  
                        __end_of_TMR1_Set 0E30                                     _getAD 0FA3  
                        __end_of_WDT_Main 0E90                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 0012  
           __end_of_setLED_Initialization 0EA2                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                       getPIR_AD@channel1 0065                         getPIR_AD@channel2 0060  
                       setTemp_Main@error 005D                           __initialization 0013  
                            __end_of_main 063D                          __end_of_Fosc_Set 0D9F  
          getMain_All_LightsStatus@status 0057              setDimmerLights_OnOff@command 005A  
                          _Exception_Main 068E                                 ??_ADC_Set 0057  
                                  ??_main 006D                     PIR_Main@Enable_Switch 0063  
             ?_setDimmerIntr_DimmingValue 0057              ??_DimmerLights_SelectPointer 0057  
      setDimmerIntr_ControlStatus@command 0057                   _setDimmerLights_Dimming 0773  
                             _DimmerIntr1 0020                  _getMain_All_LightsStatus 0DFA  
                  ?_setDimmerLights_OnOff 005A                                    ?_getAD 0057  
                  ?_setDimmerLights_SwOff 0075                    ?_myMain_Initialization 0075  
                                  _ADCON0 001F                                    _ADCON1 009F  
                        ___awdiv@dividend 0059                                 ??_WDT_Set 0057  
                                  _ANSELA 0185                                    _ANSELB 0186  
                _getMain_All_Error_Status 0F37                                    i1l3223 064B  
                                  i1l3253 0679                                    i1l3255 067C  
                                  i1l3247 066D                                    i1l3257 0680  
                                  i1l3537 0F81                                    _FVRCON 009D  
    getDimmerLights_Allow_Condition@allow 0057                                    _PIRLED 0036  
                                  _OSCCON 0090                                    _TMR1IE 0460  
                                  _TMR1IF 0060                                    _IO_Set 07E8  
             ??_setDimmerIntr_MaxmumValue 0058                                    _Dimmer 002C  
                   __end_of_getCmd_Status 0E7F                __end_of_Mcu_Initialization 0E4D  
                                  _Timer1 003E               __size_of_CDS_Initialization 0004  
                  __end_of_Exception_Main 06D2                      Exception_Main@lights 005D  
                               ??___awdiv 005B                                 ??___lwdiv 005B  
                  ??_setDimmerLights_Main 005E                      Exception_Main@status 005F  
                  ??_setDimmerLights_SwOn 0059                                    _setLED 04BC  
                                  _myMain 0031         __size_of_DimmerLights_PIR_Control 0094  
                        ___awdiv@quotient 005E                        __size_of_Temp_Main 0003  
               ?_DimmerLights_PIR_Control 0075          ??_setDimmerLights_Initialization 0057  
         ?_setDimmerLights_Initialization 0075          __end_of_setDimmerIntr_Dimming_RF 0EF3  
        __end_of_setDimmerIntr_Dimming_Sw 0EC9                                    saved_w 007E  
                        ?_Timeout_Counter 0075               __size_of_DimmerLights_IOC_1 0010  
             __size_of_DimmerLights_TMR_1 0051                   __size_of_LedPointSelect 001C  
                               ?_CDS_Main 0075           setDimmerIntr_Dimming_Sw@command 0057  
                      setTemp_Main@TempGO 005E               __size_of_PIR_Initialization 000D  
                 __end_of__initialization 0024           getDimmerIntr_DimmingValue@value 0059  
         setDimmerIntr_DimmingValue@value 0057                                 ?_LED_Main 0075  
                           ?_my_MainTimer 0075              ?_DimmerLights_Initialization 0075  
              ?_DimmerIntr_Initialization 0075                            __pcstackCOMMON 0075  
                      __size_of_getCDS_AD 0022                           ?_Exception_Main 0075  
                           __end_of_getAD 0FBF                                 ?_PIR_Main 0075  
                               ?_TMR1_ISR 0075                                 ?_TMR1_Set 0075  
                      _LED_Initialization 0DEE                        __size_of_getPIR_AD 012E  
               ??_setDimmerLights_Dimming 005B                                 ?_WDT_Main 0075  
       setDimmerIntr_ControlStatus@lights 0059                 _setDimmerIntr_MaxmumValue 0DE2  
              __end_of_set_TimeoutCleared 0DA5           setDimmerIntr_MaxmumValue@lights 0059  
                     ?_LED_Initialization 0075                                   ??_getAD 0058  
                     _Temp_Initialization 0D8B                                ??_CDS_Main 0057  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                               ?_Fosc_Set 0075                         __end_of_Temp_Main 0D91  
                                 ?_IO_Set 0075                           __CFG_VCAPEN$DIS 0000  
                          ??_my_MainTimer 0057                                ??_LED_Main 005D  
                    ??_LED_Initialization 005C                              _DimmerLights 0072  
                       LedPointSelect@led 0058                   ?_getDimmerLights_Status 0075  
                              __pmaintext 05EA                      ?_Temp_Initialization 0075  
       __end_of_DimmerIntr_Initialization 0EB5                      PIR_Main@LightsStatus 0067  
           ??_DimmerLights_Initialization 0058                                ??_PIR_Main 005C  
                              ??_TMR1_ISR 0076                             ?_setTemp_Main 0075  
                              ??_TMR1_Set 0057                                __pintentry 0004  
                                 ?_setLED 0059                                   _ADC_Set 0DB3  
                              _getTemp_AD 0FBF        __end_of_DimmerLights_SelectPointer 0DD6  
              _DimmerLights_SelectPointer 0DCA                                ??_WDT_Main 0057  
                  __size_of_getCDS_Status 0008             setDimmerLights_Dimming@lights 005D  
           setDimmerLights_Dimming@status 005A     getDimmerLights_Allow_Condition@lights 0075  
                       __end_of_getCDS_AD 1000                                   _WDT_Set 0E30  
                           getPIR_AD@VRAD 0067                    __size_of_setCmd_Status 0016  
                              ??_Fosc_Set 0057                         __end_of_getPIR_AD 033C  
         __end_of_setDimmerLights_Dimming 079D                       getCmd_Status@number 0057  
                         __size_of_IO_Set 0018                       setCmd_Status@number 0059  
       __size_of_setDimmerIntr_Dimming_RF 0016         __size_of_setDimmerIntr_Dimming_Sw 0014  
                              getCDS_AD@i 005C                                getCDS_AD@j 005D  
               ?_setDimmerIntr_Dimming_RF 0057                 ?_setDimmerIntr_Dimming_Sw 0057  
                                 _VarLED1 004F                                   _VarLED2 0053  
          __end_of_getDimmerLights_Status 0E6E                     ??_Temp_Initialization 0057  
                          ??_setTemp_Main 005C                                   ___awdiv 058D  
                                 ___lwdiv 06D2                ??_getMain_All_LightsStatus 0057  
                             PIR_Main@cds 0062                           __size_of_setLED 0071  
                                 __ptext0 0000                                   __ptext1 0F51  
                                 __ptext2 0D87                                   __ptext3 0FBF  
                                 __ptext4 020E                                   __ptext5 06D2  
                                 __ptext6 058D                                   __ptext7 0FDE  
                                 __ptext8 0FA3                                   __ptext9 0D9F  
                              getPIR_AD@i 0068                                getPIR_AD@j 0064  
                            __size_of_ISR 0018                ??_getMain_All_Error_Status 0057  
                 ??_setDimmerLights_OnOff 005B                   ??_setDimmerLights_SwOff 0059  
                 ??_myMain_Initialization 0057                         _DimmerLights_Main 0DAC  
                ??_setTemp_Initialization 0057                        ?_DimmerLights_Main 0075  
                          _LedPointSelect 0F87                           getTemp_AD@ADRES 005C  
                                 clrloop0 0DC3                      end_of_initialization 0024  
                     ??_DimmerLights_Main 005F                    setDimmerLights_SwOn@sw 0059  
                           _getCDS_Status 0DBA          __end_of_DimmerLights_PIR_Control 03D0  
                   _setLED_Initialization 0E90                             _setCmd_Status 0EF3  
                             ?_getTemp_AD 0075                  setLED_Initialization@led 005B  
                 setTemp_Main@DangerValue 0060                 __end_of_DimmerLights_Main 0DB3  
                      _Mcu_Initialization 0E3E                      __end_of_my_MainTimer 0F6B  
                  __end_of_LedPointSelect 0FA3                       setPIRLED_Main@count 005C  
        setDimmerIntr_DimmingValue@lights 0059          getDimmerIntr_DimmingValue@lights 0058  
                     ?_Mcu_Initialization 0075                   __size_of_setPIRLED_Main 0071  
      __size_of_setDimmerIntr_MaxmumValue 000C            setDimmerIntr_Dimming_RF@lights 0059  
         getMain_All_Error_Status@command 0058                         __size_of_CDS_Main 0034  
                          ?_getCDS_Status 0075                          ??_Exception_Main 005C  
                          __end_of_IO_Set 0800                __end_of_CDS_Initialization 0D95  
                       __size_of_LED_Main 0003               ??_DimmerIntr_Initialization 0057  
                    ??_Mcu_Initialization 0058                             ?_WDT_Clearing 0075  
                          ?_setCmd_Status 0057       __size_of_getDimmerIntr_DimmingValue 000E  
                       __size_of_PIR_Main 01E7                         __size_of_TMR1_ISR 001C  
        DimmerLights_SelectPointer@lights 0058                         __size_of_TMR1_Set 000E  
           __size_of_setDimmerLights_Main 0060                            __end_of_setLED 052D  
           __size_of_setDimmerLights_SwOn 0023                __end_of_DimmerLights_IOC_1 0E5D  
                       __size_of_WDT_Main 0011                __end_of_DimmerLights_TMR_1 068E  
                     start_initialization 0013                           ?_LedPointSelect 0075  
                             __end_of_ISR 0F37                    __size_of_getCmd_Status 0011  
              __end_of_PIR_Initialization 0E14              ?_setDimmerIntr_ControlStatus 0057  
         __size_of_setTemp_Initialization 0001                       getCDS_Status@status 0057  
                    __end_of_setTemp_Main 044B                        _set_TimeoutCleared 0D9F  
       __end_of_setDimmerIntr_MaxmumValue 0DEE                                  ??_IO_Set 0057  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 004B  
                     __size_of_getTemp_AD 001F                    ?_setLED_Initialization 0075  
                       __size_of_Fosc_Set 0005                                 _Temp_Main 0D8E  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 0057  
                     Exception_Main@count 005E                       Exception_Main@error 0060  
                _DimmerLights_PIR_Control 033C          __end_of_getMain_All_LightsStatus 0E07  
                                ??_setLED 005A                                  ?_ADC_Set 0075  
             ?_DimmerLights_SelectPointer 0075          __end_of_getMain_All_Error_Status 0F51  
              __size_of_DimmerLights_Main 0007            setDimmerIntr_Dimming_Sw@lights 0059  
                             __pbssCOMMON 0070                                 ___latbits 0001  
                           __pcstackBANK0 0057                      ??_set_TimeoutCleared 0057  
               _DimmerIntr_Initialization 0EA2                                  ?_WDT_Set 0075  
                         ??_getCDS_Status 0057             ??_setDimmerIntr_ControlStatus 0058  
          setDimmerIntr_MaxmumValue@value 0057                             _DimmerLights1 00CA  
                           PIR_Main@error 0061                                 _getCDS_AD 0FDE  
                               _getPIR_AD 020E               __size_of_LED_Initialization 000C  
                              ?_Temp_Main 0075                          ___lwdiv@dividend 0059  
                           _getCmd_Status 0E6E                           ??_setCmd_Status 0058  
                  _setTemp_Initialization 0D86                             _PIR_Main$3333 0064  
                ?_setDimmerLights_Dimming 005A                                  ?___awdiv 0057  
                   __size_of_my_MainTimer 001A                                  ?___lwdiv 0057  
      __end_of_getDimmerIntr_DimmingValue 0E22              ??_setDimmerIntr_DimmingValue 0058  
              _getDimmerIntr_DimmingValue 0E14            __size_of_setDimmerLights_OnOff 002D  
           __end_of_setDimmerLights_OnOff 0773            __size_of_setDimmerLights_SwOff 0028  
          __size_of_myMain_Initialization 0001             __end_of_setDimmerLights_SwOff 07C5  
           __end_of_myMain_Initialization 0D88                            __size_of_getAD 001C  
                        ___lwdiv@quotient 005D                            _setPIRLED_Main 044B  
                                _CDS_Main 0712               __end_of_Temp_Initialization 0D8E  
                       interrupt_function 0004                                ?_getCDS_AD 0059  
                                _LED_Main 0D88                                 clear_ram0 0DC2  
                            _my_MainTimer 0F51                                ?_getPIR_AD 0060  
     __end_of_DimmerLights_Initialization 0DAC               _DimmerLights_Initialization 0DA5  
                          ?_getCmd_Status 0075                                  _GO_nDONE 00F9  
                       ??_Timeout_Counter 0057      __size_of_setDimmerIntr_ControlStatus 0016  
                    PIR_Main@TriggerValue 0066       __size_of_setDimmerIntr_DimmingValue 000C  
                                _PIR_Main 0027                                  _TMR1_ISR 0F6B  
                                _TMR1_Set 0E22                              ??_getTemp_AD 0059  
                                _WDT_Main 0E7F                          __size_of_ADC_Set 0007  
                          getPIR_AD@VRAD1 0066                     __size_of_setTemp_Main 007B  
                  __end_of_setPIRLED_Main 04BC            getMain_All_Error_Status@status 005B  
                             getAD@adcon0 0058                               getAD@adcon1 0057  
                    __end_of_WDT_Clearing 0004         __size_of_getMain_All_LightsStatus 000D  
               ?_getMain_All_LightsStatus 0075                  _setDimmerIntr_Dimming_RF 0EDD  
             setDimmerLights_OnOff@lights 005B                  _setDimmerIntr_Dimming_Sw 0EB5  
                                _Fosc_Set 0D9A                          __size_of_WDT_Set 000E  
       __size_of_getMain_All_Error_Status 001A                 ?_getMain_All_Error_Status 0075  
                      __end_of_getTemp_AD 0FDE       __size_of_DimmerLights_SelectPointer 000C  
                                _SwDetect 0074                               ??_Temp_Main 0062  
                        getCmd_Status@cmd 0058                          setCmd_Status@cmd 0057  
           _getMain_All_Error_Status$2565 0059                                 setLED@led 005A  
                            _setTemp_Main 03D0                          __size_of___awdiv 005D  
                        __size_of___lwdiv 0040                  setDimmerLights_SwOn@idle 005A  
                        ??_LedPointSelect 0057                        _CDS_Initialization 0D91  
                       getTemp_AD@channel 005B                           ?_setPIRLED_Main 0075  
                         ___lwdiv@divisor 0057                       ?_CDS_Initialization 0075  
                         ___lwdiv@counter 005C                                  __ptext10 0EC9  
                                __ptext11 0E7F                                  __ptext20 0E3E  
                                __ptext12 0002                                  __ptext21 0E30  
                                __ptext13 0D8E                                  __ptext30 068E  
                                __ptext22 0E22                                  __ptext14 03D0  
                                __ptext31 04BC                                  __ptext23 07E8  
                                __ptext15 0D8B                                  __ptext40 0E6E  
                                __ptext32 0F87                                  __ptext24 0D9A  
                                __ptext16 0D86                                  __ptext41 0773  
                                __ptext33 0F37                                  __ptext25 0DB3  
                                __ptext17 0027                                  __ptext50 0DD6  
                                __ptext42 0EB5                                  __ptext34 0DAC  
                                __ptext26 0D88                                  __ptext18 0DBA  
                                __ptext51 0E5D                                  __ptext43 0E14  
                                __ptext35 052D                                  __ptext27 044B  
                                __ptext19 0E07                                  __ptext60 063D  
                                __ptext52 0DCA                                  __ptext44 0D95  
                                __ptext36 0746                                  __ptext28 0DEE  
                                __ptext61 0E4D                                  __ptext53 0DA5  
                                __ptext45 033C                                  __ptext37 0F09  
                                __ptext29 0E90                                  __ptext54 0D85  
                                __ptext46 07C5                                  __ptext38 0EF3  
                                __ptext55 0EA2                                  __ptext47 079D  
                                __ptext39 0DFA                                  __ptext56 0712  
                                __ptext48 0DE2                                  __ptext57 0D91  
                                __ptext49 0EDD                                  __ptext58 0F1F  
                                __ptext59 0F6B                   ??_setLED_Initialization 005B  
                ??_getDimmerLights_Status 0059              __end_of_setDimmerLights_Main 058D  
                      _DimmerLights_IOC_1 0E4D              __end_of_setDimmerLights_SwOn 07E8  
              ??_DimmerLights_PIR_Control 005B                               ??_getCDS_AD 005A  
                           setLED@command 0059                             __size_of_main 0053  
      __size_of_DimmerIntr_Initialization 0013                           ??_getCmd_Status 0057  
                      _DimmerLights_TMR_1 063D                setDimmerLights_Main@lights 005E  
                             ??_getPIR_AD 0061                        _PIR_Initialization 0E07  
                    ??_CDS_Initialization 0057                       ?_DimmerLights_IOC_1 0075  
                     ?_DimmerLights_TMR_1 0075               __size_of_Mcu_Initialization 000F  
                     ?_PIR_Initialization 0075                                  main@argc 0069  
                                main@argv 006B              setDimmerLights_Dimming@value 005C  
      __end_of_setDimmerIntr_DimmingValue 0DE2                _setDimmerIntr_DimmingValue 0DD6  
                    ??_DimmerLights_IOC_1 0075                      ??_DimmerLights_TMR_1 0075  
            ??_getDimmerIntr_DimmingValue 0057                   setDimmerLights_SwOff@sw 0059  
                    ??_PIR_Initialization 0057                                  intlevel1 0000  
                   setTemp_Main@SafeValue 005F    __end_of_setDimmerLights_Initialization 0D86  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0D85  
              ?_setDimmerIntr_MaxmumValue 0057                   ?_setTemp_Initialization 0075  
                 __size_of_Exception_Main 0044                     __size_of_WDT_Clearing 0002  
             ?_getDimmerIntr_DimmingValue 0075          __size_of_setDimmerLights_Dimming 002A  
             __size_of_set_TimeoutCleared 0006                        __CFG_FOSC$INTOSCIO 0000  
                         _Timeout_Counter 0EC9           __size_of_getDimmerLights_Status 0011  
              __end_of_LED_Initialization 0DFA                     __end_of_getCDS_Status 0DC2  
          __end_of_setTemp_Initialization 0D87                         getCDS_AD@channel1 005E  
                       getCDS_AD@channel2 0059  
