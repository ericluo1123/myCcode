

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Jan 09 17:36:35 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,inline,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    67                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0096                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009F                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0186                     	;# 
   137  018C                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0096                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009F                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0186                     	;# 
   206  018C                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0096                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009F                     	;# 
   265  0108                     	;# 
   266  0109                     	;# 
   267  010C                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  010F                     	;# 
   273  0185                     	;# 
   274  0186                     	;# 
   275  018C                     	;# 
   276  0000                     	;# 
   277  0001                     	;# 
   278  0002                     	;# 
   279  0003                     	;# 
   280  0004                     	;# 
   281  0005                     	;# 
   282  0006                     	;# 
   283  0007                     	;# 
   284  0009                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  000E                     	;# 
   291  000F                     	;# 
   292  0010                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0013                     	;# 
   296  0014                     	;# 
   297  0015                     	;# 
   298  0015                     	;# 
   299  0016                     	;# 
   300  0017                     	;# 
   301  0018                     	;# 
   302  0019                     	;# 
   303  001A                     	;# 
   304  001B                     	;# 
   305  001B                     	;# 
   306  001C                     	;# 
   307  001D                     	;# 
   308  001E                     	;# 
   309  001F                     	;# 
   310  0081                     	;# 
   311  0085                     	;# 
   312  0086                     	;# 
   313  0087                     	;# 
   314  0089                     	;# 
   315  008C                     	;# 
   316  008D                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0092                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0095                     	;# 
   327  0096                     	;# 
   328  0096                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009F                     	;# 
   334  0108                     	;# 
   335  0109                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010D                     	;# 
   340  010E                     	;# 
   341  010F                     	;# 
   342  0185                     	;# 
   343  0186                     	;# 
   344  018C                     	;# 
   345  0000                     	;# 
   346  0001                     	;# 
   347  0002                     	;# 
   348  0003                     	;# 
   349  0004                     	;# 
   350  0005                     	;# 
   351  0006                     	;# 
   352  0007                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  000E                     	;# 
   359  000E                     	;# 
   360  000F                     	;# 
   361  0010                     	;# 
   362  0011                     	;# 
   363  0012                     	;# 
   364  0013                     	;# 
   365  0014                     	;# 
   366  0015                     	;# 
   367  0015                     	;# 
   368  0016                     	;# 
   369  0017                     	;# 
   370  0018                     	;# 
   371  0019                     	;# 
   372  001A                     	;# 
   373  001B                     	;# 
   374  001B                     	;# 
   375  001C                     	;# 
   376  001D                     	;# 
   377  001E                     	;# 
   378  001F                     	;# 
   379  0081                     	;# 
   380  0085                     	;# 
   381  0086                     	;# 
   382  0087                     	;# 
   383  0089                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  008F                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0093                     	;# 
   393  0094                     	;# 
   394  0095                     	;# 
   395  0095                     	;# 
   396  0096                     	;# 
   397  0096                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009F                     	;# 
   403  0108                     	;# 
   404  0109                     	;# 
   405  010C                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0185                     	;# 
   412  0186                     	;# 
   413  018C                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0089                     	;# 
   453  008C                     	;# 
   454  008D                     	;# 
   455  008E                     	;# 
   456  008F                     	;# 
   457  0090                     	;# 
   458  0091                     	;# 
   459  0092                     	;# 
   460  0093                     	;# 
   461  0093                     	;# 
   462  0094                     	;# 
   463  0095                     	;# 
   464  0095                     	;# 
   465  0096                     	;# 
   466  0096                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009F                     	;# 
   472  0108                     	;# 
   473  0109                     	;# 
   474  010C                     	;# 
   475  010C                     	;# 
   476  010D                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  010F                     	;# 
   480  0185                     	;# 
   481  0186                     	;# 
   482  018C                     	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0089                     	;# 
   522  008C                     	;# 
   523  008D                     	;# 
   524  008E                     	;# 
   525  008F                     	;# 
   526  0090                     	;# 
   527  0091                     	;# 
   528  0092                     	;# 
   529  0093                     	;# 
   530  0093                     	;# 
   531  0094                     	;# 
   532  0095                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0096                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009F                     	;# 
   541  0108                     	;# 
   542  0109                     	;# 
   543  010C                     	;# 
   544  010C                     	;# 
   545  010D                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  010F                     	;# 
   549  0185                     	;# 
   550  0186                     	;# 
   551  018C                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  000E                     	;# 
   567  000F                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0014                     	;# 
   573  0015                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  0081                     	;# 
   587  0085                     	;# 
   588  0086                     	;# 
   589  0087                     	;# 
   590  0089                     	;# 
   591  008C                     	;# 
   592  008D                     	;# 
   593  008E                     	;# 
   594  008F                     	;# 
   595  0090                     	;# 
   596  0091                     	;# 
   597  0092                     	;# 
   598  0093                     	;# 
   599  0093                     	;# 
   600  0094                     	;# 
   601  0095                     	;# 
   602  0095                     	;# 
   603  0096                     	;# 
   604  0096                     	;# 
   605  0098                     	;# 
   606  0099                     	;# 
   607  009C                     	;# 
   608  009D                     	;# 
   609  009F                     	;# 
   610  0108                     	;# 
   611  0109                     	;# 
   612  010C                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  0185                     	;# 
   619  0186                     	;# 
   620  018C                     	;# 
   621  0000                     	;# 
   622  0001                     	;# 
   623  0002                     	;# 
   624  0003                     	;# 
   625  0004                     	;# 
   626  0005                     	;# 
   627  0006                     	;# 
   628  0007                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  000E                     	;# 
   636  000F                     	;# 
   637  0010                     	;# 
   638  0011                     	;# 
   639  0012                     	;# 
   640  0013                     	;# 
   641  0014                     	;# 
   642  0015                     	;# 
   643  0015                     	;# 
   644  0016                     	;# 
   645  0017                     	;# 
   646  0018                     	;# 
   647  0019                     	;# 
   648  001A                     	;# 
   649  001B                     	;# 
   650  001B                     	;# 
   651  001C                     	;# 
   652  001D                     	;# 
   653  001E                     	;# 
   654  001F                     	;# 
   655  0081                     	;# 
   656  0085                     	;# 
   657  0086                     	;# 
   658  0087                     	;# 
   659  0089                     	;# 
   660  008C                     	;# 
   661  008D                     	;# 
   662  008E                     	;# 
   663  008F                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0093                     	;# 
   669  0094                     	;# 
   670  0095                     	;# 
   671  0095                     	;# 
   672  0096                     	;# 
   673  0096                     	;# 
   674  0098                     	;# 
   675  0099                     	;# 
   676  009C                     	;# 
   677  009D                     	;# 
   678  009F                     	;# 
   679  0108                     	;# 
   680  0109                     	;# 
   681  010C                     	;# 
   682  010C                     	;# 
   683  010D                     	;# 
   684  010D                     	;# 
   685  010E                     	;# 
   686  010F                     	;# 
   687  0185                     	;# 
   688  0186                     	;# 
   689  018C                     	;# 
   690  0000                     	;# 
   691  0001                     	;# 
   692  0002                     	;# 
   693  0003                     	;# 
   694  0004                     	;# 
   695  0005                     	;# 
   696  0006                     	;# 
   697  0007                     	;# 
   698  0009                     	;# 
   699  000A                     	;# 
   700  000B                     	;# 
   701  000C                     	;# 
   702  000D                     	;# 
   703  000E                     	;# 
   704  000E                     	;# 
   705  000F                     	;# 
   706  0010                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0013                     	;# 
   710  0014                     	;# 
   711  0015                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0017                     	;# 
   715  0018                     	;# 
   716  0019                     	;# 
   717  001A                     	;# 
   718  001B                     	;# 
   719  001B                     	;# 
   720  001C                     	;# 
   721  001D                     	;# 
   722  001E                     	;# 
   723  001F                     	;# 
   724  0081                     	;# 
   725  0085                     	;# 
   726  0086                     	;# 
   727  0087                     	;# 
   728  0089                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008F                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0092                     	;# 
   736  0093                     	;# 
   737  0093                     	;# 
   738  0094                     	;# 
   739  0095                     	;# 
   740  0095                     	;# 
   741  0096                     	;# 
   742  0096                     	;# 
   743  0098                     	;# 
   744  0099                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009F                     	;# 
   748  0108                     	;# 
   749  0109                     	;# 
   750  010C                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  010D                     	;# 
   754  010E                     	;# 
   755  010F                     	;# 
   756  0185                     	;# 
   757  0186                     	;# 
   758  018C                     	;# 
   759  0000                     	;# 
   760  0001                     	;# 
   761  0002                     	;# 
   762  0003                     	;# 
   763  0004                     	;# 
   764  0005                     	;# 
   765  0006                     	;# 
   766  0007                     	;# 
   767  0009                     	;# 
   768  000A                     	;# 
   769  000B                     	;# 
   770  000C                     	;# 
   771  000D                     	;# 
   772  000E                     	;# 
   773  000E                     	;# 
   774  000F                     	;# 
   775  0010                     	;# 
   776  0011                     	;# 
   777  0012                     	;# 
   778  0013                     	;# 
   779  0014                     	;# 
   780  0015                     	;# 
   781  0015                     	;# 
   782  0016                     	;# 
   783  0017                     	;# 
   784  0018                     	;# 
   785  0019                     	;# 
   786  001A                     	;# 
   787  001B                     	;# 
   788  001B                     	;# 
   789  001C                     	;# 
   790  001D                     	;# 
   791  001E                     	;# 
   792  001F                     	;# 
   793  0081                     	;# 
   794  0085                     	;# 
   795  0086                     	;# 
   796  0087                     	;# 
   797  0089                     	;# 
   798  008C                     	;# 
   799  008D                     	;# 
   800  008E                     	;# 
   801  008F                     	;# 
   802  0090                     	;# 
   803  0091                     	;# 
   804  0092                     	;# 
   805  0093                     	;# 
   806  0093                     	;# 
   807  0094                     	;# 
   808  0095                     	;# 
   809  0095                     	;# 
   810  0096                     	;# 
   811  0096                     	;# 
   812  0098                     	;# 
   813  0099                     	;# 
   814  009C                     	;# 
   815  009D                     	;# 
   816  009F                     	;# 
   817  0108                     	;# 
   818  0109                     	;# 
   819  010C                     	;# 
   820  010C                     	;# 
   821  010D                     	;# 
   822  010D                     	;# 
   823  010E                     	;# 
   824  010F                     	;# 
   825  0185                     	;# 
   826  0186                     	;# 
   827  018C                     	;# 
   828  0000                     	;# 
   829  0001                     	;# 
   830  0002                     	;# 
   831  0003                     	;# 
   832  0004                     	;# 
   833  0005                     	;# 
   834  0006                     	;# 
   835  0007                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  000E                     	;# 
   843  000F                     	;# 
   844  0010                     	;# 
   845  0011                     	;# 
   846  0012                     	;# 
   847  0013                     	;# 
   848  0014                     	;# 
   849  0015                     	;# 
   850  0015                     	;# 
   851  0016                     	;# 
   852  0017                     	;# 
   853  0018                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001B                     	;# 
   858  001C                     	;# 
   859  001D                     	;# 
   860  001E                     	;# 
   861  001F                     	;# 
   862  0081                     	;# 
   863  0085                     	;# 
   864  0086                     	;# 
   865  0087                     	;# 
   866  0089                     	;# 
   867  008C                     	;# 
   868  008D                     	;# 
   869  008E                     	;# 
   870  008F                     	;# 
   871  0090                     	;# 
   872  0091                     	;# 
   873  0092                     	;# 
   874  0093                     	;# 
   875  0093                     	;# 
   876  0094                     	;# 
   877  0095                     	;# 
   878  0095                     	;# 
   879  0096                     	;# 
   880  0096                     	;# 
   881  0098                     	;# 
   882  0099                     	;# 
   883  009C                     	;# 
   884  009D                     	;# 
   885  009F                     	;# 
   886  0108                     	;# 
   887  0109                     	;# 
   888  010C                     	;# 
   889  010C                     	;# 
   890  010D                     	;# 
   891  010D                     	;# 
   892  010E                     	;# 
   893  010F                     	;# 
   894  0185                     	;# 
   895  0186                     	;# 
   896  018C                     	;# 
   897  0000                     	;# 
   898  0001                     	;# 
   899  0002                     	;# 
   900  0003                     	;# 
   901  0004                     	;# 
   902  0005                     	;# 
   903  0006                     	;# 
   904  0007                     	;# 
   905  0009                     	;# 
   906  000A                     	;# 
   907  000B                     	;# 
   908  000C                     	;# 
   909  000D                     	;# 
   910  000E                     	;# 
   911  000E                     	;# 
   912  000F                     	;# 
   913  0010                     	;# 
   914  0011                     	;# 
   915  0012                     	;# 
   916  0013                     	;# 
   917  0014                     	;# 
   918  0015                     	;# 
   919  0015                     	;# 
   920  0016                     	;# 
   921  0017                     	;# 
   922  0018                     	;# 
   923  0019                     	;# 
   924  001A                     	;# 
   925  001B                     	;# 
   926  001B                     	;# 
   927  001C                     	;# 
   928  001D                     	;# 
   929  001E                     	;# 
   930  001F                     	;# 
   931  0081                     	;# 
   932  0085                     	;# 
   933  0086                     	;# 
   934  0087                     	;# 
   935  0089                     	;# 
   936  008C                     	;# 
   937  008D                     	;# 
   938  008E                     	;# 
   939  008F                     	;# 
   940  0090                     	;# 
   941  0091                     	;# 
   942  0092                     	;# 
   943  0093                     	;# 
   944  0093                     	;# 
   945  0094                     	;# 
   946  0095                     	;# 
   947  0095                     	;# 
   948  0096                     	;# 
   949  0096                     	;# 
   950  0098                     	;# 
   951  0099                     	;# 
   952  009C                     	;# 
   953  009D                     	;# 
   954  009F                     	;# 
   955  0108                     	;# 
   956  0109                     	;# 
   957  010C                     	;# 
   958  010C                     	;# 
   959  010D                     	;# 
   960  010D                     	;# 
   961  010E                     	;# 
   962  010F                     	;# 
   963  0185                     	;# 
   964  0186                     	;# 
   965  018C                     	;# 
   966  0000                     	;# 
   967  0001                     	;# 
   968  0002                     	;# 
   969  0003                     	;# 
   970  0004                     	;# 
   971  0005                     	;# 
   972  0006                     	;# 
   973  0007                     	;# 
   974  0009                     	;# 
   975  000A                     	;# 
   976  000B                     	;# 
   977  000C                     	;# 
   978  000D                     	;# 
   979  000E                     	;# 
   980  000E                     	;# 
   981  000F                     	;# 
   982  0010                     	;# 
   983  0011                     	;# 
   984  0012                     	;# 
   985  0013                     	;# 
   986  0014                     	;# 
   987  0015                     	;# 
   988  0015                     	;# 
   989  0016                     	;# 
   990  0017                     	;# 
   991  0018                     	;# 
   992  0019                     	;# 
   993  001A                     	;# 
   994  001B                     	;# 
   995  001B                     	;# 
   996  001C                     	;# 
   997  001D                     	;# 
   998  001E                     	;# 
   999  001F                     	;# 
  1000  0081                     	;# 
  1001  0085                     	;# 
  1002  0086                     	;# 
  1003  0087                     	;# 
  1004  0089                     	;# 
  1005  008C                     	;# 
  1006  008D                     	;# 
  1007  008E                     	;# 
  1008  008F                     	;# 
  1009  0090                     	;# 
  1010  0091                     	;# 
  1011  0092                     	;# 
  1012  0093                     	;# 
  1013  0093                     	;# 
  1014  0094                     	;# 
  1015  0095                     	;# 
  1016  0095                     	;# 
  1017  0096                     	;# 
  1018  0096                     	;# 
  1019  0098                     	;# 
  1020  0099                     	;# 
  1021  009C                     	;# 
  1022  009D                     	;# 
  1023  009F                     	;# 
  1024  0108                     	;# 
  1025  0109                     	;# 
  1026  010C                     	;# 
  1027  010C                     	;# 
  1028  010D                     	;# 
  1029  010D                     	;# 
  1030  010E                     	;# 
  1031  010F                     	;# 
  1032  0185                     	;# 
  1033  0186                     	;# 
  1034  018C                     	;# 
  1035  0000                     	;# 
  1036  0001                     	;# 
  1037  0002                     	;# 
  1038  0003                     	;# 
  1039  0004                     	;# 
  1040  0005                     	;# 
  1041  0006                     	;# 
  1042  0007                     	;# 
  1043  0009                     	;# 
  1044  000A                     	;# 
  1045  000B                     	;# 
  1046  000C                     	;# 
  1047  000D                     	;# 
  1048  000E                     	;# 
  1049  000E                     	;# 
  1050  000F                     	;# 
  1051  0010                     	;# 
  1052  0011                     	;# 
  1053  0012                     	;# 
  1054  0013                     	;# 
  1055  0014                     	;# 
  1056  0015                     	;# 
  1057  0015                     	;# 
  1058  0016                     	;# 
  1059  0017                     	;# 
  1060  0018                     	;# 
  1061  0019                     	;# 
  1062  001A                     	;# 
  1063  001B                     	;# 
  1064  001B                     	;# 
  1065  001C                     	;# 
  1066  001D                     	;# 
  1067  001E                     	;# 
  1068  001F                     	;# 
  1069  0081                     	;# 
  1070  0085                     	;# 
  1071  0086                     	;# 
  1072  0087                     	;# 
  1073  0089                     	;# 
  1074  008C                     	;# 
  1075  008D                     	;# 
  1076  008E                     	;# 
  1077  008F                     	;# 
  1078  0090                     	;# 
  1079  0091                     	;# 
  1080  0092                     	;# 
  1081  0093                     	;# 
  1082  0093                     	;# 
  1083  0094                     	;# 
  1084  0095                     	;# 
  1085  0095                     	;# 
  1086  0096                     	;# 
  1087  0096                     	;# 
  1088  0098                     	;# 
  1089  0099                     	;# 
  1090  009C                     	;# 
  1091  009D                     	;# 
  1092  009F                     	;# 
  1093  0108                     	;# 
  1094  0109                     	;# 
  1095  010C                     	;# 
  1096  010C                     	;# 
  1097  010D                     	;# 
  1098  010D                     	;# 
  1099  010E                     	;# 
  1100  010F                     	;# 
  1101  0185                     	;# 
  1102  0186                     	;# 
  1103  018C                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0009                     	;# 
  1113  000A                     	;# 
  1114  000B                     	;# 
  1115  000C                     	;# 
  1116  000D                     	;# 
  1117  000E                     	;# 
  1118  000E                     	;# 
  1119  000F                     	;# 
  1120  0010                     	;# 
  1121  0011                     	;# 
  1122  0012                     	;# 
  1123  0013                     	;# 
  1124  0014                     	;# 
  1125  0015                     	;# 
  1126  0015                     	;# 
  1127  0016                     	;# 
  1128  0017                     	;# 
  1129  0018                     	;# 
  1130  0019                     	;# 
  1131  001A                     	;# 
  1132  001B                     	;# 
  1133  001B                     	;# 
  1134  001C                     	;# 
  1135  001D                     	;# 
  1136  001E                     	;# 
  1137  001F                     	;# 
  1138  0081                     	;# 
  1139  0085                     	;# 
  1140  0086                     	;# 
  1141  0087                     	;# 
  1142  0089                     	;# 
  1143  008C                     	;# 
  1144  008D                     	;# 
  1145  008E                     	;# 
  1146  008F                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0093                     	;# 
  1152  0094                     	;# 
  1153  0095                     	;# 
  1154  0095                     	;# 
  1155  0096                     	;# 
  1156  0096                     	;# 
  1157  0098                     	;# 
  1158  0099                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009F                     	;# 
  1162  0108                     	;# 
  1163  0109                     	;# 
  1164  010C                     	;# 
  1165  010C                     	;# 
  1166  010D                     	;# 
  1167  010D                     	;# 
  1168  010E                     	;# 
  1169  010F                     	;# 
  1170  0185                     	;# 
  1171  0186                     	;# 
  1172  018C                     	;# 
  1173  0000                     	;# 
  1174  0001                     	;# 
  1175  0002                     	;# 
  1176  0003                     	;# 
  1177  0004                     	;# 
  1178  0005                     	;# 
  1179  0006                     	;# 
  1180  0007                     	;# 
  1181  0009                     	;# 
  1182  000A                     	;# 
  1183  000B                     	;# 
  1184  000C                     	;# 
  1185  000D                     	;# 
  1186  000E                     	;# 
  1187  000E                     	;# 
  1188  000F                     	;# 
  1189  0010                     	;# 
  1190  0011                     	;# 
  1191  0012                     	;# 
  1192  0013                     	;# 
  1193  0014                     	;# 
  1194  0015                     	;# 
  1195  0015                     	;# 
  1196  0016                     	;# 
  1197  0017                     	;# 
  1198  0018                     	;# 
  1199  0019                     	;# 
  1200  001A                     	;# 
  1201  001B                     	;# 
  1202  001B                     	;# 
  1203  001C                     	;# 
  1204  001D                     	;# 
  1205  001E                     	;# 
  1206  001F                     	;# 
  1207  0081                     	;# 
  1208  0085                     	;# 
  1209  0086                     	;# 
  1210  0087                     	;# 
  1211  0089                     	;# 
  1212  008C                     	;# 
  1213  008D                     	;# 
  1214  008E                     	;# 
  1215  008F                     	;# 
  1216  0090                     	;# 
  1217  0091                     	;# 
  1218  0092                     	;# 
  1219  0093                     	;# 
  1220  0093                     	;# 
  1221  0094                     	;# 
  1222  0095                     	;# 
  1223  0095                     	;# 
  1224  0096                     	;# 
  1225  0096                     	;# 
  1226  0098                     	;# 
  1227  0099                     	;# 
  1228  009C                     	;# 
  1229  009D                     	;# 
  1230  009F                     	;# 
  1231  0108                     	;# 
  1232  0109                     	;# 
  1233  010C                     	;# 
  1234  010C                     	;# 
  1235  010D                     	;# 
  1236  010D                     	;# 
  1237  010E                     	;# 
  1238  010F                     	;# 
  1239  0185                     	;# 
  1240  0186                     	;# 
  1241  018C                     	;# 
  1242  0000                     	;# 
  1243  0001                     	;# 
  1244  0002                     	;# 
  1245  0003                     	;# 
  1246  0004                     	;# 
  1247  0005                     	;# 
  1248  0006                     	;# 
  1249  0007                     	;# 
  1250  0009                     	;# 
  1251  000A                     	;# 
  1252  000B                     	;# 
  1253  000C                     	;# 
  1254  000D                     	;# 
  1255  000E                     	;# 
  1256  000E                     	;# 
  1257  000F                     	;# 
  1258  0010                     	;# 
  1259  0011                     	;# 
  1260  0012                     	;# 
  1261  0013                     	;# 
  1262  0014                     	;# 
  1263  0015                     	;# 
  1264  0015                     	;# 
  1265  0016                     	;# 
  1266  0017                     	;# 
  1267  0018                     	;# 
  1268  0019                     	;# 
  1269  001A                     	;# 
  1270  001B                     	;# 
  1271  001B                     	;# 
  1272  001C                     	;# 
  1273  001D                     	;# 
  1274  001E                     	;# 
  1275  001F                     	;# 
  1276  0081                     	;# 
  1277  0085                     	;# 
  1278  0086                     	;# 
  1279  0087                     	;# 
  1280  0089                     	;# 
  1281  008C                     	;# 
  1282  008D                     	;# 
  1283  008E                     	;# 
  1284  008F                     	;# 
  1285  0090                     	;# 
  1286  0091                     	;# 
  1287  0092                     	;# 
  1288  0093                     	;# 
  1289  0093                     	;# 
  1290  0094                     	;# 
  1291  0095                     	;# 
  1292  0095                     	;# 
  1293  0096                     	;# 
  1294  0096                     	;# 
  1295  0098                     	;# 
  1296  0099                     	;# 
  1297  009C                     	;# 
  1298  009D                     	;# 
  1299  009F                     	;# 
  1300  0108                     	;# 
  1301  0109                     	;# 
  1302  010C                     	;# 
  1303  010C                     	;# 
  1304  010D                     	;# 
  1305  010D                     	;# 
  1306  010E                     	;# 
  1307  010F                     	;# 
  1308  0185                     	;# 
  1309  0186                     	;# 
  1310  018C                     	;# 
  1311  001F                     _ADCON0	set	31
  1312  001E                     _ADRES	set	30
  1313  0005                     _PORTA	set	5
  1314  0006                     _PORTB	set	6
  1315  0007                     _PORTC	set	7
  1316  0010                     _T1CON	set	16
  1317  000F                     _TMR1H	set	15
  1318  000E                     _TMR1L	set	14
  1319  005F                     _GIE	set	95
  1320  00F9                     _GO_nDONE	set	249
  1321  005E                     _PEIE	set	94
  1322  002F                     _RA7	set	47
  1323  0032                     _RB2	set	50
  1324  0033                     _RB3	set	51
  1325  0034                     _RB4	set	52
  1326  0035                     _RB5	set	53
  1327  0060                     _TMR1IF	set	96
  1328  009F                     _ADCON1	set	159
  1329  009D                     _FVRCON	set	157
  1330  0090                     _OSCCON	set	144
  1331  0085                     _TRISA	set	133
  1332  0086                     _TRISB	set	134
  1333  0087                     _TRISC	set	135
  1334  0095                     _WPUB	set	149
  1335  0408                     _PS0	set	1032
  1336  0409                     _PS1	set	1033
  1337  040A                     _PS2	set	1034
  1338  040B                     _PSA	set	1035
  1339  0460                     _TMR1IE	set	1120
  1340  0185                     _ANSELA	set	389
  1341  0186                     _ANSELB	set	390
  1342                           
  1343                           	psect	text0
  1344  0000                     __ptext0:	
  1345                           ; #config settings
  1346                           
  1347                           
  1348                           ;psect for function _DimmerLights_IOC_1
  1349  0000                     
  1350                           	psect	cinit
  1351  0013                     start_initialization:	
  1352  0013                     __initialization:	
  1353                           
  1354                           ; Clear objects allocated to COMMON
  1355  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1356  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1357  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1358  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1359  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1360                           
  1361                           ; Clear objects allocated to BANK0
  1362  0018  1383               	bcf	3,7	;select IRP bank0
  1363  0019  3020               	movlw	low __pbssBANK0
  1364  001A  0084               	movwf	4
  1365  001B  3053               	movlw	low (__pbssBANK0+51)
  1366  001C  158A  267A  118A   	fcall	clear_ram0
  1367                           
  1368                           ; Clear objects allocated to BANK1
  1369  001F  30A0               	movlw	low __pbssBANK1
  1370  0020  0084               	movwf	4
  1371  0021  30CE               	movlw	low (__pbssBANK1+46)
  1372  0022  158A  267A         	fcall	clear_ram0
  1373  0024                     end_of_initialization:	
  1374                           ;End of C runtime variable initialization code
  1375                           
  1376  0024                     __end_of__initialization:	
  1377  0024  0183               	clrf	3
  1378  0025  118A  2E11         	ljmp	_main	;jump to C main() function
  1379                           
  1380                           	psect	bssCOMMON
  1381  0070                     __pbssCOMMON:	
  1382  0070                     _Cmd:	
  1383  0070                     	ds	1
  1384  0071                     _DimmerIntr:	
  1385  0071                     	ds	1
  1386  0072                     _DimmerLights:	
  1387  0072                     	ds	1
  1388  0073                     _LED:	
  1389  0073                     	ds	1
  1390  0074                     _SwDetect:	
  1391  0074                     	ds	1
  1392                           
  1393                           	psect	bssBANK0
  1394  0020                     __pbssBANK0:	
  1395  0020                     _DimmerIntr1:	
  1396  0020                     	ds	7
  1397  0027                     _myMain:	
  1398  0027                     	ds	6
  1399  002D                     __CDS:	
  1400  002D                     	ds	5
  1401  0032                     _PIRLED:	
  1402  0032                     	ds	4
  1403  0036                     _Dimmer:	
  1404  0036                     	ds	3
  1405  0039                     _Timer1:	
  1406  0039                     	ds	3
  1407  003C                     _WDT:	
  1408  003C                     	ds	2
  1409  003E                     _Light:	
  1410  003E                     	ds	1
  1411  003F                     _DimmerLights1:	
  1412  003F                     	ds	8
  1413  0047                     _VarErrLED:	
  1414  0047                     	ds	4
  1415  004B                     _VarLED1:	
  1416  004B                     	ds	4
  1417  004F                     _VarLED2:	
  1418  004F                     	ds	4
  1419                           
  1420                           	psect	bssBANK1
  1421  00A0                     __pbssBANK1:	
  1422  00A0                     __PIR:	
  1423  00A0                     	ds	46
  1424                           
  1425                           	psect	clrtext
  1426  0E7A                     clear_ram0:	
  1427                           ;	Called with FSR containing the base address, and
  1428                           ;	W with the last address+1
  1429                           
  1430  0E7A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1431  0E7B                     clrloop0:	
  1432  0E7B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1433  0E7C  0A84               	incf	4,f	;increment pointer
  1434  0E7D  0604               	xorwf	4,w	;XOR with final address
  1435  0E7E  1903               	btfsc	3,2	;have we reached the end yet?
  1436  0E7F  3400               	retlw	0	;all done for this memory range, return
  1437  0E80  0604               	xorwf	4,w	;XOR again to restore value
  1438  0E81  2E7B               	goto	clrloop0	;do the next byte
  1439                           
  1440                           	psect	cstackCOMMON
  1441  0075                     __pcstackCOMMON:	
  1442  0075                     ?_setDimmerLights_Initialization:	
  1443  0075                     ?_setDimmerLights_Main:	
  1444                           ; 0 bytes @ 0x0
  1445                           
  1446  0075                     ?_setLED_Initialization:	
  1447                           ; 0 bytes @ 0x0
  1448                           
  1449  0075                     ?_setPIRLED_Main:	
  1450                           ; 0 bytes @ 0x0
  1451                           
  1452  0075                     ?_Fosc_Set:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     ?_IO_Set:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0075                     ?_TMR1_Set:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0075                     ?_ADC_Set:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0075                     ?_WDT_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0075                     ?_TMR1_ISR:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0075                     ?_Timeout_Counter:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0075                     ?_set_TimeoutCleared:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0075                     ?_WDT_Clearing:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0075                     ?_myMain_Initialization:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0075                     ?_PIR_Initialization:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0075                     ?_my_MainTimer:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0075                     ?_PIR_Main:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0075                     ?_Exception_Main:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0075                     ?_CDS_Initialization:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0075                     ?_CDS_Main:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0075                     ?_DimmerIntr_Initialization:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0075                     ?_DimmerLights_SelectPointer:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0075                     ?_DimmerLights_Initialization:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0075                     ?_setDimmerLights_SwOn:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0075                     ?_setDimmerLights_SwOff:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0075                     ?_DimmerLights_Main:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0075                     ?_DimmerLights_TMR_1:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0075                     ??_DimmerLights_TMR_1:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0075                     ?_DimmerLights_IOC_1:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0075                     ??_DimmerLights_IOC_1:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0075                     ?_LedPointSelect:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0075                     ?_LED_Initialization:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0075                     ?_LED_Main:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0075                     ?_Mcu_Initialization:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0075                     ?_ISR:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0075                     ?_WDT_Main:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0075                     ?_getDimmerLights_Allow_Condition:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0075                     ?_getMain_All_LightsStatus:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0075                     ?_getCmd_Status:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0075                     ?_getCDS_Status:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0075                     ?_getDimmerLights_Line:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0075                     ?_getDimmerLights_Status:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0075                     ?_getMain_All_Error_Status:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0075                     setDimmerLights_Initialization@lights:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0075                     getDimmerLights_Allow_Condition@lights:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0075                     getMain_All_Error_Status@command:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578                           
  1579                           ; 1 bytes @ 0x0
  1580  0075                     	ds	1
  1581  0076                     ??_TMR1_ISR:	
  1582  0076                     ??_ISR:	
  1583                           ; 0 bytes @ 0x1
  1584                           
  1585                           
  1586                           ; 0 bytes @ 0x1
  1587  0076                     	ds	4
  1588                           
  1589                           	psect	cstackBANK0
  1590  0053                     __pcstackBANK0:	
  1591  0053                     ??_setDimmerLights_Initialization:	
  1592  0053                     ??_getDimmerLights_Allow_Condition:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0053                     ??_getMain_All_LightsStatus:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0053                     ??_getCmd_Status:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0053                     ?_setCmd_Status:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0053                     ??_Fosc_Set:	
  1605                           ; 0 bytes @ 0x0
  1606                           
  1607  0053                     ??_IO_Set:	
  1608                           ; 0 bytes @ 0x0
  1609                           
  1610  0053                     ??_TMR1_Set:	
  1611                           ; 0 bytes @ 0x0
  1612                           
  1613  0053                     ??_ADC_Set:	
  1614                           ; 0 bytes @ 0x0
  1615                           
  1616  0053                     ??_WDT_Set:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0053                     ??_Timeout_Counter:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0053                     ??_set_TimeoutCleared:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0053                     ??_WDT_Clearing:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0053                     ??_myMain_Initialization:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0053                     ??_PIR_Initialization:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0053                     ??_my_MainTimer:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0053                     ??_CDS_Initialization:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0053                     ??_CDS_Main:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0053                     ??_getCDS_Status:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0053                     ??_DimmerIntr_Initialization:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0053                     ?_setDimmerIntr_ControlStatus:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0053                     ?_setDimmerIntr_DimmingValue:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0053                     ?_setDimmerIntr_Dimming_Sw:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0053                     ?_setDimmerIntr_Dimming_RF:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0053                     ??_DimmerLights_SelectPointer:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0053                     ??_getDimmerLights_Line:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0053                     ??_LedPointSelect:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0053                     ??_WDT_Main:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0053                     ??_getMain_All_Error_Status:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0053                     ?_getAD:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0053                     ?___awdiv:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0053                     ?___lwdiv:	
  1683                           ; 2 bytes @ 0x0
  1684                           
  1685  0053                     getCDS_Status@status:	
  1686                           ; 2 bytes @ 0x0
  1687                           
  1688  0053                     setDimmerIntr_ControlStatus@command:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0053                     setDimmerIntr_DimmingValue@value:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0053                     setDimmerIntr_Dimming_Sw@command:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0053                     setDimmerIntr_Dimming_RF@command:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0053                     getDimmerLights_Allow_Condition@allow:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0053                     getDimmerLights_Line@line:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0053                     getAD@adcon1:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0053                     getMain_All_LightsStatus@status:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0053                     getMain_All_Error_Status@status:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0053                     setCmd_Status@cmd:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0053                     getCmd_Status@number:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0053                     ___awdiv@divisor:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0053                     ___lwdiv@divisor:	
  1725                           ; 2 bytes @ 0x0
  1726                           
  1727                           
  1728                           ; 2 bytes @ 0x0
  1729  0053                     	ds	1
  1730  0054                     ??_getAD:	
  1731  0054                     ??_setCmd_Status:	
  1732                           ; 0 bytes @ 0x1
  1733                           
  1734  0054                     ??_setDimmerIntr_ControlStatus:	
  1735                           ; 0 bytes @ 0x1
  1736                           
  1737  0054                     ??_setDimmerIntr_DimmingValue:	
  1738                           ; 0 bytes @ 0x1
  1739                           
  1740  0054                     ??_setDimmerIntr_Dimming_Sw:	
  1741                           ; 0 bytes @ 0x1
  1742                           
  1743  0054                     ??_setDimmerIntr_Dimming_RF:	
  1744                           ; 0 bytes @ 0x1
  1745                           
  1746  0054                     ??_DimmerLights_Initialization:	
  1747                           ; 0 bytes @ 0x1
  1748                           
  1749  0054                     ??_Mcu_Initialization:	
  1750                           ; 0 bytes @ 0x1
  1751                           
  1752  0054                     DimmerLights_SelectPointer@lights:	
  1753                           ; 0 bytes @ 0x1
  1754                           
  1755  0054                     LedPointSelect@led:	
  1756                           ; 1 bytes @ 0x1
  1757                           
  1758  0054                     getAD@adcon0:	
  1759                           ; 1 bytes @ 0x1
  1760                           
  1761  0054                     getCmd_Status@cmd:	
  1762                           ; 1 bytes @ 0x1
  1763                           
  1764                           
  1765                           ; 1 bytes @ 0x1
  1766  0054                     	ds	1
  1767  0055                     ?_setLED:	
  1768  0055                     ?_getCDS_AD:	
  1769                           ; 0 bytes @ 0x2
  1770                           
  1771  0055                     ??_setDimmerLights_SwOn:	
  1772                           ; 0 bytes @ 0x2
  1773                           
  1774  0055                     ??_setDimmerLights_SwOff:	
  1775                           ; 0 bytes @ 0x2
  1776                           
  1777  0055                     ??_getDimmerLights_Status:	
  1778                           ; 0 bytes @ 0x2
  1779                           
  1780  0055                     getCDS_AD@channel2:	
  1781                           ; 0 bytes @ 0x2
  1782                           
  1783  0055                     setDimmerIntr_ControlStatus@lights:	
  1784                           ; 1 bytes @ 0x2
  1785                           
  1786  0055                     setDimmerIntr_DimmingValue@lights:	
  1787                           ; 1 bytes @ 0x2
  1788                           
  1789  0055                     setDimmerIntr_Dimming_Sw@lights:	
  1790                           ; 1 bytes @ 0x2
  1791                           
  1792  0055                     setDimmerIntr_Dimming_RF@lights:	
  1793                           ; 1 bytes @ 0x2
  1794                           
  1795  0055                     setDimmerLights_SwOn@sw:	
  1796                           ; 1 bytes @ 0x2
  1797                           
  1798  0055                     setDimmerLights_SwOff@sw:	
  1799                           ; 1 bytes @ 0x2
  1800                           
  1801  0055                     getDimmerLights_Status@lights:	
  1802                           ; 1 bytes @ 0x2
  1803                           
  1804  0055                     setLED@command:	
  1805                           ; 1 bytes @ 0x2
  1806                           
  1807  0055                     setCmd_Status@number:	
  1808                           ; 1 bytes @ 0x2
  1809                           
  1810  0055                     ___awdiv@dividend:	
  1811                           ; 1 bytes @ 0x2
  1812                           
  1813  0055                     ___lwdiv@dividend:	
  1814                           ; 2 bytes @ 0x2
  1815                           
  1816                           
  1817                           ; 2 bytes @ 0x2
  1818  0055                     	ds	1
  1819  0056                     ?_setDimmerLights_Dimming:	
  1820  0056                     ??_setLED:	
  1821                           ; 0 bytes @ 0x3
  1822                           
  1823  0056                     ??_getCDS_AD:	
  1824                           ; 0 bytes @ 0x3
  1825                           
  1826  0056                     setDimmerLights_SwOn@idle:	
  1827                           ; 0 bytes @ 0x3
  1828                           
  1829  0056                     setDimmerLights_Dimming@status:	
  1830                           ; 1 bytes @ 0x3
  1831                           
  1832  0056                     getDimmerLights_Status@status:	
  1833                           ; 1 bytes @ 0x3
  1834                           
  1835  0056                     setLED@led:	
  1836                           ; 1 bytes @ 0x3
  1837                           
  1838                           
  1839                           ; 1 bytes @ 0x3
  1840  0056                     	ds	1
  1841  0057                     ?_setDimmerLights_OnOff:	
  1842  0057                     ??_setDimmerLights_Dimming:	
  1843                           ; 0 bytes @ 0x4
  1844                           
  1845  0057                     ??_setLED_Initialization:	
  1846                           ; 0 bytes @ 0x4
  1847                           
  1848  0057                     ??_setPIRLED_Main:	
  1849                           ; 0 bytes @ 0x4
  1850                           
  1851  0057                     ??_PIR_Main:	
  1852                           ; 0 bytes @ 0x4
  1853                           
  1854  0057                     ??_Exception_Main:	
  1855                           ; 0 bytes @ 0x4
  1856                           
  1857  0057                     ??___awdiv:	
  1858                           ; 0 bytes @ 0x4
  1859                           
  1860  0057                     ??___lwdiv:	
  1861                           ; 0 bytes @ 0x4
  1862                           
  1863  0057                     setDimmerLights_OnOff@command:	
  1864                           ; 0 bytes @ 0x4
  1865                           
  1866  0057                     setDimmerLights_Dimming@lights:	
  1867                           ; 1 bytes @ 0x4
  1868                           
  1869  0057                     setLED_Initialization@led:	
  1870                           ; 1 bytes @ 0x4
  1871                           
  1872                           
  1873                           ; 1 bytes @ 0x4
  1874  0057                     	ds	1
  1875  0058                     ??_setDimmerLights_OnOff:	
  1876  0058                     ??_LED_Initialization:	
  1877                           ; 0 bytes @ 0x5
  1878                           
  1879  0058                     getCDS_AD@i:	
  1880                           ; 0 bytes @ 0x5
  1881                           
  1882  0058                     setPIRLED_Main@count:	
  1883                           ; 1 bytes @ 0x5
  1884                           
  1885  0058                     Exception_Main@count:	
  1886                           ; 1 bytes @ 0x5
  1887                           
  1888  0058                     ___awdiv@counter:	
  1889                           ; 1 bytes @ 0x5
  1890                           
  1891  0058                     ___lwdiv@counter:	
  1892                           ; 1 bytes @ 0x5
  1893                           
  1894                           
  1895                           ; 1 bytes @ 0x5
  1896  0058                     	ds	1
  1897  0059                     ??_LED_Main:	
  1898  0059                     getCDS_AD@j:	
  1899                           ; 0 bytes @ 0x6
  1900                           
  1901  0059                     setDimmerLights_OnOff@lights:	
  1902                           ; 1 bytes @ 0x6
  1903                           
  1904  0059                     Exception_Main@error:	
  1905                           ; 1 bytes @ 0x6
  1906                           
  1907  0059                     ___awdiv@sign:	
  1908                           ; 1 bytes @ 0x6
  1909                           
  1910  0059                     ___lwdiv@quotient:	
  1911                           ; 1 bytes @ 0x6
  1912                           
  1913                           
  1914                           ; 2 bytes @ 0x6
  1915  0059                     	ds	1
  1916  005A                     ??_setDimmerLights_Main:	
  1917  005A                     getCDS_AD@channel1:	
  1918                           ; 0 bytes @ 0x7
  1919                           
  1920  005A                     setDimmerLights_Main@lights:	
  1921                           ; 1 bytes @ 0x7
  1922                           
  1923  005A                     Exception_Main@i:	
  1924                           ; 1 bytes @ 0x7
  1925                           
  1926  005A                     ___awdiv@quotient:	
  1927                           ; 2 bytes @ 0x7
  1928                           
  1929                           
  1930                           ; 2 bytes @ 0x7
  1931  005A                     	ds	1
  1932  005B                     ??_DimmerLights_Main:	
  1933                           
  1934                           ; 0 bytes @ 0x8
  1935  005B                     	ds	1
  1936  005C                     ?_getPIR_AD:	
  1937  005C                     PIR_Main@error:	
  1938                           ; 0 bytes @ 0x9
  1939                           
  1940  005C                     getPIR_AD@channel2:	
  1941                           ; 1 bytes @ 0x9
  1942                           
  1943  005C                     Exception_Main@i_2289:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946                           
  1947                           ; 2 bytes @ 0x9
  1948  005C                     	ds	1
  1949  005D                     ??_getPIR_AD:	
  1950  005D                     _PIR_Main$2934:	
  1951                           ; 0 bytes @ 0xA
  1952                           
  1953                           
  1954                           ; 2 bytes @ 0xA
  1955  005D                     	ds	1
  1956  005E                     Exception_Main@lights:	
  1957                           
  1958                           ; 1 bytes @ 0xB
  1959  005E                     	ds	1
  1960  005F                     PIR_Main@cds:	
  1961                           
  1962                           ; 1 bytes @ 0xC
  1963  005F                     	ds	1
  1964  0060                     getPIR_AD@j:	
  1965                           
  1966                           ; 1 bytes @ 0xD
  1967  0060                     	ds	1
  1968  0061                     getPIR_AD@channel1:	
  1969                           
  1970                           ; 1 bytes @ 0xE
  1971  0061                     	ds	1
  1972  0062                     getPIR_AD@i:	
  1973                           
  1974                           ; 1 bytes @ 0xF
  1975  0062                     	ds	1
  1976  0063                     ?_main:	
  1977  0063                     main@argc:	
  1978                           ; 2 bytes @ 0x10
  1979                           
  1980                           
  1981                           ; 2 bytes @ 0x10
  1982  0063                     	ds	2
  1983  0065                     main@argv:	
  1984                           
  1985                           ; 2 bytes @ 0x12
  1986  0065                     	ds	2
  1987  0067                     ??_main:	
  1988                           
  1989                           ; 0 bytes @ 0x14
  1990  0067                     	ds	1
  1991                           
  1992                           	psect	maintext
  1993  0611                     __pmaintext:	
  1994 ;;
  1995 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1996 ;;
  1997 ;; *************** function _main *****************
  1998 ;; Defined at:
  1999 ;;		line 7 in file "../src/Main_B1.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  argc            2   16[BANK0 ] int 
  2002 ;;  argv            2   18[BANK0 ] PTR PTR unsigned char 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2   16[BANK0 ] int 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 17F/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2014 ;;      Params:         0       4       0       0
  2015 ;;      Locals:         0       0       0       0
  2016 ;;      Temps:          0       1       0       0
  2017 ;;      Totals:         0       5       0       0
  2018 ;;Total ram usage:        5 bytes
  2019 ;; Hardware stack levels required when called:    8
  2020 ;; This function calls:
  2021 ;;		_CDS_Initialization
  2022 ;;		_CDS_Main
  2023 ;;		_DimmerLights_Initialization
  2024 ;;		_DimmerLights_Main
  2025 ;;		_Exception_Main
  2026 ;;		_LED_Initialization
  2027 ;;		_LED_Main
  2028 ;;		_Mcu_Initialization
  2029 ;;		_PIR_Initialization
  2030 ;;		_PIR_Main
  2031 ;;		_WDT_Main
  2032 ;;		_getCDS_AD
  2033 ;;		_getPIR_AD
  2034 ;;		_myMain_Initialization
  2035 ;;		_my_MainTimer
  2036 ;; This function is called by:
  2037 ;;		Startup code after reset
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _main
  2043  0611                     _main:	
  2044                           
  2045                           ;Main_B1.c: 8: myMain_Initialization();
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2049  0611  158A  2643  118A   	fcall	_myMain_Initialization
  2050                           
  2051                           ;Main_B1.c: 9: Mcu_Initialization();
  2052  0614  158A  26D8  118A   	fcall	_Mcu_Initialization
  2053                           
  2054                           ;Main_B1.c: 10: ;;
  2055                           ;Main_B1.c: 11: LED_Initialization();
  2056  0617  158A  26A3  118A   	fcall	_LED_Initialization
  2057                           
  2058                           ;Main_B1.c: 12: ;;
  2059                           ;Main_B1.c: 14: ;;
  2060                           ;Main_B1.c: 15: ;;
  2061                           ;Main_B1.c: 16: ;;
  2062                           ;Main_B1.c: 17: ;;
  2063                           ;Main_B1.c: 18: ;;
  2064                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2065  061A  158A  2664  118A   	fcall	_DimmerLights_Initialization
  2066                           
  2067                           ;Main_B1.c: 21: ;;
  2068                           ;Main_B1.c: 22: CDS_Initialization();
  2069  061D  158A  2647  118A   	fcall	_CDS_Initialization
  2070                           
  2071                           ;Main_B1.c: 23: PIR_Initialization();
  2072  0620  158A  26AF  118A   	fcall	_PIR_Initialization
  2073  0623                     l4511:	
  2074                           ;Main_B1.c: 24: ;;
  2075                           ;Main_B1.c: 25: ;;
  2076                           ;Main_B1.c: 26: ;;
  2077                           ;Main_B1.c: 27: ;;
  2078                           ;Main_B1.c: 28: ;;
  2079                           ;Main_B1.c: 30: while (1) {
  2080                           
  2081                           
  2082                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2083  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0625  1C27               	btfss	_myMain,0
  2086  0626  2E39               	goto	l4517
  2087                           
  2088                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2089  0627  3031               	movlw	49
  2090  0628  00E7               	movwf	??_main
  2091  0629  0867               	movf	??_main,w
  2092  062A  00D5               	movwf	getCDS_AD@channel2
  2093  062B  3009               	movlw	9
  2094  062C  118A  2712  118A   	fcall	_getCDS_AD
  2095                           
  2096                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2097  062F  300D               	movlw	13
  2098  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0632  00E7               	movwf	??_main
  2101  0633  0867               	movf	??_main,w
  2102  0634  00DC               	movwf	getPIR_AD@channel2
  2103  0635  3005               	movlw	5
  2104  0636  118A  2226  118A   	fcall	_getPIR_AD
  2105  0639                     l4517:	
  2106                           
  2107                           ;Main_B1.c: 57: }
  2108                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2109  0639  1283               	bcf	3,5	;RP0=0, select bank0
  2110  063A  1303               	bcf	3,6	;RP1=0, select bank0
  2111  063B  1C39               	btfss	_Timer1,0
  2112  063C  2E23               	goto	l4511
  2113                           
  2114                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2115  063D  1039               	bcf	_Timer1,0
  2116                           
  2117                           ;Main_B1.c: 96: my_MainTimer();
  2118  063E  118A  27DD  118A   	fcall	_my_MainTimer
  2119                           
  2120                           ;Main_B1.c: 97: WDT_Main();
  2121  0641  158A  2719  118A   	fcall	_WDT_Main
  2122                           
  2123                           ;Main_B1.c: 98: ;;
  2124                           ;Main_B1.c: 99: ;;
  2125                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2126  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0646  1C27               	btfss	_myMain,0
  2129  0647  2E23               	goto	l4511
  2130                           
  2131                           ;Main_B1.c: 101: ;;
  2132                           ;Main_B1.c: 103: LED_Main();
  2133  0648  158A  2644  118A   	fcall	_LED_Main
  2134                           
  2135                           ;Main_B1.c: 104: ;;
  2136                           ;Main_B1.c: 106: ;;
  2137                           ;Main_B1.c: 107: ;;
  2138                           ;Main_B1.c: 108: ;;
  2139                           ;Main_B1.c: 109: ;;
  2140                           ;Main_B1.c: 111: ;;
  2141                           ;Main_B1.c: 112: DimmerLights_Main();
  2142  064B  158A  264B  118A   	fcall	_DimmerLights_Main
  2143                           
  2144                           ;Main_B1.c: 113: ;;
  2145                           ;Main_B1.c: 114: CDS_Main();
  2146  064E  118A  26DE  118A   	fcall	_CDS_Main
  2147                           
  2148                           ;Main_B1.c: 115: PIR_Main();
  2149  0651  118A  2027  118A   	fcall	_PIR_Main
  2150                           
  2151                           ;Main_B1.c: 117: ;;
  2152                           ;Main_B1.c: 118: ;;
  2153                           ;Main_B1.c: 119: ;;
  2154                           ;Main_B1.c: 120: ;;
  2155                           ;Main_B1.c: 121: Exception_Main();
  2156  0654  118A  235E  118A   	fcall	_Exception_Main
  2157  0657  2E23               	goto	l4511
  2158  0658                     __end_of_main:	
  2159                           ;Main_B1.c: 128: }
  2160                           ;Main_B1.c: 129: }
  2161                           ;Main_B1.c: 163: }
  2162                           ;Main_B1.c: 164: return (0);
  2163                           ;	Return value of _main is never used
  2164                           
  2165                           
  2166                           	psect	text1
  2167  07DD                     __ptext1:	
  2168 ;; *************** function _my_MainTimer *****************
  2169 ;; Defined at:
  2170 ;;		line 185 in file "../src/Main_B1.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2184 ;;      Params:         0       0       0       0
  2185 ;;      Locals:         0       0       0       0
  2186 ;;      Temps:          0       1       0       0
  2187 ;;      Totals:         0       1       0       0
  2188 ;;Total ram usage:        1 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    3
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _my_MainTimer
  2200  07DD                     _my_MainTimer:	
  2201                           
  2202                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2206  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2207  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2208  07DF  1827               	btfsc	_myMain,0
  2209  07E0  2FED               	goto	l4253
  2210                           
  2211                           ;Main_B1.c: 188: myMain.PowerCount++;
  2212  07E1  3001               	movlw	1
  2213  07E2  00D3               	movwf	??_my_MainTimer
  2214  07E3  0853               	movf	??_my_MainTimer,w
  2215  07E4  07A8               	addwf	_myMain+1,f
  2216                           
  2217                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2218  07E5  0828               	movf	_myMain+1,w
  2219  07E6  3A4B               	xorlw	75
  2220  07E7  1D03               	skipz
  2221  07E8  0008               	return
  2222                           
  2223                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2224  07E9  01A8               	clrf	_myMain+1
  2225                           
  2226                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2227  07EA  1427               	bsf	_myMain,0
  2228                           
  2229                           ;Main_B1.c: 196: ;;
  2230                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2231  07EB  1627               	bsf	_myMain,4
  2232                           
  2233                           ;Main_B1.c: 206: }
  2234                           ;Main_B1.c: 207: } else {
  2235  07EC  0008               	return
  2236  07ED                     l4253:	
  2237                           
  2238                           ;Main_B1.c: 208: myMain.PowerCount++;
  2239  07ED  3001               	movlw	1
  2240  07EE  00D3               	movwf	??_my_MainTimer
  2241  07EF  0853               	movf	??_my_MainTimer,w
  2242  07F0  07A8               	addwf	_myMain+1,f
  2243                           
  2244                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2245  07F1  0828               	movf	_myMain+1,w
  2246  07F2  3A32               	xorlw	50
  2247  07F3  1D03               	skipz
  2248  07F4  0008               	return
  2249                           
  2250                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2251  07F5  01A8               	clrf	_myMain+1
  2252  07F6  0008               	return
  2253  07F7                     __end_of_my_MainTimer:	
  2254                           
  2255                           	psect	text2
  2256  0E43                     __ptext2:	
  2257 ;; *************** function _myMain_Initialization *****************
  2258 ;; Defined at:
  2259 ;;		line 170 in file "../src/Main_B1.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		None
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2273 ;;      Params:         0       0       0       0
  2274 ;;      Locals:         0       0       0       0
  2275 ;;      Temps:          0       0       0       0
  2276 ;;      Totals:         0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    3
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function _myMain_Initialization
  2289  0E43                     _myMain_Initialization:	
  2290                           
  2291                           ;incstack = 0
  2292                           ; Regs used in _myMain_Initialization: []
  2293  0E43  0008               	return
  2294  0E44                     __end_of_myMain_Initialization:	
  2295                           
  2296                           	psect	text3
  2297  0226                     __ptext3:	
  2298 ;; *************** function _getPIR_AD *****************
  2299 ;; Defined at:
  2300 ;;		line 283 in file "../src/PIR_B1.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  channel1        1    wreg     unsigned char 
  2303 ;;  channel2        1    9[BANK0 ] unsigned char 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  channel1        1   14[BANK0 ] unsigned char 
  2306 ;;  i               1   15[BANK0 ] unsigned char 
  2307 ;;  j               1   13[BANK0 ] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;		None               void
  2310 ;; Registers used:
  2311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2317 ;;      Params:         0       1       0       0
  2318 ;;      Locals:         0       3       0       0
  2319 ;;      Temps:          0       3       0       0
  2320 ;;      Totals:         0       7       0       0
  2321 ;;Total ram usage:        7 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    5
  2324 ;; This function calls:
  2325 ;;		___awdiv
  2326 ;;		___lwdiv
  2327 ;;		_getAD
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _getPIR_AD
  2335  0226                     _getPIR_AD:	
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2339                           ;getPIR_AD@channel1 stored from wreg
  2340  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0228  00E1               	movwf	getPIR_AD@channel1
  2343                           
  2344                           ;PIR_B1.c: 284: char i = 0, j = 0;
  2345  0229  01E2               	clrf	getPIR_AD@i
  2346  022A  01E0               	clrf	getPIR_AD@j
  2347                           
  2348                           ;PIR_B1.c: 286: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2349  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2350  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2351  022D  1CA0               	btfss	__PIR^(0+128),1
  2352  022E  0008               	return
  2353  022F  1920               	btfsc	__PIR^(0+128),2
  2354  0230  0008               	return
  2355                           
  2356                           ;PIR_B1.c: 287: _PIR.GO = 1;
  2357  0231  1520               	bsf	__PIR^(0+128),2
  2358                           
  2359                           ;PIR_B1.c: 288: _PIR.ADRES = getAD(channel1, 0x70);
  2360  0232  3070               	movlw	112
  2361  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0235  00DD               	movwf	??_getPIR_AD
  2364  0236  085D               	movf	??_getPIR_AD,w
  2365  0237  00D3               	movwf	getAD@adcon1
  2366  0238  0861               	movf	getPIR_AD@channel1,w
  2367  0239  118A  27A5  118A   	fcall	_getAD
  2368  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2369  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2370  023E  00DE               	movwf	??_getPIR_AD+1
  2371  023F  085E               	movf	??_getPIR_AD+1,w
  2372  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2373  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0242  00A2               	movwf	(__PIR^(0+128)+2)
  2375                           
  2376                           ;PIR_B1.c: 289: _PIR.VRAD = _PIR.ADRES / 25;
  2377  0243  3019               	movlw	25
  2378  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0246  00D3               	movwf	___awdiv@divisor
  2381  0247  3000               	movlw	0
  2382  0248  00D4               	movwf	___awdiv@divisor+1
  2383  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2384  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2385  024B  0822               	movf	(__PIR^(0+128)+2),w
  2386  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2387  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2388  024E  00DD               	movwf	??_getPIR_AD
  2389  024F  01DE               	clrf	??_getPIR_AD+1
  2390  0250  085D               	movf	??_getPIR_AD,w
  2391  0251  00D5               	movwf	___awdiv@dividend
  2392  0252  085E               	movf	??_getPIR_AD+1,w
  2393  0253  00D6               	movwf	___awdiv@dividend+1
  2394  0254  118A  2562  118A   	fcall	___awdiv
  2395  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2396  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0259  0853               	movf	?___awdiv,w
  2398  025A  00DF               	movwf	??_getPIR_AD+2
  2399  025B  085F               	movf	??_getPIR_AD+2,w
  2400  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2401  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2402  025E  00A3               	movwf	(__PIR^(0+128)+3)
  2403                           
  2404                           ;PIR_B1.c: 290: _PIR.VRAD1 = _PIR.ADRES;
  2405  025F  0822               	movf	(__PIR^(0+128)+2),w
  2406  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0262  00DD               	movwf	??_getPIR_AD
  2409  0263  085D               	movf	??_getPIR_AD,w
  2410  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2411  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2412  0266  00A4               	movwf	(__PIR^(0+128)+4)
  2413                           
  2414                           ;PIR_B1.c: 291: _PIR.ADRES = getAD(channel2, 0x70);
  2415  0267  3070               	movlw	112
  2416  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2418  026A  00DD               	movwf	??_getPIR_AD
  2419  026B  085D               	movf	??_getPIR_AD,w
  2420  026C  00D3               	movwf	getAD@adcon1
  2421  026D  085C               	movf	getPIR_AD@channel2,w
  2422  026E  118A  27A5  118A   	fcall	_getAD
  2423  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2424  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2425  0273  00DE               	movwf	??_getPIR_AD+1
  2426  0274  085E               	movf	??_getPIR_AD+1,w
  2427  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2428  0276  1303               	bcf	3,6	;RP1=0, select bank1
  2429  0277  00A2               	movwf	(__PIR^(0+128)+2)
  2430                           
  2431                           ;PIR_B1.c: 292: _PIR.SignalAD = _PIR.ADRES;
  2432  0278  0822               	movf	(__PIR^(0+128)+2),w
  2433  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2434  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2435  027B  00DD               	movwf	??_getPIR_AD
  2436  027C  085D               	movf	??_getPIR_AD,w
  2437  027D  1683               	bsf	3,5	;RP0=1, select bank1
  2438  027E  1303               	bcf	3,6	;RP1=0, select bank1
  2439  027F  00A1               	movwf	(__PIR^(0+128)+1)
  2440                           
  2441                           ;PIR_B1.c: 294: if (_PIR.VRAD < 1) {
  2442  0280  08A3               	movf	(__PIR^(0+128)+3),f
  2443  0281  1D03               	skipz
  2444  0282  2A85               	goto	l4177
  2445                           
  2446                           ;PIR_B1.c: 295: _PIR.CloseTimeValue = 5;
  2447  0283  3005               	movlw	5
  2448  0284  2A8A               	goto	L1
  2449  0285                     l4177:	
  2450                           ;PIR_B1.c: 296: } else if (_PIR.VRAD < 3) {
  2451                           
  2452  0285  3003               	movlw	3
  2453  0286  0223               	subwf	(__PIR^(0+128)+3),w
  2454  0287  1803               	skipnc
  2455  0288  2A8D               	goto	l4181
  2456                           
  2457                           ;PIR_B1.c: 297: _PIR.CloseTimeValue = 60;
  2458  0289  303C               	movlw	60
  2459  028A                     L1:	
  2460  028A  00C7               	movwf	(__PIR^(0+128)+39)
  2461  028B  3000               	movlw	0
  2462  028C  2AA8               	goto	L5
  2463  028D                     l4181:	
  2464                           ;PIR_B1.c: 298: } else if (_PIR.VRAD < 5) {
  2465                           
  2466  028D  3005               	movlw	5
  2467  028E  0223               	subwf	(__PIR^(0+128)+3),w
  2468  028F  1803               	skipnc
  2469  0290  2A95               	goto	l4185
  2470                           
  2471                           ;PIR_B1.c: 299: _PIR.CloseTimeValue = 300;
  2472  0291  302C               	movlw	44
  2473  0292  00C7               	movwf	(__PIR^(0+128)+39)
  2474  0293  3001               	movlw	1
  2475  0294  2AA8               	goto	L5
  2476  0295                     l4185:	
  2477                           ;PIR_B1.c: 300: } else if (_PIR.VRAD < 7) {
  2478                           
  2479  0295  3007               	movlw	7
  2480  0296  0223               	subwf	(__PIR^(0+128)+3),w
  2481  0297  1803               	skipnc
  2482  0298  2A9D               	goto	l4189
  2483                           
  2484                           ;PIR_B1.c: 301: _PIR.CloseTimeValue = 600;
  2485  0299  3058               	movlw	88
  2486  029A  00C7               	movwf	(__PIR^(0+128)+39)
  2487  029B  3002               	movlw	2
  2488  029C  2AA8               	goto	L5
  2489  029D                     l4189:	
  2490                           ;PIR_B1.c: 302: } else if (_PIR.VRAD < 9) {
  2491                           
  2492  029D  3009               	movlw	9
  2493  029E  0223               	subwf	(__PIR^(0+128)+3),w
  2494  029F  1803               	skipnc
  2495  02A0  2AA5               	goto	l4193
  2496                           
  2497                           ;PIR_B1.c: 303: _PIR.CloseTimeValue = 900;
  2498  02A1  3084               	movlw	132
  2499  02A2  00C7               	movwf	(__PIR^(0+128)+39)
  2500  02A3  3003               	movlw	3
  2501  02A4  2AA8               	goto	L5
  2502  02A5                     l4193:	
  2503                           ;PIR_B1.c: 304: } else {
  2504                           
  2505                           
  2506                           ;PIR_B1.c: 305: _PIR.CloseTimeValue = 1200;
  2507  02A5  30B0               	movlw	176
  2508  02A6  00C7               	movwf	(__PIR^(0+128)+39)
  2509  02A7  3004               	movlw	4
  2510  02A8                     L5:	
  2511  02A8  00C8               	movwf	(__PIR^(0+128)+40)
  2512                           
  2513                           ;PIR_B1.c: 306: }
  2514                           ;PIR_B1.c: 315: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2515  02A9  0821               	movf	(__PIR^(0+128)+1),w
  2516  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2517  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2518  02AC  00DD               	movwf	??_getPIR_AD
  2519  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2520  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2521  02AF  0827               	movf	(__PIR^(0+128)+7),w
  2522  02B0  3EA8               	addlw	(__PIR+8)& (0+255)
  2523  02B1  0084               	movwf	4
  2524  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2525  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2526  02B4  085D               	movf	??_getPIR_AD,w
  2527  02B5  1383               	bcf	3,7	;select IRP bank1
  2528  02B6  0080               	movwf	0
  2529                           
  2530                           ;PIR_B1.c: 316: for (i = 0; i < 10; i++) {
  2531  02B7  01E2               	clrf	getPIR_AD@i
  2532  02B8  300A               	movlw	10
  2533  02B9  0262               	subwf	getPIR_AD@i,w
  2534  02BA  1803               	btfsc	3,0
  2535  02BB  2AD8               	goto	l4209
  2536  02BC                     l4203:	
  2537                           
  2538                           ;PIR_B1.c: 317: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2539  02BC  0862               	movf	getPIR_AD@i,w
  2540  02BD  3EA8               	addlw	(__PIR+8)& (0+255)
  2541  02BE  0084               	movwf	4
  2542  02BF  0800               	movf	0,w
  2543  02C0  00DD               	movwf	??_getPIR_AD
  2544  02C1  01DE               	clrf	??_getPIR_AD+1
  2545  02C2  085D               	movf	??_getPIR_AD,w
  2546  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2547  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2548  02C5  07B2               	addwf	(__PIR^(0+128)+18),f
  2549  02C6  1803               	skipnc
  2550  02C7  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2551  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2552  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2553  02CA  085E               	movf	??_getPIR_AD+1,w
  2554  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2555  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2556  02CD  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2557  02CE  3001               	movlw	1
  2558  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2559  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2560  02D1  00DD               	movwf	??_getPIR_AD
  2561  02D2  085D               	movf	??_getPIR_AD,w
  2562  02D3  07E2               	addwf	getPIR_AD@i,f
  2563  02D4  300A               	movlw	10
  2564  02D5  0262               	subwf	getPIR_AD@i,w
  2565  02D6  1C03               	skipc
  2566  02D7  2ABC               	goto	l4203
  2567  02D8                     l4209:	
  2568                           
  2569                           ;PIR_B1.c: 318: }
  2570                           ;PIR_B1.c: 319: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2571  02D8  300A               	movlw	10
  2572  02D9  00D3               	movwf	___lwdiv@divisor
  2573  02DA  3000               	movlw	0
  2574  02DB  00D4               	movwf	___lwdiv@divisor+1
  2575  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2576  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2577  02DE  0833               	movf	((__PIR+1)^(0+128)+18),w
  2578  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2579  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2580  02E1  01D6               	clrf	___lwdiv@dividend+1
  2581  02E2  07D6               	addwf	___lwdiv@dividend+1,f
  2582  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2583  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  2584  02E5  0832               	movf	(__PIR^(0+128)+18),w
  2585  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2586  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2587  02E8  01D5               	clrf	___lwdiv@dividend
  2588  02E9  07D5               	addwf	___lwdiv@dividend,f
  2589  02EA  118A  269E  118A   	fcall	___lwdiv
  2590  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2591  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2592  02EF  0853               	movf	?___lwdiv,w
  2593  02F0  00DD               	movwf	??_getPIR_AD
  2594  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2595  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2596  02F3  0834               	movf	(__PIR^(0+128)+20),w
  2597  02F4  3EB5               	addlw	(__PIR+21)& (0+255)
  2598  02F5  0084               	movwf	4
  2599  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02F8  085D               	movf	??_getPIR_AD,w
  2602  02F9  1383               	bcf	3,7	;select IRP bank1
  2603  02FA  0080               	movwf	0
  2604                           
  2605                           ;PIR_B1.c: 320: _PIR.TenAverageValue = 0;
  2606  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2607  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2608  02FD  01B2               	clrf	(__PIR^(0+128)+18)
  2609  02FE  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2610                           
  2611                           ;PIR_B1.c: 322: for (i = 0; i <= 9; i++) {
  2612  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2614  0301  01E2               	clrf	getPIR_AD@i
  2615  0302  300A               	movlw	10
  2616  0303  0262               	subwf	getPIR_AD@i,w
  2617  0304  1803               	btfsc	3,0
  2618  0305  2B22               	goto	l4225
  2619  0306                     l4219:	
  2620                           
  2621                           ;PIR_B1.c: 323: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2622  0306  0862               	movf	getPIR_AD@i,w
  2623  0307  3EB5               	addlw	(__PIR+21)& (0+255)
  2624  0308  0084               	movwf	4
  2625  0309  0800               	movf	0,w
  2626  030A  00DD               	movwf	??_getPIR_AD
  2627  030B  01DE               	clrf	??_getPIR_AD+1
  2628  030C  085D               	movf	??_getPIR_AD,w
  2629  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2630  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2631  030F  07BF               	addwf	(__PIR^(0+128)+31),f
  2632  0310  1803               	skipnc
  2633  0311  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2634  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0314  085E               	movf	??_getPIR_AD+1,w
  2637  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2638  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2639  0317  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2640  0318  3001               	movlw	1
  2641  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2642  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2643  031B  00DD               	movwf	??_getPIR_AD
  2644  031C  085D               	movf	??_getPIR_AD,w
  2645  031D  07E2               	addwf	getPIR_AD@i,f
  2646  031E  300A               	movlw	10
  2647  031F  0262               	subwf	getPIR_AD@i,w
  2648  0320  1C03               	skipc
  2649  0321  2B06               	goto	l4219
  2650  0322                     l4225:	
  2651                           
  2652                           ;PIR_B1.c: 324: }
  2653                           ;PIR_B1.c: 325: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2654  0322  300A               	movlw	10
  2655  0323  00D3               	movwf	___lwdiv@divisor
  2656  0324  3000               	movlw	0
  2657  0325  00D4               	movwf	___lwdiv@divisor+1
  2658  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2659  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2660  0328  0840               	movf	((__PIR+1)^(0+128)+31),w
  2661  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2662  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2663  032B  01D6               	clrf	___lwdiv@dividend+1
  2664  032C  07D6               	addwf	___lwdiv@dividend+1,f
  2665  032D  1683               	bsf	3,5	;RP0=1, select bank1
  2666  032E  1303               	bcf	3,6	;RP1=0, select bank1
  2667  032F  083F               	movf	(__PIR^(0+128)+31),w
  2668  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0332  01D5               	clrf	___lwdiv@dividend
  2671  0333  07D5               	addwf	___lwdiv@dividend,f
  2672  0334  118A  269E  118A   	fcall	___lwdiv
  2673  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0339  0853               	movf	?___lwdiv,w
  2676  033A  00DD               	movwf	??_getPIR_AD
  2677  033B  085D               	movf	??_getPIR_AD,w
  2678  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2679  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2680  033E  00A6               	movwf	(__PIR^(0+128)+6)
  2681                           
  2682                           ;PIR_B1.c: 326: _PIR.HundredAverageValue = 0;
  2683  033F  01BF               	clrf	(__PIR^(0+128)+31)
  2684  0340  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2685                           
  2686                           ;PIR_B1.c: 328: if (_PIR.TenCount < 10) {
  2687  0341  300A               	movlw	10
  2688  0342  0227               	subwf	(__PIR^(0+128)+7),w
  2689  0343  1803               	skipnc
  2690  0344  2B4E               	goto	l4233
  2691                           
  2692                           ;PIR_B1.c: 329: _PIR.TenCount++;
  2693  0345  3001               	movlw	1
  2694  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0348  00DD               	movwf	??_getPIR_AD
  2697  0349  085D               	movf	??_getPIR_AD,w
  2698  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2699  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2700  034C  07A7               	addwf	(__PIR^(0+128)+7),f
  2701                           
  2702                           ;PIR_B1.c: 330: } else {
  2703  034D  0008               	return
  2704  034E                     l4233:	
  2705                           
  2706                           ;PIR_B1.c: 331: _PIR.TenCount = 0;
  2707  034E  01A7               	clrf	(__PIR^(0+128)+7)
  2708                           
  2709                           ;PIR_B1.c: 332: if (_PIR.HundreCount < 10)
  2710  034F  300A               	movlw	10
  2711  0350  0234               	subwf	(__PIR^(0+128)+20),w
  2712  0351  1803               	skipnc
  2713  0352  2B5C               	goto	l4239
  2714                           
  2715                           ;PIR_B1.c: 333: _PIR.HundreCount++;
  2716  0353  3001               	movlw	1
  2717  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0356  00DD               	movwf	??_getPIR_AD
  2720  0357  085D               	movf	??_getPIR_AD,w
  2721  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0359  1303               	bcf	3,6	;RP1=0, select bank1
  2723  035A  07B4               	addwf	(__PIR^(0+128)+20),f
  2724  035B  0008               	return
  2725  035C                     l4239:	
  2726                           
  2727                           ;PIR_B1.c: 334: else
  2728                           ;PIR_B1.c: 335: _PIR.HundreCount = 0;
  2729  035C  01B4               	clrf	(__PIR^(0+128)+20)
  2730  035D  0008               	return
  2731  035E                     __end_of_getPIR_AD:	
  2732                           
  2733                           	psect	text4
  2734  069E                     __ptext4:	
  2735 ;; *************** function ___lwdiv *****************
  2736 ;; Defined at:
  2737 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  divisor         2    0[BANK0 ] unsigned int 
  2740 ;;  dividend        2    2[BANK0 ] unsigned int 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  quotient        2    6[BANK0 ] unsigned int 
  2743 ;;  counter         1    5[BANK0 ] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[BANK0 ] unsigned int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2753 ;;      Params:         0       4       0       0
  2754 ;;      Locals:         0       3       0       0
  2755 ;;      Temps:          0       1       0       0
  2756 ;;      Totals:         0       8       0       0
  2757 ;;Total ram usage:        8 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; Hardware stack levels required when called:    3
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_getPIR_AD
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function ___lwdiv
  2769  069E                     ___lwdiv:	
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2773  069E  1283               	bcf	3,5	;RP0=0, select bank0
  2774  069F  1303               	bcf	3,6	;RP1=0, select bank0
  2775  06A0  01D9               	clrf	___lwdiv@quotient
  2776  06A1  01DA               	clrf	___lwdiv@quotient+1
  2777  06A2  0854               	movf	___lwdiv@divisor+1,w
  2778  06A3  0453               	iorwf	___lwdiv@divisor,w
  2779  06A4  1903               	skipnz
  2780  06A5  2ED7               	goto	l4097
  2781  06A6  01D8               	clrf	___lwdiv@counter
  2782  06A7  0AD8               	incf	___lwdiv@counter,f
  2783  06A8                     l4085:	
  2784  06A8  1BD4               	btfsc	___lwdiv@divisor+1,7
  2785  06A9  2EB6               	goto	l4087
  2786  06AA  3001               	movlw	1
  2787  06AB                     u4515:	
  2788  06AB  1003               	clrc
  2789  06AC  0DD3               	rlf	___lwdiv@divisor,f
  2790  06AD  0DD4               	rlf	___lwdiv@divisor+1,f
  2791  06AE  3EFF               	addlw	-1
  2792  06AF  1D03               	skipz
  2793  06B0  2EAB               	goto	u4515
  2794  06B1  3001               	movlw	1
  2795  06B2  00D7               	movwf	??___lwdiv
  2796  06B3  0857               	movf	??___lwdiv,w
  2797  06B4  07D8               	addwf	___lwdiv@counter,f
  2798  06B5  2EA8               	goto	l4085
  2799  06B6                     l4087:	
  2800  06B6  3001               	movlw	1
  2801  06B7                     u4535:	
  2802  06B7  1003               	clrc
  2803  06B8  0DD9               	rlf	___lwdiv@quotient,f
  2804  06B9  0DDA               	rlf	___lwdiv@quotient+1,f
  2805  06BA  3EFF               	addlw	-1
  2806  06BB  1D03               	skipz
  2807  06BC  2EB7               	goto	u4535
  2808  06BD  0854               	movf	___lwdiv@divisor+1,w
  2809  06BE  0256               	subwf	___lwdiv@dividend+1,w
  2810  06BF  1D03               	skipz
  2811  06C0  2EC3               	goto	u4545
  2812  06C1  0853               	movf	___lwdiv@divisor,w
  2813  06C2  0255               	subwf	___lwdiv@dividend,w
  2814  06C3                     u4545:	
  2815  06C3  1C03               	skipc
  2816  06C4  2ECC               	goto	l4093
  2817  06C5  0853               	movf	___lwdiv@divisor,w
  2818  06C6  02D5               	subwf	___lwdiv@dividend,f
  2819  06C7  0854               	movf	___lwdiv@divisor+1,w
  2820  06C8  1C03               	skipc
  2821  06C9  03D6               	decf	___lwdiv@dividend+1,f
  2822  06CA  02D6               	subwf	___lwdiv@dividend+1,f
  2823  06CB  1459               	bsf	___lwdiv@quotient,0
  2824  06CC                     l4093:	
  2825  06CC  3001               	movlw	1
  2826  06CD                     u4555:	
  2827  06CD  1003               	clrc
  2828  06CE  0CD4               	rrf	___lwdiv@divisor+1,f
  2829  06CF  0CD3               	rrf	___lwdiv@divisor,f
  2830  06D0  3EFF               	addlw	-1
  2831  06D1  1D03               	skipz
  2832  06D2  2ECD               	goto	u4555
  2833  06D3  3001               	movlw	1
  2834  06D4  02D8               	subwf	___lwdiv@counter,f
  2835  06D5  1D03               	btfss	3,2
  2836  06D6  2EB6               	goto	l4087
  2837  06D7                     l4097:	
  2838  06D7  085A               	movf	___lwdiv@quotient+1,w
  2839  06D8  01D4               	clrf	?___lwdiv+1
  2840  06D9  07D4               	addwf	?___lwdiv+1,f
  2841  06DA  0859               	movf	___lwdiv@quotient,w
  2842  06DB  01D3               	clrf	?___lwdiv
  2843  06DC  07D3               	addwf	?___lwdiv,f
  2844  06DD  0008               	return
  2845  06DE                     __end_of___lwdiv:	
  2846                           
  2847                           	psect	text5
  2848  0562                     __ptext5:	
  2849 ;; *************** function ___awdiv *****************
  2850 ;; Defined at:
  2851 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  divisor         2    0[BANK0 ] int 
  2854 ;;  dividend        2    2[BANK0 ] int 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  quotient        2    7[BANK0 ] int 
  2857 ;;  sign            1    6[BANK0 ] unsigned char 
  2858 ;;  counter         1    5[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2    0[BANK0 ] int 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2868 ;;      Params:         0       4       0       0
  2869 ;;      Locals:         0       4       0       0
  2870 ;;      Temps:          0       1       0       0
  2871 ;;      Totals:         0       9       0       0
  2872 ;;Total ram usage:        9 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    3
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_getPIR_AD
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function ___awdiv
  2884  0562                     ___awdiv:	
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2888  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0564  01D9               	clrf	___awdiv@sign
  2891  0565  1FD4               	btfss	___awdiv@divisor+1,7
  2892  0566  2D6E               	goto	l4039
  2893  0567  09D3               	comf	___awdiv@divisor,f
  2894  0568  09D4               	comf	___awdiv@divisor+1,f
  2895  0569  0AD3               	incf	___awdiv@divisor,f
  2896  056A  1903               	skipnz
  2897  056B  0AD4               	incf	___awdiv@divisor+1,f
  2898  056C  01D9               	clrf	___awdiv@sign
  2899  056D  0AD9               	incf	___awdiv@sign,f
  2900  056E                     l4039:	
  2901  056E  1FD6               	btfss	___awdiv@dividend+1,7
  2902  056F  2D79               	goto	l4045
  2903  0570  09D5               	comf	___awdiv@dividend,f
  2904  0571  09D6               	comf	___awdiv@dividend+1,f
  2905  0572  0AD5               	incf	___awdiv@dividend,f
  2906  0573  1903               	skipnz
  2907  0574  0AD6               	incf	___awdiv@dividend+1,f
  2908  0575  3001               	movlw	1
  2909  0576  00D7               	movwf	??___awdiv
  2910  0577  0857               	movf	??___awdiv,w
  2911  0578  06D9               	xorwf	___awdiv@sign,f
  2912  0579                     l4045:	
  2913  0579  01DA               	clrf	___awdiv@quotient
  2914  057A  01DB               	clrf	___awdiv@quotient+1
  2915  057B  0854               	movf	___awdiv@divisor+1,w
  2916  057C  0453               	iorwf	___awdiv@divisor,w
  2917  057D  1903               	skipnz
  2918  057E  2DB0               	goto	l4067
  2919  057F  01D8               	clrf	___awdiv@counter
  2920  0580  0AD8               	incf	___awdiv@counter,f
  2921  0581                     l4055:	
  2922  0581  1BD4               	btfsc	___awdiv@divisor+1,7
  2923  0582  2D8F               	goto	l4057
  2924  0583  3001               	movlw	1
  2925  0584                     u4435:	
  2926  0584  1003               	clrc
  2927  0585  0DD3               	rlf	___awdiv@divisor,f
  2928  0586  0DD4               	rlf	___awdiv@divisor+1,f
  2929  0587  3EFF               	addlw	-1
  2930  0588  1D03               	skipz
  2931  0589  2D84               	goto	u4435
  2932  058A  3001               	movlw	1
  2933  058B  00D7               	movwf	??___awdiv
  2934  058C  0857               	movf	??___awdiv,w
  2935  058D  07D8               	addwf	___awdiv@counter,f
  2936  058E  2D81               	goto	l4055
  2937  058F                     l4057:	
  2938  058F  3001               	movlw	1
  2939  0590                     u4455:	
  2940  0590  1003               	clrc
  2941  0591  0DDA               	rlf	___awdiv@quotient,f
  2942  0592  0DDB               	rlf	___awdiv@quotient+1,f
  2943  0593  3EFF               	addlw	-1
  2944  0594  1D03               	skipz
  2945  0595  2D90               	goto	u4455
  2946  0596  0854               	movf	___awdiv@divisor+1,w
  2947  0597  0256               	subwf	___awdiv@dividend+1,w
  2948  0598  1D03               	skipz
  2949  0599  2D9C               	goto	u4465
  2950  059A  0853               	movf	___awdiv@divisor,w
  2951  059B  0255               	subwf	___awdiv@dividend,w
  2952  059C                     u4465:	
  2953  059C  1C03               	skipc
  2954  059D  2DA5               	goto	l4063
  2955  059E  0853               	movf	___awdiv@divisor,w
  2956  059F  02D5               	subwf	___awdiv@dividend,f
  2957  05A0  0854               	movf	___awdiv@divisor+1,w
  2958  05A1  1C03               	skipc
  2959  05A2  03D6               	decf	___awdiv@dividend+1,f
  2960  05A3  02D6               	subwf	___awdiv@dividend+1,f
  2961  05A4  145A               	bsf	___awdiv@quotient,0
  2962  05A5                     l4063:	
  2963  05A5  3001               	movlw	1
  2964  05A6                     u4475:	
  2965  05A6  1003               	clrc
  2966  05A7  0CD4               	rrf	___awdiv@divisor+1,f
  2967  05A8  0CD3               	rrf	___awdiv@divisor,f
  2968  05A9  3EFF               	addlw	-1
  2969  05AA  1D03               	skipz
  2970  05AB  2DA6               	goto	u4475
  2971  05AC  3001               	movlw	1
  2972  05AD  02D8               	subwf	___awdiv@counter,f
  2973  05AE  1D03               	btfss	3,2
  2974  05AF  2D8F               	goto	l4057
  2975  05B0                     l4067:	
  2976  05B0  0859               	movf	___awdiv@sign,w
  2977  05B1  1903               	btfsc	3,2
  2978  05B2  2DB8               	goto	l4071
  2979  05B3  09DA               	comf	___awdiv@quotient,f
  2980  05B4  09DB               	comf	___awdiv@quotient+1,f
  2981  05B5  0ADA               	incf	___awdiv@quotient,f
  2982  05B6  1903               	skipnz
  2983  05B7  0ADB               	incf	___awdiv@quotient+1,f
  2984  05B8                     l4071:	
  2985  05B8  085B               	movf	___awdiv@quotient+1,w
  2986  05B9  01D4               	clrf	?___awdiv+1
  2987  05BA  07D4               	addwf	?___awdiv+1,f
  2988  05BB  085A               	movf	___awdiv@quotient,w
  2989  05BC  01D3               	clrf	?___awdiv
  2990  05BD  07D3               	addwf	?___awdiv,f
  2991  05BE  0008               	return
  2992  05BF                     __end_of___awdiv:	
  2993                           
  2994                           	psect	text6
  2995  0712                     __ptext6:	
  2996 ;; *************** function _getCDS_AD *****************
  2997 ;; Defined at:
  2998 ;;		line 48 in file "../src/CDS_B1.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  channel1        1    wreg     unsigned char 
  3001 ;;  channel2        1    2[BANK0 ] unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  channel1        1    7[BANK0 ] unsigned char 
  3004 ;;  j               1    6[BANK0 ] unsigned char 
  3005 ;;  i               1    5[BANK0 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3015 ;;      Params:         0       1       0       0
  3016 ;;      Locals:         0       3       0       0
  3017 ;;      Temps:          0       2       0       0
  3018 ;;      Totals:         0       6       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    5
  3022 ;; This function calls:
  3023 ;;		_getAD
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _getCDS_AD
  3031  0712                     _getCDS_AD:	
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3035                           ;getCDS_AD@channel1 stored from wreg
  3036  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3037  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3038  0714  00DA               	movwf	getCDS_AD@channel1
  3039                           
  3040                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3041  0715  01D8               	clrf	getCDS_AD@i
  3042  0716  01D9               	clrf	getCDS_AD@j
  3043                           
  3044                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3045  0717  1DAD               	btfss	__CDS,3
  3046  0718  0008               	return
  3047                           
  3048                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3049  0719  14AD               	bsf	__CDS,1
  3050                           
  3051                           ;CDS_B1.c: 52: _CDS.ADRES = getAD(channel1, 0x70);
  3052  071A  3070               	movlw	112
  3053  071B  00D6               	movwf	??_getCDS_AD
  3054  071C  0856               	movf	??_getCDS_AD,w
  3055  071D  00D3               	movwf	getAD@adcon1
  3056  071E  085A               	movf	getCDS_AD@channel1,w
  3057  071F  118A  27A5  118A   	fcall	_getAD
  3058  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3059  0723  1303               	bcf	3,6	;RP1=0, select bank0
  3060  0724  00D7               	movwf	??_getCDS_AD+1
  3061  0725  0857               	movf	??_getCDS_AD+1,w
  3062  0726  00B1               	movwf	__CDS+4
  3063                           
  3064                           ;CDS_B1.c: 53: _CDS.VRAD = _CDS.ADRES;
  3065  0727  0831               	movf	__CDS+4,w
  3066  0728  00D6               	movwf	??_getCDS_AD
  3067  0729  0856               	movf	??_getCDS_AD,w
  3068  072A  00AF               	movwf	__CDS+2
  3069                           
  3070                           ;CDS_B1.c: 54: _CDS.ADRES = getAD(channel2, 0x70);
  3071  072B  3070               	movlw	112
  3072  072C  00D6               	movwf	??_getCDS_AD
  3073  072D  0856               	movf	??_getCDS_AD,w
  3074  072E  00D3               	movwf	getAD@adcon1
  3075  072F  0855               	movf	getCDS_AD@channel2,w
  3076  0730  118A  27A5         	fcall	_getAD
  3077  0732  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0733  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0734  00D7               	movwf	??_getCDS_AD+1
  3080  0735  0857               	movf	??_getCDS_AD+1,w
  3081  0736  00B1               	movwf	__CDS+4
  3082                           
  3083                           ;CDS_B1.c: 55: _CDS.SignalAD = _CDS.ADRES;
  3084  0737  0831               	movf	__CDS+4,w
  3085  0738  00D6               	movwf	??_getCDS_AD
  3086  0739  0856               	movf	??_getCDS_AD,w
  3087  073A  00B0               	movwf	__CDS+3
  3088  073B  0008               	return
  3089  073C                     __end_of_getCDS_AD:	
  3090                           
  3091                           	psect	text7
  3092  07A5                     __ptext7:	
  3093 ;; *************** function _getAD *****************
  3094 ;; Defined at:
  3095 ;;		line 432 in file "../src/MCU_B1.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  adcon0          1    wreg     unsigned char 
  3098 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      unsigned char 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3110 ;;      Params:         0       1       0       0
  3111 ;;      Locals:         0       1       0       0
  3112 ;;      Temps:          0       0       0       0
  3113 ;;      Totals:         0       2       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    4
  3117 ;; This function calls:
  3118 ;;		_Timeout_Counter
  3119 ;;		_set_TimeoutCleared
  3120 ;; This function is called by:
  3121 ;;		_getCDS_AD
  3122 ;;		_getPIR_AD
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _getAD
  3128  07A5                     _getAD:	
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3132                           ;getAD@adcon0 stored from wreg
  3133  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  3134  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  3135  07A7  00D4               	movwf	getAD@adcon0
  3136                           
  3137                           ;MCU_B1.c: 433: ADCON0 = adcon0;
  3138  07A8  0854               	movf	getAD@adcon0,w
  3139  07A9  009F               	movwf	31	;volatile
  3140                           
  3141                           ;MCU_B1.c: 434: ADCON1 = adcon1;
  3142  07AA  0853               	movf	getAD@adcon1,w
  3143  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  3144  07AC  1303               	bcf	3,6	;RP1=0, select bank1
  3145  07AD  009F               	movwf	31	;volatile
  3146                           
  3147                           ;MCU_B1.c: 435: GO_nDONE = 1;
  3148  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3149  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3150  07B0  149F               	bsf	31,1	;volatile
  3151                           
  3152                           ;MCU_B1.c: 436: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3153  07B1  2FB5               	goto	l3863
  3154  07B2                     l3861:	
  3155                           
  3156                           ;MCU_B1.c: 437: Timeout_Counter();
  3157  07B2  158A  2763  118A   	fcall	_Timeout_Counter
  3158  07B5                     l3863:	
  3159  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3160  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3161  07B7  1C9F               	btfss	31,1	;volatile
  3162  07B8  2FBB               	goto	l3867
  3163  07B9  1D2A               	btfss	_myMain+3,2
  3164  07BA  2FB2               	goto	l3861
  3165  07BB                     l3867:	
  3166                           
  3167                           ;MCU_B1.c: 438: };
  3168                           ;MCU_B1.c: 439: set_TimeoutCleared();
  3169  07BB  158A  265E         	fcall	_set_TimeoutCleared
  3170                           
  3171                           ;MCU_B1.c: 440: return ADRES;
  3172  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3173  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  3174  07BF  081E               	movf	30,w	;volatile
  3175  07C0  0008               	return
  3176  07C1                     __end_of_getAD:	
  3177                           
  3178                           	psect	text8
  3179  0E5E                     __ptext8:	
  3180 ;; *************** function _set_TimeoutCleared *****************
  3181 ;; Defined at:
  3182 ;;		line 281 in file "../src/Main_B1.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;		None               void
  3189 ;; Registers used:
  3190 ;;		status,2
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3196 ;;      Params:         0       0       0       0
  3197 ;;      Locals:         0       0       0       0
  3198 ;;      Temps:          0       0       0       0
  3199 ;;      Totals:         0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    3
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_getAD
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _set_TimeoutCleared
  3212  0E5E                     _set_TimeoutCleared:	
  3213                           
  3214                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3215                           
  3216                           ;incstack = 0
  3217                           ; Regs used in _set_TimeoutCleared: [status,2]
  3218  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0E60  112A               	bcf	_myMain+3,2
  3221                           
  3222                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3223  0E61  01AB               	clrf	_myMain+4
  3224  0E62  01AC               	clrf	_myMain+5
  3225  0E63  0008               	return
  3226  0E64                     __end_of_set_TimeoutCleared:	
  3227                           
  3228                           	psect	text9
  3229  0F63                     __ptext9:	
  3230 ;; *************** function _Timeout_Counter *****************
  3231 ;; Defined at:
  3232 ;;		line 272 in file "../src/Main_B1.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;		None               void
  3239 ;; Registers used:
  3240 ;;		wreg, status,2
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3246 ;;      Params:         0       0       0       0
  3247 ;;      Locals:         0       0       0       0
  3248 ;;      Temps:          0       0       0       0
  3249 ;;      Totals:         0       0       0       0
  3250 ;;Total ram usage:        0 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    3
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_getAD
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _Timeout_Counter
  3262  0F63                     _Timeout_Counter:	
  3263                           
  3264                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3268  0F63  3001               	movlw	1
  3269  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0F66  07AB               	addwf	_myMain+4,f
  3272  0F67  1803               	skipnc
  3273  0F68  0AAC               	incf	_myMain+5,f
  3274  0F69  3000               	movlw	0
  3275  0F6A  07AC               	addwf	_myMain+5,f
  3276                           
  3277                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3278  0F6B  3061               	movlw	97
  3279  0F6C  062C               	xorwf	_myMain+5,w
  3280  0F6D  1D03               	skipz
  3281  0F6E  2F71               	goto	u4115
  3282  0F6F  30A8               	movlw	168
  3283  0F70  062B               	xorwf	_myMain+4,w
  3284  0F71                     u4115:	
  3285  0F71  1D03               	skipz
  3286  0F72  0008               	return
  3287                           
  3288                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3289  0F73  01AB               	clrf	_myMain+4
  3290  0F74  01AC               	clrf	_myMain+5
  3291                           
  3292                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3293  0F75  152A               	bsf	_myMain+3,2
  3294  0F76  0008               	return
  3295  0F77                     __end_of_Timeout_Counter:	
  3296                           
  3297                           	psect	text10
  3298  0F19                     __ptext10:	
  3299 ;; *************** function _WDT_Main *****************
  3300 ;; Defined at:
  3301 ;;		line 1103 in file "../src/MCU_B1.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;		None               void
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3315 ;;      Params:         0       0       0       0
  3316 ;;      Locals:         0       0       0       0
  3317 ;;      Temps:          0       1       0       0
  3318 ;;      Totals:         0       1       0       0
  3319 ;;Total ram usage:        1 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    4
  3322 ;; This function calls:
  3323 ;;		_WDT_Clearing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           
  3330                           ;psect for function _WDT_Main
  3331  0F19                     _WDT_Main:	
  3332                           
  3333                           ;MCU_B1.c: 1104: if (WDT.Enable == 1) {
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3337  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0F1B  1C3C               	btfss	_WDT,0
  3340  0F1C  0008               	return
  3341                           
  3342                           ;MCU_B1.c: 1105: if (WDT.Timer-- > 0) {
  3343  0F1D  3001               	movlw	1
  3344  0F1E  02BD               	subwf	_WDT+1,f
  3345  0F1F  083D               	movf	_WDT+1,w
  3346  0F20  3AFF               	xorlw	255
  3347  0F21  1903               	skipnz
  3348  0F22  0008               	return
  3349                           
  3350                           ;MCU_B1.c: 1106: WDT.Timer = 100;
  3351  0F23  3064               	movlw	100
  3352  0F24  00D3               	movwf	??_WDT_Main
  3353  0F25  0853               	movf	??_WDT_Main,w
  3354  0F26  00BD               	movwf	_WDT+1
  3355                           
  3356                           ;MCU_B1.c: 1107: WDT_Clearing();
  3357  0F27  118A  2002         	fcall	_WDT_Clearing
  3358  0F29  0008               	return
  3359  0F2A                     __end_of_WDT_Main:	
  3360                           
  3361                           	psect	text11
  3362  0002                     __ptext11:	
  3363 ;; *************** function _WDT_Clearing *****************
  3364 ;; Defined at:
  3365 ;;		line 1113 in file "../src/MCU_B1.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		None
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3379 ;;      Params:         0       0       0       0
  3380 ;;      Locals:         0       0       0       0
  3381 ;;      Temps:          0       0       0       0
  3382 ;;      Totals:         0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_WDT_Main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _WDT_Clearing
  3395  0002                     _WDT_Clearing:	
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in _WDT_Clearing: []
  3399  0002  0064               	clrwdt	;# 
  3400  0003  0008               	return
  3401  0004                     __end_of_WDT_Clearing:	
  3402                           
  3403                           	psect	text12
  3404  0027                     __ptext12:	
  3405 ;; *************** function _PIR_Main *****************
  3406 ;; Defined at:
  3407 ;;		line 13 in file "../src/PIR_B1.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  cds             1   12[BANK0 ] unsigned char 
  3412 ;;  error           1    9[BANK0 ] unsigned char 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3422 ;;      Params:         0       0       0       0
  3423 ;;      Locals:         0       4       0       0
  3424 ;;      Temps:          0       5       0       0
  3425 ;;      Totals:         0       9       0       0
  3426 ;;Total ram usage:        9 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    5
  3429 ;; This function calls:
  3430 ;;		_getCDS_Status
  3431 ;;		_getDimmerLights_Status
  3432 ;;		_getMain_All_Error_Status
  3433 ;;		_setDimmerLights_SwOff
  3434 ;;		_setDimmerLights_SwOn
  3435 ;;		_setLED
  3436 ;; This function is called by:
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function _PIR_Main
  3443  0027                     _PIR_Main:	
  3444                           
  3445                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3449  0027  3000               	movlw	0
  3450  0028  158A  2654  118A   	fcall	_getMain_All_Error_Status
  3451  002B  1283               	bcf	3,5	;RP0=0, select bank0
  3452  002C  1303               	bcf	3,6	;RP1=0, select bank0
  3453  002D  00D7               	movwf	??_PIR_Main
  3454  002E  0857               	movf	??_PIR_Main,w
  3455  002F  00DC               	movwf	PIR_Main@error
  3456                           
  3457                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  3458  0030  158A  2672  118A   	fcall	_getCDS_Status
  3459  0033  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0034  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0035  00D7               	movwf	??_PIR_Main
  3462  0036  0857               	movf	??_PIR_Main,w
  3463  0037  00DF               	movwf	PIR_Main@cds
  3464                           
  3465                           ;PIR_B1.c: 16: if (_PIR.Enable == 1) {
  3466  0038  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0039  1303               	bcf	3,6	;RP1=0, select bank1
  3468  003A  1C20               	btfss	__PIR^(0+128),0
  3469  003B  2A08               	goto	l935
  3470                           
  3471                           ;PIR_B1.c: 17: if (error == 0) {
  3472  003C  1283               	bcf	3,5	;RP0=0, select bank0
  3473  003D  1303               	bcf	3,6	;RP1=0, select bank0
  3474  003E  08DC               	movf	PIR_Main@error,f
  3475  003F  1D03               	skipz
  3476  0040  287B               	goto	l936
  3477                           
  3478                           ;PIR_B1.c: 19: if (cds == 1) {
  3479  0041  085F               	movf	PIR_Main@cds,w
  3480  0042  3A01               	xorlw	1
  3481  0043  1D03               	skipz
  3482  0044  2849               	goto	l937
  3483                           
  3484                           ;PIR_B1.c: 20: _PIR.Available = 1;
  3485  0045  1683               	bsf	3,5	;RP0=1, select bank1
  3486  0046  1303               	bcf	3,6	;RP1=0, select bank1
  3487  0047  17A0               	bsf	__PIR^(0+128),7
  3488                           
  3489                           ;PIR_B1.c: 21: } else {
  3490  0048  286B               	goto	l4273
  3491  0049                     l937:	
  3492                           
  3493                           ;PIR_B1.c: 22: _PIR.Available = 0;
  3494  0049  1683               	bsf	3,5	;RP0=1, select bank1
  3495  004A  1303               	bcf	3,6	;RP1=0, select bank1
  3496  004B  13A0               	bcf	__PIR^(0+128),7
  3497                           
  3498                           ;PIR_B1.c: 23: if (_PIR.OK == 1) {
  3499  004C  1DA0               	btfss	__PIR^(0+128),3
  3500  004D  286B               	goto	l4273
  3501                           
  3502                           ;PIR_B1.c: 31: if (getDimmerLights_Status(1) == 1) {
  3503  004E  3001               	movlw	1
  3504  004F  158A  2708  118A   	fcall	_getDimmerLights_Status
  3505  0052  3A01               	xorlw	1
  3506  0053  1D03               	skipz
  3507  0054  285D               	goto	l940
  3508                           
  3509                           ;PIR_B1.c: 32: setDimmerLights_SwOn(1);
  3510  0055  3001               	movlw	1
  3511  0056  118A  2764  118A   	fcall	_setDimmerLights_SwOn
  3512                           
  3513                           ;PIR_B1.c: 33: setDimmerLights_SwOff(1);
  3514  0059  3001               	movlw	1
  3515  005A  118A  273C  118A   	fcall	_setDimmerLights_SwOff
  3516  005D                     l940:	
  3517                           
  3518                           ;PIR_B1.c: 34: }
  3519                           ;PIR_B1.c: 37: setLED(1, 0);
  3520  005D  1283               	bcf	3,5	;RP0=0, select bank0
  3521  005E  1303               	bcf	3,6	;RP1=0, select bank0
  3522  005F  01D5               	clrf	setLED@command
  3523  0060  3001               	movlw	1
  3524  0061  118A  2491  118A   	fcall	_setLED
  3525                           
  3526                           ;PIR_B1.c: 38: setLED(2, 0);
  3527  0064  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0065  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0066  01D5               	clrf	setLED@command
  3530  0067  3002               	movlw	2
  3531  0068  118A  2491  118A   	fcall	_setLED
  3532  006B                     l4273:	
  3533                           
  3534                           ;PIR_B1.c: 39: }
  3535                           ;PIR_B1.c: 40: }
  3536                           ;PIR_B1.c: 44: if (_PIR.Detect == 0) {
  3537  006B  1683               	bsf	3,5	;RP0=1, select bank1
  3538  006C  1303               	bcf	3,6	;RP1=0, select bank1
  3539  006D  1A20               	btfsc	__PIR^(0+128),4
  3540  006E  2881               	goto	l943
  3541                           
  3542                           ;PIR_B1.c: 45: _PIR.Detect = 1;
  3543  006F  1620               	bsf	__PIR^(0+128),4
  3544                           
  3545                           ;PIR_B1.c: 46: if (_PIR.OK == 0) {
  3546  0070  19A0               	btfsc	__PIR^(0+128),3
  3547  0071  2881               	goto	l943
  3548                           
  3549                           ;PIR_B1.c: 47: setLED(1, 1);
  3550  0072  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0073  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0074  01D5               	clrf	setLED@command
  3553  0075  0AD5               	incf	setLED@command,f
  3554  0076  3001               	movlw	1
  3555  0077  118A  2491  118A   	fcall	_setLED
  3556                           
  3557                           ;PIR_B1.c: 48: }
  3558                           ;PIR_B1.c: 49: }
  3559                           ;PIR_B1.c: 50: } else {
  3560  007A  2881               	goto	l943
  3561  007B                     l936:	
  3562                           
  3563                           ;PIR_B1.c: 51: if (_PIR.Detect == 1) {
  3564  007B  1683               	bsf	3,5	;RP0=1, select bank1
  3565  007C  1303               	bcf	3,6	;RP1=0, select bank1
  3566  007D  1E20               	btfss	__PIR^(0+128),4
  3567  007E  2881               	goto	l943
  3568                           
  3569                           ;PIR_B1.c: 52: _PIR.Detect = 0;
  3570  007F  1220               	bcf	__PIR^(0+128),4
  3571                           
  3572                           ;PIR_B1.c: 53: _PIR.Available = 0;
  3573  0080  13A0               	bcf	__PIR^(0+128),7
  3574  0081                     l943:	
  3575                           
  3576                           ;PIR_B1.c: 71: }
  3577                           ;PIR_B1.c: 72: }
  3578                           ;PIR_B1.c: 74: if (_PIR.ADtoGO == 0) {
  3579  0081  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0082  1303               	bcf	3,6	;RP1=0, select bank1
  3581  0083  18A0               	btfsc	__PIR^(0+128),1
  3582  0084  2894               	goto	l945
  3583                           
  3584                           ;PIR_B1.c: 75: _PIR.Time++;
  3585  0085  3001               	movlw	1
  3586  0086  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0087  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0088  00D7               	movwf	??_PIR_Main
  3589  0089  0857               	movf	??_PIR_Main,w
  3590  008A  1683               	bsf	3,5	;RP0=1, select bank1
  3591  008B  1303               	bcf	3,6	;RP1=0, select bank1
  3592  008C  07A5               	addwf	(__PIR^(0+128)+5),f
  3593                           
  3594                           ;PIR_B1.c: 76: if (_PIR.Time == (100 / 20)) {
  3595  008D  0825               	movf	(__PIR^(0+128)+5),w
  3596  008E  3A05               	xorlw	5
  3597  008F  1D03               	skipz
  3598  0090  29A7               	goto	l4363
  3599                           
  3600                           ;PIR_B1.c: 77: _PIR.Time = 0;
  3601  0091  01A5               	clrf	(__PIR^(0+128)+5)
  3602                           
  3603                           ;PIR_B1.c: 78: _PIR.ADtoGO = 1;
  3604  0092  14A0               	bsf	__PIR^(0+128),1
  3605                           
  3606                           ;PIR_B1.c: 79: }
  3607                           ;PIR_B1.c: 80: } else {
  3608  0093  29A7               	goto	l4363
  3609  0094                     l945:	
  3610                           
  3611                           ;PIR_B1.c: 81: if (_PIR.GO == 1) {
  3612  0094  1D20               	btfss	__PIR^(0+128),2
  3613  0095  29A7               	goto	l4363
  3614                           
  3615                           ;PIR_B1.c: 82: _PIR.GO = 0;
  3616  0096  1120               	bcf	__PIR^(0+128),2
  3617                           
  3618                           ;PIR_B1.c: 83: _PIR.ADtoGO = 0;
  3619  0097  10A0               	bcf	__PIR^(0+128),1
  3620                           
  3621                           ;PIR_B1.c: 84: if (_PIR.Available == 1) {
  3622  0098  1BA0               	btfsc	__PIR^(0+128),7
  3623                           
  3624                           ;PIR_B1.c: 85: if (_PIR.OK == 1) {
  3625  0099  1DA0               	btfss	__PIR^(0+128),3
  3626  009A  29A7               	goto	l4363
  3627                           
  3628                           ;PIR_B1.c: 87: _PIR.Time++;
  3629  009B  3001               	movlw	1
  3630  009C  1283               	bcf	3,5	;RP0=0, select bank0
  3631  009D  1303               	bcf	3,6	;RP1=0, select bank0
  3632  009E  00D7               	movwf	??_PIR_Main
  3633  009F  0857               	movf	??_PIR_Main,w
  3634  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  3635  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  3636  00A2  07A5               	addwf	(__PIR^(0+128)+5),f
  3637                           
  3638                           ;PIR_B1.c: 88: if (_PIR.Time == 60) {
  3639  00A3  0825               	movf	(__PIR^(0+128)+5),w
  3640  00A4  3A3C               	xorlw	60
  3641  00A5  1D03               	skipz
  3642  00A6  28DB               	goto	l4329
  3643                           
  3644                           ;PIR_B1.c: 89: _PIR.Time = 0;
  3645  00A7  01A5               	clrf	(__PIR^(0+128)+5)
  3646                           
  3647                           ;PIR_B1.c: 90: if (_PIR.RangeCount >= 90) {
  3648  00A8  305A               	movlw	90
  3649  00A9  024B               	subwf	(__PIR^(0+128)+43),w
  3650  00AA  1C03               	skipc
  3651  00AB  28B7               	goto	l4311
  3652                           
  3653                           ;PIR_B1.c: 91: _PIR.RangeTime1 = 0;
  3654  00AC  01CA               	clrf	(__PIR^(0+128)+42)
  3655                           
  3656                           ;PIR_B1.c: 93: if (_PIR.RangeValue == 25) {
  3657  00AD  084C               	movf	(__PIR^(0+128)+44),w
  3658  00AE  3A19               	xorlw	25
  3659  00AF  1903               	btfsc	3,2
  3660  00B0  28CC               	goto	L12
  3661                           
  3662                           ;PIR_B1.c: 95: } else if (_PIR.RangeValue == (25+10)) {
  3663                           
  3664                           ;PIR_B1.c: 94: _PIR.RangeValue = (25+10);
  3665  00B1  084C               	movf	(__PIR^(0+128)+44),w
  3666  00B2  3A23               	xorlw	35
  3667  00B3  1D03               	skipz
  3668  00B4  28DA               	goto	l4327
  3669                           
  3670                           ;PIR_B1.c: 96: _PIR.RangeValue = (25+20);
  3671  00B5  302D               	movlw	45
  3672  00B6  28D3               	goto	L8
  3673  00B7                     l4311:	
  3674                           ;PIR_B1.c: 97: }
  3675                           ;PIR_B1.c: 98: } else if (_PIR.RangeCount <= 10) {
  3676                           
  3677  00B7  300B               	movlw	11
  3678  00B8  024B               	subwf	(__PIR^(0+128)+43),w
  3679  00B9  1803               	skipnc
  3680  00BA  28DA               	goto	l4327
  3681                           
  3682                           ;PIR_B1.c: 99: _PIR.RangeTime1++;
  3683  00BB  3001               	movlw	1
  3684  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3685  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3686  00BE  00D7               	movwf	??_PIR_Main
  3687  00BF  0857               	movf	??_PIR_Main,w
  3688  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  3689  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  3690  00C2  07CA               	addwf	(__PIR^(0+128)+42),f
  3691                           
  3692                           ;PIR_B1.c: 100: if (_PIR.RangeTime1 == 2) {
  3693  00C3  084A               	movf	(__PIR^(0+128)+42),w
  3694  00C4  3A02               	xorlw	2
  3695  00C5  1D03               	skipz
  3696  00C6  28DA               	goto	l4327
  3697                           
  3698                           ;PIR_B1.c: 101: _PIR.RangeTime1 = 0;
  3699  00C7  01CA               	clrf	(__PIR^(0+128)+42)
  3700                           
  3701                           ;PIR_B1.c: 103: if (_PIR.RangeValue == (25+20)) {
  3702  00C8  084C               	movf	(__PIR^(0+128)+44),w
  3703  00C9  3A2D               	xorlw	45
  3704  00CA  1D03               	skipz
  3705  00CB  28CE               	goto	l4323
  3706  00CC                     L12:	
  3707                           
  3708                           ;PIR_B1.c: 104: _PIR.RangeValue = (25+10);
  3709  00CC  3023               	movlw	35
  3710  00CD  28D3               	goto	L8
  3711  00CE                     l4323:	
  3712                           ;PIR_B1.c: 105: } else if (_PIR.RangeValue == (25+10)) {
  3713                           
  3714  00CE  084C               	movf	(__PIR^(0+128)+44),w
  3715  00CF  3A23               	xorlw	35
  3716  00D0  1D03               	skipz
  3717  00D1  28DA               	goto	l4327
  3718                           
  3719                           ;PIR_B1.c: 106: _PIR.RangeValue = 25;
  3720  00D2  3019               	movlw	25
  3721  00D3                     L8:	
  3722  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  3723  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  3724  00D5  00D7               	movwf	??_PIR_Main
  3725  00D6  0857               	movf	??_PIR_Main,w
  3726  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  3727  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  3728  00D9  00CC               	movwf	(__PIR^(0+128)+44)
  3729  00DA                     l4327:	
  3730                           
  3731                           ;PIR_B1.c: 107: }
  3732                           ;PIR_B1.c: 108: }
  3733                           ;PIR_B1.c: 109: }
  3734                           ;PIR_B1.c: 110: _PIR.RangeCount = 0;
  3735  00DA  01CB               	clrf	(__PIR^(0+128)+43)
  3736  00DB                     l4329:	
  3737                           
  3738                           ;PIR_B1.c: 111: }
  3739                           ;PIR_B1.c: 114: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  3740                           ;PIR_B1.c: 115: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  3741  00DB  084C               	movf	(__PIR^(0+128)+44),w
  3742  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  3743  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  3744  00DE  00D7               	movwf	??_PIR_Main
  3745  00DF  01D8               	clrf	??_PIR_Main+1
  3746  00E0  09D7               	comf	??_PIR_Main,f
  3747  00E1  09D8               	comf	??_PIR_Main+1,f
  3748  00E2  0AD7               	incf	??_PIR_Main,f
  3749  00E3  1903               	skipnz
  3750  00E4  0AD8               	incf	??_PIR_Main+1,f
  3751  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  3752  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  3753  00E7  0826               	movf	(__PIR^(0+128)+6),w
  3754  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3755  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3756  00EA  0757               	addwf	??_PIR_Main,w
  3757  00EB  00D9               	movwf	??_PIR_Main+2
  3758  00EC  0858               	movf	??_PIR_Main+1,w
  3759  00ED  1803               	skipnc
  3760  00EE  0A58               	incf	??_PIR_Main+1,w
  3761  00EF  00DA               	movwf	??_PIR_Main+3
  3762  00F0  085A               	movf	??_PIR_Main+3,w
  3763  00F1  3A80               	xorlw	128
  3764  00F2  3C80               	sublw	128
  3765  00F3  1D03               	skipz
  3766  00F4  28F9               	goto	u5055
  3767  00F5  0859               	movf	??_PIR_Main+2,w
  3768  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  3769  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  3770  00F8  0221               	subwf	(__PIR^(0+128)+1),w
  3771  00F9                     u5055:	
  3772  00F9  1C03               	skipc
  3773  00FA  291B               	goto	l4339
  3774  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  3775  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  3776  00FD  0826               	movf	(__PIR^(0+128)+6),w
  3777  00FE  074C               	addwf	(__PIR^(0+128)+44),w
  3778  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0100  1303               	bcf	3,6	;RP1=0, select bank0
  3780  0101  00D7               	movwf	??_PIR_Main
  3781  0102  01D8               	clrf	??_PIR_Main+1
  3782  0103  0DD8               	rlf	??_PIR_Main+1,f
  3783  0104  0858               	movf	??_PIR_Main+1,w
  3784  0105  3A80               	xorlw	128
  3785  0106  00D9               	movwf	??_PIR_Main+2
  3786  0107  3080               	movlw	128
  3787  0108  0259               	subwf	??_PIR_Main+2,w
  3788  0109  1D03               	skipz
  3789  010A  2911               	goto	u5065
  3790  010B  1683               	bsf	3,5	;RP0=1, select bank1
  3791  010C  1303               	bcf	3,6	;RP1=0, select bank1
  3792  010D  0821               	movf	(__PIR^(0+128)+1),w
  3793  010E  1283               	bcf	3,5	;RP0=0, select bank0
  3794  010F  1303               	bcf	3,6	;RP1=0, select bank0
  3795  0110  0257               	subwf	??_PIR_Main,w
  3796  0111                     u5065:	
  3797  0111  1C03               	skipc
  3798  0112  291B               	goto	l4339
  3799                           
  3800                           ;PIR_B1.c: 117: _PIR.Count = 0;
  3801  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3802  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3803  0115  01C1               	clrf	(__PIR^(0+128)+33)
  3804  0116  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3805                           
  3806                           ;PIR_B1.c: 123: setLED(1, 0);
  3807  0117  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0118  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0119  01D5               	clrf	setLED@command
  3810  011A  2990               	goto	L13
  3811  011B                     l4339:	
  3812                           ;PIR_B1.c: 125: } else {
  3813                           
  3814                           ;PIR_B1.c: 124: setLED(2, 0);
  3815                           
  3816                           
  3817                           ;PIR_B1.c: 127: _PIR.RangeCount++;
  3818  011B  3001               	movlw	1
  3819  011C  1283               	bcf	3,5	;RP0=0, select bank0
  3820  011D  1303               	bcf	3,6	;RP1=0, select bank0
  3821  011E  00D7               	movwf	??_PIR_Main
  3822  011F  0857               	movf	??_PIR_Main,w
  3823  0120  1683               	bsf	3,5	;RP0=1, select bank1
  3824  0121  1303               	bcf	3,6	;RP1=0, select bank1
  3825  0122  07CB               	addwf	(__PIR^(0+128)+43),f
  3826                           
  3827                           ;PIR_B1.c: 128: _PIR.Count++;
  3828  0123  3001               	movlw	1
  3829  0124  07C1               	addwf	(__PIR^(0+128)+33),f
  3830  0125  1803               	skipnc
  3831  0126  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  3832  0127  3000               	movlw	0
  3833  0128  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  3834                           
  3835                           ;PIR_B1.c: 130: _PIR.TriggerValue = _PIR.Status == 1 ? 3 : 3;
  3836  0129  1B20               	btfsc	__PIR^(0+128),6
  3837  012A  292F               	goto	l4347
  3838  012B  3003               	movlw	3
  3839  012C  1283               	bcf	3,5	;RP0=0, select bank0
  3840  012D  1303               	bcf	3,6	;RP1=0, select bank0
  3841  012E  2931               	goto	L9
  3842  012F                     l4347:	
  3843  012F  3003               	movlw	3
  3844  0130  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0131                     L9:	
  3846  0131  00DD               	movwf	_PIR_Main$2934
  3847  0132  3000               	movlw	0
  3848  0133  00DE               	movwf	_PIR_Main$2934+1
  3849  0134  085D               	movf	_PIR_Main$2934,w
  3850  0135  00D7               	movwf	??_PIR_Main
  3851  0136  0857               	movf	??_PIR_Main,w
  3852  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3853  0138  1303               	bcf	3,6	;RP1=0, select bank1
  3854  0139  00C3               	movwf	(__PIR^(0+128)+35)
  3855                           
  3856                           ;PIR_B1.c: 132: if (_PIR.Count == _PIR.TriggerValue) {
  3857  013A  0843               	movf	(__PIR^(0+128)+35),w
  3858  013B  1283               	bcf	3,5	;RP0=0, select bank0
  3859  013C  1303               	bcf	3,6	;RP1=0, select bank0
  3860  013D  00D7               	movwf	??_PIR_Main
  3861  013E  01D8               	clrf	??_PIR_Main+1
  3862  013F  1683               	bsf	3,5	;RP0=1, select bank1
  3863  0140  1303               	bcf	3,6	;RP1=0, select bank1
  3864  0141  0842               	movf	((__PIR+1)^(0+128)+33),w
  3865  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3867  0144  0658               	xorwf	??_PIR_Main+1,w
  3868  0145  1D03               	skipz
  3869  0146  294D               	goto	u5085
  3870  0147  1683               	bsf	3,5	;RP0=1, select bank1
  3871  0148  1303               	bcf	3,6	;RP1=0, select bank1
  3872  0149  0841               	movf	(__PIR^(0+128)+33),w
  3873  014A  1283               	bcf	3,5	;RP0=0, select bank0
  3874  014B  1303               	bcf	3,6	;RP1=0, select bank0
  3875  014C  0657               	xorwf	??_PIR_Main,w
  3876  014D                     u5085:	
  3877  014D  1D03               	skipz
  3878  014E  29A7               	goto	l4363
  3879                           
  3880                           ;PIR_B1.c: 133: _PIR.Count = 0;
  3881  014F  1683               	bsf	3,5	;RP0=1, select bank1
  3882  0150  1303               	bcf	3,6	;RP1=0, select bank1
  3883  0151  01C1               	clrf	(__PIR^(0+128)+33)
  3884  0152  01C2               	clrf	((__PIR+1)^(0+128)+33)
  3885                           
  3886                           ;PIR_B1.c: 135: _PIR.CloseTimeSeconds = 0;
  3887  0153  01C6               	clrf	(__PIR^(0+128)+38)
  3888                           
  3889                           ;PIR_B1.c: 136: _PIR.CloseTimeMinutes = 0;
  3890  0154  01C4               	clrf	(__PIR^(0+128)+36)
  3891  0155  01C5               	clrf	((__PIR+1)^(0+128)+36)
  3892                           
  3893                           ;PIR_B1.c: 137: _PIR.Status = 1;
  3894  0156  1720               	bsf	__PIR^(0+128),6
  3895                           
  3896                           ;PIR_B1.c: 151: if (getDimmerLights_Status(1) == 0) {
  3897  0157  3001               	movlw	1
  3898  0158  158A  2708  118A   	fcall	_getDimmerLights_Status
  3899  015B  3800               	iorlw	0
  3900  015C  1D03               	skipz
  3901  015D  2966               	goto	l4357
  3902                           
  3903                           ;PIR_B1.c: 152: setDimmerLights_SwOn(1);
  3904  015E  3001               	movlw	1
  3905  015F  118A  2764  118A   	fcall	_setDimmerLights_SwOn
  3906                           
  3907                           ;PIR_B1.c: 153: setDimmerLights_SwOff(1);
  3908  0162  3001               	movlw	1
  3909  0163  118A  273C  118A   	fcall	_setDimmerLights_SwOff
  3910  0166                     l4357:	
  3911                           
  3912                           ;PIR_B1.c: 154: }
  3913                           ;PIR_B1.c: 158: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  3914  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0167  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0168  084C               	movf	(__PIR^(0+128)+44),w
  3917  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3918  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3919  016B  00D7               	movwf	??_PIR_Main
  3920  016C  01D8               	clrf	??_PIR_Main+1
  3921  016D  09D7               	comf	??_PIR_Main,f
  3922  016E  09D8               	comf	??_PIR_Main+1,f
  3923  016F  0AD7               	incf	??_PIR_Main,f
  3924  0170  1903               	skipnz
  3925  0171  0AD8               	incf	??_PIR_Main+1,f
  3926  0172  1683               	bsf	3,5	;RP0=1, select bank1
  3927  0173  1303               	bcf	3,6	;RP1=0, select bank1
  3928  0174  0826               	movf	(__PIR^(0+128)+6),w
  3929  0175  1283               	bcf	3,5	;RP0=0, select bank0
  3930  0176  1303               	bcf	3,6	;RP1=0, select bank0
  3931  0177  0757               	addwf	??_PIR_Main,w
  3932  0178  00D9               	movwf	??_PIR_Main+2
  3933  0179  0858               	movf	??_PIR_Main+1,w
  3934  017A  1803               	skipnc
  3935  017B  0A58               	incf	??_PIR_Main+1,w
  3936  017C  00DA               	movwf	??_PIR_Main+3
  3937  017D  085A               	movf	??_PIR_Main+3,w
  3938  017E  3A80               	xorlw	128
  3939  017F  00DB               	movwf	??_PIR_Main+4
  3940  0180  3080               	movlw	128
  3941  0181  025B               	subwf	??_PIR_Main+4,w
  3942  0182  1D03               	skipz
  3943  0183  298A               	goto	u5105
  3944  0184  1683               	bsf	3,5	;RP0=1, select bank1
  3945  0185  1303               	bcf	3,6	;RP1=0, select bank1
  3946  0186  0821               	movf	(__PIR^(0+128)+1),w
  3947  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0188  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0189  0259               	subwf	??_PIR_Main+2,w
  3950  018A                     u5105:	
  3951  018A  1C03               	skipc
  3952  018B  2998               	goto	l4361
  3953                           
  3954                           ;PIR_B1.c: 159: setLED(1, 1);
  3955  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3956  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3957  018E  01D5               	clrf	setLED@command
  3958  018F  0AD5               	incf	setLED@command,f
  3959  0190                     L13:	
  3960  0190  3001               	movlw	1
  3961  0191  118A  2491  118A   	fcall	_setLED
  3962                           
  3963                           ;PIR_B1.c: 160: setLED(2, 0);
  3964  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0196  01D5               	clrf	setLED@command
  3967  0197  29A3               	goto	L10
  3968  0198                     l4361:	
  3969                           ;PIR_B1.c: 161: } else {
  3970                           
  3971                           
  3972                           ;PIR_B1.c: 162: setLED(1, 0);
  3973  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0199  1303               	bcf	3,6	;RP1=0, select bank0
  3975  019A  01D5               	clrf	setLED@command
  3976  019B  3001               	movlw	1
  3977  019C  118A  2491  118A   	fcall	_setLED
  3978                           
  3979                           ;PIR_B1.c: 163: setLED(2, 1);
  3980  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3981  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3982  01A1  01D5               	clrf	setLED@command
  3983  01A2  0AD5               	incf	setLED@command,f
  3984  01A3                     L10:	
  3985  01A3  3002               	movlw	2
  3986  01A4  118A  2491  118A   	fcall	_setLED
  3987  01A7                     l4363:	
  3988                           
  3989                           ;PIR_B1.c: 164: }
  3990                           ;PIR_B1.c: 198: }
  3991                           ;PIR_B1.c: 199: }
  3992                           ;PIR_B1.c: 200: }
  3993                           ;PIR_B1.c: 201: }
  3994                           ;PIR_B1.c: 202: }
  3995                           ;PIR_B1.c: 203: }
  3996                           ;PIR_B1.c: 204: if (_PIR.OK == 0) {
  3997  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  3998  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  3999  01A9  19A0               	btfsc	__PIR^(0+128),3
  4000  01AA  29D7               	goto	l4379
  4001                           
  4002                           ;PIR_B1.c: 205: _PIR.Count++;
  4003  01AB  3001               	movlw	1
  4004  01AC  07C1               	addwf	(__PIR^(0+128)+33),f
  4005  01AD  1803               	skipnc
  4006  01AE  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4007  01AF  3000               	movlw	0
  4008  01B0  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4009                           
  4010                           ;PIR_B1.c: 206: if (_PIR.Count == (30000 / 20)) {
  4011  01B1  3005               	movlw	5
  4012  01B2  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4013  01B3  1D03               	skipz
  4014  01B4  29B7               	goto	u5125
  4015  01B5  30DC               	movlw	220
  4016  01B6  0641               	xorwf	(__PIR^(0+128)+33),w
  4017  01B7                     u5125:	
  4018  01B7  1D03               	skipz
  4019  01B8  29D7               	goto	l4379
  4020                           
  4021                           ;PIR_B1.c: 207: _PIR.Count = 0;
  4022  01B9  01C1               	clrf	(__PIR^(0+128)+33)
  4023  01BA  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4024                           
  4025                           ;PIR_B1.c: 208: _PIR.OK = 1;
  4026  01BB  15A0               	bsf	__PIR^(0+128),3
  4027                           
  4028                           ;PIR_B1.c: 209: setLED(1, 0);
  4029  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  4030  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  4031  01BE  01D5               	clrf	setLED@command
  4032  01BF  3001               	movlw	1
  4033  01C0  118A  2491  118A   	fcall	_setLED
  4034                           
  4035                           ;PIR_B1.c: 210: if (cds == 0) {
  4036  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  4037  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  4038  01C5  08DF               	movf	PIR_Main@cds,f
  4039  01C6  1D03               	skipz
  4040  01C7  29D7               	goto	l4379
  4041                           
  4042                           ;PIR_B1.c: 220: if (getDimmerLights_Status(1) == 1) {
  4043  01C8  3001               	movlw	1
  4044  01C9  158A  2708  118A   	fcall	_getDimmerLights_Status
  4045  01CC  3A01               	xorlw	1
  4046  01CD  1D03               	skipz
  4047  01CE  29D7               	goto	l4379
  4048                           
  4049                           ;PIR_B1.c: 221: setDimmerLights_SwOn(1);
  4050  01CF  3001               	movlw	1
  4051  01D0  118A  2764  118A   	fcall	_setDimmerLights_SwOn
  4052                           
  4053                           ;PIR_B1.c: 222: setDimmerLights_SwOff(1);
  4054  01D3  3001               	movlw	1
  4055  01D4  118A  273C  118A   	fcall	_setDimmerLights_SwOff
  4056  01D7                     l4379:	
  4057                           
  4058                           ;PIR_B1.c: 223: }
  4059                           ;PIR_B1.c: 226: }
  4060                           ;PIR_B1.c: 227: }
  4061                           ;PIR_B1.c: 228: }
  4062                           ;PIR_B1.c: 229: if (_PIR.Status == 1) {
  4063  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  4064  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  4065  01D9  1F20               	btfss	__PIR^(0+128),6
  4066  01DA  0008               	return
  4067                           
  4068                           ;PIR_B1.c: 230: _PIR.CloseTimeSeconds++;
  4069  01DB  3001               	movlw	1
  4070  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  4071  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  4072  01DE  00D7               	movwf	??_PIR_Main
  4073  01DF  0857               	movf	??_PIR_Main,w
  4074  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  4075  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  4076  01E2  07C6               	addwf	(__PIR^(0+128)+38),f
  4077                           
  4078                           ;PIR_B1.c: 231: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4079  01E3  0846               	movf	(__PIR^(0+128)+38),w
  4080  01E4  3A32               	xorlw	50
  4081  01E5  1D03               	skipz
  4082  01E6  0008               	return
  4083                           
  4084                           ;PIR_B1.c: 232: _PIR.CloseTimeSeconds = 0;
  4085  01E7  01C6               	clrf	(__PIR^(0+128)+38)
  4086                           
  4087                           ;PIR_B1.c: 233: _PIR.CloseTimeMinutes++;
  4088  01E8  3001               	movlw	1
  4089  01E9  07C4               	addwf	(__PIR^(0+128)+36),f
  4090  01EA  1803               	skipnc
  4091  01EB  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4092  01EC  3000               	movlw	0
  4093  01ED  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4094                           
  4095                           ;PIR_B1.c: 234: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4096  01EE  0848               	movf	((__PIR+1)^(0+128)+39),w
  4097  01EF  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4098  01F0  1D03               	skipz
  4099  01F1  29F4               	goto	u5175
  4100  01F2  0847               	movf	(__PIR^(0+128)+39),w
  4101  01F3  0644               	xorwf	(__PIR^(0+128)+36),w
  4102  01F4                     u5175:	
  4103  01F4  1D03               	skipz
  4104  01F5  0008               	return
  4105                           
  4106                           ;PIR_B1.c: 235: _PIR.CloseTimeMinutes = 0;
  4107  01F6  01C4               	clrf	(__PIR^(0+128)+36)
  4108  01F7  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4109                           
  4110                           ;PIR_B1.c: 236: _PIR.Status = 0;
  4111  01F8  1320               	bcf	__PIR^(0+128),6
  4112                           
  4113                           ;PIR_B1.c: 249: if (getDimmerLights_Status(1) == 1) {
  4114  01F9  3001               	movlw	1
  4115  01FA  158A  2708  118A   	fcall	_getDimmerLights_Status
  4116  01FD  3A01               	xorlw	1
  4117  01FE  1D03               	skipz
  4118  01FF  0008               	return
  4119                           
  4120                           ;PIR_B1.c: 250: setDimmerLights_SwOn(1);
  4121  0200  3001               	movlw	1
  4122  0201  118A  2764  118A   	fcall	_setDimmerLights_SwOn
  4123                           
  4124                           ;PIR_B1.c: 251: setDimmerLights_SwOff(1);
  4125  0204  3001               	movlw	1
  4126  0205  118A  273C         	fcall	_setDimmerLights_SwOff
  4127                           
  4128                           ;PIR_B1.c: 252: }
  4129                           ;PIR_B1.c: 255: }
  4130                           ;PIR_B1.c: 256: }
  4131                           ;PIR_B1.c: 257: }
  4132                           ;PIR_B1.c: 258: } else {
  4133  0207  0008               	return
  4134  0208                     l935:	
  4135                           
  4136                           ;PIR_B1.c: 259: if (myMain.PowerON == 1) {
  4137  0208  1283               	bcf	3,5	;RP0=0, select bank0
  4138  0209  1303               	bcf	3,6	;RP1=0, select bank0
  4139  020A  1C27               	btfss	_myMain,0
  4140  020B  0008               	return
  4141                           
  4142                           ;PIR_B1.c: 260: _PIR.Enable = 1;
  4143  020C  1683               	bsf	3,5	;RP0=1, select bank1
  4144  020D  1303               	bcf	3,6	;RP1=0, select bank1
  4145  020E  1420               	bsf	__PIR^(0+128),0
  4146                           
  4147                           ;PIR_B1.c: 261: setLED(1, 1);
  4148  020F  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0210  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0211  01D5               	clrf	setLED@command
  4151  0212  0AD5               	incf	setLED@command,f
  4152  0213  3001               	movlw	1
  4153  0214  118A  2491  118A   	fcall	_setLED
  4154                           
  4155                           ;PIR_B1.c: 272: if (getDimmerLights_Status(1) == 0) {
  4156  0217  3001               	movlw	1
  4157  0218  158A  2708  118A   	fcall	_getDimmerLights_Status
  4158  021B  3800               	iorlw	0
  4159  021C  1D03               	skipz
  4160  021D  0008               	return
  4161                           
  4162                           ;PIR_B1.c: 273: setDimmerLights_SwOn(1);
  4163  021E  3001               	movlw	1
  4164  021F  118A  2764  118A   	fcall	_setDimmerLights_SwOn
  4165                           
  4166                           ;PIR_B1.c: 274: setDimmerLights_SwOff(1);
  4167  0222  3001               	movlw	1
  4168  0223  118A  273C         	fcall	_setDimmerLights_SwOff
  4169  0225  0008               	return
  4170  0226                     __end_of_PIR_Main:	
  4171                           
  4172                           	psect	text13
  4173  0764                     __ptext13:	
  4174 ;; *************** function _setDimmerLights_SwOn *****************
  4175 ;; Defined at:
  4176 ;;		line 653 in file "../src/Dimmer_B1.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  sw              1    wreg     unsigned char 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  sw              1    2[BANK0 ] unsigned char 
  4181 ;;  idle            1    3[BANK0 ] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;		None               void
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4191 ;;      Params:         0       0       0       0
  4192 ;;      Locals:         0       2       0       0
  4193 ;;      Temps:          0       0       0       0
  4194 ;;      Totals:         0       2       0       0
  4195 ;;Total ram usage:        2 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    4
  4198 ;; This function calls:
  4199 ;;		_DimmerLights_SelectPointer
  4200 ;; This function is called by:
  4201 ;;		_PIR_Main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _setDimmerLights_SwOn
  4207  0764                     _setDimmerLights_SwOn:	
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4211                           ;setDimmerLights_SwOn@sw stored from wreg
  4212  0764  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0765  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0766  00D5               	movwf	setDimmerLights_SwOn@sw
  4215                           
  4216                           ;Dimmer_B1.c: 654: char idle = 0;
  4217  0767  01D6               	clrf	setDimmerLights_SwOn@idle
  4218                           
  4219                           ;Dimmer_B1.c: 679: DimmerLights_SelectPointer(sw);
  4220  0768  0855               	movf	setDimmerLights_SwOn@sw,w
  4221  0769  158A  268B  118A   	fcall	_DimmerLights_SelectPointer
  4222                           
  4223                           ;Dimmer_B1.c: 680: if (idle == 0) {
  4224  076C  1283               	bcf	3,5	;RP0=0, select bank0
  4225  076D  1303               	bcf	3,6	;RP1=0, select bank0
  4226  076E  08D6               	movf	setDimmerLights_SwOn@idle,f
  4227  076F  1D03               	skipz
  4228  0770  0008               	return
  4229                           
  4230                           ;Dimmer_B1.c: 681: DimmerLights->SwFlag = 1;
  4231  0771  0872               	movf	_DimmerLights,w
  4232  0772  0084               	movwf	4
  4233  0773  1383               	bcf	3,7	;select IRP bank0
  4234  0774  1400               	bsf	0,0
  4235                           
  4236                           ;Dimmer_B1.c: 682: if (DimmerLights->Status == 0) {
  4237  0775  0A72               	incf	_DimmerLights,w
  4238  0776  0084               	movwf	4
  4239  0777  1800               	btfsc	0,0
  4240  0778  2F83               	goto	l3885
  4241                           
  4242                           ;Dimmer_B1.c: 683: DimmerLights->Status = 1;
  4243  0779  0A72               	incf	_DimmerLights,w
  4244  077A  0084               	movwf	4
  4245  077B  1400               	bsf	0,0
  4246                           
  4247                           ;Dimmer_B1.c: 684: DimmerLights->Trigger = 1;
  4248  077C  0872               	movf	_DimmerLights,w
  4249  077D  0084               	movwf	4
  4250  077E  1480               	bsf	0,1
  4251                           
  4252                           ;Dimmer_B1.c: 685: DimmerLights->Switch = 1;
  4253  077F  0872               	movf	_DimmerLights,w
  4254  0780  0084               	movwf	4
  4255  0781  1500               	bsf	0,2
  4256                           
  4257                           ;Dimmer_B1.c: 686: } else {
  4258  0782  0008               	return
  4259  0783                     l3885:	
  4260                           
  4261                           ;Dimmer_B1.c: 687: DimmerLights->Status = 0;
  4262  0783  0A72               	incf	_DimmerLights,w
  4263  0784  0084               	movwf	4
  4264  0785  1000               	bcf	0,0
  4265  0786  0008               	return
  4266  0787                     __end_of_setDimmerLights_SwOn:	
  4267                           ;Dimmer_B1.c: 688: }
  4268                           ;Dimmer_B1.c: 689: ;;
  4269                           
  4270                           
  4271                           	psect	text14
  4272  0E72                     __ptext14:	
  4273 ;; *************** function _getCDS_Status *****************
  4274 ;; Defined at:
  4275 ;;		line 42 in file "../src/CDS_B1.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  status          1    0[BANK0 ] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      unsigned char 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4289 ;;      Params:         0       0       0       0
  4290 ;;      Locals:         0       1       0       0
  4291 ;;      Temps:          0       0       0       0
  4292 ;;      Totals:         0       1       0       0
  4293 ;;Total ram usage:        1 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:    3
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_PIR_Main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _getCDS_Status
  4305  0E72                     _getCDS_Status:	
  4306                           
  4307                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4311  0E72  3000               	movlw	0
  4312  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  4314  0E75  1A2D               	btfsc	__CDS,4
  4315  0E76  3001               	movlw	1
  4316  0E77  00D3               	movwf	getCDS_Status@status
  4317                           
  4318                           ;CDS_B1.c: 44: return status;
  4319  0E78  0853               	movf	getCDS_Status@status,w
  4320  0E79  0008               	return
  4321  0E7A                     __end_of_getCDS_Status:	
  4322                           
  4323                           	psect	text15
  4324  0EAF                     __ptext15:	
  4325 ;; *************** function _PIR_Initialization *****************
  4326 ;; Defined at:
  4327 ;;		line 7 in file "../src/PIR_B1.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;		None               void
  4334 ;; Registers used:
  4335 ;;		wreg
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4341 ;;      Params:         0       0       0       0
  4342 ;;      Locals:         0       0       0       0
  4343 ;;      Temps:          0       1       0       0
  4344 ;;      Totals:         0       1       0       0
  4345 ;;Total ram usage:        1 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    3
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function _PIR_Initialization
  4357  0EAF                     _PIR_Initialization:	
  4358                           
  4359                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4360                           
  4361                           ;incstack = 0
  4362                           ; Regs used in _PIR_Initialization: [wreg]
  4363  0EAF  3019               	movlw	25
  4364  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0EB2  00D3               	movwf	??_PIR_Initialization
  4367  0EB3  0853               	movf	??_PIR_Initialization,w
  4368  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  4369  0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  4370  0EB6  00CC               	movwf	(__PIR^(0+128)+44)
  4371                           
  4372                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4373  0EB7  3005               	movlw	5
  4374  0EB8  00C7               	movwf	(__PIR^(0+128)+39)
  4375  0EB9  3000               	movlw	0
  4376  0EBA  00C8               	movwf	(__PIR^(0+128)+40)
  4377  0EBB  0008               	return
  4378  0EBC                     __end_of_PIR_Initialization:	
  4379                           
  4380                           	psect	text16
  4381  0ED8                     __ptext16:	
  4382 ;; *************** function _Mcu_Initialization *****************
  4383 ;; Defined at:
  4384 ;;		line 30 in file "../src/MCU_B1.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;		None               void
  4391 ;; Registers used:
  4392 ;;		wreg, status,2, status,0, pclath, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4398 ;;      Params:         0       0       0       0
  4399 ;;      Locals:         0       0       0       0
  4400 ;;      Temps:          0       0       0       0
  4401 ;;      Totals:         0       0       0       0
  4402 ;;Total ram usage:        0 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    4
  4405 ;; This function calls:
  4406 ;;		_ADC_Set
  4407 ;;		_Fosc_Set
  4408 ;;		_IO_Set
  4409 ;;		_TMR1_Set
  4410 ;;		_WDT_Set
  4411 ;; This function is called by:
  4412 ;;		_main
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _Mcu_Initialization
  4418  0ED8                     _Mcu_Initialization:	
  4419                           
  4420                           ;MCU_B1.c: 32: Fosc_Set();
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4424  0ED8  158A  2659  158A   	fcall	_Fosc_Set
  4425                           
  4426                           ;MCU_B1.c: 34: IO_Set();
  4427  0EDB  158A  27E8  158A   	fcall	_IO_Set
  4428                           
  4429                           ;MCU_B1.c: 36: ;;
  4430                           ;MCU_B1.c: 38: TMR1_Set();
  4431  0EDE  158A  26BC  158A   	fcall	_TMR1_Set
  4432                           
  4433                           ;MCU_B1.c: 40: ADC_Set();
  4434  0EE1  158A  266B  158A   	fcall	_ADC_Set
  4435                           
  4436                           ;MCU_B1.c: 42: ;;
  4437                           ;MCU_B1.c: 44: ;;
  4438                           ;MCU_B1.c: 46: ;;
  4439                           ;MCU_B1.c: 48: ;;
  4440                           ;MCU_B1.c: 50: ;;
  4441                           ;MCU_B1.c: 52: WDT_Set();
  4442  0EE4  158A  26CA         	fcall	_WDT_Set
  4443  0EE6  0008               	return
  4444  0EE7                     __end_of_Mcu_Initialization:	
  4445                           
  4446                           	psect	text17
  4447  0ECA                     __ptext17:	
  4448 ;; *************** function _WDT_Set *****************
  4449 ;; Defined at:
  4450 ;;		line 1089 in file "../src/MCU_B1.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;		None
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4464 ;;      Params:         0       0       0       0
  4465 ;;      Locals:         0       0       0       0
  4466 ;;      Temps:          0       1       0       0
  4467 ;;      Totals:         0       1       0       0
  4468 ;;Total ram usage:        1 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    3
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_Mcu_Initialization
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function _WDT_Set
  4480  0ECA                     _WDT_Set:	
  4481                           
  4482                           ;MCU_B1.c: 1091: PSA = 1;
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in _WDT_Set: [wreg]
  4486  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  4487  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  4488  0ECC  1581               	bsf	1,3	;volatile
  4489                           
  4490                           ;MCU_B1.c: 1092: PS0 = 1;
  4491  0ECD  1401               	bsf	1,0	;volatile
  4492                           
  4493                           ;MCU_B1.c: 1093: PS1 = 1;
  4494  0ECE  1481               	bsf	1,1	;volatile
  4495                           
  4496                           ;MCU_B1.c: 1094: PS2 = 1;
  4497  0ECF  1501               	bsf	1,2	;volatile
  4498                           
  4499                           ;MCU_B1.c: 1098: WDT.Enable = 1;
  4500  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0ED2  143C               	bsf	_WDT,0
  4503                           
  4504                           ;MCU_B1.c: 1099: WDT.Timer = 10;
  4505  0ED3  300A               	movlw	10
  4506  0ED4  00D3               	movwf	??_WDT_Set
  4507  0ED5  0853               	movf	??_WDT_Set,w
  4508  0ED6  00BD               	movwf	_WDT+1
  4509  0ED7  0008               	return
  4510  0ED8                     __end_of_WDT_Set:	
  4511                           
  4512                           	psect	text18
  4513  0EBC                     __ptext18:	
  4514 ;; *************** function _TMR1_Set *****************
  4515 ;; Defined at:
  4516 ;;		line 226 in file "../src/MCU_B1.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;		None               void
  4523 ;; Registers used:
  4524 ;;		wreg
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4530 ;;      Params:         0       0       0       0
  4531 ;;      Locals:         0       0       0       0
  4532 ;;      Temps:          0       0       0       0
  4533 ;;      Totals:         0       0       0       0
  4534 ;;Total ram usage:        0 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    3
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_Mcu_Initialization
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _TMR1_Set
  4546  0EBC                     _TMR1_Set:	
  4547                           
  4548                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in _TMR1_Set: [wreg]
  4552  0EBC  3041               	movlw	65
  4553  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4554  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4555  0EBF  0090               	movwf	16	;volatile
  4556                           
  4557                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  4558  0EC0  30FA               	movlw	250
  4559  0EC1  008F               	movwf	15	;volatile
  4560                           
  4561                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  4562  0EC2  3038               	movlw	56
  4563  0EC3  008E               	movwf	14	;volatile
  4564                           
  4565                           ;MCU_B1.c: 230: TMR1IE = 1;
  4566  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  4567  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  4568  0EC6  140C               	bsf	12,0	;volatile
  4569                           
  4570                           ;MCU_B1.c: 231: PEIE = 1;
  4571  0EC7  170B               	bsf	11,6	;volatile
  4572                           
  4573                           ;MCU_B1.c: 232: GIE = 1;
  4574  0EC8  178B               	bsf	11,7	;volatile
  4575  0EC9  0008               	return
  4576  0ECA                     __end_of_TMR1_Set:	
  4577                           
  4578                           	psect	text19
  4579  0FE8                     __ptext19:	
  4580 ;; *************** function _IO_Set *****************
  4581 ;; Defined at:
  4582 ;;		line 60 in file "../src/MCU_B1.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;		None               void
  4589 ;; Registers used:
  4590 ;;		wreg, status,2
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4596 ;;      Params:         0       0       0       0
  4597 ;;      Locals:         0       0       0       0
  4598 ;;      Temps:          0       0       0       0
  4599 ;;      Totals:         0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    3
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_Mcu_Initialization
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _IO_Set
  4612  0FE8                     _IO_Set:	
  4613                           
  4614                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in _IO_Set: [wreg+status,2]
  4618  0FE8  30AF               	movlw	175
  4619  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  4620  0FEA  1303               	bcf	3,6	;RP1=0, select bank1
  4621  0FEB  0085               	movwf	5	;volatile
  4622                           
  4623                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  4624  0FEC  3001               	movlw	1
  4625  0FED  0086               	movwf	6	;volatile
  4626                           
  4627                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  4628  0FEE  0187               	clrf	7	;volatile
  4629                           
  4630                           ;MCU_B1.c: 65: ANSELA = 0b10000111;;
  4631  0FEF  3087               	movlw	135
  4632  0FF0  1683               	bsf	3,5	;RP0=1, select bank3
  4633  0FF1  1703               	bsf	3,6	;RP1=1, select bank3
  4634  0FF2  0085               	movwf	5	;volatile
  4635                           
  4636                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  4637  0FF3  3001               	movlw	1
  4638  0FF4  0086               	movwf	6	;volatile
  4639                           
  4640                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  4641  0FF5  30AF               	movlw	175
  4642  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4643  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4644  0FF8  0085               	movwf	5	;volatile
  4645                           
  4646                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  4647  0FF9  3001               	movlw	1
  4648  0FFA  0086               	movwf	6	;volatile
  4649                           
  4650                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  4651  0FFB  0187               	clrf	7	;volatile
  4652                           
  4653                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  4654  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  4655  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  4656  0FFE  0195               	clrf	21	;volatile
  4657  0FFF  0008               	return
  4658  1000                     __end_of_IO_Set:	
  4659                           
  4660                           	psect	text20
  4661  0E59                     __ptext20:	
  4662 ;; *************** function _Fosc_Set *****************
  4663 ;; Defined at:
  4664 ;;		line 56 in file "../src/MCU_B1.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;		None               void
  4671 ;; Registers used:
  4672 ;;		wreg
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4678 ;;      Params:         0       0       0       0
  4679 ;;      Locals:         0       0       0       0
  4680 ;;      Temps:          0       0       0       0
  4681 ;;      Totals:         0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    3
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_Mcu_Initialization
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _Fosc_Set
  4694  0E59                     _Fosc_Set:	
  4695                           
  4696                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  4697                           
  4698                           ;incstack = 0
  4699                           ; Regs used in _Fosc_Set: [wreg]
  4700  0E59  303C               	movlw	60
  4701  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  4702  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  4703  0E5C  0090               	movwf	16	;volatile
  4704  0E5D  0008               	return
  4705  0E5E                     __end_of_Fosc_Set:	
  4706                           
  4707                           	psect	text21
  4708  0E6B                     __ptext21:	
  4709 ;; *************** function _ADC_Set *****************
  4710 ;; Defined at:
  4711 ;;		line 425 in file "../src/MCU_B1.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		wreg
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4725 ;;      Params:         0       0       0       0
  4726 ;;      Locals:         0       0       0       0
  4727 ;;      Temps:          0       0       0       0
  4728 ;;      Totals:         0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    3
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_Mcu_Initialization
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           
  4740                           ;psect for function _ADC_Set
  4741  0E6B                     _ADC_Set:	
  4742                           
  4743                           ;MCU_B1.c: 426: ADCON1 = 0x73;
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _ADC_Set: [wreg]
  4747  0E6B  3073               	movlw	115
  4748  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  4749  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  4750  0E6E  009F               	movwf	31	;volatile
  4751                           
  4752                           ;MCU_B1.c: 427: FVRCON = 0xc1;
  4753  0E6F  30C1               	movlw	193
  4754  0E70  009D               	movwf	29	;volatile
  4755  0E71  0008               	return
  4756  0E72                     __end_of_ADC_Set:	
  4757                           
  4758                           	psect	text22
  4759  0E44                     __ptext22:	
  4760 ;; *************** function _LED_Main *****************
  4761 ;; Defined at:
  4762 ;;		line 47 in file "../src/LED_B1.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;		None               void
  4769 ;; Registers used:
  4770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4776 ;;      Params:         0       0       0       0
  4777 ;;      Locals:         0       0       0       0
  4778 ;;      Temps:          0       0       0       0
  4779 ;;      Totals:         0       0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    6
  4783 ;; This function calls:
  4784 ;;		_setPIRLED_Main
  4785 ;; This function is called by:
  4786 ;;		_main
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _LED_Main
  4792  0E44                     _LED_Main:	
  4793                           
  4794                           ;LED_B1.c: 50: setPIRLED_Main();
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4798  0E44  118A  2420         	fcall	_setPIRLED_Main
  4799  0E46  0008               	return
  4800  0E47                     __end_of_LED_Main:	
  4801                           
  4802                           	psect	text23
  4803  0420                     __ptext23:	
  4804 ;; *************** function _setPIRLED_Main *****************
  4805 ;; Defined at:
  4806 ;;		line 253 in file "../src/LED_B1.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  count           1    5[BANK0 ] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4820 ;;      Params:         0       0       0       0
  4821 ;;      Locals:         0       1       0       0
  4822 ;;      Temps:          0       1       0       0
  4823 ;;      Totals:         0       2       0       0
  4824 ;;Total ram usage:        2 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    5
  4827 ;; This function calls:
  4828 ;;		_setLED
  4829 ;; This function is called by:
  4830 ;;		_LED_Main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function _setPIRLED_Main
  4836  0420                     _setPIRLED_Main:	
  4837                           
  4838                           ;LED_B1.c: 254: char count;
  4839                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  4840                           
  4841                           ;incstack = 0
  4842                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4843  0420  1283               	bcf	3,5	;RP0=0, select bank0
  4844  0421  1303               	bcf	3,6	;RP1=0, select bank0
  4845  0422  1C32               	btfss	_PIRLED,0
  4846  0423  0008               	return
  4847                           
  4848                           ;LED_B1.c: 256: PIRLED.Time++;
  4849  0424  3001               	movlw	1
  4850  0425  07B4               	addwf	_PIRLED+2,f
  4851  0426  1803               	skipnc
  4852  0427  0AB5               	incf	_PIRLED+3,f
  4853  0428  3000               	movlw	0
  4854  0429  07B5               	addwf	_PIRLED+3,f
  4855                           
  4856                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 20) {
  4857  042A  3000               	movlw	0
  4858  042B  0235               	subwf	_PIRLED+3,w
  4859  042C  3019               	movlw	25
  4860  042D  1903               	skipnz
  4861  042E  0234               	subwf	_PIRLED+2,w
  4862  042F  1C03               	skipc
  4863  0430  0008               	return
  4864                           
  4865                           ;LED_B1.c: 258: PIRLED.Time = 0;
  4866  0431  01B4               	clrf	_PIRLED+2
  4867  0432  01B5               	clrf	_PIRLED+3
  4868                           
  4869                           ;LED_B1.c: 259: setLED(1, 0);
  4870  0433  01D5               	clrf	setLED@command
  4871  0434  3001               	movlw	1
  4872  0435  118A  2491  118A   	fcall	_setLED
  4873                           
  4874                           ;LED_B1.c: 260: setLED(2, 0);
  4875  0438  1283               	bcf	3,5	;RP0=0, select bank0
  4876  0439  1303               	bcf	3,6	;RP1=0, select bank0
  4877  043A  01D5               	clrf	setLED@command
  4878  043B  3002               	movlw	2
  4879  043C  118A  2491  118A   	fcall	_setLED
  4880                           
  4881                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  4882  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4884  0441  1CB2               	btfss	_PIRLED,1
  4885  0442  2C47               	goto	l3965
  4886                           
  4887                           ;LED_B1.c: 262: count = 4;
  4888  0443  3004               	movlw	4
  4889  0444  00D7               	movwf	??_setPIRLED_Main
  4890  0445  0857               	movf	??_setPIRLED_Main,w
  4891  0446  00D8               	movwf	setPIRLED_Main@count
  4892  0447                     l3965:	
  4893                           
  4894                           ;LED_B1.c: 263: }
  4895                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  4896  0447  1D32               	btfss	_PIRLED,2
  4897  0448  2C4D               	goto	l3969
  4898                           
  4899                           ;LED_B1.c: 265: count = 6;
  4900  0449  3006               	movlw	6
  4901  044A  00D7               	movwf	??_setPIRLED_Main
  4902  044B  0857               	movf	??_setPIRLED_Main,w
  4903  044C  00D8               	movwf	setPIRLED_Main@count
  4904  044D                     l3969:	
  4905                           
  4906                           ;LED_B1.c: 266: }
  4907                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  4908  044D  1DB2               	btfss	_PIRLED,3
  4909  044E  2C53               	goto	l3973
  4910                           
  4911                           ;LED_B1.c: 268: count = 8;
  4912  044F  3008               	movlw	8
  4913  0450  00D7               	movwf	??_setPIRLED_Main
  4914  0451  0857               	movf	??_setPIRLED_Main,w
  4915  0452  00D8               	movwf	setPIRLED_Main@count
  4916  0453                     l3973:	
  4917                           
  4918                           ;LED_B1.c: 269: }
  4919                           ;LED_B1.c: 270: PIRLED.Count++;
  4920  0453  3001               	movlw	1
  4921  0454  00D7               	movwf	??_setPIRLED_Main
  4922  0455  0857               	movf	??_setPIRLED_Main,w
  4923  0456  07B3               	addwf	_PIRLED+1,f
  4924                           
  4925                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  4926  0457  0833               	movf	_PIRLED+1,w
  4927  0458  3A01               	xorlw	1
  4928  0459  1903               	skipnz
  4929  045A  2C5F               	goto	l3979
  4930  045B  0833               	movf	_PIRLED+1,w
  4931  045C  3A02               	xorlw	2
  4932  045D  1D03               	skipz
  4933  045E  2C73               	goto	l3983
  4934  045F                     l3979:	
  4935                           
  4936                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  4937  045F  1003               	clrc
  4938  0460  1E32               	btfss	_PIRLED,4
  4939  0461  1403               	setc
  4940  0462  1C03               	btfss	3,0
  4941  0463  2C68               	goto	u4350
  4942  0464  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0465  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0466  1632               	bsf	_PIRLED,4
  4945  0467  2C6B               	goto	l3981
  4946  0468                     u4350:	
  4947  0468  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0469  1303               	bcf	3,6	;RP1=0, select bank0
  4949  046A  1232               	bcf	_PIRLED,4
  4950  046B                     l3981:	
  4951                           
  4952                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  4953  046B  3000               	movlw	0
  4954  046C  1A32               	btfsc	_PIRLED,4
  4955  046D  3001               	movlw	1
  4956  046E  00D5               	movwf	setLED@command
  4957  046F  3002               	movlw	2
  4958  0470  118A  2491         	fcall	_setLED
  4959                           
  4960                           ;LED_B1.c: 274: } else {
  4961  0472  0008               	return
  4962  0473                     l3983:	
  4963                           
  4964                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  4965  0473  1003               	clrc
  4966  0474  1283               	bcf	3,5	;RP0=0, select bank0
  4967  0475  1303               	bcf	3,6	;RP1=0, select bank0
  4968  0476  1E32               	btfss	_PIRLED,4
  4969  0477  1403               	setc
  4970  0478  1C03               	btfss	3,0
  4971  0479  2C7E               	goto	u4370
  4972  047A  1283               	bcf	3,5	;RP0=0, select bank0
  4973  047B  1303               	bcf	3,6	;RP1=0, select bank0
  4974  047C  1632               	bsf	_PIRLED,4
  4975  047D  2C81               	goto	l3985
  4976  047E                     u4370:	
  4977  047E  1283               	bcf	3,5	;RP0=0, select bank0
  4978  047F  1303               	bcf	3,6	;RP1=0, select bank0
  4979  0480  1232               	bcf	_PIRLED,4
  4980  0481                     l3985:	
  4981                           
  4982                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  4983  0481  3000               	movlw	0
  4984  0482  1A32               	btfsc	_PIRLED,4
  4985  0483  3001               	movlw	1
  4986  0484  00D5               	movwf	setLED@command
  4987  0485  3001               	movlw	1
  4988  0486  118A  2491  118A   	fcall	_setLED
  4989                           
  4990                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  4991  0489  1283               	bcf	3,5	;RP0=0, select bank0
  4992  048A  1303               	bcf	3,6	;RP1=0, select bank0
  4993  048B  0833               	movf	_PIRLED+1,w
  4994  048C  0658               	xorwf	setPIRLED_Main@count,w
  4995  048D  1D03               	skipz
  4996  048E  0008               	return
  4997                           
  4998                           ;LED_B1.c: 278: PIRLED.Count = 0;
  4999  048F  01B3               	clrf	_PIRLED+1
  5000  0490  0008               	return
  5001  0491                     __end_of_setPIRLED_Main:	
  5002                           
  5003                           	psect	text24
  5004  0EA3                     __ptext24:	
  5005 ;; *************** function _LED_Initialization *****************
  5006 ;; Defined at:
  5007 ;;		line 31 in file "../src/LED_B1.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;		None               void
  5014 ;; Registers used:
  5015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5021 ;;      Params:         0       0       0       0
  5022 ;;      Locals:         0       0       0       0
  5023 ;;      Temps:          0       0       0       0
  5024 ;;      Totals:         0       0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    6
  5028 ;; This function calls:
  5029 ;;		_setLED_Initialization
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function _LED_Initialization
  5037  0EA3                     _LED_Initialization:	
  5038                           
  5039                           ;LED_B1.c: 33: setLED_Initialization(1);
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5043  0EA3  3001               	movlw	1
  5044  0EA4  158A  272A  158A   	fcall	_setLED_Initialization
  5045                           
  5046                           ;LED_B1.c: 36: setLED_Initialization(2);
  5047  0EA7  3002               	movlw	2
  5048  0EA8  158A  272A  158A   	fcall	_setLED_Initialization
  5049                           
  5050                           ;LED_B1.c: 42: setLED_Initialization(99);
  5051  0EAB  3063               	movlw	99
  5052  0EAC  158A  272A         	fcall	_setLED_Initialization
  5053  0EAE  0008               	return
  5054  0EAF                     __end_of_LED_Initialization:	
  5055                           
  5056                           	psect	text25
  5057  0F2A                     __ptext25:	
  5058 ;; *************** function _setLED_Initialization *****************
  5059 ;; Defined at:
  5060 ;;		line 69 in file "../src/LED_B1.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  led             1    wreg     unsigned char 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  led             1    4[BANK0 ] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;		None               void
  5067 ;; Registers used:
  5068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5074 ;;      Params:         0       0       0       0
  5075 ;;      Locals:         0       1       0       0
  5076 ;;      Temps:          0       0       0       0
  5077 ;;      Totals:         0       1       0       0
  5078 ;;Total ram usage:        1 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    5
  5081 ;; This function calls:
  5082 ;;		_LedPointSelect
  5083 ;;		_setLED
  5084 ;; This function is called by:
  5085 ;;		_LED_Initialization
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           
  5090                           ;psect for function _setLED_Initialization
  5091  0F2A                     _setLED_Initialization:	
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5095                           ;setLED_Initialization@led stored from wreg
  5096  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0F2C  00D7               	movwf	setLED_Initialization@led
  5099                           
  5100                           ;LED_B1.c: 70: LedPointSelect(led);
  5101  0F2D  0857               	movf	setLED_Initialization@led,w
  5102  0F2E  118A  27C1  158A   	fcall	_LedPointSelect
  5103                           
  5104                           ;LED_B1.c: 71: LED->Enable = 1;
  5105  0F31  0873               	movf	_LED,w
  5106  0F32  0084               	movwf	4
  5107  0F33  1383               	bcf	3,7	;select IRP bank0
  5108  0F34  1400               	bsf	0,0
  5109                           
  5110                           ;LED_B1.c: 72: setLED(led, 0);
  5111  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0F37  01D5               	clrf	setLED@command
  5114  0F38  0857               	movf	setLED_Initialization@led,w
  5115  0F39  118A  2491         	fcall	_setLED
  5116  0F3B  0008               	return
  5117  0F3C                     __end_of_setLED_Initialization:	
  5118                           
  5119                           	psect	text26
  5120  035E                     __ptext26:	
  5121 ;; *************** function _Exception_Main *****************
  5122 ;; Defined at:
  5123 ;;		line 505 in file "../src/Main_B1.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  i               2    9[BANK0 ] int 
  5128 ;;  i               2    7[BANK0 ] int 
  5129 ;;  lights          1   11[BANK0 ] unsigned char 
  5130 ;;  error           1    6[BANK0 ] unsigned char 
  5131 ;;  count           1    5[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5141 ;;      Params:         0       0       0       0
  5142 ;;      Locals:         0       7       0       0
  5143 ;;      Temps:          0       1       0       0
  5144 ;;      Totals:         0       8       0       0
  5145 ;;Total ram usage:        8 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    5
  5148 ;; This function calls:
  5149 ;;		_getDimmerLights_Line
  5150 ;;		_getDimmerLights_Status
  5151 ;;		_getMain_All_Error_Status
  5152 ;;		_getMain_All_LightsStatus
  5153 ;;		_setDimmerLights_SwOff
  5154 ;;		_setLED
  5155 ;; This function is called by:
  5156 ;;		_main
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function _Exception_Main
  5162  035E                     _Exception_Main:	
  5163                           
  5164                           ;Main_B1.c: 506: char error = getMain_All_Error_Status(0);
  5165                           
  5166                           ;incstack = 0
  5167                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5168  035E  3000               	movlw	0
  5169  035F  158A  2654  118A   	fcall	_getMain_All_Error_Status
  5170  0362  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0363  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0364  00D7               	movwf	??_Exception_Main
  5173  0365  0857               	movf	??_Exception_Main,w
  5174  0366  00D9               	movwf	Exception_Main@error
  5175                           
  5176                           ;Main_B1.c: 507: char lights = 0, count = 1;
  5177  0367  01DE               	clrf	Exception_Main@lights
  5178  0368  01D8               	clrf	Exception_Main@count
  5179  0369  0AD8               	incf	Exception_Main@count,f
  5180                           
  5181                           ;Main_B1.c: 508: if (myMain.Error_Run == 1) {
  5182  036A  1DAA               	btfss	_myMain+3,3
  5183  036B  2B78               	goto	l4419
  5184                           
  5185                           ;Main_B1.c: 509: if (error == 0) {
  5186  036C  08D9               	movf	Exception_Main@error,f
  5187  036D  1D03               	skipz
  5188  036E  0008               	return
  5189                           
  5190                           ;Main_B1.c: 510: myMain.Error_Run = 0;
  5191  036F  11AA               	bcf	_myMain+3,3
  5192                           
  5193                           ;Main_B1.c: 515: setLED(99, 10);
  5194  0370  300A               	movlw	10
  5195  0371  00D7               	movwf	??_Exception_Main
  5196  0372  0857               	movf	??_Exception_Main,w
  5197  0373  00D5               	movwf	setLED@command
  5198  0374  3063               	movlw	99
  5199  0375  118A  2491         	fcall	_setLED
  5200                           
  5201                           ;Main_B1.c: 517: }
  5202                           ;Main_B1.c: 518: } else {
  5203  0377  0008               	return
  5204  0378                     l4419:	
  5205                           
  5206                           ;Main_B1.c: 519: if (error != 0) {
  5207  0378  1283               	bcf	3,5	;RP0=0, select bank0
  5208  0379  1303               	bcf	3,6	;RP1=0, select bank0
  5209  037A  0859               	movf	Exception_Main@error,w
  5210  037B  1903               	btfsc	3,2
  5211  037C  0008               	return
  5212                           
  5213                           ;Main_B1.c: 520: myMain.Error_Run = 1;
  5214  037D  15AA               	bsf	_myMain+3,3
  5215                           
  5216                           ;Main_B1.c: 523: setLED(99, 11);
  5217  037E  300B               	movlw	11
  5218  037F  00D7               	movwf	??_Exception_Main
  5219  0380  0857               	movf	??_Exception_Main,w
  5220  0381  00D5               	movwf	setLED@command
  5221  0382  3063               	movlw	99
  5222  0383  118A  2491  118A   	fcall	_setLED
  5223                           
  5224                           ;Main_B1.c: 525: switch (error) {
  5225  0386  2C14               	goto	l4463
  5226  0387                     l4425:	
  5227                           ;Main_B1.c: 526: case 2:
  5228                           
  5229                           
  5230                           ;Main_B1.c: 527: if (getMain_All_LightsStatus() == 1) {
  5231  0387  158A  2682  118A   	fcall	_getMain_All_LightsStatus
  5232                           
  5233                           ;Main_B1.c: 529: }
  5234                           ;Main_B1.c: 531: for (int i = 0; i < count; i++) {
  5235                           
  5236                           ;Main_B1.c: 528: ;;
  5237  038A  1283               	bcf	3,5	;RP0=0, select bank0
  5238  038B  1303               	bcf	3,6	;RP1=0, select bank0
  5239  038C  01DA               	clrf	Exception_Main@i
  5240  038D  01DB               	clrf	Exception_Main@i+1
  5241  038E                     l4437:	
  5242  038E  085B               	movf	Exception_Main@i+1,w
  5243  038F  3A80               	xorlw	128
  5244  0390  00D7               	movwf	??_Exception_Main
  5245  0391  3080               	movlw	128
  5246  0392  0257               	subwf	??_Exception_Main,w
  5247  0393  1D03               	skipz
  5248  0394  2B97               	goto	u5255
  5249  0395  0858               	movf	Exception_Main@count,w
  5250  0396  025A               	subwf	Exception_Main@i,w
  5251  0397                     u5255:	
  5252  0397  1803               	btfsc	3,0
  5253  0398  2BBA               	goto	u5250
  5254                           
  5255                           ;Main_B1.c: 533: if (getDimmerLights_Status(i + 1) == 1) {
  5256  0399  1283               	bcf	3,5	;RP0=0, select bank0
  5257  039A  1303               	bcf	3,6	;RP1=0, select bank0
  5258  039B  085A               	movf	Exception_Main@i,w
  5259  039C  3E01               	addlw	1
  5260  039D  158A  2708  118A   	fcall	_getDimmerLights_Status
  5261  03A0  3A01               	xorlw	1
  5262  03A1  1D03               	skipz
  5263  03A2  2BB1               	goto	l4435
  5264                           
  5265                           ;Main_B1.c: 534: DimmerLights->SwFlag = 1;
  5266  03A3  0872               	movf	_DimmerLights,w
  5267  03A4  0084               	movwf	4
  5268  03A5  1383               	bcf	3,7	;select IRP bank0
  5269  03A6  1400               	bsf	0,0
  5270                           
  5271                           ;Main_B1.c: 535: DimmerLights->Status = 0;
  5272  03A7  0A72               	incf	_DimmerLights,w
  5273  03A8  0084               	movwf	4
  5274  03A9  1000               	bcf	0,0
  5275                           
  5276                           ;Main_B1.c: 536: setDimmerLights_SwOff(i + 1);
  5277  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  5278  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  5279  03AC  085A               	movf	Exception_Main@i,w
  5280  03AD  3E01               	addlw	1
  5281  03AE  118A  273C  118A   	fcall	_setDimmerLights_SwOff
  5282  03B1                     l4435:	
  5283  03B1  3001               	movlw	1
  5284  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  5285  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  5286  03B4  07DA               	addwf	Exception_Main@i,f
  5287  03B5  1803               	skipnc
  5288  03B6  0ADB               	incf	Exception_Main@i+1,f
  5289  03B7  3000               	movlw	0
  5290  03B8  07DB               	addwf	Exception_Main@i+1,f
  5291  03B9  2B8E               	goto	l4437
  5292  03BA                     u5250:	
  5293  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  5294  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  5295  03BC  0008               	return
  5296  03BD                     l4439:	
  5297                           ;Main_B1.c: 540: case 3:
  5298                           
  5299                           ;Main_B1.c: 537: }
  5300                           ;Main_B1.c: 538: }
  5301                           ;Main_B1.c: 539: break;
  5302                           
  5303                           
  5304                           ;Main_B1.c: 542: ;;
  5305                           ;Main_B1.c: 543: lights = getDimmerLights_Line();
  5306  03BD  118A  27F7  118A   	fcall	_getDimmerLights_Line
  5307  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  5308  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  5309  03C2  00D7               	movwf	??_Exception_Main
  5310  03C3  0857               	movf	??_Exception_Main,w
  5311  03C4  00DE               	movwf	Exception_Main@lights
  5312                           
  5313                           ;Main_B1.c: 544: if (lights == 0) {
  5314  03C5  08DE               	movf	Exception_Main@lights,f
  5315  03C6  1D03               	skipz
  5316  03C7  2BF9               	goto	l4455
  5317                           
  5318                           ;Main_B1.c: 546: for (int i = 0; i < count; i++) {
  5319  03C8  01DC               	clrf	Exception_Main@i_2289
  5320  03C9  01DD               	clrf	Exception_Main@i_2289+1
  5321  03CA                     l4453:	
  5322  03CA  085D               	movf	Exception_Main@i_2289+1,w
  5323  03CB  3A80               	xorlw	128
  5324  03CC  00D7               	movwf	??_Exception_Main
  5325  03CD  3080               	movlw	128
  5326  03CE  0257               	subwf	??_Exception_Main,w
  5327  03CF  1D03               	skipz
  5328  03D0  2BD3               	goto	u5285
  5329  03D1  0858               	movf	Exception_Main@count,w
  5330  03D2  025C               	subwf	Exception_Main@i_2289,w
  5331  03D3                     u5285:	
  5332  03D3  1803               	btfsc	3,0
  5333  03D4  2BF6               	goto	u5280
  5334                           
  5335                           ;Main_B1.c: 548: if (getDimmerLights_Status(i + 1) == 1) {
  5336  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  5337  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  5338  03D7  085C               	movf	Exception_Main@i_2289,w
  5339  03D8  3E01               	addlw	1
  5340  03D9  158A  2708  118A   	fcall	_getDimmerLights_Status
  5341  03DC  3A01               	xorlw	1
  5342  03DD  1D03               	skipz
  5343  03DE  2BED               	goto	l4451
  5344                           
  5345                           ;Main_B1.c: 549: DimmerLights->SwFlag = 1;
  5346  03DF  0872               	movf	_DimmerLights,w
  5347  03E0  0084               	movwf	4
  5348  03E1  1383               	bcf	3,7	;select IRP bank0
  5349  03E2  1400               	bsf	0,0
  5350                           
  5351                           ;Main_B1.c: 550: DimmerLights->Status = 0;
  5352  03E3  0A72               	incf	_DimmerLights,w
  5353  03E4  0084               	movwf	4
  5354  03E5  1000               	bcf	0,0
  5355                           
  5356                           ;Main_B1.c: 551: setDimmerLights_SwOff(i + 1);
  5357  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  5358  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  5359  03E8  085C               	movf	Exception_Main@i_2289,w
  5360  03E9  3E01               	addlw	1
  5361  03EA  118A  273C  118A   	fcall	_setDimmerLights_SwOff
  5362  03ED                     l4451:	
  5363  03ED  3001               	movlw	1
  5364  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  5365  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  5366  03F0  07DC               	addwf	Exception_Main@i_2289,f
  5367  03F1  1803               	skipnc
  5368  03F2  0ADD               	incf	Exception_Main@i_2289+1,f
  5369  03F3  3000               	movlw	0
  5370  03F4  07DD               	addwf	Exception_Main@i_2289+1,f
  5371  03F5  2BCA               	goto	l4453
  5372  03F6                     u5280:	
  5373  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  5374  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  5375  03F8  0008               	return
  5376  03F9                     l4455:	
  5377                           ;Main_B1.c: 552: }
  5378                           ;Main_B1.c: 553: }
  5379                           ;Main_B1.c: 554: } else {
  5380                           
  5381                           
  5382                           ;Main_B1.c: 556: if (getDimmerLights_Status(lights) == 1) {
  5383  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  5384  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  5385  03FB  085E               	movf	Exception_Main@lights,w
  5386  03FC  158A  2708  118A   	fcall	_getDimmerLights_Status
  5387  03FF  3A01               	xorlw	1
  5388  0400  1903               	btfsc	3,2
  5389  0401  2C05               	goto	l4457
  5390  0402  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0403  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0404  0008               	return
  5393  0405                     l4457:	
  5394                           
  5395                           ;Main_B1.c: 558: DimmerLights->SwFlag = 1;
  5396  0405  0872               	movf	_DimmerLights,w
  5397  0406  0084               	movwf	4
  5398  0407  1383               	bcf	3,7	;select IRP bank0
  5399  0408  1400               	bsf	0,0
  5400                           
  5401                           ;Main_B1.c: 559: DimmerLights->Status = 0;
  5402  0409  0A72               	incf	_DimmerLights,w
  5403  040A  0084               	movwf	4
  5404  040B  1000               	bcf	0,0
  5405                           
  5406                           ;Main_B1.c: 560: setDimmerLights_SwOff(lights);
  5407  040C  1283               	bcf	3,5	;RP0=0, select bank0
  5408  040D  1303               	bcf	3,6	;RP1=0, select bank0
  5409  040E  085E               	movf	Exception_Main@lights,w
  5410  040F  118A  273C         	fcall	_setDimmerLights_SwOff
  5411  0411  1283               	bcf	3,5	;RP0=0, select bank0
  5412  0412  1303               	bcf	3,6	;RP1=0, select bank0
  5413  0413  0008               	return
  5414  0414                     l4463:	
  5415                           ;Main_B1.c: 564: }
  5416                           
  5417                           ;Main_B1.c: 561: }
  5418                           ;Main_B1.c: 562: }
  5419                           ;Main_B1.c: 563: break;
  5420                           
  5421  0414  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0415  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0416  0859               	movf	Exception_Main@error,w
  5424                           
  5425                           ; Switch size 1, requested type "space"
  5426                           ; Number of cases is 2, Range of values is 2 to 3
  5427                           ; switch strategies available:
  5428                           ; Name         Instructions Cycles
  5429                           ; simple_byte            7     4 (average)
  5430                           ; direct_byte           14    10 (fixed)
  5431                           ; jumptable            263     9 (fixed)
  5432                           ;	Chosen strategy is simple_byte
  5433  0417  3A02               	xorlw	2	; case 2
  5434  0418  1903               	skipnz
  5435  0419  2B87               	goto	l4425
  5436  041A  3A01               	xorlw	1	; case 3
  5437  041B  1903               	skipnz
  5438  041C  2BBD               	goto	l4439
  5439  041D  2C1F               	goto	l795
  5440  041E  0008               	return
  5441  041F                     l795:	
  5442  041F  0008               	return
  5443  0420                     __end_of_Exception_Main:	
  5444                           
  5445                           	psect	text27
  5446  073C                     __ptext27:	
  5447 ;; *************** function _setDimmerLights_SwOff *****************
  5448 ;; Defined at:
  5449 ;;		line 694 in file "../src/Dimmer_B1.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  sw              1    wreg     unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  sw              1    2[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;		None               void
  5456 ;; Registers used:
  5457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5463 ;;      Params:         0       0       0       0
  5464 ;;      Locals:         0       1       0       0
  5465 ;;      Temps:          0       0       0       0
  5466 ;;      Totals:         0       1       0       0
  5467 ;;Total ram usage:        1 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    4
  5470 ;; This function calls:
  5471 ;;		_DimmerLights_SelectPointer
  5472 ;; This function is called by:
  5473 ;;		_Exception_Main
  5474 ;;		_PIR_Main
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           
  5479                           ;psect for function _setDimmerLights_SwOff
  5480  073C                     _setDimmerLights_SwOff:	
  5481                           
  5482                           ;incstack = 0
  5483                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5484                           ;setDimmerLights_SwOff@sw stored from wreg
  5485  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5486  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5487  073E  00D5               	movwf	setDimmerLights_SwOff@sw
  5488                           
  5489                           ;Dimmer_B1.c: 695: DimmerLights_SelectPointer(sw);
  5490  073F  0855               	movf	setDimmerLights_SwOff@sw,w
  5491  0740  158A  268B  118A   	fcall	_DimmerLights_SelectPointer
  5492                           
  5493                           ;Dimmer_B1.c: 697: if (DimmerLights->SwFlag == 1) {
  5494  0743  0872               	movf	_DimmerLights,w
  5495  0744  0084               	movwf	4
  5496  0745  1383               	bcf	3,7	;select IRP bank0
  5497  0746  1C00               	btfss	0,0
  5498  0747  0008               	return
  5499                           
  5500                           ;Dimmer_B1.c: 698: DimmerLights->SwFlag = 0;
  5501  0748  0872               	movf	_DimmerLights,w
  5502  0749  0084               	movwf	4
  5503  074A  1000               	bcf	0,0
  5504                           
  5505                           ;Dimmer_B1.c: 699: if (DimmerLights->Status == 1) {
  5506  074B  0A72               	incf	_DimmerLights,w
  5507  074C  0084               	movwf	4
  5508  074D  1C00               	btfss	0,0
  5509  074E  2F5D               	goto	l3897
  5510                           
  5511                           ;Dimmer_B1.c: 700: if (DimmerLights->DimmingSwFlag == 1) {
  5512  074F  0872               	movf	_DimmerLights,w
  5513  0750  0084               	movwf	4
  5514  0751  1D80               	btfss	0,3
  5515  0752  0008               	return
  5516                           
  5517                           ;Dimmer_B1.c: 701: DimmerLights->DimmingSwFlag = 0;
  5518  0753  0872               	movf	_DimmerLights,w
  5519  0754  0084               	movwf	4
  5520  0755  1180               	bcf	0,3
  5521                           
  5522                           ;Dimmer_B1.c: 703: DimmerLights->DimmingTrigger = 1;
  5523  0756  0872               	movf	_DimmerLights,w
  5524  0757  0084               	movwf	4
  5525  0758  1600               	bsf	0,4
  5526                           
  5527                           ;Dimmer_B1.c: 704: DimmerLights->DimmingSwitch = 0;
  5528  0759  0872               	movf	_DimmerLights,w
  5529  075A  0084               	movwf	4
  5530  075B  1280               	bcf	0,5
  5531                           
  5532                           ;Dimmer_B1.c: 705: }
  5533                           ;Dimmer_B1.c: 706: } else {
  5534  075C  0008               	return
  5535  075D                     l3897:	
  5536                           
  5537                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = 1;
  5538  075D  0872               	movf	_DimmerLights,w
  5539  075E  0084               	movwf	4
  5540  075F  1480               	bsf	0,1
  5541                           
  5542                           ;Dimmer_B1.c: 709: DimmerLights->Switch = 0;
  5543  0760  0872               	movf	_DimmerLights,w
  5544  0761  0084               	movwf	4
  5545  0762  1100               	bcf	0,2
  5546  0763  0008               	return
  5547  0764                     __end_of_setDimmerLights_SwOff:	
  5548                           
  5549                           	psect	text28
  5550  0E54                     __ptext28:	
  5551 ;; *************** function _getMain_All_Error_Status *****************
  5552 ;; Defined at:
  5553 ;;		line 424 in file "../src/Main_B1.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  command         1    wreg     unsigned char 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  command         1    0[COMMON] unsigned char 
  5558 ;;  status          1    0[BANK0 ] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      unsigned char 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5568 ;;      Params:         0       0       0       0
  5569 ;;      Locals:         0       1       0       0
  5570 ;;      Temps:          0       0       0       0
  5571 ;;      Totals:         0       1       0       0
  5572 ;;Total ram usage:        1 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    3
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_Exception_Main
  5579 ;;		_PIR_Main
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function _getMain_All_Error_Status
  5585  0E54                     _getMain_All_Error_Status:	
  5586                           
  5587                           ;Main_B1.c: 425: char status = 0;
  5588                           
  5589                           ;incstack = 0
  5590                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2]
  5591  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  5592  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  5593  0E56  01D3               	clrf	getMain_All_Error_Status@status
  5594                           
  5595                           ;Main_B1.c: 461: return status;
  5596  0E57  0853               	movf	getMain_All_Error_Status@status,w
  5597  0E58  0008               	return
  5598  0E59                     __end_of_getMain_All_Error_Status:	
  5599                           
  5600                           	psect	text29
  5601  0F08                     __ptext29:	
  5602 ;; *************** function _getDimmerLights_Status *****************
  5603 ;; Defined at:
  5604 ;;		line 1003 in file "../src/Dimmer_B1.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  lights          1    wreg     unsigned char 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  lights          1    2[BANK0 ] unsigned char 
  5609 ;;  status          1    3[BANK0 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      unsigned char 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5619 ;;      Params:         0       0       0       0
  5620 ;;      Locals:         0       2       0       0
  5621 ;;      Temps:          0       0       0       0
  5622 ;;      Totals:         0       2       0       0
  5623 ;;Total ram usage:        2 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    4
  5626 ;; This function calls:
  5627 ;;		_DimmerLights_SelectPointer
  5628 ;; This function is called by:
  5629 ;;		_Exception_Main
  5630 ;;		_PIR_Main
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _getDimmerLights_Status
  5636  0F08                     _getDimmerLights_Status:	
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5640                           ;getDimmerLights_Status@lights stored from wreg
  5641  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0F0A  00D5               	movwf	getDimmerLights_Status@lights
  5644                           
  5645                           ;Dimmer_B1.c: 1004: DimmerLights_SelectPointer(lights);
  5646  0F0B  0855               	movf	getDimmerLights_Status@lights,w
  5647  0F0C  158A  268B         	fcall	_DimmerLights_SelectPointer
  5648                           
  5649                           ;Dimmer_B1.c: 1005: char status = DimmerLights->Status == 1 ? 1 : 0;
  5650  0F0E  0A72               	incf	_DimmerLights,w
  5651  0F0F  0084               	movwf	4
  5652  0F10  3000               	movlw	0
  5653  0F11  1383               	bcf	3,7	;select IRP bank0
  5654  0F12  1800               	btfsc	0,0
  5655  0F13  3001               	movlw	1
  5656  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0F16  00D6               	movwf	getDimmerLights_Status@status
  5659                           
  5660                           ;Dimmer_B1.c: 1006: return status;
  5661  0F17  0856               	movf	getDimmerLights_Status@status,w
  5662  0F18  0008               	return
  5663  0F19                     __end_of_getDimmerLights_Status:	
  5664                           
  5665                           	psect	text30
  5666  07F7                     __ptext30:	
  5667 ;; *************** function _getDimmerLights_Line *****************
  5668 ;; Defined at:
  5669 ;;		line 975 in file "../src/Dimmer_B1.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  line            1    0[BANK0 ] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      unsigned char 
  5676 ;; Registers used:
  5677 ;;		wreg, status,2
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5683 ;;      Params:         0       0       0       0
  5684 ;;      Locals:         0       1       0       0
  5685 ;;      Temps:          0       0       0       0
  5686 ;;      Totals:         0       1       0       0
  5687 ;;Total ram usage:        1 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    3
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_Exception_Main
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           
  5698                           ;psect for function _getDimmerLights_Line
  5699  07F7                     _getDimmerLights_Line:	
  5700                           
  5701                           ;Dimmer_B1.c: 976: char line = 0;
  5702                           
  5703                           ;incstack = 0
  5704                           ; Regs used in _getDimmerLights_Line: [wreg+status,2]
  5705  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5706  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5707  07F9  01D3               	clrf	getDimmerLights_Line@line
  5708                           
  5709                           ;Dimmer_B1.c: 978: if (DimmerLights1.Line == 1) {
  5710  07FA  1CC0               	btfss	_DimmerLights1+1,1
  5711  07FB  2FFE               	goto	l3933
  5712                           
  5713                           ;Dimmer_B1.c: 979: line = 1;
  5714  07FC  01D3               	clrf	getDimmerLights_Line@line
  5715  07FD  0AD3               	incf	getDimmerLights_Line@line,f
  5716  07FE                     l3933:	
  5717                           
  5718                           ;Dimmer_B1.c: 980: }
  5719                           ;Dimmer_B1.c: 992: return line;
  5720  07FE  0853               	movf	getDimmerLights_Line@line,w
  5721  07FF  0008               	return
  5722  0800                     __end_of_getDimmerLights_Line:	
  5723                           
  5724                           	psect	text31
  5725  0E4B                     __ptext31:	
  5726 ;; *************** function _DimmerLights_Main *****************
  5727 ;; Defined at:
  5728 ;;		line 736 in file "../src/Dimmer_B1.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;		None
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;		None               void
  5735 ;; Registers used:
  5736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5742 ;;      Params:         0       0       0       0
  5743 ;;      Locals:         0       0       0       0
  5744 ;;      Temps:          0       0       0       0
  5745 ;;      Totals:         0       0       0       0
  5746 ;;Total ram usage:        0 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    7
  5749 ;; This function calls:
  5750 ;;		_setDimmerLights_Main
  5751 ;; This function is called by:
  5752 ;;		_main
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function _DimmerLights_Main
  5758  0E4B                     _DimmerLights_Main:	
  5759                           
  5760                           ;Dimmer_B1.c: 747: setDimmerLights_Main(1);
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5764  0E4B  3001               	movlw	1
  5765  0E4C  118A  2502         	fcall	_setDimmerLights_Main
  5766  0E4E  0008               	return
  5767  0E4F                     __end_of_DimmerLights_Main:	
  5768                           
  5769                           	psect	text32
  5770  0502                     __ptext32:	
  5771 ;; *************** function _setDimmerLights_Main *****************
  5772 ;; Defined at:
  5773 ;;		line 761 in file "../src/Dimmer_B1.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  lights          1    wreg     unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  lights          1    7[BANK0 ] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;		None               void
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5787 ;;      Params:         0       0       0       0
  5788 ;;      Locals:         0       1       0       0
  5789 ;;      Temps:          0       0       0       0
  5790 ;;      Totals:         0       1       0       0
  5791 ;;Total ram usage:        1 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    6
  5794 ;; This function calls:
  5795 ;;		_DimmerLights_SelectPointer
  5796 ;;		_getDimmerLights_Allow_Condition
  5797 ;;		_getMain_All_LightsStatus
  5798 ;;		_setDimmerLights_Dimming
  5799 ;;		_setDimmerLights_OnOff
  5800 ;; This function is called by:
  5801 ;;		_DimmerLights_Main
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function _setDimmerLights_Main
  5807  0502                     _setDimmerLights_Main:	
  5808                           
  5809                           ;incstack = 0
  5810                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5811                           ;setDimmerLights_Main@lights stored from wreg
  5812  0502  1283               	bcf	3,5	;RP0=0, select bank0
  5813  0503  1303               	bcf	3,6	;RP1=0, select bank0
  5814  0504  00DA               	movwf	setDimmerLights_Main@lights
  5815                           
  5816                           ;Dimmer_B1.c: 763: DimmerLights_SelectPointer(lights);
  5817  0505  085A               	movf	setDimmerLights_Main@lights,w
  5818  0506  158A  268B  118A   	fcall	_DimmerLights_SelectPointer
  5819                           
  5820                           ;Dimmer_B1.c: 764: if (DimmerLights->Trigger == 1) {
  5821  0509  0872               	movf	_DimmerLights,w
  5822  050A  0084               	movwf	4
  5823  050B  1383               	bcf	3,7	;select IRP bank0
  5824  050C  1C80               	btfss	0,1
  5825  050D  2D2E               	goto	l3911
  5826                           
  5827                           ;Dimmer_B1.c: 765: if (getDimmerLights_Allow_Condition(lights) == 0) {
  5828  050E  1283               	bcf	3,5	;RP0=0, select bank0
  5829  050F  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0510  085A               	movf	setDimmerLights_Main@lights,w
  5831  0511  158A  264F  118A   	fcall	_getDimmerLights_Allow_Condition
  5832  0514  3800               	iorlw	0
  5833  0515  1D03               	skipz
  5834  0516  0008               	return
  5835                           
  5836                           ;Dimmer_B1.c: 766: DimmerLights->Trigger = 0;
  5837  0517  0872               	movf	_DimmerLights,w
  5838  0518  0084               	movwf	4
  5839  0519  1383               	bcf	3,7	;select IRP bank0
  5840  051A  1080               	bcf	0,1
  5841                           
  5842                           ;Dimmer_B1.c: 767: if (DimmerLights->Switch == 1) {
  5843  051B  0872               	movf	_DimmerLights,w
  5844  051C  0084               	movwf	4
  5845  051D  1D00               	btfss	0,2
  5846  051E  2D27               	goto	l3909
  5847                           
  5848                           ;Dimmer_B1.c: 768: setDimmerLights_OnOff(lights, 1);
  5849  051F  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0520  1303               	bcf	3,6	;RP1=0, select bank0
  5851  0521  01D7               	clrf	setDimmerLights_OnOff@command
  5852  0522  0AD7               	incf	setDimmerLights_OnOff@command,f
  5853  0523  085A               	movf	setDimmerLights_Main@lights,w
  5854  0524  118A  2658         	fcall	_setDimmerLights_OnOff
  5855                           
  5856                           ;Dimmer_B1.c: 769: } else {
  5857  0526  0008               	return
  5858  0527                     l3909:	
  5859                           
  5860                           ;Dimmer_B1.c: 770: setDimmerLights_OnOff(lights, 0);
  5861  0527  1283               	bcf	3,5	;RP0=0, select bank0
  5862  0528  1303               	bcf	3,6	;RP1=0, select bank0
  5863  0529  01D7               	clrf	setDimmerLights_OnOff@command
  5864  052A  085A               	movf	setDimmerLights_Main@lights,w
  5865  052B  118A  2658         	fcall	_setDimmerLights_OnOff
  5866                           
  5867                           ;Dimmer_B1.c: 771: }
  5868                           ;Dimmer_B1.c: 772: }
  5869                           ;Dimmer_B1.c: 773: } else {
  5870  052D  0008               	return
  5871  052E                     l3911:	
  5872                           
  5873                           ;Dimmer_B1.c: 774: if (getMain_All_LightsStatus() == 1) {
  5874  052E  158A  2682  118A   	fcall	_getMain_All_LightsStatus
  5875  0531  3A01               	xorlw	1
  5876  0532  1D03               	skipz
  5877  0533  2D59               	goto	l3923
  5878                           
  5879                           ;Dimmer_B1.c: 775: if (DimmerLights->DimmingTrigger == 1) {
  5880  0534  0872               	movf	_DimmerLights,w
  5881  0535  0084               	movwf	4
  5882  0536  1383               	bcf	3,7	;select IRP bank0
  5883  0537  1E00               	btfss	0,4
  5884  0538  0008               	return
  5885                           
  5886                           ;Dimmer_B1.c: 776: if (getDimmerLights_Allow_Condition(lights) == 0) {
  5887  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5888  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5889  053B  085A               	movf	setDimmerLights_Main@lights,w
  5890  053C  158A  264F  118A   	fcall	_getDimmerLights_Allow_Condition
  5891  053F  3800               	iorlw	0
  5892  0540  1D03               	skipz
  5893  0541  0008               	return
  5894                           
  5895                           ;Dimmer_B1.c: 777: DimmerLights->DimmingTrigger = 0;
  5896  0542  0872               	movf	_DimmerLights,w
  5897  0543  0084               	movwf	4
  5898  0544  1383               	bcf	3,7	;select IRP bank0
  5899  0545  1200               	bcf	0,4
  5900                           
  5901                           ;Dimmer_B1.c: 778: if (DimmerLights->DimmingSwitch == 1) {
  5902  0546  0872               	movf	_DimmerLights,w
  5903  0547  0084               	movwf	4
  5904  0548  1E80               	btfss	0,5
  5905  0549  2D52               	goto	l3921
  5906                           
  5907                           ;Dimmer_B1.c: 779: setDimmerLights_Dimming(lights, 1);
  5908  054A  1283               	bcf	3,5	;RP0=0, select bank0
  5909  054B  1303               	bcf	3,6	;RP1=0, select bank0
  5910  054C  01D6               	clrf	setDimmerLights_Dimming@status
  5911  054D  0AD6               	incf	setDimmerLights_Dimming@status,f
  5912  054E  085A               	movf	setDimmerLights_Main@lights,w
  5913  054F  158A  27B9         	fcall	_setDimmerLights_Dimming
  5914                           
  5915                           ;Dimmer_B1.c: 780: } else {
  5916  0551  0008               	return
  5917  0552                     l3921:	
  5918                           
  5919                           ;Dimmer_B1.c: 781: setDimmerLights_Dimming(lights, 0);
  5920  0552  1283               	bcf	3,5	;RP0=0, select bank0
  5921  0553  1303               	bcf	3,6	;RP1=0, select bank0
  5922  0554  01D6               	clrf	setDimmerLights_Dimming@status
  5923  0555  085A               	movf	setDimmerLights_Main@lights,w
  5924  0556  158A  27B9         	fcall	_setDimmerLights_Dimming
  5925                           
  5926                           ;Dimmer_B1.c: 782: }
  5927                           ;Dimmer_B1.c: 783: }
  5928                           ;Dimmer_B1.c: 784: }
  5929                           ;Dimmer_B1.c: 785: } else {
  5930  0558  0008               	return
  5931  0559                     l3923:	
  5932                           
  5933                           ;Dimmer_B1.c: 786: if (DimmerLights->DimmingTrigger == 1) {
  5934  0559  0872               	movf	_DimmerLights,w
  5935  055A  0084               	movwf	4
  5936  055B  1383               	bcf	3,7	;select IRP bank0
  5937  055C  1E00               	btfss	0,4
  5938  055D  0008               	return
  5939                           
  5940                           ;Dimmer_B1.c: 787: DimmerLights->DimmingTrigger = 0;
  5941  055E  0872               	movf	_DimmerLights,w
  5942  055F  0084               	movwf	4
  5943  0560  1200               	bcf	0,4
  5944  0561  0008               	return
  5945  0562                     __end_of_setDimmerLights_Main:	
  5946                           
  5947                           	psect	text33
  5948  0658                     __ptext33:	
  5949 ;; *************** function _setDimmerLights_OnOff *****************
  5950 ;; Defined at:
  5951 ;;		line 795 in file "../src/Dimmer_B1.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  lights          1    wreg     unsigned char 
  5954 ;;  command         1    4[BANK0 ] unsigned char 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  lights          1    6[BANK0 ] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;		None               void
  5959 ;; Registers used:
  5960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5966 ;;      Params:         0       1       0       0
  5967 ;;      Locals:         0       1       0       0
  5968 ;;      Temps:          0       1       0       0
  5969 ;;      Totals:         0       3       0       0
  5970 ;;Total ram usage:        3 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    5
  5973 ;; This function calls:
  5974 ;;		_getCmd_Status
  5975 ;;		_getMain_All_LightsStatus
  5976 ;;		_setCmd_Status
  5977 ;;		_setDimmerIntr_ControlStatus
  5978 ;;		_setDimmerIntr_DimmingValue
  5979 ;;		_setDimmerIntr_Dimming_RF
  5980 ;;		_setLED
  5981 ;; This function is called by:
  5982 ;;		_setDimmerLights_Main
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           
  5987                           ;psect for function _setDimmerLights_OnOff
  5988  0658                     _setDimmerLights_OnOff:	
  5989                           
  5990                           ;incstack = 0
  5991                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5992                           ;setDimmerLights_OnOff@lights stored from wreg
  5993  0658  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0659  1303               	bcf	3,6	;RP1=0, select bank0
  5995  065A  00D9               	movwf	setDimmerLights_OnOff@lights
  5996                           
  5997                           ;Dimmer_B1.c: 797: if (command == 1) {
  5998  065B  0857               	movf	setDimmerLights_OnOff@command,w
  5999  065C  3A01               	xorlw	1
  6000  065D  1D03               	skipz
  6001  065E  2E78               	goto	l3821
  6002                           
  6003                           ;Dimmer_B1.c: 798: setDimmerIntr_ControlStatus(lights, 1);
  6004  065F  01D3               	clrf	setDimmerIntr_ControlStatus@command
  6005  0660  0AD3               	incf	setDimmerIntr_ControlStatus@command,f
  6006  0661  0859               	movf	setDimmerLights_OnOff@lights,w
  6007  0662  158A  278D  118A   	fcall	_setDimmerIntr_ControlStatus
  6008                           
  6009                           ;Dimmer_B1.c: 808: setDimmerIntr_DimmingValue(lights, ((char)((100-10)*0.8)));
  6010  0665  3048               	movlw	72
  6011  0666  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0667  1303               	bcf	3,6	;RP1=0, select bank0
  6013  0668  00D8               	movwf	??_setDimmerLights_OnOff
  6014  0669  0858               	movf	??_setDimmerLights_OnOff,w
  6015  066A  00D3               	movwf	setDimmerIntr_DimmingValue@value
  6016  066B  0859               	movf	setDimmerLights_OnOff@lights,w
  6017  066C  158A  2697  118A   	fcall	_setDimmerIntr_DimmingValue
  6018                           
  6019                           ;Dimmer_B1.c: 809: ;;
  6020                           ;Dimmer_B1.c: 810: setDimmerIntr_Dimming_RF(lights, 1);
  6021  066F  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0670  1303               	bcf	3,6	;RP1=0, select bank0
  6023  0671  01D3               	clrf	setDimmerIntr_Dimming_RF@command
  6024  0672  0AD3               	incf	setDimmerIntr_Dimming_RF@command,f
  6025  0673  0859               	movf	setDimmerLights_OnOff@lights,w
  6026  0674  158A  27A3  118A   	fcall	_setDimmerIntr_Dimming_RF
  6027                           
  6028                           ;Dimmer_B1.c: 831: } else if (command == 0) {
  6029  0677  2E8A               	goto	l3827
  6030  0678                     l3821:	
  6031  0678  1283               	bcf	3,5	;RP0=0, select bank0
  6032  0679  1303               	bcf	3,6	;RP1=0, select bank0
  6033  067A  08D7               	movf	setDimmerLights_OnOff@command,f
  6034  067B  1D03               	skipz
  6035  067C  2E8A               	goto	l3827
  6036                           
  6037                           ;Dimmer_B1.c: 832: setDimmerIntr_ControlStatus(lights, 0);
  6038  067D  01D3               	clrf	setDimmerIntr_ControlStatus@command
  6039  067E  0859               	movf	setDimmerLights_OnOff@lights,w
  6040  067F  158A  278D  118A   	fcall	_setDimmerIntr_ControlStatus
  6041                           
  6042                           ;Dimmer_B1.c: 833: setLED(lights, 1);
  6043  0682  1283               	bcf	3,5	;RP0=0, select bank0
  6044  0683  1303               	bcf	3,6	;RP1=0, select bank0
  6045  0684  01D5               	clrf	setLED@command
  6046  0685  0AD5               	incf	setLED@command,f
  6047  0686  0859               	movf	setDimmerLights_OnOff@lights,w
  6048  0687  118A  2491  118A   	fcall	_setLED
  6049  068A                     l3827:	
  6050                           ;Dimmer_B1.c: 834: ;;
  6051                           
  6052                           
  6053                           ;Dimmer_B1.c: 860: }
  6054                           ;Dimmer_B1.c: 863: ;;
  6055                           ;Dimmer_B1.c: 865: if (getCmd_Status(1) == 1) {
  6056  068A  3001               	movlw	1
  6057  068B  158A  26F7  118A   	fcall	_getCmd_Status
  6058  068E  3A01               	xorlw	1
  6059  068F  1D03               	skipz
  6060  0690  0008               	return
  6061                           
  6062                           ;Dimmer_B1.c: 866: if (getMain_All_LightsStatus() == 0) {
  6063  0691  158A  2682  118A   	fcall	_getMain_All_LightsStatus
  6064  0694  3800               	iorlw	0
  6065  0695  1D03               	skipz
  6066  0696  0008               	return
  6067                           
  6068                           ;Dimmer_B1.c: 867: setCmd_Status(1, 0);
  6069  0697  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0698  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0699  01D3               	clrf	setCmd_Status@cmd
  6072  069A  3001               	movlw	1
  6073  069B  158A  2777         	fcall	_setCmd_Status
  6074                           
  6075                           ;Dimmer_B1.c: 871: }
  6076                           ;Dimmer_B1.c: 872: } else {
  6077                           
  6078                           ;Dimmer_B1.c: 868: ;;
  6079                           ;Dimmer_B1.c: 869: ;;
  6080                           ;Dimmer_B1.c: 870: ;;
  6081  069D  0008               	return
  6082  069E                     __end_of_setDimmerLights_OnOff:	
  6083                           ;Dimmer_B1.c: 873: ;;
  6084                           
  6085                           
  6086                           	psect	text34
  6087  0491                     __ptext34:	
  6088 ;; *************** function _setLED *****************
  6089 ;; Defined at:
  6090 ;;		line 76 in file "../src/LED_B1.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  led             1    wreg     unsigned char 
  6093 ;;  command         1    2[BANK0 ] unsigned char 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  led             1    3[BANK0 ] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;		None               void
  6098 ;; Registers used:
  6099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6105 ;;      Params:         0       1       0       0
  6106 ;;      Locals:         0       1       0       0
  6107 ;;      Temps:          0       0       0       0
  6108 ;;      Totals:         0       2       0       0
  6109 ;;Total ram usage:        2 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    4
  6112 ;; This function calls:
  6113 ;;		_LedPointSelect
  6114 ;; This function is called by:
  6115 ;;		_setDimmerLights_OnOff
  6116 ;;		_setLED_Initialization
  6117 ;;		_setPIRLED_Main
  6118 ;;		_Exception_Main
  6119 ;;		_PIR_Main
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           
  6124                           ;psect for function _setLED
  6125  0491                     _setLED:	
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6129                           ;setLED@led stored from wreg
  6130  0491  1283               	bcf	3,5	;RP0=0, select bank0
  6131  0492  1303               	bcf	3,6	;RP1=0, select bank0
  6132  0493  00D6               	movwf	setLED@led
  6133                           
  6134                           ;LED_B1.c: 77: LedPointSelect(led);
  6135  0494  0856               	movf	setLED@led,w
  6136  0495  118A  27C1  118A   	fcall	_LedPointSelect
  6137                           
  6138                           ;LED_B1.c: 78: if (command == 0) {
  6139  0498  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0499  1303               	bcf	3,6	;RP1=0, select bank0
  6141  049A  08D5               	movf	setLED@command,f
  6142  049B  1D03               	skipz
  6143  049C  2CAA               	goto	l3721
  6144                           
  6145                           ;LED_B1.c: 80: if (led == 1) {
  6146  049D  0856               	movf	setLED@led,w
  6147  049E  3A01               	xorlw	1
  6148  049F  1D03               	skipz
  6149  04A0  2CA2               	goto	l3713
  6150                           
  6151                           ;LED_B1.c: 84: RB4 = 1;
  6152  04A1  1606               	bsf	6,4	;volatile
  6153  04A2                     l3713:	
  6154                           
  6155                           ;LED_B1.c: 86: }
  6156                           ;LED_B1.c: 89: if (led == 2) {
  6157  04A2  0856               	movf	setLED@led,w
  6158  04A3  3A02               	xorlw	2
  6159  04A4  1903               	btfsc	3,2
  6160                           
  6161                           ;LED_B1.c: 93: RB5 = 1;
  6162  04A5  1686               	bsf	6,5	;volatile
  6163                           
  6164                           ;LED_B1.c: 95: }
  6165                           ;LED_B1.c: 107: if (led == 99) {
  6166  04A6  0856               	movf	setLED@led,w
  6167  04A7  3A63               	xorlw	99
  6168  04A8  1903               	btfsc	3,2
  6169                           
  6170                           ;LED_B1.c: 111: RB3 = 1;
  6171  04A9  1586               	bsf	6,3	;volatile
  6172  04AA                     l3721:	
  6173                           
  6174                           ;LED_B1.c: 113: }
  6175                           ;LED_B1.c: 115: }
  6176                           ;LED_B1.c: 116: if (command == 1) {
  6177  04AA  0855               	movf	setLED@command,w
  6178  04AB  3A01               	xorlw	1
  6179  04AC  1D03               	skipz
  6180  04AD  2CBB               	goto	l3735
  6181                           
  6182                           ;LED_B1.c: 118: if (led == 1) {
  6183  04AE  0856               	movf	setLED@led,w
  6184  04AF  3A01               	xorlw	1
  6185  04B0  1D03               	skipz
  6186  04B1  2CB3               	goto	l3727
  6187                           
  6188                           ;LED_B1.c: 122: RB4 = 0;
  6189  04B2  1206               	bcf	6,4	;volatile
  6190  04B3                     l3727:	
  6191                           
  6192                           ;LED_B1.c: 124: }
  6193                           ;LED_B1.c: 127: if (led == 2) {
  6194  04B3  0856               	movf	setLED@led,w
  6195  04B4  3A02               	xorlw	2
  6196  04B5  1903               	btfsc	3,2
  6197                           
  6198                           ;LED_B1.c: 131: RB5 = 0;
  6199  04B6  1286               	bcf	6,5	;volatile
  6200                           
  6201                           ;LED_B1.c: 133: }
  6202                           ;LED_B1.c: 145: if (led == 99) {
  6203  04B7  0856               	movf	setLED@led,w
  6204  04B8  3A63               	xorlw	99
  6205  04B9  1903               	btfsc	3,2
  6206                           
  6207                           ;LED_B1.c: 149: RB3 = 0;
  6208  04BA  1186               	bcf	6,3	;volatile
  6209  04BB                     l3735:	
  6210                           
  6211                           ;LED_B1.c: 151: }
  6212                           ;LED_B1.c: 153: }
  6213                           ;LED_B1.c: 154: if (command == 10) {
  6214  04BB  0855               	movf	setLED@command,w
  6215  04BC  3A0A               	xorlw	10
  6216  04BD  1D03               	skipz
  6217  04BE  2CD6               	goto	l3753
  6218                           
  6219                           ;LED_B1.c: 155: LED->GO = 0;
  6220  04BF  0873               	movf	_LED,w
  6221  04C0  0084               	movwf	4
  6222  04C1  1383               	bcf	3,7	;select IRP bank0
  6223  04C2  1080               	bcf	0,1
  6224                           
  6225                           ;LED_B1.c: 156: LED->Time = 0;
  6226  04C3  0A73               	incf	_LED,w
  6227  04C4  0084               	movwf	4
  6228  04C5  0180               	clrf	0
  6229  04C6  0A84               	incf	4,f
  6230  04C7  0180               	clrf	0
  6231                           
  6232                           ;LED_B1.c: 158: if (led == 1) {
  6233  04C8  0856               	movf	setLED@led,w
  6234  04C9  3A01               	xorlw	1
  6235  04CA  1D03               	skipz
  6236  04CB  2CCE               	goto	l3745
  6237                           
  6238                           ;LED_B1.c: 162: RB4 = 1;
  6239  04CC  1606               	bsf	6,4	;volatile
  6240                           
  6241                           ;LED_B1.c: 164: }
  6242  04CD  2CD2               	goto	l3749
  6243  04CE                     l3745:	
  6244                           
  6245                           ;LED_B1.c: 167: else if (led == 2) {
  6246  04CE  0856               	movf	setLED@led,w
  6247  04CF  3A02               	xorlw	2
  6248  04D0  1903               	btfsc	3,2
  6249                           
  6250                           ;LED_B1.c: 171: RB5 = 1;
  6251  04D1  1686               	bsf	6,5	;volatile
  6252  04D2                     l3749:	
  6253                           
  6254                           ;LED_B1.c: 173: }
  6255                           ;LED_B1.c: 185: if (led == 99) {
  6256  04D2  0856               	movf	setLED@led,w
  6257  04D3  3A63               	xorlw	99
  6258  04D4  1903               	btfsc	3,2
  6259                           
  6260                           ;LED_B1.c: 189: RB3 = 1;
  6261  04D5  1586               	bsf	6,3	;volatile
  6262  04D6                     l3753:	
  6263                           
  6264                           ;LED_B1.c: 191: }
  6265                           ;LED_B1.c: 193: }
  6266                           ;LED_B1.c: 194: if (command == 11) {
  6267  04D6  0855               	movf	setLED@command,w
  6268  04D7  3A0B               	xorlw	11
  6269  04D8  1D03               	skipz
  6270  04D9  2CDE               	goto	l3757
  6271                           
  6272                           ;LED_B1.c: 195: LED->GO = 1;
  6273  04DA  0873               	movf	_LED,w
  6274  04DB  0084               	movwf	4
  6275  04DC  1383               	bcf	3,7	;select IRP bank0
  6276  04DD  1480               	bsf	0,1
  6277  04DE                     l3757:	
  6278                           
  6279                           ;LED_B1.c: 196: }
  6280                           ;LED_B1.c: 198: if (command == 111) {
  6281  04DE  0855               	movf	setLED@command,w
  6282  04DF  3A6F               	xorlw	111
  6283  04E0  1D03               	skipz
  6284  04E1  2CFC               	goto	l3783
  6285                           
  6286                           ;LED_B1.c: 199: PIRLED.Count = 0;
  6287  04E2  01B3               	clrf	_PIRLED+1
  6288                           
  6289                           ;LED_B1.c: 200: PIRLED.Time = 0;
  6290  04E3  01B4               	clrf	_PIRLED+2
  6291  04E4  01B5               	clrf	_PIRLED+3
  6292                           
  6293                           ;LED_B1.c: 201: PIRLED.status = 0;
  6294  04E5  1232               	bcf	_PIRLED,4
  6295                           
  6296                           ;LED_B1.c: 202: PIRLED.GO = 1;
  6297  04E6  1432               	bsf	_PIRLED,0
  6298                           
  6299                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  6300  04E7  10B2               	bcf	_PIRLED,1
  6301                           
  6302                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  6303  04E8  1132               	bcf	_PIRLED,2
  6304                           
  6305                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  6306  04E9  11B2               	bcf	_PIRLED,3
  6307                           
  6308                           ;LED_B1.c: 206: if (led == 1) {
  6309  04EA  0856               	movf	setLED@led,w
  6310  04EB  3A01               	xorlw	1
  6311  04EC  1D03               	skipz
  6312  04ED  2CF0               	goto	l3775
  6313                           
  6314                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  6315  04EE  14B2               	bsf	_PIRLED,1
  6316                           
  6317                           ;LED_B1.c: 208: } else if (led == 2) {
  6318  04EF  0008               	return
  6319  04F0                     l3775:	
  6320  04F0  0856               	movf	setLED@led,w
  6321  04F1  3A02               	xorlw	2
  6322  04F2  1D03               	skipz
  6323  04F3  2CF6               	goto	l3779
  6324                           
  6325                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  6326  04F4  1532               	bsf	_PIRLED,2
  6327                           
  6328                           ;LED_B1.c: 210: } else if (led == 3) {
  6329  04F5  0008               	return
  6330  04F6                     l3779:	
  6331  04F6  0856               	movf	setLED@led,w
  6332  04F7  3A03               	xorlw	3
  6333  04F8  1D03               	skipz
  6334  04F9  0008               	return
  6335                           
  6336                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  6337  04FA  15B2               	bsf	_PIRLED,3
  6338                           
  6339                           ;LED_B1.c: 212: }
  6340                           ;LED_B1.c: 213: } else if (command == 110) {
  6341  04FB  0008               	return
  6342  04FC                     l3783:	
  6343  04FC  0855               	movf	setLED@command,w
  6344  04FD  3A6E               	xorlw	110
  6345  04FE  1D03               	skipz
  6346  04FF  0008               	return
  6347                           
  6348                           ;LED_B1.c: 214: PIRLED.GO = 0;
  6349  0500  1032               	bcf	_PIRLED,0
  6350  0501  0008               	return
  6351  0502                     __end_of_setLED:	
  6352                           
  6353                           	psect	text35
  6354  07C1                     __ptext35:	
  6355 ;; *************** function _LedPointSelect *****************
  6356 ;; Defined at:
  6357 ;;		line 7 in file "../src/LED_B1.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  led             1    wreg     unsigned char 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  led             1    1[BANK0 ] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;		None               void
  6364 ;; Registers used:
  6365 ;;		wreg
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6371 ;;      Params:         0       0       0       0
  6372 ;;      Locals:         0       1       0       0
  6373 ;;      Temps:          0       1       0       0
  6374 ;;      Totals:         0       2       0       0
  6375 ;;Total ram usage:        2 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    3
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_setLED_Initialization
  6382 ;;		_setLED
  6383 ;;		_setLED_Main
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           
  6388                           ;psect for function _LedPointSelect
  6389  07C1                     _LedPointSelect:	
  6390                           
  6391                           ;incstack = 0
  6392                           ; Regs used in _LedPointSelect: [wreg]
  6393                           ;LedPointSelect@led stored from wreg
  6394  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  6395  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  6396  07C3  00D4               	movwf	LedPointSelect@led
  6397                           
  6398                           ;LED_B1.c: 9: if (led == 1) {
  6399  07C4  0854               	movf	LedPointSelect@led,w
  6400  07C5  3A01               	xorlw	1
  6401  07C6  1D03               	skipz
  6402  07C7  2FCC               	goto	l447
  6403                           
  6404                           ;LED_B1.c: 10: LED = &VarLED1;
  6405  07C8  304B               	movlw	_VarLED1& (0+255)
  6406  07C9  00D3               	movwf	??_LedPointSelect
  6407  07CA  0853               	movf	??_LedPointSelect,w
  6408  07CB  00F3               	movwf	_LED
  6409  07CC                     l447:	
  6410                           
  6411                           ;LED_B1.c: 11: }
  6412                           ;LED_B1.c: 14: if (led == 2) {
  6413  07CC  0854               	movf	LedPointSelect@led,w
  6414  07CD  3A02               	xorlw	2
  6415  07CE  1D03               	skipz
  6416  07CF  2FD4               	goto	l448
  6417                           
  6418                           ;LED_B1.c: 15: LED = &VarLED2;
  6419  07D0  304F               	movlw	_VarLED2& (0+255)
  6420  07D1  00D3               	movwf	??_LedPointSelect
  6421  07D2  0853               	movf	??_LedPointSelect,w
  6422  07D3  00F3               	movwf	_LED
  6423  07D4                     l448:	
  6424                           
  6425                           ;LED_B1.c: 16: }
  6426                           ;LED_B1.c: 24: if (led == 99) {
  6427  07D4  0854               	movf	LedPointSelect@led,w
  6428  07D5  3A63               	xorlw	99
  6429  07D6  1D03               	skipz
  6430  07D7  0008               	return
  6431                           
  6432                           ;LED_B1.c: 25: LED = &VarErrLED;
  6433  07D8  3047               	movlw	_VarErrLED& (0+255)
  6434  07D9  00D3               	movwf	??_LedPointSelect
  6435  07DA  0853               	movf	??_LedPointSelect,w
  6436  07DB  00F3               	movwf	_LED
  6437  07DC  0008               	return
  6438  07DD                     __end_of_LedPointSelect:	
  6439                           
  6440                           	psect	text36
  6441  0FA3                     __ptext36:	
  6442 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  6443 ;; Defined at:
  6444 ;;		line 184 in file "../src/Dimmer_B1.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  lights          1    wreg     unsigned char 
  6447 ;;  command         1    0[BANK0 ] unsigned char 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  lights          1    2[BANK0 ] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;		None               void
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6459 ;;      Params:         0       1       0       0
  6460 ;;      Locals:         0       1       0       0
  6461 ;;      Temps:          0       1       0       0
  6462 ;;      Totals:         0       3       0       0
  6463 ;;Total ram usage:        3 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    3
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_setDimmerLights_OnOff
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           
  6474                           ;psect for function _setDimmerIntr_Dimming_RF
  6475  0FA3                     _setDimmerIntr_Dimming_RF:	
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  6479                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  6480  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  6482  0FA5  00D5               	movwf	setDimmerIntr_Dimming_RF@lights
  6483                           
  6484                           ;Dimmer_B1.c: 186: if (lights == 1) {
  6485  0FA6  0855               	movf	setDimmerIntr_Dimming_RF@lights,w
  6486  0FA7  3A01               	xorlw	1
  6487  0FA8  1D03               	skipz
  6488  0FA9  0008               	return
  6489                           
  6490                           ;Dimmer_B1.c: 187: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  6491  0FAA  0853               	movf	setDimmerIntr_Dimming_RF@command,w
  6492  0FAB  3A01               	xorlw	1
  6493  0FAC  3000               	movlw	0
  6494  0FAD  1903               	skipnz
  6495  0FAE  3001               	movlw	1
  6496  0FAF  00D4               	movwf	??_setDimmerIntr_Dimming_RF
  6497  0FB0  0ED4               	swapf	??_setDimmerIntr_Dimming_RF,f
  6498  0FB1  0DD4               	rlf	??_setDimmerIntr_Dimming_RF,f
  6499  0FB2  0DD4               	rlf	??_setDimmerIntr_Dimming_RF,f
  6500  0FB3  0820               	movf	_DimmerIntr1,w
  6501  0FB4  0654               	xorwf	??_setDimmerIntr_Dimming_RF,w
  6502  0FB5  39BF               	andlw	-65
  6503  0FB6  0654               	xorwf	??_setDimmerIntr_Dimming_RF,w
  6504  0FB7  00A0               	movwf	_DimmerIntr1
  6505  0FB8  0008               	return
  6506  0FB9                     __end_of_setDimmerIntr_Dimming_RF:	
  6507                           
  6508                           	psect	text37
  6509  0E97                     __ptext37:	
  6510 ;; *************** function _setDimmerIntr_DimmingValue *****************
  6511 ;; Defined at:
  6512 ;;		line 49 in file "../src/Dimmer_B1.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  lights          1    wreg     unsigned char 
  6515 ;;  value           1    0[BANK0 ] unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  lights          1    2[BANK0 ] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;		None               void
  6520 ;; Registers used:
  6521 ;;		wreg
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6527 ;;      Params:         0       1       0       0
  6528 ;;      Locals:         0       1       0       0
  6529 ;;      Temps:          0       1       0       0
  6530 ;;      Totals:         0       3       0       0
  6531 ;;Total ram usage:        3 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    3
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_setDimmerLights_OnOff
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _setDimmerIntr_DimmingValue
  6543  0E97                     _setDimmerIntr_DimmingValue:	
  6544                           
  6545                           ;incstack = 0
  6546                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  6547                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  6548  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6549  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6550  0E99  00D5               	movwf	setDimmerIntr_DimmingValue@lights
  6551                           
  6552                           ;Dimmer_B1.c: 51: if (lights == 1) {
  6553  0E9A  0855               	movf	setDimmerIntr_DimmingValue@lights,w
  6554  0E9B  3A01               	xorlw	1
  6555  0E9C  1D03               	skipz
  6556  0E9D  0008               	return
  6557                           
  6558                           ;Dimmer_B1.c: 52: DimmerIntr1.DimmingValue = value;
  6559  0E9E  0853               	movf	setDimmerIntr_DimmingValue@value,w
  6560  0E9F  00D4               	movwf	??_setDimmerIntr_DimmingValue
  6561  0EA0  0854               	movf	??_setDimmerIntr_DimmingValue,w
  6562  0EA1  00A4               	movwf	_DimmerIntr1+4
  6563  0EA2  0008               	return
  6564  0EA3                     __end_of_setDimmerIntr_DimmingValue:	
  6565                           
  6566                           	psect	text38
  6567  0F8D                     __ptext38:	
  6568 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6569 ;; Defined at:
  6570 ;;		line 31 in file "../src/Dimmer_B1.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  lights          1    wreg     unsigned char 
  6573 ;;  command         1    0[BANK0 ] unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  lights          1    2[BANK0 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6585 ;;      Params:         0       1       0       0
  6586 ;;      Locals:         0       1       0       0
  6587 ;;      Temps:          0       1       0       0
  6588 ;;      Totals:         0       3       0       0
  6589 ;;Total ram usage:        3 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    3
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_setDimmerLights_OnOff
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function _setDimmerIntr_ControlStatus
  6601  0F8D                     _setDimmerIntr_ControlStatus:	
  6602                           
  6603                           ;incstack = 0
  6604                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6605                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6606  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6607  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  6608  0F8F  00D5               	movwf	setDimmerIntr_ControlStatus@lights
  6609                           
  6610                           ;Dimmer_B1.c: 33: if (lights == 1) {
  6611  0F90  0855               	movf	setDimmerIntr_ControlStatus@lights,w
  6612  0F91  3A01               	xorlw	1
  6613  0F92  1D03               	skipz
  6614  0F93  0008               	return
  6615                           
  6616                           ;Dimmer_B1.c: 34: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6617  0F94  0853               	movf	setDimmerIntr_ControlStatus@command,w
  6618  0F95  3A01               	xorlw	1
  6619  0F96  3000               	movlw	0
  6620  0F97  1903               	skipnz
  6621  0F98  3001               	movlw	1
  6622  0F99  00D4               	movwf	??_setDimmerIntr_ControlStatus
  6623  0F9A  0DD4               	rlf	??_setDimmerIntr_ControlStatus,f
  6624  0F9B  0DD4               	rlf	??_setDimmerIntr_ControlStatus,f
  6625  0F9C  0DD4               	rlf	??_setDimmerIntr_ControlStatus,f
  6626  0F9D  0820               	movf	_DimmerIntr1,w
  6627  0F9E  0654               	xorwf	??_setDimmerIntr_ControlStatus,w
  6628  0F9F  39F7               	andlw	-9
  6629  0FA0  0654               	xorwf	??_setDimmerIntr_ControlStatus,w
  6630  0FA1  00A0               	movwf	_DimmerIntr1
  6631  0FA2  0008               	return
  6632  0FA3                     __end_of_setDimmerIntr_ControlStatus:	
  6633                           
  6634                           	psect	text39
  6635  0F77                     __ptext39:	
  6636 ;; *************** function _setCmd_Status *****************
  6637 ;; Defined at:
  6638 ;;		line 596 in file "../src/Main_B1.c"
  6639 ;; Parameters:    Size  Location     Type
  6640 ;;  number          1    wreg     unsigned char 
  6641 ;;  cmd             1    0[BANK0 ] unsigned char 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  number          1    2[BANK0 ] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;		None               void
  6646 ;; Registers used:
  6647 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6653 ;;      Params:         0       1       0       0
  6654 ;;      Locals:         0       1       0       0
  6655 ;;      Temps:          0       1       0       0
  6656 ;;      Totals:         0       3       0       0
  6657 ;;Total ram usage:        3 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    3
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_setDimmerLights_OnOff
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _setCmd_Status
  6669  0F77                     _setCmd_Status:	
  6670                           
  6671                           ;incstack = 0
  6672                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6673                           ;setCmd_Status@number stored from wreg
  6674  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  6676  0F79  00D5               	movwf	setCmd_Status@number
  6677                           
  6678                           ;Main_B1.c: 597: switch (number) {
  6679  0F7A  2F87               	goto	l3805
  6680  0F7B                     l3801:	
  6681                           ;Main_B1.c: 598: case 1:
  6682                           
  6683                           
  6684                           ;Main_B1.c: 599: Cmd.all_off = cmd == 1 ? 1 : 0;
  6685  0F7B  0853               	movf	setCmd_Status@cmd,w
  6686  0F7C  3A01               	xorlw	1
  6687  0F7D  3000               	movlw	0
  6688  0F7E  1903               	skipnz
  6689  0F7F  3001               	movlw	1
  6690  0F80  00D4               	movwf	??_setCmd_Status
  6691  0F81  0870               	movf	_Cmd,w
  6692  0F82  0654               	xorwf	??_setCmd_Status,w
  6693  0F83  39FE               	andlw	-2
  6694  0F84  0654               	xorwf	??_setCmd_Status,w
  6695  0F85  00F0               	movwf	_Cmd
  6696                           
  6697                           ;Main_B1.c: 601: }
  6698                           
  6699                           ;Main_B1.c: 600: break;
  6700  0F86  0008               	return
  6701  0F87                     l3805:	
  6702  0F87  0855               	movf	setCmd_Status@number,w
  6703                           
  6704                           ; Switch size 1, requested type "space"
  6705                           ; Number of cases is 1, Range of values is 1 to 1
  6706                           ; switch strategies available:
  6707                           ; Name         Instructions Cycles
  6708                           ; simple_byte            4     3 (average)
  6709                           ; direct_byte           12    10 (fixed)
  6710                           ; jumptable            263     9 (fixed)
  6711                           ;	Chosen strategy is simple_byte
  6712  0F88  3A01               	xorlw	1	; case 1
  6713  0F89  1903               	skipnz
  6714  0F8A  2F7B               	goto	l3801
  6715  0F8B  2F8C               	goto	l801
  6716  0F8C                     l801:	
  6717  0F8C  0008               	return
  6718  0F8D                     __end_of_setCmd_Status:	
  6719                           
  6720                           	psect	text40
  6721  0E82                     __ptext40:	
  6722 ;; *************** function _getMain_All_LightsStatus *****************
  6723 ;; Defined at:
  6724 ;;		line 373 in file "../src/Main_B1.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;		None
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  status          1    0[BANK0 ] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      unsigned char 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6738 ;;      Params:         0       0       0       0
  6739 ;;      Locals:         0       1       0       0
  6740 ;;      Temps:          0       0       0       0
  6741 ;;      Totals:         0       1       0       0
  6742 ;;Total ram usage:        1 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    3
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_setDimmerLights_Main
  6749 ;;		_setDimmerLights_OnOff
  6750 ;;		_Exception_Main
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function _getMain_All_LightsStatus
  6756  0E82                     _getMain_All_LightsStatus:	
  6757                           
  6758                           ;Main_B1.c: 374: char status = 0;
  6759                           
  6760                           ;incstack = 0
  6761                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6762  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  6763  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  6764  0E84  01D3               	clrf	getMain_All_LightsStatus@status
  6765                           
  6766                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6767  0E85  3000               	movlw	0
  6768  0E86  1840               	btfsc	_DimmerLights1+1,0
  6769  0E87  3001               	movlw	1
  6770  0E88  00D3               	movwf	getMain_All_LightsStatus@status
  6771                           
  6772                           ;Main_B1.c: 420: return status;
  6773  0E89  0853               	movf	getMain_All_LightsStatus@status,w
  6774  0E8A  0008               	return
  6775  0E8B                     __end_of_getMain_All_LightsStatus:	
  6776                           
  6777                           	psect	text41
  6778  0EF7                     __ptext41:	
  6779 ;; *************** function _getCmd_Status *****************
  6780 ;; Defined at:
  6781 ;;		line 604 in file "../src/Main_B1.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  number          1    wreg     unsigned char 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  number          1    0[BANK0 ] unsigned char 
  6786 ;;  cmd             1    1[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6796 ;;      Params:         0       0       0       0
  6797 ;;      Locals:         0       2       0       0
  6798 ;;      Temps:          0       0       0       0
  6799 ;;      Totals:         0       2       0       0
  6800 ;;Total ram usage:        2 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    3
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_setDimmerLights_OnOff
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           
  6811                           ;psect for function _getCmd_Status
  6812  0EF7                     _getCmd_Status:	
  6813                           
  6814                           ;incstack = 0
  6815                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6816                           ;getCmd_Status@number stored from wreg
  6817  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  6818  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  6819  0EF9  00D3               	movwf	getCmd_Status@number
  6820                           
  6821                           ;Main_B1.c: 605: char cmd = 0;
  6822  0EFA  01D4               	clrf	getCmd_Status@cmd
  6823                           
  6824                           ;Main_B1.c: 606: switch (number) {
  6825  0EFB  2F01               	goto	l3793
  6826  0EFC                     l3789:	
  6827                           ;Main_B1.c: 607: case 1:
  6828                           
  6829                           
  6830                           ;Main_B1.c: 608: cmd = Cmd.all_off == 1 ? 1 : 0;
  6831  0EFC  3000               	movlw	0
  6832  0EFD  1870               	btfsc	_Cmd,0
  6833  0EFE  3001               	movlw	1
  6834  0EFF  00D4               	movwf	getCmd_Status@cmd
  6835                           
  6836                           ;Main_B1.c: 610: }
  6837                           
  6838                           ;Main_B1.c: 609: break;
  6839  0F00  2F06               	goto	l3795
  6840  0F01                     l3793:	
  6841  0F01  0853               	movf	getCmd_Status@number,w
  6842                           
  6843                           ; Switch size 1, requested type "space"
  6844                           ; Number of cases is 1, Range of values is 1 to 1
  6845                           ; switch strategies available:
  6846                           ; Name         Instructions Cycles
  6847                           ; simple_byte            4     3 (average)
  6848                           ; direct_byte           12    10 (fixed)
  6849                           ; jumptable            263     9 (fixed)
  6850                           ;	Chosen strategy is simple_byte
  6851  0F02  3A01               	xorlw	1	; case 1
  6852  0F03  1903               	skipnz
  6853  0F04  2EFC               	goto	l3789
  6854  0F05  2F06               	goto	l3795
  6855  0F06                     l3795:	
  6856                           
  6857                           ;Main_B1.c: 611: return cmd;
  6858  0F06  0854               	movf	getCmd_Status@cmd,w
  6859  0F07  0008               	return
  6860  0F08                     __end_of_getCmd_Status:	
  6861                           
  6862                           	psect	text42
  6863  0FB9                     __ptext42:	
  6864 ;; *************** function _setDimmerLights_Dimming *****************
  6865 ;; Defined at:
  6866 ;;		line 880 in file "../src/Dimmer_B1.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  lights          1    wreg     unsigned char 
  6869 ;;  status          1    3[BANK0 ] unsigned char 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  lights          1    4[BANK0 ] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;		None               void
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0, pclath, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6881 ;;      Params:         0       1       0       0
  6882 ;;      Locals:         0       1       0       0
  6883 ;;      Temps:          0       0       0       0
  6884 ;;      Totals:         0       2       0       0
  6885 ;;Total ram usage:        2 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    4
  6888 ;; This function calls:
  6889 ;;		_setDimmerIntr_Dimming_Sw
  6890 ;; This function is called by:
  6891 ;;		_setDimmerLights_Main
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _setDimmerLights_Dimming
  6897  0FB9                     _setDimmerLights_Dimming:	
  6898                           
  6899                           ;incstack = 0
  6900                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6901                           ;setDimmerLights_Dimming@lights stored from wreg
  6902  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  6903  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  6904  0FBB  00D7               	movwf	setDimmerLights_Dimming@lights
  6905                           
  6906                           ;Dimmer_B1.c: 881: if (status == 1) {
  6907  0FBC  0856               	movf	setDimmerLights_Dimming@status,w
  6908  0FBD  3A01               	xorlw	1
  6909  0FBE  1D03               	skipz
  6910  0FBF  2FC6               	goto	l3837
  6911                           
  6912                           ;Dimmer_B1.c: 882: setDimmerIntr_Dimming_Sw(lights, 1);
  6913  0FC0  01D3               	clrf	setDimmerIntr_Dimming_Sw@command
  6914  0FC1  0AD3               	incf	setDimmerIntr_Dimming_Sw@command,f
  6915  0FC2  0857               	movf	setDimmerLights_Dimming@lights,w
  6916  0FC3  158A  274F         	fcall	_setDimmerIntr_Dimming_Sw
  6917                           
  6918                           ;Dimmer_B1.c: 887: ;;
  6919                           ;Dimmer_B1.c: 888: } else if (status == 0) {
  6920  0FC5  0008               	return
  6921  0FC6                     l3837:	
  6922  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  6923  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  6924  0FC8  08D6               	movf	setDimmerLights_Dimming@status,f
  6925  0FC9  1D03               	skipz
  6926  0FCA  0008               	return
  6927                           
  6928                           ;Dimmer_B1.c: 889: setDimmerIntr_Dimming_Sw(lights, 0);
  6929  0FCB  01D3               	clrf	setDimmerIntr_Dimming_Sw@command
  6930  0FCC  0857               	movf	setDimmerLights_Dimming@lights,w
  6931  0FCD  158A  274F         	fcall	_setDimmerIntr_Dimming_Sw
  6932                           
  6933                           ;Dimmer_B1.c: 896: ;;
  6934                           ;Dimmer_B1.c: 897: ;;
  6935                           ;Dimmer_B1.c: 907: ;;
  6936                           ;Dimmer_B1.c: 908: ;;
  6937  0FCF  0008               	return
  6938  0FD0                     __end_of_setDimmerLights_Dimming:	
  6939                           
  6940                           	psect	text43
  6941  0F4F                     __ptext43:	
  6942 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6943 ;; Defined at:
  6944 ;;		line 166 in file "../src/Dimmer_B1.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  lights          1    wreg     unsigned char 
  6947 ;;  command         1    0[BANK0 ] unsigned char 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  lights          1    2[BANK0 ] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6959 ;;      Params:         0       1       0       0
  6960 ;;      Locals:         0       1       0       0
  6961 ;;      Temps:          0       1       0       0
  6962 ;;      Totals:         0       3       0       0
  6963 ;;Total ram usage:        3 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    3
  6966 ;; This function calls:
  6967 ;;		Nothing
  6968 ;; This function is called by:
  6969 ;;		_setDimmerLights_Dimming
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _setDimmerIntr_Dimming_Sw
  6975  0F4F                     _setDimmerIntr_Dimming_Sw:	
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6979                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6980  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  6981  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  6982  0F51  00D5               	movwf	setDimmerIntr_Dimming_Sw@lights
  6983                           
  6984                           ;Dimmer_B1.c: 168: if (lights == 1) {
  6985  0F52  0855               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6986  0F53  3A01               	xorlw	1
  6987  0F54  1D03               	skipz
  6988  0F55  0008               	return
  6989                           
  6990                           ;Dimmer_B1.c: 169: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6991  0F56  0853               	movf	setDimmerIntr_Dimming_Sw@command,w
  6992  0F57  3A01               	xorlw	1
  6993  0F58  3000               	movlw	0
  6994  0F59  1903               	skipnz
  6995  0F5A  3001               	movlw	1
  6996  0F5B  00D4               	movwf	??_setDimmerIntr_Dimming_Sw
  6997  0F5C  0ED4               	swapf	??_setDimmerIntr_Dimming_Sw,f
  6998  0F5D  0820               	movf	_DimmerIntr1,w
  6999  0F5E  0654               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7000  0F5F  39EF               	andlw	-17
  7001  0F60  0654               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7002  0F61  00A0               	movwf	_DimmerIntr1
  7003  0F62  0008               	return
  7004  0F63                     __end_of_setDimmerIntr_Dimming_Sw:	
  7005                           
  7006                           	psect	text44
  7007  0E4F                     __ptext44:	
  7008 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7009 ;; Defined at:
  7010 ;;		line 913 in file "../src/Dimmer_B1.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  lights          1    wreg     unsigned char 
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  lights          1    0[COMMON] unsigned char 
  7015 ;;  allow           1    0[BANK0 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      unsigned char 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7025 ;;      Params:         0       0       0       0
  7026 ;;      Locals:         0       1       0       0
  7027 ;;      Temps:          0       0       0       0
  7028 ;;      Totals:         0       1       0       0
  7029 ;;Total ram usage:        1 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    3
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_setDimmerLights_Main
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _getDimmerLights_Allow_Condition
  7041  0E4F                     _getDimmerLights_Allow_Condition:	
  7042                           
  7043                           ;Dimmer_B1.c: 914: char allow = 0;
  7044                           
  7045                           ;incstack = 0
  7046                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7047  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  7048  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  7049  0E51  01D3               	clrf	getDimmerLights_Allow_Condition@allow
  7050                           
  7051                           ;Dimmer_B1.c: 947: return allow;
  7052  0E52  0853               	movf	getDimmerLights_Allow_Condition@allow,w
  7053  0E53  0008               	return
  7054  0E54                     __end_of_getDimmerLights_Allow_Condition:	
  7055                           
  7056                           	psect	text45
  7057  0E8B                     __ptext45:	
  7058 ;; *************** function _DimmerLights_SelectPointer *****************
  7059 ;; Defined at:
  7060 ;;		line 576 in file "../src/Dimmer_B1.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  lights          1    wreg     unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  lights          1    1[BANK0 ] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;		None               void
  7067 ;; Registers used:
  7068 ;;		wreg
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7074 ;;      Params:         0       0       0       0
  7075 ;;      Locals:         0       1       0       0
  7076 ;;      Temps:          0       1       0       0
  7077 ;;      Totals:         0       2       0       0
  7078 ;;Total ram usage:        2 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    3
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_setDimmerLights_SwOn
  7085 ;;		_setDimmerLights_SwOff
  7086 ;;		_setDimmerLights_Main
  7087 ;;		_getDimmerLights_Status
  7088 ;;		_setDimmerLights_DimmingOn
  7089 ;;		_setDimmerLights_Status
  7090 ;;		_setDimmerLights_DimmingRun
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           
  7095                           ;psect for function _DimmerLights_SelectPointer
  7096  0E8B                     _DimmerLights_SelectPointer:	
  7097                           
  7098                           ;incstack = 0
  7099                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7100                           ;DimmerLights_SelectPointer@lights stored from wreg
  7101  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  7102  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  7103  0E8D  00D4               	movwf	DimmerLights_SelectPointer@lights
  7104                           
  7105                           ;Dimmer_B1.c: 578: if (lights == 1) {
  7106  0E8E  0854               	movf	DimmerLights_SelectPointer@lights,w
  7107  0E8F  3A01               	xorlw	1
  7108  0E90  1D03               	skipz
  7109  0E91  0008               	return
  7110                           
  7111                           ;Dimmer_B1.c: 579: DimmerLights = &DimmerLights1;
  7112  0E92  303F               	movlw	_DimmerLights1& (0+255)
  7113  0E93  00D3               	movwf	??_DimmerLights_SelectPointer
  7114  0E94  0853               	movf	??_DimmerLights_SelectPointer,w
  7115  0E95  00F2               	movwf	_DimmerLights
  7116  0E96  0008               	return
  7117  0E97                     __end_of_DimmerLights_SelectPointer:	
  7118                           
  7119                           	psect	text46
  7120  0E64                     __ptext46:	
  7121 ;; *************** function _DimmerLights_Initialization *****************
  7122 ;; Defined at:
  7123 ;;		line 597 in file "../src/Dimmer_B1.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;		None               void
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, pclath, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7137 ;;      Params:         0       0       0       0
  7138 ;;      Locals:         0       0       0       0
  7139 ;;      Temps:          0       0       0       0
  7140 ;;      Totals:         0       0       0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    4
  7144 ;; This function calls:
  7145 ;;		_DimmerIntr_Initialization
  7146 ;;		_setDimmerLights_Initialization
  7147 ;; This function is called by:
  7148 ;;		_main
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _DimmerLights_Initialization
  7154  0E64                     _DimmerLights_Initialization:	
  7155                           
  7156                           ;Dimmer_B1.c: 599: setDimmerLights_Initialization(1);
  7157                           
  7158                           ;incstack = 0
  7159                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7160  0E64  3001               	movlw	1
  7161  0E65  158A  2642  158A   	fcall	_setDimmerLights_Initialization
  7162                           
  7163                           ;Dimmer_B1.c: 609: DimmerIntr_Initialization();
  7164  0E68  158A  273C         	fcall	_DimmerIntr_Initialization
  7165  0E6A  0008               	return
  7166  0E6B                     __end_of_DimmerLights_Initialization:	
  7167                           
  7168                           	psect	text47
  7169  0E42                     __ptext47:	
  7170 ;; *************** function _setDimmerLights_Initialization *****************
  7171 ;; Defined at:
  7172 ;;		line 613 in file "../src/Dimmer_B1.c"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;  lights          1    wreg     unsigned char 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  lights          1    0[COMMON] unsigned char 
  7177 ;; Return value:  Size  Location     Type
  7178 ;;		None               void
  7179 ;; Registers used:
  7180 ;;		wreg
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7186 ;;      Params:         0       0       0       0
  7187 ;;      Locals:         0       0       0       0
  7188 ;;      Temps:          0       0       0       0
  7189 ;;      Totals:         0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    3
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_DimmerLights_Initialization
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function _setDimmerLights_Initialization
  7202  0E42                     _setDimmerLights_Initialization:	
  7203                           
  7204                           ;incstack = 0
  7205                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7206  0E42  0008               	return
  7207  0E43                     __end_of_setDimmerLights_Initialization:	
  7208                           
  7209                           	psect	text48
  7210  0F3C                     __ptext48:	
  7211 ;; *************** function _DimmerIntr_Initialization *****************
  7212 ;; Defined at:
  7213 ;;		line 7 in file "../src/Dimmer_B1.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;		None
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;		None               void
  7220 ;; Registers used:
  7221 ;;		wreg
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7227 ;;      Params:         0       0       0       0
  7228 ;;      Locals:         0       0       0       0
  7229 ;;      Temps:          0       1       0       0
  7230 ;;      Totals:         0       1       0       0
  7231 ;;Total ram usage:        1 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    3
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_DimmerLights_Initialization
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function _DimmerIntr_Initialization
  7243  0F3C                     _DimmerIntr_Initialization:	
  7244                           
  7245                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  7246                           
  7247                           ;incstack = 0
  7248                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  7249  0F3C  3007               	movlw	7
  7250  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  7251  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  7252  0F3F  00D3               	movwf	??_DimmerIntr_Initialization
  7253  0F40  0853               	movf	??_DimmerIntr_Initialization,w
  7254  0F41  00A3               	movwf	_DimmerIntr1+3
  7255                           
  7256                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.8));
  7257  0F42  3018               	movlw	24
  7258  0F43  00D3               	movwf	??_DimmerIntr_Initialization
  7259  0F44  0853               	movf	??_DimmerIntr_Initialization,w
  7260  0F45  00A5               	movwf	_DimmerIntr1+5
  7261                           
  7262                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.8));
  7263  0F46  3048               	movlw	72
  7264  0F47  00D3               	movwf	??_DimmerIntr_Initialization
  7265  0F48  0853               	movf	??_DimmerIntr_Initialization,w
  7266  0F49  00A6               	movwf	_DimmerIntr1+6
  7267                           
  7268                           ;Dimmer_B1.c: 13: DimmerIntr1.DimmingValue = ((char)((100-70)*0.8));
  7269  0F4A  3018               	movlw	24
  7270  0F4B  00D3               	movwf	??_DimmerIntr_Initialization
  7271  0F4C  0853               	movf	??_DimmerIntr_Initialization,w
  7272  0F4D  00A4               	movwf	_DimmerIntr1+4
  7273  0F4E  0008               	return
  7274  0F4F                     __end_of_DimmerIntr_Initialization:	
  7275                           
  7276                           	psect	text49
  7277  06DE                     __ptext49:	
  7278 ;; *************** function _CDS_Main *****************
  7279 ;; Defined at:
  7280 ;;		line 11 in file "../src/CDS_B1.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;		None               void
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7294 ;;      Params:         0       0       0       0
  7295 ;;      Locals:         0       0       0       0
  7296 ;;      Temps:          0       3       0       0
  7297 ;;      Totals:         0       3       0       0
  7298 ;;Total ram usage:        3 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    3
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_main
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _CDS_Main
  7310  06DE                     _CDS_Main:	
  7311                           
  7312                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  7316  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  7317  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  7318  06E0  1C2D               	btfss	__CDS,0
  7319  06E1  0008               	return
  7320                           
  7321                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  7322  06E2  18AD               	btfsc	__CDS,1
  7323  06E3  2EF1               	goto	l117
  7324                           
  7325                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  7326  06E4  19AD               	btfsc	__CDS,3
  7327  06E5  0008               	return
  7328                           
  7329                           ;CDS_B1.c: 16: _CDS.Time++;
  7330  06E6  3001               	movlw	1
  7331  06E7  00D3               	movwf	??_CDS_Main
  7332  06E8  0853               	movf	??_CDS_Main,w
  7333  06E9  07AE               	addwf	__CDS+1,f
  7334                           
  7335                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  7336  06EA  3005               	movlw	5
  7337  06EB  022E               	subwf	__CDS+1,w
  7338  06EC  1C03               	skipc
  7339  06ED  0008               	return
  7340                           
  7341                           ;CDS_B1.c: 18: {
  7342                           ;CDS_B1.c: 19: _CDS.Time = 0;
  7343  06EE  01AE               	clrf	__CDS+1
  7344                           
  7345                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  7346  06EF  15AD               	bsf	__CDS,3
  7347                           
  7348                           ;CDS_B1.c: 21: }
  7349                           ;CDS_B1.c: 22: }
  7350                           ;CDS_B1.c: 23: } else {
  7351  06F0  0008               	return
  7352  06F1                     l117:	
  7353                           
  7354                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  7355  06F1  1CAD               	btfss	__CDS,1
  7356  06F2  0008               	return
  7357                           
  7358                           ;CDS_B1.c: 25: _CDS.GO = 0;
  7359  06F3  10AD               	bcf	__CDS,1
  7360                           
  7361                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  7362  06F4  1A2D               	btfsc	__CDS,4
  7363  06F5  2EFC               	goto	l4123
  7364                           
  7365                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  7366  06F6  082F               	movf	__CDS+2,w
  7367  06F7  0230               	subwf	__CDS+3,w
  7368  06F8  1C03               	skipc
  7369  06F9  0008               	return
  7370                           
  7371                           ;CDS_B1.c: 28: _CDS.Status = 1;
  7372  06FA  162D               	bsf	__CDS,4
  7373                           
  7374                           ;CDS_B1.c: 29: }
  7375                           ;CDS_B1.c: 30: } else {
  7376  06FB  0008               	return
  7377  06FC                     l4123:	
  7378                           
  7379                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  7380  06FC  082F               	movf	__CDS+2,w
  7381  06FD  3E9C               	addlw	156
  7382  06FE  00D3               	movwf	??_CDS_Main
  7383  06FF  30FF               	movlw	255
  7384  0700  1803               	skipnc
  7385  0701  3000               	movlw	0
  7386  0702  00D4               	movwf	??_CDS_Main+1
  7387  0703  0854               	movf	??_CDS_Main+1,w
  7388  0704  3A80               	xorlw	128
  7389  0705  00D5               	movwf	??_CDS_Main+2
  7390  0706  3080               	movlw	128
  7391  0707  0255               	subwf	??_CDS_Main+2,w
  7392  0708  1D03               	skipz
  7393  0709  2F0C               	goto	u4645
  7394  070A  0830               	movf	__CDS+3,w
  7395  070B  0253               	subwf	??_CDS_Main,w
  7396  070C                     u4645:	
  7397  070C  1C03               	skipc
  7398  070D  0008               	return
  7399                           
  7400                           ;CDS_B1.c: 32: _CDS.Status = 0;
  7401  070E  1283               	bcf	3,5	;RP0=0, select bank0
  7402  070F  1303               	bcf	3,6	;RP1=0, select bank0
  7403  0710  122D               	bcf	__CDS,4
  7404  0711  0008               	return
  7405  0712                     __end_of_CDS_Main:	
  7406                           
  7407                           	psect	text50
  7408  0E47                     __ptext50:	
  7409 ;; *************** function _CDS_Initialization *****************
  7410 ;; Defined at:
  7411 ;;		line 7 in file "../src/CDS_B1.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;		None               void
  7418 ;; Registers used:
  7419 ;;		None
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7425 ;;      Params:         0       0       0       0
  7426 ;;      Locals:         0       0       0       0
  7427 ;;      Temps:          0       0       0       0
  7428 ;;      Totals:         0       0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    3
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_main
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           
  7440                           ;psect for function _CDS_Initialization
  7441  0E47                     _CDS_Initialization:	
  7442                           
  7443                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in _CDS_Initialization: []
  7447  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  7448  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  7449  0E49  142D               	bsf	__CDS,0
  7450  0E4A  0008               	return
  7451  0E4B                     __end_of_CDS_Initialization:	
  7452                           
  7453                           	psect	text51
  7454  0FD0                     __ptext51:	
  7455 ;; *************** function _ISR *****************
  7456 ;; Defined at:
  7457 ;;		line 116 in file "../src/MCU_B1.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;		None
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;		None               void
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7471 ;;      Params:         0       0       0       0
  7472 ;;      Locals:         0       0       0       0
  7473 ;;      Temps:          4       0       0       0
  7474 ;;      Totals:         4       0       0       0
  7475 ;;Total ram usage:        4 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    2
  7478 ;; This function calls:
  7479 ;;		_TMR1_ISR
  7480 ;; This function is called by:
  7481 ;;		Interrupt level 1
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _ISR
  7487  0FD0                     _ISR:	
  7488                           
  7489                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  7490  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  7491  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  7492  0FD2  1C0C               	btfss	12,0	;volatile
  7493  0FD3  2FDB               	goto	i1l628
  7494  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  7495  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  7496  0FD6  1C0C               	btfss	12,0	;volatile
  7497  0FD7  2FDB               	goto	i1l628
  7498                           
  7499                           ;MCU_B1.c: 126: TMR1_ISR();
  7500  0FD8  118A  2787  158A   	fcall	_TMR1_ISR
  7501  0FDB                     i1l628:	
  7502                           ;MCU_B1.c: 127: }
  7503                           ;MCU_B1.c: 148: return;
  7504                           
  7505  0FDB  0879               	movf	??_ISR+3,w
  7506  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  7507  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  7508  0FDE  00FF               	movwf	127
  7509  0FDF  0878               	movf	??_ISR+2,w
  7510  0FE0  008A               	movwf	10
  7511  0FE1  0877               	movf	??_ISR+1,w
  7512  0FE2  0084               	movwf	4
  7513  0FE3  0E76               	swapf	??_ISR^(0+-128),w
  7514  0FE4  0083               	movwf	3
  7515  0FE5  0EFE               	swapf	126,f
  7516  0FE6  0E7E               	swapf	126,w
  7517  0FE7  0009               	retfie
  7518  0FE8                     __end_of_ISR:	
  7519                           
  7520                           	psect	intentry
  7521  0004                     __pintentry:	
  7522                           ;incstack = 0
  7523                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  7524                           
  7525  0004                     interrupt_function:	
  7526  007E                     saved_w	set	btemp
  7527  0004  00FE               	movwf	btemp
  7528  0005  0E03               	swapf	3,w
  7529  0006  00F6               	movwf	??_ISR
  7530  0007  0804               	movf	4,w
  7531  0008  00F7               	movwf	??_ISR+1
  7532  0009  080A               	movf	10,w
  7533  000A  00F8               	movwf	??_ISR+2
  7534  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7535  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7536  000D  087F               	movf	btemp+1,w
  7537  000E  00F9               	movwf	??_ISR+3
  7538  000F  158A  2FD0         	ljmp	_ISR
  7539                           
  7540                           	psect	text52
  7541  0787                     __ptext52:	
  7542 ;; *************** function _TMR1_ISR *****************
  7543 ;; Defined at:
  7544 ;;		line 236 in file "../src/MCU_B1.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;		None               void
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0, pclath, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7558 ;;      Params:         0       0       0       0
  7559 ;;      Locals:         0       0       0       0
  7560 ;;      Temps:          0       0       0       0
  7561 ;;      Totals:         0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    1
  7565 ;; This function calls:
  7566 ;;		_DimmerLights_IOC_1
  7567 ;;		_DimmerLights_TMR_1
  7568 ;; This function is called by:
  7569 ;;		_ISR
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           
  7574                           ;psect for function _TMR1_ISR
  7575  0787                     _TMR1_ISR:	
  7576                           
  7577                           ;MCU_B1.c: 238: TMR1H = (int)((65536-1480)/256);
  7578                           
  7579                           ;incstack = 0
  7580                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  7581  0787  30FA               	movlw	250
  7582  0788  1283               	bcf	3,5	;RP0=0, select bank0
  7583  0789  1303               	bcf	3,6	;RP1=0, select bank0
  7584  078A  008F               	movwf	15	;volatile
  7585                           
  7586                           ;MCU_B1.c: 239: TMR1L = (int)((65536-1480)%256);
  7587  078B  3038               	movlw	56
  7588  078C  008E               	movwf	14	;volatile
  7589                           
  7590                           ;MCU_B1.c: 240: TMR1IF = 0;
  7591  078D  100C               	bcf	12,0	;volatile
  7592                           
  7593                           ;MCU_B1.c: 245: DimmerLights_IOC_1();
  7594  078E  158A  26E7  118A   	fcall	_DimmerLights_IOC_1
  7595                           
  7596                           ;MCU_B1.c: 257: DimmerLights_TMR_1();
  7597  0791  118A  25BF  118A   	fcall	_DimmerLights_TMR_1
  7598                           
  7599                           ;MCU_B1.c: 271: Timer1.Count++;
  7600  0794  3001               	movlw	1
  7601  0795  1283               	bcf	3,5	;RP0=0, select bank0
  7602  0796  1303               	bcf	3,6	;RP1=0, select bank0
  7603  0797  07BA               	addwf	_Timer1+1,f
  7604  0798  1803               	skipnc
  7605  0799  0ABB               	incf	_Timer1+2,f
  7606  079A  3000               	movlw	0
  7607  079B  07BB               	addwf	_Timer1+2,f
  7608                           
  7609                           ;MCU_B1.c: 272: if (Timer1.Count == (int)(20*10)) {
  7610  079C  30C8               	movlw	200
  7611  079D  063A               	xorwf	_Timer1+1,w
  7612  079E  043B               	iorwf	_Timer1+2,w
  7613  079F  1D03               	skipz
  7614  07A0  0008               	return
  7615                           
  7616                           ;MCU_B1.c: 273: Timer1.Count = 0;
  7617  07A1  01BA               	clrf	_Timer1+1
  7618  07A2  01BB               	clrf	_Timer1+2
  7619                           
  7620                           ;MCU_B1.c: 274: Timer1.Timeout = 1;
  7621  07A3  1439               	bsf	_Timer1,0
  7622  07A4  0008               	return
  7623  07A5                     __end_of_TMR1_ISR:	
  7624                           
  7625                           	psect	text53
  7626  05BF                     __ptext53:	
  7627 ;; *************** function _DimmerLights_TMR_1 *****************
  7628 ;; Defined at:
  7629 ;;		line 1204 in file "../src/Dimmer_B1.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;		None               void
  7636 ;; Registers used:
  7637 ;;		wreg, status,2, status,0
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7643 ;;      Params:         0       0       0       0
  7644 ;;      Locals:         0       0       0       0
  7645 ;;      Temps:          1       0       0       0
  7646 ;;      Totals:         1       0       0       0
  7647 ;;Total ram usage:        1 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; This function calls:
  7650 ;;		Nothing
  7651 ;; This function is called by:
  7652 ;;		_TMR1_ISR
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function _DimmerLights_TMR_1
  7658  05BF                     _DimmerLights_TMR_1:	
  7659                           
  7660                           ;Dimmer_B1.c: 1205: if (DimmerIntr1.Start == 1) {
  7661                           
  7662                           ;incstack = 0
  7663                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  7664  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  7665  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  7666  05C1  1D20               	btfss	_DimmerIntr1,2
  7667  05C2  2DCD               	goto	i1l2945
  7668                           
  7669                           ;Dimmer_B1.c: 1206: DimmerIntr1.Count++;
  7670  05C3  3001               	movlw	1
  7671  05C4  00F5               	movwf	??_DimmerLights_TMR_1
  7672  05C5  0875               	movf	??_DimmerLights_TMR_1,w
  7673  05C6  07A1               	addwf	_DimmerIntr1+1,f
  7674                           
  7675                           ;Dimmer_B1.c: 1207: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) + 1) {
  7676  05C7  3049               	movlw	73
  7677  05C8  0221               	subwf	_DimmerIntr1+1,w
  7678  05C9  1C03               	skipc
  7679  05CA  2DCD               	goto	i1l2945
  7680                           
  7681                           ;Dimmer_B1.c: 1208: DimmerIntr1.Count = 0;
  7682  05CB  01A1               	clrf	_DimmerIntr1+1
  7683                           
  7684                           ;Dimmer_B1.c: 1209: DimmerIntr1.Start = 0;
  7685  05CC  1120               	bcf	_DimmerIntr1,2
  7686  05CD                     i1l2945:	
  7687                           
  7688                           ;Dimmer_B1.c: 1210: }
  7689                           ;Dimmer_B1.c: 1211: }
  7690                           ;Dimmer_B1.c: 1213: if (DimmerIntr1.GO == 1) {
  7691  05CD  1C20               	btfss	_DimmerIntr1,0
  7692  05CE  2DD9               	goto	i1l367
  7693                           
  7694                           ;Dimmer_B1.c: 1214: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  7695  05CF  0824               	movf	_DimmerIntr1+4,w
  7696  05D0  0221               	subwf	_DimmerIntr1+1,w
  7697  05D1  1C03               	skipc
  7698  05D2  2E08               	goto	i1l370
  7699                           
  7700                           ;Dimmer_B1.c: 1215: DimmerIntr1.GO = 0;
  7701  05D3  1020               	bcf	_DimmerIntr1,0
  7702                           
  7703                           ;Dimmer_B1.c: 1216: DimmerIntr1.Tune = 1;
  7704  05D4  14A0               	bsf	_DimmerIntr1,1
  7705                           
  7706                           ;Dimmer_B1.c: 1218: if (DimmerIntr1.ControlStatus == 1) {
  7707  05D5  1DA0               	btfss	_DimmerIntr1,3
  7708  05D6  2E08               	goto	i1l370
  7709                           
  7710                           ;Dimmer_B1.c: 1219: RB2 = 1;
  7711  05D7  1506               	bsf	6,2	;volatile
  7712                           
  7713                           ;Dimmer_B1.c: 1221: }
  7714                           ;Dimmer_B1.c: 1222: }
  7715                           ;Dimmer_B1.c: 1223: } else {
  7716  05D8  2E08               	goto	i1l370
  7717  05D9                     i1l367:	
  7718                           
  7719                           ;Dimmer_B1.c: 1224: if (DimmerIntr1.Tune == 1) {
  7720  05D9  1CA0               	btfss	_DimmerIntr1,1
  7721  05DA  2E08               	goto	i1l370
  7722                           
  7723                           ;Dimmer_B1.c: 1225: DimmerIntr1.Tune = 0;
  7724  05DB  10A0               	bcf	_DimmerIntr1,1
  7725                           
  7726                           ;Dimmer_B1.c: 1226: DimmerIntr1.TuneTime++;
  7727  05DC  3001               	movlw	1
  7728  05DD  00F5               	movwf	??_DimmerLights_TMR_1
  7729  05DE  0875               	movf	??_DimmerLights_TMR_1,w
  7730  05DF  07A2               	addwf	_DimmerIntr1+2,f
  7731                           
  7732                           ;Dimmer_B1.c: 1227: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  7733  05E0  0823               	movf	_DimmerIntr1+3,w
  7734  05E1  0222               	subwf	_DimmerIntr1+2,w
  7735  05E2  1C03               	skipc
  7736  05E3  2E08               	goto	i1l370
  7737                           
  7738                           ;Dimmer_B1.c: 1228: DimmerIntr1.TuneTime = 0;
  7739  05E4  01A2               	clrf	_DimmerIntr1+2
  7740                           
  7741                           ;Dimmer_B1.c: 1229: if (DimmerIntr1.Dimming_Sw == 1) {
  7742  05E5  1E20               	btfss	_DimmerIntr1,4
  7743  05E6  2DF5               	goto	i1l373
  7744                           
  7745                           ;Dimmer_B1.c: 1230: if (DimmerIntr1.Dimming_Status == 0) {
  7746  05E7  1AA0               	btfsc	_DimmerIntr1,5
  7747  05E8  2DEF               	goto	i1l2969
  7748                           
  7749                           ;Dimmer_B1.c: 1231: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.8))) {
  7750  05E9  3019               	movlw	25
  7751  05EA  0224               	subwf	_DimmerIntr1+4,w
  7752  05EB  1803               	btfsc	3,0
  7753  05EC  2DFB               	goto	i1l2975
  7754                           
  7755                           ;Dimmer_B1.c: 1234: DimmerIntr1.Dimming_Status = 1;
  7756                           
  7757                           ;Dimmer_B1.c: 1233: } else {
  7758                           
  7759                           ;Dimmer_B1.c: 1232: DimmerIntr1.DimmingValue--;
  7760  05ED  16A0               	bsf	_DimmerIntr1,5
  7761                           
  7762                           ;Dimmer_B1.c: 1235: }
  7763                           ;Dimmer_B1.c: 1236: } else {
  7764  05EE  2E08               	goto	i1l370
  7765  05EF                     i1l2969:	
  7766                           
  7767                           ;Dimmer_B1.c: 1237: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.8))) {
  7768  05EF  3048               	movlw	72
  7769  05F0  0224               	subwf	_DimmerIntr1+4,w
  7770  05F1  1C03               	btfss	3,0
  7771  05F2  2E02               	goto	i1l2979
  7772                           
  7773                           ;Dimmer_B1.c: 1240: DimmerIntr1.Dimming_Status = 0;
  7774                           
  7775                           ;Dimmer_B1.c: 1239: } else {
  7776                           
  7777                           ;Dimmer_B1.c: 1238: DimmerIntr1.DimmingValue++;
  7778  05F3  12A0               	bcf	_DimmerIntr1,5
  7779                           
  7780                           ;Dimmer_B1.c: 1241: }
  7781                           ;Dimmer_B1.c: 1242: }
  7782                           ;Dimmer_B1.c: 1243: } else if (DimmerIntr1.Dimming_RF == 1) {
  7783  05F4  2E08               	goto	i1l370
  7784  05F5                     i1l373:	
  7785  05F5  1F20               	btfss	_DimmerIntr1,6
  7786  05F6  2E08               	goto	i1l370
  7787                           
  7788                           ;Dimmer_B1.c: 1244: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  7789  05F7  0824               	movf	_DimmerIntr1+4,w
  7790  05F8  0225               	subwf	_DimmerIntr1+5,w
  7791  05F9  1803               	skipnc
  7792  05FA  2DFE               	goto	i1l2977
  7793  05FB                     i1l2975:	
  7794                           
  7795                           ;Dimmer_B1.c: 1245: DimmerIntr1.DimmingValue--;
  7796  05FB  3001               	movlw	1
  7797  05FC  02A4               	subwf	_DimmerIntr1+4,f
  7798                           
  7799                           ;Dimmer_B1.c: 1246: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  7800  05FD  2E08               	goto	i1l370
  7801  05FE                     i1l2977:	
  7802  05FE  0825               	movf	_DimmerIntr1+5,w
  7803  05FF  0224               	subwf	_DimmerIntr1+4,w
  7804  0600  1803               	skipnc
  7805  0601  2E07               	goto	i1l384
  7806  0602                     i1l2979:	
  7807                           
  7808                           ;Dimmer_B1.c: 1247: DimmerIntr1.DimmingValue++;
  7809  0602  3001               	movlw	1
  7810  0603  00F5               	movwf	??_DimmerLights_TMR_1
  7811  0604  0875               	movf	??_DimmerLights_TMR_1,w
  7812  0605  07A4               	addwf	_DimmerIntr1+4,f
  7813                           
  7814                           ;Dimmer_B1.c: 1248: } else {
  7815  0606  2E08               	goto	i1l370
  7816  0607                     i1l384:	
  7817                           
  7818                           ;Dimmer_B1.c: 1249: DimmerIntr1.Dimming_RF = 0;
  7819  0607  1320               	bcf	_DimmerIntr1,6
  7820  0608                     i1l370:	
  7821                           
  7822                           ;Dimmer_B1.c: 1250: }
  7823                           ;Dimmer_B1.c: 1251: }
  7824                           ;Dimmer_B1.c: 1252: }
  7825                           ;Dimmer_B1.c: 1253: }
  7826                           ;Dimmer_B1.c: 1254: }
  7827                           ;Dimmer_B1.c: 1255: if (RB2 == 1) {
  7828  0608  1D06               	btfss	6,2	;volatile
  7829  0609  0008               	return
  7830                           
  7831                           ;Dimmer_B1.c: 1256: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) - 10) {
  7832  060A  303E               	movlw	62
  7833  060B  0221               	subwf	_DimmerIntr1+1,w
  7834  060C  1C03               	skipc
  7835  060D  0008               	return
  7836                           
  7837                           ;Dimmer_B1.c: 1257: RB2 = 0;
  7838  060E  1106               	bcf	6,2	;volatile
  7839                           
  7840                           ;Dimmer_B1.c: 1258: RB4 = 0;
  7841  060F  1206               	bcf	6,4	;volatile
  7842  0610  0008               	return
  7843  0611                     __end_of_DimmerLights_TMR_1:	
  7844                           
  7845                           	psect	text54
  7846  0EE7                     __ptext54:	
  7847 ;; *************** function _DimmerLights_IOC_1 *****************
  7848 ;; Defined at:
  7849 ;;		line 1263 in file "../src/Dimmer_B1.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;		None
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;		None               void
  7856 ;; Registers used:
  7857 ;;		None
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7863 ;;      Params:         0       0       0       0
  7864 ;;      Locals:         0       0       0       0
  7865 ;;      Temps:          0       0       0       0
  7866 ;;      Totals:         0       0       0       0
  7867 ;;Total ram usage:        0 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_TMR1_ISR
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           
  7877                           ;psect for function _DimmerLights_IOC_1
  7878  0EE7                     _DimmerLights_IOC_1:	
  7879                           
  7880                           ;Dimmer_B1.c: 1266: if (RA7 == 1) {
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _DimmerLights_IOC_1: []
  7884  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  7885  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  7886  0EE9  1F85               	btfss	5,7	;volatile
  7887  0EEA  2EEF               	goto	i1l391
  7888                           
  7889                           ;Dimmer_B1.c: 1267: if (Dimmer.PIR_DimmerSignal == 1) {
  7890  0EEB  1DB6               	btfss	_Dimmer,3
  7891  0EEC  0008               	return
  7892                           
  7893                           ;Dimmer_B1.c: 1268: Dimmer.PIR_DimmerSignal = 0;
  7894  0EED  11B6               	bcf	_Dimmer,3
  7895                           
  7896                           ;Dimmer_B1.c: 1269: }
  7897                           ;Dimmer_B1.c: 1270: } else {
  7898  0EEE  0008               	return
  7899  0EEF                     i1l391:	
  7900                           
  7901                           ;Dimmer_B1.c: 1271: if (Dimmer.PIR_DimmerSignal == 0) {
  7902  0EEF  19B6               	btfsc	_Dimmer,3
  7903  0EF0  0008               	return
  7904                           
  7905                           ;Dimmer_B1.c: 1272: Dimmer.PIR_DimmerSignal = 1;
  7906  0EF1  15B6               	bsf	_Dimmer,3
  7907                           
  7908                           ;Dimmer_B1.c: 1274: if (DimmerIntr1.Start == 0) {
  7909  0EF2  1920               	btfsc	_DimmerIntr1,2
  7910  0EF3  0008               	return
  7911                           
  7912                           ;Dimmer_B1.c: 1275: DimmerIntr1.Start = 1;
  7913  0EF4  1520               	bsf	_DimmerIntr1,2
  7914                           
  7915                           ;Dimmer_B1.c: 1276: DimmerIntr1.GO = 1;
  7916  0EF5  1420               	bsf	_DimmerIntr1,0
  7917  0EF6  0008               	return
  7918  0EF7                     __end_of_DimmerLights_IOC_1:	
  7919  007E                     btemp	set	126	;btemp
  7920  007E                     wtemp	set	126
  7921  007E                     wtemp0	set	126
  7922  0080                     wtemp1	set	128
  7923  0082                     wtemp2	set	130
  7924  0084                     wtemp3	set	132
  7925  0086                     wtemp4	set	134
  7926  0088                     wtemp5	set	136
  7927  007F                     wtemp6	set	127
  7928  007E                     ttemp	set	126
  7929  007E                     ttemp0	set	126
  7930  0081                     ttemp1	set	129
  7931  0084                     ttemp2	set	132
  7932  0087                     ttemp3	set	135
  7933  007F                     ttemp4	set	127
  7934  007E                     ltemp	set	126
  7935  007E                     ltemp0	set	126
  7936  0082                     ltemp1	set	130
  7937  0086                     ltemp2	set	134
  7938  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     21      72
    BANK1            80      0      46
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _PIR_Main->_getDimmerLights_Status
    _PIR_Main->_setDimmerLights_SwOn
    _PIR_Main->_setLED
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getDimmerLights_Status
    _Exception_Main->_setLED
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_OnOff
    _setDimmerLights_OnOff->_setLED
    _setLED->_LedPointSelect
    _setDimmerLights_Dimming->_setDimmerIntr_Dimming_Sw
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19694
                                             16 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2158
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     650
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     478
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                             9     9      0    3116
                                              4 BANK0      9     9      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2698
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2698
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2813
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2813
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       8     8      0    3382
                                              4 BANK0      8     8      0
               _getDimmerLights_Line
             _getDimmerLights_Status
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
              _setDimmerLights_SwOff
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getMain_All_Error_Status                             2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Line                                 1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    4877
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    4877
                                              7 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                3     2      1    3956
                                              4 BANK0      3     2      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2658
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_RF                             3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              2     1      1     602
                                              3 BANK0      2     1      1
           _setDimmerIntr_Dimming_Sw
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (8) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _setDimmerIntr_Dimming_Sw
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
         _setDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_RF
         _setLED
           _LedPointSelect
   _Exception_Main
     _getDimmerLights_Line
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _getMain_All_LightsStatus
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setDimmerLights_SwOff
       _DimmerLights_SelectPointer
     _setDimmerLights_SwOn
       _DimmerLights_SelectPointer
     _setLED
       _LedPointSelect
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      80       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      2E       7       57.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      80      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Jan 09 17:36:35 2015

                            _WDT_Clearing 0002                     __end_of_setCmd_Status 0F8D  
                            ___awdiv@sign 0059                                        fsr 0004  
                    _getDimmerLights_Line 07F7                      _setDimmerLights_Main 0502  
                                     l117 06F1                      _setDimmerLights_SwOn 0764  
                                     l447 07CC                                       l448 07D4  
                                     l801 0F8C                                       l940 005D  
                                     l943 0081                                       l935 0208  
                                     l936 007B                                       l945 0094  
                                     l937 0049                                       l795 041F  
                                     _GIE 005F      __size_of_DimmerLights_Initialization 0007  
                                     _RB2 0032                                       _LED 0073  
                                     _RB3 0033                                       _RB4 0034  
                                     _RB5 0035                                       _RA7 002F  
                                     _PS0 0408                                       _PS1 0409  
                                     _PS2 040A                                       _ISR 0FD0  
                                     _PSA 040B                                       _WDT 003C  
                                     _Cmd 0070              getDimmerLights_Status@lights 0055  
              ??_setDimmerIntr_Dimming_RF 0054                ??_setDimmerIntr_Dimming_Sw 0054  
         setDimmerIntr_Dimming_RF@command 0053                                       fsr0 0004  
                                     indf 0000                           __end_of_ADC_Set 0E72  
    setDimmerLights_Initialization@lights 0075              getDimmerLights_Status@status 0056  
     __end_of_setDimmerIntr_ControlStatus 0FA3               _setDimmerIntr_ControlStatus 0F8D  
                                    ?_ISR 0075                     _setDimmerLights_OnOff 0658  
                                    l4123 06FC                                      l4203 02BC  
                                    l4045 0579                                      l4311 00B7  
                                    l4071 05B8                                      l4063 05A5  
                                    l4055 0581                                      l4039 056E  
                                    l4057 058F                                      l4233 034E  
                                    l4225 0322                                      l4209 02D8  
                                    l4323 00CE                                      l4067 05B0  
                                    l4219 0306                                      l4093 06CC  
                                    l4085 06A8                                      l4181 028D  
                                    l4253 07ED                                      l4327 00DA  
                                    l4087 06B6                                      l4239 035C  
                                    l4511 0623                                      l3801 0F7B  
                                    l3713 04A2                                      l3721 04AA  
                                    l4425 0387                                      l4361 0198  
                                    l4329 00DB                                      l4273 006B  
                                    l4097 06D7                                      l4193 02A5  
                                    l4185 0295                                      l4177 0285  
                                    l4451 03ED                                      l4435 03B1  
                                    l4419 0378                                      l4347 012F  
                                    l4339 011B                                      l4363 01A7  
                                    l3805 0F87                                      l3821 0678  
                                    l4453 03CA                                      l4437 038E  
                                    l4357 0166                                      l4189 029D  
                                    l4517 0639                                      l3727 04B3  
                                    l3735 04BB                                      l3911 052E  
                                    l4455 03F9                                      l4439 03BD  
                                    l4463 0414                                      l3745 04CE  
                                    l3753 04D6                                      l3921 0552  
                                    l4457 0405                                      l3827 068A  
                                    l3923 0559                                      l4379 01D7  
                                    l3837 0FC6                                      l3757 04DE  
                                    l3749 04D2                                      l3909 0527  
                                    l3933 07FE                                      l3861 07B2  
                                    l3775 04F0                                      l3783 04FC  
                                    l3863 07B5                                      l3793 0F01  
                                    l3795 0F06                                      l3779 04F6  
                                    l3867 07BB                     _setDimmerLights_SwOff 073C  
                                    l3789 0EFC                                      l3981 046B  
                                    l3973 0453                                      l3965 0447  
                                    l3885 0783                                      l3983 0473  
                                    l3897 075D                                      l3985 0481  
                                    l3969 044D                                      l3979 045F  
                   _myMain_Initialization 0E43                              __CFG_WDTE$ON 0000  
                                    u4115 0F71                                      u5105 018A  
                                    u5125 01B7                                      u4350 0468  
                                    u5055 00F9                                      u5065 0111  
                                    u5250 03BA                                      u4370 047E  
                                    u4435 0584                                      u4515 06AB  
                                    _PEIE 005E                                      u5085 014D  
                                    u5255 0397                                      u5175 01F4  
                                    u4455 0590                                      u4535 06B7  
                                    u5280 03F6                                      u4465 059C  
                                    u4545 06C3                                      u4475 05A6  
                                    u4555 06CD                                      u4645 070C  
                                    u5285 03D3                                      __CDS 002D  
                                    _WPUB 0095                                      __PIR 00A0  
                                    _main 0611                                      btemp 007E  
                         __end_of_WDT_Set 0ED8                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                          __end_of_CDS_Main 0712  
                                   ??_ISR 0076   __end_of_getDimmerLights_Allow_Condition 0E54  
__size_of_getDimmerLights_Allow_Condition 0005         ??_getDimmerLights_Allow_Condition 0053  
        ?_getDimmerLights_Allow_Condition 0075           _getDimmerLights_Allow_Condition 0E4F  
                  _getDimmerLights_Status 0F08                             __CFG_PLLEN$ON 0000  
                        __end_of_LED_Main 0E47                     ?_getDimmerLights_Line 0075  
                              _DimmerIntr 0071                     ?_setDimmerLights_Main 0075  
                        ??_setPIRLED_Main 0057                     ?_setDimmerLights_SwOn 0075  
                                   ?_main 0063                           __end_of___awdiv 05BF  
                                   _ADRES 001E                           ___awdiv@divisor 0053  
                                   _T1CON 0010                           __end_of___lwdiv 06DE  
                                   i1l370 0608                                     i1l373 05F5  
                                   i1l391 0EEF                                     i1l367 05D9  
                                   i1l384 0607                                     i1l628 0FDB  
                         ___awdiv@counter 0058                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                   __end_of_Timeout_Counter 0F77  
                                   _Light 003E                          __end_of_PIR_Main 0226  
                        __end_of_TMR1_ISR 07A5                          __end_of_TMR1_Set 0ECA  
                                   _getAD 07A5                          __end_of_WDT_Main 0F2A  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 0012             __end_of_setLED_Initialization 0F3C  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                         getPIR_AD@channel1 0061  
                       getPIR_AD@channel2 005C                           __initialization 0013  
                            __end_of_main 0658                          __end_of_Fosc_Set 0E5E  
          getMain_All_LightsStatus@status 0053              setDimmerLights_OnOff@command 0057  
                          _Exception_Main 035E                                 ??_ADC_Set 0053  
                                  ??_main 0067               ?_setDimmerIntr_DimmingValue 0053  
            ??_DimmerLights_SelectPointer 0053        setDimmerIntr_ControlStatus@command 0053  
                 _setDimmerLights_Dimming 0FB9                               _DimmerIntr1 0020  
                _getMain_All_LightsStatus 0E82                    ?_setDimmerLights_OnOff 0057  
                                  ?_getAD 0053                    ?_setDimmerLights_SwOff 0075  
                  ?_myMain_Initialization 0075                                    _ADCON0 001F  
                                  _ADCON1 009F                          ___awdiv@dividend 0055  
                               ??_WDT_Set 0053                                    _ANSELA 0185  
                                  _ANSELB 0186                  _getMain_All_Error_Status 0E54  
                                  i1l2945 05CD                                    i1l2975 05FB  
                                  i1l2977 05FE                                    i1l2969 05EF  
                                  i1l2979 0602                                    _FVRCON 009D  
    getDimmerLights_Allow_Condition@allow 0053                                    _PIRLED 0032  
                                  _OSCCON 0090                                    _TMR1IE 0460  
                                  _TMR1IF 0060                                    _IO_Set 0FE8  
                    Exception_Main@i_2289 005C                                    _Dimmer 0036  
                   __end_of_getCmd_Status 0F08                __end_of_Mcu_Initialization 0EE7  
                                  _Timer1 0039               __size_of_CDS_Initialization 0004  
                  __end_of_Exception_Main 0420                      Exception_Main@lights 005E  
                               ??___awdiv 0057                    ??_getDimmerLights_Line 0053  
                               ??___lwdiv 0057                    ??_setDimmerLights_Main 005A  
                  ??_setDimmerLights_SwOn 0055                                    _setLED 0491  
                                  _myMain 0027                          ___awdiv@quotient 005A  
        ??_setDimmerLights_Initialization 0053           ?_setDimmerLights_Initialization 0075  
        __end_of_setDimmerIntr_Dimming_RF 0FB9          __end_of_setDimmerIntr_Dimming_Sw 0F63  
                                  saved_w 007E                          ?_Timeout_Counter 0075  
             __size_of_DimmerLights_IOC_1 0010               __size_of_DimmerLights_TMR_1 0052  
                 __size_of_LedPointSelect 001C                                 ?_CDS_Main 0075  
         setDimmerIntr_Dimming_Sw@command 0053               __size_of_PIR_Initialization 000D  
                 __end_of__initialization 0024           setDimmerIntr_DimmingValue@value 0053  
                               ?_LED_Main 0075                             ?_my_MainTimer 0075  
            ?_DimmerLights_Initialization 0075                ?_DimmerIntr_Initialization 0075  
                          __pcstackCOMMON 0075                        __size_of_getCDS_AD 002A  
                         ?_Exception_Main 0075                             __end_of_getAD 07C1  
                               ?_PIR_Main 0075                                 ?_TMR1_ISR 0075  
                               ?_TMR1_Set 0075                        _LED_Initialization 0EA3  
                      __size_of_getPIR_AD 0138                 ??_setDimmerLights_Dimming 0057  
                               ?_WDT_Main 0075         setDimmerIntr_ControlStatus@lights 0055  
              __end_of_set_TimeoutCleared 0E64                       ?_LED_Initialization 0075  
                                 ??_getAD 0054                                ??_CDS_Main 0053  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                               ?_Fosc_Set 0075                                   ?_IO_Set 0075  
                         __CFG_VCAPEN$DIS 0000                            ??_my_MainTimer 0053  
                              ??_LED_Main 0059                      ??_LED_Initialization 0058  
                            _DimmerLights 0072                         LedPointSelect@led 0054  
                 ?_getDimmerLights_Status 0075                                __pmaintext 0611  
       __end_of_DimmerIntr_Initialization 0F4F             ??_DimmerLights_Initialization 0054  
                              ??_PIR_Main 0057                                ??_TMR1_ISR 0076  
                              ??_TMR1_Set 0053                                __pintentry 0004  
                                 ?_setLED 0055                                   _ADC_Set 0E6B  
      __end_of_DimmerLights_SelectPointer 0E97                _DimmerLights_SelectPointer 0E8B  
                              ??_WDT_Main 0053                    __size_of_getCDS_Status 0008  
           setDimmerLights_Dimming@lights 0057             setDimmerLights_Dimming@status 0056  
   getDimmerLights_Allow_Condition@lights 0075                         __end_of_getCDS_AD 073C  
                                 _WDT_Set 0ECA                    __size_of_setCmd_Status 0016  
                              ??_Fosc_Set 0053                         __end_of_getPIR_AD 035E  
         __end_of_setDimmerLights_Dimming 0FD0                       getCmd_Status@number 0053  
                         __size_of_IO_Set 0018                       setCmd_Status@number 0055  
       __size_of_setDimmerIntr_Dimming_RF 0016         __size_of_setDimmerIntr_Dimming_Sw 0014  
                              getCDS_AD@i 0058                                getCDS_AD@j 0059  
               ?_setDimmerIntr_Dimming_RF 0053                 ?_setDimmerIntr_Dimming_Sw 0053  
                                 _VarLED1 004B                                   _VarLED2 004F  
          __end_of_getDimmerLights_Status 0F19                                   ___awdiv 0562  
                                 ___lwdiv 069E                ??_getMain_All_LightsStatus 0053  
                             PIR_Main@cds 005F                           __size_of_setLED 0071  
                                 __ptext0 0000                                   __ptext1 07DD  
                                 __ptext2 0E43                                   __ptext3 0226  
                                 __ptext4 069E                                   __ptext5 0562  
                                 __ptext6 0712                                   __ptext7 07A5  
                                 __ptext8 0E5E                                   __ptext9 0F63  
                              getPIR_AD@i 0062                                getPIR_AD@j 0060  
                            __size_of_ISR 0018                ??_getMain_All_Error_Status 0053  
                 ??_setDimmerLights_OnOff 0058                   ??_setDimmerLights_SwOff 0055  
                 ??_myMain_Initialization 0053                         _DimmerLights_Main 0E4B  
                      ?_DimmerLights_Main 0075                            _LedPointSelect 07C1  
                                 clrloop0 0E7B                      end_of_initialization 0024  
                     ??_DimmerLights_Main 005B                    setDimmerLights_SwOn@sw 0055  
                           _getCDS_Status 0E72                     _setLED_Initialization 0F2A  
                           _setCmd_Status 0F77                  setLED_Initialization@led 0057  
               __end_of_DimmerLights_Main 0E4F                        _Mcu_Initialization 0ED8  
                    __end_of_my_MainTimer 07F7                    __end_of_LedPointSelect 07DD  
                     setPIRLED_Main@count 0058          setDimmerIntr_DimmingValue@lights 0055  
                     ?_Mcu_Initialization 0075                   __size_of_setPIRLED_Main 0071  
          setDimmerIntr_Dimming_RF@lights 0055           getMain_All_Error_Status@command 0075  
                       __size_of_CDS_Main 0034                            ?_getCDS_Status 0075  
                        ??_Exception_Main 0057                            __end_of_IO_Set 1000  
              __end_of_CDS_Initialization 0E4B                         __size_of_LED_Main 0003  
             ??_DimmerIntr_Initialization 0053                      ??_Mcu_Initialization 0054  
                           ?_WDT_Clearing 0075                            ?_setCmd_Status 0053  
                       __size_of_PIR_Main 01FF                         __size_of_TMR1_ISR 001E  
           __size_of_getDimmerLights_Line 0009          DimmerLights_SelectPointer@lights 0054  
                       __size_of_TMR1_Set 000E             __size_of_setDimmerLights_Main 0060  
                          __end_of_setLED 0502             __size_of_setDimmerLights_SwOn 0023  
              __end_of_DimmerLights_IOC_1 0EF7                         __size_of_WDT_Main 0011  
              __end_of_DimmerLights_TMR_1 0611                       start_initialization 0013  
                         ?_LedPointSelect 0075                               __end_of_ISR 0FE8  
                  __size_of_getCmd_Status 0011                __end_of_PIR_Initialization 0EBC  
            ?_setDimmerIntr_ControlStatus 0053                       getCDS_Status@status 0053  
                      _set_TimeoutCleared 0E5E                                  ??_IO_Set 0053  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 0047  
                  ?_setLED_Initialization 0075                         __size_of_Fosc_Set 0005  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 0053  
                     Exception_Main@count 0058                       Exception_Main@error 0059  
        __end_of_getMain_All_LightsStatus 0E8B                                  ??_setLED 0056  
                                ?_ADC_Set 0075               ?_DimmerLights_SelectPointer 0075  
        __end_of_getMain_All_Error_Status 0E59                __size_of_DimmerLights_Main 0004  
          setDimmerIntr_Dimming_Sw@lights 0055                               __pbssCOMMON 0070  
                               ___latbits 0001                             __pcstackBANK0 0053  
                    ??_set_TimeoutCleared 0053                 _DimmerIntr_Initialization 0F3C  
                                ?_WDT_Set 0075                           ??_getCDS_Status 0053  
           ??_setDimmerIntr_ControlStatus 0054                             _DimmerLights1 003F  
                           PIR_Main@error 005C                                 _getCDS_AD 0712  
                               _getPIR_AD 0226               __size_of_LED_Initialization 000C  
                         Exception_Main@i 005A                          ___lwdiv@dividend 0055  
                           _getCmd_Status 0EF7                           ??_setCmd_Status 0054  
                           _PIR_Main$2934 005D                  ?_setDimmerLights_Dimming 0056  
                                ?___awdiv 0053                     __size_of_my_MainTimer 001A  
                                ?___lwdiv 0053                  getDimmerLights_Line@line 0053  
            ??_setDimmerIntr_DimmingValue 0054            __size_of_setDimmerLights_OnOff 0046  
           __end_of_setDimmerLights_OnOff 069E            __size_of_setDimmerLights_SwOff 0028  
          __size_of_myMain_Initialization 0001             __end_of_setDimmerLights_SwOff 0764  
           __end_of_myMain_Initialization 0E44                            __size_of_getAD 001C  
                        ___lwdiv@quotient 0059                            _setPIRLED_Main 0420  
                                _CDS_Main 06DE                         interrupt_function 0004  
                              ?_getCDS_AD 0055                                  _LED_Main 0E44  
                               clear_ram0 0E7A                              _my_MainTimer 07DD  
                              ?_getPIR_AD 005C       __end_of_DimmerLights_Initialization 0E6B  
             _DimmerLights_Initialization 0E64                            ?_getCmd_Status 0075  
                                _GO_nDONE 00F9                         ??_Timeout_Counter 0053  
    __size_of_setDimmerIntr_ControlStatus 0016       __size_of_setDimmerIntr_DimmingValue 000C  
                                _PIR_Main 0027                                  _TMR1_ISR 0787  
                                _TMR1_Set 0EBC                                  _WDT_Main 0F19  
                        __size_of_ADC_Set 0007                    __end_of_setPIRLED_Main 0491  
          getMain_All_Error_Status@status 0053                               getAD@adcon0 0054  
                             getAD@adcon1 0053                      __end_of_WDT_Clearing 0004  
       __size_of_getMain_All_LightsStatus 0009                 ?_getMain_All_LightsStatus 0075  
                _setDimmerIntr_Dimming_RF 0FA3               setDimmerLights_OnOff@lights 0059  
                _setDimmerIntr_Dimming_Sw 0F4F                                  _Fosc_Set 0E59  
                        __size_of_WDT_Set 000E         __size_of_getMain_All_Error_Status 0005  
               ?_getMain_All_Error_Status 0075       __size_of_DimmerLights_SelectPointer 000C  
                                _SwDetect 0074                          getCmd_Status@cmd 0054  
                        setCmd_Status@cmd 0053                                 setLED@led 0056  
                        __size_of___awdiv 005D                          __size_of___lwdiv 0040  
                setDimmerLights_SwOn@idle 0056                          ??_LedPointSelect 0053  
                      _CDS_Initialization 0E47                           ?_setPIRLED_Main 0075  
                         ___lwdiv@divisor 0053                       ?_CDS_Initialization 0075  
                         ___lwdiv@counter 0058                                  __ptext10 0F19  
                                __ptext11 0002                                  __ptext20 0E59  
                                __ptext12 0027                                  __ptext21 0E6B  
                                __ptext13 0764                                  __ptext30 07F7  
                                __ptext22 0E44                                  __ptext14 0E72  
                                __ptext31 0E4B                                  __ptext23 0420  
                                __ptext15 0EAF                                  __ptext40 0E82  
                                __ptext32 0502                                  __ptext24 0EA3  
                                __ptext16 0ED8                                  __ptext41 0EF7  
                                __ptext33 0658                                  __ptext25 0F2A  
                                __ptext17 0ECA                                  __ptext50 0E47  
                                __ptext42 0FB9                                  __ptext34 0491  
                                __ptext26 035E                                  __ptext18 0EBC  
                                __ptext51 0FD0                                  __ptext43 0F4F  
                                __ptext35 07C1                                  __ptext27 073C  
                                __ptext19 0FE8                                  __ptext52 0787  
                                __ptext44 0E4F                                  __ptext36 0FA3  
                                __ptext28 0E54                                  __ptext53 05BF  
                                __ptext45 0E8B                                  __ptext37 0E97  
                                __ptext29 0F08                                  __ptext54 0EE7  
                                __ptext46 0E64                                  __ptext38 0F8D  
                                __ptext47 0E42                                  __ptext39 0F77  
                                __ptext48 0F3C                                  __ptext49 06DE  
                 ??_setLED_Initialization 0057                  ??_getDimmerLights_Status 0055  
            __end_of_getDimmerLights_Line 0800              __end_of_setDimmerLights_Main 0562  
                      _DimmerLights_IOC_1 0EE7              __end_of_setDimmerLights_SwOn 0787  
                             ??_getCDS_AD 0056                             setLED@command 0055  
                           __size_of_main 0047        __size_of_DimmerIntr_Initialization 0013  
                         ??_getCmd_Status 0053                        _DimmerLights_TMR_1 05BF  
              setDimmerLights_Main@lights 005A                               ??_getPIR_AD 005D  
                      _PIR_Initialization 0EAF                      ??_CDS_Initialization 0053  
                     ?_DimmerLights_IOC_1 0075                       ?_DimmerLights_TMR_1 0075  
             __size_of_Mcu_Initialization 000F                       ?_PIR_Initialization 0075  
                                main@argc 0063                                  main@argv 0065  
      __end_of_setDimmerIntr_DimmingValue 0EA3                _setDimmerIntr_DimmingValue 0E97  
                    ??_DimmerLights_IOC_1 0075                      ??_DimmerLights_TMR_1 0075  
                 setDimmerLights_SwOff@sw 0055                      ??_PIR_Initialization 0053  
                                intlevel1 0000    __end_of_setDimmerLights_Initialization 0E43  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0E42  
                 __size_of_Exception_Main 00C2                     __size_of_WDT_Clearing 0002  
        __size_of_setDimmerLights_Dimming 0017               __size_of_set_TimeoutCleared 0006  
                      __CFG_FOSC$INTOSCIO 0000                           _Timeout_Counter 0F63  
         __size_of_getDimmerLights_Status 0011                __end_of_LED_Initialization 0EAF  
                   __end_of_getCDS_Status 0E7A                         getCDS_AD@channel1 005A  
                       getCDS_AD@channel2 0055  
