

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jan 13 13:36:29 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0186                     	;# 
   144  018C                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0096                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009F                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0186                     	;# 
   213  018C                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0096                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009F                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0186                     	;# 
   282  018C                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0096                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009F                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  0185                     	;# 
   350  0186                     	;# 
   351  018C                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  0089                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  008E                     	;# 
   394  008F                     	;# 
   395  0090                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0093                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0095                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0096                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009F                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  0185                     	;# 
   419  0186                     	;# 
   420  018C                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  008F                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0095                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0096                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009F                     	;# 
   479  0108                     	;# 
   480  0109                     	;# 
   481  010C                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0186                     	;# 
   489  018C                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0096                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009F                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010D                     	;# 
   554  010E                     	;# 
   555  010F                     	;# 
   556  0185                     	;# 
   557  0186                     	;# 
   558  018C                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0096                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009F                     	;# 
   617  0108                     	;# 
   618  0109                     	;# 
   619  010C                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0186                     	;# 
   627  018C                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0014                     	;# 
   649  0015                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  0081                     	;# 
   663  0085                     	;# 
   664  0086                     	;# 
   665  0087                     	;# 
   666  0089                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0096                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009F                     	;# 
   686  0108                     	;# 
   687  0109                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0186                     	;# 
   696  018C                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000E                     	;# 
   712  000F                     	;# 
   713  0010                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0014                     	;# 
   718  0015                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001D                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  0081                     	;# 
   732  0085                     	;# 
   733  0086                     	;# 
   734  0087                     	;# 
   735  0089                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0096                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009F                     	;# 
   755  0108                     	;# 
   756  0109                     	;# 
   757  010C                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010F                     	;# 
   763  0185                     	;# 
   764  0186                     	;# 
   765  018C                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0095                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0096                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009F                     	;# 
   824  0108                     	;# 
   825  0109                     	;# 
   826  010C                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0186                     	;# 
   834  018C                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000D                     	;# 
   848  000E                     	;# 
   849  000E                     	;# 
   850  000F                     	;# 
   851  0010                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0013                     	;# 
   855  0014                     	;# 
   856  0015                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0017                     	;# 
   860  0018                     	;# 
   861  0019                     	;# 
   862  001A                     	;# 
   863  001B                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  001D                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  0081                     	;# 
   870  0085                     	;# 
   871  0086                     	;# 
   872  0087                     	;# 
   873  0089                     	;# 
   874  008C                     	;# 
   875  008D                     	;# 
   876  008E                     	;# 
   877  008F                     	;# 
   878  0090                     	;# 
   879  0091                     	;# 
   880  0092                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0096                     	;# 
   888  0098                     	;# 
   889  0099                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009F                     	;# 
   893  0108                     	;# 
   894  0109                     	;# 
   895  010C                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010D                     	;# 
   899  010E                     	;# 
   900  010F                     	;# 
   901  0185                     	;# 
   902  0186                     	;# 
   903  018C                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0009                     	;# 
   913  000A                     	;# 
   914  000B                     	;# 
   915  000C                     	;# 
   916  000D                     	;# 
   917  000E                     	;# 
   918  000E                     	;# 
   919  000F                     	;# 
   920  0010                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0014                     	;# 
   925  0015                     	;# 
   926  0015                     	;# 
   927  0016                     	;# 
   928  0017                     	;# 
   929  0018                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001B                     	;# 
   934  001C                     	;# 
   935  001D                     	;# 
   936  001E                     	;# 
   937  001F                     	;# 
   938  0081                     	;# 
   939  0085                     	;# 
   940  0086                     	;# 
   941  0087                     	;# 
   942  0089                     	;# 
   943  008C                     	;# 
   944  008D                     	;# 
   945  008E                     	;# 
   946  008F                     	;# 
   947  0090                     	;# 
   948  0091                     	;# 
   949  0092                     	;# 
   950  0093                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0095                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009C                     	;# 
   960  009D                     	;# 
   961  009F                     	;# 
   962  0108                     	;# 
   963  0109                     	;# 
   964  010C                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  010F                     	;# 
   970  0185                     	;# 
   971  0186                     	;# 
   972  018C                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  000E                     	;# 
   988  000F                     	;# 
   989  0010                     	;# 
   990  0011                     	;# 
   991  0012                     	;# 
   992  0013                     	;# 
   993  0014                     	;# 
   994  0015                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  001D                     	;# 
  1005  001E                     	;# 
  1006  001F                     	;# 
  1007  0081                     	;# 
  1008  0085                     	;# 
  1009  0086                     	;# 
  1010  0087                     	;# 
  1011  0089                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  008F                     	;# 
  1016  0090                     	;# 
  1017  0091                     	;# 
  1018  0092                     	;# 
  1019  0093                     	;# 
  1020  0093                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0096                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009C                     	;# 
  1029  009D                     	;# 
  1030  009F                     	;# 
  1031  0108                     	;# 
  1032  0109                     	;# 
  1033  010C                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  010F                     	;# 
  1039  0185                     	;# 
  1040  0186                     	;# 
  1041  018C                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  000E                     	;# 
  1057  000F                     	;# 
  1058  0010                     	;# 
  1059  0011                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0015                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0017                     	;# 
  1067  0018                     	;# 
  1068  0019                     	;# 
  1069  001A                     	;# 
  1070  001B                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001D                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  0081                     	;# 
  1077  0085                     	;# 
  1078  0086                     	;# 
  1079  0087                     	;# 
  1080  0089                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  008F                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0093                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0095                     	;# 
  1093  0096                     	;# 
  1094  0096                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009F                     	;# 
  1100  0108                     	;# 
  1101  0109                     	;# 
  1102  010C                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  010F                     	;# 
  1108  0185                     	;# 
  1109  0186                     	;# 
  1110  018C                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000D                     	;# 
  1124  000E                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0015                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  001A                     	;# 
  1139  001B                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  0081                     	;# 
  1146  0085                     	;# 
  1147  0086                     	;# 
  1148  0087                     	;# 
  1149  0089                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008F                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0093                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0096                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009F                     	;# 
  1169  0108                     	;# 
  1170  0109                     	;# 
  1171  010C                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  0185                     	;# 
  1178  0186                     	;# 
  1179  018C                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000E                     	;# 
  1195  000F                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  0081                     	;# 
  1215  0085                     	;# 
  1216  0086                     	;# 
  1217  0087                     	;# 
  1218  0089                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008F                     	;# 
  1223  0090                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0096                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009F                     	;# 
  1238  0108                     	;# 
  1239  0109                     	;# 
  1240  010C                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0185                     	;# 
  1247  0186                     	;# 
  1248  018C                     	;# 
  1249  0000                     	;# 
  1250  0001                     	;# 
  1251  0002                     	;# 
  1252  0003                     	;# 
  1253  0004                     	;# 
  1254  0005                     	;# 
  1255  0006                     	;# 
  1256  0007                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  000E                     	;# 
  1264  000F                     	;# 
  1265  0010                     	;# 
  1266  0011                     	;# 
  1267  0012                     	;# 
  1268  0013                     	;# 
  1269  0014                     	;# 
  1270  0015                     	;# 
  1271  0015                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001B                     	;# 
  1279  001C                     	;# 
  1280  001D                     	;# 
  1281  001E                     	;# 
  1282  001F                     	;# 
  1283  0081                     	;# 
  1284  0085                     	;# 
  1285  0086                     	;# 
  1286  0087                     	;# 
  1287  0089                     	;# 
  1288  008C                     	;# 
  1289  008D                     	;# 
  1290  008E                     	;# 
  1291  008F                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0093                     	;# 
  1297  0094                     	;# 
  1298  0095                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0096                     	;# 
  1302  0098                     	;# 
  1303  0099                     	;# 
  1304  009C                     	;# 
  1305  009D                     	;# 
  1306  009F                     	;# 
  1307  0108                     	;# 
  1308  0109                     	;# 
  1309  010C                     	;# 
  1310  010C                     	;# 
  1311  010D                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010F                     	;# 
  1315  0185                     	;# 
  1316  0186                     	;# 
  1317  018C                     	;# 
  1318  001F                     _ADCON0	set	31
  1319  001E                     _ADRES	set	30
  1320  0005                     _PORTA	set	5
  1321  0006                     _PORTB	set	6
  1322  0007                     _PORTC	set	7
  1323  0010                     _T1CON	set	16
  1324  000F                     _TMR1H	set	15
  1325  000E                     _TMR1L	set	14
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002F                     _RA7	set	47
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0060                     _TMR1IF	set	96
  1335  009F                     _ADCON1	set	159
  1336  009D                     _FVRCON	set	157
  1337  0090                     _OSCCON	set	144
  1338  0085                     _TRISA	set	133
  1339  0086                     _TRISB	set	134
  1340  0087                     _TRISC	set	135
  1341  0095                     _WPUB	set	149
  1342  0408                     _PS0	set	1032
  1343  0409                     _PS1	set	1033
  1344  040A                     _PS2	set	1034
  1345  040B                     _PSA	set	1035
  1346  0460                     _TMR1IE	set	1120
  1347  0185                     _ANSELA	set	389
  1348  0186                     _ANSELB	set	390
  1349                           
  1350                           	psect	text0
  1351  0000                     __ptext0:	
  1352                           ; #config settings
  1353                           
  1354                           
  1355                           ;psect for function _DimmerLights_IOC_1
  1356  0000                     
  1357                           	psect	cinit
  1358  0013                     start_initialization:	
  1359  0013                     __initialization:	
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1363  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1364  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1365  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1366  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369  0018  1383               	bcf	3,7	;select IRP bank0
  1370  0019  3020               	movlw	low __pbssBANK0
  1371  001A  0084               	movwf	4
  1372  001B  3059               	movlw	low (__pbssBANK0+57)
  1373  001C  158A  25BE  118A   	fcall	clear_ram0
  1374                           
  1375                           ; Clear objects allocated to BANK1
  1376  001F  30A0               	movlw	low __pbssBANK1
  1377  0020  0084               	movwf	4
  1378  0021  30D6               	movlw	low (__pbssBANK1+54)
  1379  0022  158A  25BE         	fcall	clear_ram0
  1380  0024                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0024                     __end_of__initialization:	
  1384  0024  0183               	clrf	3
  1385  0025  118A  2DDF         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0070                     __pbssCOMMON:	
  1389  0070                     _Cmd:	
  1390  0070                     	ds	1
  1391  0071                     _DimmerIntr:	
  1392  0071                     	ds	1
  1393  0072                     _DimmerLights:	
  1394  0072                     	ds	1
  1395  0073                     _LED:	
  1396  0073                     	ds	1
  1397  0074                     _SwDetect:	
  1398  0074                     	ds	1
  1399                           
  1400                           	psect	bssBANK0
  1401  0020                     __pbssBANK0:	
  1402  0020                     _DimmerIntr1:	
  1403  0020                     	ds	7
  1404  0027                     _myMain:	
  1405  0027                     	ds	6
  1406  002D                     _Dimmer:	
  1407  002D                     	ds	5
  1408  0032                     __CDS:	
  1409  0032                     	ds	5
  1410  0037                     _PIRLED:	
  1411  0037                     	ds	4
  1412  003B                     _Timer1:	
  1413  003B                     	ds	3
  1414  003E                     _WDT:	
  1415  003E                     	ds	2
  1416  0040                     _Light:	
  1417  0040                     	ds	1
  1418  0041                     _Temp:	
  1419  0041                     	ds	12
  1420  004D                     _VarErrLED:	
  1421  004D                     	ds	4
  1422  0051                     _VarLED1:	
  1423  0051                     	ds	4
  1424  0055                     _VarLED2:	
  1425  0055                     	ds	4
  1426                           
  1427                           	psect	bssBANK1
  1428  00A0                     __pbssBANK1:	
  1429  00A0                     __PIR:	
  1430  00A0                     	ds	46
  1431  00CE                     _DimmerLights1:	
  1432  00CE                     	ds	8
  1433                           
  1434                           	psect	clrtext
  1435  0DBE                     clear_ram0:	
  1436                           ;	Called with FSR containing the base address, and
  1437                           ;	W with the last address+1
  1438                           
  1439  0DBE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1440  0DBF                     clrloop0:	
  1441  0DBF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1442  0DC0  0A84               	incf	4,f	;increment pointer
  1443  0DC1  0604               	xorwf	4,w	;XOR with final address
  1444  0DC2  1903               	btfsc	3,2	;have we reached the end yet?
  1445  0DC3  3400               	retlw	0	;all done for this memory range, return
  1446  0DC4  0604               	xorwf	4,w	;XOR again to restore value
  1447  0DC5  2DBF               	goto	clrloop0	;do the next byte
  1448                           
  1449                           	psect	cstackCOMMON
  1450  0075                     __pcstackCOMMON:	
  1451  0075                     ?_setDimmerLights_Initialization:	
  1452  0075                     ?_setDimmerLights_Main:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     ?_DimmerLights_PIR_Control:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0075                     ?_setLED_Initialization:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0075                     ?_setPIRLED_Main:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0075                     ?_Fosc_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0075                     ?_IO_Set:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0075                     ?_TMR1_Set:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0075                     ?_ADC_Set:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0075                     ?_WDT_Set:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0075                     ?_TMR1_ISR:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0075                     ?_Timeout_Counter:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0075                     ?_set_TimeoutCleared:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0075                     ?_WDT_Clearing:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0075                     ?_myMain_Initialization:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0075                     ?_Temp_Initialization:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0075                     ?_PIR_Initialization:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0075                     ?_getTemp_AD:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0075                     ?_my_MainTimer:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0075                     ?_Temp_Main:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0075                     ?_PIR_Main:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0075                     ?_Exception_Main:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0075                     ?_setTemp_Initialization:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0075                     ?_setTemp_Main:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0075                     ?_CDS_Initialization:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0075                     ?_CDS_Main:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0075                     ?_DimmerIntr_Initialization:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0075                     ?_DimmerLights_SelectPointer:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0075                     ?_DimmerLights_Initialization:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0075                     ?_setDimmerLights_SwOn:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0075                     ?_setDimmerLights_SwOff:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0075                     ?_DimmerLights_Main:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0075                     ?_DimmerLights_TMR_1:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0075                     ??_DimmerLights_TMR_1:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0075                     ?_DimmerLights_IOC_1:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0075                     ??_DimmerLights_IOC_1:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0075                     ?_LedPointSelect:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0075                     ?_LED_Initialization:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0075                     ?_LED_Main:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0075                     ?_Mcu_Initialization:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0075                     ?_ISR:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0075                     ?_WDT_Main:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0075                     ?_getDimmerLights_Allow_Condition:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0075                     ?_getMain_All_LightsStatus:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0075                     ?_getCmd_Status:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0075                     ?_getCDS_Status:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0075                     ?_getDimmerIntr_DimmingValue:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0075                     ?_getDimmerLights_Status:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0075                     ?_getMain_All_Error_Status:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0075                     setDimmerLights_Initialization@lights:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0075                     getDimmerLights_Allow_Condition@lights:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x0
  1604  0075                     	ds	1
  1605  0076                     ??_TMR1_ISR:	
  1606  0076                     ??_ISR:	
  1607                           ; 0 bytes @ 0x1
  1608                           
  1609                           
  1610                           ; 0 bytes @ 0x1
  1611  0076                     	ds	4
  1612                           
  1613                           	psect	cstackBANK0
  1614  0059                     __pcstackBANK0:	
  1615  0059                     ??_setDimmerLights_Initialization:	
  1616  0059                     ??_getDimmerLights_Allow_Condition:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0059                     ??_getMain_All_LightsStatus:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0059                     ??_getCmd_Status:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0059                     ?_setCmd_Status:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0059                     ??_Fosc_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0059                     ??_IO_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0059                     ??_TMR1_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0059                     ??_ADC_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0059                     ??_WDT_Set:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0059                     ??_Timeout_Counter:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0059                     ??_set_TimeoutCleared:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0059                     ??_WDT_Clearing:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0059                     ??_myMain_Initialization:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0059                     ??_Temp_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0059                     ??_PIR_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0059                     ??_my_MainTimer:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0059                     ??_setTemp_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0059                     ??_CDS_Initialization:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0059                     ??_CDS_Main:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0059                     ??_getCDS_Status:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0059                     ??_DimmerIntr_Initialization:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0059                     ?_setDimmerIntr_ControlStatus:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0059                     ?_setDimmerIntr_DimmingValue:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0059                     ??_getDimmerIntr_DimmingValue:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0059                     ?_setDimmerIntr_Dimming_Sw:	
  1689                           ; 0 bytes @ 0x0
  1690                           
  1691  0059                     ?_setDimmerIntr_Dimming_RF:	
  1692                           ; 0 bytes @ 0x0
  1693                           
  1694  0059                     ??_DimmerLights_SelectPointer:	
  1695                           ; 0 bytes @ 0x0
  1696                           
  1697  0059                     ??_LedPointSelect:	
  1698                           ; 0 bytes @ 0x0
  1699                           
  1700  0059                     ??_WDT_Main:	
  1701                           ; 0 bytes @ 0x0
  1702                           
  1703  0059                     ??_getMain_All_Error_Status:	
  1704                           ; 0 bytes @ 0x0
  1705                           
  1706  0059                     ?_getAD:	
  1707                           ; 0 bytes @ 0x0
  1708                           
  1709  0059                     ?___awdiv:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0059                     ?___lwdiv:	
  1713                           ; 2 bytes @ 0x0
  1714                           
  1715  0059                     getCDS_Status@status:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718  0059                     setDimmerIntr_ControlStatus@command:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0059                     setDimmerIntr_DimmingValue@value:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0059                     setDimmerIntr_Dimming_Sw@command:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0059                     setDimmerIntr_Dimming_RF@command:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0059                     getDimmerLights_Allow_Condition@allow:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0059                     getAD@adcon1:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0059                     getMain_All_LightsStatus@status:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0059                     setCmd_Status@cmd:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0059                     getCmd_Status@number:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0059                     ___awdiv@divisor:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0059                     ___lwdiv@divisor:	
  1749                           ; 2 bytes @ 0x0
  1750                           
  1751                           
  1752                           ; 2 bytes @ 0x0
  1753  0059                     	ds	1
  1754  005A                     ??_getAD:	
  1755  005A                     ??_setCmd_Status:	
  1756                           ; 0 bytes @ 0x1
  1757                           
  1758  005A                     ??_setDimmerIntr_ControlStatus:	
  1759                           ; 0 bytes @ 0x1
  1760                           
  1761  005A                     ??_setDimmerIntr_DimmingValue:	
  1762                           ; 0 bytes @ 0x1
  1763                           
  1764  005A                     ??_setDimmerIntr_Dimming_Sw:	
  1765                           ; 0 bytes @ 0x1
  1766                           
  1767  005A                     ??_setDimmerIntr_Dimming_RF:	
  1768                           ; 0 bytes @ 0x1
  1769                           
  1770  005A                     ??_DimmerLights_Initialization:	
  1771                           ; 0 bytes @ 0x1
  1772                           
  1773  005A                     ??_Mcu_Initialization:	
  1774                           ; 0 bytes @ 0x1
  1775                           
  1776  005A                     getDimmerIntr_DimmingValue@lights:	
  1777                           ; 0 bytes @ 0x1
  1778                           
  1779  005A                     DimmerLights_SelectPointer@lights:	
  1780                           ; 1 bytes @ 0x1
  1781                           
  1782  005A                     LedPointSelect@led:	
  1783                           ; 1 bytes @ 0x1
  1784                           
  1785  005A                     getAD@adcon0:	
  1786                           ; 1 bytes @ 0x1
  1787                           
  1788  005A                     getMain_All_Error_Status@command:	
  1789                           ; 1 bytes @ 0x1
  1790                           
  1791  005A                     getCmd_Status@cmd:	
  1792                           ; 1 bytes @ 0x1
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x1
  1796  005A                     	ds	1
  1797  005B                     ?_setLED:	
  1798  005B                     ??_getTemp_AD:	
  1799                           ; 0 bytes @ 0x2
  1800                           
  1801  005B                     ?_getCDS_AD:	
  1802                           ; 0 bytes @ 0x2
  1803                           
  1804  005B                     ??_setDimmerLights_SwOn:	
  1805                           ; 0 bytes @ 0x2
  1806                           
  1807  005B                     ??_setDimmerLights_SwOff:	
  1808                           ; 0 bytes @ 0x2
  1809                           
  1810  005B                     ??_getDimmerLights_Status:	
  1811                           ; 0 bytes @ 0x2
  1812                           
  1813  005B                     getCDS_AD@channel2:	
  1814                           ; 0 bytes @ 0x2
  1815                           
  1816  005B                     setDimmerIntr_ControlStatus@lights:	
  1817                           ; 1 bytes @ 0x2
  1818                           
  1819  005B                     setDimmerIntr_DimmingValue@lights:	
  1820                           ; 1 bytes @ 0x2
  1821                           
  1822  005B                     getDimmerIntr_DimmingValue@value:	
  1823                           ; 1 bytes @ 0x2
  1824                           
  1825  005B                     setDimmerIntr_Dimming_Sw@lights:	
  1826                           ; 1 bytes @ 0x2
  1827                           
  1828  005B                     setDimmerIntr_Dimming_RF@lights:	
  1829                           ; 1 bytes @ 0x2
  1830                           
  1831  005B                     setDimmerLights_SwOn@sw:	
  1832                           ; 1 bytes @ 0x2
  1833                           
  1834  005B                     setDimmerLights_SwOff@sw:	
  1835                           ; 1 bytes @ 0x2
  1836                           
  1837  005B                     getDimmerLights_Status@lights:	
  1838                           ; 1 bytes @ 0x2
  1839                           
  1840  005B                     setLED@command:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843  005B                     setCmd_Status@number:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846  005B                     _getMain_All_Error_Status$2587:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849  005B                     ___awdiv@dividend:	
  1850                           ; 2 bytes @ 0x2
  1851                           
  1852  005B                     ___lwdiv@dividend:	
  1853                           ; 2 bytes @ 0x2
  1854                           
  1855                           
  1856                           ; 2 bytes @ 0x2
  1857  005B                     	ds	1
  1858  005C                     ?_setDimmerLights_OnOff:	
  1859  005C                     ??_setLED:	
  1860                           ; 0 bytes @ 0x3
  1861                           
  1862  005C                     ??_getCDS_AD:	
  1863                           ; 0 bytes @ 0x3
  1864                           
  1865  005C                     ?_setDimmerIntr_MaxmumValue:	
  1866                           ; 0 bytes @ 0x3
  1867                           
  1868  005C                     setDimmerIntr_MaxmumValue@value:	
  1869                           ; 0 bytes @ 0x3
  1870                           
  1871  005C                     setDimmerLights_SwOn@idle:	
  1872                           ; 1 bytes @ 0x3
  1873                           
  1874  005C                     setDimmerLights_OnOff@command:	
  1875                           ; 1 bytes @ 0x3
  1876                           
  1877  005C                     getDimmerLights_Status@status:	
  1878                           ; 1 bytes @ 0x3
  1879                           
  1880  005C                     setLED@led:	
  1881                           ; 1 bytes @ 0x3
  1882                           
  1883                           
  1884                           ; 1 bytes @ 0x3
  1885  005C                     	ds	1
  1886  005D                     ??_setDimmerLights_OnOff:	
  1887  005D                     ??_setLED_Initialization:	
  1888                           ; 0 bytes @ 0x4
  1889                           
  1890  005D                     ??_setPIRLED_Main:	
  1891                           ; 0 bytes @ 0x4
  1892                           
  1893  005D                     ??_setDimmerIntr_MaxmumValue:	
  1894                           ; 0 bytes @ 0x4
  1895                           
  1896  005D                     ??___awdiv:	
  1897                           ; 0 bytes @ 0x4
  1898                           
  1899  005D                     ??___lwdiv:	
  1900                           ; 0 bytes @ 0x4
  1901                           
  1902  005D                     setDimmerLights_OnOff@lights:	
  1903                           ; 0 bytes @ 0x4
  1904                           
  1905  005D                     setLED_Initialization@led:	
  1906                           ; 1 bytes @ 0x4
  1907                           
  1908  005D                     getMain_All_Error_Status@status:	
  1909                           ; 1 bytes @ 0x4
  1910                           
  1911  005D                     getTemp_AD@channel:	
  1912                           ; 1 bytes @ 0x4
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x4
  1916  005D                     	ds	1
  1917  005E                     ??_PIR_Main:	
  1918  005E                     ??_Exception_Main:	
  1919                           ; 0 bytes @ 0x5
  1920                           
  1921  005E                     ??_LED_Initialization:	
  1922                           ; 0 bytes @ 0x5
  1923                           
  1924  005E                     getCDS_AD@i:	
  1925                           ; 0 bytes @ 0x5
  1926                           
  1927  005E                     setDimmerIntr_MaxmumValue@lights:	
  1928                           ; 1 bytes @ 0x5
  1929                           
  1930  005E                     setPIRLED_Main@count:	
  1931                           ; 1 bytes @ 0x5
  1932                           
  1933  005E                     ___awdiv@counter:	
  1934                           ; 1 bytes @ 0x5
  1935                           
  1936  005E                     ___lwdiv@counter:	
  1937                           ; 1 bytes @ 0x5
  1938                           
  1939                           
  1940                           ; 1 bytes @ 0x5
  1941  005E                     	ds	1
  1942  005F                     ??_DimmerLights_PIR_Control:	
  1943  005F                     ?_setDimmerLights_Dimming:	
  1944                           ; 0 bytes @ 0x6
  1945                           
  1946  005F                     ??_LED_Main:	
  1947                           ; 0 bytes @ 0x6
  1948                           
  1949  005F                     getCDS_AD@j:	
  1950                           ; 0 bytes @ 0x6
  1951                           
  1952  005F                     setDimmerLights_Dimming@status:	
  1953                           ; 1 bytes @ 0x6
  1954                           
  1955  005F                     Exception_Main@lights:	
  1956                           ; 1 bytes @ 0x6
  1957                           
  1958  005F                     ___awdiv@sign:	
  1959                           ; 1 bytes @ 0x6
  1960                           
  1961  005F                     ___lwdiv@quotient:	
  1962                           ; 1 bytes @ 0x6
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0x6
  1966  005F                     	ds	1
  1967  0060                     ??_setDimmerLights_Dimming:	
  1968  0060                     getCDS_AD@channel1:	
  1969                           ; 0 bytes @ 0x7
  1970                           
  1971  0060                     Exception_Main@count:	
  1972                           ; 1 bytes @ 0x7
  1973                           
  1974  0060                     ___awdiv@quotient:	
  1975                           ; 1 bytes @ 0x7
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0x7
  1979  0060                     	ds	1
  1980  0061                     setDimmerLights_Dimming@lights:	
  1981  0061                     Exception_Main@error:	
  1982                           ; 1 bytes @ 0x8
  1983                           
  1984                           
  1985                           ; 1 bytes @ 0x8
  1986  0061                     	ds	1
  1987  0062                     ??_setDimmerLights_Main:	
  1988  0062                     ?_getPIR_AD:	
  1989                           ; 0 bytes @ 0x9
  1990                           
  1991  0062                     ??_setTemp_Main:	
  1992                           ; 0 bytes @ 0x9
  1993                           
  1994  0062                     setDimmerLights_Main@lights:	
  1995                           ; 0 bytes @ 0x9
  1996                           
  1997  0062                     getPIR_AD@channel2:	
  1998                           ; 1 bytes @ 0x9
  1999                           
  2000                           
  2001                           ; 1 bytes @ 0x9
  2002  0062                     	ds	1
  2003  0063                     ??_getPIR_AD:	
  2004  0063                     ??_DimmerLights_Main:	
  2005                           ; 0 bytes @ 0xA
  2006                           
  2007  0063                     setTemp_Main@error:	
  2008                           ; 0 bytes @ 0xA
  2009                           
  2010  0063                     PIR_Main@error:	
  2011                           ; 1 bytes @ 0xA
  2012                           
  2013                           
  2014                           ; 1 bytes @ 0xA
  2015  0063                     	ds	1
  2016  0064                     ??_Temp_Main:	
  2017  0064                     _PIR_Main$3352:	
  2018                           ; 0 bytes @ 0xB
  2019                           
  2020                           
  2021                           ; 2 bytes @ 0xB
  2022  0064                     	ds	2
  2023  0066                     PIR_Main@cds:	
  2024  0066                     getPIR_AD@j:	
  2025                           ; 1 bytes @ 0xD
  2026                           
  2027                           
  2028                           ; 1 bytes @ 0xD
  2029  0066                     	ds	1
  2030  0067                     PIR_Main@LightsStatus:	
  2031  0067                     getPIR_AD@channel1:	
  2032                           ; 1 bytes @ 0xE
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0xE
  2036  0067                     	ds	1
  2037  0068                     getPIR_AD@i:	
  2038                           
  2039                           ; 1 bytes @ 0xF
  2040  0068                     	ds	1
  2041  0069                     ?_main:	
  2042  0069                     main@argc:	
  2043                           ; 2 bytes @ 0x10
  2044                           
  2045                           
  2046                           ; 2 bytes @ 0x10
  2047  0069                     	ds	2
  2048  006B                     main@argv:	
  2049                           
  2050                           ; 2 bytes @ 0x12
  2051  006B                     	ds	2
  2052  006D                     ??_main:	
  2053                           
  2054                           ; 0 bytes @ 0x14
  2055  006D                     	ds	1
  2056                           
  2057                           	psect	maintext
  2058  05DF                     __pmaintext:	
  2059 ;;
  2060 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2061 ;;
  2062 ;; *************** function _main *****************
  2063 ;; Defined at:
  2064 ;;		line 7 in file "../src/Main_B1.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  argc            2   16[BANK0 ] int 
  2067 ;;  argv            2   18[BANK0 ] PTR PTR unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2   16[BANK0 ] int 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 17F/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2079 ;;      Params:         0       4       0       0
  2080 ;;      Locals:         0       0       0       0
  2081 ;;      Temps:          0       1       0       0
  2082 ;;      Totals:         0       5       0       0
  2083 ;;Total ram usage:        5 bytes
  2084 ;; Hardware stack levels required when called:    7
  2085 ;; This function calls:
  2086 ;;		_CDS_Initialization
  2087 ;;		_CDS_Main
  2088 ;;		_DimmerLights_Initialization
  2089 ;;		_DimmerLights_Main
  2090 ;;		_Exception_Main
  2091 ;;		_LED_Initialization
  2092 ;;		_LED_Main
  2093 ;;		_Mcu_Initialization
  2094 ;;		_PIR_Initialization
  2095 ;;		_PIR_Main
  2096 ;;		_Temp_Initialization
  2097 ;;		_Temp_Main
  2098 ;;		_WDT_Main
  2099 ;;		_getCDS_AD
  2100 ;;		_getPIR_AD
  2101 ;;		_getTemp_AD
  2102 ;;		_myMain_Initialization
  2103 ;;		_my_MainTimer
  2104 ;; This function is called by:
  2105 ;;		Startup code after reset
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _main
  2111  05DF                     _main:	
  2112                           
  2113                           ;Main_B1.c: 8: myMain_Initialization();
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2117  05DF  118A  2003  118A   	fcall	_myMain_Initialization
  2118                           
  2119                           ;Main_B1.c: 9: Mcu_Initialization();
  2120  05E2  158A  263A  118A   	fcall	_Mcu_Initialization
  2121                           
  2122                           ;Main_B1.c: 10: ;;
  2123                           ;Main_B1.c: 11: LED_Initialization();
  2124  05E5  158A  25EA  118A   	fcall	_LED_Initialization
  2125                           
  2126                           ;Main_B1.c: 12: ;;
  2127                           ;Main_B1.c: 14: ;;
  2128                           ;Main_B1.c: 15: Temp_Initialization();
  2129  05E8  158A  2587  118A   	fcall	_Temp_Initialization
  2130                           
  2131                           ;Main_B1.c: 16: ;;
  2132                           ;Main_B1.c: 17: ;;
  2133                           ;Main_B1.c: 18: ;;
  2134                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2135  05EB  158A  25A1  118A   	fcall	_DimmerLights_Initialization
  2136                           
  2137                           ;Main_B1.c: 21: ;;
  2138                           ;Main_B1.c: 22: CDS_Initialization();
  2139  05EE  158A  258D  118A   	fcall	_CDS_Initialization
  2140                           
  2141                           ;Main_B1.c: 23: PIR_Initialization();
  2142  05F1  158A  2603  118A   	fcall	_PIR_Initialization
  2143  05F4                     l4913:	
  2144                           ;Main_B1.c: 24: ;;
  2145                           ;Main_B1.c: 25: ;;
  2146                           ;Main_B1.c: 26: ;;
  2147                           ;Main_B1.c: 27: ;;
  2148                           ;Main_B1.c: 28: ;;
  2149                           ;Main_B1.c: 30: while (1) {
  2150                           
  2151                           
  2152                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2153  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  2154  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  2155  05F6  1C27               	btfss	_myMain,0
  2156  05F7  2E10               	goto	l4919
  2157                           
  2158                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2159  05F8  3011               	movlw	17
  2160  05F9  118A  27B9  118A   	fcall	_getTemp_AD
  2161                           
  2162                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2163  05FC  3031               	movlw	49
  2164  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2165  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2166  05FF  00ED               	movwf	??_main
  2167  0600  086D               	movf	??_main,w
  2168  0601  00DB               	movwf	getCDS_AD@channel2
  2169  0602  3009               	movlw	9
  2170  0603  118A  2767  118A   	fcall	_getCDS_AD
  2171                           
  2172                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2173  0606  300D               	movlw	13
  2174  0607  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0608  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0609  00ED               	movwf	??_main
  2177  060A  086D               	movf	??_main,w
  2178  060B  00E2               	movwf	getPIR_AD@channel2
  2179  060C  3005               	movlw	5
  2180  060D  118A  21FE  118A   	fcall	_getPIR_AD
  2181  0610                     l4919:	
  2182                           
  2183                           ;Main_B1.c: 57: }
  2184                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2185  0610  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0611  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0612  1C3B               	btfss	_Timer1,0
  2188  0613  2DF4               	goto	l4913
  2189                           
  2190                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2191  0614  103B               	bcf	_Timer1,0
  2192                           
  2193                           ;Main_B1.c: 96: my_MainTimer();
  2194  0615  158A  2765  118A   	fcall	_my_MainTimer
  2195                           
  2196                           ;Main_B1.c: 97: WDT_Main();
  2197  0618  158A  267B  118A   	fcall	_WDT_Main
  2198                           
  2199                           ;Main_B1.c: 98: ;;
  2200                           ;Main_B1.c: 99: ;;
  2201                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2202  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2203  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2204  061D  1C27               	btfss	_myMain,0
  2205  061E  2DF4               	goto	l4913
  2206                           
  2207                           ;Main_B1.c: 101: ;;
  2208                           ;Main_B1.c: 103: LED_Main();
  2209  061F  158A  2584  118A   	fcall	_LED_Main
  2210                           
  2211                           ;Main_B1.c: 104: ;;
  2212                           ;Main_B1.c: 106: ;;
  2213                           ;Main_B1.c: 107: Temp_Main();
  2214  0622  158A  258A  118A   	fcall	_Temp_Main
  2215                           
  2216                           ;Main_B1.c: 108: ;;
  2217                           ;Main_B1.c: 109: ;;
  2218                           ;Main_B1.c: 111: ;;
  2219                           ;Main_B1.c: 112: DimmerLights_Main();
  2220  0625  158A  25A8  118A   	fcall	_DimmerLights_Main
  2221                           
  2222                           ;Main_B1.c: 113: ;;
  2223                           ;Main_B1.c: 114: CDS_Main();
  2224  0628  118A  2706  118A   	fcall	_CDS_Main
  2225                           
  2226                           ;Main_B1.c: 115: PIR_Main();
  2227  062B  118A  2027  118A   	fcall	_PIR_Main
  2228                           
  2229                           ;Main_B1.c: 117: ;;
  2230                           ;Main_B1.c: 118: ;;
  2231                           ;Main_B1.c: 119: ;;
  2232                           ;Main_B1.c: 120: ;;
  2233                           ;Main_B1.c: 121: Exception_Main();
  2234  062E  118A  2683  118A   	fcall	_Exception_Main
  2235  0631  2DF4               	goto	l4913
  2236  0632                     __end_of_main:	
  2237                           ;Main_B1.c: 128: }
  2238                           ;Main_B1.c: 129: }
  2239                           ;Main_B1.c: 163: }
  2240                           ;Main_B1.c: 164: return (0);
  2241                           ;	Return value of _main is never used
  2242                           
  2243                           
  2244                           	psect	text1
  2245  0F65                     __ptext1:	
  2246 ;; *************** function _my_MainTimer *****************
  2247 ;; Defined at:
  2248 ;;		line 185 in file "../src/Main_B1.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;		None               void
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2262 ;;      Params:         0       0       0       0
  2263 ;;      Locals:         0       0       0       0
  2264 ;;      Temps:          0       1       0       0
  2265 ;;      Totals:         0       1       0       0
  2266 ;;Total ram usage:        1 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    3
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _my_MainTimer
  2278  0F65                     _my_MainTimer:	
  2279                           
  2280                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2284  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0F67  1827               	btfsc	_myMain,0
  2287  0F68  2F75               	goto	l4681
  2288                           
  2289                           ;Main_B1.c: 188: myMain.PowerCount++;
  2290  0F69  3001               	movlw	1
  2291  0F6A  00D9               	movwf	??_my_MainTimer
  2292  0F6B  0859               	movf	??_my_MainTimer,w
  2293  0F6C  07A8               	addwf	_myMain+1,f
  2294                           
  2295                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2296  0F6D  0828               	movf	_myMain+1,w
  2297  0F6E  3A4B               	xorlw	75
  2298  0F6F  1D03               	skipz
  2299  0F70  0008               	return
  2300                           
  2301                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2302  0F71  01A8               	clrf	_myMain+1
  2303                           
  2304                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2305  0F72  1427               	bsf	_myMain,0
  2306                           
  2307                           ;Main_B1.c: 196: ;;
  2308                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2309  0F73  1627               	bsf	_myMain,4
  2310                           
  2311                           ;Main_B1.c: 206: }
  2312                           ;Main_B1.c: 207: } else {
  2313  0F74  0008               	return
  2314  0F75                     l4681:	
  2315                           
  2316                           ;Main_B1.c: 208: myMain.PowerCount++;
  2317  0F75  3001               	movlw	1
  2318  0F76  00D9               	movwf	??_my_MainTimer
  2319  0F77  0859               	movf	??_my_MainTimer,w
  2320  0F78  07A8               	addwf	_myMain+1,f
  2321                           
  2322                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2323  0F79  0828               	movf	_myMain+1,w
  2324  0F7A  3A32               	xorlw	50
  2325  0F7B  1D03               	skipz
  2326  0F7C  0008               	return
  2327                           
  2328                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2329  0F7D  01A8               	clrf	_myMain+1
  2330  0F7E  0008               	return
  2331  0F7F                     __end_of_my_MainTimer:	
  2332                           
  2333                           	psect	text2
  2334  0003                     __ptext2:	
  2335 ;; *************** function _myMain_Initialization *****************
  2336 ;; Defined at:
  2337 ;;		line 170 in file "../src/Main_B1.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		None
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2351 ;;      Params:         0       0       0       0
  2352 ;;      Locals:         0       0       0       0
  2353 ;;      Temps:          0       0       0       0
  2354 ;;      Totals:         0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    3
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _myMain_Initialization
  2367  0003                     _myMain_Initialization:	
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in _myMain_Initialization: []
  2371  0003  0008               	return
  2372  0004                     __end_of_myMain_Initialization:	
  2373                           
  2374                           	psect	text3
  2375  07B9                     __ptext3:	
  2376 ;; *************** function _getTemp_AD *****************
  2377 ;; Defined at:
  2378 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  channel         1    wreg     unsigned char 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  channel         1    4[BANK0 ] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2392 ;;      Params:         0       0       0       0
  2393 ;;      Locals:         0       1       0       0
  2394 ;;      Temps:          0       2       0       0
  2395 ;;      Totals:         0       3       0       0
  2396 ;;Total ram usage:        3 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    5
  2399 ;; This function calls:
  2400 ;;		_getAD
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _getTemp_AD
  2408  07B9                     _getTemp_AD:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2412                           ;getTemp_AD@channel stored from wreg
  2413  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  2414  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  2415  07BB  00DD               	movwf	getTemp_AD@channel
  2416                           
  2417                           ;OverTemperature_B1.c: 18: if (Temp.ADtoGO == 1) {
  2418  07BC  1D41               	btfss	_Temp,2
  2419  07BD  0008               	return
  2420                           
  2421                           ;OverTemperature_B1.c: 19: Temp.ADRES = getAD(channel, 0x70);
  2422  07BE  3070               	movlw	112
  2423  07BF  00DB               	movwf	??_getTemp_AD
  2424  07C0  085B               	movf	??_getTemp_AD,w
  2425  07C1  00D9               	movwf	getAD@adcon1
  2426  07C2  085D               	movf	getTemp_AD@channel,w
  2427  07C3  158A  279B  118A   	fcall	_getAD
  2428  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  2429  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  2430  07C8  00DC               	movwf	??_getTemp_AD+1
  2431  07C9  085C               	movf	??_getTemp_AD+1,w
  2432  07CA  00CA               	movwf	_Temp+9
  2433                           
  2434                           ;OverTemperature_B1.c: 20: if (Temp.ADRES > 0) {
  2435  07CB  084A               	movf	_Temp+9,w
  2436  07CC  1903               	btfsc	3,2
  2437  07CD  0008               	return
  2438                           
  2439                           ;OverTemperature_B1.c: 21: if (Temp.ADH[0] < Temp.ADRES) {
  2440  07CE  084A               	movf	_Temp+9,w
  2441  07CF  0248               	subwf	_Temp+7,w
  2442  07D0  1803               	skipnc
  2443  07D1  2FD7               	goto	l4583
  2444                           
  2445                           ;OverTemperature_B1.c: 22: Temp.ADH[0] = Temp.ADRES;
  2446  07D2  084A               	movf	_Temp+9,w
  2447  07D3  00DB               	movwf	??_getTemp_AD
  2448  07D4  085B               	movf	??_getTemp_AD,w
  2449  07D5  00C8               	movwf	_Temp+7
  2450                           
  2451                           ;OverTemperature_B1.c: 23: } else if (Temp.ADH[1] < Temp.ADRES) {
  2452  07D6  0008               	return
  2453  07D7                     l4583:	
  2454  07D7  084A               	movf	_Temp+9,w
  2455  07D8  0249               	subwf	_Temp+8,w
  2456  07D9  1803               	skipnc
  2457  07DA  0008               	return
  2458                           
  2459                           ;OverTemperature_B1.c: 24: Temp.ADH[1] = Temp.ADRES;
  2460  07DB  084A               	movf	_Temp+9,w
  2461  07DC  00DB               	movwf	??_getTemp_AD
  2462  07DD  085B               	movf	??_getTemp_AD,w
  2463  07DE  00C9               	movwf	_Temp+8
  2464  07DF  0008               	return
  2465  07E0                     __end_of_getTemp_AD:	
  2466                           
  2467                           	psect	text4
  2468  01FE                     __ptext4:	
  2469 ;; *************** function _getPIR_AD *****************
  2470 ;; Defined at:
  2471 ;;		line 299 in file "../src/PIR_B1.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  channel1        1    wreg     unsigned char 
  2474 ;;  channel2        1    9[BANK0 ] unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  channel1        1   14[BANK0 ] unsigned char 
  2477 ;;  i               1   15[BANK0 ] unsigned char 
  2478 ;;  j               1   13[BANK0 ] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2488 ;;      Params:         0       1       0       0
  2489 ;;      Locals:         0       3       0       0
  2490 ;;      Temps:          0       3       0       0
  2491 ;;      Totals:         0       7       0       0
  2492 ;;Total ram usage:        7 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    5
  2495 ;; This function calls:
  2496 ;;		___awdiv
  2497 ;;		___lwdiv
  2498 ;;		_getAD
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _getPIR_AD
  2506  01FE                     _getPIR_AD:	
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2510                           ;getPIR_AD@channel1 stored from wreg
  2511  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2512  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0200  00E7               	movwf	getPIR_AD@channel1
  2514                           
  2515                           ;PIR_B1.c: 300: char i = 0, j = 0;
  2516  0201  01E8               	clrf	getPIR_AD@i
  2517  0202  01E6               	clrf	getPIR_AD@j
  2518                           
  2519                           ;PIR_B1.c: 302: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2520  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0205  1CA0               	btfss	__PIR^(0+128),1
  2523  0206  0008               	return
  2524  0207  1920               	btfsc	__PIR^(0+128),2
  2525  0208  0008               	return
  2526                           
  2527                           ;PIR_B1.c: 303: _PIR.GO = 1;
  2528  0209  1520               	bsf	__PIR^(0+128),2
  2529                           
  2530                           ;PIR_B1.c: 304: _PIR.ADRES = getAD(channel1, 0x70);
  2531  020A  3070               	movlw	112
  2532  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2533  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2534  020D  00E3               	movwf	??_getPIR_AD
  2535  020E  0863               	movf	??_getPIR_AD,w
  2536  020F  00D9               	movwf	getAD@adcon1
  2537  0210  0867               	movf	getPIR_AD@channel1,w
  2538  0211  158A  279B  118A   	fcall	_getAD
  2539  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0216  00E4               	movwf	??_getPIR_AD+1
  2542  0217  0864               	movf	??_getPIR_AD+1,w
  2543  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2545  021A  00A2               	movwf	(__PIR^(0+128)+2)
  2546                           
  2547                           ;PIR_B1.c: 305: _PIR.VRAD = _PIR.ADRES / 25;
  2548  021B  3019               	movlw	25
  2549  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2550  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2551  021E  00D9               	movwf	___awdiv@divisor
  2552  021F  3000               	movlw	0
  2553  0220  00DA               	movwf	___awdiv@divisor+1
  2554  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2555  0222  1303               	bcf	3,6	;RP1=0, select bank1
  2556  0223  0822               	movf	(__PIR^(0+128)+2),w
  2557  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0226  00E3               	movwf	??_getPIR_AD
  2560  0227  01E4               	clrf	??_getPIR_AD+1
  2561  0228  0863               	movf	??_getPIR_AD,w
  2562  0229  00DB               	movwf	___awdiv@dividend
  2563  022A  0864               	movf	??_getPIR_AD+1,w
  2564  022B  00DC               	movwf	___awdiv@dividend+1
  2565  022C  118A  2582  118A   	fcall	___awdiv
  2566  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0231  0859               	movf	?___awdiv,w
  2569  0232  00E5               	movwf	??_getPIR_AD+2
  2570  0233  0865               	movf	??_getPIR_AD+2,w
  2571  0234  1683               	bsf	3,5	;RP0=1, select bank1
  2572  0235  1303               	bcf	3,6	;RP1=0, select bank1
  2573  0236  00A3               	movwf	(__PIR^(0+128)+3)
  2574                           
  2575                           ;PIR_B1.c: 306: _PIR.VRAD1 = _PIR.ADRES;
  2576  0237  0822               	movf	(__PIR^(0+128)+2),w
  2577  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2578  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2579  023A  00E3               	movwf	??_getPIR_AD
  2580  023B  0863               	movf	??_getPIR_AD,w
  2581  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2582  023D  1303               	bcf	3,6	;RP1=0, select bank1
  2583  023E  00A4               	movwf	(__PIR^(0+128)+4)
  2584                           
  2585                           ;PIR_B1.c: 307: _PIR.ADRES = getAD(channel2, 0x70);
  2586  023F  3070               	movlw	112
  2587  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0242  00E3               	movwf	??_getPIR_AD
  2590  0243  0863               	movf	??_getPIR_AD,w
  2591  0244  00D9               	movwf	getAD@adcon1
  2592  0245  0862               	movf	getPIR_AD@channel2,w
  2593  0246  158A  279B  118A   	fcall	_getAD
  2594  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2595  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2596  024B  00E4               	movwf	??_getPIR_AD+1
  2597  024C  0864               	movf	??_getPIR_AD+1,w
  2598  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2599  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2600  024F  00A2               	movwf	(__PIR^(0+128)+2)
  2601                           
  2602                           ;PIR_B1.c: 308: _PIR.SignalAD = _PIR.ADRES;
  2603  0250  0822               	movf	(__PIR^(0+128)+2),w
  2604  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0253  00E3               	movwf	??_getPIR_AD
  2607  0254  0863               	movf	??_getPIR_AD,w
  2608  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0256  1303               	bcf	3,6	;RP1=0, select bank1
  2610  0257  00A1               	movwf	(__PIR^(0+128)+1)
  2611                           
  2612                           ;PIR_B1.c: 310: if (_PIR.VRAD < 1) {
  2613  0258  08A3               	movf	(__PIR^(0+128)+3),f
  2614  0259  1D03               	skipz
  2615  025A  2A5D               	goto	l4605
  2616                           
  2617                           ;PIR_B1.c: 311: _PIR.CloseTimeValue = 5;
  2618  025B  3005               	movlw	5
  2619  025C  2A62               	goto	L1
  2620  025D                     l4605:	
  2621                           ;PIR_B1.c: 312: } else if (_PIR.VRAD < 3) {
  2622                           
  2623  025D  3003               	movlw	3
  2624  025E  0223               	subwf	(__PIR^(0+128)+3),w
  2625  025F  1803               	skipnc
  2626  0260  2A65               	goto	l4609
  2627                           
  2628                           ;PIR_B1.c: 313: _PIR.CloseTimeValue = 60;
  2629  0261  303C               	movlw	60
  2630  0262                     L1:	
  2631  0262  00C7               	movwf	(__PIR^(0+128)+39)
  2632  0263  3000               	movlw	0
  2633  0264  2A80               	goto	L5
  2634  0265                     l4609:	
  2635                           ;PIR_B1.c: 314: } else if (_PIR.VRAD < 5) {
  2636                           
  2637  0265  3005               	movlw	5
  2638  0266  0223               	subwf	(__PIR^(0+128)+3),w
  2639  0267  1803               	skipnc
  2640  0268  2A6D               	goto	l4613
  2641                           
  2642                           ;PIR_B1.c: 315: _PIR.CloseTimeValue = 300;
  2643  0269  302C               	movlw	44
  2644  026A  00C7               	movwf	(__PIR^(0+128)+39)
  2645  026B  3001               	movlw	1
  2646  026C  2A80               	goto	L5
  2647  026D                     l4613:	
  2648                           ;PIR_B1.c: 316: } else if (_PIR.VRAD < 7) {
  2649                           
  2650  026D  3007               	movlw	7
  2651  026E  0223               	subwf	(__PIR^(0+128)+3),w
  2652  026F  1803               	skipnc
  2653  0270  2A75               	goto	l4617
  2654                           
  2655                           ;PIR_B1.c: 317: _PIR.CloseTimeValue = 600;
  2656  0271  3058               	movlw	88
  2657  0272  00C7               	movwf	(__PIR^(0+128)+39)
  2658  0273  3002               	movlw	2
  2659  0274  2A80               	goto	L5
  2660  0275                     l4617:	
  2661                           ;PIR_B1.c: 318: } else if (_PIR.VRAD < 9) {
  2662                           
  2663  0275  3009               	movlw	9
  2664  0276  0223               	subwf	(__PIR^(0+128)+3),w
  2665  0277  1803               	skipnc
  2666  0278  2A7D               	goto	l4621
  2667                           
  2668                           ;PIR_B1.c: 319: _PIR.CloseTimeValue = 900;
  2669  0279  3084               	movlw	132
  2670  027A  00C7               	movwf	(__PIR^(0+128)+39)
  2671  027B  3003               	movlw	3
  2672  027C  2A80               	goto	L5
  2673  027D                     l4621:	
  2674                           ;PIR_B1.c: 320: } else {
  2675                           
  2676                           
  2677                           ;PIR_B1.c: 321: _PIR.CloseTimeValue = 1200;
  2678  027D  30B0               	movlw	176
  2679  027E  00C7               	movwf	(__PIR^(0+128)+39)
  2680  027F  3004               	movlw	4
  2681  0280                     L5:	
  2682  0280  00C8               	movwf	(__PIR^(0+128)+40)
  2683                           
  2684                           ;PIR_B1.c: 322: }
  2685                           ;PIR_B1.c: 331: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2686  0281  0821               	movf	(__PIR^(0+128)+1),w
  2687  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0284  00E3               	movwf	??_getPIR_AD
  2690  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0286  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0287  0827               	movf	(__PIR^(0+128)+7),w
  2693  0288  3EA8               	addlw	(__PIR+8)& (0+255)
  2694  0289  0084               	movwf	4
  2695  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2696  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2697  028C  0863               	movf	??_getPIR_AD,w
  2698  028D  1383               	bcf	3,7	;select IRP bank1
  2699  028E  0080               	movwf	0
  2700                           
  2701                           ;PIR_B1.c: 332: for (i = 0; i < 10; i++) {
  2702  028F  01E8               	clrf	getPIR_AD@i
  2703  0290  300A               	movlw	10
  2704  0291  0268               	subwf	getPIR_AD@i,w
  2705  0292  1803               	btfsc	3,0
  2706  0293  2AB0               	goto	l4637
  2707  0294                     l4631:	
  2708                           
  2709                           ;PIR_B1.c: 333: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2710  0294  0868               	movf	getPIR_AD@i,w
  2711  0295  3EA8               	addlw	(__PIR+8)& (0+255)
  2712  0296  0084               	movwf	4
  2713  0297  0800               	movf	0,w
  2714  0298  00E3               	movwf	??_getPIR_AD
  2715  0299  01E4               	clrf	??_getPIR_AD+1
  2716  029A  0863               	movf	??_getPIR_AD,w
  2717  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2718  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2719  029D  07B2               	addwf	(__PIR^(0+128)+18),f
  2720  029E  1803               	skipnc
  2721  029F  0AB3               	incf	((__PIR+1)^(0+128)+18),f
  2722  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2723  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2724  02A2  0864               	movf	??_getPIR_AD+1,w
  2725  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2726  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2727  02A5  07B3               	addwf	((__PIR+1)^(0+128)+18),f
  2728  02A6  3001               	movlw	1
  2729  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2730  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2731  02A9  00E3               	movwf	??_getPIR_AD
  2732  02AA  0863               	movf	??_getPIR_AD,w
  2733  02AB  07E8               	addwf	getPIR_AD@i,f
  2734  02AC  300A               	movlw	10
  2735  02AD  0268               	subwf	getPIR_AD@i,w
  2736  02AE  1C03               	skipc
  2737  02AF  2A94               	goto	l4631
  2738  02B0                     l4637:	
  2739                           
  2740                           ;PIR_B1.c: 334: }
  2741                           ;PIR_B1.c: 335: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2742  02B0  300A               	movlw	10
  2743  02B1  00D9               	movwf	___lwdiv@divisor
  2744  02B2  3000               	movlw	0
  2745  02B3  00DA               	movwf	___lwdiv@divisor+1
  2746  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2747  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  2748  02B6  0833               	movf	((__PIR+1)^(0+128)+18),w
  2749  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2750  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2751  02B9  01DC               	clrf	___lwdiv@dividend+1
  2752  02BA  07DC               	addwf	___lwdiv@dividend+1,f
  2753  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2754  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2755  02BD  0832               	movf	(__PIR^(0+128)+18),w
  2756  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2757  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2758  02C0  01DB               	clrf	___lwdiv@dividend
  2759  02C1  07DB               	addwf	___lwdiv@dividend,f
  2760  02C2  118A  26C6  118A   	fcall	___lwdiv
  2761  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2762  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2763  02C7  0859               	movf	?___lwdiv,w
  2764  02C8  00E3               	movwf	??_getPIR_AD
  2765  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2766  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2767  02CB  0834               	movf	(__PIR^(0+128)+20),w
  2768  02CC  3EB5               	addlw	(__PIR+21)& (0+255)
  2769  02CD  0084               	movwf	4
  2770  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2771  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2772  02D0  0863               	movf	??_getPIR_AD,w
  2773  02D1  1383               	bcf	3,7	;select IRP bank1
  2774  02D2  0080               	movwf	0
  2775                           
  2776                           ;PIR_B1.c: 336: _PIR.TenAverageValue = 0;
  2777  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2778  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2779  02D5  01B2               	clrf	(__PIR^(0+128)+18)
  2780  02D6  01B3               	clrf	((__PIR+1)^(0+128)+18)
  2781                           
  2782                           ;PIR_B1.c: 338: for (i = 0; i <= 9; i++) {
  2783  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2784  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2785  02D9  01E8               	clrf	getPIR_AD@i
  2786  02DA  300A               	movlw	10
  2787  02DB  0268               	subwf	getPIR_AD@i,w
  2788  02DC  1803               	btfsc	3,0
  2789  02DD  2AFA               	goto	l4653
  2790  02DE                     l4647:	
  2791                           
  2792                           ;PIR_B1.c: 339: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2793  02DE  0868               	movf	getPIR_AD@i,w
  2794  02DF  3EB5               	addlw	(__PIR+21)& (0+255)
  2795  02E0  0084               	movwf	4
  2796  02E1  0800               	movf	0,w
  2797  02E2  00E3               	movwf	??_getPIR_AD
  2798  02E3  01E4               	clrf	??_getPIR_AD+1
  2799  02E4  0863               	movf	??_getPIR_AD,w
  2800  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2801  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2802  02E7  07BF               	addwf	(__PIR^(0+128)+31),f
  2803  02E8  1803               	skipnc
  2804  02E9  0AC0               	incf	((__PIR+1)^(0+128)+31),f
  2805  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2806  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2807  02EC  0864               	movf	??_getPIR_AD+1,w
  2808  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2809  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2810  02EF  07C0               	addwf	((__PIR+1)^(0+128)+31),f
  2811  02F0  3001               	movlw	1
  2812  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2813  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2814  02F3  00E3               	movwf	??_getPIR_AD
  2815  02F4  0863               	movf	??_getPIR_AD,w
  2816  02F5  07E8               	addwf	getPIR_AD@i,f
  2817  02F6  300A               	movlw	10
  2818  02F7  0268               	subwf	getPIR_AD@i,w
  2819  02F8  1C03               	skipc
  2820  02F9  2ADE               	goto	l4647
  2821  02FA                     l4653:	
  2822                           
  2823                           ;PIR_B1.c: 340: }
  2824                           ;PIR_B1.c: 341: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2825  02FA  300A               	movlw	10
  2826  02FB  00D9               	movwf	___lwdiv@divisor
  2827  02FC  3000               	movlw	0
  2828  02FD  00DA               	movwf	___lwdiv@divisor+1
  2829  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2830  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2831  0300  0840               	movf	((__PIR+1)^(0+128)+31),w
  2832  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0303  01DC               	clrf	___lwdiv@dividend+1
  2835  0304  07DC               	addwf	___lwdiv@dividend+1,f
  2836  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2837  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0307  083F               	movf	(__PIR^(0+128)+31),w
  2839  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2841  030A  01DB               	clrf	___lwdiv@dividend
  2842  030B  07DB               	addwf	___lwdiv@dividend,f
  2843  030C  118A  26C6  118A   	fcall	___lwdiv
  2844  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2845  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2846  0311  0859               	movf	?___lwdiv,w
  2847  0312  00E3               	movwf	??_getPIR_AD
  2848  0313  0863               	movf	??_getPIR_AD,w
  2849  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2851  0316  00A6               	movwf	(__PIR^(0+128)+6)
  2852                           
  2853                           ;PIR_B1.c: 342: _PIR.HundredAverageValue = 0;
  2854  0317  01BF               	clrf	(__PIR^(0+128)+31)
  2855  0318  01C0               	clrf	((__PIR+1)^(0+128)+31)
  2856                           
  2857                           ;PIR_B1.c: 344: if (_PIR.TenCount < 10) {
  2858  0319  300A               	movlw	10
  2859  031A  0227               	subwf	(__PIR^(0+128)+7),w
  2860  031B  1803               	skipnc
  2861  031C  2B26               	goto	l4661
  2862                           
  2863                           ;PIR_B1.c: 345: _PIR.TenCount++;
  2864  031D  3001               	movlw	1
  2865  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2866  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2867  0320  00E3               	movwf	??_getPIR_AD
  2868  0321  0863               	movf	??_getPIR_AD,w
  2869  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2870  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0324  07A7               	addwf	(__PIR^(0+128)+7),f
  2872                           
  2873                           ;PIR_B1.c: 346: } else {
  2874  0325  0008               	return
  2875  0326                     l4661:	
  2876                           
  2877                           ;PIR_B1.c: 347: _PIR.TenCount = 0;
  2878  0326  01A7               	clrf	(__PIR^(0+128)+7)
  2879                           
  2880                           ;PIR_B1.c: 348: if (_PIR.HundreCount < 10)
  2881  0327  300A               	movlw	10
  2882  0328  0234               	subwf	(__PIR^(0+128)+20),w
  2883  0329  1803               	skipnc
  2884  032A  2B34               	goto	l4667
  2885                           
  2886                           ;PIR_B1.c: 349: _PIR.HundreCount++;
  2887  032B  3001               	movlw	1
  2888  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2889  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2890  032E  00E3               	movwf	??_getPIR_AD
  2891  032F  0863               	movf	??_getPIR_AD,w
  2892  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0332  07B4               	addwf	(__PIR^(0+128)+20),f
  2895  0333  0008               	return
  2896  0334                     l4667:	
  2897                           
  2898                           ;PIR_B1.c: 350: else
  2899                           ;PIR_B1.c: 351: _PIR.HundreCount = 0;
  2900  0334  01B4               	clrf	(__PIR^(0+128)+20)
  2901  0335  0008               	return
  2902  0336                     __end_of_getPIR_AD:	
  2903                           
  2904                           	psect	text5
  2905  06C6                     __ptext5:	
  2906 ;; *************** function ___lwdiv *****************
  2907 ;; Defined at:
  2908 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  divisor         2    0[BANK0 ] unsigned int 
  2911 ;;  dividend        2    2[BANK0 ] unsigned int 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  quotient        2    6[BANK0 ] unsigned int 
  2914 ;;  counter         1    5[BANK0 ] unsigned char 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2    0[BANK0 ] unsigned int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2924 ;;      Params:         0       4       0       0
  2925 ;;      Locals:         0       3       0       0
  2926 ;;      Temps:          0       1       0       0
  2927 ;;      Totals:         0       8       0       0
  2928 ;;Total ram usage:        8 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    3
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_getPIR_AD
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function ___lwdiv
  2940  06C6                     ___lwdiv:	
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2944  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2945  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2946  06C8  01DF               	clrf	___lwdiv@quotient
  2947  06C9  01E0               	clrf	___lwdiv@quotient+1
  2948  06CA  085A               	movf	___lwdiv@divisor+1,w
  2949  06CB  0459               	iorwf	___lwdiv@divisor,w
  2950  06CC  1903               	skipnz
  2951  06CD  2EFF               	goto	l4509
  2952  06CE  01DE               	clrf	___lwdiv@counter
  2953  06CF  0ADE               	incf	___lwdiv@counter,f
  2954  06D0                     l4497:	
  2955  06D0  1BDA               	btfsc	___lwdiv@divisor+1,7
  2956  06D1  2EDE               	goto	l4499
  2957  06D2  3001               	movlw	1
  2958  06D3                     u5255:	
  2959  06D3  1003               	clrc
  2960  06D4  0DD9               	rlf	___lwdiv@divisor,f
  2961  06D5  0DDA               	rlf	___lwdiv@divisor+1,f
  2962  06D6  3EFF               	addlw	-1
  2963  06D7  1D03               	skipz
  2964  06D8  2ED3               	goto	u5255
  2965  06D9  3001               	movlw	1
  2966  06DA  00DD               	movwf	??___lwdiv
  2967  06DB  085D               	movf	??___lwdiv,w
  2968  06DC  07DE               	addwf	___lwdiv@counter,f
  2969  06DD  2ED0               	goto	l4497
  2970  06DE                     l4499:	
  2971  06DE  3001               	movlw	1
  2972  06DF                     u5275:	
  2973  06DF  1003               	clrc
  2974  06E0  0DDF               	rlf	___lwdiv@quotient,f
  2975  06E1  0DE0               	rlf	___lwdiv@quotient+1,f
  2976  06E2  3EFF               	addlw	-1
  2977  06E3  1D03               	skipz
  2978  06E4  2EDF               	goto	u5275
  2979  06E5  085A               	movf	___lwdiv@divisor+1,w
  2980  06E6  025C               	subwf	___lwdiv@dividend+1,w
  2981  06E7  1D03               	skipz
  2982  06E8  2EEB               	goto	u5285
  2983  06E9  0859               	movf	___lwdiv@divisor,w
  2984  06EA  025B               	subwf	___lwdiv@dividend,w
  2985  06EB                     u5285:	
  2986  06EB  1C03               	skipc
  2987  06EC  2EF4               	goto	l4505
  2988  06ED  0859               	movf	___lwdiv@divisor,w
  2989  06EE  02DB               	subwf	___lwdiv@dividend,f
  2990  06EF  085A               	movf	___lwdiv@divisor+1,w
  2991  06F0  1C03               	skipc
  2992  06F1  03DC               	decf	___lwdiv@dividend+1,f
  2993  06F2  02DC               	subwf	___lwdiv@dividend+1,f
  2994  06F3  145F               	bsf	___lwdiv@quotient,0
  2995  06F4                     l4505:	
  2996  06F4  3001               	movlw	1
  2997  06F5                     u5295:	
  2998  06F5  1003               	clrc
  2999  06F6  0CDA               	rrf	___lwdiv@divisor+1,f
  3000  06F7  0CD9               	rrf	___lwdiv@divisor,f
  3001  06F8  3EFF               	addlw	-1
  3002  06F9  1D03               	skipz
  3003  06FA  2EF5               	goto	u5295
  3004  06FB  3001               	movlw	1
  3005  06FC  02DE               	subwf	___lwdiv@counter,f
  3006  06FD  1D03               	btfss	3,2
  3007  06FE  2EDE               	goto	l4499
  3008  06FF                     l4509:	
  3009  06FF  0860               	movf	___lwdiv@quotient+1,w
  3010  0700  01DA               	clrf	?___lwdiv+1
  3011  0701  07DA               	addwf	?___lwdiv+1,f
  3012  0702  085F               	movf	___lwdiv@quotient,w
  3013  0703  01D9               	clrf	?___lwdiv
  3014  0704  07D9               	addwf	?___lwdiv,f
  3015  0705  0008               	return
  3016  0706                     __end_of___lwdiv:	
  3017                           
  3018                           	psect	text6
  3019  0767                     __ptext6:	
  3020 ;; *************** function _getCDS_AD *****************
  3021 ;; Defined at:
  3022 ;;		line 48 in file "../src/CDS_B1.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  channel1        1    wreg     unsigned char 
  3025 ;;  channel2        1    2[BANK0 ] unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  channel1        1    7[BANK0 ] unsigned char 
  3028 ;;  j               1    6[BANK0 ] unsigned char 
  3029 ;;  i               1    5[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       1       0       0
  3040 ;;      Locals:         0       3       0       0
  3041 ;;      Temps:          0       2       0       0
  3042 ;;      Totals:         0       6       0       0
  3043 ;;Total ram usage:        6 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    5
  3046 ;; This function calls:
  3047 ;;		_getAD
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _getCDS_AD
  3055  0767                     _getCDS_AD:	
  3056                           
  3057                           ;incstack = 0
  3058                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3059                           ;getCDS_AD@channel1 stored from wreg
  3060  0767  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0768  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0769  00E0               	movwf	getCDS_AD@channel1
  3063                           
  3064                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3065  076A  01DE               	clrf	getCDS_AD@i
  3066  076B  01DF               	clrf	getCDS_AD@j
  3067                           
  3068                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3069  076C  1DB2               	btfss	__CDS,3
  3070  076D  0008               	return
  3071                           
  3072                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3073  076E  14B2               	bsf	__CDS,1
  3074                           
  3075                           ;CDS_B1.c: 52: _CDS.ADRES = getAD(channel1, 0x70);
  3076  076F  3070               	movlw	112
  3077  0770  00DC               	movwf	??_getCDS_AD
  3078  0771  085C               	movf	??_getCDS_AD,w
  3079  0772  00D9               	movwf	getAD@adcon1
  3080  0773  0860               	movf	getCDS_AD@channel1,w
  3081  0774  158A  279B  118A   	fcall	_getAD
  3082  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0778  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0779  00DD               	movwf	??_getCDS_AD+1
  3085  077A  085D               	movf	??_getCDS_AD+1,w
  3086  077B  00B6               	movwf	__CDS+4
  3087                           
  3088                           ;CDS_B1.c: 53: _CDS.VRAD = _CDS.ADRES;
  3089  077C  0836               	movf	__CDS+4,w
  3090  077D  00DC               	movwf	??_getCDS_AD
  3091  077E  085C               	movf	??_getCDS_AD,w
  3092  077F  00B4               	movwf	__CDS+2
  3093                           
  3094                           ;CDS_B1.c: 54: _CDS.ADRES = getAD(channel2, 0x70);
  3095  0780  3070               	movlw	112
  3096  0781  00DC               	movwf	??_getCDS_AD
  3097  0782  085C               	movf	??_getCDS_AD,w
  3098  0783  00D9               	movwf	getAD@adcon1
  3099  0784  085B               	movf	getCDS_AD@channel2,w
  3100  0785  158A  279B         	fcall	_getAD
  3101  0787  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0788  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0789  00DD               	movwf	??_getCDS_AD+1
  3104  078A  085D               	movf	??_getCDS_AD+1,w
  3105  078B  00B6               	movwf	__CDS+4
  3106                           
  3107                           ;CDS_B1.c: 55: _CDS.SignalAD = _CDS.ADRES;
  3108  078C  0836               	movf	__CDS+4,w
  3109  078D  00DC               	movwf	??_getCDS_AD
  3110  078E  085C               	movf	??_getCDS_AD,w
  3111  078F  00B5               	movwf	__CDS+3
  3112  0790  0008               	return
  3113  0791                     __end_of_getCDS_AD:	
  3114                           
  3115                           	psect	text7
  3116  0F9B                     __ptext7:	
  3117 ;; *************** function _getAD *****************
  3118 ;; Defined at:
  3119 ;;		line 432 in file "../src/MCU_B1.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  adcon0          1    wreg     unsigned char 
  3122 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3134 ;;      Params:         0       1       0       0
  3135 ;;      Locals:         0       1       0       0
  3136 ;;      Temps:          0       0       0       0
  3137 ;;      Totals:         0       2       0       0
  3138 ;;Total ram usage:        2 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    4
  3141 ;; This function calls:
  3142 ;;		_Timeout_Counter
  3143 ;;		_set_TimeoutCleared
  3144 ;; This function is called by:
  3145 ;;		_getCDS_AD
  3146 ;;		_getTemp_AD
  3147 ;;		_getPIR_AD
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _getAD
  3153  0F9B                     _getAD:	
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3157                           ;getAD@adcon0 stored from wreg
  3158  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0F9D  00DA               	movwf	getAD@adcon0
  3161                           
  3162                           ;MCU_B1.c: 433: ADCON0 = adcon0;
  3163  0F9E  085A               	movf	getAD@adcon0,w
  3164  0F9F  009F               	movwf	31	;volatile
  3165                           
  3166                           ;MCU_B1.c: 434: ADCON1 = adcon1;
  3167  0FA0  0859               	movf	getAD@adcon1,w
  3168  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  3169  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  3170  0FA3  009F               	movwf	31	;volatile
  3171                           
  3172                           ;MCU_B1.c: 435: GO_nDONE = 1;
  3173  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0FA6  149F               	bsf	31,1	;volatile
  3176                           
  3177                           ;MCU_B1.c: 436: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3178  0FA7  2FAB               	goto	l4269
  3179  0FA8                     l4267:	
  3180                           
  3181                           ;MCU_B1.c: 437: Timeout_Counter();
  3182  0FA8  158A  26C5  158A   	fcall	_Timeout_Counter
  3183  0FAB                     l4269:	
  3184  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0FAD  1C9F               	btfss	31,1	;volatile
  3187  0FAE  2FB1               	goto	l4273
  3188  0FAF  1D2A               	btfss	_myMain+3,2
  3189  0FB0  2FA8               	goto	l4267
  3190  0FB1                     l4273:	
  3191                           
  3192                           ;MCU_B1.c: 438: };
  3193                           ;MCU_B1.c: 439: set_TimeoutCleared();
  3194  0FB1  158A  259B         	fcall	_set_TimeoutCleared
  3195                           
  3196                           ;MCU_B1.c: 440: return ADRES;
  3197  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0FB5  081E               	movf	30,w	;volatile
  3200  0FB6  0008               	return
  3201  0FB7                     __end_of_getAD:	
  3202                           
  3203                           	psect	text8
  3204  0D9B                     __ptext8:	
  3205 ;; *************** function _set_TimeoutCleared *****************
  3206 ;; Defined at:
  3207 ;;		line 281 in file "../src/Main_B1.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;		None               void
  3214 ;; Registers used:
  3215 ;;		status,2
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3221 ;;      Params:         0       0       0       0
  3222 ;;      Locals:         0       0       0       0
  3223 ;;      Temps:          0       0       0       0
  3224 ;;      Totals:         0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    3
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_getAD
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           
  3236                           ;psect for function _set_TimeoutCleared
  3237  0D9B                     _set_TimeoutCleared:	
  3238                           
  3239                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _set_TimeoutCleared: [status,2]
  3243  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0D9D  112A               	bcf	_myMain+3,2
  3246                           
  3247                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3248  0D9E  01AB               	clrf	_myMain+4
  3249  0D9F  01AC               	clrf	_myMain+5
  3250  0DA0  0008               	return
  3251  0DA1                     __end_of_set_TimeoutCleared:	
  3252                           
  3253                           	psect	text9
  3254  0EC5                     __ptext9:	
  3255 ;; *************** function _Timeout_Counter *****************
  3256 ;; Defined at:
  3257 ;;		line 272 in file "../src/Main_B1.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;		None               void
  3264 ;; Registers used:
  3265 ;;		wreg, status,2
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3271 ;;      Params:         0       0       0       0
  3272 ;;      Locals:         0       0       0       0
  3273 ;;      Temps:          0       0       0       0
  3274 ;;      Totals:         0       0       0       0
  3275 ;;Total ram usage:        0 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    3
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_getAD
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _Timeout_Counter
  3287  0EC5                     _Timeout_Counter:	
  3288                           
  3289                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3290                           
  3291                           ;incstack = 0
  3292                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3293  0EC5  3001               	movlw	1
  3294  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3296  0EC8  07AB               	addwf	_myMain+4,f
  3297  0EC9  1803               	skipnc
  3298  0ECA  0AAC               	incf	_myMain+5,f
  3299  0ECB  3000               	movlw	0
  3300  0ECC  07AC               	addwf	_myMain+5,f
  3301                           
  3302                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3303  0ECD  3061               	movlw	97
  3304  0ECE  062C               	xorwf	_myMain+5,w
  3305  0ECF  1D03               	skipz
  3306  0ED0  2ED3               	goto	u4665
  3307  0ED1  30A8               	movlw	168
  3308  0ED2  062B               	xorwf	_myMain+4,w
  3309  0ED3                     u4665:	
  3310  0ED3  1D03               	skipz
  3311  0ED4  0008               	return
  3312                           
  3313                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3314  0ED5  01AB               	clrf	_myMain+4
  3315  0ED6  01AC               	clrf	_myMain+5
  3316                           
  3317                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3318  0ED7  152A               	bsf	_myMain+3,2
  3319  0ED8  0008               	return
  3320  0ED9                     __end_of_Timeout_Counter:	
  3321                           
  3322                           	psect	text10
  3323  0E7B                     __ptext10:	
  3324 ;; *************** function _WDT_Main *****************
  3325 ;; Defined at:
  3326 ;;		line 1103 in file "../src/MCU_B1.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, pclath, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3340 ;;      Params:         0       0       0       0
  3341 ;;      Locals:         0       0       0       0
  3342 ;;      Temps:          0       1       0       0
  3343 ;;      Totals:         0       1       0       0
  3344 ;;Total ram usage:        1 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    4
  3347 ;; This function calls:
  3348 ;;		_WDT_Clearing
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _WDT_Main
  3356  0E7B                     _WDT_Main:	
  3357                           
  3358                           ;MCU_B1.c: 1104: if (WDT.Enable == 1) {
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3362  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0E7D  1C3E               	btfss	_WDT,0
  3365  0E7E  0008               	return
  3366                           
  3367                           ;MCU_B1.c: 1105: if (WDT.Timer-- > 0) {
  3368  0E7F  3001               	movlw	1
  3369  0E80  02BF               	subwf	_WDT+1,f
  3370  0E81  083F               	movf	_WDT+1,w
  3371  0E82  3AFF               	xorlw	255
  3372  0E83  1903               	skipnz
  3373  0E84  0008               	return
  3374                           
  3375                           ;MCU_B1.c: 1106: WDT.Timer = 100;
  3376  0E85  3064               	movlw	100
  3377  0E86  00D9               	movwf	??_WDT_Main
  3378  0E87  0859               	movf	??_WDT_Main,w
  3379  0E88  00BF               	movwf	_WDT+1
  3380                           
  3381                           ;MCU_B1.c: 1107: WDT_Clearing();
  3382  0E89  118A  27FE         	fcall	_WDT_Clearing
  3383  0E8B  0008               	return
  3384  0E8C                     __end_of_WDT_Main:	
  3385                           
  3386                           	psect	text11
  3387  07FE                     __ptext11:	
  3388 ;; *************** function _WDT_Clearing *****************
  3389 ;; Defined at:
  3390 ;;		line 1113 in file "../src/MCU_B1.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;		None               void
  3397 ;; Registers used:
  3398 ;;		None
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3404 ;;      Params:         0       0       0       0
  3405 ;;      Locals:         0       0       0       0
  3406 ;;      Temps:          0       0       0       0
  3407 ;;      Totals:         0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    3
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_WDT_Main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _WDT_Clearing
  3420  07FE                     _WDT_Clearing:	
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _WDT_Clearing: []
  3424  07FE  0064               	clrwdt	;# 
  3425  07FF  0008               	return
  3426  0800                     __end_of_WDT_Clearing:	
  3427                           
  3428                           	psect	text12
  3429  0D8A                     __ptext12:	
  3430 ;; *************** function _Temp_Main *****************
  3431 ;; Defined at:
  3432 ;;		line 49 in file "../src/OverTemperature_B1.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;		None
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;		None               void
  3439 ;; Registers used:
  3440 ;;		wreg, status,2, status,0, pclath, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3446 ;;      Params:         0       0       0       0
  3447 ;;      Locals:         0       0       0       0
  3448 ;;      Temps:          0       0       0       0
  3449 ;;      Totals:         0       0       0       0
  3450 ;;Total ram usage:        0 bytes
  3451 ;; Hardware stack levels used:    1
  3452 ;; Hardware stack levels required when called:    5
  3453 ;; This function calls:
  3454 ;;		_setTemp_Main
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _Temp_Main
  3462  0D8A                     _Temp_Main:	
  3463                           
  3464                           ;OverTemperature_B1.c: 51: setTemp_Main();
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3468  0D8A  118A  23CA         	fcall	_setTemp_Main
  3469  0D8C  0008               	return
  3470  0D8D                     __end_of_Temp_Main:	
  3471                           
  3472                           	psect	text13
  3473  03CA                     __ptext13:	
  3474 ;; *************** function _setTemp_Main *****************
  3475 ;; Defined at:
  3476 ;;		line 56 in file "../src/OverTemperature_B1.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  error           1   10[BANK0 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3490 ;;      Params:         0       0       0       0
  3491 ;;      Locals:         0       1       0       0
  3492 ;;      Temps:          0       1       0       0
  3493 ;;      Totals:         0       2       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    4
  3497 ;; This function calls:
  3498 ;;		___awdiv
  3499 ;;		_getMain_All_Error_Status
  3500 ;; This function is called by:
  3501 ;;		_Temp_Main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _setTemp_Main
  3507  03CA                     _setTemp_Main:	
  3508                           
  3509                           ;OverTemperature_B1.c: 57: char error = getMain_All_Error_Status(0);
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3513  03CA  3000               	movlw	0
  3514  03CB  158A  274B  118A   	fcall	_getMain_All_Error_Status
  3515  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3516  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3517  03D0  00E2               	movwf	??_setTemp_Main
  3518  03D1  0862               	movf	??_setTemp_Main,w
  3519  03D2  00E3               	movwf	setTemp_Main@error
  3520                           
  3521                           ;OverTemperature_B1.c: 58: if (Temp.Enable == 1) {
  3522  03D3  1C41               	btfss	_Temp,0
  3523  03D4  2C3C               	goto	l944
  3524                           
  3525                           ;OverTemperature_B1.c: 65: if (Temp.ADtoGO == 0) {
  3526  03D5  1941               	btfsc	_Temp,2
  3527  03D6  2BE8               	goto	l4443
  3528                           
  3529                           ;OverTemperature_B1.c: 66: Temp.Time++;
  3530  03D7  3001               	movlw	1
  3531  03D8  07C2               	addwf	_Temp+1,f
  3532  03D9  1803               	skipnc
  3533  03DA  0AC3               	incf	_Temp+2,f
  3534  03DB  3000               	movlw	0
  3535  03DC  07C3               	addwf	_Temp+2,f
  3536                           
  3537                           ;OverTemperature_B1.c: 67: if (Temp.Time >= (5000 / 20)) {
  3538  03DD  3000               	movlw	0
  3539  03DE  0243               	subwf	_Temp+2,w
  3540  03DF  30FA               	movlw	250
  3541  03E0  1903               	skipnz
  3542  03E1  0242               	subwf	_Temp+1,w
  3543  03E2  1C03               	skipc
  3544  03E3  0008               	return
  3545                           
  3546                           ;OverTemperature_B1.c: 68: Temp.Time = 0;
  3547  03E4  01C2               	clrf	_Temp+1
  3548  03E5  01C3               	clrf	_Temp+2
  3549                           
  3550                           ;OverTemperature_B1.c: 69: Temp.ADtoGO = 1;
  3551  03E6  1541               	bsf	_Temp,2
  3552                           
  3553                           ;OverTemperature_B1.c: 70: }
  3554                           ;OverTemperature_B1.c: 71: } else {
  3555  03E7  0008               	return
  3556  03E8                     l4443:	
  3557                           
  3558                           ;OverTemperature_B1.c: 72: Temp.Time++;
  3559  03E8  3001               	movlw	1
  3560  03E9  07C2               	addwf	_Temp+1,f
  3561  03EA  1803               	skipnc
  3562  03EB  0AC3               	incf	_Temp+2,f
  3563  03EC  3000               	movlw	0
  3564  03ED  07C3               	addwf	_Temp+2,f
  3565                           
  3566                           ;OverTemperature_B1.c: 73: if (Temp.Time >= (40 / 20)) {
  3567  03EE  3000               	movlw	0
  3568  03EF  0243               	subwf	_Temp+2,w
  3569  03F0  3002               	movlw	2
  3570  03F1  1903               	skipnz
  3571  03F2  0242               	subwf	_Temp+1,w
  3572  03F3  1C03               	skipc
  3573  03F4  0008               	return
  3574                           
  3575                           ;OverTemperature_B1.c: 74: Temp.Time = 0;
  3576  03F5  01C2               	clrf	_Temp+1
  3577  03F6  01C3               	clrf	_Temp+2
  3578                           
  3579                           ;OverTemperature_B1.c: 76: if (Temp.ADH[0] > 0 && Temp.ADH[1] > 0) {
  3580  03F7  0848               	movf	_Temp+7,w
  3581  03F8  1903               	btfsc	3,2
  3582  03F9  2C39               	goto	l949
  3583  03FA  0849               	movf	_Temp+8,w
  3584  03FB  1903               	btfsc	3,2
  3585  03FC  2C39               	goto	l949
  3586                           
  3587                           ;OverTemperature_B1.c: 77: Temp.ADtoGO = 0;
  3588  03FD  1141               	bcf	_Temp,2
  3589                           
  3590                           ;OverTemperature_B1.c: 78: Temp.AD = (Temp.ADH[0] + Temp.ADH[1]) / 2;
  3591  03FE  3002               	movlw	2
  3592  03FF  00D9               	movwf	___awdiv@divisor
  3593  0400  3000               	movlw	0
  3594  0401  00DA               	movwf	___awdiv@divisor+1
  3595  0402  0848               	movf	_Temp+7,w
  3596  0403  0749               	addwf	_Temp+8,w
  3597  0404  00DB               	movwf	___awdiv@dividend
  3598  0405  01DC               	clrf	___awdiv@dividend+1
  3599  0406  0DDC               	rlf	___awdiv@dividend+1,f
  3600  0407  118A  2582  118A   	fcall	___awdiv
  3601  040A  1283               	bcf	3,5	;RP0=0, select bank0
  3602  040B  1303               	bcf	3,6	;RP1=0, select bank0
  3603  040C  0859               	movf	?___awdiv,w
  3604  040D  00E2               	movwf	??_setTemp_Main
  3605  040E  0862               	movf	??_setTemp_Main,w
  3606  040F  00C7               	movwf	_Temp+6
  3607                           
  3608                           ;OverTemperature_B1.c: 89: Temp.SafeValue = 0x85;
  3609  0410  3085               	movlw	133
  3610  0411  00E2               	movwf	??_setTemp_Main
  3611  0412  0862               	movf	??_setTemp_Main,w
  3612  0413  00CB               	movwf	_Temp+10
  3613                           
  3614                           ;OverTemperature_B1.c: 90: Temp.DangerValue = 0x70;
  3615  0414  3070               	movlw	112
  3616  0415  00E2               	movwf	??_setTemp_Main
  3617  0416  0862               	movf	??_setTemp_Main,w
  3618  0417  00CC               	movwf	_Temp+11
  3619                           
  3620                           ;OverTemperature_B1.c: 99: if (Temp.ERROR == 1) {
  3621  0418  1CC1               	btfss	_Temp,1
  3622  0419  2C29               	goto	l4473
  3623                           
  3624                           ;OverTemperature_B1.c: 100: if (Temp.AD >= Temp.SafeValue) {
  3625  041A  084B               	movf	_Temp+10,w
  3626  041B  0247               	subwf	_Temp+6,w
  3627  041C  1C03               	skipc
  3628  041D  2C38               	goto	l4483
  3629                           
  3630                           ;OverTemperature_B1.c: 101: Temp.Count++;
  3631  041E  3001               	movlw	1
  3632  041F  00E2               	movwf	??_setTemp_Main
  3633  0420  0862               	movf	??_setTemp_Main,w
  3634  0421  07C4               	addwf	_Temp+3,f
  3635                           
  3636                           ;OverTemperature_B1.c: 102: if (Temp.Count >= 3) {
  3637  0422  3003               	movlw	3
  3638  0423  0244               	subwf	_Temp+3,w
  3639  0424  1C03               	skipc
  3640  0425  2C39               	goto	l949
  3641                           
  3642                           ;OverTemperature_B1.c: 103: Temp.Count = 0;
  3643  0426  01C4               	clrf	_Temp+3
  3644                           
  3645                           ;OverTemperature_B1.c: 104: Temp.ERROR = 0;
  3646  0427  10C1               	bcf	_Temp,1
  3647                           
  3648                           ;OverTemperature_B1.c: 106: }
  3649                           ;OverTemperature_B1.c: 107: } else {
  3650                           
  3651                           ;OverTemperature_B1.c: 105: ;;
  3652  0428  2C39               	goto	l949
  3653  0429                     l4473:	
  3654                           ;OverTemperature_B1.c: 109: }
  3655                           ;OverTemperature_B1.c: 110: } else {
  3656                           
  3657                           ;OverTemperature_B1.c: 108: Temp.Count = 0;
  3658                           
  3659                           
  3660                           ;OverTemperature_B1.c: 111: if (Temp.AD <= Temp.DangerValue) {
  3661  0429  0847               	movf	_Temp+6,w
  3662  042A  024C               	subwf	_Temp+11,w
  3663  042B  1C03               	skipc
  3664  042C  2C38               	goto	l4483
  3665                           
  3666                           ;OverTemperature_B1.c: 112: Temp.Count++;
  3667  042D  3001               	movlw	1
  3668  042E  00E2               	movwf	??_setTemp_Main
  3669  042F  0862               	movf	??_setTemp_Main,w
  3670  0430  07C4               	addwf	_Temp+3,f
  3671                           
  3672                           ;OverTemperature_B1.c: 113: if (Temp.Count >= 3) {
  3673  0431  3003               	movlw	3
  3674  0432  0244               	subwf	_Temp+3,w
  3675  0433  1C03               	skipc
  3676  0434  2C39               	goto	l949
  3677                           
  3678                           ;OverTemperature_B1.c: 114: Temp.Count = 0;
  3679  0435  01C4               	clrf	_Temp+3
  3680                           
  3681                           ;OverTemperature_B1.c: 115: Temp.ERROR = 1;
  3682  0436  14C1               	bsf	_Temp,1
  3683                           
  3684                           ;OverTemperature_B1.c: 116: }
  3685                           ;OverTemperature_B1.c: 117: } else {
  3686  0437  2C39               	goto	l949
  3687  0438                     l4483:	
  3688                           
  3689                           ;OverTemperature_B1.c: 118: Temp.Count = 0;
  3690  0438  01C4               	clrf	_Temp+3
  3691  0439                     l949:	
  3692                           ;OverTemperature_B1.c: 119: }
  3693                           ;OverTemperature_B1.c: 120: }
  3694                           ;OverTemperature_B1.c: 121: ;;
  3695                           ;OverTemperature_B1.c: 122: ;;
  3696                           
  3697                           
  3698                           ;OverTemperature_B1.c: 138: }
  3699                           ;OverTemperature_B1.c: 139: Temp.ADH[0] = 0;
  3700  0439  01C8               	clrf	_Temp+7
  3701                           
  3702                           ;OverTemperature_B1.c: 140: Temp.ADH[1] = 0;
  3703  043A  01C9               	clrf	_Temp+8
  3704                           
  3705                           ;OverTemperature_B1.c: 141: }
  3706                           ;OverTemperature_B1.c: 142: }
  3707                           ;OverTemperature_B1.c: 144: } else {
  3708  043B  0008               	return
  3709  043C                     l944:	
  3710                           
  3711                           ;OverTemperature_B1.c: 145: if (myMain.PowerON == 1) {
  3712  043C  1C27               	btfss	_myMain,0
  3713  043D  0008               	return
  3714                           
  3715                           ;OverTemperature_B1.c: 146: Temp.Enable = 1;
  3716  043E  1441               	bsf	_Temp,0
  3717  043F  0008               	return
  3718  0440                     __end_of_setTemp_Main:	
  3719                           
  3720                           	psect	text14
  3721  0582                     __ptext14:	
  3722 ;; *************** function ___awdiv *****************
  3723 ;; Defined at:
  3724 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  divisor         2    0[BANK0 ] int 
  3727 ;;  dividend        2    2[BANK0 ] int 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  quotient        2    7[BANK0 ] int 
  3730 ;;  sign            1    6[BANK0 ] unsigned char 
  3731 ;;  counter         1    5[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  2    0[BANK0 ] int 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3741 ;;      Params:         0       4       0       0
  3742 ;;      Locals:         0       4       0       0
  3743 ;;      Temps:          0       1       0       0
  3744 ;;      Totals:         0       9       0       0
  3745 ;;Total ram usage:        9 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    3
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_setTemp_Main
  3752 ;;		_getPIR_AD
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function ___awdiv
  3758  0582                     ___awdiv:	
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3762  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0584  01DF               	clrf	___awdiv@sign
  3765  0585  1FDA               	btfss	___awdiv@divisor+1,7
  3766  0586  2D8E               	goto	l4221
  3767  0587  09D9               	comf	___awdiv@divisor,f
  3768  0588  09DA               	comf	___awdiv@divisor+1,f
  3769  0589  0AD9               	incf	___awdiv@divisor,f
  3770  058A  1903               	skipnz
  3771  058B  0ADA               	incf	___awdiv@divisor+1,f
  3772  058C  01DF               	clrf	___awdiv@sign
  3773  058D  0ADF               	incf	___awdiv@sign,f
  3774  058E                     l4221:	
  3775  058E  1FDC               	btfss	___awdiv@dividend+1,7
  3776  058F  2D99               	goto	l4227
  3777  0590  09DB               	comf	___awdiv@dividend,f
  3778  0591  09DC               	comf	___awdiv@dividend+1,f
  3779  0592  0ADB               	incf	___awdiv@dividend,f
  3780  0593  1903               	skipnz
  3781  0594  0ADC               	incf	___awdiv@dividend+1,f
  3782  0595  3001               	movlw	1
  3783  0596  00DD               	movwf	??___awdiv
  3784  0597  085D               	movf	??___awdiv,w
  3785  0598  06DF               	xorwf	___awdiv@sign,f
  3786  0599                     l4227:	
  3787  0599  01E0               	clrf	___awdiv@quotient
  3788  059A  01E1               	clrf	___awdiv@quotient+1
  3789  059B  085A               	movf	___awdiv@divisor+1,w
  3790  059C  0459               	iorwf	___awdiv@divisor,w
  3791  059D  1903               	skipnz
  3792  059E  2DD0               	goto	l4249
  3793  059F  01DE               	clrf	___awdiv@counter
  3794  05A0  0ADE               	incf	___awdiv@counter,f
  3795  05A1                     l4237:	
  3796  05A1  1BDA               	btfsc	___awdiv@divisor+1,7
  3797  05A2  2DAF               	goto	l4239
  3798  05A3  3001               	movlw	1
  3799  05A4                     u4735:	
  3800  05A4  1003               	clrc
  3801  05A5  0DD9               	rlf	___awdiv@divisor,f
  3802  05A6  0DDA               	rlf	___awdiv@divisor+1,f
  3803  05A7  3EFF               	addlw	-1
  3804  05A8  1D03               	skipz
  3805  05A9  2DA4               	goto	u4735
  3806  05AA  3001               	movlw	1
  3807  05AB  00DD               	movwf	??___awdiv
  3808  05AC  085D               	movf	??___awdiv,w
  3809  05AD  07DE               	addwf	___awdiv@counter,f
  3810  05AE  2DA1               	goto	l4237
  3811  05AF                     l4239:	
  3812  05AF  3001               	movlw	1
  3813  05B0                     u4755:	
  3814  05B0  1003               	clrc
  3815  05B1  0DE0               	rlf	___awdiv@quotient,f
  3816  05B2  0DE1               	rlf	___awdiv@quotient+1,f
  3817  05B3  3EFF               	addlw	-1
  3818  05B4  1D03               	skipz
  3819  05B5  2DB0               	goto	u4755
  3820  05B6  085A               	movf	___awdiv@divisor+1,w
  3821  05B7  025C               	subwf	___awdiv@dividend+1,w
  3822  05B8  1D03               	skipz
  3823  05B9  2DBC               	goto	u4765
  3824  05BA  0859               	movf	___awdiv@divisor,w
  3825  05BB  025B               	subwf	___awdiv@dividend,w
  3826  05BC                     u4765:	
  3827  05BC  1C03               	skipc
  3828  05BD  2DC5               	goto	l4245
  3829  05BE  0859               	movf	___awdiv@divisor,w
  3830  05BF  02DB               	subwf	___awdiv@dividend,f
  3831  05C0  085A               	movf	___awdiv@divisor+1,w
  3832  05C1  1C03               	skipc
  3833  05C2  03DC               	decf	___awdiv@dividend+1,f
  3834  05C3  02DC               	subwf	___awdiv@dividend+1,f
  3835  05C4  1460               	bsf	___awdiv@quotient,0
  3836  05C5                     l4245:	
  3837  05C5  3001               	movlw	1
  3838  05C6                     u4775:	
  3839  05C6  1003               	clrc
  3840  05C7  0CDA               	rrf	___awdiv@divisor+1,f
  3841  05C8  0CD9               	rrf	___awdiv@divisor,f
  3842  05C9  3EFF               	addlw	-1
  3843  05CA  1D03               	skipz
  3844  05CB  2DC6               	goto	u4775
  3845  05CC  3001               	movlw	1
  3846  05CD  02DE               	subwf	___awdiv@counter,f
  3847  05CE  1D03               	btfss	3,2
  3848  05CF  2DAF               	goto	l4239
  3849  05D0                     l4249:	
  3850  05D0  085F               	movf	___awdiv@sign,w
  3851  05D1  1903               	btfsc	3,2
  3852  05D2  2DD8               	goto	l4253
  3853  05D3  09E0               	comf	___awdiv@quotient,f
  3854  05D4  09E1               	comf	___awdiv@quotient+1,f
  3855  05D5  0AE0               	incf	___awdiv@quotient,f
  3856  05D6  1903               	skipnz
  3857  05D7  0AE1               	incf	___awdiv@quotient+1,f
  3858  05D8                     l4253:	
  3859  05D8  0861               	movf	___awdiv@quotient+1,w
  3860  05D9  01DA               	clrf	?___awdiv+1
  3861  05DA  07DA               	addwf	?___awdiv+1,f
  3862  05DB  0860               	movf	___awdiv@quotient,w
  3863  05DC  01D9               	clrf	?___awdiv
  3864  05DD  07D9               	addwf	?___awdiv,f
  3865  05DE  0008               	return
  3866  05DF                     __end_of___awdiv:	
  3867                           
  3868                           	psect	text15
  3869  0D87                     __ptext15:	
  3870 ;; *************** function _Temp_Initialization *****************
  3871 ;; Defined at:
  3872 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;		None               void
  3879 ;; Registers used:
  3880 ;;		status,2, status,0, pclath, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3886 ;;      Params:         0       0       0       0
  3887 ;;      Locals:         0       0       0       0
  3888 ;;      Temps:          0       0       0       0
  3889 ;;      Totals:         0       0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    4
  3893 ;; This function calls:
  3894 ;;		_setTemp_Initialization
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _Temp_Initialization
  3902  0D87                     _Temp_Initialization:	
  3903                           
  3904                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3908  0D87  118A  2002         	fcall	_setTemp_Initialization
  3909  0D89  0008               	return
  3910  0D8A                     __end_of_Temp_Initialization:	
  3911                           
  3912                           	psect	text16
  3913  0002                     __ptext16:	
  3914 ;; *************** function _setTemp_Initialization *****************
  3915 ;; Defined at:
  3916 ;;		line 44 in file "../src/OverTemperature_B1.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;		None               void
  3923 ;; Registers used:
  3924 ;;		None
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3930 ;;      Params:         0       0       0       0
  3931 ;;      Locals:         0       0       0       0
  3932 ;;      Temps:          0       0       0       0
  3933 ;;      Totals:         0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    3
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_Temp_Initialization
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _setTemp_Initialization
  3946  0002                     _setTemp_Initialization:	
  3947                           
  3948                           ;incstack = 0
  3949                           ; Regs used in _setTemp_Initialization: []
  3950  0002  0008               	return
  3951  0003                     __end_of_setTemp_Initialization:	
  3952                           
  3953                           	psect	text17
  3954  0027                     __ptext17:	
  3955 ;; *************** function _PIR_Main *****************
  3956 ;; Defined at:
  3957 ;;		line 13 in file "../src/PIR_B1.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  LightsStatus    1   14[BANK0 ] unsigned char 
  3962 ;;  cds             1   13[BANK0 ] unsigned char 
  3963 ;;  error           1   10[BANK0 ] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;		None               void
  3966 ;; Registers used:
  3967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3973 ;;      Params:         0       0       0       0
  3974 ;;      Locals:         0       5       0       0
  3975 ;;      Temps:          0       5       0       0
  3976 ;;      Totals:         0      10       0       0
  3977 ;;Total ram usage:       10 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    5
  3980 ;; This function calls:
  3981 ;;		_getCDS_Status
  3982 ;;		_getDimmerLights_Status
  3983 ;;		_getMain_All_Error_Status
  3984 ;;		_setLED
  3985 ;; This function is called by:
  3986 ;;		_main
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function _PIR_Main
  3992  0027                     _PIR_Main:	
  3993                           
  3994                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  3995                           
  3996                           ;incstack = 0
  3997                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3998  0027  3000               	movlw	0
  3999  0028  158A  274B  118A   	fcall	_getMain_All_Error_Status
  4000  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4001  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4002  002D  00DE               	movwf	??_PIR_Main
  4003  002E  085E               	movf	??_PIR_Main,w
  4004  002F  00E3               	movwf	PIR_Main@error
  4005                           
  4006                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4007  0030  158A  25B6  118A   	fcall	_getCDS_Status
  4008  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0035  00DE               	movwf	??_PIR_Main
  4011  0036  085E               	movf	??_PIR_Main,w
  4012  0037  00E6               	movwf	PIR_Main@cds
  4013                           
  4014                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4015  0038  01E7               	clrf	PIR_Main@LightsStatus
  4016                           
  4017                           ;PIR_B1.c: 26: LightsStatus = getDimmerLights_Status(1);
  4018  0039  3001               	movlw	1
  4019  003A  158A  2659  118A   	fcall	_getDimmerLights_Status
  4020  003D  1283               	bcf	3,5	;RP0=0, select bank0
  4021  003E  1303               	bcf	3,6	;RP1=0, select bank0
  4022  003F  00DE               	movwf	??_PIR_Main
  4023  0040  085E               	movf	??_PIR_Main,w
  4024  0041  00E7               	movwf	PIR_Main@LightsStatus
  4025                           
  4026                           ;PIR_B1.c: 30: if (_PIR.Enable == 1) {
  4027  0042  1683               	bsf	3,5	;RP0=1, select bank1
  4028  0043  1303               	bcf	3,6	;RP1=0, select bank1
  4029  0044  1C20               	btfss	__PIR^(0+128),0
  4030  0045  29EB               	goto	l1014
  4031                           
  4032                           ;PIR_B1.c: 31: if (error == 0) {
  4033  0046  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0047  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0048  08E3               	movf	PIR_Main@error,f
  4036  0049  1D03               	skipz
  4037  004A  2873               	goto	l1015
  4038                           
  4039                           ;PIR_B1.c: 33: if (cds == 1) {
  4040  004B  0866               	movf	PIR_Main@cds,w
  4041  004C  3A01               	xorlw	1
  4042  004D  1D03               	skipz
  4043  004E  2853               	goto	l1016
  4044                           
  4045                           ;PIR_B1.c: 34: _PIR.Available = 1;
  4046  004F  1683               	bsf	3,5	;RP0=1, select bank1
  4047  0050  1303               	bcf	3,6	;RP1=0, select bank1
  4048  0051  17A0               	bsf	__PIR^(0+128),7
  4049                           
  4050                           ;PIR_B1.c: 35: } else {
  4051  0052  2863               	goto	l1017
  4052  0053                     l1016:	
  4053                           
  4054                           ;PIR_B1.c: 36: _PIR.Available = 0;
  4055  0053  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0054  1303               	bcf	3,6	;RP1=0, select bank1
  4057  0055  13A0               	bcf	__PIR^(0+128),7
  4058                           
  4059                           ;PIR_B1.c: 37: if (_PIR.OK == 1) {
  4060  0056  1DA0               	btfss	__PIR^(0+128),3
  4061  0057  2863               	goto	l1017
  4062                           
  4063                           ;PIR_B1.c: 45: if (getDimmerLights_Status(1) == 1) {
  4064  0058  3001               	movlw	1
  4065  0059  158A  2659  118A   	fcall	_getDimmerLights_Status
  4066  005C  3A01               	xorlw	1
  4067  005D  1D03               	skipz
  4068  005E  2863               	goto	l1017
  4069                           
  4070                           ;PIR_B1.c: 46: Dimmer.PIR_Trigger = 1;
  4071  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4072  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4073  0061  16AD               	bsf	_Dimmer,5
  4074                           
  4075                           ;PIR_B1.c: 47: Dimmer.PIR_Sw = 0;
  4076  0062  122D               	bcf	_Dimmer,4
  4077  0063                     l1017:	
  4078                           
  4079                           ;PIR_B1.c: 48: }
  4080                           ;PIR_B1.c: 52: }
  4081                           ;PIR_B1.c: 53: }
  4082                           ;PIR_B1.c: 57: if (_PIR.Detect == 0) {
  4083  0063  1683               	bsf	3,5	;RP0=1, select bank1
  4084  0064  1303               	bcf	3,6	;RP1=0, select bank1
  4085  0065  1A20               	btfsc	__PIR^(0+128),4
  4086  0066  2879               	goto	l1022
  4087                           
  4088                           ;PIR_B1.c: 58: _PIR.Detect = 1;
  4089  0067  1620               	bsf	__PIR^(0+128),4
  4090                           
  4091                           ;PIR_B1.c: 59: if (_PIR.OK == 0) {
  4092  0068  19A0               	btfsc	__PIR^(0+128),3
  4093  0069  2879               	goto	l1022
  4094                           
  4095                           ;PIR_B1.c: 60: setLED(1, 1);
  4096  006A  1283               	bcf	3,5	;RP0=0, select bank0
  4097  006B  1303               	bcf	3,6	;RP1=0, select bank0
  4098  006C  01DB               	clrf	setLED@command
  4099  006D  0ADB               	incf	setLED@command,f
  4100  006E  3001               	movlw	1
  4101  006F  118A  24B1  118A   	fcall	_setLED
  4102                           
  4103                           ;PIR_B1.c: 61: }
  4104                           ;PIR_B1.c: 62: }
  4105                           ;PIR_B1.c: 63: } else {
  4106  0072  2879               	goto	l1022
  4107  0073                     l1015:	
  4108                           
  4109                           ;PIR_B1.c: 64: if (_PIR.Detect == 1) {
  4110  0073  1683               	bsf	3,5	;RP0=1, select bank1
  4111  0074  1303               	bcf	3,6	;RP1=0, select bank1
  4112  0075  1E20               	btfss	__PIR^(0+128),4
  4113  0076  2879               	goto	l1022
  4114                           
  4115                           ;PIR_B1.c: 65: _PIR.Detect = 0;
  4116  0077  1220               	bcf	__PIR^(0+128),4
  4117                           
  4118                           ;PIR_B1.c: 66: _PIR.Available = 0;
  4119  0078  13A0               	bcf	__PIR^(0+128),7
  4120  0079                     l1022:	
  4121                           
  4122                           ;PIR_B1.c: 84: }
  4123                           ;PIR_B1.c: 85: }
  4124                           ;PIR_B1.c: 87: if (_PIR.ADtoGO == 0) {
  4125  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4126  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4127  007B  18A0               	btfsc	__PIR^(0+128),1
  4128  007C  288C               	goto	l1024
  4129                           
  4130                           ;PIR_B1.c: 88: _PIR.Time++;
  4131  007D  3001               	movlw	1
  4132  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4133  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4134  0080  00DE               	movwf	??_PIR_Main
  4135  0081  085E               	movf	??_PIR_Main,w
  4136  0082  1683               	bsf	3,5	;RP0=1, select bank1
  4137  0083  1303               	bcf	3,6	;RP1=0, select bank1
  4138  0084  07A5               	addwf	(__PIR^(0+128)+5),f
  4139                           
  4140                           ;PIR_B1.c: 89: if (_PIR.Time == (100 / 20)) {
  4141  0085  0825               	movf	(__PIR^(0+128)+5),w
  4142  0086  3A05               	xorlw	5
  4143  0087  1D03               	skipz
  4144  0088  2992               	goto	l4795
  4145                           
  4146                           ;PIR_B1.c: 90: _PIR.Time = 0;
  4147  0089  01A5               	clrf	(__PIR^(0+128)+5)
  4148                           
  4149                           ;PIR_B1.c: 91: _PIR.ADtoGO = 1;
  4150  008A  14A0               	bsf	__PIR^(0+128),1
  4151                           
  4152                           ;PIR_B1.c: 92: }
  4153                           ;PIR_B1.c: 93: } else {
  4154  008B  2992               	goto	l4795
  4155  008C                     l1024:	
  4156                           
  4157                           ;PIR_B1.c: 94: if (_PIR.GO == 1) {
  4158  008C  1D20               	btfss	__PIR^(0+128),2
  4159  008D  2992               	goto	l4795
  4160                           
  4161                           ;PIR_B1.c: 95: _PIR.GO = 0;
  4162  008E  1120               	bcf	__PIR^(0+128),2
  4163                           
  4164                           ;PIR_B1.c: 96: _PIR.ADtoGO = 0;
  4165  008F  10A0               	bcf	__PIR^(0+128),1
  4166                           
  4167                           ;PIR_B1.c: 97: if (_PIR.Available == 1) {
  4168  0090  1BA0               	btfsc	__PIR^(0+128),7
  4169                           
  4170                           ;PIR_B1.c: 98: if (_PIR.OK == 1) {
  4171  0091  1DA0               	btfss	__PIR^(0+128),3
  4172  0092  2992               	goto	l4795
  4173                           
  4174                           ;PIR_B1.c: 100: _PIR.Time++;
  4175  0093  3001               	movlw	1
  4176  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0096  00DE               	movwf	??_PIR_Main
  4179  0097  085E               	movf	??_PIR_Main,w
  4180  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4181  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4182  009A  07A5               	addwf	(__PIR^(0+128)+5),f
  4183                           
  4184                           ;PIR_B1.c: 101: if (_PIR.Time == 60) {
  4185  009B  0825               	movf	(__PIR^(0+128)+5),w
  4186  009C  3A3C               	xorlw	60
  4187  009D  1D03               	skipz
  4188  009E  28D3               	goto	l4763
  4189                           
  4190                           ;PIR_B1.c: 102: _PIR.Time = 0;
  4191  009F  01A5               	clrf	(__PIR^(0+128)+5)
  4192                           
  4193                           ;PIR_B1.c: 103: if (_PIR.RangeCount >= 90) {
  4194  00A0  305A               	movlw	90
  4195  00A1  024B               	subwf	(__PIR^(0+128)+43),w
  4196  00A2  1C03               	skipc
  4197  00A3  28AF               	goto	l4745
  4198                           
  4199                           ;PIR_B1.c: 104: _PIR.RangeTime1 = 0;
  4200  00A4  01CA               	clrf	(__PIR^(0+128)+42)
  4201                           
  4202                           ;PIR_B1.c: 106: if (_PIR.RangeValue == 25) {
  4203  00A5  084C               	movf	(__PIR^(0+128)+44),w
  4204  00A6  3A19               	xorlw	25
  4205  00A7  1903               	btfsc	3,2
  4206  00A8  28C4               	goto	L11
  4207                           
  4208                           ;PIR_B1.c: 108: } else if (_PIR.RangeValue == (25+10)) {
  4209                           
  4210                           ;PIR_B1.c: 107: _PIR.RangeValue = (25+10);
  4211  00A9  084C               	movf	(__PIR^(0+128)+44),w
  4212  00AA  3A23               	xorlw	35
  4213  00AB  1D03               	skipz
  4214  00AC  28D2               	goto	l4761
  4215                           
  4216                           ;PIR_B1.c: 109: _PIR.RangeValue = (25+20);
  4217  00AD  302D               	movlw	45
  4218  00AE  28CB               	goto	L8
  4219  00AF                     l4745:	
  4220                           ;PIR_B1.c: 110: }
  4221                           ;PIR_B1.c: 111: } else if (_PIR.RangeCount <= 10) {
  4222                           
  4223  00AF  300B               	movlw	11
  4224  00B0  024B               	subwf	(__PIR^(0+128)+43),w
  4225  00B1  1803               	skipnc
  4226  00B2  28D2               	goto	l4761
  4227                           
  4228                           ;PIR_B1.c: 112: _PIR.RangeTime1++;
  4229  00B3  3001               	movlw	1
  4230  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  4231  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  4232  00B6  00DE               	movwf	??_PIR_Main
  4233  00B7  085E               	movf	??_PIR_Main,w
  4234  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  4235  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  4236  00BA  07CA               	addwf	(__PIR^(0+128)+42),f
  4237                           
  4238                           ;PIR_B1.c: 113: if (_PIR.RangeTime1 == 2) {
  4239  00BB  084A               	movf	(__PIR^(0+128)+42),w
  4240  00BC  3A02               	xorlw	2
  4241  00BD  1D03               	skipz
  4242  00BE  28D2               	goto	l4761
  4243                           
  4244                           ;PIR_B1.c: 114: _PIR.RangeTime1 = 0;
  4245  00BF  01CA               	clrf	(__PIR^(0+128)+42)
  4246                           
  4247                           ;PIR_B1.c: 116: if (_PIR.RangeValue == (25+20)) {
  4248  00C0  084C               	movf	(__PIR^(0+128)+44),w
  4249  00C1  3A2D               	xorlw	45
  4250  00C2  1D03               	skipz
  4251  00C3  28C6               	goto	l4757
  4252  00C4                     L11:	
  4253                           
  4254                           ;PIR_B1.c: 117: _PIR.RangeValue = (25+10);
  4255  00C4  3023               	movlw	35
  4256  00C5  28CB               	goto	L8
  4257  00C6                     l4757:	
  4258                           ;PIR_B1.c: 118: } else if (_PIR.RangeValue == (25+10)) {
  4259                           
  4260  00C6  084C               	movf	(__PIR^(0+128)+44),w
  4261  00C7  3A23               	xorlw	35
  4262  00C8  1D03               	skipz
  4263  00C9  28D2               	goto	l4761
  4264                           
  4265                           ;PIR_B1.c: 119: _PIR.RangeValue = 25;
  4266  00CA  3019               	movlw	25
  4267  00CB                     L8:	
  4268  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4269  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  4270  00CD  00DE               	movwf	??_PIR_Main
  4271  00CE  085E               	movf	??_PIR_Main,w
  4272  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  4273  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  4274  00D1  00CC               	movwf	(__PIR^(0+128)+44)
  4275  00D2                     l4761:	
  4276                           
  4277                           ;PIR_B1.c: 120: }
  4278                           ;PIR_B1.c: 121: }
  4279                           ;PIR_B1.c: 122: }
  4280                           ;PIR_B1.c: 123: _PIR.RangeCount = 0;
  4281  00D2  01CB               	clrf	(__PIR^(0+128)+43)
  4282  00D3                     l4763:	
  4283                           
  4284                           ;PIR_B1.c: 124: }
  4285                           ;PIR_B1.c: 127: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4286                           ;PIR_B1.c: 128: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4287  00D3  084C               	movf	(__PIR^(0+128)+44),w
  4288  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  4289  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  4290  00D6  00DE               	movwf	??_PIR_Main
  4291  00D7  01DF               	clrf	??_PIR_Main+1
  4292  00D8  09DE               	comf	??_PIR_Main,f
  4293  00D9  09DF               	comf	??_PIR_Main+1,f
  4294  00DA  0ADE               	incf	??_PIR_Main,f
  4295  00DB  1903               	skipnz
  4296  00DC  0ADF               	incf	??_PIR_Main+1,f
  4297  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  4298  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  4299  00DF  0826               	movf	(__PIR^(0+128)+6),w
  4300  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  4301  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  4302  00E2  075E               	addwf	??_PIR_Main,w
  4303  00E3  00E0               	movwf	??_PIR_Main+2
  4304  00E4  085F               	movf	??_PIR_Main+1,w
  4305  00E5  1803               	skipnc
  4306  00E6  0A5F               	incf	??_PIR_Main+1,w
  4307  00E7  00E1               	movwf	??_PIR_Main+3
  4308  00E8  0861               	movf	??_PIR_Main+3,w
  4309  00E9  3A80               	xorlw	128
  4310  00EA  3C80               	sublw	128
  4311  00EB  1D03               	skipz
  4312  00EC  28F1               	goto	u5835
  4313  00ED  0860               	movf	??_PIR_Main+2,w
  4314  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  4315  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  4316  00F0  0221               	subwf	(__PIR^(0+128)+1),w
  4317  00F1                     u5835:	
  4318  00F1  1C03               	skipc
  4319  00F2  2913               	goto	l4773
  4320  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  4321  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  4322  00F5  0826               	movf	(__PIR^(0+128)+6),w
  4323  00F6  074C               	addwf	(__PIR^(0+128)+44),w
  4324  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  4325  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  4326  00F9  00DE               	movwf	??_PIR_Main
  4327  00FA  01DF               	clrf	??_PIR_Main+1
  4328  00FB  0DDF               	rlf	??_PIR_Main+1,f
  4329  00FC  085F               	movf	??_PIR_Main+1,w
  4330  00FD  3A80               	xorlw	128
  4331  00FE  00E0               	movwf	??_PIR_Main+2
  4332  00FF  3080               	movlw	128
  4333  0100  0260               	subwf	??_PIR_Main+2,w
  4334  0101  1D03               	skipz
  4335  0102  2909               	goto	u5845
  4336  0103  1683               	bsf	3,5	;RP0=1, select bank1
  4337  0104  1303               	bcf	3,6	;RP1=0, select bank1
  4338  0105  0821               	movf	(__PIR^(0+128)+1),w
  4339  0106  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0107  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0108  025E               	subwf	??_PIR_Main,w
  4342  0109                     u5845:	
  4343  0109  1C03               	skipc
  4344  010A  2913               	goto	l4773
  4345                           
  4346                           ;PIR_B1.c: 130: _PIR.Count = 0;
  4347  010B  1683               	bsf	3,5	;RP0=1, select bank1
  4348  010C  1303               	bcf	3,6	;RP1=0, select bank1
  4349  010D  01C1               	clrf	(__PIR^(0+128)+33)
  4350  010E  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4351                           
  4352                           ;PIR_B1.c: 136: setLED(1, 0);
  4353  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0111  01DB               	clrf	setLED@command
  4356  0112  297B               	goto	L12
  4357  0113                     l4773:	
  4358                           ;PIR_B1.c: 138: } else {
  4359                           
  4360                           ;PIR_B1.c: 137: setLED(2, 0);
  4361                           
  4362                           
  4363                           ;PIR_B1.c: 141: _PIR.RangeCount++;
  4364  0113  3001               	movlw	1
  4365  0114  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0115  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0116  00DE               	movwf	??_PIR_Main
  4368  0117  085E               	movf	??_PIR_Main,w
  4369  0118  1683               	bsf	3,5	;RP0=1, select bank1
  4370  0119  1303               	bcf	3,6	;RP1=0, select bank1
  4371  011A  07CB               	addwf	(__PIR^(0+128)+43),f
  4372                           
  4373                           ;PIR_B1.c: 142: _PIR.Count++;
  4374  011B  3001               	movlw	1
  4375  011C  07C1               	addwf	(__PIR^(0+128)+33),f
  4376  011D  1803               	skipnc
  4377  011E  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4378  011F  3000               	movlw	0
  4379  0120  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4380                           
  4381                           ;PIR_B1.c: 144: _PIR.TriggerValue = LightsStatus == 1 ? 3 : 3;
  4382  0121  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0122  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0123  0867               	movf	PIR_Main@LightsStatus,w
  4385  0124  3A01               	xorlw	1
  4386  0125  1903               	skipnz
  4387  0126  2927               	goto	l4781
  4388  0127                     l4781:	
  4389  0127  3003               	movlw	3
  4390  0128  00E4               	movwf	_PIR_Main$3352
  4391  0129  3000               	movlw	0
  4392  012A  00E5               	movwf	_PIR_Main$3352+1
  4393  012B  0864               	movf	_PIR_Main$3352,w
  4394  012C  00DE               	movwf	??_PIR_Main
  4395  012D  085E               	movf	??_PIR_Main,w
  4396  012E  1683               	bsf	3,5	;RP0=1, select bank1
  4397  012F  1303               	bcf	3,6	;RP1=0, select bank1
  4398  0130  00C3               	movwf	(__PIR^(0+128)+35)
  4399                           
  4400                           ;PIR_B1.c: 146: if (_PIR.Count == _PIR.TriggerValue) {
  4401  0131  0843               	movf	(__PIR^(0+128)+35),w
  4402  0132  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0133  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0134  00DE               	movwf	??_PIR_Main
  4405  0135  01DF               	clrf	??_PIR_Main+1
  4406  0136  1683               	bsf	3,5	;RP0=1, select bank1
  4407  0137  1303               	bcf	3,6	;RP1=0, select bank1
  4408  0138  0842               	movf	((__PIR+1)^(0+128)+33),w
  4409  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4410  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4411  013B  065F               	xorwf	??_PIR_Main+1,w
  4412  013C  1D03               	skipz
  4413  013D  2944               	goto	u5865
  4414  013E  1683               	bsf	3,5	;RP0=1, select bank1
  4415  013F  1303               	bcf	3,6	;RP1=0, select bank1
  4416  0140  0841               	movf	(__PIR^(0+128)+33),w
  4417  0141  1283               	bcf	3,5	;RP0=0, select bank0
  4418  0142  1303               	bcf	3,6	;RP1=0, select bank0
  4419  0143  065E               	xorwf	??_PIR_Main,w
  4420  0144                     u5865:	
  4421  0144  1D03               	skipz
  4422  0145  2992               	goto	l4795
  4423                           
  4424                           ;PIR_B1.c: 147: _PIR.Count = 0;
  4425  0146  1683               	bsf	3,5	;RP0=1, select bank1
  4426  0147  1303               	bcf	3,6	;RP1=0, select bank1
  4427  0148  01C1               	clrf	(__PIR^(0+128)+33)
  4428  0149  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4429                           
  4430                           ;PIR_B1.c: 149: _PIR.CloseTimeSeconds = 0;
  4431  014A  01C6               	clrf	(__PIR^(0+128)+38)
  4432                           
  4433                           ;PIR_B1.c: 150: _PIR.CloseTimeMinutes = 0;
  4434  014B  01C4               	clrf	(__PIR^(0+128)+36)
  4435  014C  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4436                           
  4437                           ;PIR_B1.c: 166: Dimmer.PIR_Trigger = 1;
  4438  014D  1283               	bcf	3,5	;RP0=0, select bank0
  4439  014E  1303               	bcf	3,6	;RP1=0, select bank0
  4440  014F  16AD               	bsf	_Dimmer,5
  4441                           
  4442                           ;PIR_B1.c: 167: Dimmer.PIR_Sw = 1;
  4443  0150  162D               	bsf	_Dimmer,4
  4444                           
  4445                           ;PIR_B1.c: 172: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4446  0151  1683               	bsf	3,5	;RP0=1, select bank1
  4447  0152  1303               	bcf	3,6	;RP1=0, select bank1
  4448  0153  084C               	movf	(__PIR^(0+128)+44),w
  4449  0154  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0155  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0156  00DE               	movwf	??_PIR_Main
  4452  0157  01DF               	clrf	??_PIR_Main+1
  4453  0158  09DE               	comf	??_PIR_Main,f
  4454  0159  09DF               	comf	??_PIR_Main+1,f
  4455  015A  0ADE               	incf	??_PIR_Main,f
  4456  015B  1903               	skipnz
  4457  015C  0ADF               	incf	??_PIR_Main+1,f
  4458  015D  1683               	bsf	3,5	;RP0=1, select bank1
  4459  015E  1303               	bcf	3,6	;RP1=0, select bank1
  4460  015F  0826               	movf	(__PIR^(0+128)+6),w
  4461  0160  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0161  1303               	bcf	3,6	;RP1=0, select bank0
  4463  0162  075E               	addwf	??_PIR_Main,w
  4464  0163  00E0               	movwf	??_PIR_Main+2
  4465  0164  085F               	movf	??_PIR_Main+1,w
  4466  0165  1803               	skipnc
  4467  0166  0A5F               	incf	??_PIR_Main+1,w
  4468  0167  00E1               	movwf	??_PIR_Main+3
  4469  0168  0861               	movf	??_PIR_Main+3,w
  4470  0169  3A80               	xorlw	128
  4471  016A  00E2               	movwf	??_PIR_Main+4
  4472  016B  3080               	movlw	128
  4473  016C  0262               	subwf	??_PIR_Main+4,w
  4474  016D  1D03               	skipz
  4475  016E  2975               	goto	u5875
  4476  016F  1683               	bsf	3,5	;RP0=1, select bank1
  4477  0170  1303               	bcf	3,6	;RP1=0, select bank1
  4478  0171  0821               	movf	(__PIR^(0+128)+1),w
  4479  0172  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0173  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0174  0260               	subwf	??_PIR_Main+2,w
  4482  0175                     u5875:	
  4483  0175  1C03               	skipc
  4484  0176  2983               	goto	l4793
  4485                           
  4486                           ;PIR_B1.c: 173: setLED(1, 1);
  4487  0177  1283               	bcf	3,5	;RP0=0, select bank0
  4488  0178  1303               	bcf	3,6	;RP1=0, select bank0
  4489  0179  01DB               	clrf	setLED@command
  4490  017A  0ADB               	incf	setLED@command,f
  4491  017B                     L12:	
  4492  017B  3001               	movlw	1
  4493  017C  118A  24B1  118A   	fcall	_setLED
  4494                           
  4495                           ;PIR_B1.c: 174: setLED(2, 0);
  4496  017F  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0180  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0181  01DB               	clrf	setLED@command
  4499  0182  298E               	goto	L9
  4500  0183                     l4793:	
  4501                           ;PIR_B1.c: 175: } else {
  4502                           
  4503                           
  4504                           ;PIR_B1.c: 176: setLED(1, 0);
  4505  0183  1283               	bcf	3,5	;RP0=0, select bank0
  4506  0184  1303               	bcf	3,6	;RP1=0, select bank0
  4507  0185  01DB               	clrf	setLED@command
  4508  0186  3001               	movlw	1
  4509  0187  118A  24B1  118A   	fcall	_setLED
  4510                           
  4511                           ;PIR_B1.c: 177: setLED(2, 1);
  4512  018A  1283               	bcf	3,5	;RP0=0, select bank0
  4513  018B  1303               	bcf	3,6	;RP1=0, select bank0
  4514  018C  01DB               	clrf	setLED@command
  4515  018D  0ADB               	incf	setLED@command,f
  4516  018E                     L9:	
  4517  018E  3002               	movlw	2
  4518  018F  118A  24B1  118A   	fcall	_setLED
  4519  0192                     l4795:	
  4520                           
  4521                           ;PIR_B1.c: 178: }
  4522                           ;PIR_B1.c: 212: }
  4523                           ;PIR_B1.c: 213: }
  4524                           ;PIR_B1.c: 214: }
  4525                           ;PIR_B1.c: 215: }
  4526                           ;PIR_B1.c: 216: }
  4527                           ;PIR_B1.c: 217: }
  4528                           ;PIR_B1.c: 218: if (_PIR.OK == 0) {
  4529  0192  1683               	bsf	3,5	;RP0=1, select bank1
  4530  0193  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0194  19A0               	btfsc	__PIR^(0+128),3
  4532  0195  29BF               	goto	l4811
  4533                           
  4534                           ;PIR_B1.c: 219: _PIR.Count++;
  4535  0196  3001               	movlw	1
  4536  0197  07C1               	addwf	(__PIR^(0+128)+33),f
  4537  0198  1803               	skipnc
  4538  0199  0AC2               	incf	((__PIR+1)^(0+128)+33),f
  4539  019A  3000               	movlw	0
  4540  019B  07C2               	addwf	((__PIR+1)^(0+128)+33),f
  4541                           
  4542                           ;PIR_B1.c: 220: if (_PIR.Count == (30000 / 20)) {
  4543  019C  3005               	movlw	5
  4544  019D  0642               	xorwf	((__PIR+1)^(0+128)+33),w
  4545  019E  1D03               	skipz
  4546  019F  29A2               	goto	u5895
  4547  01A0  30DC               	movlw	220
  4548  01A1  0641               	xorwf	(__PIR^(0+128)+33),w
  4549  01A2                     u5895:	
  4550  01A2  1D03               	skipz
  4551  01A3  0008               	return
  4552                           
  4553                           ;PIR_B1.c: 221: _PIR.Count = 0;
  4554  01A4  01C1               	clrf	(__PIR^(0+128)+33)
  4555  01A5  01C2               	clrf	((__PIR+1)^(0+128)+33)
  4556                           
  4557                           ;PIR_B1.c: 222: _PIR.OK = 1;
  4558  01A6  15A0               	bsf	__PIR^(0+128),3
  4559                           
  4560                           ;PIR_B1.c: 223: setLED(1, 0);
  4561  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  4562  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  4563  01A9  01DB               	clrf	setLED@command
  4564  01AA  3001               	movlw	1
  4565  01AB  118A  24B1  118A   	fcall	_setLED
  4566                           
  4567                           ;PIR_B1.c: 224: if (cds == 0) {
  4568  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  4569  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  4570  01B0  08E6               	movf	PIR_Main@cds,f
  4571  01B1  1D03               	skipz
  4572  01B2  0008               	return
  4573                           
  4574                           ;PIR_B1.c: 234: if (getDimmerLights_Status(1) == 1) {
  4575  01B3  3001               	movlw	1
  4576  01B4  158A  2659  118A   	fcall	_getDimmerLights_Status
  4577  01B7  3A01               	xorlw	1
  4578  01B8  1D03               	skipz
  4579  01B9  0008               	return
  4580                           
  4581                           ;PIR_B1.c: 235: Dimmer.PIR_Trigger = 1;
  4582  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  4583  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  4584  01BC  16AD               	bsf	_Dimmer,5
  4585                           
  4586                           ;PIR_B1.c: 236: Dimmer.PIR_Sw = 0;
  4587  01BD  122D               	bcf	_Dimmer,4
  4588                           
  4589                           ;PIR_B1.c: 237: }
  4590                           ;PIR_B1.c: 241: }
  4591                           ;PIR_B1.c: 242: }
  4592                           ;PIR_B1.c: 243: } else {
  4593  01BE  0008               	return
  4594  01BF                     l4811:	
  4595                           
  4596                           ;PIR_B1.c: 244: if (LightsStatus == 1) {
  4597  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  4598  01C0  0867               	movf	PIR_Main@LightsStatus,w
  4599  01C1  3A01               	xorlw	1
  4600  01C2  1D03               	skipz
  4601  01C3  0008               	return
  4602                           
  4603                           ;PIR_B1.c: 245: _PIR.CloseTimeSeconds++;
  4604  01C4  3001               	movlw	1
  4605  01C5  00DE               	movwf	??_PIR_Main
  4606  01C6  085E               	movf	??_PIR_Main,w
  4607  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  4608  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  4609  01C9  07C6               	addwf	(__PIR^(0+128)+38),f
  4610                           
  4611                           ;PIR_B1.c: 246: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4612  01CA  0846               	movf	(__PIR^(0+128)+38),w
  4613  01CB  3A32               	xorlw	50
  4614  01CC  1D03               	skipz
  4615  01CD  0008               	return
  4616                           
  4617                           ;PIR_B1.c: 247: _PIR.CloseTimeSeconds = 0;
  4618  01CE  01C6               	clrf	(__PIR^(0+128)+38)
  4619                           
  4620                           ;PIR_B1.c: 248: _PIR.CloseTimeMinutes++;
  4621  01CF  3001               	movlw	1
  4622  01D0  07C4               	addwf	(__PIR^(0+128)+36),f
  4623  01D1  1803               	skipnc
  4624  01D2  0AC5               	incf	((__PIR+1)^(0+128)+36),f
  4625  01D3  3000               	movlw	0
  4626  01D4  07C5               	addwf	((__PIR+1)^(0+128)+36),f
  4627                           
  4628                           ;PIR_B1.c: 249: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4629  01D5  0848               	movf	((__PIR+1)^(0+128)+39),w
  4630  01D6  0645               	xorwf	((__PIR+1)^(0+128)+36),w
  4631  01D7  1D03               	skipz
  4632  01D8  29DB               	goto	u5945
  4633  01D9  0847               	movf	(__PIR^(0+128)+39),w
  4634  01DA  0644               	xorwf	(__PIR^(0+128)+36),w
  4635  01DB                     u5945:	
  4636  01DB  1D03               	skipz
  4637  01DC  0008               	return
  4638                           
  4639                           ;PIR_B1.c: 250: _PIR.CloseTimeMinutes = 0;
  4640  01DD  01C4               	clrf	(__PIR^(0+128)+36)
  4641  01DE  01C5               	clrf	((__PIR+1)^(0+128)+36)
  4642                           
  4643                           ;PIR_B1.c: 264: if (getDimmerLights_Status(1) == 1) {
  4644  01DF  3001               	movlw	1
  4645  01E0  158A  2659  118A   	fcall	_getDimmerLights_Status
  4646  01E3  3A01               	xorlw	1
  4647  01E4  1D03               	skipz
  4648  01E5  0008               	return
  4649                           
  4650                           ;PIR_B1.c: 265: Dimmer.PIR_Trigger = 1;
  4651  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  4652  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  4653  01E8  16AD               	bsf	_Dimmer,5
  4654                           
  4655                           ;PIR_B1.c: 266: Dimmer.PIR_Sw = 0;
  4656  01E9  122D               	bcf	_Dimmer,4
  4657                           
  4658                           ;PIR_B1.c: 267: }
  4659                           ;PIR_B1.c: 270: }
  4660                           ;PIR_B1.c: 271: }
  4661                           ;PIR_B1.c: 272: }
  4662                           ;PIR_B1.c: 273: }
  4663                           ;PIR_B1.c: 274: } else {
  4664  01EA  0008               	return
  4665  01EB                     l1014:	
  4666                           
  4667                           ;PIR_B1.c: 275: if (myMain.PowerON == 1) {
  4668  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  4669  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  4670  01ED  1C27               	btfss	_myMain,0
  4671  01EE  0008               	return
  4672                           
  4673                           ;PIR_B1.c: 276: _PIR.Enable = 1;
  4674  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  4675  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  4676  01F1  1420               	bsf	__PIR^(0+128),0
  4677                           
  4678                           ;PIR_B1.c: 277: setLED(1, 1);
  4679  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  4680  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  4681  01F4  01DB               	clrf	setLED@command
  4682  01F5  0ADB               	incf	setLED@command,f
  4683  01F6  3001               	movlw	1
  4684  01F7  118A  24B1         	fcall	_setLED
  4685                           
  4686                           ;PIR_B1.c: 289: Dimmer.PIR_Trigger = 1;
  4687  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  4688  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  4689  01FB  16AD               	bsf	_Dimmer,5
  4690                           
  4691                           ;PIR_B1.c: 290: Dimmer.PIR_Sw = 1;
  4692  01FC  162D               	bsf	_Dimmer,4
  4693  01FD  0008               	return
  4694  01FE                     __end_of_PIR_Main:	
  4695                           
  4696                           	psect	text18
  4697  0DB6                     __ptext18:	
  4698 ;; *************** function _getCDS_Status *****************
  4699 ;; Defined at:
  4700 ;;		line 42 in file "../src/CDS_B1.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;  status          1    0[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      unsigned char 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4714 ;;      Params:         0       0       0       0
  4715 ;;      Locals:         0       1       0       0
  4716 ;;      Temps:          0       0       0       0
  4717 ;;      Totals:         0       1       0       0
  4718 ;;Total ram usage:        1 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    3
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_PIR_Main
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           
  4729                           ;psect for function _getCDS_Status
  4730  0DB6                     _getCDS_Status:	
  4731                           
  4732                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4736  0DB6  3000               	movlw	0
  4737  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0DB9  1A32               	btfsc	__CDS,4
  4740  0DBA  3001               	movlw	1
  4741  0DBB  00D9               	movwf	getCDS_Status@status
  4742                           
  4743                           ;CDS_B1.c: 44: return status;
  4744  0DBC  0859               	movf	getCDS_Status@status,w
  4745  0DBD  0008               	return
  4746  0DBE                     __end_of_getCDS_Status:	
  4747                           
  4748                           	psect	text19
  4749  0E03                     __ptext19:	
  4750 ;; *************** function _PIR_Initialization *****************
  4751 ;; Defined at:
  4752 ;;		line 7 in file "../src/PIR_B1.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;		None               void
  4759 ;; Registers used:
  4760 ;;		wreg
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4766 ;;      Params:         0       0       0       0
  4767 ;;      Locals:         0       0       0       0
  4768 ;;      Temps:          0       1       0       0
  4769 ;;      Totals:         0       1       0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    3
  4773 ;; This function calls:
  4774 ;;		Nothing
  4775 ;; This function is called by:
  4776 ;;		_main
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _PIR_Initialization
  4782  0E03                     _PIR_Initialization:	
  4783                           
  4784                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in _PIR_Initialization: [wreg]
  4788  0E03  3019               	movlw	25
  4789  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0E06  00D9               	movwf	??_PIR_Initialization
  4792  0E07  0859               	movf	??_PIR_Initialization,w
  4793  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  4794  0E09  1303               	bcf	3,6	;RP1=0, select bank1
  4795  0E0A  00CC               	movwf	(__PIR^(0+128)+44)
  4796                           
  4797                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4798  0E0B  3005               	movlw	5
  4799  0E0C  00C7               	movwf	(__PIR^(0+128)+39)
  4800  0E0D  3000               	movlw	0
  4801  0E0E  00C8               	movwf	(__PIR^(0+128)+40)
  4802  0E0F  0008               	return
  4803  0E10                     __end_of_PIR_Initialization:	
  4804                           
  4805                           	psect	text20
  4806  0E3A                     __ptext20:	
  4807 ;; *************** function _Mcu_Initialization *****************
  4808 ;; Defined at:
  4809 ;;		line 30 in file "../src/MCU_B1.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;		None               void
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0, pclath, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4823 ;;      Params:         0       0       0       0
  4824 ;;      Locals:         0       0       0       0
  4825 ;;      Temps:          0       0       0       0
  4826 ;;      Totals:         0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    4
  4830 ;; This function calls:
  4831 ;;		_ADC_Set
  4832 ;;		_Fosc_Set
  4833 ;;		_IO_Set
  4834 ;;		_TMR1_Set
  4835 ;;		_WDT_Set
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _Mcu_Initialization
  4843  0E3A                     _Mcu_Initialization:	
  4844                           
  4845                           ;MCU_B1.c: 32: Fosc_Set();
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4849  0E3A  158A  2596  158A   	fcall	_Fosc_Set
  4850                           
  4851                           ;MCU_B1.c: 34: IO_Set();
  4852  0E3D  158A  2733  158A   	fcall	_IO_Set
  4853                           
  4854                           ;MCU_B1.c: 36: ;;
  4855                           ;MCU_B1.c: 38: TMR1_Set();
  4856  0E40  158A  261E  158A   	fcall	_TMR1_Set
  4857                           
  4858                           ;MCU_B1.c: 40: ADC_Set();
  4859  0E43  158A  25AF  158A   	fcall	_ADC_Set
  4860                           
  4861                           ;MCU_B1.c: 42: ;;
  4862                           ;MCU_B1.c: 44: ;;
  4863                           ;MCU_B1.c: 46: ;;
  4864                           ;MCU_B1.c: 48: ;;
  4865                           ;MCU_B1.c: 50: ;;
  4866                           ;MCU_B1.c: 52: WDT_Set();
  4867  0E46  158A  262C         	fcall	_WDT_Set
  4868  0E48  0008               	return
  4869  0E49                     __end_of_Mcu_Initialization:	
  4870                           
  4871                           	psect	text21
  4872  0E2C                     __ptext21:	
  4873 ;; *************** function _WDT_Set *****************
  4874 ;; Defined at:
  4875 ;;		line 1089 in file "../src/MCU_B1.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4889 ;;      Params:         0       0       0       0
  4890 ;;      Locals:         0       0       0       0
  4891 ;;      Temps:          0       1       0       0
  4892 ;;      Totals:         0       1       0       0
  4893 ;;Total ram usage:        1 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    3
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_Mcu_Initialization
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           
  4904                           ;psect for function _WDT_Set
  4905  0E2C                     _WDT_Set:	
  4906                           
  4907                           ;MCU_B1.c: 1091: PSA = 1;
  4908                           
  4909                           ;incstack = 0
  4910                           ; Regs used in _WDT_Set: [wreg]
  4911  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  4912  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  4913  0E2E  1581               	bsf	1,3	;volatile
  4914                           
  4915                           ;MCU_B1.c: 1092: PS0 = 1;
  4916  0E2F  1401               	bsf	1,0	;volatile
  4917                           
  4918                           ;MCU_B1.c: 1093: PS1 = 1;
  4919  0E30  1481               	bsf	1,1	;volatile
  4920                           
  4921                           ;MCU_B1.c: 1094: PS2 = 1;
  4922  0E31  1501               	bsf	1,2	;volatile
  4923                           
  4924                           ;MCU_B1.c: 1098: WDT.Enable = 1;
  4925  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0E34  143E               	bsf	_WDT,0
  4928                           
  4929                           ;MCU_B1.c: 1099: WDT.Timer = 10;
  4930  0E35  300A               	movlw	10
  4931  0E36  00D9               	movwf	??_WDT_Set
  4932  0E37  0859               	movf	??_WDT_Set,w
  4933  0E38  00BF               	movwf	_WDT+1
  4934  0E39  0008               	return
  4935  0E3A                     __end_of_WDT_Set:	
  4936                           
  4937                           	psect	text22
  4938  0E1E                     __ptext22:	
  4939 ;; *************** function _TMR1_Set *****************
  4940 ;; Defined at:
  4941 ;;		line 226 in file "../src/MCU_B1.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;		None               void
  4948 ;; Registers used:
  4949 ;;		wreg
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4955 ;;      Params:         0       0       0       0
  4956 ;;      Locals:         0       0       0       0
  4957 ;;      Temps:          0       0       0       0
  4958 ;;      Totals:         0       0       0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    3
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_Mcu_Initialization
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _TMR1_Set
  4971  0E1E                     _TMR1_Set:	
  4972                           
  4973                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  4974                           
  4975                           ;incstack = 0
  4976                           ; Regs used in _TMR1_Set: [wreg]
  4977  0E1E  3041               	movlw	65
  4978  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  4979  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  4980  0E21  0090               	movwf	16	;volatile
  4981                           
  4982                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  4983  0E22  30FA               	movlw	250
  4984  0E23  008F               	movwf	15	;volatile
  4985                           
  4986                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  4987  0E24  3038               	movlw	56
  4988  0E25  008E               	movwf	14	;volatile
  4989                           
  4990                           ;MCU_B1.c: 230: TMR1IE = 1;
  4991  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  4992  0E27  1303               	bcf	3,6	;RP1=0, select bank1
  4993  0E28  140C               	bsf	12,0	;volatile
  4994                           
  4995                           ;MCU_B1.c: 231: PEIE = 1;
  4996  0E29  170B               	bsf	11,6	;volatile
  4997                           
  4998                           ;MCU_B1.c: 232: GIE = 1;
  4999  0E2A  178B               	bsf	11,7	;volatile
  5000  0E2B  0008               	return
  5001  0E2C                     __end_of_TMR1_Set:	
  5002                           
  5003                           	psect	text23
  5004  0F33                     __ptext23:	
  5005 ;; *************** function _IO_Set *****************
  5006 ;; Defined at:
  5007 ;;		line 60 in file "../src/MCU_B1.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;		None               void
  5014 ;; Registers used:
  5015 ;;		wreg, status,2
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5021 ;;      Params:         0       0       0       0
  5022 ;;      Locals:         0       0       0       0
  5023 ;;      Temps:          0       0       0       0
  5024 ;;      Totals:         0       0       0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    3
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_Mcu_Initialization
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function _IO_Set
  5037  0F33                     _IO_Set:	
  5038                           
  5039                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _IO_Set: [wreg+status,2]
  5043  0F33  30AF               	movlw	175
  5044  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  5045  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  5046  0F36  0085               	movwf	5	;volatile
  5047                           
  5048                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5049  0F37  3001               	movlw	1
  5050  0F38  0086               	movwf	6	;volatile
  5051                           
  5052                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5053  0F39  0187               	clrf	7	;volatile
  5054                           
  5055                           ;MCU_B1.c: 65: ANSELA = 0b10100111;;
  5056  0F3A  30A7               	movlw	167
  5057  0F3B  1683               	bsf	3,5	;RP0=1, select bank3
  5058  0F3C  1703               	bsf	3,6	;RP1=1, select bank3
  5059  0F3D  0085               	movwf	5	;volatile
  5060                           
  5061                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5062  0F3E  3001               	movlw	1
  5063  0F3F  0086               	movwf	6	;volatile
  5064                           
  5065                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5066  0F40  30AF               	movlw	175
  5067  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  5068  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  5069  0F43  0085               	movwf	5	;volatile
  5070                           
  5071                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5072  0F44  3001               	movlw	1
  5073  0F45  0086               	movwf	6	;volatile
  5074                           
  5075                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5076  0F46  0187               	clrf	7	;volatile
  5077                           
  5078                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5079  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  5080  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  5081  0F49  0195               	clrf	21	;volatile
  5082  0F4A  0008               	return
  5083  0F4B                     __end_of_IO_Set:	
  5084                           
  5085                           	psect	text24
  5086  0D96                     __ptext24:	
  5087 ;; *************** function _Fosc_Set *****************
  5088 ;; Defined at:
  5089 ;;		line 56 in file "../src/MCU_B1.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;		None               void
  5096 ;; Registers used:
  5097 ;;		wreg
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5103 ;;      Params:         0       0       0       0
  5104 ;;      Locals:         0       0       0       0
  5105 ;;      Temps:          0       0       0       0
  5106 ;;      Totals:         0       0       0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    3
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_Mcu_Initialization
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           
  5118                           ;psect for function _Fosc_Set
  5119  0D96                     _Fosc_Set:	
  5120                           
  5121                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5122                           
  5123                           ;incstack = 0
  5124                           ; Regs used in _Fosc_Set: [wreg]
  5125  0D96  303C               	movlw	60
  5126  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  5127  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  5128  0D99  0090               	movwf	16	;volatile
  5129  0D9A  0008               	return
  5130  0D9B                     __end_of_Fosc_Set:	
  5131                           
  5132                           	psect	text25
  5133  0DAF                     __ptext25:	
  5134 ;; *************** function _ADC_Set *****************
  5135 ;; Defined at:
  5136 ;;		line 425 in file "../src/MCU_B1.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;		None               void
  5143 ;; Registers used:
  5144 ;;		wreg
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5150 ;;      Params:         0       0       0       0
  5151 ;;      Locals:         0       0       0       0
  5152 ;;      Temps:          0       0       0       0
  5153 ;;      Totals:         0       0       0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    3
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_Mcu_Initialization
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _ADC_Set
  5166  0DAF                     _ADC_Set:	
  5167                           
  5168                           ;MCU_B1.c: 426: ADCON1 = 0x73;
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _ADC_Set: [wreg]
  5172  0DAF  3073               	movlw	115
  5173  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0DB2  009F               	movwf	31	;volatile
  5176                           
  5177                           ;MCU_B1.c: 427: FVRCON = 0xc1;
  5178  0DB3  30C1               	movlw	193
  5179  0DB4  009D               	movwf	29	;volatile
  5180  0DB5  0008               	return
  5181  0DB6                     __end_of_ADC_Set:	
  5182                           
  5183                           	psect	text26
  5184  0D84                     __ptext26:	
  5185 ;; *************** function _LED_Main *****************
  5186 ;; Defined at:
  5187 ;;		line 47 in file "../src/LED_B1.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;		None
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;		None               void
  5194 ;; Registers used:
  5195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5201 ;;      Params:         0       0       0       0
  5202 ;;      Locals:         0       0       0       0
  5203 ;;      Temps:          0       0       0       0
  5204 ;;      Totals:         0       0       0       0
  5205 ;;Total ram usage:        0 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    6
  5208 ;; This function calls:
  5209 ;;		_setPIRLED_Main
  5210 ;; This function is called by:
  5211 ;;		_main
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           
  5216                           ;psect for function _LED_Main
  5217  0D84                     _LED_Main:	
  5218                           
  5219                           ;LED_B1.c: 50: setPIRLED_Main();
  5220                           
  5221                           ;incstack = 0
  5222                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5223  0D84  118A  2440         	fcall	_setPIRLED_Main
  5224  0D86  0008               	return
  5225  0D87                     __end_of_LED_Main:	
  5226                           
  5227                           	psect	text27
  5228  0440                     __ptext27:	
  5229 ;; *************** function _setPIRLED_Main *****************
  5230 ;; Defined at:
  5231 ;;		line 253 in file "../src/LED_B1.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  count           1    5[BANK0 ] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;		None               void
  5238 ;; Registers used:
  5239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5245 ;;      Params:         0       0       0       0
  5246 ;;      Locals:         0       1       0       0
  5247 ;;      Temps:          0       1       0       0
  5248 ;;      Totals:         0       2       0       0
  5249 ;;Total ram usage:        2 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    5
  5252 ;; This function calls:
  5253 ;;		_setLED
  5254 ;; This function is called by:
  5255 ;;		_LED_Main
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           
  5260                           ;psect for function _setPIRLED_Main
  5261  0440                     _setPIRLED_Main:	
  5262                           
  5263                           ;LED_B1.c: 254: char count;
  5264                           ;LED_B1.c: 255: if (PIRLED.GO == 1) {
  5265                           
  5266                           ;incstack = 0
  5267                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5268  0440  1283               	bcf	3,5	;RP0=0, select bank0
  5269  0441  1303               	bcf	3,6	;RP1=0, select bank0
  5270  0442  1C37               	btfss	_PIRLED,0
  5271  0443  0008               	return
  5272                           
  5273                           ;LED_B1.c: 256: PIRLED.Time++;
  5274  0444  3001               	movlw	1
  5275  0445  07B9               	addwf	_PIRLED+2,f
  5276  0446  1803               	skipnc
  5277  0447  0ABA               	incf	_PIRLED+3,f
  5278  0448  3000               	movlw	0
  5279  0449  07BA               	addwf	_PIRLED+3,f
  5280                           
  5281                           ;LED_B1.c: 257: if (PIRLED.Time >= 500 / 20) {
  5282  044A  3000               	movlw	0
  5283  044B  023A               	subwf	_PIRLED+3,w
  5284  044C  3019               	movlw	25
  5285  044D  1903               	skipnz
  5286  044E  0239               	subwf	_PIRLED+2,w
  5287  044F  1C03               	skipc
  5288  0450  0008               	return
  5289                           
  5290                           ;LED_B1.c: 258: PIRLED.Time = 0;
  5291  0451  01B9               	clrf	_PIRLED+2
  5292  0452  01BA               	clrf	_PIRLED+3
  5293                           
  5294                           ;LED_B1.c: 259: setLED(1, 0);
  5295  0453  01DB               	clrf	setLED@command
  5296  0454  3001               	movlw	1
  5297  0455  118A  24B1  118A   	fcall	_setLED
  5298                           
  5299                           ;LED_B1.c: 260: setLED(2, 0);
  5300  0458  1283               	bcf	3,5	;RP0=0, select bank0
  5301  0459  1303               	bcf	3,6	;RP1=0, select bank0
  5302  045A  01DB               	clrf	setLED@command
  5303  045B  3002               	movlw	2
  5304  045C  118A  24B1  118A   	fcall	_setLED
  5305                           
  5306                           ;LED_B1.c: 261: if (PIRLED.GO1 == 1) {
  5307  045F  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0460  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0461  1CB7               	btfss	_PIRLED,1
  5310  0462  2C67               	goto	l4371
  5311                           
  5312                           ;LED_B1.c: 262: count = 4;
  5313  0463  3004               	movlw	4
  5314  0464  00DD               	movwf	??_setPIRLED_Main
  5315  0465  085D               	movf	??_setPIRLED_Main,w
  5316  0466  00DE               	movwf	setPIRLED_Main@count
  5317  0467                     l4371:	
  5318                           
  5319                           ;LED_B1.c: 263: }
  5320                           ;LED_B1.c: 264: if (PIRLED.GO2 == 1) {
  5321  0467  1D37               	btfss	_PIRLED,2
  5322  0468  2C6D               	goto	l4375
  5323                           
  5324                           ;LED_B1.c: 265: count = 6;
  5325  0469  3006               	movlw	6
  5326  046A  00DD               	movwf	??_setPIRLED_Main
  5327  046B  085D               	movf	??_setPIRLED_Main,w
  5328  046C  00DE               	movwf	setPIRLED_Main@count
  5329  046D                     l4375:	
  5330                           
  5331                           ;LED_B1.c: 266: }
  5332                           ;LED_B1.c: 267: if (PIRLED.GO3 == 1) {
  5333  046D  1DB7               	btfss	_PIRLED,3
  5334  046E  2C73               	goto	l4379
  5335                           
  5336                           ;LED_B1.c: 268: count = 8;
  5337  046F  3008               	movlw	8
  5338  0470  00DD               	movwf	??_setPIRLED_Main
  5339  0471  085D               	movf	??_setPIRLED_Main,w
  5340  0472  00DE               	movwf	setPIRLED_Main@count
  5341  0473                     l4379:	
  5342                           
  5343                           ;LED_B1.c: 269: }
  5344                           ;LED_B1.c: 270: PIRLED.Count++;
  5345  0473  3001               	movlw	1
  5346  0474  00DD               	movwf	??_setPIRLED_Main
  5347  0475  085D               	movf	??_setPIRLED_Main,w
  5348  0476  07B8               	addwf	_PIRLED+1,f
  5349                           
  5350                           ;LED_B1.c: 271: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5351  0477  0838               	movf	_PIRLED+1,w
  5352  0478  3A01               	xorlw	1
  5353  0479  1903               	skipnz
  5354  047A  2C7F               	goto	l4385
  5355  047B  0838               	movf	_PIRLED+1,w
  5356  047C  3A02               	xorlw	2
  5357  047D  1D03               	skipz
  5358  047E  2C93               	goto	l4389
  5359  047F                     l4385:	
  5360                           
  5361                           ;LED_B1.c: 272: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5362  047F  1003               	clrc
  5363  0480  1E37               	btfss	_PIRLED,4
  5364  0481  1403               	setc
  5365  0482  1C03               	btfss	3,0
  5366  0483  2C88               	goto	u5070
  5367  0484  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0485  1303               	bcf	3,6	;RP1=0, select bank0
  5369  0486  1637               	bsf	_PIRLED,4
  5370  0487  2C8B               	goto	l4387
  5371  0488                     u5070:	
  5372  0488  1283               	bcf	3,5	;RP0=0, select bank0
  5373  0489  1303               	bcf	3,6	;RP1=0, select bank0
  5374  048A  1237               	bcf	_PIRLED,4
  5375  048B                     l4387:	
  5376                           
  5377                           ;LED_B1.c: 273: setLED(2, PIRLED.status);
  5378  048B  3000               	movlw	0
  5379  048C  1A37               	btfsc	_PIRLED,4
  5380  048D  3001               	movlw	1
  5381  048E  00DB               	movwf	setLED@command
  5382  048F  3002               	movlw	2
  5383  0490  118A  24B1         	fcall	_setLED
  5384                           
  5385                           ;LED_B1.c: 274: } else {
  5386  0492  0008               	return
  5387  0493                     l4389:	
  5388                           
  5389                           ;LED_B1.c: 275: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5390  0493  1003               	clrc
  5391  0494  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0495  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0496  1E37               	btfss	_PIRLED,4
  5394  0497  1403               	setc
  5395  0498  1C03               	btfss	3,0
  5396  0499  2C9E               	goto	u5090
  5397  049A  1283               	bcf	3,5	;RP0=0, select bank0
  5398  049B  1303               	bcf	3,6	;RP1=0, select bank0
  5399  049C  1637               	bsf	_PIRLED,4
  5400  049D  2CA1               	goto	l4391
  5401  049E                     u5090:	
  5402  049E  1283               	bcf	3,5	;RP0=0, select bank0
  5403  049F  1303               	bcf	3,6	;RP1=0, select bank0
  5404  04A0  1237               	bcf	_PIRLED,4
  5405  04A1                     l4391:	
  5406                           
  5407                           ;LED_B1.c: 276: setLED(1, PIRLED.status);
  5408  04A1  3000               	movlw	0
  5409  04A2  1A37               	btfsc	_PIRLED,4
  5410  04A3  3001               	movlw	1
  5411  04A4  00DB               	movwf	setLED@command
  5412  04A5  3001               	movlw	1
  5413  04A6  118A  24B1  118A   	fcall	_setLED
  5414                           
  5415                           ;LED_B1.c: 277: if (PIRLED.Count == count) {
  5416  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  5417  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  5418  04AB  0838               	movf	_PIRLED+1,w
  5419  04AC  065E               	xorwf	setPIRLED_Main@count,w
  5420  04AD  1D03               	skipz
  5421  04AE  0008               	return
  5422                           
  5423                           ;LED_B1.c: 278: PIRLED.Count = 0;
  5424  04AF  01B8               	clrf	_PIRLED+1
  5425  04B0  0008               	return
  5426  04B1                     __end_of_setPIRLED_Main:	
  5427                           
  5428                           	psect	text28
  5429  0DEA                     __ptext28:	
  5430 ;; *************** function _LED_Initialization *****************
  5431 ;; Defined at:
  5432 ;;		line 31 in file "../src/LED_B1.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;		None
  5437 ;; Return value:  Size  Location     Type
  5438 ;;		None               void
  5439 ;; Registers used:
  5440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5446 ;;      Params:         0       0       0       0
  5447 ;;      Locals:         0       0       0       0
  5448 ;;      Temps:          0       0       0       0
  5449 ;;      Totals:         0       0       0       0
  5450 ;;Total ram usage:        0 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    6
  5453 ;; This function calls:
  5454 ;;		_setLED_Initialization
  5455 ;; This function is called by:
  5456 ;;		_main
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           
  5461                           ;psect for function _LED_Initialization
  5462  0DEA                     _LED_Initialization:	
  5463                           
  5464                           ;LED_B1.c: 33: setLED_Initialization(1);
  5465                           
  5466                           ;incstack = 0
  5467                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5468  0DEA  3001               	movlw	1
  5469  0DEB  158A  268C  158A   	fcall	_setLED_Initialization
  5470                           
  5471                           ;LED_B1.c: 36: setLED_Initialization(2);
  5472  0DEE  3002               	movlw	2
  5473  0DEF  158A  268C  158A   	fcall	_setLED_Initialization
  5474                           
  5475                           ;LED_B1.c: 42: setLED_Initialization(99);
  5476  0DF2  3063               	movlw	99
  5477  0DF3  158A  268C         	fcall	_setLED_Initialization
  5478  0DF5  0008               	return
  5479  0DF6                     __end_of_LED_Initialization:	
  5480                           
  5481                           	psect	text29
  5482  0E8C                     __ptext29:	
  5483 ;; *************** function _setLED_Initialization *****************
  5484 ;; Defined at:
  5485 ;;		line 69 in file "../src/LED_B1.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  led             1    wreg     unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  led             1    4[BANK0 ] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;		None               void
  5492 ;; Registers used:
  5493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5499 ;;      Params:         0       0       0       0
  5500 ;;      Locals:         0       1       0       0
  5501 ;;      Temps:          0       0       0       0
  5502 ;;      Totals:         0       1       0       0
  5503 ;;Total ram usage:        1 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    5
  5506 ;; This function calls:
  5507 ;;		_LedPointSelect
  5508 ;;		_setLED
  5509 ;; This function is called by:
  5510 ;;		_LED_Initialization
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _setLED_Initialization
  5516  0E8C                     _setLED_Initialization:	
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5520                           ;setLED_Initialization@led stored from wreg
  5521  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  5522  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  5523  0E8E  00DD               	movwf	setLED_Initialization@led
  5524                           
  5525                           ;LED_B1.c: 70: LedPointSelect(led);
  5526  0E8F  085D               	movf	setLED_Initialization@led,w
  5527  0E90  158A  277F  158A   	fcall	_LedPointSelect
  5528                           
  5529                           ;LED_B1.c: 71: LED->Enable = 1;
  5530  0E93  0873               	movf	_LED,w
  5531  0E94  0084               	movwf	4
  5532  0E95  1383               	bcf	3,7	;select IRP bank0
  5533  0E96  1400               	bsf	0,0
  5534                           
  5535                           ;LED_B1.c: 72: setLED(led, 0);
  5536  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5537  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5538  0E99  01DB               	clrf	setLED@command
  5539  0E9A  085D               	movf	setLED_Initialization@led,w
  5540  0E9B  118A  24B1         	fcall	_setLED
  5541  0E9D  0008               	return
  5542  0E9E                     __end_of_setLED_Initialization:	
  5543                           
  5544                           	psect	text30
  5545  0683                     __ptext30:	
  5546 ;; *************** function _Exception_Main *****************
  5547 ;; Defined at:
  5548 ;;		line 505 in file "../src/Main_B1.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;		None
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  error           1    8[BANK0 ] unsigned char 
  5553 ;;  count           1    7[BANK0 ] unsigned char 
  5554 ;;  lights          1    6[BANK0 ] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;		None               void
  5557 ;; Registers used:
  5558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5564 ;;      Params:         0       0       0       0
  5565 ;;      Locals:         0       3       0       0
  5566 ;;      Temps:          0       1       0       0
  5567 ;;      Totals:         0       4       0       0
  5568 ;;Total ram usage:        4 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; Hardware stack levels required when called:    5
  5571 ;; This function calls:
  5572 ;;		_getDimmerLights_Status
  5573 ;;		_getMain_All_Error_Status
  5574 ;;		_setLED
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _Exception_Main
  5582  0683                     _Exception_Main:	
  5583                           
  5584                           ;Main_B1.c: 506: char error = getMain_All_Error_Status(0);
  5585                           
  5586                           ;incstack = 0
  5587                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5588  0683  3000               	movlw	0
  5589  0684  158A  274B  118A   	fcall	_getMain_All_Error_Status
  5590  0687  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0688  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0689  00DE               	movwf	??_Exception_Main
  5593  068A  085E               	movf	??_Exception_Main,w
  5594  068B  00E1               	movwf	Exception_Main@error
  5595                           
  5596                           ;Main_B1.c: 507: char lights = 0, count = 1;
  5597  068C  01DF               	clrf	Exception_Main@lights
  5598  068D  01E0               	clrf	Exception_Main@count
  5599  068E  0AE0               	incf	Exception_Main@count,f
  5600                           
  5601                           ;Main_B1.c: 508: if (myMain.Error_Run == 1) {
  5602  068F  1DAA               	btfss	_myMain+3,3
  5603  0690  2E9D               	goto	l4851
  5604                           
  5605                           ;Main_B1.c: 509: if (error == 0) {
  5606  0691  08E1               	movf	Exception_Main@error,f
  5607  0692  1D03               	skipz
  5608  0693  0008               	return
  5609                           
  5610                           ;Main_B1.c: 510: myMain.Error_Run = 0;
  5611  0694  11AA               	bcf	_myMain+3,3
  5612                           
  5613                           ;Main_B1.c: 516: setLED(error, 110);
  5614  0695  306E               	movlw	110
  5615  0696  00DE               	movwf	??_Exception_Main
  5616  0697  085E               	movf	??_Exception_Main,w
  5617  0698  00DB               	movwf	setLED@command
  5618  0699  0861               	movf	Exception_Main@error,w
  5619  069A  118A  24B1         	fcall	_setLED
  5620                           
  5621                           ;Main_B1.c: 521: }
  5622                           ;Main_B1.c: 522: } else {
  5623  069C  0008               	return
  5624  069D                     l4851:	
  5625                           
  5626                           ;Main_B1.c: 523: if (error != 0) {
  5627  069D  1283               	bcf	3,5	;RP0=0, select bank0
  5628  069E  1303               	bcf	3,6	;RP1=0, select bank0
  5629  069F  0861               	movf	Exception_Main@error,w
  5630  06A0  1903               	btfsc	3,2
  5631  06A1  0008               	return
  5632                           
  5633                           ;Main_B1.c: 524: myMain.Error_Run = 1;
  5634  06A2  15AA               	bsf	_myMain+3,3
  5635                           
  5636                           ;Main_B1.c: 528: setLED(error, 111);
  5637  06A3  306F               	movlw	111
  5638  06A4  00DE               	movwf	??_Exception_Main
  5639  06A5  085E               	movf	??_Exception_Main,w
  5640  06A6  00DB               	movwf	setLED@command
  5641  06A7  0861               	movf	Exception_Main@error,w
  5642  06A8  118A  24B1  118A   	fcall	_setLED
  5643                           
  5644                           ;Main_B1.c: 532: switch (error) {
  5645  06AB  2EBA               	goto	l4863
  5646  06AC                     l4857:	
  5647                           ;Main_B1.c: 533: case 2:
  5648                           
  5649                           
  5650                           ;Main_B1.c: 536: if (getDimmerLights_Status(1) == 1) {
  5651  06AC  3001               	movlw	1
  5652  06AD  158A  2659  118A   	fcall	_getDimmerLights_Status
  5653  06B0  3A01               	xorlw	1
  5654  06B1  1903               	btfsc	3,2
  5655  06B2  2EB6               	goto	l4859
  5656  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  5657  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  5658  06B5  0008               	return
  5659  06B6                     l4859:	
  5660                           
  5661                           ;Main_B1.c: 537: Dimmer.PIR_Close_Status = 1;
  5662  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  5663  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  5664  06B8  142E               	bsf	_Dimmer+1,0
  5665                           
  5666                           ;Main_B1.c: 580: }
  5667                           
  5668                           ;Main_B1.c: 579: break;
  5669                           
  5670                           ;Main_B1.c: 555: case 3:
  5671                           
  5672                           ;Main_B1.c: 538: }
  5673                           ;Main_B1.c: 554: break;
  5674  06B9  0008               	return
  5675  06BA                     l4863:	
  5676  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  5677  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  5678  06BC  0861               	movf	Exception_Main@error,w
  5679                           
  5680                           ; Switch size 1, requested type "space"
  5681                           ; Number of cases is 2, Range of values is 2 to 3
  5682                           ; switch strategies available:
  5683                           ; Name         Instructions Cycles
  5684                           ; simple_byte            7     4 (average)
  5685                           ; direct_byte           14    10 (fixed)
  5686                           ; jumptable            263     9 (fixed)
  5687                           ;	Chosen strategy is simple_byte
  5688  06BD  3A02               	xorlw	2	; case 2
  5689  06BE  1903               	skipnz
  5690  06BF  2EAC               	goto	l4857
  5691  06C0  3A01               	xorlw	1	; case 3
  5692  06C1  1903               	skipnz
  5693  06C2  2EC5               	goto	l828
  5694  06C3  2EC5               	goto	l828
  5695  06C4  0008               	return
  5696  06C5                     l828:	
  5697  06C5  0008               	return
  5698  06C6                     __end_of_Exception_Main:	
  5699                           
  5700                           	psect	text31
  5701  04B1                     __ptext31:	
  5702 ;; *************** function _setLED *****************
  5703 ;; Defined at:
  5704 ;;		line 76 in file "../src/LED_B1.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  led             1    wreg     unsigned char 
  5707 ;;  command         1    2[BANK0 ] unsigned char 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  led             1    3[BANK0 ] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;		None               void
  5712 ;; Registers used:
  5713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5719 ;;      Params:         0       1       0       0
  5720 ;;      Locals:         0       1       0       0
  5721 ;;      Temps:          0       0       0       0
  5722 ;;      Totals:         0       2       0       0
  5723 ;;Total ram usage:        2 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    4
  5726 ;; This function calls:
  5727 ;;		_LedPointSelect
  5728 ;; This function is called by:
  5729 ;;		_setLED_Initialization
  5730 ;;		_setPIRLED_Main
  5731 ;;		_Exception_Main
  5732 ;;		_PIR_Main
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function _setLED
  5738  04B1                     _setLED:	
  5739                           
  5740                           ;incstack = 0
  5741                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5742                           ;setLED@led stored from wreg
  5743  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  5744  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  5745  04B3  00DC               	movwf	setLED@led
  5746                           
  5747                           ;LED_B1.c: 77: LedPointSelect(led);
  5748  04B4  085C               	movf	setLED@led,w
  5749  04B5  158A  277F  118A   	fcall	_LedPointSelect
  5750                           
  5751                           ;LED_B1.c: 78: if (command == 0) {
  5752  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  5753  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  5754  04BA  08DB               	movf	setLED@command,f
  5755  04BB  1D03               	skipz
  5756  04BC  2CCA               	goto	l4123
  5757                           
  5758                           ;LED_B1.c: 80: if (led == 1) {
  5759  04BD  085C               	movf	setLED@led,w
  5760  04BE  3A01               	xorlw	1
  5761  04BF  1D03               	skipz
  5762  04C0  2CC2               	goto	l4115
  5763                           
  5764                           ;LED_B1.c: 84: RB4 = 1;
  5765  04C1  1606               	bsf	6,4	;volatile
  5766  04C2                     l4115:	
  5767                           
  5768                           ;LED_B1.c: 86: }
  5769                           ;LED_B1.c: 89: if (led == 2) {
  5770  04C2  085C               	movf	setLED@led,w
  5771  04C3  3A02               	xorlw	2
  5772  04C4  1903               	btfsc	3,2
  5773                           
  5774                           ;LED_B1.c: 93: RB5 = 1;
  5775  04C5  1686               	bsf	6,5	;volatile
  5776                           
  5777                           ;LED_B1.c: 95: }
  5778                           ;LED_B1.c: 107: if (led == 99) {
  5779  04C6  085C               	movf	setLED@led,w
  5780  04C7  3A63               	xorlw	99
  5781  04C8  1903               	btfsc	3,2
  5782                           
  5783                           ;LED_B1.c: 111: RB3 = 1;
  5784  04C9  1586               	bsf	6,3	;volatile
  5785  04CA                     l4123:	
  5786                           
  5787                           ;LED_B1.c: 113: }
  5788                           ;LED_B1.c: 115: }
  5789                           ;LED_B1.c: 116: if (command == 1) {
  5790  04CA  085B               	movf	setLED@command,w
  5791  04CB  3A01               	xorlw	1
  5792  04CC  1D03               	skipz
  5793  04CD  2CDB               	goto	l4137
  5794                           
  5795                           ;LED_B1.c: 118: if (led == 1) {
  5796  04CE  085C               	movf	setLED@led,w
  5797  04CF  3A01               	xorlw	1
  5798  04D0  1D03               	skipz
  5799  04D1  2CD3               	goto	l4129
  5800                           
  5801                           ;LED_B1.c: 122: RB4 = 0;
  5802  04D2  1206               	bcf	6,4	;volatile
  5803  04D3                     l4129:	
  5804                           
  5805                           ;LED_B1.c: 124: }
  5806                           ;LED_B1.c: 127: if (led == 2) {
  5807  04D3  085C               	movf	setLED@led,w
  5808  04D4  3A02               	xorlw	2
  5809  04D5  1903               	btfsc	3,2
  5810                           
  5811                           ;LED_B1.c: 131: RB5 = 0;
  5812  04D6  1286               	bcf	6,5	;volatile
  5813                           
  5814                           ;LED_B1.c: 133: }
  5815                           ;LED_B1.c: 145: if (led == 99) {
  5816  04D7  085C               	movf	setLED@led,w
  5817  04D8  3A63               	xorlw	99
  5818  04D9  1903               	btfsc	3,2
  5819                           
  5820                           ;LED_B1.c: 149: RB3 = 0;
  5821  04DA  1186               	bcf	6,3	;volatile
  5822  04DB                     l4137:	
  5823                           
  5824                           ;LED_B1.c: 151: }
  5825                           ;LED_B1.c: 153: }
  5826                           ;LED_B1.c: 154: if (command == 10) {
  5827  04DB  085B               	movf	setLED@command,w
  5828  04DC  3A0A               	xorlw	10
  5829  04DD  1D03               	skipz
  5830  04DE  2CF6               	goto	l4155
  5831                           
  5832                           ;LED_B1.c: 155: LED->GO = 0;
  5833  04DF  0873               	movf	_LED,w
  5834  04E0  0084               	movwf	4
  5835  04E1  1383               	bcf	3,7	;select IRP bank0
  5836  04E2  1080               	bcf	0,1
  5837                           
  5838                           ;LED_B1.c: 156: LED->Time = 0;
  5839  04E3  0A73               	incf	_LED,w
  5840  04E4  0084               	movwf	4
  5841  04E5  0180               	clrf	0
  5842  04E6  0A84               	incf	4,f
  5843  04E7  0180               	clrf	0
  5844                           
  5845                           ;LED_B1.c: 158: if (led == 1) {
  5846  04E8  085C               	movf	setLED@led,w
  5847  04E9  3A01               	xorlw	1
  5848  04EA  1D03               	skipz
  5849  04EB  2CEE               	goto	l4147
  5850                           
  5851                           ;LED_B1.c: 162: RB4 = 1;
  5852  04EC  1606               	bsf	6,4	;volatile
  5853                           
  5854                           ;LED_B1.c: 164: }
  5855  04ED  2CF2               	goto	l4151
  5856  04EE                     l4147:	
  5857                           
  5858                           ;LED_B1.c: 167: else if (led == 2) {
  5859  04EE  085C               	movf	setLED@led,w
  5860  04EF  3A02               	xorlw	2
  5861  04F0  1903               	btfsc	3,2
  5862                           
  5863                           ;LED_B1.c: 171: RB5 = 1;
  5864  04F1  1686               	bsf	6,5	;volatile
  5865  04F2                     l4151:	
  5866                           
  5867                           ;LED_B1.c: 173: }
  5868                           ;LED_B1.c: 185: if (led == 99) {
  5869  04F2  085C               	movf	setLED@led,w
  5870  04F3  3A63               	xorlw	99
  5871  04F4  1903               	btfsc	3,2
  5872                           
  5873                           ;LED_B1.c: 189: RB3 = 1;
  5874  04F5  1586               	bsf	6,3	;volatile
  5875  04F6                     l4155:	
  5876                           
  5877                           ;LED_B1.c: 191: }
  5878                           ;LED_B1.c: 193: }
  5879                           ;LED_B1.c: 194: if (command == 11) {
  5880  04F6  085B               	movf	setLED@command,w
  5881  04F7  3A0B               	xorlw	11
  5882  04F8  1D03               	skipz
  5883  04F9  2CFE               	goto	l4159
  5884                           
  5885                           ;LED_B1.c: 195: LED->GO = 1;
  5886  04FA  0873               	movf	_LED,w
  5887  04FB  0084               	movwf	4
  5888  04FC  1383               	bcf	3,7	;select IRP bank0
  5889  04FD  1480               	bsf	0,1
  5890  04FE                     l4159:	
  5891                           
  5892                           ;LED_B1.c: 196: }
  5893                           ;LED_B1.c: 198: if (command == 111) {
  5894  04FE  085B               	movf	setLED@command,w
  5895  04FF  3A6F               	xorlw	111
  5896  0500  1D03               	skipz
  5897  0501  2D1C               	goto	l4185
  5898                           
  5899                           ;LED_B1.c: 199: PIRLED.Count = 0;
  5900  0502  01B8               	clrf	_PIRLED+1
  5901                           
  5902                           ;LED_B1.c: 200: PIRLED.Time = 0;
  5903  0503  01B9               	clrf	_PIRLED+2
  5904  0504  01BA               	clrf	_PIRLED+3
  5905                           
  5906                           ;LED_B1.c: 201: PIRLED.status = 0;
  5907  0505  1237               	bcf	_PIRLED,4
  5908                           
  5909                           ;LED_B1.c: 202: PIRLED.GO = 1;
  5910  0506  1437               	bsf	_PIRLED,0
  5911                           
  5912                           ;LED_B1.c: 203: PIRLED.GO1 = 0;
  5913  0507  10B7               	bcf	_PIRLED,1
  5914                           
  5915                           ;LED_B1.c: 204: PIRLED.GO2 = 0;
  5916  0508  1137               	bcf	_PIRLED,2
  5917                           
  5918                           ;LED_B1.c: 205: PIRLED.GO3 = 0;
  5919  0509  11B7               	bcf	_PIRLED,3
  5920                           
  5921                           ;LED_B1.c: 206: if (led == 1) {
  5922  050A  085C               	movf	setLED@led,w
  5923  050B  3A01               	xorlw	1
  5924  050C  1D03               	skipz
  5925  050D  2D10               	goto	l4177
  5926                           
  5927                           ;LED_B1.c: 207: PIRLED.GO1 = 1;
  5928  050E  14B7               	bsf	_PIRLED,1
  5929                           
  5930                           ;LED_B1.c: 208: } else if (led == 2) {
  5931  050F  0008               	return
  5932  0510                     l4177:	
  5933  0510  085C               	movf	setLED@led,w
  5934  0511  3A02               	xorlw	2
  5935  0512  1D03               	skipz
  5936  0513  2D16               	goto	l4181
  5937                           
  5938                           ;LED_B1.c: 209: PIRLED.GO2 = 1;
  5939  0514  1537               	bsf	_PIRLED,2
  5940                           
  5941                           ;LED_B1.c: 210: } else if (led == 3) {
  5942  0515  0008               	return
  5943  0516                     l4181:	
  5944  0516  085C               	movf	setLED@led,w
  5945  0517  3A03               	xorlw	3
  5946  0518  1D03               	skipz
  5947  0519  0008               	return
  5948                           
  5949                           ;LED_B1.c: 211: PIRLED.GO3 = 1;
  5950  051A  15B7               	bsf	_PIRLED,3
  5951                           
  5952                           ;LED_B1.c: 212: }
  5953                           ;LED_B1.c: 213: } else if (command == 110) {
  5954  051B  0008               	return
  5955  051C                     l4185:	
  5956  051C  085B               	movf	setLED@command,w
  5957  051D  3A6E               	xorlw	110
  5958  051E  1D03               	skipz
  5959  051F  0008               	return
  5960                           
  5961                           ;LED_B1.c: 214: PIRLED.GO = 0;
  5962  0520  1037               	bcf	_PIRLED,0
  5963  0521  0008               	return
  5964  0522                     __end_of_setLED:	
  5965                           
  5966                           	psect	text32
  5967  0F7F                     __ptext32:	
  5968 ;; *************** function _LedPointSelect *****************
  5969 ;; Defined at:
  5970 ;;		line 7 in file "../src/LED_B1.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  led             1    wreg     unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  led             1    1[BANK0 ] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5984 ;;      Params:         0       0       0       0
  5985 ;;      Locals:         0       1       0       0
  5986 ;;      Temps:          0       1       0       0
  5987 ;;      Totals:         0       2       0       0
  5988 ;;Total ram usage:        2 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    3
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_setLED_Initialization
  5995 ;;		_setLED
  5996 ;;		_setLED_Main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function _LedPointSelect
  6002  0F7F                     _LedPointSelect:	
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in _LedPointSelect: [wreg]
  6006                           ;LedPointSelect@led stored from wreg
  6007  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0F81  00DA               	movwf	LedPointSelect@led
  6010                           
  6011                           ;LED_B1.c: 9: if (led == 1) {
  6012  0F82  085A               	movf	LedPointSelect@led,w
  6013  0F83  3A01               	xorlw	1
  6014  0F84  1D03               	skipz
  6015  0F85  2F8A               	goto	l480
  6016                           
  6017                           ;LED_B1.c: 10: LED = &VarLED1;
  6018  0F86  3051               	movlw	_VarLED1& (0+255)
  6019  0F87  00D9               	movwf	??_LedPointSelect
  6020  0F88  0859               	movf	??_LedPointSelect,w
  6021  0F89  00F3               	movwf	_LED
  6022  0F8A                     l480:	
  6023                           
  6024                           ;LED_B1.c: 11: }
  6025                           ;LED_B1.c: 14: if (led == 2) {
  6026  0F8A  085A               	movf	LedPointSelect@led,w
  6027  0F8B  3A02               	xorlw	2
  6028  0F8C  1D03               	skipz
  6029  0F8D  2F92               	goto	l481
  6030                           
  6031                           ;LED_B1.c: 15: LED = &VarLED2;
  6032  0F8E  3055               	movlw	_VarLED2& (0+255)
  6033  0F8F  00D9               	movwf	??_LedPointSelect
  6034  0F90  0859               	movf	??_LedPointSelect,w
  6035  0F91  00F3               	movwf	_LED
  6036  0F92                     l481:	
  6037                           
  6038                           ;LED_B1.c: 16: }
  6039                           ;LED_B1.c: 24: if (led == 99) {
  6040  0F92  085A               	movf	LedPointSelect@led,w
  6041  0F93  3A63               	xorlw	99
  6042  0F94  1D03               	skipz
  6043  0F95  0008               	return
  6044                           
  6045                           ;LED_B1.c: 25: LED = &VarErrLED;
  6046  0F96  304D               	movlw	_VarErrLED& (0+255)
  6047  0F97  00D9               	movwf	??_LedPointSelect
  6048  0F98  0859               	movf	??_LedPointSelect,w
  6049  0F99  00F3               	movwf	_LED
  6050  0F9A  0008               	return
  6051  0F9B                     __end_of_LedPointSelect:	
  6052                           
  6053                           	psect	text33
  6054  0F4B                     __ptext33:	
  6055 ;; *************** function _getMain_All_Error_Status *****************
  6056 ;; Defined at:
  6057 ;;		line 424 in file "../src/Main_B1.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  command         1    wreg     unsigned char 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  command         1    1[BANK0 ] unsigned char 
  6062 ;;  status          1    4[BANK0 ] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      unsigned char 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6072 ;;      Params:         0       0       0       0
  6073 ;;      Locals:         0       4       0       0
  6074 ;;      Temps:          0       1       0       0
  6075 ;;      Totals:         0       5       0       0
  6076 ;;Total ram usage:        5 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    3
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_Exception_Main
  6083 ;;		_setTemp_Main
  6084 ;;		_PIR_Main
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           
  6089                           ;psect for function _getMain_All_Error_Status
  6090  0F4B                     _getMain_All_Error_Status:	
  6091                           
  6092                           ;incstack = 0
  6093                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6094                           ;getMain_All_Error_Status@command stored from wreg
  6095  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0F4D  00DA               	movwf	getMain_All_Error_Status@command
  6098                           
  6099                           ;Main_B1.c: 425: char status = 0;
  6100  0F4E  01DD               	clrf	getMain_All_Error_Status@status
  6101                           
  6102                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6103  0F4F  08DD               	movf	getMain_All_Error_Status@status,f
  6104  0F50  1D03               	skipz
  6105  0F51  2F63               	goto	l808
  6106  0F52  085A               	movf	getMain_All_Error_Status@command,w
  6107  0F53  3A02               	xorlw	2
  6108  0F54  1903               	skipnz
  6109  0F55  2F63               	goto	l808
  6110                           
  6111                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6112  0F56  18C1               	btfsc	_Temp,1
  6113  0F57  2F5B               	goto	l4209
  6114  0F58  01DB               	clrf	_getMain_All_Error_Status$2587
  6115  0F59  01DC               	clrf	_getMain_All_Error_Status$2587+1
  6116  0F5A  2F5F               	goto	l812
  6117  0F5B                     l4209:	
  6118  0F5B  3002               	movlw	2
  6119  0F5C  00DB               	movwf	_getMain_All_Error_Status$2587
  6120  0F5D  3000               	movlw	0
  6121  0F5E  00DC               	movwf	_getMain_All_Error_Status$2587+1
  6122  0F5F                     l812:	
  6123  0F5F  085B               	movf	_getMain_All_Error_Status$2587,w
  6124  0F60  00D9               	movwf	??_getMain_All_Error_Status
  6125  0F61  0859               	movf	??_getMain_All_Error_Status,w
  6126  0F62  00DD               	movwf	getMain_All_Error_Status@status
  6127  0F63                     l808:	
  6128                           
  6129                           ;Main_B1.c: 438: }
  6130                           ;Main_B1.c: 461: return status;
  6131  0F63  085D               	movf	getMain_All_Error_Status@status,w
  6132  0F64  0008               	return
  6133  0F65                     __end_of_getMain_All_Error_Status:	
  6134                           
  6135                           	psect	text34
  6136  0DA8                     __ptext34:	
  6137 ;; *************** function _DimmerLights_Main *****************
  6138 ;; Defined at:
  6139 ;;		line 736 in file "../src/Dimmer_B1.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;		None               void
  6146 ;; Registers used:
  6147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6153 ;;      Params:         0       0       0       0
  6154 ;;      Locals:         0       0       0       0
  6155 ;;      Temps:          0       0       0       0
  6156 ;;      Totals:         0       0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    6
  6160 ;; This function calls:
  6161 ;;		_DimmerLights_PIR_Control
  6162 ;;		_setDimmerLights_Main
  6163 ;; This function is called by:
  6164 ;;		_main
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _DimmerLights_Main
  6170  0DA8                     _DimmerLights_Main:	
  6171                           
  6172                           ;Dimmer_B1.c: 747: setDimmerLights_Main(1);
  6173                           
  6174                           ;incstack = 0
  6175                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6176  0DA8  3001               	movlw	1
  6177  0DA9  118A  2522  158A   	fcall	_setDimmerLights_Main
  6178                           
  6179                           ;Dimmer_B1.c: 759: DimmerLights_PIR_Control();
  6180  0DAC  118A  2336         	fcall	_DimmerLights_PIR_Control
  6181  0DAE  0008               	return
  6182  0DAF                     __end_of_DimmerLights_Main:	
  6183                           
  6184                           	psect	text35
  6185  0522                     __ptext35:	
  6186 ;; *************** function _setDimmerLights_Main *****************
  6187 ;; Defined at:
  6188 ;;		line 765 in file "../src/Dimmer_B1.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  lights          1    wreg     unsigned char 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;  lights          1    9[BANK0 ] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;		None               void
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6202 ;;      Params:         0       0       0       0
  6203 ;;      Locals:         0       1       0       0
  6204 ;;      Temps:          0       0       0       0
  6205 ;;      Totals:         0       1       0       0
  6206 ;;Total ram usage:        1 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    5
  6209 ;; This function calls:
  6210 ;;		_DimmerLights_SelectPointer
  6211 ;;		_getDimmerLights_Allow_Condition
  6212 ;;		_getMain_All_LightsStatus
  6213 ;;		_setDimmerLights_Dimming
  6214 ;;		_setDimmerLights_OnOff
  6215 ;; This function is called by:
  6216 ;;		_DimmerLights_Main
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           
  6221                           ;psect for function _setDimmerLights_Main
  6222  0522                     _setDimmerLights_Main:	
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6226                           ;setDimmerLights_Main@lights stored from wreg
  6227  0522  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0523  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0524  00E2               	movwf	setDimmerLights_Main@lights
  6230                           
  6231                           ;Dimmer_B1.c: 767: DimmerLights_SelectPointer(lights);
  6232  0525  0862               	movf	setDimmerLights_Main@lights,w
  6233  0526  158A  25C6  118A   	fcall	_DimmerLights_SelectPointer
  6234                           
  6235                           ;Dimmer_B1.c: 768: if (DimmerLights->Trigger == 1) {
  6236  0529  0872               	movf	_DimmerLights,w
  6237  052A  0084               	movwf	4
  6238  052B  1383               	bcf	3,7	;select IRP bank0
  6239  052C  1C80               	btfss	0,1
  6240  052D  2D4E               	goto	l4293
  6241                           
  6242                           ;Dimmer_B1.c: 769: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6243  052E  1283               	bcf	3,5	;RP0=0, select bank0
  6244  052F  1303               	bcf	3,6	;RP1=0, select bank0
  6245  0530  0862               	movf	setDimmerLights_Main@lights,w
  6246  0531  158A  2591  118A   	fcall	_getDimmerLights_Allow_Condition
  6247  0534  3800               	iorlw	0
  6248  0535  1D03               	skipz
  6249  0536  0008               	return
  6250                           
  6251                           ;Dimmer_B1.c: 770: DimmerLights->Trigger = 0;
  6252  0537  0872               	movf	_DimmerLights,w
  6253  0538  0084               	movwf	4
  6254  0539  1383               	bcf	3,7	;select IRP bank0
  6255  053A  1080               	bcf	0,1
  6256                           
  6257                           ;Dimmer_B1.c: 771: if (DimmerLights->Switch == 1) {
  6258  053B  0872               	movf	_DimmerLights,w
  6259  053C  0084               	movwf	4
  6260  053D  1D00               	btfss	0,2
  6261  053E  2D47               	goto	l4291
  6262                           
  6263                           ;Dimmer_B1.c: 772: setDimmerLights_OnOff(lights, 1);
  6264  053F  1283               	bcf	3,5	;RP0=0, select bank0
  6265  0540  1303               	bcf	3,6	;RP1=0, select bank0
  6266  0541  01DC               	clrf	setDimmerLights_OnOff@command
  6267  0542  0ADC               	incf	setDimmerLights_OnOff@command,f
  6268  0543  0862               	movf	setDimmerLights_Main@lights,w
  6269  0544  118A  273A         	fcall	_setDimmerLights_OnOff
  6270                           
  6271                           ;Dimmer_B1.c: 773: } else {
  6272  0546  0008               	return
  6273  0547                     l4291:	
  6274                           
  6275                           ;Dimmer_B1.c: 774: setDimmerLights_OnOff(lights, 0);
  6276  0547  1283               	bcf	3,5	;RP0=0, select bank0
  6277  0548  1303               	bcf	3,6	;RP1=0, select bank0
  6278  0549  01DC               	clrf	setDimmerLights_OnOff@command
  6279  054A  0862               	movf	setDimmerLights_Main@lights,w
  6280  054B  118A  273A         	fcall	_setDimmerLights_OnOff
  6281                           
  6282                           ;Dimmer_B1.c: 775: }
  6283                           ;Dimmer_B1.c: 776: }
  6284                           ;Dimmer_B1.c: 777: } else {
  6285  054D  0008               	return
  6286  054E                     l4293:	
  6287                           
  6288                           ;Dimmer_B1.c: 778: if (getMain_All_LightsStatus() == 1) {
  6289  054E  158A  25F6  118A   	fcall	_getMain_All_LightsStatus
  6290  0551  3A01               	xorlw	1
  6291  0552  1D03               	skipz
  6292  0553  2D79               	goto	l4305
  6293                           
  6294                           ;Dimmer_B1.c: 779: if (DimmerLights->DimmingTrigger == 1) {
  6295  0554  0872               	movf	_DimmerLights,w
  6296  0555  0084               	movwf	4
  6297  0556  1383               	bcf	3,7	;select IRP bank0
  6298  0557  1E00               	btfss	0,4
  6299  0558  0008               	return
  6300                           
  6301                           ;Dimmer_B1.c: 780: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6302  0559  1283               	bcf	3,5	;RP0=0, select bank0
  6303  055A  1303               	bcf	3,6	;RP1=0, select bank0
  6304  055B  0862               	movf	setDimmerLights_Main@lights,w
  6305  055C  158A  2591  118A   	fcall	_getDimmerLights_Allow_Condition
  6306  055F  3800               	iorlw	0
  6307  0560  1D03               	skipz
  6308  0561  0008               	return
  6309                           
  6310                           ;Dimmer_B1.c: 781: DimmerLights->DimmingTrigger = 0;
  6311  0562  0872               	movf	_DimmerLights,w
  6312  0563  0084               	movwf	4
  6313  0564  1383               	bcf	3,7	;select IRP bank0
  6314  0565  1200               	bcf	0,4
  6315                           
  6316                           ;Dimmer_B1.c: 782: if (DimmerLights->DimmingSwitch == 1) {
  6317  0566  0872               	movf	_DimmerLights,w
  6318  0567  0084               	movwf	4
  6319  0568  1E80               	btfss	0,5
  6320  0569  2D72               	goto	l4303
  6321                           
  6322                           ;Dimmer_B1.c: 783: setDimmerLights_Dimming(lights, 1);
  6323  056A  1283               	bcf	3,5	;RP0=0, select bank0
  6324  056B  1303               	bcf	3,6	;RP1=0, select bank0
  6325  056C  01DF               	clrf	setDimmerLights_Dimming@status
  6326  056D  0ADF               	incf	setDimmerLights_Dimming@status,f
  6327  056E  0862               	movf	setDimmerLights_Main@lights,w
  6328  056F  158A  27DA         	fcall	_setDimmerLights_Dimming
  6329                           
  6330                           ;Dimmer_B1.c: 784: } else {
  6331  0571  0008               	return
  6332  0572                     l4303:	
  6333                           
  6334                           ;Dimmer_B1.c: 785: setDimmerLights_Dimming(lights, 0);
  6335  0572  1283               	bcf	3,5	;RP0=0, select bank0
  6336  0573  1303               	bcf	3,6	;RP1=0, select bank0
  6337  0574  01DF               	clrf	setDimmerLights_Dimming@status
  6338  0575  0862               	movf	setDimmerLights_Main@lights,w
  6339  0576  158A  27DA         	fcall	_setDimmerLights_Dimming
  6340                           
  6341                           ;Dimmer_B1.c: 786: }
  6342                           ;Dimmer_B1.c: 787: }
  6343                           ;Dimmer_B1.c: 788: }
  6344                           ;Dimmer_B1.c: 789: } else {
  6345  0578  0008               	return
  6346  0579                     l4305:	
  6347                           
  6348                           ;Dimmer_B1.c: 790: if (DimmerLights->DimmingTrigger == 1) {
  6349  0579  0872               	movf	_DimmerLights,w
  6350  057A  0084               	movwf	4
  6351  057B  1383               	bcf	3,7	;select IRP bank0
  6352  057C  1E00               	btfss	0,4
  6353  057D  0008               	return
  6354                           
  6355                           ;Dimmer_B1.c: 791: DimmerLights->DimmingTrigger = 0;
  6356  057E  0872               	movf	_DimmerLights,w
  6357  057F  0084               	movwf	4
  6358  0580  1200               	bcf	0,4
  6359  0581  0008               	return
  6360  0582                     __end_of_setDimmerLights_Main:	
  6361                           
  6362                           	psect	text36
  6363  073A                     __ptext36:	
  6364 ;; *************** function _setDimmerLights_OnOff *****************
  6365 ;; Defined at:
  6366 ;;		line 799 in file "../src/Dimmer_B1.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  lights          1    wreg     unsigned char 
  6369 ;;  command         1    3[BANK0 ] unsigned char 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  lights          1    4[BANK0 ] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;		None               void
  6374 ;; Registers used:
  6375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6381 ;;      Params:         0       1       0       0
  6382 ;;      Locals:         0       1       0       0
  6383 ;;      Temps:          0       0       0       0
  6384 ;;      Totals:         0       2       0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; Hardware stack levels required when called:    4
  6388 ;; This function calls:
  6389 ;;		_getCmd_Status
  6390 ;;		_getMain_All_LightsStatus
  6391 ;;		_setCmd_Status
  6392 ;;		_setDimmerIntr_ControlStatus
  6393 ;; This function is called by:
  6394 ;;		_setDimmerLights_Main
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function _setDimmerLights_OnOff
  6400  073A                     _setDimmerLights_OnOff:	
  6401                           
  6402                           ;incstack = 0
  6403                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6404                           ;setDimmerLights_OnOff@lights stored from wreg
  6405  073A  1283               	bcf	3,5	;RP0=0, select bank0
  6406  073B  1303               	bcf	3,6	;RP1=0, select bank0
  6407  073C  00DD               	movwf	setDimmerLights_OnOff@lights
  6408                           
  6409                           ;Dimmer_B1.c: 801: if (command == 1) {
  6410  073D  085C               	movf	setDimmerLights_OnOff@command,w
  6411  073E  3A01               	xorlw	1
  6412  073F  1D03               	skipz
  6413  0740  2F4B               	goto	l4081
  6414                           
  6415                           ;Dimmer_B1.c: 802: setDimmerIntr_ControlStatus(lights, 1);
  6416  0741  01D9               	clrf	setDimmerIntr_ControlStatus@command
  6417  0742  0AD9               	incf	setDimmerIntr_ControlStatus@command,f
  6418  0743  085D               	movf	setDimmerLights_OnOff@lights,w
  6419  0744  158A  2705  118A   	fcall	_setDimmerIntr_ControlStatus
  6420                           
  6421                           ;Dimmer_B1.c: 810: Dimmer.PIR_Open_Status = 1;
  6422  0747  1283               	bcf	3,5	;RP0=0, select bank0
  6423  0748  1303               	bcf	3,6	;RP1=0, select bank0
  6424  0749  14AE               	bsf	_Dimmer+1,1
  6425                           
  6426                           ;Dimmer_B1.c: 830: } else if (command == 0) {
  6427  074A  2F53               	goto	l4085
  6428  074B                     l4081:	
  6429  074B  08DC               	movf	setDimmerLights_OnOff@command,f
  6430  074C  1D03               	skipz
  6431  074D  2F53               	goto	l4085
  6432                           
  6433                           ;Dimmer_B1.c: 831: setDimmerIntr_ControlStatus(lights, 0);
  6434  074E  01D9               	clrf	setDimmerIntr_ControlStatus@command
  6435  074F  085D               	movf	setDimmerLights_OnOff@lights,w
  6436  0750  158A  2705  118A   	fcall	_setDimmerIntr_ControlStatus
  6437  0753                     l4085:	
  6438                           
  6439                           ;Dimmer_B1.c: 864: }
  6440                           ;Dimmer_B1.c: 867: ;;
  6441                           ;Dimmer_B1.c: 869: if (getCmd_Status(1) == 1) {
  6442  0753  3001               	movlw	1
  6443  0754  158A  266A  118A   	fcall	_getCmd_Status
  6444  0757  3A01               	xorlw	1
  6445  0758  1D03               	skipz
  6446  0759  0008               	return
  6447                           
  6448                           ;Dimmer_B1.c: 870: if (getMain_All_LightsStatus() == 0) {
  6449  075A  158A  25F6  118A   	fcall	_getMain_All_LightsStatus
  6450  075D  3800               	iorlw	0
  6451  075E  1D03               	skipz
  6452  075F  0008               	return
  6453                           
  6454                           ;Dimmer_B1.c: 871: setCmd_Status(1, 0);
  6455  0760  1283               	bcf	3,5	;RP0=0, select bank0
  6456  0761  1303               	bcf	3,6	;RP1=0, select bank0
  6457  0762  01D9               	clrf	setCmd_Status@cmd
  6458  0763  3001               	movlw	1
  6459  0764  158A  26EF         	fcall	_setCmd_Status
  6460                           
  6461                           ;Dimmer_B1.c: 875: }
  6462                           ;Dimmer_B1.c: 876: } else {
  6463                           
  6464                           ;Dimmer_B1.c: 872: ;;
  6465                           ;Dimmer_B1.c: 873: ;;
  6466                           ;Dimmer_B1.c: 874: ;;
  6467  0766  0008               	return
  6468  0767                     __end_of_setDimmerLights_OnOff:	
  6469                           ;Dimmer_B1.c: 877: ;;
  6470                           
  6471                           
  6472                           	psect	text37
  6473  0F05                     __ptext37:	
  6474 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6475 ;; Defined at:
  6476 ;;		line 31 in file "../src/Dimmer_B1.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  lights          1    wreg     unsigned char 
  6479 ;;  command         1    0[BANK0 ] unsigned char 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  lights          1    2[BANK0 ] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;		None               void
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6491 ;;      Params:         0       1       0       0
  6492 ;;      Locals:         0       1       0       0
  6493 ;;      Temps:          0       1       0       0
  6494 ;;      Totals:         0       3       0       0
  6495 ;;Total ram usage:        3 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    3
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_setDimmerLights_OnOff
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           
  6506                           ;psect for function _setDimmerIntr_ControlStatus
  6507  0F05                     _setDimmerIntr_ControlStatus:	
  6508                           
  6509                           ;incstack = 0
  6510                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6511                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6512  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0F07  00DB               	movwf	setDimmerIntr_ControlStatus@lights
  6515                           
  6516                           ;Dimmer_B1.c: 33: if (lights == 1) {
  6517  0F08  085B               	movf	setDimmerIntr_ControlStatus@lights,w
  6518  0F09  3A01               	xorlw	1
  6519  0F0A  1D03               	skipz
  6520  0F0B  0008               	return
  6521                           
  6522                           ;Dimmer_B1.c: 34: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6523  0F0C  0859               	movf	setDimmerIntr_ControlStatus@command,w
  6524  0F0D  3A01               	xorlw	1
  6525  0F0E  3000               	movlw	0
  6526  0F0F  1903               	skipnz
  6527  0F10  3001               	movlw	1
  6528  0F11  00DA               	movwf	??_setDimmerIntr_ControlStatus
  6529  0F12  0DDA               	rlf	??_setDimmerIntr_ControlStatus,f
  6530  0F13  0DDA               	rlf	??_setDimmerIntr_ControlStatus,f
  6531  0F14  0DDA               	rlf	??_setDimmerIntr_ControlStatus,f
  6532  0F15  0820               	movf	_DimmerIntr1,w
  6533  0F16  065A               	xorwf	??_setDimmerIntr_ControlStatus,w
  6534  0F17  39F7               	andlw	-9
  6535  0F18  065A               	xorwf	??_setDimmerIntr_ControlStatus,w
  6536  0F19  00A0               	movwf	_DimmerIntr1
  6537  0F1A  0008               	return
  6538  0F1B                     __end_of_setDimmerIntr_ControlStatus:	
  6539                           
  6540                           	psect	text38
  6541  0EEF                     __ptext38:	
  6542 ;; *************** function _setCmd_Status *****************
  6543 ;; Defined at:
  6544 ;;		line 613 in file "../src/Main_B1.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  number          1    wreg     unsigned char 
  6547 ;;  cmd             1    0[BANK0 ] unsigned char 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  number          1    2[BANK0 ] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;		None               void
  6552 ;; Registers used:
  6553 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6559 ;;      Params:         0       1       0       0
  6560 ;;      Locals:         0       1       0       0
  6561 ;;      Temps:          0       1       0       0
  6562 ;;      Totals:         0       3       0       0
  6563 ;;Total ram usage:        3 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    3
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_setDimmerLights_OnOff
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           
  6574                           ;psect for function _setCmd_Status
  6575  0EEF                     _setCmd_Status:	
  6576                           
  6577                           ;incstack = 0
  6578                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6579                           ;setCmd_Status@number stored from wreg
  6580  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  6581  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  6582  0EF1  00DB               	movwf	setCmd_Status@number
  6583                           
  6584                           ;Main_B1.c: 614: switch (number) {
  6585  0EF2  2EFF               	goto	l4027
  6586  0EF3                     l4023:	
  6587                           ;Main_B1.c: 615: case 1:
  6588                           
  6589                           
  6590                           ;Main_B1.c: 616: Cmd.all_off = cmd == 1 ? 1 : 0;
  6591  0EF3  0859               	movf	setCmd_Status@cmd,w
  6592  0EF4  3A01               	xorlw	1
  6593  0EF5  3000               	movlw	0
  6594  0EF6  1903               	skipnz
  6595  0EF7  3001               	movlw	1
  6596  0EF8  00DA               	movwf	??_setCmd_Status
  6597  0EF9  0870               	movf	_Cmd,w
  6598  0EFA  065A               	xorwf	??_setCmd_Status,w
  6599  0EFB  39FE               	andlw	-2
  6600  0EFC  065A               	xorwf	??_setCmd_Status,w
  6601  0EFD  00F0               	movwf	_Cmd
  6602                           
  6603                           ;Main_B1.c: 618: }
  6604                           
  6605                           ;Main_B1.c: 617: break;
  6606  0EFE  0008               	return
  6607  0EFF                     l4027:	
  6608  0EFF  085B               	movf	setCmd_Status@number,w
  6609                           
  6610                           ; Switch size 1, requested type "space"
  6611                           ; Number of cases is 1, Range of values is 1 to 1
  6612                           ; switch strategies available:
  6613                           ; Name         Instructions Cycles
  6614                           ; simple_byte            4     3 (average)
  6615                           ; direct_byte           12    10 (fixed)
  6616                           ; jumptable            263     9 (fixed)
  6617                           ;	Chosen strategy is simple_byte
  6618  0F00  3A01               	xorlw	1	; case 1
  6619  0F01  1903               	skipnz
  6620  0F02  2EF3               	goto	l4023
  6621  0F03  2F04               	goto	l834
  6622  0F04                     l834:	
  6623  0F04  0008               	return
  6624  0F05                     __end_of_setCmd_Status:	
  6625                           
  6626                           	psect	text39
  6627  0DF6                     __ptext39:	
  6628 ;; *************** function _getMain_All_LightsStatus *****************
  6629 ;; Defined at:
  6630 ;;		line 373 in file "../src/Main_B1.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  status          1    0[BANK0 ] unsigned char 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      unsigned char 
  6637 ;; Registers used:
  6638 ;;		wreg, status,2
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6644 ;;      Params:         0       0       0       0
  6645 ;;      Locals:         0       1       0       0
  6646 ;;      Temps:          0       0       0       0
  6647 ;;      Totals:         0       1       0       0
  6648 ;;Total ram usage:        1 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    3
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_setDimmerLights_Main
  6655 ;;		_setDimmerLights_OnOff
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function _getMain_All_LightsStatus
  6661  0DF6                     _getMain_All_LightsStatus:	
  6662                           
  6663                           ;Main_B1.c: 374: char status = 0;
  6664                           
  6665                           ;incstack = 0
  6666                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6667  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  6668  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  6669  0DF8  01D9               	clrf	getMain_All_LightsStatus@status
  6670                           
  6671                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6672  0DF9  3000               	movlw	0
  6673  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  6674  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  6675  0DFC  184F               	btfsc	(_DimmerLights1^(0+128)+1),0
  6676  0DFD  3001               	movlw	1
  6677  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  6678  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  6679  0E00  00D9               	movwf	getMain_All_LightsStatus@status
  6680                           
  6681                           ;Main_B1.c: 420: return status;
  6682  0E01  0859               	movf	getMain_All_LightsStatus@status,w
  6683  0E02  0008               	return
  6684  0E03                     __end_of_getMain_All_LightsStatus:	
  6685                           
  6686                           	psect	text40
  6687  0E6A                     __ptext40:	
  6688 ;; *************** function _getCmd_Status *****************
  6689 ;; Defined at:
  6690 ;;		line 621 in file "../src/Main_B1.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  number          1    wreg     unsigned char 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  number          1    0[BANK0 ] unsigned char 
  6695 ;;  cmd             1    1[BANK0 ] unsigned char 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      unsigned char 
  6698 ;; Registers used:
  6699 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6705 ;;      Params:         0       0       0       0
  6706 ;;      Locals:         0       2       0       0
  6707 ;;      Temps:          0       0       0       0
  6708 ;;      Totals:         0       2       0       0
  6709 ;;Total ram usage:        2 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    3
  6712 ;; This function calls:
  6713 ;;		Nothing
  6714 ;; This function is called by:
  6715 ;;		_setDimmerLights_OnOff
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           
  6720                           ;psect for function _getCmd_Status
  6721  0E6A                     _getCmd_Status:	
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6725                           ;getCmd_Status@number stored from wreg
  6726  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6727  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6728  0E6C  00D9               	movwf	getCmd_Status@number
  6729                           
  6730                           ;Main_B1.c: 622: char cmd = 0;
  6731  0E6D  01DA               	clrf	getCmd_Status@cmd
  6732                           
  6733                           ;Main_B1.c: 623: switch (number) {
  6734  0E6E  2E74               	goto	l4015
  6735  0E6F                     l4011:	
  6736                           ;Main_B1.c: 624: case 1:
  6737                           
  6738                           
  6739                           ;Main_B1.c: 625: cmd = Cmd.all_off == 1 ? 1 : 0;
  6740  0E6F  3000               	movlw	0
  6741  0E70  1870               	btfsc	_Cmd,0
  6742  0E71  3001               	movlw	1
  6743  0E72  00DA               	movwf	getCmd_Status@cmd
  6744                           
  6745                           ;Main_B1.c: 627: }
  6746                           
  6747                           ;Main_B1.c: 626: break;
  6748  0E73  2E79               	goto	l4017
  6749  0E74                     l4015:	
  6750  0E74  0859               	movf	getCmd_Status@number,w
  6751                           
  6752                           ; Switch size 1, requested type "space"
  6753                           ; Number of cases is 1, Range of values is 1 to 1
  6754                           ; switch strategies available:
  6755                           ; Name         Instructions Cycles
  6756                           ; simple_byte            4     3 (average)
  6757                           ; direct_byte           12    10 (fixed)
  6758                           ; jumptable            263     9 (fixed)
  6759                           ;	Chosen strategy is simple_byte
  6760  0E75  3A01               	xorlw	1	; case 1
  6761  0E76  1903               	skipnz
  6762  0E77  2E6F               	goto	l4011
  6763  0E78  2E79               	goto	l4017
  6764  0E79                     l4017:	
  6765                           
  6766                           ;Main_B1.c: 628: return cmd;
  6767  0E79  085A               	movf	getCmd_Status@cmd,w
  6768  0E7A  0008               	return
  6769  0E7B                     __end_of_getCmd_Status:	
  6770                           
  6771                           	psect	text41
  6772  0FDA                     __ptext41:	
  6773 ;; *************** function _setDimmerLights_Dimming *****************
  6774 ;; Defined at:
  6775 ;;		line 883 in file "../src/Dimmer_B1.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  lights          1    wreg     unsigned char 
  6778 ;;  status          1    6[BANK0 ] unsigned char 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  lights          1    8[BANK0 ] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;		None               void
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0, pclath, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6790 ;;      Params:         0       1       0       0
  6791 ;;      Locals:         0       1       0       0
  6792 ;;      Temps:          0       1       0       0
  6793 ;;      Totals:         0       3       0       0
  6794 ;;Total ram usage:        3 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    4
  6797 ;; This function calls:
  6798 ;;		_getDimmerIntr_DimmingValue
  6799 ;;		_setDimmerIntr_Dimming_Sw
  6800 ;;		_setDimmerIntr_MaxmumValue
  6801 ;; This function is called by:
  6802 ;;		_setDimmerLights_Main
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function _setDimmerLights_Dimming
  6808  0FDA                     _setDimmerLights_Dimming:	
  6809                           
  6810                           ;incstack = 0
  6811                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6812                           ;setDimmerLights_Dimming@lights stored from wreg
  6813  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  6814  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  6815  0FDC  00E1               	movwf	setDimmerLights_Dimming@lights
  6816                           
  6817                           ;Dimmer_B1.c: 884: if (status == 1) {
  6818  0FDD  085F               	movf	setDimmerLights_Dimming@status,w
  6819  0FDE  3A01               	xorlw	1
  6820  0FDF  1D03               	skipz
  6821  0FE0  2FE7               	goto	l4095
  6822                           
  6823                           ;Dimmer_B1.c: 885: setDimmerIntr_Dimming_Sw(lights, 1);
  6824  0FE1  01D9               	clrf	setDimmerIntr_Dimming_Sw@command
  6825  0FE2  0AD9               	incf	setDimmerIntr_Dimming_Sw@command,f
  6826  0FE3  0861               	movf	setDimmerLights_Dimming@lights,w
  6827  0FE4  158A  26B1         	fcall	_setDimmerIntr_Dimming_Sw
  6828                           
  6829                           ;Dimmer_B1.c: 890: ;;
  6830                           ;Dimmer_B1.c: 891: } else if (status == 0) {
  6831  0FE6  0008               	return
  6832  0FE7                     l4095:	
  6833  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  6834  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  6835  0FE9  08DF               	movf	setDimmerLights_Dimming@status,f
  6836  0FEA  1D03               	skipz
  6837  0FEB  0008               	return
  6838                           
  6839                           ;Dimmer_B1.c: 892: setDimmerIntr_Dimming_Sw(lights, 0);
  6840  0FEC  01D9               	clrf	setDimmerIntr_Dimming_Sw@command
  6841  0FED  0861               	movf	setDimmerLights_Dimming@lights,w
  6842  0FEE  158A  26B1  158A   	fcall	_setDimmerIntr_Dimming_Sw
  6843                           
  6844                           ;Dimmer_B1.c: 899: setDimmerIntr_MaxmumValue(lights, getDimmerIntr_DimmingValue(lights))
      +                          ;
  6845  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  6846  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  6847  0FF3  0861               	movf	setDimmerLights_Dimming@lights,w
  6848  0FF4  158A  2610  158A   	fcall	_getDimmerIntr_DimmingValue
  6849  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  6850  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  6851  0FF9  00E0               	movwf	??_setDimmerLights_Dimming
  6852  0FFA  0860               	movf	??_setDimmerLights_Dimming,w
  6853  0FFB  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  6854  0FFC  0861               	movf	setDimmerLights_Dimming@lights,w
  6855  0FFD  158A  25DE         	fcall	_setDimmerIntr_MaxmumValue
  6856                           
  6857                           ;Dimmer_B1.c: 900: ;;
  6858                           ;Dimmer_B1.c: 910: ;;
  6859                           ;Dimmer_B1.c: 911: ;;
  6860  0FFF  0008               	return
  6861  1000                     __end_of_setDimmerLights_Dimming:	
  6862                           
  6863                           	psect	text42
  6864  0EB1                     __ptext42:	
  6865 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6866 ;; Defined at:
  6867 ;;		line 166 in file "../src/Dimmer_B1.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  lights          1    wreg     unsigned char 
  6870 ;;  command         1    0[BANK0 ] unsigned char 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  lights          1    2[BANK0 ] unsigned char 
  6873 ;; Return value:  Size  Location     Type
  6874 ;;		None               void
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6882 ;;      Params:         0       1       0       0
  6883 ;;      Locals:         0       1       0       0
  6884 ;;      Temps:          0       1       0       0
  6885 ;;      Totals:         0       3       0       0
  6886 ;;Total ram usage:        3 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:    3
  6889 ;; This function calls:
  6890 ;;		Nothing
  6891 ;; This function is called by:
  6892 ;;		_setDimmerLights_Dimming
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           
  6897                           ;psect for function _setDimmerIntr_Dimming_Sw
  6898  0EB1                     _setDimmerIntr_Dimming_Sw:	
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6902                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6903  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0EB3  00DB               	movwf	setDimmerIntr_Dimming_Sw@lights
  6906                           
  6907                           ;Dimmer_B1.c: 168: if (lights == 1) {
  6908  0EB4  085B               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6909  0EB5  3A01               	xorlw	1
  6910  0EB6  1D03               	skipz
  6911  0EB7  0008               	return
  6912                           
  6913                           ;Dimmer_B1.c: 169: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6914  0EB8  0859               	movf	setDimmerIntr_Dimming_Sw@command,w
  6915  0EB9  3A01               	xorlw	1
  6916  0EBA  3000               	movlw	0
  6917  0EBB  1903               	skipnz
  6918  0EBC  3001               	movlw	1
  6919  0EBD  00DA               	movwf	??_setDimmerIntr_Dimming_Sw
  6920  0EBE  0EDA               	swapf	??_setDimmerIntr_Dimming_Sw,f
  6921  0EBF  0820               	movf	_DimmerIntr1,w
  6922  0EC0  065A               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  6923  0EC1  39EF               	andlw	-17
  6924  0EC2  065A               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  6925  0EC3  00A0               	movwf	_DimmerIntr1
  6926  0EC4  0008               	return
  6927  0EC5                     __end_of_setDimmerIntr_Dimming_Sw:	
  6928                           
  6929                           	psect	text43
  6930  0E10                     __ptext43:	
  6931 ;; *************** function _getDimmerIntr_DimmingValue *****************
  6932 ;; Defined at:
  6933 ;;		line 67 in file "../src/Dimmer_B1.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  lights          1    wreg     unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  lights          1    1[BANK0 ] unsigned char 
  6938 ;;  value           1    2[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      unsigned char 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6948 ;;      Params:         0       0       0       0
  6949 ;;      Locals:         0       2       0       0
  6950 ;;      Temps:          0       1       0       0
  6951 ;;      Totals:         0       3       0       0
  6952 ;;Total ram usage:        3 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    3
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_setDimmerLights_Dimming
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           
  6963                           ;psect for function _getDimmerIntr_DimmingValue
  6964  0E10                     _getDimmerIntr_DimmingValue:	
  6965                           
  6966                           ;incstack = 0
  6967                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  6968                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  6969  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  6970  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  6971  0E12  00DA               	movwf	getDimmerIntr_DimmingValue@lights
  6972                           
  6973                           ;Dimmer_B1.c: 68: char value = 0;
  6974  0E13  01DB               	clrf	getDimmerIntr_DimmingValue@value
  6975                           
  6976                           ;Dimmer_B1.c: 70: if (lights == 1) {
  6977  0E14  085A               	movf	getDimmerIntr_DimmingValue@lights,w
  6978  0E15  3A01               	xorlw	1
  6979  0E16  1D03               	skipz
  6980  0E17  2E1C               	goto	l251
  6981                           
  6982                           ;Dimmer_B1.c: 71: value = DimmerIntr1.DimmingValue;
  6983  0E18  0824               	movf	_DimmerIntr1+4,w
  6984  0E19  00D9               	movwf	??_getDimmerIntr_DimmingValue
  6985  0E1A  0859               	movf	??_getDimmerIntr_DimmingValue,w
  6986  0E1B  00DB               	movwf	getDimmerIntr_DimmingValue@value
  6987  0E1C                     l251:	
  6988                           
  6989                           ;Dimmer_B1.c: 72: }
  6990                           ;Dimmer_B1.c: 84: return value;
  6991  0E1C  085B               	movf	getDimmerIntr_DimmingValue@value,w
  6992  0E1D  0008               	return
  6993  0E1E                     __end_of_getDimmerIntr_DimmingValue:	
  6994                           
  6995                           	psect	text44
  6996  0D91                     __ptext44:	
  6997 ;; *************** function _getDimmerLights_Allow_Condition *****************
  6998 ;; Defined at:
  6999 ;;		line 916 in file "../src/Dimmer_B1.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;  lights          1    wreg     unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  lights          1    0[COMMON] unsigned char 
  7004 ;;  allow           1    0[BANK0 ] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      unsigned char 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7014 ;;      Params:         0       0       0       0
  7015 ;;      Locals:         0       1       0       0
  7016 ;;      Temps:          0       0       0       0
  7017 ;;      Totals:         0       1       0       0
  7018 ;;Total ram usage:        1 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    3
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_setDimmerLights_Main
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           
  7029                           ;psect for function _getDimmerLights_Allow_Condition
  7030  0D91                     _getDimmerLights_Allow_Condition:	
  7031                           
  7032                           ;Dimmer_B1.c: 917: char allow = 0;
  7033                           
  7034                           ;incstack = 0
  7035                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7036  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  7037  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  7038  0D93  01D9               	clrf	getDimmerLights_Allow_Condition@allow
  7039                           
  7040                           ;Dimmer_B1.c: 950: return allow;
  7041  0D94  0859               	movf	getDimmerLights_Allow_Condition@allow,w
  7042  0D95  0008               	return
  7043  0D96                     __end_of_getDimmerLights_Allow_Condition:	
  7044                           
  7045                           	psect	text45
  7046  0336                     __ptext45:	
  7047 ;; *************** function _DimmerLights_PIR_Control *****************
  7048 ;; Defined at:
  7049 ;;		line 1449 in file "../src/Dimmer_B1.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;		None
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;		None               void
  7056 ;; Registers used:
  7057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7063 ;;      Params:         0       0       0       0
  7064 ;;      Locals:         0       0       0       0
  7065 ;;      Temps:          0       1       0       0
  7066 ;;      Totals:         0       1       0       0
  7067 ;;Total ram usage:        1 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    5
  7070 ;; This function calls:
  7071 ;;		_getDimmerLights_Status
  7072 ;;		_setDimmerIntr_DimmingValue
  7073 ;;		_setDimmerIntr_Dimming_RF
  7074 ;;		_setDimmerIntr_MaxmumValue
  7075 ;;		_setDimmerLights_SwOff
  7076 ;;		_setDimmerLights_SwOn
  7077 ;; This function is called by:
  7078 ;;		_DimmerLights_Main
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _DimmerLights_PIR_Control
  7084  0336                     _DimmerLights_PIR_Control:	
  7085                           
  7086                           ;Dimmer_B1.c: 1451: if (Dimmer.PIR_Trigger == 1) {
  7087                           
  7088                           ;incstack = 0
  7089                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7090  0336  1283               	bcf	3,5	;RP0=0, select bank0
  7091  0337  1303               	bcf	3,6	;RP1=0, select bank0
  7092  0338  1EAD               	btfss	_Dimmer,5
  7093  0339  2BA6               	goto	l4337
  7094                           
  7095                           ;Dimmer_B1.c: 1452: Dimmer.PIR_Trigger = 0;
  7096  033A  12AD               	bcf	_Dimmer,5
  7097                           
  7098                           ;Dimmer_B1.c: 1453: if (Dimmer.PIR_Sw == 1) {
  7099  033B  1E2D               	btfss	_Dimmer,4
  7100  033C  2B73               	goto	l416
  7101                           
  7102                           ;Dimmer_B1.c: 1455: if (getDimmerLights_Status(1) == 0) {
  7103  033D  3001               	movlw	1
  7104  033E  158A  2659  118A   	fcall	_getDimmerLights_Status
  7105  0341  3800               	iorlw	0
  7106  0342  1D03               	skipz
  7107  0343  2B57               	goto	l417
  7108                           
  7109                           ;Dimmer_B1.c: 1456: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.8)));
  7110  0344  3048               	movlw	72
  7111  0345  1283               	bcf	3,5	;RP0=0, select bank0
  7112  0346  1303               	bcf	3,6	;RP1=0, select bank0
  7113  0347  00DF               	movwf	??_DimmerLights_PIR_Control
  7114  0348  085F               	movf	??_DimmerLights_PIR_Control,w
  7115  0349  00D9               	movwf	setDimmerIntr_DimmingValue@value
  7116  034A  3001               	movlw	1
  7117  034B  158A  25D2  118A   	fcall	_setDimmerIntr_DimmingValue
  7118                           
  7119                           ;Dimmer_B1.c: 1457: setDimmerLights_SwOn(1);
  7120  034E  3001               	movlw	1
  7121  034F  158A  27B7  118A   	fcall	_setDimmerLights_SwOn
  7122                           
  7123                           ;Dimmer_B1.c: 1458: setDimmerLights_SwOff(1);
  7124  0352  3001               	movlw	1
  7125  0353  118A  2791  118A   	fcall	_setDimmerLights_SwOff
  7126                           
  7127                           ;Dimmer_B1.c: 1459: } else {
  7128  0356  2BA6               	goto	l4337
  7129  0357                     l417:	
  7130                           
  7131                           ;Dimmer_B1.c: 1460: if (Dimmer.PIR_Lights_Status == 1) {
  7132  0357  1283               	bcf	3,5	;RP0=0, select bank0
  7133  0358  1303               	bcf	3,6	;RP1=0, select bank0
  7134  0359  1D2E               	btfss	_Dimmer+1,2
  7135  035A  2BA6               	goto	l4337
  7136                           
  7137                           ;Dimmer_B1.c: 1461: Dimmer.PIR_Lights_Status = 0;
  7138  035B  112E               	bcf	_Dimmer+1,2
  7139                           
  7140                           ;Dimmer_B1.c: 1462: Dimmer.PIR_Close_Status = 0;
  7141  035C  102E               	bcf	_Dimmer+1,0
  7142                           
  7143                           ;Dimmer_B1.c: 1463: DimmerLights1.Trigger = 0;
  7144  035D  1683               	bsf	3,5	;RP0=1, select bank1
  7145  035E  1303               	bcf	3,6	;RP1=0, select bank1
  7146  035F  10CE               	bcf	_DimmerLights1^(0+128),1
  7147                           
  7148                           ;Dimmer_B1.c: 1465: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.8)));
  7149  0360  3018               	movlw	24
  7150  0361  1283               	bcf	3,5	;RP0=0, select bank0
  7151  0362  1303               	bcf	3,6	;RP1=0, select bank0
  7152  0363  00DF               	movwf	??_DimmerLights_PIR_Control
  7153  0364  085F               	movf	??_DimmerLights_PIR_Control,w
  7154  0365  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7155  0366  3001               	movlw	1
  7156  0367  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7157                           
  7158                           ;Dimmer_B1.c: 1466: setDimmerIntr_Dimming_RF(1, 1);
  7159  036A  1283               	bcf	3,5	;RP0=0, select bank0
  7160  036B  1303               	bcf	3,6	;RP1=0, select bank0
  7161  036C  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7162  036D  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7163  036E  3001               	movlw	1
  7164  036F  158A  26D9  118A   	fcall	_setDimmerIntr_Dimming_RF
  7165                           
  7166                           ;Dimmer_B1.c: 1467: }
  7167                           ;Dimmer_B1.c: 1468: }
  7168                           ;Dimmer_B1.c: 1469: } else if (Dimmer.PIR_Sw == 0) {
  7169  0372  2BA6               	goto	l4337
  7170  0373                     l416:	
  7171  0373  1A2D               	btfsc	_Dimmer,4
  7172  0374  2BA6               	goto	l4337
  7173                           
  7174                           ;Dimmer_B1.c: 1470: if (getDimmerLights_Status(1) == 1) {
  7175  0375  3001               	movlw	1
  7176  0376  158A  2659  118A   	fcall	_getDimmerLights_Status
  7177  0379  3A01               	xorlw	1
  7178  037A  1D03               	skipz
  7179  037B  2BA6               	goto	l4337
  7180                           
  7181                           ;Dimmer_B1.c: 1471: if (Dimmer.PIR_Lights_Status == 0) {
  7182  037C  1283               	bcf	3,5	;RP0=0, select bank0
  7183  037D  1303               	bcf	3,6	;RP1=0, select bank0
  7184  037E  192E               	btfsc	_Dimmer+1,2
  7185  037F  2B92               	goto	l423
  7186                           
  7187                           ;Dimmer_B1.c: 1472: Dimmer.PIR_Lights_Status = 1;
  7188  0380  152E               	bsf	_Dimmer+1,2
  7189                           
  7190                           ;Dimmer_B1.c: 1473: setDimmerIntr_MaxmumValue(1, ((char)((100-(char)(((70-10)/2)+10))*0.
      +                          8)));
  7191  0381  3030               	movlw	48
  7192  0382  00DF               	movwf	??_DimmerLights_PIR_Control
  7193  0383  085F               	movf	??_DimmerLights_PIR_Control,w
  7194  0384  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7195  0385  3001               	movlw	1
  7196  0386  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7197                           
  7198                           ;Dimmer_B1.c: 1474: setDimmerIntr_Dimming_RF(1, 1);
  7199  0389  1283               	bcf	3,5	;RP0=0, select bank0
  7200  038A  1303               	bcf	3,6	;RP1=0, select bank0
  7201  038B  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7202  038C  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7203  038D  3001               	movlw	1
  7204  038E  158A  26D9  118A   	fcall	_setDimmerIntr_Dimming_RF
  7205                           
  7206                           ;Dimmer_B1.c: 1475: } else {
  7207  0391  2BA6               	goto	l4337
  7208  0392                     l423:	
  7209                           
  7210                           ;Dimmer_B1.c: 1476: Dimmer.PIR_Lights_Status = 0;
  7211  0392  112E               	bcf	_Dimmer+1,2
  7212                           
  7213                           ;Dimmer_B1.c: 1477: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.8)));
  7214  0393  3048               	movlw	72
  7215  0394  00DF               	movwf	??_DimmerLights_PIR_Control
  7216  0395  085F               	movf	??_DimmerLights_PIR_Control,w
  7217  0396  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7218  0397  3001               	movlw	1
  7219  0398  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7220                           
  7221                           ;Dimmer_B1.c: 1478: setDimmerIntr_Dimming_RF(1, 1);
  7222  039B  1283               	bcf	3,5	;RP0=0, select bank0
  7223  039C  1303               	bcf	3,6	;RP1=0, select bank0
  7224  039D  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7225  039E  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7226  039F  3001               	movlw	1
  7227  03A0  158A  26D9  118A   	fcall	_setDimmerIntr_Dimming_RF
  7228                           
  7229                           ;Dimmer_B1.c: 1479: Dimmer.PIR_Close_Status = 1;
  7230  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  7231  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  7232  03A5  142E               	bsf	_Dimmer+1,0
  7233  03A6                     l4337:	
  7234                           
  7235                           ;Dimmer_B1.c: 1480: }
  7236                           ;Dimmer_B1.c: 1481: }
  7237                           ;Dimmer_B1.c: 1482: }
  7238                           ;Dimmer_B1.c: 1483: }
  7239                           ;Dimmer_B1.c: 1484: if (Dimmer.PIR_Open_Status == 1) {
  7240  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  7241  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  7242  03A8  1CAE               	btfss	_Dimmer+1,1
  7243  03A9  2BBB               	goto	l4343
  7244                           
  7245                           ;Dimmer_B1.c: 1485: Dimmer.PIR_Open_Status = 0;
  7246  03AA  10AE               	bcf	_Dimmer+1,1
  7247                           
  7248                           ;Dimmer_B1.c: 1486: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.8)));
  7249  03AB  3018               	movlw	24
  7250  03AC  00DF               	movwf	??_DimmerLights_PIR_Control
  7251  03AD  085F               	movf	??_DimmerLights_PIR_Control,w
  7252  03AE  00DC               	movwf	setDimmerIntr_MaxmumValue@value
  7253  03AF  3001               	movlw	1
  7254  03B0  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7255                           
  7256                           ;Dimmer_B1.c: 1487: setDimmerIntr_Dimming_RF(1, 1);
  7257  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  7258  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  7259  03B5  01D9               	clrf	setDimmerIntr_Dimming_RF@command
  7260  03B6  0AD9               	incf	setDimmerIntr_Dimming_RF@command,f
  7261  03B7  3001               	movlw	1
  7262  03B8  158A  26D9  118A   	fcall	_setDimmerIntr_Dimming_RF
  7263  03BB                     l4343:	
  7264                           
  7265                           ;Dimmer_B1.c: 1488: }
  7266                           ;Dimmer_B1.c: 1489: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7267  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  7268  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  7269  03BD  1C2E               	btfss	_Dimmer+1,0
  7270  03BE  0008               	return
  7271  03BF  1B20               	btfsc	_DimmerIntr1,6
  7272  03C0  0008               	return
  7273                           
  7274                           ;Dimmer_B1.c: 1490: Dimmer.PIR_Close_Status = 0;
  7275  03C1  102E               	bcf	_Dimmer+1,0
  7276                           
  7277                           ;Dimmer_B1.c: 1491: setDimmerLights_SwOn(1);
  7278  03C2  3001               	movlw	1
  7279  03C3  158A  27B7  118A   	fcall	_setDimmerLights_SwOn
  7280                           
  7281                           ;Dimmer_B1.c: 1492: setDimmerLights_SwOff(1);
  7282  03C6  3001               	movlw	1
  7283  03C7  118A  2791         	fcall	_setDimmerLights_SwOff
  7284  03C9  0008               	return
  7285  03CA                     __end_of_DimmerLights_PIR_Control:	
  7286                           
  7287                           	psect	text46
  7288  0FB7                     __ptext46:	
  7289 ;; *************** function _setDimmerLights_SwOn *****************
  7290 ;; Defined at:
  7291 ;;		line 653 in file "../src/Dimmer_B1.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  sw              1    wreg     unsigned char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  sw              1    2[BANK0 ] unsigned char 
  7296 ;;  idle            1    3[BANK0 ] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;		None               void
  7299 ;; Registers used:
  7300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7306 ;;      Params:         0       0       0       0
  7307 ;;      Locals:         0       2       0       0
  7308 ;;      Temps:          0       0       0       0
  7309 ;;      Totals:         0       2       0       0
  7310 ;;Total ram usage:        2 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    4
  7313 ;; This function calls:
  7314 ;;		_DimmerLights_SelectPointer
  7315 ;; This function is called by:
  7316 ;;		_DimmerLights_PIR_Control
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function _setDimmerLights_SwOn
  7322  0FB7                     _setDimmerLights_SwOn:	
  7323                           
  7324                           ;incstack = 0
  7325                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7326                           ;setDimmerLights_SwOn@sw stored from wreg
  7327  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  7328  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  7329  0FB9  00DB               	movwf	setDimmerLights_SwOn@sw
  7330                           
  7331                           ;Dimmer_B1.c: 654: char idle = 0;
  7332  0FBA  01DC               	clrf	setDimmerLights_SwOn@idle
  7333                           
  7334                           ;Dimmer_B1.c: 679: DimmerLights_SelectPointer(sw);
  7335  0FBB  085B               	movf	setDimmerLights_SwOn@sw,w
  7336  0FBC  158A  25C6  158A   	fcall	_DimmerLights_SelectPointer
  7337                           
  7338                           ;Dimmer_B1.c: 680: if (idle == 0) {
  7339  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  7340  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  7341  0FC1  08DC               	movf	setDimmerLights_SwOn@idle,f
  7342  0FC2  1D03               	skipz
  7343  0FC3  0008               	return
  7344                           
  7345                           ;Dimmer_B1.c: 681: DimmerLights->SwFlag = 1;
  7346  0FC4  0872               	movf	_DimmerLights,w
  7347  0FC5  0084               	movwf	4
  7348  0FC6  1383               	bcf	3,7	;select IRP bank0
  7349  0FC7  1400               	bsf	0,0
  7350                           
  7351                           ;Dimmer_B1.c: 682: if (DimmerLights->Status == 0) {
  7352  0FC8  0A72               	incf	_DimmerLights,w
  7353  0FC9  0084               	movwf	4
  7354  0FCA  1800               	btfsc	0,0
  7355  0FCB  2FD6               	goto	l4055
  7356                           
  7357                           ;Dimmer_B1.c: 683: DimmerLights->Status = 1;
  7358  0FCC  0A72               	incf	_DimmerLights,w
  7359  0FCD  0084               	movwf	4
  7360  0FCE  1400               	bsf	0,0
  7361                           
  7362                           ;Dimmer_B1.c: 684: DimmerLights->Trigger = 1;
  7363  0FCF  0872               	movf	_DimmerLights,w
  7364  0FD0  0084               	movwf	4
  7365  0FD1  1480               	bsf	0,1
  7366                           
  7367                           ;Dimmer_B1.c: 685: DimmerLights->Switch = 1;
  7368  0FD2  0872               	movf	_DimmerLights,w
  7369  0FD3  0084               	movwf	4
  7370  0FD4  1500               	bsf	0,2
  7371                           
  7372                           ;Dimmer_B1.c: 686: } else {
  7373  0FD5  0008               	return
  7374  0FD6                     l4055:	
  7375                           
  7376                           ;Dimmer_B1.c: 687: DimmerLights->Status = 0;
  7377  0FD6  0A72               	incf	_DimmerLights,w
  7378  0FD7  0084               	movwf	4
  7379  0FD8  1000               	bcf	0,0
  7380  0FD9  0008               	return
  7381  0FDA                     __end_of_setDimmerLights_SwOn:	
  7382                           ;Dimmer_B1.c: 688: }
  7383                           ;Dimmer_B1.c: 689: ;;
  7384                           
  7385                           
  7386                           	psect	text47
  7387  0791                     __ptext47:	
  7388 ;; *************** function _setDimmerLights_SwOff *****************
  7389 ;; Defined at:
  7390 ;;		line 694 in file "../src/Dimmer_B1.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  sw              1    wreg     unsigned char 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  sw              1    2[BANK0 ] unsigned char 
  7395 ;; Return value:  Size  Location     Type
  7396 ;;		None               void
  7397 ;; Registers used:
  7398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7399 ;; Tracked objects:
  7400 ;;		On entry : 0/0
  7401 ;;		On exit  : 0/0
  7402 ;;		Unchanged: 0/0
  7403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7404 ;;      Params:         0       0       0       0
  7405 ;;      Locals:         0       1       0       0
  7406 ;;      Temps:          0       0       0       0
  7407 ;;      Totals:         0       1       0       0
  7408 ;;Total ram usage:        1 bytes
  7409 ;; Hardware stack levels used:    1
  7410 ;; Hardware stack levels required when called:    4
  7411 ;; This function calls:
  7412 ;;		_DimmerLights_SelectPointer
  7413 ;; This function is called by:
  7414 ;;		_DimmerLights_PIR_Control
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           
  7419                           ;psect for function _setDimmerLights_SwOff
  7420  0791                     _setDimmerLights_SwOff:	
  7421                           
  7422                           ;incstack = 0
  7423                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7424                           ;setDimmerLights_SwOff@sw stored from wreg
  7425  0791  1283               	bcf	3,5	;RP0=0, select bank0
  7426  0792  1303               	bcf	3,6	;RP1=0, select bank0
  7427  0793  00DB               	movwf	setDimmerLights_SwOff@sw
  7428                           
  7429                           ;Dimmer_B1.c: 695: DimmerLights_SelectPointer(sw);
  7430  0794  085B               	movf	setDimmerLights_SwOff@sw,w
  7431  0795  158A  25C6  118A   	fcall	_DimmerLights_SelectPointer
  7432                           
  7433                           ;Dimmer_B1.c: 697: if (DimmerLights->SwFlag == 1) {
  7434  0798  0872               	movf	_DimmerLights,w
  7435  0799  0084               	movwf	4
  7436  079A  1383               	bcf	3,7	;select IRP bank0
  7437  079B  1C00               	btfss	0,0
  7438  079C  0008               	return
  7439                           
  7440                           ;Dimmer_B1.c: 698: DimmerLights->SwFlag = 0;
  7441  079D  0872               	movf	_DimmerLights,w
  7442  079E  0084               	movwf	4
  7443  079F  1000               	bcf	0,0
  7444                           
  7445                           ;Dimmer_B1.c: 699: if (DimmerLights->Status == 1) {
  7446  07A0  0A72               	incf	_DimmerLights,w
  7447  07A1  0084               	movwf	4
  7448  07A2  1C00               	btfss	0,0
  7449  07A3  2FB2               	goto	l4067
  7450                           
  7451                           ;Dimmer_B1.c: 700: if (DimmerLights->DimmingSwFlag == 1) {
  7452  07A4  0872               	movf	_DimmerLights,w
  7453  07A5  0084               	movwf	4
  7454  07A6  1D80               	btfss	0,3
  7455  07A7  0008               	return
  7456                           
  7457                           ;Dimmer_B1.c: 701: DimmerLights->DimmingSwFlag = 0;
  7458  07A8  0872               	movf	_DimmerLights,w
  7459  07A9  0084               	movwf	4
  7460  07AA  1180               	bcf	0,3
  7461                           
  7462                           ;Dimmer_B1.c: 703: DimmerLights->DimmingTrigger = 1;
  7463  07AB  0872               	movf	_DimmerLights,w
  7464  07AC  0084               	movwf	4
  7465  07AD  1600               	bsf	0,4
  7466                           
  7467                           ;Dimmer_B1.c: 704: DimmerLights->DimmingSwitch = 0;
  7468  07AE  0872               	movf	_DimmerLights,w
  7469  07AF  0084               	movwf	4
  7470  07B0  1280               	bcf	0,5
  7471                           
  7472                           ;Dimmer_B1.c: 705: }
  7473                           ;Dimmer_B1.c: 706: } else {
  7474  07B1  0008               	return
  7475  07B2                     l4067:	
  7476                           
  7477                           ;Dimmer_B1.c: 708: DimmerLights->Trigger = 1;
  7478  07B2  0872               	movf	_DimmerLights,w
  7479  07B3  0084               	movwf	4
  7480  07B4  1480               	bsf	0,1
  7481                           
  7482                           ;Dimmer_B1.c: 709: DimmerLights->Switch = 0;
  7483  07B5  0872               	movf	_DimmerLights,w
  7484  07B6  0084               	movwf	4
  7485  07B7  1100               	bcf	0,2
  7486  07B8  0008               	return
  7487  07B9                     __end_of_setDimmerLights_SwOff:	
  7488                           
  7489                           	psect	text48
  7490  0DDE                     __ptext48:	
  7491 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7492 ;; Defined at:
  7493 ;;		line 89 in file "../src/Dimmer_B1.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  lights          1    wreg     unsigned char 
  7496 ;;  value           1    3[BANK0 ] unsigned char 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  lights          1    5[BANK0 ] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;		None               void
  7501 ;; Registers used:
  7502 ;;		wreg
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7508 ;;      Params:         0       1       0       0
  7509 ;;      Locals:         0       1       0       0
  7510 ;;      Temps:          0       1       0       0
  7511 ;;      Totals:         0       3       0       0
  7512 ;;Total ram usage:        3 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    3
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_setDimmerLights_Dimming
  7519 ;;		_DimmerLights_PIR_Control
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           
  7524                           ;psect for function _setDimmerIntr_MaxmumValue
  7525  0DDE                     _setDimmerIntr_MaxmumValue:	
  7526                           
  7527                           ;incstack = 0
  7528                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7529                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7530  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  7531  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  7532  0DE0  00DE               	movwf	setDimmerIntr_MaxmumValue@lights
  7533                           
  7534                           ;Dimmer_B1.c: 91: if (lights == 1) {
  7535  0DE1  085E               	movf	setDimmerIntr_MaxmumValue@lights,w
  7536  0DE2  3A01               	xorlw	1
  7537  0DE3  1D03               	skipz
  7538  0DE4  0008               	return
  7539                           
  7540                           ;Dimmer_B1.c: 92: DimmerIntr1.MaxmumValue = value;
  7541  0DE5  085C               	movf	setDimmerIntr_MaxmumValue@value,w
  7542  0DE6  00DD               	movwf	??_setDimmerIntr_MaxmumValue
  7543  0DE7  085D               	movf	??_setDimmerIntr_MaxmumValue,w
  7544  0DE8  00A5               	movwf	_DimmerIntr1+5
  7545  0DE9  0008               	return
  7546  0DEA                     __end_of_setDimmerIntr_MaxmumValue:	
  7547                           
  7548                           	psect	text49
  7549  0ED9                     __ptext49:	
  7550 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7551 ;; Defined at:
  7552 ;;		line 184 in file "../src/Dimmer_B1.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  lights          1    wreg     unsigned char 
  7555 ;;  command         1    0[BANK0 ] unsigned char 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  lights          1    2[BANK0 ] unsigned char 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;		None               void
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7567 ;;      Params:         0       1       0       0
  7568 ;;      Locals:         0       1       0       0
  7569 ;;      Temps:          0       1       0       0
  7570 ;;      Totals:         0       3       0       0
  7571 ;;Total ram usage:        3 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:    3
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_DimmerLights_PIR_Control
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           
  7582                           ;psect for function _setDimmerIntr_Dimming_RF
  7583  0ED9                     _setDimmerIntr_Dimming_RF:	
  7584                           
  7585                           ;incstack = 0
  7586                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7587                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7588  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  7589  0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  7590  0EDB  00DB               	movwf	setDimmerIntr_Dimming_RF@lights
  7591                           
  7592                           ;Dimmer_B1.c: 186: if (lights == 1) {
  7593  0EDC  085B               	movf	setDimmerIntr_Dimming_RF@lights,w
  7594  0EDD  3A01               	xorlw	1
  7595  0EDE  1D03               	skipz
  7596  0EDF  0008               	return
  7597                           
  7598                           ;Dimmer_B1.c: 187: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7599  0EE0  0859               	movf	setDimmerIntr_Dimming_RF@command,w
  7600  0EE1  3A01               	xorlw	1
  7601  0EE2  3000               	movlw	0
  7602  0EE3  1903               	skipnz
  7603  0EE4  3001               	movlw	1
  7604  0EE5  00DA               	movwf	??_setDimmerIntr_Dimming_RF
  7605  0EE6  0EDA               	swapf	??_setDimmerIntr_Dimming_RF,f
  7606  0EE7  0DDA               	rlf	??_setDimmerIntr_Dimming_RF,f
  7607  0EE8  0DDA               	rlf	??_setDimmerIntr_Dimming_RF,f
  7608  0EE9  0820               	movf	_DimmerIntr1,w
  7609  0EEA  065A               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7610  0EEB  39BF               	andlw	-65
  7611  0EEC  065A               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7612  0EED  00A0               	movwf	_DimmerIntr1
  7613  0EEE  0008               	return
  7614  0EEF                     __end_of_setDimmerIntr_Dimming_RF:	
  7615                           
  7616                           	psect	text50
  7617  0DD2                     __ptext50:	
  7618 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7619 ;; Defined at:
  7620 ;;		line 49 in file "../src/Dimmer_B1.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  lights          1    wreg     unsigned char 
  7623 ;;  value           1    0[BANK0 ] unsigned char 
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  lights          1    2[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;		None               void
  7628 ;; Registers used:
  7629 ;;		wreg
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7635 ;;      Params:         0       1       0       0
  7636 ;;      Locals:         0       1       0       0
  7637 ;;      Temps:          0       1       0       0
  7638 ;;      Totals:         0       3       0       0
  7639 ;;Total ram usage:        3 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    3
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_DimmerLights_PIR_Control
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function _setDimmerIntr_DimmingValue
  7651  0DD2                     _setDimmerIntr_DimmingValue:	
  7652                           
  7653                           ;incstack = 0
  7654                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7655                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7656  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  7657  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  7658  0DD4  00DB               	movwf	setDimmerIntr_DimmingValue@lights
  7659                           
  7660                           ;Dimmer_B1.c: 51: if (lights == 1) {
  7661  0DD5  085B               	movf	setDimmerIntr_DimmingValue@lights,w
  7662  0DD6  3A01               	xorlw	1
  7663  0DD7  1D03               	skipz
  7664  0DD8  0008               	return
  7665                           
  7666                           ;Dimmer_B1.c: 52: DimmerIntr1.DimmingValue = value;
  7667  0DD9  0859               	movf	setDimmerIntr_DimmingValue@value,w
  7668  0DDA  00DA               	movwf	??_setDimmerIntr_DimmingValue
  7669  0DDB  085A               	movf	??_setDimmerIntr_DimmingValue,w
  7670  0DDC  00A4               	movwf	_DimmerIntr1+4
  7671  0DDD  0008               	return
  7672  0DDE                     __end_of_setDimmerIntr_DimmingValue:	
  7673                           
  7674                           	psect	text51
  7675  0E59                     __ptext51:	
  7676 ;; *************** function _getDimmerLights_Status *****************
  7677 ;; Defined at:
  7678 ;;		line 1006 in file "../src/Dimmer_B1.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  lights          1    wreg     unsigned char 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  lights          1    2[BANK0 ] unsigned char 
  7683 ;;  status          1    3[BANK0 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      unsigned char 
  7686 ;; Registers used:
  7687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7693 ;;      Params:         0       0       0       0
  7694 ;;      Locals:         0       2       0       0
  7695 ;;      Temps:          0       0       0       0
  7696 ;;      Totals:         0       2       0       0
  7697 ;;Total ram usage:        2 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    4
  7700 ;; This function calls:
  7701 ;;		_DimmerLights_SelectPointer
  7702 ;; This function is called by:
  7703 ;;		_DimmerLights_PIR_Control
  7704 ;;		_Exception_Main
  7705 ;;		_PIR_Main
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           
  7710                           ;psect for function _getDimmerLights_Status
  7711  0E59                     _getDimmerLights_Status:	
  7712                           
  7713                           ;incstack = 0
  7714                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7715                           ;getDimmerLights_Status@lights stored from wreg
  7716  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  7717  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  7718  0E5B  00DB               	movwf	getDimmerLights_Status@lights
  7719                           
  7720                           ;Dimmer_B1.c: 1007: DimmerLights_SelectPointer(lights);
  7721  0E5C  085B               	movf	getDimmerLights_Status@lights,w
  7722  0E5D  158A  25C6         	fcall	_DimmerLights_SelectPointer
  7723                           
  7724                           ;Dimmer_B1.c: 1008: char status = DimmerLights->Status == 1 ? 1 : 0;
  7725  0E5F  0A72               	incf	_DimmerLights,w
  7726  0E60  0084               	movwf	4
  7727  0E61  3000               	movlw	0
  7728  0E62  1383               	bcf	3,7	;select IRP bank0
  7729  0E63  1800               	btfsc	0,0
  7730  0E64  3001               	movlw	1
  7731  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  7732  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  7733  0E67  00DC               	movwf	getDimmerLights_Status@status
  7734                           
  7735                           ;Dimmer_B1.c: 1009: return status;
  7736  0E68  085C               	movf	getDimmerLights_Status@status,w
  7737  0E69  0008               	return
  7738  0E6A                     __end_of_getDimmerLights_Status:	
  7739                           
  7740                           	psect	text52
  7741  0DC6                     __ptext52:	
  7742 ;; *************** function _DimmerLights_SelectPointer *****************
  7743 ;; Defined at:
  7744 ;;		line 576 in file "../src/Dimmer_B1.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  lights          1    wreg     unsigned char 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;  lights          1    1[BANK0 ] unsigned char 
  7749 ;; Return value:  Size  Location     Type
  7750 ;;		None               void
  7751 ;; Registers used:
  7752 ;;		wreg
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7758 ;;      Params:         0       0       0       0
  7759 ;;      Locals:         0       1       0       0
  7760 ;;      Temps:          0       1       0       0
  7761 ;;      Totals:         0       2       0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    3
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_setDimmerLights_SwOn
  7769 ;;		_setDimmerLights_SwOff
  7770 ;;		_setDimmerLights_Main
  7771 ;;		_getDimmerLights_Status
  7772 ;;		_setDimmerLights_DimmingOn
  7773 ;;		_setDimmerLights_Status
  7774 ;;		_setDimmerLights_DimmingRun
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           
  7779                           ;psect for function _DimmerLights_SelectPointer
  7780  0DC6                     _DimmerLights_SelectPointer:	
  7781                           
  7782                           ;incstack = 0
  7783                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7784                           ;DimmerLights_SelectPointer@lights stored from wreg
  7785  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  7786  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  7787  0DC8  00DA               	movwf	DimmerLights_SelectPointer@lights
  7788                           
  7789                           ;Dimmer_B1.c: 578: if (lights == 1) {
  7790  0DC9  085A               	movf	DimmerLights_SelectPointer@lights,w
  7791  0DCA  3A01               	xorlw	1
  7792  0DCB  1D03               	skipz
  7793  0DCC  0008               	return
  7794                           
  7795                           ;Dimmer_B1.c: 579: DimmerLights = &DimmerLights1;
  7796  0DCD  30CE               	movlw	_DimmerLights1& (0+255)
  7797  0DCE  00D9               	movwf	??_DimmerLights_SelectPointer
  7798  0DCF  0859               	movf	??_DimmerLights_SelectPointer,w
  7799  0DD0  00F2               	movwf	_DimmerLights
  7800  0DD1  0008               	return
  7801  0DD2                     __end_of_DimmerLights_SelectPointer:	
  7802                           
  7803                           	psect	text53
  7804  0DA1                     __ptext53:	
  7805 ;; *************** function _DimmerLights_Initialization *****************
  7806 ;; Defined at:
  7807 ;;		line 597 in file "../src/Dimmer_B1.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;		None               void
  7814 ;; Registers used:
  7815 ;;		wreg, status,2, status,0, pclath, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7821 ;;      Params:         0       0       0       0
  7822 ;;      Locals:         0       0       0       0
  7823 ;;      Temps:          0       0       0       0
  7824 ;;      Totals:         0       0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:    4
  7828 ;; This function calls:
  7829 ;;		_DimmerIntr_Initialization
  7830 ;;		_setDimmerLights_Initialization
  7831 ;; This function is called by:
  7832 ;;		_main
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           
  7837                           ;psect for function _DimmerLights_Initialization
  7838  0DA1                     _DimmerLights_Initialization:	
  7839                           
  7840                           ;Dimmer_B1.c: 599: setDimmerLights_Initialization(1);
  7841                           
  7842                           ;incstack = 0
  7843                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7844  0DA1  3001               	movlw	1
  7845  0DA2  158A  2583  158A   	fcall	_setDimmerLights_Initialization
  7846                           
  7847                           ;Dimmer_B1.c: 609: DimmerIntr_Initialization();
  7848  0DA5  158A  269E         	fcall	_DimmerIntr_Initialization
  7849  0DA7  0008               	return
  7850  0DA8                     __end_of_DimmerLights_Initialization:	
  7851                           
  7852                           	psect	text54
  7853  0D83                     __ptext54:	
  7854 ;; *************** function _setDimmerLights_Initialization *****************
  7855 ;; Defined at:
  7856 ;;		line 613 in file "../src/Dimmer_B1.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  lights          1    wreg     unsigned char 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  lights          1    0[COMMON] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;		None               void
  7863 ;; Registers used:
  7864 ;;		wreg
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7870 ;;      Params:         0       0       0       0
  7871 ;;      Locals:         0       0       0       0
  7872 ;;      Temps:          0       0       0       0
  7873 ;;      Totals:         0       0       0       0
  7874 ;;Total ram usage:        0 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    3
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_DimmerLights_Initialization
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           
  7885                           ;psect for function _setDimmerLights_Initialization
  7886  0D83                     _setDimmerLights_Initialization:	
  7887                           
  7888                           ;incstack = 0
  7889                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7890  0D83  0008               	return
  7891  0D84                     __end_of_setDimmerLights_Initialization:	
  7892                           
  7893                           	psect	text55
  7894  0E9E                     __ptext55:	
  7895 ;; *************** function _DimmerIntr_Initialization *****************
  7896 ;; Defined at:
  7897 ;;		line 7 in file "../src/Dimmer_B1.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;		None
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;		None               void
  7904 ;; Registers used:
  7905 ;;		wreg
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7911 ;;      Params:         0       0       0       0
  7912 ;;      Locals:         0       0       0       0
  7913 ;;      Temps:          0       1       0       0
  7914 ;;      Totals:         0       1       0       0
  7915 ;;Total ram usage:        1 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; Hardware stack levels required when called:    3
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_DimmerLights_Initialization
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function _DimmerIntr_Initialization
  7927  0E9E                     _DimmerIntr_Initialization:	
  7928                           
  7929                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  7930                           
  7931                           ;incstack = 0
  7932                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  7933  0E9E  3007               	movlw	7
  7934  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  7935  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  7936  0EA1  00D9               	movwf	??_DimmerIntr_Initialization
  7937  0EA2  0859               	movf	??_DimmerIntr_Initialization,w
  7938  0EA3  00A3               	movwf	_DimmerIntr1+3
  7939                           
  7940                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.8));
  7941  0EA4  3018               	movlw	24
  7942  0EA5  00D9               	movwf	??_DimmerIntr_Initialization
  7943  0EA6  0859               	movf	??_DimmerIntr_Initialization,w
  7944  0EA7  00A5               	movwf	_DimmerIntr1+5
  7945                           
  7946                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.8));
  7947  0EA8  3048               	movlw	72
  7948  0EA9  00D9               	movwf	??_DimmerIntr_Initialization
  7949  0EAA  0859               	movf	??_DimmerIntr_Initialization,w
  7950  0EAB  00A6               	movwf	_DimmerIntr1+6
  7951                           
  7952                           ;Dimmer_B1.c: 13: DimmerIntr1.DimmingValue = ((char)((100-70)*0.8));
  7953  0EAC  3018               	movlw	24
  7954  0EAD  00D9               	movwf	??_DimmerIntr_Initialization
  7955  0EAE  0859               	movf	??_DimmerIntr_Initialization,w
  7956  0EAF  00A4               	movwf	_DimmerIntr1+4
  7957  0EB0  0008               	return
  7958  0EB1                     __end_of_DimmerIntr_Initialization:	
  7959                           
  7960                           	psect	text56
  7961  0706                     __ptext56:	
  7962 ;; *************** function _CDS_Main *****************
  7963 ;; Defined at:
  7964 ;;		line 11 in file "../src/CDS_B1.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;		None
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;		None               void
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7978 ;;      Params:         0       0       0       0
  7979 ;;      Locals:         0       0       0       0
  7980 ;;      Temps:          0       3       0       0
  7981 ;;      Totals:         0       3       0       0
  7982 ;;Total ram usage:        3 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    3
  7985 ;; This function calls:
  7986 ;;		Nothing
  7987 ;; This function is called by:
  7988 ;;		_main
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function _CDS_Main
  7994  0706                     _CDS_Main:	
  7995                           
  7996                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  7997                           
  7998                           ;incstack = 0
  7999                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8000  0706  1283               	bcf	3,5	;RP0=0, select bank0
  8001  0707  1303               	bcf	3,6	;RP1=0, select bank0
  8002  0708  1C32               	btfss	__CDS,0
  8003  0709  0008               	return
  8004                           
  8005                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8006  070A  18B2               	btfsc	__CDS,1
  8007  070B  2F19               	goto	l123
  8008                           
  8009                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8010  070C  19B2               	btfsc	__CDS,3
  8011  070D  0008               	return
  8012                           
  8013                           ;CDS_B1.c: 16: _CDS.Time++;
  8014  070E  3001               	movlw	1
  8015  070F  00D9               	movwf	??_CDS_Main
  8016  0710  0859               	movf	??_CDS_Main,w
  8017  0711  07B3               	addwf	__CDS+1,f
  8018                           
  8019                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8020  0712  3005               	movlw	5
  8021  0713  0233               	subwf	__CDS+1,w
  8022  0714  1C03               	skipc
  8023  0715  0008               	return
  8024                           
  8025                           ;CDS_B1.c: 18: {
  8026                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8027  0716  01B3               	clrf	__CDS+1
  8028                           
  8029                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8030  0717  15B2               	bsf	__CDS,3
  8031                           
  8032                           ;CDS_B1.c: 21: }
  8033                           ;CDS_B1.c: 22: }
  8034                           ;CDS_B1.c: 23: } else {
  8035  0718  0008               	return
  8036  0719                     l123:	
  8037                           
  8038                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8039  0719  1CB2               	btfss	__CDS,1
  8040  071A  0008               	return
  8041                           
  8042                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8043  071B  10B2               	bcf	__CDS,1
  8044                           
  8045                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8046  071C  1A32               	btfsc	__CDS,4
  8047  071D  2F24               	goto	l4535
  8048                           
  8049                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8050  071E  0834               	movf	__CDS+2,w
  8051  071F  0235               	subwf	__CDS+3,w
  8052  0720  1C03               	skipc
  8053  0721  0008               	return
  8054                           
  8055                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8056  0722  1632               	bsf	__CDS,4
  8057                           
  8058                           ;CDS_B1.c: 29: }
  8059                           ;CDS_B1.c: 30: } else {
  8060  0723  0008               	return
  8061  0724                     l4535:	
  8062                           
  8063                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8064  0724  0834               	movf	__CDS+2,w
  8065  0725  3E9C               	addlw	156
  8066  0726  00D9               	movwf	??_CDS_Main
  8067  0727  30FF               	movlw	255
  8068  0728  1803               	skipnc
  8069  0729  3000               	movlw	0
  8070  072A  00DA               	movwf	??_CDS_Main+1
  8071  072B  085A               	movf	??_CDS_Main+1,w
  8072  072C  3A80               	xorlw	128
  8073  072D  00DB               	movwf	??_CDS_Main+2
  8074  072E  3080               	movlw	128
  8075  072F  025B               	subwf	??_CDS_Main+2,w
  8076  0730  1D03               	skipz
  8077  0731  2F34               	goto	u5385
  8078  0732  0835               	movf	__CDS+3,w
  8079  0733  0259               	subwf	??_CDS_Main,w
  8080  0734                     u5385:	
  8081  0734  1C03               	skipc
  8082  0735  0008               	return
  8083                           
  8084                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8085  0736  1283               	bcf	3,5	;RP0=0, select bank0
  8086  0737  1303               	bcf	3,6	;RP1=0, select bank0
  8087  0738  1232               	bcf	__CDS,4
  8088  0739  0008               	return
  8089  073A                     __end_of_CDS_Main:	
  8090                           
  8091                           	psect	text57
  8092  0D8D                     __ptext57:	
  8093 ;; *************** function _CDS_Initialization *****************
  8094 ;; Defined at:
  8095 ;;		line 7 in file "../src/CDS_B1.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;		None               void
  8102 ;; Registers used:
  8103 ;;		None
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8109 ;;      Params:         0       0       0       0
  8110 ;;      Locals:         0       0       0       0
  8111 ;;      Temps:          0       0       0       0
  8112 ;;      Totals:         0       0       0       0
  8113 ;;Total ram usage:        0 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    3
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_main
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           
  8124                           ;psect for function _CDS_Initialization
  8125  0D8D                     _CDS_Initialization:	
  8126                           
  8127                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8128                           
  8129                           ;incstack = 0
  8130                           ; Regs used in _CDS_Initialization: []
  8131  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  8132  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  8133  0D8F  1432               	bsf	__CDS,0
  8134  0D90  0008               	return
  8135  0D91                     __end_of_CDS_Initialization:	
  8136                           
  8137                           	psect	text58
  8138  0F1B                     __ptext58:	
  8139 ;; *************** function _ISR *****************
  8140 ;; Defined at:
  8141 ;;		line 116 in file "../src/MCU_B1.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;		None               void
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0, pclath, cstack
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8155 ;;      Params:         0       0       0       0
  8156 ;;      Locals:         0       0       0       0
  8157 ;;      Temps:          4       0       0       0
  8158 ;;      Totals:         4       0       0       0
  8159 ;;Total ram usage:        4 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    2
  8162 ;; This function calls:
  8163 ;;		_TMR1_ISR
  8164 ;; This function is called by:
  8165 ;;		Interrupt level 1
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           
  8170                           ;psect for function _ISR
  8171  0F1B                     _ISR:	
  8172                           
  8173                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8174  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  8175  0F1C  1303               	bcf	3,6	;RP1=0, select bank1
  8176  0F1D  1C0C               	btfss	12,0	;volatile
  8177  0F1E  2F26               	goto	i1l663
  8178  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  8179  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  8180  0F21  1C0C               	btfss	12,0	;volatile
  8181  0F22  2F26               	goto	i1l663
  8182                           
  8183                           ;MCU_B1.c: 126: TMR1_ISR();
  8184  0F23  118A  27E0  158A   	fcall	_TMR1_ISR
  8185  0F26                     i1l663:	
  8186                           ;MCU_B1.c: 127: }
  8187                           ;MCU_B1.c: 148: return;
  8188                           
  8189  0F26  0879               	movf	??_ISR+3,w
  8190  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  8191  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  8192  0F29  00FF               	movwf	127
  8193  0F2A  0878               	movf	??_ISR+2,w
  8194  0F2B  008A               	movwf	10
  8195  0F2C  0877               	movf	??_ISR+1,w
  8196  0F2D  0084               	movwf	4
  8197  0F2E  0E76               	swapf	??_ISR^(0+-128),w
  8198  0F2F  0083               	movwf	3
  8199  0F30  0EFE               	swapf	126,f
  8200  0F31  0E7E               	swapf	126,w
  8201  0F32  0009               	retfie
  8202  0F33                     __end_of_ISR:	
  8203                           
  8204                           	psect	intentry
  8205  0004                     __pintentry:	
  8206                           ;incstack = 0
  8207                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8208                           
  8209  0004                     interrupt_function:	
  8210  007E                     saved_w	set	btemp
  8211  0004  00FE               	movwf	btemp
  8212  0005  0E03               	swapf	3,w
  8213  0006  00F6               	movwf	??_ISR
  8214  0007  0804               	movf	4,w
  8215  0008  00F7               	movwf	??_ISR+1
  8216  0009  080A               	movf	10,w
  8217  000A  00F8               	movwf	??_ISR+2
  8218  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8219  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8220  000D  087F               	movf	btemp+1,w
  8221  000E  00F9               	movwf	??_ISR+3
  8222  000F  158A  2F1B         	ljmp	_ISR
  8223                           
  8224                           	psect	text59
  8225  07E0                     __ptext59:	
  8226 ;; *************** function _TMR1_ISR *****************
  8227 ;; Defined at:
  8228 ;;		line 236 in file "../src/MCU_B1.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;		None               void
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8242 ;;      Params:         0       0       0       0
  8243 ;;      Locals:         0       0       0       0
  8244 ;;      Temps:          0       0       0       0
  8245 ;;      Totals:         0       0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    1
  8249 ;; This function calls:
  8250 ;;		_DimmerLights_IOC_1
  8251 ;;		_DimmerLights_TMR_1
  8252 ;; This function is called by:
  8253 ;;		_ISR
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function _TMR1_ISR
  8259  07E0                     _TMR1_ISR:	
  8260                           
  8261                           ;MCU_B1.c: 238: TMR1H = (int)((65536-1480)/256);
  8262                           
  8263                           ;incstack = 0
  8264                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8265  07E0  30FA               	movlw	250
  8266  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  8267  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  8268  07E3  008F               	movwf	15	;volatile
  8269                           
  8270                           ;MCU_B1.c: 239: TMR1L = (int)((65536-1480)%256);
  8271  07E4  3038               	movlw	56
  8272  07E5  008E               	movwf	14	;volatile
  8273                           
  8274                           ;MCU_B1.c: 240: TMR1IF = 0;
  8275  07E6  100C               	bcf	12,0	;volatile
  8276                           
  8277                           ;MCU_B1.c: 245: DimmerLights_IOC_1();
  8278  07E7  158A  2649  118A   	fcall	_DimmerLights_IOC_1
  8279                           
  8280                           ;MCU_B1.c: 257: DimmerLights_TMR_1();
  8281  07EA  118A  2632  118A   	fcall	_DimmerLights_TMR_1
  8282                           
  8283                           ;MCU_B1.c: 271: Timer1.Count++;
  8284  07ED  3001               	movlw	1
  8285  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  8286  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  8287  07F0  07BC               	addwf	_Timer1+1,f
  8288  07F1  1803               	skipnc
  8289  07F2  0ABD               	incf	_Timer1+2,f
  8290  07F3  3000               	movlw	0
  8291  07F4  07BD               	addwf	_Timer1+2,f
  8292                           
  8293                           ;MCU_B1.c: 272: if (Timer1.Count == (int)(20*10)) {
  8294  07F5  30C8               	movlw	200
  8295  07F6  063C               	xorwf	_Timer1+1,w
  8296  07F7  043D               	iorwf	_Timer1+2,w
  8297  07F8  1D03               	skipz
  8298  07F9  0008               	return
  8299                           
  8300                           ;MCU_B1.c: 273: Timer1.Count = 0;
  8301  07FA  01BC               	clrf	_Timer1+1
  8302  07FB  01BD               	clrf	_Timer1+2
  8303                           
  8304                           ;MCU_B1.c: 274: Timer1.Timeout = 1;
  8305  07FC  143B               	bsf	_Timer1,0
  8306  07FD  0008               	return
  8307  07FE                     __end_of_TMR1_ISR:	
  8308                           
  8309                           	psect	text60
  8310  0632                     __ptext60:	
  8311 ;; *************** function _DimmerLights_TMR_1 *****************
  8312 ;; Defined at:
  8313 ;;		line 1203 in file "../src/Dimmer_B1.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;		None               void
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8327 ;;      Params:         0       0       0       0
  8328 ;;      Locals:         0       0       0       0
  8329 ;;      Temps:          1       0       0       0
  8330 ;;      Totals:         1       0       0       0
  8331 ;;Total ram usage:        1 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_TMR1_ISR
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function _DimmerLights_TMR_1
  8342  0632                     _DimmerLights_TMR_1:	
  8343                           
  8344                           ;Dimmer_B1.c: 1204: if (DimmerIntr1.Start == 1) {
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8348  0632  1283               	bcf	3,5	;RP0=0, select bank0
  8349  0633  1303               	bcf	3,6	;RP1=0, select bank0
  8350  0634  1D20               	btfss	_DimmerIntr1,2
  8351  0635  2E40               	goto	i1l3245
  8352                           
  8353                           ;Dimmer_B1.c: 1205: DimmerIntr1.Count++;
  8354  0636  3001               	movlw	1
  8355  0637  00F5               	movwf	??_DimmerLights_TMR_1
  8356  0638  0875               	movf	??_DimmerLights_TMR_1,w
  8357  0639  07A1               	addwf	_DimmerIntr1+1,f
  8358                           
  8359                           ;Dimmer_B1.c: 1206: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) + 1) {
  8360  063A  3049               	movlw	73
  8361  063B  0221               	subwf	_DimmerIntr1+1,w
  8362  063C  1C03               	skipc
  8363  063D  2E40               	goto	i1l3245
  8364                           
  8365                           ;Dimmer_B1.c: 1207: DimmerIntr1.Count = 0;
  8366  063E  01A1               	clrf	_DimmerIntr1+1
  8367                           
  8368                           ;Dimmer_B1.c: 1208: DimmerIntr1.Start = 0;
  8369  063F  1120               	bcf	_DimmerIntr1,2
  8370  0640                     i1l3245:	
  8371                           
  8372                           ;Dimmer_B1.c: 1209: }
  8373                           ;Dimmer_B1.c: 1210: }
  8374                           ;Dimmer_B1.c: 1212: if (DimmerIntr1.GO == 1) {
  8375  0640  1C20               	btfss	_DimmerIntr1,0
  8376  0641  2E4C               	goto	i1l383
  8377                           
  8378                           ;Dimmer_B1.c: 1213: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8379  0642  0824               	movf	_DimmerIntr1+4,w
  8380  0643  0221               	subwf	_DimmerIntr1+1,w
  8381  0644  1C03               	skipc
  8382  0645  2E7B               	goto	i1l386
  8383                           
  8384                           ;Dimmer_B1.c: 1214: DimmerIntr1.GO = 0;
  8385  0646  1020               	bcf	_DimmerIntr1,0
  8386                           
  8387                           ;Dimmer_B1.c: 1215: DimmerIntr1.Tune = 1;
  8388  0647  14A0               	bsf	_DimmerIntr1,1
  8389                           
  8390                           ;Dimmer_B1.c: 1217: if (DimmerIntr1.ControlStatus == 1) {
  8391  0648  1DA0               	btfss	_DimmerIntr1,3
  8392  0649  2E7B               	goto	i1l386
  8393                           
  8394                           ;Dimmer_B1.c: 1218: RB2 = 1;
  8395  064A  1506               	bsf	6,2	;volatile
  8396                           
  8397                           ;Dimmer_B1.c: 1220: }
  8398                           ;Dimmer_B1.c: 1221: }
  8399                           ;Dimmer_B1.c: 1222: } else {
  8400  064B  2E7B               	goto	i1l386
  8401  064C                     i1l383:	
  8402                           
  8403                           ;Dimmer_B1.c: 1223: if (DimmerIntr1.Tune == 1) {
  8404  064C  1CA0               	btfss	_DimmerIntr1,1
  8405  064D  2E7B               	goto	i1l386
  8406                           
  8407                           ;Dimmer_B1.c: 1224: DimmerIntr1.Tune = 0;
  8408  064E  10A0               	bcf	_DimmerIntr1,1
  8409                           
  8410                           ;Dimmer_B1.c: 1225: DimmerIntr1.TuneTime++;
  8411  064F  3001               	movlw	1
  8412  0650  00F5               	movwf	??_DimmerLights_TMR_1
  8413  0651  0875               	movf	??_DimmerLights_TMR_1,w
  8414  0652  07A2               	addwf	_DimmerIntr1+2,f
  8415                           
  8416                           ;Dimmer_B1.c: 1226: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8417  0653  0823               	movf	_DimmerIntr1+3,w
  8418  0654  0222               	subwf	_DimmerIntr1+2,w
  8419  0655  1C03               	skipc
  8420  0656  2E7B               	goto	i1l386
  8421                           
  8422                           ;Dimmer_B1.c: 1227: DimmerIntr1.TuneTime = 0;
  8423  0657  01A2               	clrf	_DimmerIntr1+2
  8424                           
  8425                           ;Dimmer_B1.c: 1228: if (DimmerIntr1.Dimming_Sw == 1) {
  8426  0658  1E20               	btfss	_DimmerIntr1,4
  8427  0659  2E68               	goto	i1l389
  8428                           
  8429                           ;Dimmer_B1.c: 1229: if (DimmerIntr1.Dimming_Status == 0) {
  8430  065A  1AA0               	btfsc	_DimmerIntr1,5
  8431  065B  2E62               	goto	i1l3269
  8432                           
  8433                           ;Dimmer_B1.c: 1230: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.8))) {
  8434  065C  3019               	movlw	25
  8435  065D  0224               	subwf	_DimmerIntr1+4,w
  8436  065E  1803               	btfsc	3,0
  8437  065F  2E6E               	goto	i1l3275
  8438                           
  8439                           ;Dimmer_B1.c: 1233: DimmerIntr1.Dimming_Status = 1;
  8440                           
  8441                           ;Dimmer_B1.c: 1232: } else {
  8442                           
  8443                           ;Dimmer_B1.c: 1231: DimmerIntr1.DimmingValue--;
  8444  0660  16A0               	bsf	_DimmerIntr1,5
  8445                           
  8446                           ;Dimmer_B1.c: 1234: }
  8447                           ;Dimmer_B1.c: 1235: } else {
  8448  0661  2E7B               	goto	i1l386
  8449  0662                     i1l3269:	
  8450                           
  8451                           ;Dimmer_B1.c: 1236: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.8))) {
  8452  0662  3048               	movlw	72
  8453  0663  0224               	subwf	_DimmerIntr1+4,w
  8454  0664  1C03               	btfss	3,0
  8455  0665  2E75               	goto	i1l3279
  8456                           
  8457                           ;Dimmer_B1.c: 1239: DimmerIntr1.Dimming_Status = 0;
  8458                           
  8459                           ;Dimmer_B1.c: 1238: } else {
  8460                           
  8461                           ;Dimmer_B1.c: 1237: DimmerIntr1.DimmingValue++;
  8462  0666  12A0               	bcf	_DimmerIntr1,5
  8463                           
  8464                           ;Dimmer_B1.c: 1240: }
  8465                           ;Dimmer_B1.c: 1241: }
  8466                           ;Dimmer_B1.c: 1242: } else if (DimmerIntr1.Dimming_RF == 1) {
  8467  0667  2E7B               	goto	i1l386
  8468  0668                     i1l389:	
  8469  0668  1F20               	btfss	_DimmerIntr1,6
  8470  0669  2E7B               	goto	i1l386
  8471                           
  8472                           ;Dimmer_B1.c: 1243: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8473  066A  0824               	movf	_DimmerIntr1+4,w
  8474  066B  0225               	subwf	_DimmerIntr1+5,w
  8475  066C  1803               	skipnc
  8476  066D  2E71               	goto	i1l3277
  8477  066E                     i1l3275:	
  8478                           
  8479                           ;Dimmer_B1.c: 1244: DimmerIntr1.DimmingValue--;
  8480  066E  3001               	movlw	1
  8481  066F  02A4               	subwf	_DimmerIntr1+4,f
  8482                           
  8483                           ;Dimmer_B1.c: 1245: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8484  0670  2E7B               	goto	i1l386
  8485  0671                     i1l3277:	
  8486  0671  0825               	movf	_DimmerIntr1+5,w
  8487  0672  0224               	subwf	_DimmerIntr1+4,w
  8488  0673  1803               	skipnc
  8489  0674  2E7A               	goto	i1l400
  8490  0675                     i1l3279:	
  8491                           
  8492                           ;Dimmer_B1.c: 1246: DimmerIntr1.DimmingValue++;
  8493  0675  3001               	movlw	1
  8494  0676  00F5               	movwf	??_DimmerLights_TMR_1
  8495  0677  0875               	movf	??_DimmerLights_TMR_1,w
  8496  0678  07A4               	addwf	_DimmerIntr1+4,f
  8497                           
  8498                           ;Dimmer_B1.c: 1247: } else {
  8499  0679  2E7B               	goto	i1l386
  8500  067A                     i1l400:	
  8501                           
  8502                           ;Dimmer_B1.c: 1248: DimmerIntr1.Dimming_RF = 0;
  8503  067A  1320               	bcf	_DimmerIntr1,6
  8504  067B                     i1l386:	
  8505                           
  8506                           ;Dimmer_B1.c: 1249: }
  8507                           ;Dimmer_B1.c: 1250: }
  8508                           ;Dimmer_B1.c: 1251: }
  8509                           ;Dimmer_B1.c: 1252: }
  8510                           ;Dimmer_B1.c: 1253: }
  8511                           ;Dimmer_B1.c: 1254: if (RB2 == 1) {
  8512  067B  1D06               	btfss	6,2	;volatile
  8513  067C  0008               	return
  8514                           
  8515                           ;Dimmer_B1.c: 1255: if (DimmerIntr1.Count >= ((char)((100-10)*0.8)) - 10) {
  8516  067D  303E               	movlw	62
  8517  067E  0221               	subwf	_DimmerIntr1+1,w
  8518  067F  1C03               	skipc
  8519  0680  0008               	return
  8520                           
  8521                           ;Dimmer_B1.c: 1256: RB2 = 0;
  8522  0681  1106               	bcf	6,2	;volatile
  8523  0682  0008               	return
  8524  0683                     __end_of_DimmerLights_TMR_1:	
  8525                           
  8526                           	psect	text61
  8527  0E49                     __ptext61:	
  8528 ;; *************** function _DimmerLights_IOC_1 *****************
  8529 ;; Defined at:
  8530 ;;		line 1262 in file "../src/Dimmer_B1.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;		None
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;		None
  8535 ;; Return value:  Size  Location     Type
  8536 ;;		None               void
  8537 ;; Registers used:
  8538 ;;		None
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8544 ;;      Params:         0       0       0       0
  8545 ;;      Locals:         0       0       0       0
  8546 ;;      Temps:          0       0       0       0
  8547 ;;      Totals:         0       0       0       0
  8548 ;;Total ram usage:        0 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_TMR1_ISR
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           
  8558                           ;psect for function _DimmerLights_IOC_1
  8559  0E49                     _DimmerLights_IOC_1:	
  8560                           
  8561                           ;Dimmer_B1.c: 1265: if (RA7 == 1) {
  8562                           
  8563                           ;incstack = 0
  8564                           ; Regs used in _DimmerLights_IOC_1: []
  8565  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  8566  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  8567  0E4B  1F85               	btfss	5,7	;volatile
  8568  0E4C  2E51               	goto	i1l407
  8569                           
  8570                           ;Dimmer_B1.c: 1266: if (Dimmer.PIR_DimmerSignal == 1) {
  8571  0E4D  1DAD               	btfss	_Dimmer,3
  8572  0E4E  0008               	return
  8573                           
  8574                           ;Dimmer_B1.c: 1267: Dimmer.PIR_DimmerSignal = 0;
  8575  0E4F  11AD               	bcf	_Dimmer,3
  8576                           
  8577                           ;Dimmer_B1.c: 1268: }
  8578                           ;Dimmer_B1.c: 1269: } else {
  8579  0E50  0008               	return
  8580  0E51                     i1l407:	
  8581                           
  8582                           ;Dimmer_B1.c: 1270: if (Dimmer.PIR_DimmerSignal == 0) {
  8583  0E51  19AD               	btfsc	_Dimmer,3
  8584  0E52  0008               	return
  8585                           
  8586                           ;Dimmer_B1.c: 1271: Dimmer.PIR_DimmerSignal = 1;
  8587  0E53  15AD               	bsf	_Dimmer,3
  8588                           
  8589                           ;Dimmer_B1.c: 1273: if (DimmerIntr1.Start == 0) {
  8590  0E54  1920               	btfsc	_DimmerIntr1,2
  8591  0E55  0008               	return
  8592                           
  8593                           ;Dimmer_B1.c: 1274: DimmerIntr1.Start = 1;
  8594  0E56  1520               	bsf	_DimmerIntr1,2
  8595                           
  8596                           ;Dimmer_B1.c: 1275: DimmerIntr1.GO = 1;
  8597  0E57  1420               	bsf	_DimmerIntr1,0
  8598  0E58  0008               	return
  8599  0E59                     __end_of_DimmerLights_IOC_1:	
  8600  007E                     btemp	set	126	;btemp
  8601  007E                     wtemp	set	126
  8602  007E                     wtemp0	set	126
  8603  0080                     wtemp1	set	128
  8604  0082                     wtemp2	set	130
  8605  0084                     wtemp3	set	132
  8606  0086                     wtemp4	set	134
  8607  0088                     wtemp5	set	136
  8608  007F                     wtemp6	set	127
  8609  007E                     ttemp	set	126
  8610  007E                     ttemp0	set	126
  8611  0081                     ttemp1	set	129
  8612  0084                     ttemp2	set	132
  8613  0087                     ttemp3	set	135
  8614  007F                     ttemp4	set	127
  8615  007E                     ltemp	set	126
  8616  007E                     ltemp0	set	126
  8617  0082                     ltemp1	set	130
  8618  0086                     ltemp2	set	134
  8619  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     21      78
    BANK1            80      0      54
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->___awdiv
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_setDimmerIntr_MaxmumValue
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _setDimmerIntr_MaxmumValue->_getDimmerIntr_DimmingValue
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19268
                                             16 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           3     3      0     613
                                              2 BANK0      3     3      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            7     6      1    2470
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     754
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     582
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0    1000
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         2     2      0    1000
                                              9 BANK0      2     2      0
                            ___awdiv
           _getMain_All_Error_Status
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     861
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            10    10      0    2816
                                              5 BANK0     10    10      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2386
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2386
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2501
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2501
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       4     4      0    2742
                                              5 BANK0      4     4      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2346
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    3986
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2506
                                              9 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              3     2      1    1314
                                              6 BANK0      3     2      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              6 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              3 BANK0      3     2      1
         _getDimmerIntr_DimmingValue (ARG)
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
         _getDimmerIntr_DimmingValue (ARG)
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
           _getDimmerIntr_DimmingValue (ARG)
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       ___awdiv
       _getMain_All_Error_Status
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      36       7       67.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      8E      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jan 13 13:36:29 2015

                            _WDT_Clearing 07FE                     __end_of_setCmd_Status 0F05  
                            ___awdiv@sign 005F                                        fsr 0004  
                    _setDimmerLights_Main 0522                                       l123 0719  
                                     l251 0E1C                      _setDimmerLights_SwOn 0FB7  
                                     l423 0392                                       l416 0373  
                                     l417 0357                                       l480 0F8A  
                                     l481 0F92                                       l812 0F5F  
                                     l808 0F63                                       l834 0F04  
                                     l828 06C5                                       l944 043C  
                                     l949 0439                                       _GIE 005F  
    __size_of_DimmerLights_Initialization 0007                                       _RB2 0032  
                                     _LED 0073                                       _RB3 0033  
                                     _RB4 0034                                       _RB5 0035  
                                     _RA7 002F                                       _PS0 0408  
                                     _PS1 0409                                       _PS2 040A  
                                     _ISR 0F1B                                       _PSA 040B  
                                     _WDT 003E                                       _Cmd 0070  
            getDimmerLights_Status@lights 005B                ??_setDimmerIntr_Dimming_RF 005A  
              ??_setDimmerIntr_Dimming_Sw 005A           setDimmerIntr_Dimming_RF@command 0059  
                                     fsr0 0004                                       indf 0000  
                         __end_of_ADC_Set 0DB6      setDimmerLights_Initialization@lights 0075  
            getDimmerLights_Status@status 005C       __end_of_setDimmerIntr_ControlStatus 0F1B  
             _setDimmerIntr_ControlStatus 0F05                                      ?_ISR 0075  
                   _setDimmerLights_OnOff 073A                                      l1022 0079  
                                    l1014 01EB                                      l1015 0073  
                                    l1024 008C                                      l1016 0053  
                                    l1017 0063                                      l4011 0E6F  
                                    l4015 0E74                                      l4023 0EF3  
                                    l4017 0E79                                      l4027 0EFF  
                                    l4115 04C2                                      l4123 04CA  
                                    l4221 058E                                      l4055 0FD6  
                                    l4303 0572                                      l4151 04F2  
                                    l4081 074B                                      l4305 0579  
                                    l4209 0F5B                                      l4129 04D3  
                                    l4137 04DB                                      l4067 07B2  
                                    l4147 04EE                                      l4155 04F6  
                                    l4227 0599                                      l4085 0753  
                                    l4181 0516                                      l4253 05D8  
                                    l4245 05C5                                      l4237 05A1  
                                    l4343 03BB                                      l4095 0FE7  
                                    l4159 04FE                                      l4239 05AF  
                                    l4337 03A6                                      l4177 0510  
                                    l4185 051C                                      l4249 05D0  
                                    l4273 0FB1                                      l4505 06F4  
                                    l4291 0547                                      l4371 0467  
                                    l4443 03E8                                      l4267 0FA8  
                                    l4293 054E                                      l4269 0FAB  
                                    l4509 06FF                                      l4621 027D  
                                    l4613 026D                                      l4605 025D  
                                    l4535 0724                                      l4391 04A1  
                                    l4375 046D                                      l4631 0294  
                                    l4385 047F                                      l4473 0429  
                                    l4617 0275                                      l4609 0265  
                                    l4387 048B                                      l4379 0473  
                                    l4811 01BF                                      l4483 0438  
                                    l4389 0493                                      l4661 0326  
                                    l4653 02FA                                      l4637 02B0  
                                    l4647 02DE                                      l4583 07D7  
                                    l4761 00D2                                      l4745 00AF  
                                    l4497 06D0                                      l4681 0F75  
                                    l4913 05F4                                      l4851 069D  
                                    l4763 00D3                                      l4499 06DE  
                                    l4667 0334                     _setDimmerLights_SwOff 0791  
                                    l4781 0127                                      l4773 0113  
                                    l4757 00C6                                      l4863 06BA  
                                    l4919 0610                                      l4857 06AC  
                                    l4793 0183                                      l4859 06B6  
                                    l4795 0192                     _myMain_Initialization 0003  
                            __CFG_WDTE$ON 0000                                      u5070 0488  
                                    u5090 049E                                      _PEIE 005E  
                                    u5255 06D3                                      u5275 06DF  
                                    u5285 06EB                                      u4735 05A4  
                                    u5295 06F5                                      u5385 0734  
                                    u4665 0ED3                                      u4755 05B0  
                                    u4765 05BC                                      u4775 05C6  
                                    u5835 00F1                                      u5845 0109  
                                    u5945 01DB                                      u5865 0144  
                                    u5875 0175                                      u5895 01A2  
                                    __CDS 0032                                      _WPUB 0095  
                                    __PIR 00A0                                      _Temp 0041  
                                    _main 05DF                                      btemp 007E  
                         __end_of_WDT_Set 0E3A                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                          __end_of_CDS_Main 073A  
            __size_of_Temp_Initialization 0003                                     ??_ISR 0076  
 __end_of_getDimmerLights_Allow_Condition 0D96  __size_of_getDimmerLights_Allow_Condition 0005  
       ??_getDimmerLights_Allow_Condition 0059          ?_getDimmerLights_Allow_Condition 0075  
         _getDimmerLights_Allow_Condition 0D91                    _getDimmerLights_Status 0E59  
                           __CFG_PLLEN$ON 0000                          __end_of_LED_Main 0D87  
                              _DimmerIntr 0071                     ?_setDimmerLights_Main 0075  
                        ??_setPIRLED_Main 005D                     ?_setDimmerLights_SwOn 0075  
                                   ?_main 0069                           __end_of___awdiv 05DF  
                                   _ADRES 001E                           ___awdiv@divisor 0059  
                                   _T1CON 0010                           __end_of___lwdiv 0706  
                                   i1l400 067A                                     i1l407 0E51  
                                   i1l383 064C                                     i1l386 067B  
                                   i1l389 0668                                     i1l663 0F26  
                         ___awdiv@counter 005E                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                   __end_of_Timeout_Counter 0ED9  
                                   _Light 0040                          __end_of_PIR_Main 01FE  
                        __end_of_TMR1_ISR 07FE                          __end_of_TMR1_Set 0E2C  
                                   _getAD 0F9B                          __end_of_WDT_Main 0E8C  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 0012             __end_of_setLED_Initialization 0E9E  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                         getPIR_AD@channel1 0067  
                       getPIR_AD@channel2 0062                         setTemp_Main@error 0063  
                         __initialization 0013                              __end_of_main 0632  
                        __end_of_Fosc_Set 0D9B            getMain_All_LightsStatus@status 0059  
            setDimmerLights_OnOff@command 005C                            _Exception_Main 0683  
                               ??_ADC_Set 0059                                    ??_main 006D  
             ?_setDimmerIntr_DimmingValue 0059              ??_DimmerLights_SelectPointer 0059  
      setDimmerIntr_ControlStatus@command 0059                   _setDimmerLights_Dimming 0FDA  
                             _DimmerIntr1 0020                  _getMain_All_LightsStatus 0DF6  
                  ?_setDimmerLights_OnOff 005C                                    ?_getAD 0059  
                  ?_setDimmerLights_SwOff 0075                    ?_myMain_Initialization 0075  
                                  _ADCON0 001F                                    _ADCON1 009F  
                        ___awdiv@dividend 005B                                 ??_WDT_Set 0059  
                                  _ANSELA 0185                                    _ANSELB 0186  
                _getMain_All_Error_Status 0F4B                                    i1l3245 0640  
                                  i1l3275 066E                                    i1l3277 0671  
                                  i1l3269 0662                                    i1l3279 0675  
                                  _FVRCON 009D      getDimmerLights_Allow_Condition@allow 0059  
                                  _PIRLED 0037                                    _OSCCON 0090  
                                  _TMR1IE 0460                                    _TMR1IF 0060  
                                  _IO_Set 0F33               ??_setDimmerIntr_MaxmumValue 005D  
                                  _Dimmer 002D                     __end_of_getCmd_Status 0E7B  
              __end_of_Mcu_Initialization 0E49                                    _Timer1 003B  
             __size_of_CDS_Initialization 0004                    __end_of_Exception_Main 06C6  
                    Exception_Main@lights 005F                                 ??___awdiv 005D  
                               ??___lwdiv 005D                    ??_setDimmerLights_Main 0062  
                  ??_setDimmerLights_SwOn 005B                                    _setLED 04B1  
                                  _myMain 0027         __size_of_DimmerLights_PIR_Control 0094  
                        ___awdiv@quotient 0060                        __size_of_Temp_Main 0003  
               ?_DimmerLights_PIR_Control 0075          ??_setDimmerLights_Initialization 0059  
         ?_setDimmerLights_Initialization 0075          __end_of_setDimmerIntr_Dimming_RF 0EEF  
        __end_of_setDimmerIntr_Dimming_Sw 0EC5                                    saved_w 007E  
                        ?_Timeout_Counter 0075               __size_of_DimmerLights_IOC_1 0010  
             __size_of_DimmerLights_TMR_1 0051                   __size_of_LedPointSelect 001C  
                               ?_CDS_Main 0075           setDimmerIntr_Dimming_Sw@command 0059  
             __size_of_PIR_Initialization 000D                   __end_of__initialization 0024  
         getDimmerIntr_DimmingValue@value 005B           setDimmerIntr_DimmingValue@value 0059  
                               ?_LED_Main 0075                             ?_my_MainTimer 0075  
            ?_DimmerLights_Initialization 0075                ?_DimmerIntr_Initialization 0075  
                          __pcstackCOMMON 0075                        __size_of_getCDS_AD 002A  
                         ?_Exception_Main 0075                             __end_of_getAD 0FB7  
                               ?_PIR_Main 0075                                 ?_TMR1_ISR 0075  
                               ?_TMR1_Set 0075                        _LED_Initialization 0DEA  
                      __size_of_getPIR_AD 0138                 ??_setDimmerLights_Dimming 0060  
                               ?_WDT_Main 0075         setDimmerIntr_ControlStatus@lights 005B  
               _setDimmerIntr_MaxmumValue 0DDE                __end_of_set_TimeoutCleared 0DA1  
         setDimmerIntr_MaxmumValue@lights 005E                       ?_LED_Initialization 0075  
                                 ??_getAD 005A                       _Temp_Initialization 0D87  
                              ??_CDS_Main 0059                                __pbssBANK0 0020  
                              __pbssBANK1 00A0                                 ?_Fosc_Set 0075  
                       __end_of_Temp_Main 0D8D                                   ?_IO_Set 0075  
                         __CFG_VCAPEN$DIS 0000                            ??_my_MainTimer 0059  
                              ??_LED_Main 005F                      ??_LED_Initialization 005E  
                            _DimmerLights 0072                         LedPointSelect@led 005A  
                 ?_getDimmerLights_Status 0075                                __pmaintext 05DF  
                    ?_Temp_Initialization 0075         __end_of_DimmerIntr_Initialization 0EB1  
                    PIR_Main@LightsStatus 0067             ??_DimmerLights_Initialization 005A  
                              ??_PIR_Main 005E                                ??_TMR1_ISR 0076  
                           ?_setTemp_Main 0075                                ??_TMR1_Set 0059  
                              __pintentry 0004                                   ?_setLED 005B  
                                 _ADC_Set 0DAF                                _getTemp_AD 07B9  
      __end_of_DimmerLights_SelectPointer 0DD2                _DimmerLights_SelectPointer 0DC6  
                              ??_WDT_Main 0059                    __size_of_getCDS_Status 0008  
           setDimmerLights_Dimming@lights 0061             setDimmerLights_Dimming@status 005F  
   getDimmerLights_Allow_Condition@lights 0075                         __end_of_getCDS_AD 0791  
                                 _WDT_Set 0E2C                    __size_of_setCmd_Status 0016  
                              ??_Fosc_Set 0059                         __end_of_getPIR_AD 0336  
         __end_of_setDimmerLights_Dimming 1000                       getCmd_Status@number 0059  
                         __size_of_IO_Set 0018                       setCmd_Status@number 005B  
       __size_of_setDimmerIntr_Dimming_RF 0016         __size_of_setDimmerIntr_Dimming_Sw 0014  
                              getCDS_AD@i 005E                                getCDS_AD@j 005F  
               ?_setDimmerIntr_Dimming_RF 0059                 ?_setDimmerIntr_Dimming_Sw 0059  
                                 _VarLED1 0051                                   _VarLED2 0055  
          __end_of_getDimmerLights_Status 0E6A                     ??_Temp_Initialization 0059  
                          ??_setTemp_Main 0062                                   ___awdiv 0582  
                                 ___lwdiv 06C6                ??_getMain_All_LightsStatus 0059  
                             PIR_Main@cds 0066                           __size_of_setLED 0071  
                                 __ptext0 0000                                   __ptext1 0F65  
                                 __ptext2 0003                                   __ptext3 07B9  
                                 __ptext4 01FE                                   __ptext5 06C6  
                                 __ptext6 0767                                   __ptext7 0F9B  
                                 __ptext8 0D9B                                   __ptext9 0EC5  
                              getPIR_AD@i 0068                                getPIR_AD@j 0066  
                            __size_of_ISR 0018                ??_getMain_All_Error_Status 0059  
                 ??_setDimmerLights_OnOff 005D                   ??_setDimmerLights_SwOff 005B  
                 ??_myMain_Initialization 0059                         _DimmerLights_Main 0DA8  
                ??_setTemp_Initialization 0059                        ?_DimmerLights_Main 0075  
                          _LedPointSelect 0F7F                                   clrloop0 0DBF  
                    end_of_initialization 0024                       ??_DimmerLights_Main 0063  
                  setDimmerLights_SwOn@sw 005B                             _getCDS_Status 0DB6  
        __end_of_DimmerLights_PIR_Control 03CA                     _setLED_Initialization 0E8C  
                           _setCmd_Status 0EEF                               ?_getTemp_AD 0075  
                setLED_Initialization@led 005D                 __end_of_DimmerLights_Main 0DAF  
                      _Mcu_Initialization 0E3A                      __end_of_my_MainTimer 0F7F  
                  __end_of_LedPointSelect 0F9B                       setPIRLED_Main@count 005E  
        setDimmerIntr_DimmingValue@lights 005B          getDimmerIntr_DimmingValue@lights 005A  
                     ?_Mcu_Initialization 0075                   __size_of_setPIRLED_Main 0071  
      __size_of_setDimmerIntr_MaxmumValue 000C            setDimmerIntr_Dimming_RF@lights 005B  
         getMain_All_Error_Status@command 005A                         __size_of_CDS_Main 0034  
                          ?_getCDS_Status 0075                          ??_Exception_Main 005E  
                          __end_of_IO_Set 0F4B                __end_of_CDS_Initialization 0D91  
                       __size_of_LED_Main 0003               ??_DimmerIntr_Initialization 0059  
                    ??_Mcu_Initialization 005A                             ?_WDT_Clearing 0075  
                          ?_setCmd_Status 0059       __size_of_getDimmerIntr_DimmingValue 000E  
                       __size_of_PIR_Main 01D7                         __size_of_TMR1_ISR 001E  
        DimmerLights_SelectPointer@lights 005A                         __size_of_TMR1_Set 000E  
           __size_of_setDimmerLights_Main 0060                            __end_of_setLED 0522  
           __size_of_setDimmerLights_SwOn 0023                __end_of_DimmerLights_IOC_1 0E59  
                       __size_of_WDT_Main 0011                __end_of_DimmerLights_TMR_1 0683  
                     start_initialization 0013                           ?_LedPointSelect 0075  
                             __end_of_ISR 0F33                    __size_of_getCmd_Status 0011  
              __end_of_PIR_Initialization 0E10              ?_setDimmerIntr_ControlStatus 0059  
         __size_of_setTemp_Initialization 0001                       getCDS_Status@status 0059  
                    __end_of_setTemp_Main 0440                        _set_TimeoutCleared 0D9B  
       __end_of_setDimmerIntr_MaxmumValue 0DEA                                  ??_IO_Set 0059  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 004D  
                     __size_of_getTemp_AD 0027                    ?_setLED_Initialization 0075  
                       __size_of_Fosc_Set 0005                                 _Temp_Main 0D8A  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 0059  
                     Exception_Main@count 0060                       Exception_Main@error 0061  
                _DimmerLights_PIR_Control 0336          __end_of_getMain_All_LightsStatus 0E03  
                                ??_setLED 005C                                  ?_ADC_Set 0075  
             ?_DimmerLights_SelectPointer 0075          __end_of_getMain_All_Error_Status 0F65  
              __size_of_DimmerLights_Main 0007            setDimmerIntr_Dimming_Sw@lights 005B  
                             __pbssCOMMON 0070                                 ___latbits 0001  
                           __pcstackBANK0 0059                      ??_set_TimeoutCleared 0059  
               _DimmerIntr_Initialization 0E9E                                  ?_WDT_Set 0075  
                         ??_getCDS_Status 0059             ??_setDimmerIntr_ControlStatus 005A  
          setDimmerIntr_MaxmumValue@value 005C                             _DimmerLights1 00CE  
                           PIR_Main@error 0063                                 _getCDS_AD 0767  
                               _getPIR_AD 01FE               __size_of_LED_Initialization 000C  
                              ?_Temp_Main 0075                          ___lwdiv@dividend 005B  
                           _getCmd_Status 0E6A                           ??_setCmd_Status 005A  
                  _setTemp_Initialization 0002                             _PIR_Main$3352 0064  
                ?_setDimmerLights_Dimming 005F                                  ?___awdiv 0059  
                   __size_of_my_MainTimer 001A                                  ?___lwdiv 0059  
      __end_of_getDimmerIntr_DimmingValue 0E1E              ??_setDimmerIntr_DimmingValue 005A  
              _getDimmerIntr_DimmingValue 0E10            __size_of_setDimmerLights_OnOff 002D  
           __end_of_setDimmerLights_OnOff 0767            __size_of_setDimmerLights_SwOff 0028  
          __size_of_myMain_Initialization 0001             __end_of_setDimmerLights_SwOff 07B9  
           __end_of_myMain_Initialization 0004                            __size_of_getAD 001C  
                        ___lwdiv@quotient 005F                            _setPIRLED_Main 0440  
                                _CDS_Main 0706               __end_of_Temp_Initialization 0D8A  
                       interrupt_function 0004                                ?_getCDS_AD 005B  
                                _LED_Main 0D84                                 clear_ram0 0DBE  
                            _my_MainTimer 0F65                                ?_getPIR_AD 0062  
     __end_of_DimmerLights_Initialization 0DA8               _DimmerLights_Initialization 0DA1  
                          ?_getCmd_Status 0075                                  _GO_nDONE 00F9  
                       ??_Timeout_Counter 0059      __size_of_setDimmerIntr_ControlStatus 0016  
     __size_of_setDimmerIntr_DimmingValue 000C                                  _PIR_Main 0027  
                                _TMR1_ISR 07E0                                  _TMR1_Set 0E1E  
                            ??_getTemp_AD 005B                                  _WDT_Main 0E7B  
                        __size_of_ADC_Set 0007                     __size_of_setTemp_Main 0076  
                  __end_of_setPIRLED_Main 04B1            getMain_All_Error_Status@status 005D  
                             getAD@adcon0 005A                               getAD@adcon1 0059  
                    __end_of_WDT_Clearing 0800         __size_of_getMain_All_LightsStatus 000D  
               ?_getMain_All_LightsStatus 0075                  _setDimmerIntr_Dimming_RF 0ED9  
             setDimmerLights_OnOff@lights 005D                  _setDimmerIntr_Dimming_Sw 0EB1  
                                _Fosc_Set 0D96                          __size_of_WDT_Set 000E  
       __size_of_getMain_All_Error_Status 001A                 ?_getMain_All_Error_Status 0075  
                      __end_of_getTemp_AD 07E0       __size_of_DimmerLights_SelectPointer 000C  
                                _SwDetect 0074                               ??_Temp_Main 0064  
                        getCmd_Status@cmd 005A                          setCmd_Status@cmd 0059  
           _getMain_All_Error_Status$2587 005B                                 setLED@led 005C  
                            _setTemp_Main 03CA                          __size_of___awdiv 005D  
                        __size_of___lwdiv 0040                  setDimmerLights_SwOn@idle 005C  
                        ??_LedPointSelect 0059                        _CDS_Initialization 0D8D  
                       getTemp_AD@channel 005D                           ?_setPIRLED_Main 0075  
                         ___lwdiv@divisor 0059                       ?_CDS_Initialization 0075  
                         ___lwdiv@counter 005E                                  __ptext10 0E7B  
                                __ptext11 07FE                                  __ptext20 0E3A  
                                __ptext12 0D8A                                  __ptext21 0E2C  
                                __ptext13 03CA                                  __ptext30 0683  
                                __ptext22 0E1E                                  __ptext14 0582  
                                __ptext31 04B1                                  __ptext23 0F33  
                                __ptext15 0D87                                  __ptext40 0E6A  
                                __ptext32 0F7F                                  __ptext24 0D96  
                                __ptext16 0002                                  __ptext41 0FDA  
                                __ptext33 0F4B                                  __ptext25 0DAF  
                                __ptext17 0027                                  __ptext50 0DD2  
                                __ptext42 0EB1                                  __ptext34 0DA8  
                                __ptext26 0D84                                  __ptext18 0DB6  
                                __ptext51 0E59                                  __ptext43 0E10  
                                __ptext35 0522                                  __ptext27 0440  
                                __ptext19 0E03                                  __ptext60 0632  
                                __ptext52 0DC6                                  __ptext44 0D91  
                                __ptext36 073A                                  __ptext28 0DEA  
                                __ptext61 0E49                                  __ptext53 0DA1  
                                __ptext45 0336                                  __ptext37 0F05  
                                __ptext29 0E8C                                  __ptext54 0D83  
                                __ptext46 0FB7                                  __ptext38 0EEF  
                                __ptext55 0E9E                                  __ptext47 0791  
                                __ptext39 0DF6                                  __ptext56 0706  
                                __ptext48 0DDE                                  __ptext57 0D8D  
                                __ptext49 0ED9                                  __ptext58 0F1B  
                                __ptext59 07E0                   ??_setLED_Initialization 005D  
                ??_getDimmerLights_Status 005B              __end_of_setDimmerLights_Main 0582  
                      _DimmerLights_IOC_1 0E49              __end_of_setDimmerLights_SwOn 0FDA  
              ??_DimmerLights_PIR_Control 005F                               ??_getCDS_AD 005C  
                           setLED@command 005B                             __size_of_main 0053  
      __size_of_DimmerIntr_Initialization 0013                           ??_getCmd_Status 0059  
                      _DimmerLights_TMR_1 0632                setDimmerLights_Main@lights 0062  
                             ??_getPIR_AD 0063                        _PIR_Initialization 0E03  
                    ??_CDS_Initialization 0059                       ?_DimmerLights_IOC_1 0075  
                     ?_DimmerLights_TMR_1 0075               __size_of_Mcu_Initialization 000F  
                     ?_PIR_Initialization 0075                                  main@argc 0069  
                                main@argv 006B        __end_of_setDimmerIntr_DimmingValue 0DDE  
              _setDimmerIntr_DimmingValue 0DD2                      ??_DimmerLights_IOC_1 0075  
                    ??_DimmerLights_TMR_1 0075              ??_getDimmerIntr_DimmingValue 0059  
                 setDimmerLights_SwOff@sw 005B                      ??_PIR_Initialization 0059  
                                intlevel1 0000    __end_of_setDimmerLights_Initialization 0D84  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0D83  
              ?_setDimmerIntr_MaxmumValue 005C                   ?_setTemp_Initialization 0075  
                 __size_of_Exception_Main 0043                     __size_of_WDT_Clearing 0002  
             ?_getDimmerIntr_DimmingValue 0075          __size_of_setDimmerLights_Dimming 0026  
             __size_of_set_TimeoutCleared 0006                        __CFG_FOSC$INTOSCIO 0000  
                         _Timeout_Counter 0EC5           __size_of_getDimmerLights_Status 0011  
              __end_of_LED_Initialization 0DF6                     __end_of_getCDS_Status 0DBE  
          __end_of_setTemp_Initialization 0003                         getCDS_AD@channel1 0060  
                       getCDS_AD@channel2 005B  
