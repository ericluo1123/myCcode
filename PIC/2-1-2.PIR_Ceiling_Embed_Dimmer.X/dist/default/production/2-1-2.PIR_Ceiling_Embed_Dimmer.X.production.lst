

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Feb 13 15:11:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0186                     	;# 
   144  018C                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0096                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009F                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0186                     	;# 
   213  018C                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0096                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009F                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0186                     	;# 
   282  018C                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0096                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009F                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  0185                     	;# 
   350  0186                     	;# 
   351  018C                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  0089                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  008E                     	;# 
   394  008F                     	;# 
   395  0090                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0093                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0095                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0096                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009F                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  0185                     	;# 
   419  0186                     	;# 
   420  018C                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  008F                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0095                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0096                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009F                     	;# 
   479  0108                     	;# 
   480  0109                     	;# 
   481  010C                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0186                     	;# 
   489  018C                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0096                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009F                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010D                     	;# 
   554  010E                     	;# 
   555  010F                     	;# 
   556  0185                     	;# 
   557  0186                     	;# 
   558  018C                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0096                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009F                     	;# 
   617  0108                     	;# 
   618  0109                     	;# 
   619  010C                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0186                     	;# 
   627  018C                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0014                     	;# 
   649  0015                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  0081                     	;# 
   663  0085                     	;# 
   664  0086                     	;# 
   665  0087                     	;# 
   666  0089                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0096                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009F                     	;# 
   686  0108                     	;# 
   687  0109                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0186                     	;# 
   696  018C                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000E                     	;# 
   712  000F                     	;# 
   713  0010                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0014                     	;# 
   718  0015                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001D                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  0081                     	;# 
   732  0085                     	;# 
   733  0086                     	;# 
   734  0087                     	;# 
   735  0089                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0096                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009F                     	;# 
   755  0108                     	;# 
   756  0109                     	;# 
   757  010C                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010F                     	;# 
   763  0185                     	;# 
   764  0186                     	;# 
   765  018C                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0095                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0096                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009F                     	;# 
   824  0108                     	;# 
   825  0109                     	;# 
   826  010C                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0186                     	;# 
   834  018C                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000D                     	;# 
   848  000E                     	;# 
   849  000E                     	;# 
   850  000F                     	;# 
   851  0010                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0013                     	;# 
   855  0014                     	;# 
   856  0015                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0017                     	;# 
   860  0018                     	;# 
   861  0019                     	;# 
   862  001A                     	;# 
   863  001B                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  001D                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  0081                     	;# 
   870  0085                     	;# 
   871  0086                     	;# 
   872  0087                     	;# 
   873  0089                     	;# 
   874  008C                     	;# 
   875  008D                     	;# 
   876  008E                     	;# 
   877  008F                     	;# 
   878  0090                     	;# 
   879  0091                     	;# 
   880  0092                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0096                     	;# 
   888  0098                     	;# 
   889  0099                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009F                     	;# 
   893  0108                     	;# 
   894  0109                     	;# 
   895  010C                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010D                     	;# 
   899  010E                     	;# 
   900  010F                     	;# 
   901  0185                     	;# 
   902  0186                     	;# 
   903  018C                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0009                     	;# 
   913  000A                     	;# 
   914  000B                     	;# 
   915  000C                     	;# 
   916  000D                     	;# 
   917  000E                     	;# 
   918  000E                     	;# 
   919  000F                     	;# 
   920  0010                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0014                     	;# 
   925  0015                     	;# 
   926  0015                     	;# 
   927  0016                     	;# 
   928  0017                     	;# 
   929  0018                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001B                     	;# 
   934  001C                     	;# 
   935  001D                     	;# 
   936  001E                     	;# 
   937  001F                     	;# 
   938  0081                     	;# 
   939  0085                     	;# 
   940  0086                     	;# 
   941  0087                     	;# 
   942  0089                     	;# 
   943  008C                     	;# 
   944  008D                     	;# 
   945  008E                     	;# 
   946  008F                     	;# 
   947  0090                     	;# 
   948  0091                     	;# 
   949  0092                     	;# 
   950  0093                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0095                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009C                     	;# 
   960  009D                     	;# 
   961  009F                     	;# 
   962  0108                     	;# 
   963  0109                     	;# 
   964  010C                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  010F                     	;# 
   970  0185                     	;# 
   971  0186                     	;# 
   972  018C                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  000E                     	;# 
   988  000F                     	;# 
   989  0010                     	;# 
   990  0011                     	;# 
   991  0012                     	;# 
   992  0013                     	;# 
   993  0014                     	;# 
   994  0015                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  001D                     	;# 
  1005  001E                     	;# 
  1006  001F                     	;# 
  1007  0081                     	;# 
  1008  0085                     	;# 
  1009  0086                     	;# 
  1010  0087                     	;# 
  1011  0089                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  008F                     	;# 
  1016  0090                     	;# 
  1017  0091                     	;# 
  1018  0092                     	;# 
  1019  0093                     	;# 
  1020  0093                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0096                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009C                     	;# 
  1029  009D                     	;# 
  1030  009F                     	;# 
  1031  0108                     	;# 
  1032  0109                     	;# 
  1033  010C                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  010F                     	;# 
  1039  0185                     	;# 
  1040  0186                     	;# 
  1041  018C                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  000E                     	;# 
  1057  000F                     	;# 
  1058  0010                     	;# 
  1059  0011                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0015                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0017                     	;# 
  1067  0018                     	;# 
  1068  0019                     	;# 
  1069  001A                     	;# 
  1070  001B                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001D                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  0081                     	;# 
  1077  0085                     	;# 
  1078  0086                     	;# 
  1079  0087                     	;# 
  1080  0089                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  008F                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0093                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0095                     	;# 
  1093  0096                     	;# 
  1094  0096                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009F                     	;# 
  1100  0108                     	;# 
  1101  0109                     	;# 
  1102  010C                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  010F                     	;# 
  1108  0185                     	;# 
  1109  0186                     	;# 
  1110  018C                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000D                     	;# 
  1124  000E                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0015                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  001A                     	;# 
  1139  001B                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  0081                     	;# 
  1146  0085                     	;# 
  1147  0086                     	;# 
  1148  0087                     	;# 
  1149  0089                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008F                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0093                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0096                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009F                     	;# 
  1169  0108                     	;# 
  1170  0109                     	;# 
  1171  010C                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  0185                     	;# 
  1178  0186                     	;# 
  1179  018C                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000E                     	;# 
  1195  000F                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  0081                     	;# 
  1215  0085                     	;# 
  1216  0086                     	;# 
  1217  0087                     	;# 
  1218  0089                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008F                     	;# 
  1223  0090                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0096                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009F                     	;# 
  1238  0108                     	;# 
  1239  0109                     	;# 
  1240  010C                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0185                     	;# 
  1247  0186                     	;# 
  1248  018C                     	;# 
  1249  0000                     	;# 
  1250  0001                     	;# 
  1251  0002                     	;# 
  1252  0003                     	;# 
  1253  0004                     	;# 
  1254  0005                     	;# 
  1255  0006                     	;# 
  1256  0007                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  000E                     	;# 
  1264  000F                     	;# 
  1265  0010                     	;# 
  1266  0011                     	;# 
  1267  0012                     	;# 
  1268  0013                     	;# 
  1269  0014                     	;# 
  1270  0015                     	;# 
  1271  0015                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001B                     	;# 
  1279  001C                     	;# 
  1280  001D                     	;# 
  1281  001E                     	;# 
  1282  001F                     	;# 
  1283  0081                     	;# 
  1284  0085                     	;# 
  1285  0086                     	;# 
  1286  0087                     	;# 
  1287  0089                     	;# 
  1288  008C                     	;# 
  1289  008D                     	;# 
  1290  008E                     	;# 
  1291  008F                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0093                     	;# 
  1297  0094                     	;# 
  1298  0095                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0096                     	;# 
  1302  0098                     	;# 
  1303  0099                     	;# 
  1304  009C                     	;# 
  1305  009D                     	;# 
  1306  009F                     	;# 
  1307  0108                     	;# 
  1308  0109                     	;# 
  1309  010C                     	;# 
  1310  010C                     	;# 
  1311  010D                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010F                     	;# 
  1315  0185                     	;# 
  1316  0186                     	;# 
  1317  018C                     	;# 
  1318  001F                     _ADCON0	set	31
  1319  001E                     _ADRES	set	30
  1320  0005                     _PORTA	set	5
  1321  0006                     _PORTB	set	6
  1322  0007                     _PORTC	set	7
  1323  0010                     _T1CON	set	16
  1324  000F                     _TMR1H	set	15
  1325  000E                     _TMR1L	set	14
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002F                     _RA7	set	47
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0060                     _TMR1IF	set	96
  1335  009F                     _ADCON1	set	159
  1336  009D                     _FVRCON	set	157
  1337  0090                     _OSCCON	set	144
  1338  0085                     _TRISA	set	133
  1339  0086                     _TRISB	set	134
  1340  0087                     _TRISC	set	135
  1341  0095                     _WPUB	set	149
  1342  0408                     _PS0	set	1032
  1343  0409                     _PS1	set	1033
  1344  040A                     _PS2	set	1034
  1345  040B                     _PSA	set	1035
  1346  0460                     _TMR1IE	set	1120
  1347  0185                     _ANSELA	set	389
  1348  0186                     _ANSELB	set	390
  1349                           
  1350                           	psect	text0
  1351  0000                     __ptext0:	
  1352                           ; #config settings
  1353                           
  1354                           
  1355                           ;psect for function _DimmerLights_IOC_1
  1356  0000                     
  1357                           	psect	cinit
  1358  0013                     start_initialization:	
  1359  0013                     __initialization:	
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1363  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1364  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1365  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1366  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369  0018  1383               	bcf	3,7	;select IRP bank0
  1370  0019  3020               	movlw	low __pbssBANK0
  1371  001A  0084               	movwf	4
  1372  001B  3057               	movlw	low (__pbssBANK0+55)
  1373  001C  158A  25B4  118A   	fcall	clear_ram0
  1374                           
  1375                           ; Clear objects allocated to BANK1
  1376  001F  30A0               	movlw	low __pbssBANK1
  1377  0020  0084               	movwf	4
  1378  0021  30D2               	movlw	low (__pbssBANK1+50)
  1379  0022  158A  25B4         	fcall	clear_ram0
  1380  0024                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0024                     __end_of__initialization:	
  1384  0024  0183               	clrf	3
  1385  0025  118A  2DEC         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0070                     __pbssCOMMON:	
  1389  0070                     _Cmd:	
  1390  0070                     	ds	1
  1391  0071                     _DimmerIntr:	
  1392  0071                     	ds	1
  1393  0072                     _DimmerLights:	
  1394  0072                     	ds	1
  1395  0073                     _LED:	
  1396  0073                     	ds	1
  1397  0074                     _SwDetect:	
  1398  0074                     	ds	1
  1399                           
  1400                           	psect	bssBANK0
  1401  0020                     __pbssBANK0:	
  1402  0020                     _DimmerIntr1:	
  1403  0020                     	ds	12
  1404  002C                     _Dimmer:	
  1405  002C                     	ds	5
  1406  0031                     _myMain:	
  1407  0031                     	ds	5
  1408  0036                     _PIRLED:	
  1409  0036                     	ds	4
  1410  003A                     __CDS:	
  1411  003A                     	ds	4
  1412  003E                     _Timer1:	
  1413  003E                     	ds	3
  1414  0041                     _WDT:	
  1415  0041                     	ds	2
  1416  0043                     _Light:	
  1417  0043                     	ds	1
  1418  0044                     _Temp:	
  1419  0044                     	ds	7
  1420  004B                     _VarErrLED:	
  1421  004B                     	ds	4
  1422  004F                     _VarLED1:	
  1423  004F                     	ds	4
  1424  0053                     _VarLED2:	
  1425  0053                     	ds	4
  1426                           
  1427                           	psect	bssBANK1
  1428  00A0                     __pbssBANK1:	
  1429  00A0                     __PIR:	
  1430  00A0                     	ds	42
  1431  00CA                     _DimmerLights1:	
  1432  00CA                     	ds	8
  1433                           
  1434                           	psect	clrtext
  1435  0DB4                     clear_ram0:	
  1436                           ;	Called with FSR containing the base address, and
  1437                           ;	W with the last address+1
  1438                           
  1439  0DB4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1440  0DB5                     clrloop0:	
  1441  0DB5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1442  0DB6  0A84               	incf	4,f	;increment pointer
  1443  0DB7  0604               	xorwf	4,w	;XOR with final address
  1444  0DB8  1903               	btfsc	3,2	;have we reached the end yet?
  1445  0DB9  3400               	retlw	0	;all done for this memory range, return
  1446  0DBA  0604               	xorwf	4,w	;XOR again to restore value
  1447  0DBB  2DB5               	goto	clrloop0	;do the next byte
  1448                           
  1449                           	psect	cstackCOMMON
  1450  0075                     __pcstackCOMMON:	
  1451  0075                     ?_setDimmerLights_Initialization:	
  1452  0075                     ?_setDimmerLights_Main:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     ?_DimmerLights_PIR_Control:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0075                     ?_setLED_Initialization:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0075                     ?_setPIRLED_Main:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0075                     ?_Fosc_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0075                     ?_IO_Set:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0075                     ?_TMR1_Set:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0075                     ?_ADC_Set:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0075                     ?_WDT_Set:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0075                     ?_TMR1_ISR:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0075                     ?_Timeout_Counter:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0075                     ?_set_TimeoutCleared:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0075                     ?_WDT_Clearing:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0075                     ?_myMain_Initialization:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0075                     ?_Temp_Initialization:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0075                     ?_PIR_Initialization:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0075                     ?_getTemp_AD:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0075                     ?_my_MainTimer:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0075                     ?_Temp_Main:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0075                     ?_PIR_Main:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0075                     ?_Exception_Main:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0075                     ?_setTemp_Initialization:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0075                     ?_setTemp_Main:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0075                     ?_CDS_Initialization:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0075                     ?_CDS_Main:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0075                     ?_DimmerIntr_Initialization:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0075                     ?_DimmerLights_SelectPointer:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0075                     ?_DimmerLights_Initialization:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0075                     ?_setDimmerLights_SwOn:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0075                     ?_setDimmerLights_SwOff:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0075                     ?_DimmerLights_Main:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0075                     ?_DimmerLights_TMR_1:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0075                     ??_DimmerLights_TMR_1:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0075                     ?_DimmerLights_IOC_1:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0075                     ??_DimmerLights_IOC_1:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0075                     ?_LedPointSelect:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0075                     ?_LED_Initialization:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0075                     ?_LED_Main:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0075                     ?_Mcu_Initialization:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0075                     ?_ISR:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0075                     ?_WDT_Main:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0075                     ?_getDimmerLights_Allow_Condition:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0075                     ?_getMain_All_LightsStatus:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0075                     ?_getCmd_Status:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0075                     ?_getCDS_Status:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0075                     ?_getDimmerIntr_DimmingValue:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0075                     ?_getDimmerLights_Status:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0075                     ?_getMain_All_Error_Status:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0075                     setDimmerLights_Initialization@lights:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0075                     getDimmerLights_Allow_Condition@lights:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x0
  1604  0075                     	ds	1
  1605  0076                     ??_TMR1_ISR:	
  1606  0076                     ??_ISR:	
  1607                           ; 0 bytes @ 0x1
  1608                           
  1609                           
  1610                           ; 0 bytes @ 0x1
  1611  0076                     	ds	4
  1612                           
  1613                           	psect	cstackBANK0
  1614  0057                     __pcstackBANK0:	
  1615  0057                     ??_setDimmerLights_Initialization:	
  1616  0057                     ??_getDimmerLights_Allow_Condition:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0057                     ??_getMain_All_LightsStatus:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0057                     ??_getCmd_Status:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0057                     ?_setCmd_Status:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0057                     ??_Fosc_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0057                     ??_IO_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0057                     ??_TMR1_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0057                     ??_ADC_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0057                     ??_WDT_Set:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0057                     ??_Timeout_Counter:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0057                     ??_set_TimeoutCleared:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0057                     ??_WDT_Clearing:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0057                     ??_myMain_Initialization:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0057                     ??_Temp_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0057                     ??_PIR_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0057                     ??_my_MainTimer:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0057                     ??_setTemp_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0057                     ??_CDS_Initialization:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0057                     ??_CDS_Main:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0057                     ??_getCDS_Status:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0057                     ??_DimmerIntr_Initialization:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0057                     ?_setDimmerIntr_ControlStatus:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0057                     ?_setDimmerIntr_DimmingValue:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0057                     ??_getDimmerIntr_DimmingValue:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0057                     ?_setDimmerIntr_MaxmumValue:	
  1689                           ; 0 bytes @ 0x0
  1690                           
  1691  0057                     ?_setDimmerIntr_Dimming_Sw:	
  1692                           ; 0 bytes @ 0x0
  1693                           
  1694  0057                     ?_setDimmerIntr_Dimming_RF:	
  1695                           ; 0 bytes @ 0x0
  1696                           
  1697  0057                     ??_DimmerLights_SelectPointer:	
  1698                           ; 0 bytes @ 0x0
  1699                           
  1700  0057                     ??_LedPointSelect:	
  1701                           ; 0 bytes @ 0x0
  1702                           
  1703  0057                     ??_WDT_Main:	
  1704                           ; 0 bytes @ 0x0
  1705                           
  1706  0057                     ??_getMain_All_Error_Status:	
  1707                           ; 0 bytes @ 0x0
  1708                           
  1709  0057                     ?_getAD:	
  1710                           ; 0 bytes @ 0x0
  1711                           
  1712  0057                     ?___awdiv:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0057                     ?___lwdiv:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718  0057                     getCDS_Status@status:	
  1719                           ; 2 bytes @ 0x0
  1720                           
  1721  0057                     setDimmerIntr_ControlStatus@command:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0057                     setDimmerIntr_DimmingValue@value:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0057                     setDimmerIntr_MaxmumValue@value:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0057                     setDimmerIntr_Dimming_Sw@command:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0057                     setDimmerIntr_Dimming_RF@command:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0057                     getDimmerLights_Allow_Condition@allow:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0057                     getAD@adcon1:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0057                     getMain_All_LightsStatus@status:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0057                     setCmd_Status@cmd:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0057                     getCmd_Status@number:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0057                     ___awdiv@divisor:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0057                     ___lwdiv@divisor:	
  1755                           ; 2 bytes @ 0x0
  1756                           
  1757                           
  1758                           ; 2 bytes @ 0x0
  1759  0057                     	ds	1
  1760  0058                     ??_getAD:	
  1761  0058                     ??_setCmd_Status:	
  1762                           ; 0 bytes @ 0x1
  1763                           
  1764  0058                     ??_setDimmerIntr_ControlStatus:	
  1765                           ; 0 bytes @ 0x1
  1766                           
  1767  0058                     ??_setDimmerIntr_DimmingValue:	
  1768                           ; 0 bytes @ 0x1
  1769                           
  1770  0058                     ??_setDimmerIntr_MaxmumValue:	
  1771                           ; 0 bytes @ 0x1
  1772                           
  1773  0058                     ??_setDimmerIntr_Dimming_Sw:	
  1774                           ; 0 bytes @ 0x1
  1775                           
  1776  0058                     ??_setDimmerIntr_Dimming_RF:	
  1777                           ; 0 bytes @ 0x1
  1778                           
  1779  0058                     ??_DimmerLights_Initialization:	
  1780                           ; 0 bytes @ 0x1
  1781                           
  1782  0058                     ??_Mcu_Initialization:	
  1783                           ; 0 bytes @ 0x1
  1784                           
  1785  0058                     getDimmerIntr_DimmingValue@lights:	
  1786                           ; 0 bytes @ 0x1
  1787                           
  1788  0058                     DimmerLights_SelectPointer@lights:	
  1789                           ; 1 bytes @ 0x1
  1790                           
  1791  0058                     LedPointSelect@led:	
  1792                           ; 1 bytes @ 0x1
  1793                           
  1794  0058                     getAD@adcon0:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797  0058                     getMain_All_Error_Status@command:	
  1798                           ; 1 bytes @ 0x1
  1799                           
  1800  0058                     getCmd_Status@cmd:	
  1801                           ; 1 bytes @ 0x1
  1802                           
  1803                           
  1804                           ; 1 bytes @ 0x1
  1805  0058                     	ds	1
  1806  0059                     ?_setLED:	
  1807  0059                     ??_getTemp_AD:	
  1808                           ; 0 bytes @ 0x2
  1809                           
  1810  0059                     ?_getCDS_AD:	
  1811                           ; 0 bytes @ 0x2
  1812                           
  1813  0059                     ??_setDimmerLights_SwOn:	
  1814                           ; 0 bytes @ 0x2
  1815                           
  1816  0059                     ??_setDimmerLights_SwOff:	
  1817                           ; 0 bytes @ 0x2
  1818                           
  1819  0059                     ??_getDimmerLights_Status:	
  1820                           ; 0 bytes @ 0x2
  1821                           
  1822  0059                     getCDS_AD@channel2:	
  1823                           ; 0 bytes @ 0x2
  1824                           
  1825  0059                     setDimmerIntr_ControlStatus@lights:	
  1826                           ; 1 bytes @ 0x2
  1827                           
  1828  0059                     setDimmerIntr_DimmingValue@lights:	
  1829                           ; 1 bytes @ 0x2
  1830                           
  1831  0059                     getDimmerIntr_DimmingValue@value:	
  1832                           ; 1 bytes @ 0x2
  1833                           
  1834  0059                     setDimmerIntr_MaxmumValue@lights:	
  1835                           ; 1 bytes @ 0x2
  1836                           
  1837  0059                     setDimmerIntr_Dimming_Sw@lights:	
  1838                           ; 1 bytes @ 0x2
  1839                           
  1840  0059                     setDimmerIntr_Dimming_RF@lights:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843  0059                     setDimmerLights_SwOn@sw:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846  0059                     setDimmerLights_SwOff@sw:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849  0059                     getDimmerLights_Status@lights:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852  0059                     setLED@command:	
  1853                           ; 1 bytes @ 0x2
  1854                           
  1855  0059                     setCmd_Status@number:	
  1856                           ; 1 bytes @ 0x2
  1857                           
  1858  0059                     _getMain_All_Error_Status$2565:	
  1859                           ; 1 bytes @ 0x2
  1860                           
  1861  0059                     ___awdiv@dividend:	
  1862                           ; 2 bytes @ 0x2
  1863                           
  1864  0059                     ___lwdiv@dividend:	
  1865                           ; 2 bytes @ 0x2
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x2
  1869  0059                     	ds	1
  1870  005A                     ?_setDimmerLights_OnOff:	
  1871  005A                     ?_setDimmerLights_Dimming:	
  1872                           ; 0 bytes @ 0x3
  1873                           
  1874  005A                     ??_setLED:	
  1875                           ; 0 bytes @ 0x3
  1876                           
  1877  005A                     ??_getCDS_AD:	
  1878                           ; 0 bytes @ 0x3
  1879                           
  1880  005A                     setDimmerLights_SwOn@idle:	
  1881                           ; 0 bytes @ 0x3
  1882                           
  1883  005A                     setDimmerLights_OnOff@command:	
  1884                           ; 1 bytes @ 0x3
  1885                           
  1886  005A                     setDimmerLights_Dimming@status:	
  1887                           ; 1 bytes @ 0x3
  1888                           
  1889  005A                     getDimmerLights_Status@status:	
  1890                           ; 1 bytes @ 0x3
  1891                           
  1892  005A                     setLED@led:	
  1893                           ; 1 bytes @ 0x3
  1894                           
  1895                           
  1896                           ; 1 bytes @ 0x3
  1897  005A                     	ds	1
  1898  005B                     ??_DimmerLights_PIR_Control:	
  1899  005B                     ??_setDimmerLights_OnOff:	
  1900                           ; 0 bytes @ 0x4
  1901                           
  1902  005B                     ??_setDimmerLights_Dimming:	
  1903                           ; 0 bytes @ 0x4
  1904                           
  1905  005B                     ??_setLED_Initialization:	
  1906                           ; 0 bytes @ 0x4
  1907                           
  1908  005B                     ??_setPIRLED_Main:	
  1909                           ; 0 bytes @ 0x4
  1910                           
  1911  005B                     ??___awdiv:	
  1912                           ; 0 bytes @ 0x4
  1913                           
  1914  005B                     ??___lwdiv:	
  1915                           ; 0 bytes @ 0x4
  1916                           
  1917  005B                     setDimmerLights_OnOff@lights:	
  1918                           ; 0 bytes @ 0x4
  1919                           
  1920  005B                     setLED_Initialization@led:	
  1921                           ; 1 bytes @ 0x4
  1922                           
  1923  005B                     getMain_All_Error_Status@status:	
  1924                           ; 1 bytes @ 0x4
  1925                           
  1926  005B                     getTemp_AD@channel:	
  1927                           ; 1 bytes @ 0x4
  1928                           
  1929                           
  1930                           ; 1 bytes @ 0x4
  1931  005B                     	ds	1
  1932  005C                     ??_PIR_Main:	
  1933  005C                     ??_Exception_Main:	
  1934                           ; 0 bytes @ 0x5
  1935                           
  1936  005C                     ??_setTemp_Main:	
  1937                           ; 0 bytes @ 0x5
  1938                           
  1939  005C                     ??_LED_Initialization:	
  1940                           ; 0 bytes @ 0x5
  1941                           
  1942  005C                     getCDS_AD@i:	
  1943                           ; 0 bytes @ 0x5
  1944                           
  1945  005C                     setDimmerLights_Dimming@value:	
  1946                           ; 1 bytes @ 0x5
  1947                           
  1948  005C                     setPIRLED_Main@count:	
  1949                           ; 1 bytes @ 0x5
  1950                           
  1951  005C                     getTemp_AD@ADRES:	
  1952                           ; 1 bytes @ 0x5
  1953                           
  1954  005C                     ___awdiv@counter:	
  1955                           ; 1 bytes @ 0x5
  1956                           
  1957  005C                     ___lwdiv@counter:	
  1958                           ; 1 bytes @ 0x5
  1959                           
  1960                           
  1961                           ; 1 bytes @ 0x5
  1962  005C                     	ds	1
  1963  005D                     ??_LED_Main:	
  1964  005D                     getCDS_AD@j:	
  1965                           ; 0 bytes @ 0x6
  1966                           
  1967  005D                     setDimmerLights_Dimming@lights:	
  1968                           ; 1 bytes @ 0x6
  1969                           
  1970  005D                     Exception_Main@lights:	
  1971                           ; 1 bytes @ 0x6
  1972                           
  1973  005D                     setTemp_Main@error:	
  1974                           ; 1 bytes @ 0x6
  1975                           
  1976  005D                     ___awdiv@sign:	
  1977                           ; 1 bytes @ 0x6
  1978                           
  1979  005D                     ___lwdiv@quotient:	
  1980                           ; 1 bytes @ 0x6
  1981                           
  1982                           
  1983                           ; 2 bytes @ 0x6
  1984  005D                     	ds	1
  1985  005E                     ??_setDimmerLights_Main:	
  1986  005E                     getCDS_AD@channel1:	
  1987                           ; 0 bytes @ 0x7
  1988                           
  1989  005E                     setDimmerLights_Main@lights:	
  1990                           ; 1 bytes @ 0x7
  1991                           
  1992  005E                     Exception_Main@count:	
  1993                           ; 1 bytes @ 0x7
  1994                           
  1995  005E                     setTemp_Main@TempGO:	
  1996                           ; 1 bytes @ 0x7
  1997                           
  1998  005E                     ___awdiv@quotient:	
  1999                           ; 1 bytes @ 0x7
  2000                           
  2001                           
  2002                           ; 2 bytes @ 0x7
  2003  005E                     	ds	1
  2004  005F                     ??_DimmerLights_Main:	
  2005  005F                     Exception_Main@status:	
  2006                           ; 0 bytes @ 0x8
  2007                           
  2008  005F                     setTemp_Main@SafeValue:	
  2009                           ; 1 bytes @ 0x8
  2010                           
  2011                           
  2012                           ; 1 bytes @ 0x8
  2013  005F                     	ds	1
  2014  0060                     ?_getPIR_AD:	
  2015  0060                     Exception_Main@error:	
  2016                           ; 0 bytes @ 0x9
  2017                           
  2018  0060                     setTemp_Main@DangerValue:	
  2019                           ; 1 bytes @ 0x9
  2020                           
  2021  0060                     getPIR_AD@channel2:	
  2022                           ; 1 bytes @ 0x9
  2023                           
  2024                           
  2025                           ; 1 bytes @ 0x9
  2026  0060                     	ds	1
  2027  0061                     ??_getPIR_AD:	
  2028  0061                     setTemp_Main@AD:	
  2029                           ; 0 bytes @ 0xA
  2030                           
  2031  0061                     PIR_Main@error:	
  2032                           ; 1 bytes @ 0xA
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0xA
  2036  0061                     	ds	1
  2037  0062                     ??_Temp_Main:	
  2038  0062                     PIR_Main@Enable_Switch:	
  2039                           ; 0 bytes @ 0xB
  2040                           
  2041                           
  2042                           ; 1 bytes @ 0xB
  2043  0062                     	ds	1
  2044  0063                     _PIR_Main$3333:	
  2045                           
  2046                           ; 2 bytes @ 0xC
  2047  0063                     	ds	1
  2048  0064                     getPIR_AD@j:	
  2049                           
  2050                           ; 1 bytes @ 0xD
  2051  0064                     	ds	1
  2052  0065                     PIR_Main@TriggerValue:	
  2053  0065                     getPIR_AD@channel1:	
  2054                           ; 1 bytes @ 0xE
  2055                           
  2056                           
  2057                           ; 1 bytes @ 0xE
  2058  0065                     	ds	1
  2059  0066                     PIR_Main@cds:	
  2060  0066                     getPIR_AD@VRAD1:	
  2061                           ; 1 bytes @ 0xF
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0xF
  2065  0066                     	ds	1
  2066  0067                     PIR_Main@LightsStatus:	
  2067  0067                     getPIR_AD@VRAD:	
  2068                           ; 1 bytes @ 0x10
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x10
  2072  0067                     	ds	1
  2073  0068                     getPIR_AD@i:	
  2074                           
  2075                           ; 1 bytes @ 0x11
  2076  0068                     	ds	1
  2077  0069                     ?_main:	
  2078  0069                     main@argc:	
  2079                           ; 2 bytes @ 0x12
  2080                           
  2081                           
  2082                           ; 2 bytes @ 0x12
  2083  0069                     	ds	2
  2084  006B                     main@argv:	
  2085                           
  2086                           ; 2 bytes @ 0x14
  2087  006B                     	ds	2
  2088  006D                     ??_main:	
  2089                           
  2090                           ; 0 bytes @ 0x16
  2091  006D                     	ds	1
  2092                           
  2093                           	psect	maintext
  2094  05EC                     __pmaintext:	
  2095 ;;
  2096 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2097 ;;
  2098 ;; *************** function _main *****************
  2099 ;; Defined at:
  2100 ;;		line 7 in file "../src/Main_B1.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  argc            2   18[BANK0 ] int 
  2103 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2   18[BANK0 ] int 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 17F/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2115 ;;      Params:         0       4       0       0
  2116 ;;      Locals:         0       0       0       0
  2117 ;;      Temps:          0       1       0       0
  2118 ;;      Totals:         0       5       0       0
  2119 ;;Total ram usage:        5 bytes
  2120 ;; Hardware stack levels required when called:    7
  2121 ;; This function calls:
  2122 ;;		_CDS_Initialization
  2123 ;;		_CDS_Main
  2124 ;;		_DimmerLights_Initialization
  2125 ;;		_DimmerLights_Main
  2126 ;;		_Exception_Main
  2127 ;;		_LED_Initialization
  2128 ;;		_LED_Main
  2129 ;;		_Mcu_Initialization
  2130 ;;		_PIR_Initialization
  2131 ;;		_PIR_Main
  2132 ;;		_Temp_Initialization
  2133 ;;		_Temp_Main
  2134 ;;		_WDT_Main
  2135 ;;		_getCDS_AD
  2136 ;;		_getPIR_AD
  2137 ;;		_getTemp_AD
  2138 ;;		_myMain_Initialization
  2139 ;;		_my_MainTimer
  2140 ;; This function is called by:
  2141 ;;		Startup code after reset
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _main
  2147  05EC                     _main:	
  2148                           
  2149                           ;Main_B1.c: 8: myMain_Initialization();
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2153  05EC  158A  2579  118A   	fcall	_myMain_Initialization
  2154                           
  2155                           ;Main_B1.c: 9: Mcu_Initialization();
  2156  05EF  158A  2622  118A   	fcall	_Mcu_Initialization
  2157                           
  2158                           ;Main_B1.c: 10: ;;
  2159                           ;Main_B1.c: 11: LED_Initialization();
  2160  05F2  158A  25E0  118A   	fcall	_LED_Initialization
  2161                           
  2162                           ;Main_B1.c: 12: ;;
  2163                           ;Main_B1.c: 14: ;;
  2164                           ;Main_B1.c: 15: Temp_Initialization();
  2165  05F5  158A  257D  118A   	fcall	_Temp_Initialization
  2166                           
  2167                           ;Main_B1.c: 16: ;;
  2168                           ;Main_B1.c: 17: ;;
  2169                           ;Main_B1.c: 18: ;;
  2170                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2171  05F8  158A  2597  118A   	fcall	_DimmerLights_Initialization
  2172                           
  2173                           ;Main_B1.c: 21: ;;
  2174                           ;Main_B1.c: 22: CDS_Initialization();
  2175  05FB  158A  2583  118A   	fcall	_CDS_Initialization
  2176                           
  2177                           ;Main_B1.c: 23: PIR_Initialization();
  2178  05FE  158A  25F9  118A   	fcall	_PIR_Initialization
  2179  0601                     l4957:	
  2180                           ;Main_B1.c: 24: ;;
  2181                           ;Main_B1.c: 25: ;;
  2182                           ;Main_B1.c: 26: ;;
  2183                           ;Main_B1.c: 27: ;;
  2184                           ;Main_B1.c: 28: ;;
  2185                           ;Main_B1.c: 30: while (1) {
  2186                           
  2187                           
  2188                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2189  0601  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0602  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0603  1C31               	btfss	_myMain,0
  2192  0604  2E1D               	goto	l4963
  2193                           
  2194                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2195  0605  3011               	movlw	17
  2196  0606  118A  2775  118A   	fcall	_getTemp_AD
  2197                           
  2198                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2199  0609  3031               	movlw	49
  2200  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2201  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2202  060C  00ED               	movwf	??_main
  2203  060D  086D               	movf	??_main,w
  2204  060E  00D9               	movwf	getCDS_AD@channel2
  2205  060F  3009               	movlw	9
  2206  0610  158A  27BB  118A   	fcall	_getCDS_AD
  2207                           
  2208                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2209  0613  300D               	movlw	13
  2210  0614  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0615  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0616  00ED               	movwf	??_main
  2213  0617  086D               	movf	??_main,w
  2214  0618  00E0               	movwf	getPIR_AD@channel2
  2215  0619  3005               	movlw	5
  2216  061A  118A  2210  118A   	fcall	_getPIR_AD
  2217  061D                     l4963:	
  2218                           
  2219                           ;Main_B1.c: 57: }
  2220                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2221  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2222  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2223  061F  1C3E               	btfss	_Timer1,0
  2224  0620  2E01               	goto	l4957
  2225                           
  2226                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2227  0621  103E               	bcf	_Timer1,0
  2228                           
  2229                           ;Main_B1.c: 96: my_MainTimer();
  2230  0622  158A  274D  118A   	fcall	_my_MainTimer
  2231                           
  2232                           ;Main_B1.c: 97: WDT_Main();
  2233  0625  158A  2663  118A   	fcall	_WDT_Main
  2234                           
  2235                           ;Main_B1.c: 98: ;;
  2236                           ;Main_B1.c: 99: ;;
  2237                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2238  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2240  062A  1C31               	btfss	_myMain,0
  2241  062B  2E01               	goto	l4957
  2242                           
  2243                           ;Main_B1.c: 101: ;;
  2244                           ;Main_B1.c: 103: LED_Main();
  2245  062C  158A  257A  118A   	fcall	_LED_Main
  2246                           
  2247                           ;Main_B1.c: 104: ;;
  2248                           ;Main_B1.c: 106: ;;
  2249                           ;Main_B1.c: 107: Temp_Main();
  2250  062F  158A  2580  118A   	fcall	_Temp_Main
  2251                           
  2252                           ;Main_B1.c: 108: ;;
  2253                           ;Main_B1.c: 109: ;;
  2254                           ;Main_B1.c: 111: ;;
  2255                           ;Main_B1.c: 112: DimmerLights_Main();
  2256  0632  158A  259E  118A   	fcall	_DimmerLights_Main
  2257                           
  2258                           ;Main_B1.c: 113: ;;
  2259                           ;Main_B1.c: 114: CDS_Main();
  2260  0635  118A  2714  118A   	fcall	_CDS_Main
  2261                           
  2262                           ;Main_B1.c: 115: PIR_Main();
  2263  0638  118A  2027  118A   	fcall	_PIR_Main
  2264                           
  2265                           ;Main_B1.c: 117: ;;
  2266                           ;Main_B1.c: 118: ;;
  2267                           ;Main_B1.c: 119: ;;
  2268                           ;Main_B1.c: 120: ;;
  2269                           ;Main_B1.c: 121: Exception_Main();
  2270  063B  118A  2690  118A   	fcall	_Exception_Main
  2271  063E  2E01               	goto	l4957
  2272  063F                     __end_of_main:	
  2273                           ;Main_B1.c: 128: }
  2274                           ;Main_B1.c: 129: }
  2275                           ;Main_B1.c: 163: }
  2276                           ;Main_B1.c: 164: return (0);
  2277                           ;	Return value of _main is never used
  2278                           
  2279                           
  2280                           	psect	text1
  2281  0F4D                     __ptext1:	
  2282 ;; *************** function _my_MainTimer *****************
  2283 ;; Defined at:
  2284 ;;		line 185 in file "../src/Main_B1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2298 ;;      Params:         0       0       0       0
  2299 ;;      Locals:         0       0       0       0
  2300 ;;      Temps:          0       1       0       0
  2301 ;;      Totals:         0       1       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _my_MainTimer
  2314  0F4D                     _my_MainTimer:	
  2315                           
  2316                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2320  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0F4F  1831               	btfsc	_myMain,0
  2323  0F50  2F5D               	goto	l4717
  2324                           
  2325                           ;Main_B1.c: 188: myMain.PowerCount++;
  2326  0F51  3001               	movlw	1
  2327  0F52  00D7               	movwf	??_my_MainTimer
  2328  0F53  0857               	movf	??_my_MainTimer,w
  2329  0F54  07B2               	addwf	_myMain+1,f
  2330                           
  2331                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2332  0F55  0832               	movf	_myMain+1,w
  2333  0F56  3A4B               	xorlw	75
  2334  0F57  1D03               	skipz
  2335  0F58  0008               	return
  2336                           
  2337                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2338  0F59  01B2               	clrf	_myMain+1
  2339                           
  2340                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2341  0F5A  1431               	bsf	_myMain,0
  2342                           
  2343                           ;Main_B1.c: 196: ;;
  2344                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2345  0F5B  1631               	bsf	_myMain,4
  2346                           
  2347                           ;Main_B1.c: 206: }
  2348                           ;Main_B1.c: 207: } else {
  2349  0F5C  0008               	return
  2350  0F5D                     l4717:	
  2351                           
  2352                           ;Main_B1.c: 208: myMain.PowerCount++;
  2353  0F5D  3001               	movlw	1
  2354  0F5E  00D7               	movwf	??_my_MainTimer
  2355  0F5F  0857               	movf	??_my_MainTimer,w
  2356  0F60  07B2               	addwf	_myMain+1,f
  2357                           
  2358                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2359  0F61  0832               	movf	_myMain+1,w
  2360  0F62  3A32               	xorlw	50
  2361  0F63  1D03               	skipz
  2362  0F64  0008               	return
  2363                           
  2364                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2365  0F65  01B2               	clrf	_myMain+1
  2366  0F66  0008               	return
  2367  0F67                     __end_of_my_MainTimer:	
  2368                           
  2369                           	psect	text2
  2370  0D79                     __ptext2:	
  2371 ;; *************** function _myMain_Initialization *****************
  2372 ;; Defined at:
  2373 ;;		line 170 in file "../src/Main_B1.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		None
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         0       0       0       0
  2388 ;;      Locals:         0       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    3
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _myMain_Initialization
  2403  0D79                     _myMain_Initialization:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _myMain_Initialization: []
  2407  0D79  0008               	return
  2408  0D7A                     __end_of_myMain_Initialization:	
  2409                           
  2410                           	psect	text3
  2411  0775                     __ptext3:	
  2412 ;; *************** function _getTemp_AD *****************
  2413 ;; Defined at:
  2414 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  channel         1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  channel         1    4[BANK0 ] unsigned char 
  2419 ;;  ADRES           1    5[BANK0 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2429 ;;      Params:         0       0       0       0
  2430 ;;      Locals:         0       2       0       0
  2431 ;;      Temps:          0       2       0       0
  2432 ;;      Totals:         0       4       0       0
  2433 ;;Total ram usage:        4 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    5
  2436 ;; This function calls:
  2437 ;;		_getAD
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _getTemp_AD
  2445  0775                     _getTemp_AD:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2449                           ;getTemp_AD@channel stored from wreg
  2450  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0777  00DB               	movwf	getTemp_AD@channel
  2453                           
  2454                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2455  0778  01DC               	clrf	getTemp_AD@ADRES
  2456                           
  2457                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2458  0779  1D44               	btfss	_Temp,2
  2459  077A  2F93               	goto	l4625
  2460                           
  2461                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2462  077B  3070               	movlw	112
  2463  077C  00D9               	movwf	??_getTemp_AD
  2464  077D  0859               	movf	??_getTemp_AD,w
  2465  077E  00D7               	movwf	getAD@adcon1
  2466  077F  085B               	movf	getTemp_AD@channel,w
  2467  0780  158A  279F  118A   	fcall	_getAD
  2468  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0785  00DA               	movwf	??_getTemp_AD+1
  2471  0786  085A               	movf	??_getTemp_AD+1,w
  2472  0787  00DC               	movwf	getTemp_AD@ADRES
  2473                           
  2474                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2475  0788  085C               	movf	getTemp_AD@ADRES,w
  2476  0789  1903               	btfsc	3,2
  2477  078A  2F93               	goto	l4625
  2478                           
  2479                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2480  078B  085C               	movf	getTemp_AD@ADRES,w
  2481  078C  024A               	subwf	_Temp+6,w
  2482  078D  1803               	skipnc
  2483  078E  2F93               	goto	l4625
  2484                           
  2485                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2486  078F  085C               	movf	getTemp_AD@ADRES,w
  2487  0790  00D9               	movwf	??_getTemp_AD
  2488  0791  0859               	movf	??_getTemp_AD,w
  2489  0792  00CA               	movwf	_Temp+6
  2490  0793                     l4625:	
  2491                           
  2492                           ;OverTemperature_B1.c: 32: }
  2493                           ;OverTemperature_B1.c: 33: }
  2494                           ;OverTemperature_B1.c: 34: }
  2495                           ;OverTemperature_B1.c: 41: ADRES = getAD(channel, 0x70);
  2496  0793  3070               	movlw	112
  2497  0794  00D9               	movwf	??_getTemp_AD
  2498  0795  0859               	movf	??_getTemp_AD,w
  2499  0796  00D7               	movwf	getAD@adcon1
  2500  0797  085B               	movf	getTemp_AD@channel,w
  2501  0798  158A  279F         	fcall	_getAD
  2502  079A  1283               	bcf	3,5	;RP0=0, select bank0
  2503  079B  1303               	bcf	3,6	;RP1=0, select bank0
  2504  079C  00DA               	movwf	??_getTemp_AD+1
  2505  079D  085A               	movf	??_getTemp_AD+1,w
  2506  079E  00DC               	movwf	getTemp_AD@ADRES
  2507  079F  0008               	return
  2508  07A0                     __end_of_getTemp_AD:	
  2509                           
  2510                           	psect	text4
  2511  0210                     __ptext4:	
  2512 ;; *************** function _getPIR_AD *****************
  2513 ;; Defined at:
  2514 ;;		line 341 in file "../src/PIR_B1.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  channel1        1    wreg     unsigned char 
  2517 ;;  channel2        1    9[BANK0 ] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  channel1        1   14[BANK0 ] unsigned char 
  2520 ;;  i               1   17[BANK0 ] unsigned char 
  2521 ;;  VRAD            1   16[BANK0 ] unsigned char 
  2522 ;;  VRAD1           1   15[BANK0 ] unsigned char 
  2523 ;;  j               1   13[BANK0 ] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2533 ;;      Params:         0       1       0       0
  2534 ;;      Locals:         0       5       0       0
  2535 ;;      Temps:          0       3       0       0
  2536 ;;      Totals:         0       9       0       0
  2537 ;;Total ram usage:        9 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    5
  2540 ;; This function calls:
  2541 ;;		___awdiv
  2542 ;;		___lwdiv
  2543 ;;		_getAD
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _getPIR_AD
  2551  0210                     _getPIR_AD:	
  2552                           
  2553                           ;incstack = 0
  2554                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2555                           ;getPIR_AD@channel1 stored from wreg
  2556  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0212  00E5               	movwf	getPIR_AD@channel1
  2559                           
  2560                           ;PIR_B1.c: 342: char i = 0, j = 0;
  2561  0213  01E8               	clrf	getPIR_AD@i
  2562  0214  01E4               	clrf	getPIR_AD@j
  2563                           
  2564                           ;PIR_B1.c: 343: char VRAD = 0, VRAD1 = 0;
  2565  0215  01E7               	clrf	getPIR_AD@VRAD
  2566  0216  01E6               	clrf	getPIR_AD@VRAD1
  2567                           
  2568                           ;PIR_B1.c: 344: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2569  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0219  1CA0               	btfss	__PIR^(0+128),1
  2572  021A  0008               	return
  2573  021B  1920               	btfsc	__PIR^(0+128),2
  2574  021C  0008               	return
  2575                           
  2576                           ;PIR_B1.c: 345: _PIR.GO = 1;
  2577  021D  1520               	bsf	__PIR^(0+128),2
  2578                           
  2579                           ;PIR_B1.c: 352: VRAD1 = getAD(channel1, 0x70);
  2580  021E  3070               	movlw	112
  2581  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2582  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2583  0221  00E1               	movwf	??_getPIR_AD
  2584  0222  0861               	movf	??_getPIR_AD,w
  2585  0223  00D7               	movwf	getAD@adcon1
  2586  0224  0865               	movf	getPIR_AD@channel1,w
  2587  0225  158A  279F  118A   	fcall	_getAD
  2588  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2590  022A  00E2               	movwf	??_getPIR_AD+1
  2591  022B  0862               	movf	??_getPIR_AD+1,w
  2592  022C  00E6               	movwf	getPIR_AD@VRAD1
  2593                           
  2594                           ;PIR_B1.c: 353: VRAD = VRAD1 / 25;
  2595  022D  3019               	movlw	25
  2596  022E  00D7               	movwf	___awdiv@divisor
  2597  022F  3000               	movlw	0
  2598  0230  00D8               	movwf	___awdiv@divisor+1
  2599  0231  0866               	movf	getPIR_AD@VRAD1,w
  2600  0232  00E1               	movwf	??_getPIR_AD
  2601  0233  01E2               	clrf	??_getPIR_AD+1
  2602  0234  0861               	movf	??_getPIR_AD,w
  2603  0235  00D9               	movwf	___awdiv@dividend
  2604  0236  0862               	movf	??_getPIR_AD+1,w
  2605  0237  00DA               	movwf	___awdiv@dividend+1
  2606  0238  118A  258F  118A   	fcall	___awdiv
  2607  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2608  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2609  023D  0857               	movf	?___awdiv,w
  2610  023E  00E3               	movwf	??_getPIR_AD+2
  2611  023F  0863               	movf	??_getPIR_AD+2,w
  2612  0240  00E7               	movwf	getPIR_AD@VRAD
  2613                           
  2614                           ;PIR_B1.c: 354: _PIR.SignalAD = getAD(channel2, 0x70);
  2615  0241  3070               	movlw	112
  2616  0242  00E1               	movwf	??_getPIR_AD
  2617  0243  0861               	movf	??_getPIR_AD,w
  2618  0244  00D7               	movwf	getAD@adcon1
  2619  0245  0860               	movf	getPIR_AD@channel2,w
  2620  0246  158A  279F  118A   	fcall	_getAD
  2621  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2622  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2623  024B  00E2               	movwf	??_getPIR_AD+1
  2624  024C  0862               	movf	??_getPIR_AD+1,w
  2625  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2626  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2627  024F  00A1               	movwf	(__PIR^(0+128)+1)
  2628                           
  2629                           ;PIR_B1.c: 368: if (VRAD < 1) {
  2630  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0252  08E7               	movf	getPIR_AD@VRAD,f
  2633  0253  1D03               	skipz
  2634  0254  2A57               	goto	l4641
  2635                           
  2636                           ;PIR_B1.c: 369: _PIR.CloseTimeValue = 5;
  2637  0255  3005               	movlw	5
  2638  0256  2A5D               	goto	L1
  2639  0257                     l4641:	
  2640                           ;PIR_B1.c: 370: } else if (VRAD < 3) {
  2641                           
  2642  0257  3003               	movlw	3
  2643  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0259  0267               	subwf	getPIR_AD@VRAD,w
  2645  025A  1803               	skipnc
  2646  025B  2A62               	goto	l4645
  2647                           
  2648                           ;PIR_B1.c: 371: _PIR.CloseTimeValue = 60;
  2649  025C  303C               	movlw	60
  2650  025D                     L1:	
  2651  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2652  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2653  025F  00C3               	movwf	(__PIR^(0+128)+35)
  2654  0260  3000               	movlw	0
  2655  0261  2A88               	goto	L5
  2656  0262                     l4645:	
  2657                           ;PIR_B1.c: 372: } else if (VRAD < 5) {
  2658                           
  2659  0262  3005               	movlw	5
  2660  0263  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0264  0267               	subwf	getPIR_AD@VRAD,w
  2662  0265  1803               	skipnc
  2663  0266  2A6D               	goto	l4649
  2664                           
  2665                           ;PIR_B1.c: 373: _PIR.CloseTimeValue = 300;
  2666  0267  302C               	movlw	44
  2667  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2668  0269  1303               	bcf	3,6	;RP1=0, select bank1
  2669  026A  00C3               	movwf	(__PIR^(0+128)+35)
  2670  026B  3001               	movlw	1
  2671  026C  2A88               	goto	L5
  2672  026D                     l4649:	
  2673                           ;PIR_B1.c: 374: } else if (VRAD < 7) {
  2674                           
  2675  026D  3007               	movlw	7
  2676  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2677  026F  0267               	subwf	getPIR_AD@VRAD,w
  2678  0270  1803               	skipnc
  2679  0271  2A78               	goto	l4653
  2680                           
  2681                           ;PIR_B1.c: 375: _PIR.CloseTimeValue = 600;
  2682  0272  3058               	movlw	88
  2683  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0275  00C3               	movwf	(__PIR^(0+128)+35)
  2686  0276  3002               	movlw	2
  2687  0277  2A88               	goto	L5
  2688  0278                     l4653:	
  2689                           ;PIR_B1.c: 376: } else if (VRAD < 9) {
  2690                           
  2691  0278  3009               	movlw	9
  2692  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2693  027A  0267               	subwf	getPIR_AD@VRAD,w
  2694  027B  1803               	skipnc
  2695  027C  2A83               	goto	l4657
  2696                           
  2697                           ;PIR_B1.c: 377: _PIR.CloseTimeValue = 900;
  2698  027D  3084               	movlw	132
  2699  027E  1683               	bsf	3,5	;RP0=1, select bank1
  2700  027F  1303               	bcf	3,6	;RP1=0, select bank1
  2701  0280  00C3               	movwf	(__PIR^(0+128)+35)
  2702  0281  3003               	movlw	3
  2703  0282  2A88               	goto	L5
  2704  0283                     l4657:	
  2705                           ;PIR_B1.c: 378: } else {
  2706                           
  2707                           
  2708                           ;PIR_B1.c: 379: _PIR.CloseTimeValue = 1200;
  2709  0283  30B0               	movlw	176
  2710  0284  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0285  1303               	bcf	3,6	;RP1=0, select bank1
  2712  0286  00C3               	movwf	(__PIR^(0+128)+35)
  2713  0287  3004               	movlw	4
  2714  0288                     L5:	
  2715  0288  00C4               	movwf	(__PIR^(0+128)+36)
  2716                           
  2717                           ;PIR_B1.c: 380: }
  2718                           ;PIR_B1.c: 389: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2719  0289  0821               	movf	(__PIR^(0+128)+1),w
  2720  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2721  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2722  028C  00E1               	movwf	??_getPIR_AD
  2723  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2724  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2725  028F  0824               	movf	(__PIR^(0+128)+4),w
  2726  0290  3EA5               	addlw	(__PIR+5)& (0+255)
  2727  0291  0084               	movwf	4
  2728  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0294  0861               	movf	??_getPIR_AD,w
  2731  0295  1383               	bcf	3,7	;select IRP bank1
  2732  0296  0080               	movwf	0
  2733                           
  2734                           ;PIR_B1.c: 390: for (i = 0; i < 10; i++) {
  2735  0297  01E8               	clrf	getPIR_AD@i
  2736  0298  300A               	movlw	10
  2737  0299  0268               	subwf	getPIR_AD@i,w
  2738  029A  1803               	btfsc	3,0
  2739  029B  2AB8               	goto	l4673
  2740  029C                     l4667:	
  2741                           
  2742                           ;PIR_B1.c: 391: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2743  029C  0868               	movf	getPIR_AD@i,w
  2744  029D  3EA5               	addlw	(__PIR+5)& (0+255)
  2745  029E  0084               	movwf	4
  2746  029F  0800               	movf	0,w
  2747  02A0  00E1               	movwf	??_getPIR_AD
  2748  02A1  01E2               	clrf	??_getPIR_AD+1
  2749  02A2  0861               	movf	??_getPIR_AD,w
  2750  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2751  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2752  02A5  07AF               	addwf	(__PIR^(0+128)+15),f
  2753  02A6  1803               	skipnc
  2754  02A7  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2755  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2756  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2757  02AA  0862               	movf	??_getPIR_AD+1,w
  2758  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2759  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2760  02AD  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2761  02AE  3001               	movlw	1
  2762  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2763  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2764  02B1  00E1               	movwf	??_getPIR_AD
  2765  02B2  0861               	movf	??_getPIR_AD,w
  2766  02B3  07E8               	addwf	getPIR_AD@i,f
  2767  02B4  300A               	movlw	10
  2768  02B5  0268               	subwf	getPIR_AD@i,w
  2769  02B6  1C03               	skipc
  2770  02B7  2A9C               	goto	l4667
  2771  02B8                     l4673:	
  2772                           
  2773                           ;PIR_B1.c: 392: }
  2774                           ;PIR_B1.c: 393: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2775  02B8  300A               	movlw	10
  2776  02B9  00D7               	movwf	___lwdiv@divisor
  2777  02BA  3000               	movlw	0
  2778  02BB  00D8               	movwf	___lwdiv@divisor+1
  2779  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2780  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2781  02BE  0830               	movf	((__PIR+1)^(0+128)+15),w
  2782  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2783  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2784  02C1  01DA               	clrf	___lwdiv@dividend+1
  2785  02C2  07DA               	addwf	___lwdiv@dividend+1,f
  2786  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2787  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2788  02C5  082F               	movf	(__PIR^(0+128)+15),w
  2789  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2790  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2791  02C8  01D9               	clrf	___lwdiv@dividend
  2792  02C9  07D9               	addwf	___lwdiv@dividend,f
  2793  02CA  118A  26D4  118A   	fcall	___lwdiv
  2794  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2795  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2796  02CF  0857               	movf	?___lwdiv,w
  2797  02D0  00E1               	movwf	??_getPIR_AD
  2798  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2799  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2800  02D3  0831               	movf	(__PIR^(0+128)+17),w
  2801  02D4  3EB2               	addlw	(__PIR+18)& (0+255)
  2802  02D5  0084               	movwf	4
  2803  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2804  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2805  02D8  0861               	movf	??_getPIR_AD,w
  2806  02D9  1383               	bcf	3,7	;select IRP bank1
  2807  02DA  0080               	movwf	0
  2808                           
  2809                           ;PIR_B1.c: 394: _PIR.TenAverageValue = 0;
  2810  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2811  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2812  02DD  01AF               	clrf	(__PIR^(0+128)+15)
  2813  02DE  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2814                           
  2815                           ;PIR_B1.c: 396: for (i = 0; i <= 9; i++) {
  2816  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2817  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2818  02E1  01E8               	clrf	getPIR_AD@i
  2819  02E2  300A               	movlw	10
  2820  02E3  0268               	subwf	getPIR_AD@i,w
  2821  02E4  1803               	btfsc	3,0
  2822  02E5  2B02               	goto	l4689
  2823  02E6                     l4683:	
  2824                           
  2825                           ;PIR_B1.c: 397: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2826  02E6  0868               	movf	getPIR_AD@i,w
  2827  02E7  3EB2               	addlw	(__PIR+18)& (0+255)
  2828  02E8  0084               	movwf	4
  2829  02E9  0800               	movf	0,w
  2830  02EA  00E1               	movwf	??_getPIR_AD
  2831  02EB  01E2               	clrf	??_getPIR_AD+1
  2832  02EC  0861               	movf	??_getPIR_AD,w
  2833  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2834  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2835  02EF  07BC               	addwf	(__PIR^(0+128)+28),f
  2836  02F0  1803               	skipnc
  2837  02F1  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2838  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2839  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2840  02F4  0862               	movf	??_getPIR_AD+1,w
  2841  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  2842  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  2843  02F7  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2844  02F8  3001               	movlw	1
  2845  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2846  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2847  02FB  00E1               	movwf	??_getPIR_AD
  2848  02FC  0861               	movf	??_getPIR_AD,w
  2849  02FD  07E8               	addwf	getPIR_AD@i,f
  2850  02FE  300A               	movlw	10
  2851  02FF  0268               	subwf	getPIR_AD@i,w
  2852  0300  1C03               	skipc
  2853  0301  2AE6               	goto	l4683
  2854  0302                     l4689:	
  2855                           
  2856                           ;PIR_B1.c: 398: }
  2857                           ;PIR_B1.c: 399: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2858  0302  300A               	movlw	10
  2859  0303  00D7               	movwf	___lwdiv@divisor
  2860  0304  3000               	movlw	0
  2861  0305  00D8               	movwf	___lwdiv@divisor+1
  2862  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2864  0308  083D               	movf	((__PIR+1)^(0+128)+28),w
  2865  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2866  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2867  030B  01DA               	clrf	___lwdiv@dividend+1
  2868  030C  07DA               	addwf	___lwdiv@dividend+1,f
  2869  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2870  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2871  030F  083C               	movf	(__PIR^(0+128)+28),w
  2872  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0312  01D9               	clrf	___lwdiv@dividend
  2875  0313  07D9               	addwf	___lwdiv@dividend,f
  2876  0314  118A  26D4  118A   	fcall	___lwdiv
  2877  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2878  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2879  0319  0857               	movf	?___lwdiv,w
  2880  031A  00E1               	movwf	??_getPIR_AD
  2881  031B  0861               	movf	??_getPIR_AD,w
  2882  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2883  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2884  031E  00A3               	movwf	(__PIR^(0+128)+3)
  2885                           
  2886                           ;PIR_B1.c: 400: _PIR.HundredAverageValue = 0;
  2887  031F  01BC               	clrf	(__PIR^(0+128)+28)
  2888  0320  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2889                           
  2890                           ;PIR_B1.c: 402: if (_PIR.TenCount < 10) {
  2891  0321  300A               	movlw	10
  2892  0322  0224               	subwf	(__PIR^(0+128)+4),w
  2893  0323  1803               	skipnc
  2894  0324  2B2E               	goto	l4697
  2895                           
  2896                           ;PIR_B1.c: 403: _PIR.TenCount++;
  2897  0325  3001               	movlw	1
  2898  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0328  00E1               	movwf	??_getPIR_AD
  2901  0329  0861               	movf	??_getPIR_AD,w
  2902  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2903  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2904  032C  07A4               	addwf	(__PIR^(0+128)+4),f
  2905                           
  2906                           ;PIR_B1.c: 404: } else {
  2907  032D  0008               	return
  2908  032E                     l4697:	
  2909                           
  2910                           ;PIR_B1.c: 405: _PIR.TenCount = 0;
  2911  032E  01A4               	clrf	(__PIR^(0+128)+4)
  2912                           
  2913                           ;PIR_B1.c: 406: if (_PIR.HundreCount < 10)
  2914  032F  300A               	movlw	10
  2915  0330  0231               	subwf	(__PIR^(0+128)+17),w
  2916  0331  1803               	skipnc
  2917  0332  2B3C               	goto	l4703
  2918                           
  2919                           ;PIR_B1.c: 407: _PIR.HundreCount++;
  2920  0333  3001               	movlw	1
  2921  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0336  00E1               	movwf	??_getPIR_AD
  2924  0337  0861               	movf	??_getPIR_AD,w
  2925  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2927  033A  07B1               	addwf	(__PIR^(0+128)+17),f
  2928  033B  0008               	return
  2929  033C                     l4703:	
  2930                           
  2931                           ;PIR_B1.c: 408: else
  2932                           ;PIR_B1.c: 409: _PIR.HundreCount = 0;
  2933  033C  01B1               	clrf	(__PIR^(0+128)+17)
  2934  033D  0008               	return
  2935  033E                     __end_of_getPIR_AD:	
  2936                           
  2937                           	psect	text5
  2938  06D4                     __ptext5:	
  2939 ;; *************** function ___lwdiv *****************
  2940 ;; Defined at:
  2941 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  divisor         2    0[BANK0 ] unsigned int 
  2944 ;;  dividend        2    2[BANK0 ] unsigned int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  quotient        2    6[BANK0 ] unsigned int 
  2947 ;;  counter         1    5[BANK0 ] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2    0[BANK0 ] unsigned int 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2957 ;;      Params:         0       4       0       0
  2958 ;;      Locals:         0       3       0       0
  2959 ;;      Temps:          0       1       0       0
  2960 ;;      Totals:         0       8       0       0
  2961 ;;Total ram usage:        8 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    3
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_getPIR_AD
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           
  2972                           ;psect for function ___lwdiv
  2973  06D4                     ___lwdiv:	
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2977  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  2978  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  2979  06D6  01DD               	clrf	___lwdiv@quotient
  2980  06D7  01DE               	clrf	___lwdiv@quotient+1
  2981  06D8  0858               	movf	___lwdiv@divisor+1,w
  2982  06D9  0457               	iorwf	___lwdiv@divisor,w
  2983  06DA  1903               	skipnz
  2984  06DB  2F0D               	goto	l4553
  2985  06DC  01DC               	clrf	___lwdiv@counter
  2986  06DD  0ADC               	incf	___lwdiv@counter,f
  2987  06DE                     l4541:	
  2988  06DE  1BD8               	btfsc	___lwdiv@divisor+1,7
  2989  06DF  2EEC               	goto	l4543
  2990  06E0  3001               	movlw	1
  2991  06E1                     u5345:	
  2992  06E1  1003               	clrc
  2993  06E2  0DD7               	rlf	___lwdiv@divisor,f
  2994  06E3  0DD8               	rlf	___lwdiv@divisor+1,f
  2995  06E4  3EFF               	addlw	-1
  2996  06E5  1D03               	skipz
  2997  06E6  2EE1               	goto	u5345
  2998  06E7  3001               	movlw	1
  2999  06E8  00DB               	movwf	??___lwdiv
  3000  06E9  085B               	movf	??___lwdiv,w
  3001  06EA  07DC               	addwf	___lwdiv@counter,f
  3002  06EB  2EDE               	goto	l4541
  3003  06EC                     l4543:	
  3004  06EC  3001               	movlw	1
  3005  06ED                     u5365:	
  3006  06ED  1003               	clrc
  3007  06EE  0DDD               	rlf	___lwdiv@quotient,f
  3008  06EF  0DDE               	rlf	___lwdiv@quotient+1,f
  3009  06F0  3EFF               	addlw	-1
  3010  06F1  1D03               	skipz
  3011  06F2  2EED               	goto	u5365
  3012  06F3  0858               	movf	___lwdiv@divisor+1,w
  3013  06F4  025A               	subwf	___lwdiv@dividend+1,w
  3014  06F5  1D03               	skipz
  3015  06F6  2EF9               	goto	u5375
  3016  06F7  0857               	movf	___lwdiv@divisor,w
  3017  06F8  0259               	subwf	___lwdiv@dividend,w
  3018  06F9                     u5375:	
  3019  06F9  1C03               	skipc
  3020  06FA  2F02               	goto	l4549
  3021  06FB  0857               	movf	___lwdiv@divisor,w
  3022  06FC  02D9               	subwf	___lwdiv@dividend,f
  3023  06FD  0858               	movf	___lwdiv@divisor+1,w
  3024  06FE  1C03               	skipc
  3025  06FF  03DA               	decf	___lwdiv@dividend+1,f
  3026  0700  02DA               	subwf	___lwdiv@dividend+1,f
  3027  0701  145D               	bsf	___lwdiv@quotient,0
  3028  0702                     l4549:	
  3029  0702  3001               	movlw	1
  3030  0703                     u5385:	
  3031  0703  1003               	clrc
  3032  0704  0CD8               	rrf	___lwdiv@divisor+1,f
  3033  0705  0CD7               	rrf	___lwdiv@divisor,f
  3034  0706  3EFF               	addlw	-1
  3035  0707  1D03               	skipz
  3036  0708  2F03               	goto	u5385
  3037  0709  3001               	movlw	1
  3038  070A  02DC               	subwf	___lwdiv@counter,f
  3039  070B  1D03               	btfss	3,2
  3040  070C  2EEC               	goto	l4543
  3041  070D                     l4553:	
  3042  070D  085E               	movf	___lwdiv@quotient+1,w
  3043  070E  01D8               	clrf	?___lwdiv+1
  3044  070F  07D8               	addwf	?___lwdiv+1,f
  3045  0710  085D               	movf	___lwdiv@quotient,w
  3046  0711  01D7               	clrf	?___lwdiv
  3047  0712  07D7               	addwf	?___lwdiv,f
  3048  0713  0008               	return
  3049  0714                     __end_of___lwdiv:	
  3050                           
  3051                           	psect	text6
  3052  058F                     __ptext6:	
  3053 ;; *************** function ___awdiv *****************
  3054 ;; Defined at:
  3055 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  divisor         2    0[BANK0 ] int 
  3058 ;;  dividend        2    2[BANK0 ] int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  quotient        2    7[BANK0 ] int 
  3061 ;;  sign            1    6[BANK0 ] unsigned char 
  3062 ;;  counter         1    5[BANK0 ] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2    0[BANK0 ] int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3072 ;;      Params:         0       4       0       0
  3073 ;;      Locals:         0       4       0       0
  3074 ;;      Temps:          0       1       0       0
  3075 ;;      Totals:         0       9       0       0
  3076 ;;Total ram usage:        9 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    3
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_getPIR_AD
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function ___awdiv
  3088  058F                     ___awdiv:	
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3092  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0591  01DD               	clrf	___awdiv@sign
  3095  0592  1FD8               	btfss	___awdiv@divisor+1,7
  3096  0593  2D9B               	goto	l4495
  3097  0594  09D7               	comf	___awdiv@divisor,f
  3098  0595  09D8               	comf	___awdiv@divisor+1,f
  3099  0596  0AD7               	incf	___awdiv@divisor,f
  3100  0597  1903               	skipnz
  3101  0598  0AD8               	incf	___awdiv@divisor+1,f
  3102  0599  01DD               	clrf	___awdiv@sign
  3103  059A  0ADD               	incf	___awdiv@sign,f
  3104  059B                     l4495:	
  3105  059B  1FDA               	btfss	___awdiv@dividend+1,7
  3106  059C  2DA6               	goto	l4501
  3107  059D  09D9               	comf	___awdiv@dividend,f
  3108  059E  09DA               	comf	___awdiv@dividend+1,f
  3109  059F  0AD9               	incf	___awdiv@dividend,f
  3110  05A0  1903               	skipnz
  3111  05A1  0ADA               	incf	___awdiv@dividend+1,f
  3112  05A2  3001               	movlw	1
  3113  05A3  00DB               	movwf	??___awdiv
  3114  05A4  085B               	movf	??___awdiv,w
  3115  05A5  06DD               	xorwf	___awdiv@sign,f
  3116  05A6                     l4501:	
  3117  05A6  01DE               	clrf	___awdiv@quotient
  3118  05A7  01DF               	clrf	___awdiv@quotient+1
  3119  05A8  0858               	movf	___awdiv@divisor+1,w
  3120  05A9  0457               	iorwf	___awdiv@divisor,w
  3121  05AA  1903               	skipnz
  3122  05AB  2DDD               	goto	l4523
  3123  05AC  01DC               	clrf	___awdiv@counter
  3124  05AD  0ADC               	incf	___awdiv@counter,f
  3125  05AE                     l4511:	
  3126  05AE  1BD8               	btfsc	___awdiv@divisor+1,7
  3127  05AF  2DBC               	goto	l4513
  3128  05B0  3001               	movlw	1
  3129  05B1                     u5265:	
  3130  05B1  1003               	clrc
  3131  05B2  0DD7               	rlf	___awdiv@divisor,f
  3132  05B3  0DD8               	rlf	___awdiv@divisor+1,f
  3133  05B4  3EFF               	addlw	-1
  3134  05B5  1D03               	skipz
  3135  05B6  2DB1               	goto	u5265
  3136  05B7  3001               	movlw	1
  3137  05B8  00DB               	movwf	??___awdiv
  3138  05B9  085B               	movf	??___awdiv,w
  3139  05BA  07DC               	addwf	___awdiv@counter,f
  3140  05BB  2DAE               	goto	l4511
  3141  05BC                     l4513:	
  3142  05BC  3001               	movlw	1
  3143  05BD                     u5285:	
  3144  05BD  1003               	clrc
  3145  05BE  0DDE               	rlf	___awdiv@quotient,f
  3146  05BF  0DDF               	rlf	___awdiv@quotient+1,f
  3147  05C0  3EFF               	addlw	-1
  3148  05C1  1D03               	skipz
  3149  05C2  2DBD               	goto	u5285
  3150  05C3  0858               	movf	___awdiv@divisor+1,w
  3151  05C4  025A               	subwf	___awdiv@dividend+1,w
  3152  05C5  1D03               	skipz
  3153  05C6  2DC9               	goto	u5295
  3154  05C7  0857               	movf	___awdiv@divisor,w
  3155  05C8  0259               	subwf	___awdiv@dividend,w
  3156  05C9                     u5295:	
  3157  05C9  1C03               	skipc
  3158  05CA  2DD2               	goto	l4519
  3159  05CB  0857               	movf	___awdiv@divisor,w
  3160  05CC  02D9               	subwf	___awdiv@dividend,f
  3161  05CD  0858               	movf	___awdiv@divisor+1,w
  3162  05CE  1C03               	skipc
  3163  05CF  03DA               	decf	___awdiv@dividend+1,f
  3164  05D0  02DA               	subwf	___awdiv@dividend+1,f
  3165  05D1  145E               	bsf	___awdiv@quotient,0
  3166  05D2                     l4519:	
  3167  05D2  3001               	movlw	1
  3168  05D3                     u5305:	
  3169  05D3  1003               	clrc
  3170  05D4  0CD8               	rrf	___awdiv@divisor+1,f
  3171  05D5  0CD7               	rrf	___awdiv@divisor,f
  3172  05D6  3EFF               	addlw	-1
  3173  05D7  1D03               	skipz
  3174  05D8  2DD3               	goto	u5305
  3175  05D9  3001               	movlw	1
  3176  05DA  02DC               	subwf	___awdiv@counter,f
  3177  05DB  1D03               	btfss	3,2
  3178  05DC  2DBC               	goto	l4513
  3179  05DD                     l4523:	
  3180  05DD  085D               	movf	___awdiv@sign,w
  3181  05DE  1903               	btfsc	3,2
  3182  05DF  2DE5               	goto	l4527
  3183  05E0  09DE               	comf	___awdiv@quotient,f
  3184  05E1  09DF               	comf	___awdiv@quotient+1,f
  3185  05E2  0ADE               	incf	___awdiv@quotient,f
  3186  05E3  1903               	skipnz
  3187  05E4  0ADF               	incf	___awdiv@quotient+1,f
  3188  05E5                     l4527:	
  3189  05E5  085F               	movf	___awdiv@quotient+1,w
  3190  05E6  01D8               	clrf	?___awdiv+1
  3191  05E7  07D8               	addwf	?___awdiv+1,f
  3192  05E8  085E               	movf	___awdiv@quotient,w
  3193  05E9  01D7               	clrf	?___awdiv
  3194  05EA  07D7               	addwf	?___awdiv,f
  3195  05EB  0008               	return
  3196  05EC                     __end_of___awdiv:	
  3197                           
  3198                           	psect	text7
  3199  0FBB                     __ptext7:	
  3200 ;; *************** function _getCDS_AD *****************
  3201 ;; Defined at:
  3202 ;;		line 48 in file "../src/CDS_B1.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  channel1        1    wreg     unsigned char 
  3205 ;;  channel2        1    2[BANK0 ] unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  channel1        1    7[BANK0 ] unsigned char 
  3208 ;;  j               1    6[BANK0 ] unsigned char 
  3209 ;;  i               1    5[BANK0 ] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;		None               void
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0, pclath, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3219 ;;      Params:         0       1       0       0
  3220 ;;      Locals:         0       3       0       0
  3221 ;;      Temps:          0       2       0       0
  3222 ;;      Totals:         0       6       0       0
  3223 ;;Total ram usage:        6 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    5
  3226 ;; This function calls:
  3227 ;;		_getAD
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           
  3234                           ;psect for function _getCDS_AD
  3235  0FBB                     _getCDS_AD:	
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3239                           ;getCDS_AD@channel1 stored from wreg
  3240  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0FBD  00DE               	movwf	getCDS_AD@channel1
  3243                           
  3244                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3245  0FBE  01DC               	clrf	getCDS_AD@i
  3246  0FBF  01DD               	clrf	getCDS_AD@j
  3247                           
  3248                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3249  0FC0  1DBA               	btfss	__CDS,3
  3250  0FC1  0008               	return
  3251                           
  3252                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3253  0FC2  14BA               	bsf	__CDS,1
  3254                           
  3255                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3256  0FC3  3070               	movlw	112
  3257  0FC4  00DA               	movwf	??_getCDS_AD
  3258  0FC5  085A               	movf	??_getCDS_AD,w
  3259  0FC6  00D7               	movwf	getAD@adcon1
  3260  0FC7  085E               	movf	getCDS_AD@channel1,w
  3261  0FC8  158A  279F  158A   	fcall	_getAD
  3262  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0FCD  00DB               	movwf	??_getCDS_AD+1
  3265  0FCE  085B               	movf	??_getCDS_AD+1,w
  3266  0FCF  00BC               	movwf	__CDS+2
  3267                           
  3268                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3269  0FD0  3070               	movlw	112
  3270  0FD1  00DA               	movwf	??_getCDS_AD
  3271  0FD2  085A               	movf	??_getCDS_AD,w
  3272  0FD3  00D7               	movwf	getAD@adcon1
  3273  0FD4  0859               	movf	getCDS_AD@channel2,w
  3274  0FD5  158A  279F         	fcall	_getAD
  3275  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0FD9  00DB               	movwf	??_getCDS_AD+1
  3278  0FDA  085B               	movf	??_getCDS_AD+1,w
  3279  0FDB  00BD               	movwf	__CDS+3
  3280  0FDC  0008               	return
  3281  0FDD                     __end_of_getCDS_AD:	
  3282                           
  3283                           	psect	text8
  3284  0F9F                     __ptext8:	
  3285 ;; *************** function _getAD *****************
  3286 ;; Defined at:
  3287 ;;		line 434 in file "../src/MCU_B1.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  adcon0          1    wreg     unsigned char 
  3290 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0, pclath, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3302 ;;      Params:         0       1       0       0
  3303 ;;      Locals:         0       1       0       0
  3304 ;;      Temps:          0       0       0       0
  3305 ;;      Totals:         0       2       0       0
  3306 ;;Total ram usage:        2 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    4
  3309 ;; This function calls:
  3310 ;;		_Timeout_Counter
  3311 ;;		_set_TimeoutCleared
  3312 ;; This function is called by:
  3313 ;;		_getCDS_AD
  3314 ;;		_getTemp_AD
  3315 ;;		_getPIR_AD
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _getAD
  3321  0F9F                     _getAD:	
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3325                           ;getAD@adcon0 stored from wreg
  3326  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  3327  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0FA1  00D8               	movwf	getAD@adcon0
  3329                           
  3330                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3331  0FA2  0858               	movf	getAD@adcon0,w
  3332  0FA3  009F               	movwf	31	;volatile
  3333                           
  3334                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3335  0FA4  0857               	movf	getAD@adcon1,w
  3336  0FA5  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0FA6  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0FA7  009F               	movwf	31	;volatile
  3339                           
  3340                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3341  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0FAA  149F               	bsf	31,1	;volatile
  3344                           
  3345                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3346  0FAB  2FAF               	goto	l4259
  3347  0FAC                     l4257:	
  3348                           
  3349                           ;MCU_B1.c: 439: Timeout_Counter();
  3350  0FAC  158A  26AD  158A   	fcall	_Timeout_Counter
  3351  0FAF                     l4259:	
  3352  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0FB1  1C9F               	btfss	31,1	;volatile
  3355  0FB2  2FB5               	goto	l4263
  3356  0FB3  1D33               	btfss	_myMain+2,2
  3357  0FB4  2FAC               	goto	l4257
  3358  0FB5                     l4263:	
  3359                           
  3360                           ;MCU_B1.c: 440: };
  3361                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3362  0FB5  158A  2591         	fcall	_set_TimeoutCleared
  3363                           
  3364                           ;MCU_B1.c: 442: return ADRES;
  3365  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0FB9  081E               	movf	30,w	;volatile
  3368  0FBA  0008               	return
  3369  0FBB                     __end_of_getAD:	
  3370                           
  3371                           	psect	text9
  3372  0D91                     __ptext9:	
  3373 ;; *************** function _set_TimeoutCleared *****************
  3374 ;; Defined at:
  3375 ;;		line 281 in file "../src/Main_B1.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;		None               void
  3382 ;; Registers used:
  3383 ;;		status,2
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3389 ;;      Params:         0       0       0       0
  3390 ;;      Locals:         0       0       0       0
  3391 ;;      Temps:          0       0       0       0
  3392 ;;      Totals:         0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_getAD
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _set_TimeoutCleared
  3405  0D91                     _set_TimeoutCleared:	
  3406                           
  3407                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3408                           
  3409                           ;incstack = 0
  3410                           ; Regs used in _set_TimeoutCleared: [status,2]
  3411  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0D93  1133               	bcf	_myMain+2,2
  3414                           
  3415                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3416  0D94  01B4               	clrf	_myMain+3
  3417  0D95  01B5               	clrf	_myMain+4
  3418  0D96  0008               	return
  3419  0D97                     __end_of_set_TimeoutCleared:	
  3420                           
  3421                           	psect	text10
  3422  0EAD                     __ptext10:	
  3423 ;; *************** function _Timeout_Counter *****************
  3424 ;; Defined at:
  3425 ;;		line 272 in file "../src/Main_B1.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, status,2
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3439 ;;      Params:         0       0       0       0
  3440 ;;      Locals:         0       0       0       0
  3441 ;;      Temps:          0       0       0       0
  3442 ;;      Totals:         0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    3
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_getAD
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _Timeout_Counter
  3455  0EAD                     _Timeout_Counter:	
  3456                           
  3457                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3461  0EAD  3001               	movlw	1
  3462  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0EB0  07B4               	addwf	_myMain+3,f
  3465  0EB1  1803               	skipnc
  3466  0EB2  0AB5               	incf	_myMain+4,f
  3467  0EB3  3000               	movlw	0
  3468  0EB4  07B5               	addwf	_myMain+4,f
  3469                           
  3470                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3471  0EB5  3061               	movlw	97
  3472  0EB6  0635               	xorwf	_myMain+4,w
  3473  0EB7  1D03               	skipz
  3474  0EB8  2EBB               	goto	u4725
  3475  0EB9  30A8               	movlw	168
  3476  0EBA  0634               	xorwf	_myMain+3,w
  3477  0EBB                     u4725:	
  3478  0EBB  1D03               	skipz
  3479  0EBC  0008               	return
  3480                           
  3481                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3482  0EBD  01B4               	clrf	_myMain+3
  3483  0EBE  01B5               	clrf	_myMain+4
  3484                           
  3485                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3486  0EBF  1533               	bsf	_myMain+2,2
  3487  0EC0  0008               	return
  3488  0EC1                     __end_of_Timeout_Counter:	
  3489                           
  3490                           	psect	text11
  3491  0E63                     __ptext11:	
  3492 ;; *************** function _WDT_Main *****************
  3493 ;; Defined at:
  3494 ;;		line 1116 in file "../src/MCU_B1.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, pclath, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3508 ;;      Params:         0       0       0       0
  3509 ;;      Locals:         0       0       0       0
  3510 ;;      Temps:          0       1       0       0
  3511 ;;      Totals:         0       1       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    4
  3515 ;; This function calls:
  3516 ;;		_WDT_Clearing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           
  3523                           ;psect for function _WDT_Main
  3524  0E63                     _WDT_Main:	
  3525                           
  3526                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3530  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0E65  1C41               	btfss	_WDT,0
  3533  0E66  0008               	return
  3534                           
  3535                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3536  0E67  3001               	movlw	1
  3537  0E68  02C2               	subwf	_WDT+1,f
  3538  0E69  0842               	movf	_WDT+1,w
  3539  0E6A  3AFF               	xorlw	255
  3540  0E6B  1903               	skipnz
  3541  0E6C  0008               	return
  3542                           
  3543                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3544  0E6D  3064               	movlw	100
  3545  0E6E  00D7               	movwf	??_WDT_Main
  3546  0E6F  0857               	movf	??_WDT_Main,w
  3547  0E70  00C2               	movwf	_WDT+1
  3548                           
  3549                           ;MCU_B1.c: 1120: WDT_Clearing();
  3550  0E71  118A  2002         	fcall	_WDT_Clearing
  3551  0E73  0008               	return
  3552  0E74                     __end_of_WDT_Main:	
  3553                           
  3554                           	psect	text12
  3555  0002                     __ptext12:	
  3556 ;; *************** function _WDT_Clearing *****************
  3557 ;; Defined at:
  3558 ;;		line 1126 in file "../src/MCU_B1.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;		None               void
  3565 ;; Registers used:
  3566 ;;		None
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3572 ;;      Params:         0       0       0       0
  3573 ;;      Locals:         0       0       0       0
  3574 ;;      Temps:          0       0       0       0
  3575 ;;      Totals:         0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    3
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_WDT_Main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _WDT_Clearing
  3588  0002                     _WDT_Clearing:	
  3589                           
  3590                           ;incstack = 0
  3591                           ; Regs used in _WDT_Clearing: []
  3592  0002  0064               	clrwdt	;# 
  3593  0003  0008               	return
  3594  0004                     __end_of_WDT_Clearing:	
  3595                           
  3596                           	psect	text13
  3597  0D80                     __ptext13:	
  3598 ;; *************** function _Temp_Main *****************
  3599 ;; Defined at:
  3600 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;		None               void
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3614 ;;      Params:         0       0       0       0
  3615 ;;      Locals:         0       0       0       0
  3616 ;;      Temps:          0       0       0       0
  3617 ;;      Totals:         0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    5
  3621 ;; This function calls:
  3622 ;;		_setTemp_Main
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           
  3629                           ;psect for function _Temp_Main
  3630  0D80                     _Temp_Main:	
  3631                           
  3632                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3633                           
  3634                           ;incstack = 0
  3635                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3636  0D80  118A  23D2         	fcall	_setTemp_Main
  3637  0D82  0008               	return
  3638  0D83                     __end_of_Temp_Main:	
  3639                           
  3640                           	psect	text14
  3641  03D2                     __ptext14:	
  3642 ;; *************** function _setTemp_Main *****************
  3643 ;; Defined at:
  3644 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  AD              1   10[BANK0 ] unsigned char 
  3649 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3650 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3651 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3652 ;;  error           1    6[BANK0 ] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;		None               void
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, pclath, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3662 ;;      Params:         0       0       0       0
  3663 ;;      Locals:         0       5       0       0
  3664 ;;      Temps:          0       1       0       0
  3665 ;;      Totals:         0       6       0       0
  3666 ;;Total ram usage:        6 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    4
  3669 ;; This function calls:
  3670 ;;		_getMain_All_Error_Status
  3671 ;;		_getMain_All_LightsStatus
  3672 ;; This function is called by:
  3673 ;;		_Temp_Main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function _setTemp_Main
  3679  03D2                     _setTemp_Main:	
  3680                           
  3681                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3682                           
  3683                           ;incstack = 0
  3684                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3685  03D2  3000               	movlw	0
  3686  03D3  158A  2733  118A   	fcall	_getMain_All_Error_Status
  3687  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  3688  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  3689  03D8  00DC               	movwf	??_setTemp_Main
  3690  03D9  085C               	movf	??_setTemp_Main,w
  3691  03DA  00DD               	movwf	setTemp_Main@error
  3692                           
  3693                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3694  03DB  01DF               	clrf	setTemp_Main@SafeValue
  3695  03DC  01E0               	clrf	setTemp_Main@DangerValue
  3696                           
  3697                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3698  03DD  158A  25EC  118A   	fcall	_getMain_All_LightsStatus
  3699  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3700  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3701  03E2  00DC               	movwf	??_setTemp_Main
  3702  03E3  085C               	movf	??_setTemp_Main,w
  3703  03E4  00DE               	movwf	setTemp_Main@TempGO
  3704                           
  3705                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3706  03E5  1C44               	btfss	_Temp,0
  3707  03E6  2C49               	goto	l942
  3708                           
  3709                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3710  03E7  1944               	btfsc	_Temp,2
  3711  03E8  2C05               	goto	l4449
  3712                           
  3713                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3714  03E9  085E               	movf	setTemp_Main@TempGO,w
  3715  03EA  3A01               	xorlw	1
  3716  03EB  1D03               	skipz
  3717  03EC  2BEF               	goto	l948
  3718  03ED  1CC4               	btfss	_Temp,1
  3719  03EE  2BF1               	goto	l4441
  3720  03EF                     l948:	
  3721  03EF  1CC4               	btfss	_Temp,1
  3722  03F0  2C02               	goto	l4447
  3723  03F1                     l4441:	
  3724                           
  3725                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3726  03F1  3001               	movlw	1
  3727  03F2  07C5               	addwf	_Temp+1,f
  3728  03F3  1803               	skipnc
  3729  03F4  0AC6               	incf	_Temp+2,f
  3730  03F5  3000               	movlw	0
  3731  03F6  07C6               	addwf	_Temp+2,f
  3732                           
  3733                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3734  03F7  3000               	movlw	0
  3735  03F8  0246               	subwf	_Temp+2,w
  3736  03F9  30FA               	movlw	250
  3737  03FA  1903               	skipnz
  3738  03FB  0245               	subwf	_Temp+1,w
  3739  03FC  1C03               	skipc
  3740  03FD  0008               	return
  3741                           
  3742                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3743  03FE  01C5               	clrf	_Temp+1
  3744  03FF  01C6               	clrf	_Temp+2
  3745                           
  3746                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3747  0400  1544               	bsf	_Temp,2
  3748                           
  3749                           ;OverTemperature_B1.c: 83: }
  3750                           ;OverTemperature_B1.c: 84: } else {
  3751  0401  0008               	return
  3752  0402                     l4447:	
  3753                           
  3754                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3755  0402  01C5               	clrf	_Temp+1
  3756  0403  01C6               	clrf	_Temp+2
  3757                           
  3758                           ;OverTemperature_B1.c: 86: }
  3759                           ;OverTemperature_B1.c: 87: } else {
  3760  0404  0008               	return
  3761  0405                     l4449:	
  3762                           
  3763                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3764  0405  3001               	movlw	1
  3765  0406  07C5               	addwf	_Temp+1,f
  3766  0407  1803               	skipnc
  3767  0408  0AC6               	incf	_Temp+2,f
  3768  0409  3000               	movlw	0
  3769  040A  07C6               	addwf	_Temp+2,f
  3770                           
  3771                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3772  040B  3000               	movlw	0
  3773  040C  0246               	subwf	_Temp+2,w
  3774  040D  3005               	movlw	5
  3775  040E  1903               	skipnz
  3776  040F  0245               	subwf	_Temp+1,w
  3777  0410  1C03               	skipc
  3778  0411  0008               	return
  3779                           
  3780                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3781  0412  01C5               	clrf	_Temp+1
  3782  0413  01C6               	clrf	_Temp+2
  3783                           
  3784                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3785  0414  084A               	movf	_Temp+6,w
  3786  0415  1903               	btfsc	3,2
  3787  0416  2C45               	goto	l953
  3788                           
  3789                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3790  0417  1144               	bcf	_Temp,2
  3791                           
  3792                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3793  0418  084A               	movf	_Temp+6,w
  3794  0419  00DC               	movwf	??_setTemp_Main
  3795  041A  085C               	movf	??_setTemp_Main,w
  3796  041B  00E1               	movwf	setTemp_Main@AD
  3797                           
  3798                           ;OverTemperature_B1.c: 109: SafeValue = 0x73;
  3799  041C  3073               	movlw	115
  3800  041D  00DC               	movwf	??_setTemp_Main
  3801  041E  085C               	movf	??_setTemp_Main,w
  3802  041F  00DF               	movwf	setTemp_Main@SafeValue
  3803                           
  3804                           ;OverTemperature_B1.c: 110: DangerValue = 0x64;
  3805  0420  3064               	movlw	100
  3806  0421  00DC               	movwf	??_setTemp_Main
  3807  0422  085C               	movf	??_setTemp_Main,w
  3808  0423  00E0               	movwf	setTemp_Main@DangerValue
  3809                           
  3810                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3811  0424  1CC4               	btfss	_Temp,1
  3812  0425  2C35               	goto	l4473
  3813                           
  3814                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3815  0426  085F               	movf	setTemp_Main@SafeValue,w
  3816  0427  0261               	subwf	setTemp_Main@AD,w
  3817  0428  1C03               	skipc
  3818  0429  2C44               	goto	l4483
  3819                           
  3820                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3821  042A  3001               	movlw	1
  3822  042B  00DC               	movwf	??_setTemp_Main
  3823  042C  085C               	movf	??_setTemp_Main,w
  3824  042D  07C7               	addwf	_Temp+3,f
  3825                           
  3826                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3827  042E  3003               	movlw	3
  3828  042F  0247               	subwf	_Temp+3,w
  3829  0430  1C03               	skipc
  3830  0431  2C45               	goto	l953
  3831                           
  3832                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3833  0432  01C7               	clrf	_Temp+3
  3834                           
  3835                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3836  0433  10C4               	bcf	_Temp,1
  3837                           
  3838                           ;OverTemperature_B1.c: 126: }
  3839                           ;OverTemperature_B1.c: 127: } else {
  3840                           
  3841                           ;OverTemperature_B1.c: 125: ;;
  3842  0434  2C45               	goto	l953
  3843  0435                     l4473:	
  3844                           ;OverTemperature_B1.c: 129: }
  3845                           ;OverTemperature_B1.c: 130: } else {
  3846                           
  3847                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3848                           
  3849                           
  3850                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3851  0435  0861               	movf	setTemp_Main@AD,w
  3852  0436  0260               	subwf	setTemp_Main@DangerValue,w
  3853  0437  1C03               	skipc
  3854  0438  2C44               	goto	l4483
  3855                           
  3856                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3857  0439  3001               	movlw	1
  3858  043A  00DC               	movwf	??_setTemp_Main
  3859  043B  085C               	movf	??_setTemp_Main,w
  3860  043C  07C7               	addwf	_Temp+3,f
  3861                           
  3862                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3863  043D  3003               	movlw	3
  3864  043E  0247               	subwf	_Temp+3,w
  3865  043F  1C03               	skipc
  3866  0440  2C45               	goto	l953
  3867                           
  3868                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3869  0441  01C7               	clrf	_Temp+3
  3870                           
  3871                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3872  0442  14C4               	bsf	_Temp,1
  3873                           
  3874                           ;OverTemperature_B1.c: 136: }
  3875                           ;OverTemperature_B1.c: 137: } else {
  3876  0443  2C45               	goto	l953
  3877  0444                     l4483:	
  3878                           
  3879                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3880  0444  01C7               	clrf	_Temp+3
  3881  0445                     l953:	
  3882                           ;OverTemperature_B1.c: 139: }
  3883                           ;OverTemperature_B1.c: 140: }
  3884                           ;OverTemperature_B1.c: 141: ;;
  3885                           ;OverTemperature_B1.c: 142: ;;
  3886                           
  3887                           
  3888                           ;OverTemperature_B1.c: 158: }
  3889                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3890  0445  01C8               	clrf	_Temp+4
  3891                           
  3892                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3893  0446  01C9               	clrf	_Temp+5
  3894                           
  3895                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3896  0447  01CA               	clrf	_Temp+6
  3897                           
  3898                           ;OverTemperature_B1.c: 162: }
  3899                           ;OverTemperature_B1.c: 163: }
  3900                           ;OverTemperature_B1.c: 166: } else {
  3901  0448  0008               	return
  3902  0449                     l942:	
  3903                           
  3904                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3905  0449  1C31               	btfss	_myMain,0
  3906  044A  0008               	return
  3907                           
  3908                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3909  044B  1444               	bsf	_Temp,0
  3910  044C  0008               	return
  3911  044D                     __end_of_setTemp_Main:	
  3912                           
  3913                           	psect	text15
  3914  0D7D                     __ptext15:	
  3915 ;; *************** function _Temp_Initialization *****************
  3916 ;; Defined at:
  3917 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;		None               void
  3924 ;; Registers used:
  3925 ;;		status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3931 ;;      Params:         0       0       0       0
  3932 ;;      Locals:         0       0       0       0
  3933 ;;      Temps:          0       0       0       0
  3934 ;;      Totals:         0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    4
  3938 ;; This function calls:
  3939 ;;		_setTemp_Initialization
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _Temp_Initialization
  3947  0D7D                     _Temp_Initialization:	
  3948                           
  3949                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3953  0D7D  158A  2578         	fcall	_setTemp_Initialization
  3954  0D7F  0008               	return
  3955  0D80                     __end_of_Temp_Initialization:	
  3956                           
  3957                           	psect	text16
  3958  0D78                     __ptext16:	
  3959 ;; *************** function _setTemp_Initialization *****************
  3960 ;; Defined at:
  3961 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;		None               void
  3968 ;; Registers used:
  3969 ;;		None
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3975 ;;      Params:         0       0       0       0
  3976 ;;      Locals:         0       0       0       0
  3977 ;;      Temps:          0       0       0       0
  3978 ;;      Totals:         0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    3
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_Temp_Initialization
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _setTemp_Initialization
  3991  0D78                     _setTemp_Initialization:	
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in _setTemp_Initialization: []
  3995  0D78  0008               	return
  3996  0D79                     __end_of_setTemp_Initialization:	
  3997                           
  3998                           	psect	text17
  3999  0027                     __ptext17:	
  4000 ;; *************** function _PIR_Main *****************
  4001 ;; Defined at:
  4002 ;;		line 13 in file "../src/PIR_B1.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  LightsStatus    1   16[BANK0 ] unsigned char 
  4007 ;;  cds             1   15[BANK0 ] unsigned char 
  4008 ;;  TriggerValue    1   14[BANK0 ] unsigned char 
  4009 ;;  Enable_Switc    1   11[BANK0 ] unsigned char 
  4010 ;;  error           1   10[BANK0 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;		None               void
  4013 ;; Registers used:
  4014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4020 ;;      Params:         0       0       0       0
  4021 ;;      Locals:         0       7       0       0
  4022 ;;      Temps:          0       5       0       0
  4023 ;;      Totals:         0      12       0       0
  4024 ;;Total ram usage:       12 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    5
  4027 ;; This function calls:
  4028 ;;		_getCDS_Status
  4029 ;;		_getDimmerLights_Status
  4030 ;;		_getMain_All_Error_Status
  4031 ;;		_setLED
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _PIR_Main
  4039  0027                     _PIR_Main:	
  4040                           
  4041                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4045  0027  3000               	movlw	0
  4046  0028  158A  2733  118A   	fcall	_getMain_All_Error_Status
  4047  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4048  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4049  002D  00DC               	movwf	??_PIR_Main
  4050  002E  085C               	movf	??_PIR_Main,w
  4051  002F  00E1               	movwf	PIR_Main@error
  4052                           
  4053                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4054  0030  158A  25AC  118A   	fcall	_getCDS_Status
  4055  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0035  00DC               	movwf	??_PIR_Main
  4058  0036  085C               	movf	??_PIR_Main,w
  4059  0037  00E6               	movwf	PIR_Main@cds
  4060                           
  4061                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4062  0038  01E7               	clrf	PIR_Main@LightsStatus
  4063                           
  4064                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4065  0039  01E2               	clrf	PIR_Main@Enable_Switch
  4066  003A  0AE2               	incf	PIR_Main@Enable_Switch,f
  4067                           
  4068                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4069  003B  01E5               	clrf	PIR_Main@TriggerValue
  4070                           
  4071                           ;PIR_B1.c: 31: LightsStatus = getDimmerLights_Status(1);
  4072  003C  3001               	movlw	1
  4073  003D  158A  2641  118A   	fcall	_getDimmerLights_Status
  4074  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4076  0042  00DC               	movwf	??_PIR_Main
  4077  0043  085C               	movf	??_PIR_Main,w
  4078  0044  00E7               	movwf	PIR_Main@LightsStatus
  4079                           
  4080                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4081  0045  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0046  1303               	bcf	3,6	;RP1=0, select bank1
  4083  0047  1C20               	btfss	__PIR^(0+128),0
  4084  0048  29FD               	goto	l1018
  4085                           
  4086                           ;PIR_B1.c: 36: if (error == 0) {
  4087  0049  1283               	bcf	3,5	;RP0=0, select bank0
  4088  004A  1303               	bcf	3,6	;RP1=0, select bank0
  4089  004B  08E1               	movf	PIR_Main@error,f
  4090  004C  1D03               	skipz
  4091  004D  2889               	goto	l1019
  4092                           
  4093                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4094  004E  0866               	movf	PIR_Main@cds,w
  4095  004F  3A01               	xorlw	1
  4096  0050  1D03               	skipz
  4097  0051  285A               	goto	l1020
  4098  0052  0862               	movf	PIR_Main@Enable_Switch,w
  4099  0053  3A01               	xorlw	1
  4100  0054  1D03               	skipz
  4101  0055  285A               	goto	l1020
  4102                           
  4103                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4104  0056  1683               	bsf	3,5	;RP0=1, select bank1
  4105  0057  1303               	bcf	3,6	;RP1=0, select bank1
  4106  0058  17A0               	bsf	__PIR^(0+128),7
  4107                           
  4108                           ;PIR_B1.c: 40: } else {
  4109  0059  2879               	goto	l1021
  4110  005A                     l1020:	
  4111                           
  4112                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4113  005A  1683               	bsf	3,5	;RP0=1, select bank1
  4114  005B  1303               	bcf	3,6	;RP1=0, select bank1
  4115  005C  13A0               	bcf	__PIR^(0+128),7
  4116                           
  4117                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4118  005D  1DA0               	btfss	__PIR^(0+128),3
  4119  005E  2879               	goto	l1021
  4120                           
  4121                           ;PIR_B1.c: 45: setLED(1, 0);
  4122  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4124  0061  01D9               	clrf	setLED@command
  4125  0062  3001               	movlw	1
  4126  0063  118A  24BE  118A   	fcall	_setLED
  4127                           
  4128                           ;PIR_B1.c: 46: setLED(2, 0);
  4129  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4130  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4131  0068  01D9               	clrf	setLED@command
  4132  0069  3002               	movlw	2
  4133  006A  118A  24BE  118A   	fcall	_setLED
  4134                           
  4135                           ;PIR_B1.c: 59: if (getDimmerLights_Status(1) == 1) {
  4136  006D  3001               	movlw	1
  4137  006E  158A  2641  118A   	fcall	_getDimmerLights_Status
  4138  0071  3A01               	xorlw	1
  4139  0072  1D03               	skipz
  4140  0073  2879               	goto	l1021
  4141                           
  4142                           ;PIR_B1.c: 60: Dimmer.PIR_Trigger = 1;
  4143  0074  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0075  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0076  16AC               	bsf	_Dimmer,5
  4146                           
  4147                           ;PIR_B1.c: 61: Dimmer.PIR_Sw = 0;
  4148  0077  122C               	bcf	_Dimmer,4
  4149                           
  4150                           ;PIR_B1.c: 62: Dimmer.PIR_Lights_Status = 1;
  4151  0078  152D               	bsf	_Dimmer+1,2
  4152  0079                     l1021:	
  4153                           
  4154                           ;PIR_B1.c: 63: }
  4155                           ;PIR_B1.c: 67: }
  4156                           ;PIR_B1.c: 68: }
  4157                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4158  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4159  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4160  007B  1A20               	btfsc	__PIR^(0+128),4
  4161  007C  288F               	goto	l1026
  4162                           
  4163                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4164  007D  1620               	bsf	__PIR^(0+128),4
  4165                           
  4166                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4167  007E  19A0               	btfsc	__PIR^(0+128),3
  4168  007F  288F               	goto	l1026
  4169                           
  4170                           ;PIR_B1.c: 76: setLED(1, 1);
  4171  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4172  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4173  0082  01D9               	clrf	setLED@command
  4174  0083  0AD9               	incf	setLED@command,f
  4175  0084  3001               	movlw	1
  4176  0085  118A  24BE  118A   	fcall	_setLED
  4177                           
  4178                           ;PIR_B1.c: 77: }
  4179                           ;PIR_B1.c: 80: }
  4180                           ;PIR_B1.c: 81: } else {
  4181  0088  288F               	goto	l1026
  4182  0089                     l1019:	
  4183                           
  4184                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4185  0089  1683               	bsf	3,5	;RP0=1, select bank1
  4186  008A  1303               	bcf	3,6	;RP1=0, select bank1
  4187  008B  1E20               	btfss	__PIR^(0+128),4
  4188  008C  288F               	goto	l1026
  4189                           
  4190                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4191  008D  1220               	bcf	__PIR^(0+128),4
  4192                           
  4193                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4194  008E  13A0               	bcf	__PIR^(0+128),7
  4195  008F                     l1026:	
  4196                           
  4197                           ;PIR_B1.c: 102: }
  4198                           ;PIR_B1.c: 103: }
  4199                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4200  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4201  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4202  0091  18A0               	btfsc	__PIR^(0+128),1
  4203  0092  28A2               	goto	l1028
  4204                           
  4205                           ;PIR_B1.c: 106: _PIR.Time++;
  4206  0093  3001               	movlw	1
  4207  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4208  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4209  0096  00DC               	movwf	??_PIR_Main
  4210  0097  085C               	movf	??_PIR_Main,w
  4211  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4212  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4213  009A  07A2               	addwf	(__PIR^(0+128)+2),f
  4214                           
  4215                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4216  009B  0822               	movf	(__PIR^(0+128)+2),w
  4217  009C  3A05               	xorlw	5
  4218  009D  1D03               	skipz
  4219  009E  29A4               	goto	l4837
  4220                           
  4221                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4222  009F  01A2               	clrf	(__PIR^(0+128)+2)
  4223                           
  4224                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4225  00A0  14A0               	bsf	__PIR^(0+128),1
  4226                           
  4227                           ;PIR_B1.c: 110: }
  4228                           ;PIR_B1.c: 111: } else {
  4229  00A1  29A4               	goto	l4837
  4230  00A2                     l1028:	
  4231                           
  4232                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4233  00A2  1D20               	btfss	__PIR^(0+128),2
  4234  00A3  29A4               	goto	l4837
  4235                           
  4236                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4237  00A4  1120               	bcf	__PIR^(0+128),2
  4238                           
  4239                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4240  00A5  10A0               	bcf	__PIR^(0+128),1
  4241                           
  4242                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4243  00A6  1BA0               	btfsc	__PIR^(0+128),7
  4244                           
  4245                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4246  00A7  1DA0               	btfss	__PIR^(0+128),3
  4247  00A8  29A4               	goto	l4837
  4248                           
  4249                           ;PIR_B1.c: 118: _PIR.Time++;
  4250  00A9  3001               	movlw	1
  4251  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4252  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4253  00AC  00DC               	movwf	??_PIR_Main
  4254  00AD  085C               	movf	??_PIR_Main,w
  4255  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  4256  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  4257  00B0  07A2               	addwf	(__PIR^(0+128)+2),f
  4258                           
  4259                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4260  00B1  0822               	movf	(__PIR^(0+128)+2),w
  4261  00B2  3A3C               	xorlw	60
  4262  00B3  1D03               	skipz
  4263  00B4  28E9               	goto	l4805
  4264                           
  4265                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4266  00B5  01A2               	clrf	(__PIR^(0+128)+2)
  4267                           
  4268                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4269  00B6  305A               	movlw	90
  4270  00B7  0247               	subwf	(__PIR^(0+128)+39),w
  4271  00B8  1C03               	skipc
  4272  00B9  28C5               	goto	l4787
  4273                           
  4274                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4275  00BA  01C6               	clrf	(__PIR^(0+128)+38)
  4276                           
  4277                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4278  00BB  0848               	movf	(__PIR^(0+128)+40),w
  4279  00BC  3A19               	xorlw	25
  4280  00BD  1903               	btfsc	3,2
  4281  00BE  28DA               	goto	L11
  4282                           
  4283                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4284                           
  4285                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4286  00BF  0848               	movf	(__PIR^(0+128)+40),w
  4287  00C0  3A23               	xorlw	35
  4288  00C1  1D03               	skipz
  4289  00C2  28E8               	goto	l4803
  4290                           
  4291                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4292  00C3  302D               	movlw	45
  4293  00C4  28E1               	goto	L8
  4294  00C5                     l4787:	
  4295                           ;PIR_B1.c: 128: }
  4296                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4297                           
  4298  00C5  300B               	movlw	11
  4299  00C6  0247               	subwf	(__PIR^(0+128)+39),w
  4300  00C7  1803               	skipnc
  4301  00C8  28E8               	goto	l4803
  4302                           
  4303                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4304  00C9  3001               	movlw	1
  4305  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4306  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4307  00CC  00DC               	movwf	??_PIR_Main
  4308  00CD  085C               	movf	??_PIR_Main,w
  4309  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4310  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  4311  00D0  07C6               	addwf	(__PIR^(0+128)+38),f
  4312                           
  4313                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4314  00D1  0846               	movf	(__PIR^(0+128)+38),w
  4315  00D2  3A02               	xorlw	2
  4316  00D3  1D03               	skipz
  4317  00D4  28E8               	goto	l4803
  4318                           
  4319                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4320  00D5  01C6               	clrf	(__PIR^(0+128)+38)
  4321                           
  4322                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4323  00D6  0848               	movf	(__PIR^(0+128)+40),w
  4324  00D7  3A2D               	xorlw	45
  4325  00D8  1D03               	skipz
  4326  00D9  28DC               	goto	l4799
  4327  00DA                     L11:	
  4328                           
  4329                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4330  00DA  3023               	movlw	35
  4331  00DB  28E1               	goto	L8
  4332  00DC                     l4799:	
  4333                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4334                           
  4335  00DC  0848               	movf	(__PIR^(0+128)+40),w
  4336  00DD  3A23               	xorlw	35
  4337  00DE  1D03               	skipz
  4338  00DF  28E8               	goto	l4803
  4339                           
  4340                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4341  00E0  3019               	movlw	25
  4342  00E1                     L8:	
  4343  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4344  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4345  00E3  00DC               	movwf	??_PIR_Main
  4346  00E4  085C               	movf	??_PIR_Main,w
  4347  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4348  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  4349  00E7  00C8               	movwf	(__PIR^(0+128)+40)
  4350  00E8                     l4803:	
  4351                           
  4352                           ;PIR_B1.c: 138: }
  4353                           ;PIR_B1.c: 139: }
  4354                           ;PIR_B1.c: 140: }
  4355                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4356  00E8  01C7               	clrf	(__PIR^(0+128)+39)
  4357  00E9                     l4805:	
  4358                           
  4359                           ;PIR_B1.c: 142: }
  4360                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4361                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4362  00E9  0848               	movf	(__PIR^(0+128)+40),w
  4363  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4364  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4365  00EC  00DC               	movwf	??_PIR_Main
  4366  00ED  01DD               	clrf	??_PIR_Main+1
  4367  00EE  09DC               	comf	??_PIR_Main,f
  4368  00EF  09DD               	comf	??_PIR_Main+1,f
  4369  00F0  0ADC               	incf	??_PIR_Main,f
  4370  00F1  1903               	skipnz
  4371  00F2  0ADD               	incf	??_PIR_Main+1,f
  4372  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  4373  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  4374  00F5  0823               	movf	(__PIR^(0+128)+3),w
  4375  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4376  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4377  00F8  075C               	addwf	??_PIR_Main,w
  4378  00F9  00DE               	movwf	??_PIR_Main+2
  4379  00FA  085D               	movf	??_PIR_Main+1,w
  4380  00FB  1803               	skipnc
  4381  00FC  0A5D               	incf	??_PIR_Main+1,w
  4382  00FD  00DF               	movwf	??_PIR_Main+3
  4383  00FE  085F               	movf	??_PIR_Main+3,w
  4384  00FF  3A80               	xorlw	128
  4385  0100  3C80               	sublw	128
  4386  0101  1D03               	skipz
  4387  0102  2907               	goto	u5925
  4388  0103  085E               	movf	??_PIR_Main+2,w
  4389  0104  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0105  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0106  0221               	subwf	(__PIR^(0+128)+1),w
  4392  0107                     u5925:	
  4393  0107  1C03               	skipc
  4394  0108  2929               	goto	l4815
  4395  0109  1683               	bsf	3,5	;RP0=1, select bank1
  4396  010A  1303               	bcf	3,6	;RP1=0, select bank1
  4397  010B  0823               	movf	(__PIR^(0+128)+3),w
  4398  010C  0748               	addwf	(__PIR^(0+128)+40),w
  4399  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4400  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4401  010F  00DC               	movwf	??_PIR_Main
  4402  0110  01DD               	clrf	??_PIR_Main+1
  4403  0111  0DDD               	rlf	??_PIR_Main+1,f
  4404  0112  085D               	movf	??_PIR_Main+1,w
  4405  0113  3A80               	xorlw	128
  4406  0114  00DE               	movwf	??_PIR_Main+2
  4407  0115  3080               	movlw	128
  4408  0116  025E               	subwf	??_PIR_Main+2,w
  4409  0117  1D03               	skipz
  4410  0118  291F               	goto	u5935
  4411  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4412  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4413  011B  0821               	movf	(__PIR^(0+128)+1),w
  4414  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4415  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4416  011E  025C               	subwf	??_PIR_Main,w
  4417  011F                     u5935:	
  4418  011F  1C03               	skipc
  4419  0120  2929               	goto	l4815
  4420                           
  4421                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4422  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4423  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4424  0123  01BE               	clrf	(__PIR^(0+128)+30)
  4425  0124  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4426                           
  4427                           ;PIR_B1.c: 155: setLED(1, 0);
  4428  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0127  01D9               	clrf	setLED@command
  4431  0128  298D               	goto	L12
  4432  0129                     l4815:	
  4433                           ;PIR_B1.c: 159: } else {
  4434                           
  4435                           ;PIR_B1.c: 156: setLED(2, 0);
  4436                           
  4437                           
  4438                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4439  0129  3001               	movlw	1
  4440  012A  1283               	bcf	3,5	;RP0=0, select bank0
  4441  012B  1303               	bcf	3,6	;RP1=0, select bank0
  4442  012C  00DC               	movwf	??_PIR_Main
  4443  012D  085C               	movf	??_PIR_Main,w
  4444  012E  1683               	bsf	3,5	;RP0=1, select bank1
  4445  012F  1303               	bcf	3,6	;RP1=0, select bank1
  4446  0130  07C7               	addwf	(__PIR^(0+128)+39),f
  4447                           
  4448                           ;PIR_B1.c: 163: _PIR.Count++;
  4449  0131  3001               	movlw	1
  4450  0132  07BE               	addwf	(__PIR^(0+128)+30),f
  4451  0133  1803               	skipnc
  4452  0134  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4453  0135  3000               	movlw	0
  4454  0136  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4455                           
  4456                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4457  0137  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0138  1303               	bcf	3,6	;RP1=0, select bank0
  4459  0139  0867               	movf	PIR_Main@LightsStatus,w
  4460  013A  3A01               	xorlw	1
  4461  013B  1903               	skipnz
  4462  013C  293D               	goto	l4823
  4463  013D                     l4823:	
  4464  013D  3003               	movlw	3
  4465  013E  00E3               	movwf	_PIR_Main$3333
  4466  013F  3000               	movlw	0
  4467  0140  00E4               	movwf	_PIR_Main$3333+1
  4468  0141  0863               	movf	_PIR_Main$3333,w
  4469  0142  00DC               	movwf	??_PIR_Main
  4470  0143  085C               	movf	??_PIR_Main,w
  4471  0144  00E5               	movwf	PIR_Main@TriggerValue
  4472                           
  4473                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4474  0145  0865               	movf	PIR_Main@TriggerValue,w
  4475  0146  00DC               	movwf	??_PIR_Main
  4476  0147  01DD               	clrf	??_PIR_Main+1
  4477  0148  1683               	bsf	3,5	;RP0=1, select bank1
  4478  0149  1303               	bcf	3,6	;RP1=0, select bank1
  4479  014A  083F               	movf	((__PIR+1)^(0+128)+30),w
  4480  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4481  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4482  014D  065D               	xorwf	??_PIR_Main+1,w
  4483  014E  1D03               	skipz
  4484  014F  2956               	goto	u5955
  4485  0150  1683               	bsf	3,5	;RP0=1, select bank1
  4486  0151  1303               	bcf	3,6	;RP1=0, select bank1
  4487  0152  083E               	movf	(__PIR^(0+128)+30),w
  4488  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0155  065C               	xorwf	??_PIR_Main,w
  4491  0156                     u5955:	
  4492  0156  1D03               	skipz
  4493  0157  29A4               	goto	l4837
  4494                           
  4495                           ;PIR_B1.c: 168: _PIR.Count = 0;
  4496  0158  1683               	bsf	3,5	;RP0=1, select bank1
  4497  0159  1303               	bcf	3,6	;RP1=0, select bank1
  4498  015A  01BE               	clrf	(__PIR^(0+128)+30)
  4499  015B  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4500                           
  4501                           ;PIR_B1.c: 170: _PIR.CloseTimeSeconds = 0;
  4502  015C  01C2               	clrf	(__PIR^(0+128)+34)
  4503                           
  4504                           ;PIR_B1.c: 171: _PIR.CloseTimeMinutes = 0;
  4505  015D  01C0               	clrf	(__PIR^(0+128)+32)
  4506  015E  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4507                           
  4508                           ;PIR_B1.c: 189: Dimmer.PIR_Trigger = 1;
  4509  015F  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0160  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0161  16AC               	bsf	_Dimmer,5
  4512                           
  4513                           ;PIR_B1.c: 190: Dimmer.PIR_Sw = 1;
  4514  0162  162C               	bsf	_Dimmer,4
  4515                           
  4516                           ;PIR_B1.c: 195: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4517  0163  1683               	bsf	3,5	;RP0=1, select bank1
  4518  0164  1303               	bcf	3,6	;RP1=0, select bank1
  4519  0165  0848               	movf	(__PIR^(0+128)+40),w
  4520  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0168  00DC               	movwf	??_PIR_Main
  4523  0169  01DD               	clrf	??_PIR_Main+1
  4524  016A  09DC               	comf	??_PIR_Main,f
  4525  016B  09DD               	comf	??_PIR_Main+1,f
  4526  016C  0ADC               	incf	??_PIR_Main,f
  4527  016D  1903               	skipnz
  4528  016E  0ADD               	incf	??_PIR_Main+1,f
  4529  016F  1683               	bsf	3,5	;RP0=1, select bank1
  4530  0170  1303               	bcf	3,6	;RP1=0, select bank1
  4531  0171  0823               	movf	(__PIR^(0+128)+3),w
  4532  0172  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0173  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0174  075C               	addwf	??_PIR_Main,w
  4535  0175  00DE               	movwf	??_PIR_Main+2
  4536  0176  085D               	movf	??_PIR_Main+1,w
  4537  0177  1803               	skipnc
  4538  0178  0A5D               	incf	??_PIR_Main+1,w
  4539  0179  00DF               	movwf	??_PIR_Main+3
  4540  017A  085F               	movf	??_PIR_Main+3,w
  4541  017B  3A80               	xorlw	128
  4542  017C  00E0               	movwf	??_PIR_Main+4
  4543  017D  3080               	movlw	128
  4544  017E  0260               	subwf	??_PIR_Main+4,w
  4545  017F  1D03               	skipz
  4546  0180  2987               	goto	u5965
  4547  0181  1683               	bsf	3,5	;RP0=1, select bank1
  4548  0182  1303               	bcf	3,6	;RP1=0, select bank1
  4549  0183  0821               	movf	(__PIR^(0+128)+1),w
  4550  0184  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0185  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0186  025E               	subwf	??_PIR_Main+2,w
  4553  0187                     u5965:	
  4554  0187  1C03               	skipc
  4555  0188  2995               	goto	l4835
  4556                           
  4557                           ;PIR_B1.c: 196: setLED(1, 1);
  4558  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4559  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4560  018B  01D9               	clrf	setLED@command
  4561  018C  0AD9               	incf	setLED@command,f
  4562  018D                     L12:	
  4563  018D  3001               	movlw	1
  4564  018E  118A  24BE  118A   	fcall	_setLED
  4565                           
  4566                           ;PIR_B1.c: 197: setLED(2, 0);
  4567  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0193  01D9               	clrf	setLED@command
  4570  0194  29A0               	goto	L9
  4571  0195                     l4835:	
  4572                           ;PIR_B1.c: 198: } else {
  4573                           
  4574                           
  4575                           ;PIR_B1.c: 199: setLED(1, 0);
  4576  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0197  01D9               	clrf	setLED@command
  4579  0198  3001               	movlw	1
  4580  0199  118A  24BE  118A   	fcall	_setLED
  4581                           
  4582                           ;PIR_B1.c: 200: setLED(2, 1);
  4583  019C  1283               	bcf	3,5	;RP0=0, select bank0
  4584  019D  1303               	bcf	3,6	;RP1=0, select bank0
  4585  019E  01D9               	clrf	setLED@command
  4586  019F  0AD9               	incf	setLED@command,f
  4587  01A0                     L9:	
  4588  01A0  3002               	movlw	2
  4589  01A1  118A  24BE  118A   	fcall	_setLED
  4590  01A4                     l4837:	
  4591                           
  4592                           ;PIR_B1.c: 201: }
  4593                           ;PIR_B1.c: 243: }
  4594                           ;PIR_B1.c: 244: }
  4595                           ;PIR_B1.c: 245: }
  4596                           ;PIR_B1.c: 246: }
  4597                           ;PIR_B1.c: 247: }
  4598                           ;PIR_B1.c: 248: }
  4599                           ;PIR_B1.c: 249: if (_PIR.OK == 0) {
  4600  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4601  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  4602  01A6  19A0               	btfsc	__PIR^(0+128),3
  4603  01A7  29D1               	goto	l4853
  4604                           
  4605                           ;PIR_B1.c: 250: _PIR.Count++;
  4606  01A8  3001               	movlw	1
  4607  01A9  07BE               	addwf	(__PIR^(0+128)+30),f
  4608  01AA  1803               	skipnc
  4609  01AB  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4610  01AC  3000               	movlw	0
  4611  01AD  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4612                           
  4613                           ;PIR_B1.c: 251: if (_PIR.Count == (30000 / 20)) {
  4614  01AE  3005               	movlw	5
  4615  01AF  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4616  01B0  1D03               	skipz
  4617  01B1  29B4               	goto	u5985
  4618  01B2  30DC               	movlw	220
  4619  01B3  063E               	xorwf	(__PIR^(0+128)+30),w
  4620  01B4                     u5985:	
  4621  01B4  1D03               	skipz
  4622  01B5  0008               	return
  4623                           
  4624                           ;PIR_B1.c: 252: _PIR.Count = 0;
  4625  01B6  01BE               	clrf	(__PIR^(0+128)+30)
  4626  01B7  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4627                           
  4628                           ;PIR_B1.c: 253: _PIR.OK = 1;
  4629  01B8  15A0               	bsf	__PIR^(0+128),3
  4630                           
  4631                           ;PIR_B1.c: 255: setLED(1, 0);
  4632  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4633  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  4634  01BB  01D9               	clrf	setLED@command
  4635  01BC  3001               	movlw	1
  4636  01BD  118A  24BE  118A   	fcall	_setLED
  4637                           
  4638                           ;PIR_B1.c: 258: if (cds == 0) {
  4639  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  4640  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  4641  01C2  08E6               	movf	PIR_Main@cds,f
  4642  01C3  1D03               	skipz
  4643  01C4  0008               	return
  4644                           
  4645                           ;PIR_B1.c: 270: if (getDimmerLights_Status(1) == 1) {
  4646  01C5  3001               	movlw	1
  4647  01C6  158A  2641  118A   	fcall	_getDimmerLights_Status
  4648  01C9  3A01               	xorlw	1
  4649  01CA  1D03               	skipz
  4650  01CB  0008               	return
  4651                           
  4652                           ;PIR_B1.c: 271: Dimmer.PIR_Trigger = 1;
  4653  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4654  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  4655  01CE  16AC               	bsf	_Dimmer,5
  4656                           
  4657                           ;PIR_B1.c: 272: Dimmer.PIR_Sw = 0;
  4658  01CF  122C               	bcf	_Dimmer,4
  4659                           
  4660                           ;PIR_B1.c: 273: }
  4661                           ;PIR_B1.c: 277: }
  4662                           ;PIR_B1.c: 278: }
  4663                           ;PIR_B1.c: 279: } else {
  4664  01D0  0008               	return
  4665  01D1                     l4853:	
  4666                           
  4667                           ;PIR_B1.c: 280: if (LightsStatus == 1) {
  4668  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4669  01D2  0867               	movf	PIR_Main@LightsStatus,w
  4670  01D3  3A01               	xorlw	1
  4671  01D4  1D03               	skipz
  4672  01D5  0008               	return
  4673                           
  4674                           ;PIR_B1.c: 281: _PIR.CloseTimeSeconds++;
  4675  01D6  3001               	movlw	1
  4676  01D7  00DC               	movwf	??_PIR_Main
  4677  01D8  085C               	movf	??_PIR_Main,w
  4678  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  4679  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  4680  01DB  07C2               	addwf	(__PIR^(0+128)+34),f
  4681                           
  4682                           ;PIR_B1.c: 282: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4683  01DC  0842               	movf	(__PIR^(0+128)+34),w
  4684  01DD  3A32               	xorlw	50
  4685  01DE  1D03               	skipz
  4686  01DF  0008               	return
  4687                           
  4688                           ;PIR_B1.c: 283: _PIR.CloseTimeSeconds = 0;
  4689  01E0  01C2               	clrf	(__PIR^(0+128)+34)
  4690                           
  4691                           ;PIR_B1.c: 284: _PIR.CloseTimeMinutes++;
  4692  01E1  3001               	movlw	1
  4693  01E2  07C0               	addwf	(__PIR^(0+128)+32),f
  4694  01E3  1803               	skipnc
  4695  01E4  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4696  01E5  3000               	movlw	0
  4697  01E6  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4698                           
  4699                           ;PIR_B1.c: 285: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4700  01E7  0844               	movf	((__PIR+1)^(0+128)+35),w
  4701  01E8  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4702  01E9  1D03               	skipz
  4703  01EA  29ED               	goto	u6035
  4704  01EB  0843               	movf	(__PIR^(0+128)+35),w
  4705  01EC  0640               	xorwf	(__PIR^(0+128)+32),w
  4706  01ED                     u6035:	
  4707  01ED  1D03               	skipz
  4708  01EE  0008               	return
  4709                           
  4710                           ;PIR_B1.c: 286: _PIR.CloseTimeMinutes = 0;
  4711  01EF  01C0               	clrf	(__PIR^(0+128)+32)
  4712  01F0  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4713                           
  4714                           ;PIR_B1.c: 302: if (getDimmerLights_Status(1) == 1) {
  4715  01F1  3001               	movlw	1
  4716  01F2  158A  2641  118A   	fcall	_getDimmerLights_Status
  4717  01F5  3A01               	xorlw	1
  4718  01F6  1D03               	skipz
  4719  01F7  0008               	return
  4720                           
  4721                           ;PIR_B1.c: 303: Dimmer.PIR_Trigger = 1;
  4722  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  4723  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  4724  01FA  16AC               	bsf	_Dimmer,5
  4725                           
  4726                           ;PIR_B1.c: 304: Dimmer.PIR_Sw = 0;
  4727  01FB  122C               	bcf	_Dimmer,4
  4728                           
  4729                           ;PIR_B1.c: 305: }
  4730                           ;PIR_B1.c: 308: }
  4731                           ;PIR_B1.c: 309: }
  4732                           ;PIR_B1.c: 310: }
  4733                           ;PIR_B1.c: 311: }
  4734                           ;PIR_B1.c: 312: } else {
  4735  01FC  0008               	return
  4736  01FD                     l1018:	
  4737                           
  4738                           ;PIR_B1.c: 313: if (myMain.PowerON == 1) {
  4739  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  4740  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  4741  01FF  1C31               	btfss	_myMain,0
  4742  0200  0008               	return
  4743                           
  4744                           ;PIR_B1.c: 314: _PIR.Enable = 1;
  4745  0201  1683               	bsf	3,5	;RP0=1, select bank1
  4746  0202  1303               	bcf	3,6	;RP1=0, select bank1
  4747  0203  1420               	bsf	__PIR^(0+128),0
  4748                           
  4749                           ;PIR_B1.c: 316: setLED(1, 1);
  4750  0204  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0205  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0206  01D9               	clrf	setLED@command
  4753  0207  0AD9               	incf	setLED@command,f
  4754  0208  3001               	movlw	1
  4755  0209  118A  24BE         	fcall	_setLED
  4756                           
  4757                           ;PIR_B1.c: 331: Dimmer.PIR_Trigger = 1;
  4758  020B  1283               	bcf	3,5	;RP0=0, select bank0
  4759  020C  1303               	bcf	3,6	;RP1=0, select bank0
  4760  020D  16AC               	bsf	_Dimmer,5
  4761                           
  4762                           ;PIR_B1.c: 332: Dimmer.PIR_Sw = 1;
  4763  020E  162C               	bsf	_Dimmer,4
  4764  020F  0008               	return
  4765  0210                     __end_of_PIR_Main:	
  4766                           
  4767                           	psect	text18
  4768  0DAC                     __ptext18:	
  4769 ;; *************** function _getCDS_Status *****************
  4770 ;; Defined at:
  4771 ;;		line 42 in file "../src/CDS_B1.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;		None
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  status          1    0[BANK0 ] unsigned char 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      unsigned char 
  4778 ;; Registers used:
  4779 ;;		wreg, status,2
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4785 ;;      Params:         0       0       0       0
  4786 ;;      Locals:         0       1       0       0
  4787 ;;      Temps:          0       0       0       0
  4788 ;;      Totals:         0       1       0       0
  4789 ;;Total ram usage:        1 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    3
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_PIR_Main
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function _getCDS_Status
  4801  0DAC                     _getCDS_Status:	
  4802                           
  4803                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4804                           
  4805                           ;incstack = 0
  4806                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4807  0DAC  3000               	movlw	0
  4808  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4809  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4810  0DAF  1A3A               	btfsc	__CDS,4
  4811  0DB0  3001               	movlw	1
  4812  0DB1  00D7               	movwf	getCDS_Status@status
  4813                           
  4814                           ;CDS_B1.c: 44: return status;
  4815  0DB2  0857               	movf	getCDS_Status@status,w
  4816  0DB3  0008               	return
  4817  0DB4                     __end_of_getCDS_Status:	
  4818                           
  4819                           	psect	text19
  4820  0DF9                     __ptext19:	
  4821 ;; *************** function _PIR_Initialization *****************
  4822 ;; Defined at:
  4823 ;;		line 7 in file "../src/PIR_B1.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;		None               void
  4830 ;; Registers used:
  4831 ;;		wreg
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4837 ;;      Params:         0       0       0       0
  4838 ;;      Locals:         0       0       0       0
  4839 ;;      Temps:          0       1       0       0
  4840 ;;      Totals:         0       1       0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    3
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _PIR_Initialization
  4853  0DF9                     _PIR_Initialization:	
  4854                           
  4855                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4856                           
  4857                           ;incstack = 0
  4858                           ; Regs used in _PIR_Initialization: [wreg]
  4859  0DF9  3019               	movlw	25
  4860  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4861  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4862  0DFC  00D7               	movwf	??_PIR_Initialization
  4863  0DFD  0857               	movf	??_PIR_Initialization,w
  4864  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  4865  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  4866  0E00  00C8               	movwf	(__PIR^(0+128)+40)
  4867                           
  4868                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4869  0E01  3005               	movlw	5
  4870  0E02  00C3               	movwf	(__PIR^(0+128)+35)
  4871  0E03  3000               	movlw	0
  4872  0E04  00C4               	movwf	(__PIR^(0+128)+36)
  4873  0E05  0008               	return
  4874  0E06                     __end_of_PIR_Initialization:	
  4875                           
  4876                           	psect	text20
  4877  0E22                     __ptext20:	
  4878 ;; *************** function _Mcu_Initialization *****************
  4879 ;; Defined at:
  4880 ;;		line 30 in file "../src/MCU_B1.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;		None               void
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0, pclath, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4894 ;;      Params:         0       0       0       0
  4895 ;;      Locals:         0       0       0       0
  4896 ;;      Temps:          0       0       0       0
  4897 ;;      Totals:         0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    4
  4901 ;; This function calls:
  4902 ;;		_ADC_Set
  4903 ;;		_Fosc_Set
  4904 ;;		_IO_Set
  4905 ;;		_TMR1_Set
  4906 ;;		_WDT_Set
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _Mcu_Initialization
  4914  0E22                     _Mcu_Initialization:	
  4915                           
  4916                           ;MCU_B1.c: 32: Fosc_Set();
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4920  0E22  158A  258C  158A   	fcall	_Fosc_Set
  4921                           
  4922                           ;MCU_B1.c: 34: IO_Set();
  4923  0E25  158A  271B  158A   	fcall	_IO_Set
  4924                           
  4925                           ;MCU_B1.c: 36: ;;
  4926                           ;MCU_B1.c: 38: TMR1_Set();
  4927  0E28  158A  2614  158A   	fcall	_TMR1_Set
  4928                           
  4929                           ;MCU_B1.c: 40: ADC_Set();
  4930  0E2B  158A  25A5  158A   	fcall	_ADC_Set
  4931                           
  4932                           ;MCU_B1.c: 42: ;;
  4933                           ;MCU_B1.c: 44: ;;
  4934                           ;MCU_B1.c: 46: ;;
  4935                           ;MCU_B1.c: 48: ;;
  4936                           ;MCU_B1.c: 50: ;;
  4937                           ;MCU_B1.c: 52: WDT_Set();
  4938  0E2E  118A  27F2         	fcall	_WDT_Set
  4939  0E30  0008               	return
  4940  0E31                     __end_of_Mcu_Initialization:	
  4941                           
  4942                           	psect	text21
  4943  07F2                     __ptext21:	
  4944 ;; *************** function _WDT_Set *****************
  4945 ;; Defined at:
  4946 ;;		line 1102 in file "../src/MCU_B1.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;		None               void
  4953 ;; Registers used:
  4954 ;;		wreg
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4960 ;;      Params:         0       0       0       0
  4961 ;;      Locals:         0       0       0       0
  4962 ;;      Temps:          0       1       0       0
  4963 ;;      Totals:         0       1       0       0
  4964 ;;Total ram usage:        1 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    3
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_Mcu_Initialization
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           
  4975                           ;psect for function _WDT_Set
  4976  07F2                     _WDT_Set:	
  4977                           
  4978                           ;MCU_B1.c: 1104: PSA = 1;
  4979                           
  4980                           ;incstack = 0
  4981                           ; Regs used in _WDT_Set: [wreg]
  4982  07F2  1683               	bsf	3,5	;RP0=1, select bank1
  4983  07F3  1303               	bcf	3,6	;RP1=0, select bank1
  4984  07F4  1581               	bsf	1,3	;volatile
  4985                           
  4986                           ;MCU_B1.c: 1105: PS0 = 1;
  4987  07F5  1401               	bsf	1,0	;volatile
  4988                           
  4989                           ;MCU_B1.c: 1106: PS1 = 1;
  4990  07F6  1481               	bsf	1,1	;volatile
  4991                           
  4992                           ;MCU_B1.c: 1107: PS2 = 1;
  4993  07F7  1501               	bsf	1,2	;volatile
  4994                           
  4995                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  4996  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  4997  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  4998  07FA  1441               	bsf	_WDT,0
  4999                           
  5000                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  5001  07FB  300A               	movlw	10
  5002  07FC  00D7               	movwf	??_WDT_Set
  5003  07FD  0857               	movf	??_WDT_Set,w
  5004  07FE  00C2               	movwf	_WDT+1
  5005  07FF  0008               	return
  5006  0800                     __end_of_WDT_Set:	
  5007                           
  5008                           	psect	text22
  5009  0E14                     __ptext22:	
  5010 ;; *************** function _TMR1_Set *****************
  5011 ;; Defined at:
  5012 ;;		line 226 in file "../src/MCU_B1.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;		None
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;		None
  5017 ;; Return value:  Size  Location     Type
  5018 ;;		None               void
  5019 ;; Registers used:
  5020 ;;		wreg
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5026 ;;      Params:         0       0       0       0
  5027 ;;      Locals:         0       0       0       0
  5028 ;;      Temps:          0       0       0       0
  5029 ;;      Totals:         0       0       0       0
  5030 ;;Total ram usage:        0 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    3
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_Mcu_Initialization
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _TMR1_Set
  5042  0E14                     _TMR1_Set:	
  5043                           
  5044                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _TMR1_Set: [wreg]
  5048  0E14  3041               	movlw	65
  5049  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0E17  0090               	movwf	16	;volatile
  5052                           
  5053                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5054  0E18  30FA               	movlw	250
  5055  0E19  008F               	movwf	15	;volatile
  5056                           
  5057                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5058  0E1A  3038               	movlw	56
  5059  0E1B  008E               	movwf	14	;volatile
  5060                           
  5061                           ;MCU_B1.c: 230: TMR1IE = 1;
  5062  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  5063  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  5064  0E1E  140C               	bsf	12,0	;volatile
  5065                           
  5066                           ;MCU_B1.c: 231: PEIE = 1;
  5067  0E1F  170B               	bsf	11,6	;volatile
  5068                           
  5069                           ;MCU_B1.c: 232: GIE = 1;
  5070  0E20  178B               	bsf	11,7	;volatile
  5071  0E21  0008               	return
  5072  0E22                     __end_of_TMR1_Set:	
  5073                           
  5074                           	psect	text23
  5075  0F1B                     __ptext23:	
  5076 ;; *************** function _IO_Set *****************
  5077 ;; Defined at:
  5078 ;;		line 60 in file "../src/MCU_B1.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;		None               void
  5085 ;; Registers used:
  5086 ;;		wreg, status,2
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5092 ;;      Params:         0       0       0       0
  5093 ;;      Locals:         0       0       0       0
  5094 ;;      Temps:          0       0       0       0
  5095 ;;      Totals:         0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    3
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_Mcu_Initialization
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function _IO_Set
  5108  0F1B                     _IO_Set:	
  5109                           
  5110                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _IO_Set: [wreg+status,2]
  5114  0F1B  30AF               	movlw	175
  5115  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  5116  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  5117  0F1E  0085               	movwf	5	;volatile
  5118                           
  5119                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5120  0F1F  3001               	movlw	1
  5121  0F20  0086               	movwf	6	;volatile
  5122                           
  5123                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5124  0F21  0187               	clrf	7	;volatile
  5125                           
  5126                           ;MCU_B1.c: 65: ANSELA = 0b10100111;;
  5127  0F22  30A7               	movlw	167
  5128  0F23  1683               	bsf	3,5	;RP0=1, select bank3
  5129  0F24  1703               	bsf	3,6	;RP1=1, select bank3
  5130  0F25  0085               	movwf	5	;volatile
  5131                           
  5132                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5133  0F26  3001               	movlw	1
  5134  0F27  0086               	movwf	6	;volatile
  5135                           
  5136                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5137  0F28  30AF               	movlw	175
  5138  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0F2B  0085               	movwf	5	;volatile
  5141                           
  5142                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5143  0F2C  3001               	movlw	1
  5144  0F2D  0086               	movwf	6	;volatile
  5145                           
  5146                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5147  0F2E  0187               	clrf	7	;volatile
  5148                           
  5149                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5150  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  5151  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  5152  0F31  0195               	clrf	21	;volatile
  5153  0F32  0008               	return
  5154  0F33                     __end_of_IO_Set:	
  5155                           
  5156                           	psect	text24
  5157  0D8C                     __ptext24:	
  5158 ;; *************** function _Fosc_Set *****************
  5159 ;; Defined at:
  5160 ;;		line 56 in file "../src/MCU_B1.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;		None               void
  5167 ;; Registers used:
  5168 ;;		wreg
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5174 ;;      Params:         0       0       0       0
  5175 ;;      Locals:         0       0       0       0
  5176 ;;      Temps:          0       0       0       0
  5177 ;;      Totals:         0       0       0       0
  5178 ;;Total ram usage:        0 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    3
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_Mcu_Initialization
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function _Fosc_Set
  5190  0D8C                     _Fosc_Set:	
  5191                           
  5192                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5193                           
  5194                           ;incstack = 0
  5195                           ; Regs used in _Fosc_Set: [wreg]
  5196  0D8C  303C               	movlw	60
  5197  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  5198  0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  5199  0D8F  0090               	movwf	16	;volatile
  5200  0D90  0008               	return
  5201  0D91                     __end_of_Fosc_Set:	
  5202                           
  5203                           	psect	text25
  5204  0DA5                     __ptext25:	
  5205 ;; *************** function _ADC_Set *****************
  5206 ;; Defined at:
  5207 ;;		line 427 in file "../src/MCU_B1.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;		None               void
  5214 ;; Registers used:
  5215 ;;		wreg
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5221 ;;      Params:         0       0       0       0
  5222 ;;      Locals:         0       0       0       0
  5223 ;;      Temps:          0       0       0       0
  5224 ;;      Totals:         0       0       0       0
  5225 ;;Total ram usage:        0 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    3
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_Mcu_Initialization
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           
  5236                           ;psect for function _ADC_Set
  5237  0DA5                     _ADC_Set:	
  5238                           
  5239                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5240                           
  5241                           ;incstack = 0
  5242                           ; Regs used in _ADC_Set: [wreg]
  5243  0DA5  3073               	movlw	115
  5244  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  5245  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  5246  0DA8  009F               	movwf	31	;volatile
  5247                           
  5248                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5249  0DA9  30C1               	movlw	193
  5250  0DAA  009D               	movwf	29	;volatile
  5251  0DAB  0008               	return
  5252  0DAC                     __end_of_ADC_Set:	
  5253                           
  5254                           	psect	text26
  5255  0D7A                     __ptext26:	
  5256 ;; *************** function _LED_Main *****************
  5257 ;; Defined at:
  5258 ;;		line 47 in file "../src/LED_B1.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;		None
  5263 ;; Return value:  Size  Location     Type
  5264 ;;		None               void
  5265 ;; Registers used:
  5266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5272 ;;      Params:         0       0       0       0
  5273 ;;      Locals:         0       0       0       0
  5274 ;;      Temps:          0       0       0       0
  5275 ;;      Totals:         0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    6
  5279 ;; This function calls:
  5280 ;;		_setPIRLED_Main
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function _LED_Main
  5288  0D7A                     _LED_Main:	
  5289                           
  5290                           ;LED_B1.c: 55: setPIRLED_Main();
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5294  0D7A  118A  244D         	fcall	_setPIRLED_Main
  5295  0D7C  0008               	return
  5296  0D7D                     __end_of_LED_Main:	
  5297                           
  5298                           	psect	text27
  5299  044D                     __ptext27:	
  5300 ;; *************** function _setPIRLED_Main *****************
  5301 ;; Defined at:
  5302 ;;		line 265 in file "../src/LED_B1.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  count           1    5[BANK0 ] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;		None               void
  5309 ;; Registers used:
  5310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5316 ;;      Params:         0       0       0       0
  5317 ;;      Locals:         0       1       0       0
  5318 ;;      Temps:          0       1       0       0
  5319 ;;      Totals:         0       2       0       0
  5320 ;;Total ram usage:        2 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    5
  5323 ;; This function calls:
  5324 ;;		_setLED
  5325 ;; This function is called by:
  5326 ;;		_LED_Main
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           
  5331                           ;psect for function _setPIRLED_Main
  5332  044D                     _setPIRLED_Main:	
  5333                           
  5334                           ;LED_B1.c: 267: char count;
  5335                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  5336                           
  5337                           ;incstack = 0
  5338                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5339  044D  1283               	bcf	3,5	;RP0=0, select bank0
  5340  044E  1303               	bcf	3,6	;RP1=0, select bank0
  5341  044F  1C36               	btfss	_PIRLED,0
  5342  0450  0008               	return
  5343                           
  5344                           ;LED_B1.c: 269: PIRLED.Time++;
  5345  0451  3001               	movlw	1
  5346  0452  07B8               	addwf	_PIRLED+2,f
  5347  0453  1803               	skipnc
  5348  0454  0AB9               	incf	_PIRLED+3,f
  5349  0455  3000               	movlw	0
  5350  0456  07B9               	addwf	_PIRLED+3,f
  5351                           
  5352                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  5353  0457  3000               	movlw	0
  5354  0458  0239               	subwf	_PIRLED+3,w
  5355  0459  3019               	movlw	25
  5356  045A  1903               	skipnz
  5357  045B  0238               	subwf	_PIRLED+2,w
  5358  045C  1C03               	skipc
  5359  045D  0008               	return
  5360                           
  5361                           ;LED_B1.c: 271: PIRLED.Time = 0;
  5362  045E  01B8               	clrf	_PIRLED+2
  5363  045F  01B9               	clrf	_PIRLED+3
  5364                           
  5365                           ;LED_B1.c: 272: setLED(1, 0);
  5366  0460  01D9               	clrf	setLED@command
  5367  0461  3001               	movlw	1
  5368  0462  118A  24BE  118A   	fcall	_setLED
  5369                           
  5370                           ;LED_B1.c: 273: setLED(2, 0);
  5371  0465  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0466  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0467  01D9               	clrf	setLED@command
  5374  0468  3002               	movlw	2
  5375  0469  118A  24BE  118A   	fcall	_setLED
  5376                           
  5377                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  5378  046C  1283               	bcf	3,5	;RP0=0, select bank0
  5379  046D  1303               	bcf	3,6	;RP1=0, select bank0
  5380  046E  1CB6               	btfss	_PIRLED,1
  5381  046F  2C74               	goto	l4365
  5382                           
  5383                           ;LED_B1.c: 275: count = 4;
  5384  0470  3004               	movlw	4
  5385  0471  00DB               	movwf	??_setPIRLED_Main
  5386  0472  085B               	movf	??_setPIRLED_Main,w
  5387  0473  00DC               	movwf	setPIRLED_Main@count
  5388  0474                     l4365:	
  5389                           
  5390                           ;LED_B1.c: 276: }
  5391                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  5392  0474  1D36               	btfss	_PIRLED,2
  5393  0475  2C7A               	goto	l4369
  5394                           
  5395                           ;LED_B1.c: 278: count = 6;
  5396  0476  3006               	movlw	6
  5397  0477  00DB               	movwf	??_setPIRLED_Main
  5398  0478  085B               	movf	??_setPIRLED_Main,w
  5399  0479  00DC               	movwf	setPIRLED_Main@count
  5400  047A                     l4369:	
  5401                           
  5402                           ;LED_B1.c: 279: }
  5403                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  5404  047A  1DB6               	btfss	_PIRLED,3
  5405  047B  2C80               	goto	l4373
  5406                           
  5407                           ;LED_B1.c: 281: count = 8;
  5408  047C  3008               	movlw	8
  5409  047D  00DB               	movwf	??_setPIRLED_Main
  5410  047E  085B               	movf	??_setPIRLED_Main,w
  5411  047F  00DC               	movwf	setPIRLED_Main@count
  5412  0480                     l4373:	
  5413                           
  5414                           ;LED_B1.c: 282: }
  5415                           ;LED_B1.c: 283: PIRLED.Count++;
  5416  0480  3001               	movlw	1
  5417  0481  00DB               	movwf	??_setPIRLED_Main
  5418  0482  085B               	movf	??_setPIRLED_Main,w
  5419  0483  07B7               	addwf	_PIRLED+1,f
  5420                           
  5421                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5422  0484  0837               	movf	_PIRLED+1,w
  5423  0485  3A01               	xorlw	1
  5424  0486  1903               	skipnz
  5425  0487  2C8C               	goto	l4379
  5426  0488  0837               	movf	_PIRLED+1,w
  5427  0489  3A02               	xorlw	2
  5428  048A  1D03               	skipz
  5429  048B  2CA0               	goto	l4383
  5430  048C                     l4379:	
  5431                           
  5432                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5433  048C  1003               	clrc
  5434  048D  1E36               	btfss	_PIRLED,4
  5435  048E  1403               	setc
  5436  048F  1C03               	btfss	3,0
  5437  0490  2C95               	goto	u5040
  5438  0491  1283               	bcf	3,5	;RP0=0, select bank0
  5439  0492  1303               	bcf	3,6	;RP1=0, select bank0
  5440  0493  1636               	bsf	_PIRLED,4
  5441  0494  2C98               	goto	l4381
  5442  0495                     u5040:	
  5443  0495  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0496  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0497  1236               	bcf	_PIRLED,4
  5446  0498                     l4381:	
  5447                           
  5448                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  5449  0498  3000               	movlw	0
  5450  0499  1A36               	btfsc	_PIRLED,4
  5451  049A  3001               	movlw	1
  5452  049B  00D9               	movwf	setLED@command
  5453  049C  3002               	movlw	2
  5454  049D  118A  24BE         	fcall	_setLED
  5455                           
  5456                           ;LED_B1.c: 287: } else {
  5457  049F  0008               	return
  5458  04A0                     l4383:	
  5459                           
  5460                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5461  04A0  1003               	clrc
  5462  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  5463  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  5464  04A3  1E36               	btfss	_PIRLED,4
  5465  04A4  1403               	setc
  5466  04A5  1C03               	btfss	3,0
  5467  04A6  2CAB               	goto	u5060
  5468  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  5469  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  5470  04A9  1636               	bsf	_PIRLED,4
  5471  04AA  2CAE               	goto	l4385
  5472  04AB                     u5060:	
  5473  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  5474  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  5475  04AD  1236               	bcf	_PIRLED,4
  5476  04AE                     l4385:	
  5477                           
  5478                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  5479  04AE  3000               	movlw	0
  5480  04AF  1A36               	btfsc	_PIRLED,4
  5481  04B0  3001               	movlw	1
  5482  04B1  00D9               	movwf	setLED@command
  5483  04B2  3001               	movlw	1
  5484  04B3  118A  24BE  118A   	fcall	_setLED
  5485                           
  5486                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  5487  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  5488  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  5489  04B8  0837               	movf	_PIRLED+1,w
  5490  04B9  065C               	xorwf	setPIRLED_Main@count,w
  5491  04BA  1D03               	skipz
  5492  04BB  0008               	return
  5493                           
  5494                           ;LED_B1.c: 291: PIRLED.Count = 0;
  5495  04BC  01B7               	clrf	_PIRLED+1
  5496  04BD  0008               	return
  5497  04BE                     __end_of_setPIRLED_Main:	
  5498                           
  5499                           	psect	text28
  5500  0DE0                     __ptext28:	
  5501 ;; *************** function _LED_Initialization *****************
  5502 ;; Defined at:
  5503 ;;		line 31 in file "../src/LED_B1.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;		None               void
  5510 ;; Registers used:
  5511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5517 ;;      Params:         0       0       0       0
  5518 ;;      Locals:         0       0       0       0
  5519 ;;      Temps:          0       0       0       0
  5520 ;;      Totals:         0       0       0       0
  5521 ;;Total ram usage:        0 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    6
  5524 ;; This function calls:
  5525 ;;		_setLED_Initialization
  5526 ;; This function is called by:
  5527 ;;		_main
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function _LED_Initialization
  5533  0DE0                     _LED_Initialization:	
  5534                           
  5535                           ;LED_B1.c: 33: setLED_Initialization(1);
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5539  0DE0  3001               	movlw	1
  5540  0DE1  158A  2674  158A   	fcall	_setLED_Initialization
  5541                           
  5542                           ;LED_B1.c: 36: setLED_Initialization(2);
  5543  0DE4  3002               	movlw	2
  5544  0DE5  158A  2674  158A   	fcall	_setLED_Initialization
  5545                           
  5546                           ;LED_B1.c: 42: setLED_Initialization(99);
  5547  0DE8  3063               	movlw	99
  5548  0DE9  158A  2674         	fcall	_setLED_Initialization
  5549  0DEB  0008               	return
  5550  0DEC                     __end_of_LED_Initialization:	
  5551                           
  5552                           	psect	text29
  5553  0E74                     __ptext29:	
  5554 ;; *************** function _setLED_Initialization *****************
  5555 ;; Defined at:
  5556 ;;		line 74 in file "../src/LED_B1.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  led             1    wreg     unsigned char 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  led             1    4[BANK0 ] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;		None               void
  5563 ;; Registers used:
  5564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5570 ;;      Params:         0       0       0       0
  5571 ;;      Locals:         0       1       0       0
  5572 ;;      Temps:          0       0       0       0
  5573 ;;      Totals:         0       1       0       0
  5574 ;;Total ram usage:        1 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    5
  5577 ;; This function calls:
  5578 ;;		_LedPointSelect
  5579 ;;		_setLED
  5580 ;; This function is called by:
  5581 ;;		_LED_Initialization
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function _setLED_Initialization
  5587  0E74                     _setLED_Initialization:	
  5588                           
  5589                           ;incstack = 0
  5590                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5591                           ;setLED_Initialization@led stored from wreg
  5592  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  5593  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  5594  0E76  00DB               	movwf	setLED_Initialization@led
  5595                           
  5596                           ;LED_B1.c: 75: LedPointSelect(led);
  5597  0E77  085B               	movf	setLED_Initialization@led,w
  5598  0E78  158A  2783  158A   	fcall	_LedPointSelect
  5599                           
  5600                           ;LED_B1.c: 76: LED->Enable = 1;
  5601  0E7B  0873               	movf	_LED,w
  5602  0E7C  0084               	movwf	4
  5603  0E7D  1383               	bcf	3,7	;select IRP bank0
  5604  0E7E  1400               	bsf	0,0
  5605                           
  5606                           ;LED_B1.c: 77: setLED(led, 0);
  5607  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0E81  01D9               	clrf	setLED@command
  5610  0E82  085B               	movf	setLED_Initialization@led,w
  5611  0E83  118A  24BE         	fcall	_setLED
  5612  0E85  0008               	return
  5613  0E86                     __end_of_setLED_Initialization:	
  5614                           
  5615                           	psect	text30
  5616  0690                     __ptext30:	
  5617 ;; *************** function _Exception_Main *****************
  5618 ;; Defined at:
  5619 ;;		line 499 in file "../src/Main_B1.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  error           1    9[BANK0 ] unsigned char 
  5624 ;;  status          1    8[BANK0 ] unsigned char 
  5625 ;;  count           1    7[BANK0 ] unsigned char 
  5626 ;;  lights          1    6[BANK0 ] unsigned char 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;		None               void
  5629 ;; Registers used:
  5630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5636 ;;      Params:         0       0       0       0
  5637 ;;      Locals:         0       4       0       0
  5638 ;;      Temps:          0       1       0       0
  5639 ;;      Totals:         0       5       0       0
  5640 ;;Total ram usage:        5 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    5
  5643 ;; This function calls:
  5644 ;;		_getDimmerLights_Status
  5645 ;;		_getMain_All_Error_Status
  5646 ;;		_setLED
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function _Exception_Main
  5654  0690                     _Exception_Main:	
  5655                           
  5656                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5660  0690  3000               	movlw	0
  5661  0691  158A  2733  118A   	fcall	_getMain_All_Error_Status
  5662  0694  1283               	bcf	3,5	;RP0=0, select bank0
  5663  0695  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0696  00DC               	movwf	??_Exception_Main
  5665  0697  085C               	movf	??_Exception_Main,w
  5666  0698  00E0               	movwf	Exception_Main@error
  5667                           
  5668                           ;Main_B1.c: 501: char lights = 0, count = 1;
  5669  0699  01DD               	clrf	Exception_Main@lights
  5670  069A  01DE               	clrf	Exception_Main@count
  5671  069B  0ADE               	incf	Exception_Main@count,f
  5672                           
  5673                           ;Main_B1.c: 502: char status = 0;
  5674  069C  01DF               	clrf	Exception_Main@status
  5675                           
  5676                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  5677  069D  1DB3               	btfss	_myMain+2,3
  5678  069E  2EAB               	goto	l4895
  5679                           
  5680                           ;Main_B1.c: 505: if (error == 0) {
  5681  069F  08E0               	movf	Exception_Main@error,f
  5682  06A0  1D03               	skipz
  5683  06A1  0008               	return
  5684                           
  5685                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  5686  06A2  11B3               	bcf	_myMain+2,3
  5687                           
  5688                           ;Main_B1.c: 511: setLED(error, 110);
  5689  06A3  306E               	movlw	110
  5690  06A4  00DC               	movwf	??_Exception_Main
  5691  06A5  085C               	movf	??_Exception_Main,w
  5692  06A6  00D9               	movwf	setLED@command
  5693  06A7  0860               	movf	Exception_Main@error,w
  5694  06A8  118A  24BE         	fcall	_setLED
  5695                           
  5696                           ;Main_B1.c: 522: }
  5697                           ;Main_B1.c: 523: } else {
  5698  06AA  0008               	return
  5699  06AB                     l4895:	
  5700                           
  5701                           ;Main_B1.c: 524: if (error != 0) {
  5702  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  5703  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  5704  06AD  0860               	movf	Exception_Main@error,w
  5705  06AE  1903               	btfsc	3,2
  5706  06AF  0008               	return
  5707                           
  5708                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  5709  06B0  15B3               	bsf	_myMain+2,3
  5710                           
  5711                           ;Main_B1.c: 529: setLED(error, 111);
  5712  06B1  306F               	movlw	111
  5713  06B2  00DC               	movwf	??_Exception_Main
  5714  06B3  085C               	movf	??_Exception_Main,w
  5715  06B4  00D9               	movwf	setLED@command
  5716  06B5  0860               	movf	Exception_Main@error,w
  5717  06B6  118A  24BE  118A   	fcall	_setLED
  5718                           
  5719                           ;Main_B1.c: 538: switch (error) {
  5720  06B9  2EC8               	goto	l4907
  5721  06BA                     l4901:	
  5722                           ;Main_B1.c: 539: case 2:
  5723                           
  5724                           
  5725                           ;Main_B1.c: 542: if (getDimmerLights_Status(1) == 1) {
  5726  06BA  3001               	movlw	1
  5727  06BB  158A  2641  118A   	fcall	_getDimmerLights_Status
  5728  06BE  3A01               	xorlw	1
  5729  06BF  1903               	btfsc	3,2
  5730  06C0  2EC4               	goto	l4903
  5731  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  5732  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  5733  06C3  0008               	return
  5734  06C4                     l4903:	
  5735                           
  5736                           ;Main_B1.c: 543: Dimmer.PIR_Close_Status = 1;
  5737  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  5738  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  5739  06C6  142D               	bsf	_Dimmer+1,0
  5740                           
  5741                           ;Main_B1.c: 586: }
  5742                           
  5743                           ;Main_B1.c: 585: break;
  5744                           
  5745                           ;Main_B1.c: 561: case 3:
  5746                           
  5747                           ;Main_B1.c: 544: }
  5748                           ;Main_B1.c: 560: break;
  5749  06C7  0008               	return
  5750  06C8                     l4907:	
  5751  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5752  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5753  06CA  0860               	movf	Exception_Main@error,w
  5754                           
  5755                           ; Switch size 1, requested type "space"
  5756                           ; Number of cases is 2, Range of values is 2 to 3
  5757                           ; switch strategies available:
  5758                           ; Name         Instructions Cycles
  5759                           ; simple_byte            7     4 (average)
  5760                           ; direct_byte           14    10 (fixed)
  5761                           ; jumptable            263     9 (fixed)
  5762                           ;	Chosen strategy is simple_byte
  5763  06CB  3A02               	xorlw	2	; case 2
  5764  06CC  1903               	skipnz
  5765  06CD  2EBA               	goto	l4901
  5766  06CE  3A01               	xorlw	1	; case 3
  5767  06CF  1903               	skipnz
  5768  06D0  2ED3               	goto	l826
  5769  06D1  2ED3               	goto	l826
  5770  06D2  0008               	return
  5771  06D3                     l826:	
  5772  06D3  0008               	return
  5773  06D4                     __end_of_Exception_Main:	
  5774                           
  5775                           	psect	text31
  5776  04BE                     __ptext31:	
  5777 ;; *************** function _setLED *****************
  5778 ;; Defined at:
  5779 ;;		line 81 in file "../src/LED_B1.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  led             1    wreg     unsigned char 
  5782 ;;  command         1    2[BANK0 ] unsigned char 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  led             1    3[BANK0 ] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;		None               void
  5787 ;; Registers used:
  5788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5794 ;;      Params:         0       1       0       0
  5795 ;;      Locals:         0       1       0       0
  5796 ;;      Temps:          0       0       0       0
  5797 ;;      Totals:         0       2       0       0
  5798 ;;Total ram usage:        2 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    4
  5801 ;; This function calls:
  5802 ;;		_LedPointSelect
  5803 ;; This function is called by:
  5804 ;;		_setLED_Initialization
  5805 ;;		_setPIRLED_Main
  5806 ;;		_Exception_Main
  5807 ;;		_PIR_Main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           
  5812                           ;psect for function _setLED
  5813  04BE                     _setLED:	
  5814                           
  5815                           ;incstack = 0
  5816                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5817                           ;setLED@led stored from wreg
  5818  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  5819  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  5820  04C0  00DA               	movwf	setLED@led
  5821                           
  5822                           ;LED_B1.c: 82: LedPointSelect(led);
  5823  04C1  085A               	movf	setLED@led,w
  5824  04C2  158A  2783  118A   	fcall	_LedPointSelect
  5825                           
  5826                           ;LED_B1.c: 83: if (command == 0) {
  5827  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  5828  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  5829  04C7  08D9               	movf	setLED@command,f
  5830  04C8  1D03               	skipz
  5831  04C9  2CD7               	goto	l4157
  5832                           
  5833                           ;LED_B1.c: 85: if (led == 1) {
  5834  04CA  085A               	movf	setLED@led,w
  5835  04CB  3A01               	xorlw	1
  5836  04CC  1D03               	skipz
  5837  04CD  2CCF               	goto	l4149
  5838                           
  5839                           ;LED_B1.c: 89: RB4 = 1;
  5840  04CE  1606               	bsf	6,4	;volatile
  5841  04CF                     l4149:	
  5842                           
  5843                           ;LED_B1.c: 91: }
  5844                           ;LED_B1.c: 94: if (led == 2) {
  5845  04CF  085A               	movf	setLED@led,w
  5846  04D0  3A02               	xorlw	2
  5847  04D1  1903               	btfsc	3,2
  5848                           
  5849                           ;LED_B1.c: 98: RB5 = 1;
  5850  04D2  1686               	bsf	6,5	;volatile
  5851                           
  5852                           ;LED_B1.c: 100: }
  5853                           ;LED_B1.c: 112: if (led == 99) {
  5854  04D3  085A               	movf	setLED@led,w
  5855  04D4  3A63               	xorlw	99
  5856  04D5  1903               	btfsc	3,2
  5857                           
  5858                           ;LED_B1.c: 116: RB3 = 1;
  5859  04D6  1586               	bsf	6,3	;volatile
  5860  04D7                     l4157:	
  5861                           
  5862                           ;LED_B1.c: 118: }
  5863                           ;LED_B1.c: 120: }
  5864                           ;LED_B1.c: 121: if (command == 1) {
  5865  04D7  0859               	movf	setLED@command,w
  5866  04D8  3A01               	xorlw	1
  5867  04D9  1D03               	skipz
  5868  04DA  2CE8               	goto	l4171
  5869                           
  5870                           ;LED_B1.c: 123: if (led == 1) {
  5871  04DB  085A               	movf	setLED@led,w
  5872  04DC  3A01               	xorlw	1
  5873  04DD  1D03               	skipz
  5874  04DE  2CE0               	goto	l4163
  5875                           
  5876                           ;LED_B1.c: 127: RB4 = 0;
  5877  04DF  1206               	bcf	6,4	;volatile
  5878  04E0                     l4163:	
  5879                           
  5880                           ;LED_B1.c: 129: }
  5881                           ;LED_B1.c: 132: if (led == 2) {
  5882  04E0  085A               	movf	setLED@led,w
  5883  04E1  3A02               	xorlw	2
  5884  04E2  1903               	btfsc	3,2
  5885                           
  5886                           ;LED_B1.c: 136: RB5 = 0;
  5887  04E3  1286               	bcf	6,5	;volatile
  5888                           
  5889                           ;LED_B1.c: 138: }
  5890                           ;LED_B1.c: 150: if (led == 99) {
  5891  04E4  085A               	movf	setLED@led,w
  5892  04E5  3A63               	xorlw	99
  5893  04E6  1903               	btfsc	3,2
  5894                           
  5895                           ;LED_B1.c: 154: RB3 = 0;
  5896  04E7  1186               	bcf	6,3	;volatile
  5897  04E8                     l4171:	
  5898                           
  5899                           ;LED_B1.c: 156: }
  5900                           ;LED_B1.c: 158: }
  5901                           ;LED_B1.c: 159: if (command == 10) {
  5902  04E8  0859               	movf	setLED@command,w
  5903  04E9  3A0A               	xorlw	10
  5904  04EA  1D03               	skipz
  5905  04EB  2D03               	goto	l4189
  5906                           
  5907                           ;LED_B1.c: 160: LED->GO = 0;
  5908  04EC  0873               	movf	_LED,w
  5909  04ED  0084               	movwf	4
  5910  04EE  1383               	bcf	3,7	;select IRP bank0
  5911  04EF  1080               	bcf	0,1
  5912                           
  5913                           ;LED_B1.c: 161: LED->Time = 0;
  5914  04F0  0A73               	incf	_LED,w
  5915  04F1  0084               	movwf	4
  5916  04F2  0180               	clrf	0
  5917  04F3  0A84               	incf	4,f
  5918  04F4  0180               	clrf	0
  5919                           
  5920                           ;LED_B1.c: 163: if (led == 1) {
  5921  04F5  085A               	movf	setLED@led,w
  5922  04F6  3A01               	xorlw	1
  5923  04F7  1D03               	skipz
  5924  04F8  2CFB               	goto	l4181
  5925                           
  5926                           ;LED_B1.c: 167: RB4 = 1;
  5927  04F9  1606               	bsf	6,4	;volatile
  5928                           
  5929                           ;LED_B1.c: 169: }
  5930  04FA  2CFF               	goto	l4185
  5931  04FB                     l4181:	
  5932                           
  5933                           ;LED_B1.c: 172: else if (led == 2) {
  5934  04FB  085A               	movf	setLED@led,w
  5935  04FC  3A02               	xorlw	2
  5936  04FD  1903               	btfsc	3,2
  5937                           
  5938                           ;LED_B1.c: 176: RB5 = 1;
  5939  04FE  1686               	bsf	6,5	;volatile
  5940  04FF                     l4185:	
  5941                           
  5942                           ;LED_B1.c: 178: }
  5943                           ;LED_B1.c: 190: if (led == 99) {
  5944  04FF  085A               	movf	setLED@led,w
  5945  0500  3A63               	xorlw	99
  5946  0501  1903               	btfsc	3,2
  5947                           
  5948                           ;LED_B1.c: 194: RB3 = 1;
  5949  0502  1586               	bsf	6,3	;volatile
  5950  0503                     l4189:	
  5951                           
  5952                           ;LED_B1.c: 196: }
  5953                           ;LED_B1.c: 198: }
  5954                           ;LED_B1.c: 199: if (command == 11) {
  5955  0503  0859               	movf	setLED@command,w
  5956  0504  3A0B               	xorlw	11
  5957  0505  1D03               	skipz
  5958  0506  2D0B               	goto	l4193
  5959                           
  5960                           ;LED_B1.c: 200: LED->GO = 1;
  5961  0507  0873               	movf	_LED,w
  5962  0508  0084               	movwf	4
  5963  0509  1383               	bcf	3,7	;select IRP bank0
  5964  050A  1480               	bsf	0,1
  5965  050B                     l4193:	
  5966                           
  5967                           ;LED_B1.c: 201: }
  5968                           ;LED_B1.c: 205: if (command == 111) {
  5969  050B  0859               	movf	setLED@command,w
  5970  050C  3A6F               	xorlw	111
  5971  050D  1D03               	skipz
  5972  050E  2D29               	goto	l4219
  5973                           
  5974                           ;LED_B1.c: 206: PIRLED.Count = 0;
  5975  050F  01B7               	clrf	_PIRLED+1
  5976                           
  5977                           ;LED_B1.c: 207: PIRLED.Time = 0;
  5978  0510  01B8               	clrf	_PIRLED+2
  5979  0511  01B9               	clrf	_PIRLED+3
  5980                           
  5981                           ;LED_B1.c: 208: PIRLED.status = 0;
  5982  0512  1236               	bcf	_PIRLED,4
  5983                           
  5984                           ;LED_B1.c: 209: PIRLED.GO = 1;
  5985  0513  1436               	bsf	_PIRLED,0
  5986                           
  5987                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  5988  0514  10B6               	bcf	_PIRLED,1
  5989                           
  5990                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  5991  0515  1136               	bcf	_PIRLED,2
  5992                           
  5993                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  5994  0516  11B6               	bcf	_PIRLED,3
  5995                           
  5996                           ;LED_B1.c: 213: if (led == 1) {
  5997  0517  085A               	movf	setLED@led,w
  5998  0518  3A01               	xorlw	1
  5999  0519  1D03               	skipz
  6000  051A  2D1D               	goto	l4211
  6001                           
  6002                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  6003  051B  14B6               	bsf	_PIRLED,1
  6004                           
  6005                           ;LED_B1.c: 215: } else if (led == 2) {
  6006  051C  0008               	return
  6007  051D                     l4211:	
  6008  051D  085A               	movf	setLED@led,w
  6009  051E  3A02               	xorlw	2
  6010  051F  1D03               	skipz
  6011  0520  2D23               	goto	l4215
  6012                           
  6013                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  6014  0521  1536               	bsf	_PIRLED,2
  6015                           
  6016                           ;LED_B1.c: 217: } else if (led == 3) {
  6017  0522  0008               	return
  6018  0523                     l4215:	
  6019  0523  085A               	movf	setLED@led,w
  6020  0524  3A03               	xorlw	3
  6021  0525  1D03               	skipz
  6022  0526  0008               	return
  6023                           
  6024                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  6025  0527  15B6               	bsf	_PIRLED,3
  6026                           
  6027                           ;LED_B1.c: 219: }
  6028                           ;LED_B1.c: 220: } else if (command == 110) {
  6029  0528  0008               	return
  6030  0529                     l4219:	
  6031  0529  0859               	movf	setLED@command,w
  6032  052A  3A6E               	xorlw	110
  6033  052B  1D03               	skipz
  6034  052C  0008               	return
  6035                           
  6036                           ;LED_B1.c: 221: PIRLED.GO = 0;
  6037  052D  1036               	bcf	_PIRLED,0
  6038  052E  0008               	return
  6039  052F                     __end_of_setLED:	
  6040                           
  6041                           	psect	text32
  6042  0F83                     __ptext32:	
  6043 ;; *************** function _LedPointSelect *****************
  6044 ;; Defined at:
  6045 ;;		line 7 in file "../src/LED_B1.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  led             1    wreg     unsigned char 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  led             1    1[BANK0 ] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;		None               void
  6052 ;; Registers used:
  6053 ;;		wreg
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6059 ;;      Params:         0       0       0       0
  6060 ;;      Locals:         0       1       0       0
  6061 ;;      Temps:          0       1       0       0
  6062 ;;      Totals:         0       2       0       0
  6063 ;;Total ram usage:        2 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    3
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_setLED_Initialization
  6070 ;;		_setLED
  6071 ;;		_setLED_Main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           
  6076                           ;psect for function _LedPointSelect
  6077  0F83                     _LedPointSelect:	
  6078                           
  6079                           ;incstack = 0
  6080                           ; Regs used in _LedPointSelect: [wreg]
  6081                           ;LedPointSelect@led stored from wreg
  6082  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  6084  0F85  00D8               	movwf	LedPointSelect@led
  6085                           
  6086                           ;LED_B1.c: 9: if (led == 1) {
  6087  0F86  0858               	movf	LedPointSelect@led,w
  6088  0F87  3A01               	xorlw	1
  6089  0F88  1D03               	skipz
  6090  0F89  2F8E               	goto	l481
  6091                           
  6092                           ;LED_B1.c: 10: LED = &VarLED1;
  6093  0F8A  304F               	movlw	_VarLED1& (0+255)
  6094  0F8B  00D7               	movwf	??_LedPointSelect
  6095  0F8C  0857               	movf	??_LedPointSelect,w
  6096  0F8D  00F3               	movwf	_LED
  6097  0F8E                     l481:	
  6098                           
  6099                           ;LED_B1.c: 11: }
  6100                           ;LED_B1.c: 14: if (led == 2) {
  6101  0F8E  0858               	movf	LedPointSelect@led,w
  6102  0F8F  3A02               	xorlw	2
  6103  0F90  1D03               	skipz
  6104  0F91  2F96               	goto	l482
  6105                           
  6106                           ;LED_B1.c: 15: LED = &VarLED2;
  6107  0F92  3053               	movlw	_VarLED2& (0+255)
  6108  0F93  00D7               	movwf	??_LedPointSelect
  6109  0F94  0857               	movf	??_LedPointSelect,w
  6110  0F95  00F3               	movwf	_LED
  6111  0F96                     l482:	
  6112                           
  6113                           ;LED_B1.c: 16: }
  6114                           ;LED_B1.c: 24: if (led == 99) {
  6115  0F96  0858               	movf	LedPointSelect@led,w
  6116  0F97  3A63               	xorlw	99
  6117  0F98  1D03               	skipz
  6118  0F99  0008               	return
  6119                           
  6120                           ;LED_B1.c: 25: LED = &VarErrLED;
  6121  0F9A  304B               	movlw	_VarErrLED& (0+255)
  6122  0F9B  00D7               	movwf	??_LedPointSelect
  6123  0F9C  0857               	movf	??_LedPointSelect,w
  6124  0F9D  00F3               	movwf	_LED
  6125  0F9E  0008               	return
  6126  0F9F                     __end_of_LedPointSelect:	
  6127                           
  6128                           	psect	text33
  6129  0F33                     __ptext33:	
  6130 ;; *************** function _getMain_All_Error_Status *****************
  6131 ;; Defined at:
  6132 ;;		line 424 in file "../src/Main_B1.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  command         1    wreg     unsigned char 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  command         1    1[BANK0 ] unsigned char 
  6137 ;;  status          1    4[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      unsigned char 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6147 ;;      Params:         0       0       0       0
  6148 ;;      Locals:         0       4       0       0
  6149 ;;      Temps:          0       1       0       0
  6150 ;;      Totals:         0       5       0       0
  6151 ;;Total ram usage:        5 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    3
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_Exception_Main
  6158 ;;		_setTemp_Main
  6159 ;;		_PIR_Main
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _getMain_All_Error_Status
  6165  0F33                     _getMain_All_Error_Status:	
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6169                           ;getMain_All_Error_Status@command stored from wreg
  6170  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  6171  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  6172  0F35  00D8               	movwf	getMain_All_Error_Status@command
  6173                           
  6174                           ;Main_B1.c: 425: char status = 0;
  6175  0F36  01DB               	clrf	getMain_All_Error_Status@status
  6176                           
  6177                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6178  0F37  08DB               	movf	getMain_All_Error_Status@status,f
  6179  0F38  1D03               	skipz
  6180  0F39  2F4B               	goto	l806
  6181  0F3A  0858               	movf	getMain_All_Error_Status@command,w
  6182  0F3B  3A02               	xorlw	2
  6183  0F3C  1903               	skipnz
  6184  0F3D  2F4B               	goto	l806
  6185                           
  6186                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6187  0F3E  18C4               	btfsc	_Temp,1
  6188  0F3F  2F43               	goto	l4243
  6189  0F40  01D9               	clrf	_getMain_All_Error_Status$2565
  6190  0F41  01DA               	clrf	_getMain_All_Error_Status$2565+1
  6191  0F42  2F47               	goto	l810
  6192  0F43                     l4243:	
  6193  0F43  3002               	movlw	2
  6194  0F44  00D9               	movwf	_getMain_All_Error_Status$2565
  6195  0F45  3000               	movlw	0
  6196  0F46  00DA               	movwf	_getMain_All_Error_Status$2565+1
  6197  0F47                     l810:	
  6198  0F47  0859               	movf	_getMain_All_Error_Status$2565,w
  6199  0F48  00D7               	movwf	??_getMain_All_Error_Status
  6200  0F49  0857               	movf	??_getMain_All_Error_Status,w
  6201  0F4A  00DB               	movwf	getMain_All_Error_Status@status
  6202  0F4B                     l806:	
  6203                           
  6204                           ;Main_B1.c: 438: }
  6205                           ;Main_B1.c: 455: return status;
  6206  0F4B  085B               	movf	getMain_All_Error_Status@status,w
  6207  0F4C  0008               	return
  6208  0F4D                     __end_of_getMain_All_Error_Status:	
  6209                           
  6210                           	psect	text34
  6211  0D9E                     __ptext34:	
  6212 ;; *************** function _DimmerLights_Main *****************
  6213 ;; Defined at:
  6214 ;;		line 774 in file "../src/Dimmer_B1.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;		None               void
  6221 ;; Registers used:
  6222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6228 ;;      Params:         0       0       0       0
  6229 ;;      Locals:         0       0       0       0
  6230 ;;      Temps:          0       0       0       0
  6231 ;;      Totals:         0       0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    6
  6235 ;; This function calls:
  6236 ;;		_DimmerLights_PIR_Control
  6237 ;;		_setDimmerLights_Main
  6238 ;; This function is called by:
  6239 ;;		_main
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           
  6244                           ;psect for function _DimmerLights_Main
  6245  0D9E                     _DimmerLights_Main:	
  6246                           
  6247                           ;Dimmer_B1.c: 785: setDimmerLights_Main(1);
  6248                           
  6249                           ;incstack = 0
  6250                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6251  0D9E  3001               	movlw	1
  6252  0D9F  118A  252F  158A   	fcall	_setDimmerLights_Main
  6253                           
  6254                           ;Dimmer_B1.c: 797: DimmerLights_PIR_Control();
  6255  0DA2  118A  233E         	fcall	_DimmerLights_PIR_Control
  6256  0DA4  0008               	return
  6257  0DA5                     __end_of_DimmerLights_Main:	
  6258                           
  6259                           	psect	text35
  6260  052F                     __ptext35:	
  6261 ;; *************** function _setDimmerLights_Main *****************
  6262 ;; Defined at:
  6263 ;;		line 803 in file "../src/Dimmer_B1.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  lights          1    wreg     unsigned char 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  lights          1    7[BANK0 ] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;		None               void
  6270 ;; Registers used:
  6271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6277 ;;      Params:         0       0       0       0
  6278 ;;      Locals:         0       1       0       0
  6279 ;;      Temps:          0       0       0       0
  6280 ;;      Totals:         0       1       0       0
  6281 ;;Total ram usage:        1 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    5
  6284 ;; This function calls:
  6285 ;;		_DimmerLights_SelectPointer
  6286 ;;		_getDimmerLights_Allow_Condition
  6287 ;;		_getMain_All_LightsStatus
  6288 ;;		_setDimmerLights_Dimming
  6289 ;;		_setDimmerLights_OnOff
  6290 ;; This function is called by:
  6291 ;;		_DimmerLights_Main
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function _setDimmerLights_Main
  6297  052F                     _setDimmerLights_Main:	
  6298                           
  6299                           ;incstack = 0
  6300                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6301                           ;setDimmerLights_Main@lights stored from wreg
  6302  052F  1283               	bcf	3,5	;RP0=0, select bank0
  6303  0530  1303               	bcf	3,6	;RP1=0, select bank0
  6304  0531  00DE               	movwf	setDimmerLights_Main@lights
  6305                           
  6306                           ;Dimmer_B1.c: 805: DimmerLights_SelectPointer(lights);
  6307  0532  085E               	movf	setDimmerLights_Main@lights,w
  6308  0533  158A  25BC  118A   	fcall	_DimmerLights_SelectPointer
  6309                           
  6310                           ;Dimmer_B1.c: 806: if (DimmerLights->Trigger == 1) {
  6311  0536  0872               	movf	_DimmerLights,w
  6312  0537  0084               	movwf	4
  6313  0538  1383               	bcf	3,7	;select IRP bank0
  6314  0539  1C80               	btfss	0,1
  6315  053A  2D5B               	goto	l4287
  6316                           
  6317                           ;Dimmer_B1.c: 807: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6318  053B  1283               	bcf	3,5	;RP0=0, select bank0
  6319  053C  1303               	bcf	3,6	;RP1=0, select bank0
  6320  053D  085E               	movf	setDimmerLights_Main@lights,w
  6321  053E  158A  2587  118A   	fcall	_getDimmerLights_Allow_Condition
  6322  0541  3800               	iorlw	0
  6323  0542  1D03               	skipz
  6324  0543  0008               	return
  6325                           
  6326                           ;Dimmer_B1.c: 808: DimmerLights->Trigger = 0;
  6327  0544  0872               	movf	_DimmerLights,w
  6328  0545  0084               	movwf	4
  6329  0546  1383               	bcf	3,7	;select IRP bank0
  6330  0547  1080               	bcf	0,1
  6331                           
  6332                           ;Dimmer_B1.c: 809: if (DimmerLights->Switch == 1) {
  6333  0548  0872               	movf	_DimmerLights,w
  6334  0549  0084               	movwf	4
  6335  054A  1D00               	btfss	0,2
  6336  054B  2D54               	goto	l4285
  6337                           
  6338                           ;Dimmer_B1.c: 810: setDimmerLights_OnOff(lights, 1);
  6339  054C  1283               	bcf	3,5	;RP0=0, select bank0
  6340  054D  1303               	bcf	3,6	;RP1=0, select bank0
  6341  054E  01DA               	clrf	setDimmerLights_OnOff@command
  6342  054F  0ADA               	incf	setDimmerLights_OnOff@command,f
  6343  0550  085E               	movf	setDimmerLights_Main@lights,w
  6344  0551  118A  2748         	fcall	_setDimmerLights_OnOff
  6345                           
  6346                           ;Dimmer_B1.c: 811: } else {
  6347  0553  0008               	return
  6348  0554                     l4285:	
  6349                           
  6350                           ;Dimmer_B1.c: 812: setDimmerLights_OnOff(lights, 0);
  6351  0554  1283               	bcf	3,5	;RP0=0, select bank0
  6352  0555  1303               	bcf	3,6	;RP1=0, select bank0
  6353  0556  01DA               	clrf	setDimmerLights_OnOff@command
  6354  0557  085E               	movf	setDimmerLights_Main@lights,w
  6355  0558  118A  2748         	fcall	_setDimmerLights_OnOff
  6356                           
  6357                           ;Dimmer_B1.c: 813: }
  6358                           ;Dimmer_B1.c: 814: }
  6359                           ;Dimmer_B1.c: 815: } else {
  6360  055A  0008               	return
  6361  055B                     l4287:	
  6362                           
  6363                           ;Dimmer_B1.c: 816: if (getMain_All_LightsStatus() == 1) {
  6364  055B  158A  25EC  118A   	fcall	_getMain_All_LightsStatus
  6365  055E  3A01               	xorlw	1
  6366  055F  1D03               	skipz
  6367  0560  2D86               	goto	l4299
  6368                           
  6369                           ;Dimmer_B1.c: 817: if (DimmerLights->DimmingTrigger == 1) {
  6370  0561  0872               	movf	_DimmerLights,w
  6371  0562  0084               	movwf	4
  6372  0563  1383               	bcf	3,7	;select IRP bank0
  6373  0564  1E00               	btfss	0,4
  6374  0565  0008               	return
  6375                           
  6376                           ;Dimmer_B1.c: 818: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6377  0566  1283               	bcf	3,5	;RP0=0, select bank0
  6378  0567  1303               	bcf	3,6	;RP1=0, select bank0
  6379  0568  085E               	movf	setDimmerLights_Main@lights,w
  6380  0569  158A  2587  118A   	fcall	_getDimmerLights_Allow_Condition
  6381  056C  3800               	iorlw	0
  6382  056D  1D03               	skipz
  6383  056E  0008               	return
  6384                           
  6385                           ;Dimmer_B1.c: 819: DimmerLights->DimmingTrigger = 0;
  6386  056F  0872               	movf	_DimmerLights,w
  6387  0570  0084               	movwf	4
  6388  0571  1383               	bcf	3,7	;select IRP bank0
  6389  0572  1200               	bcf	0,4
  6390                           
  6391                           ;Dimmer_B1.c: 820: if (DimmerLights->DimmingSwitch == 1) {
  6392  0573  0872               	movf	_DimmerLights,w
  6393  0574  0084               	movwf	4
  6394  0575  1E80               	btfss	0,5
  6395  0576  2D7F               	goto	l4297
  6396                           
  6397                           ;Dimmer_B1.c: 821: setDimmerLights_Dimming(lights, 1);
  6398  0577  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0578  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0579  01DA               	clrf	setDimmerLights_Dimming@status
  6401  057A  0ADA               	incf	setDimmerLights_Dimming@status,f
  6402  057B  085E               	movf	setDimmerLights_Main@lights,w
  6403  057C  118A  27A0         	fcall	_setDimmerLights_Dimming
  6404                           
  6405                           ;Dimmer_B1.c: 822: } else {
  6406  057E  0008               	return
  6407  057F                     l4297:	
  6408                           
  6409                           ;Dimmer_B1.c: 823: setDimmerLights_Dimming(lights, 0);
  6410  057F  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0580  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0581  01DA               	clrf	setDimmerLights_Dimming@status
  6413  0582  085E               	movf	setDimmerLights_Main@lights,w
  6414  0583  118A  27A0         	fcall	_setDimmerLights_Dimming
  6415                           
  6416                           ;Dimmer_B1.c: 824: }
  6417                           ;Dimmer_B1.c: 825: }
  6418                           ;Dimmer_B1.c: 826: }
  6419                           ;Dimmer_B1.c: 827: } else {
  6420  0585  0008               	return
  6421  0586                     l4299:	
  6422                           
  6423                           ;Dimmer_B1.c: 828: if (DimmerLights->DimmingTrigger == 1) {
  6424  0586  0872               	movf	_DimmerLights,w
  6425  0587  0084               	movwf	4
  6426  0588  1383               	bcf	3,7	;select IRP bank0
  6427  0589  1E00               	btfss	0,4
  6428  058A  0008               	return
  6429                           
  6430                           ;Dimmer_B1.c: 829: DimmerLights->DimmingTrigger = 0;
  6431  058B  0872               	movf	_DimmerLights,w
  6432  058C  0084               	movwf	4
  6433  058D  1200               	bcf	0,4
  6434  058E  0008               	return
  6435  058F                     __end_of_setDimmerLights_Main:	
  6436                           
  6437                           	psect	text36
  6438  0748                     __ptext36:	
  6439 ;; *************** function _setDimmerLights_OnOff *****************
  6440 ;; Defined at:
  6441 ;;		line 837 in file "../src/Dimmer_B1.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  lights          1    wreg     unsigned char 
  6444 ;;  command         1    3[BANK0 ] unsigned char 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  lights          1    4[BANK0 ] unsigned char 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;		None               void
  6449 ;; Registers used:
  6450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6456 ;;      Params:         0       1       0       0
  6457 ;;      Locals:         0       1       0       0
  6458 ;;      Temps:          0       0       0       0
  6459 ;;      Totals:         0       2       0       0
  6460 ;;Total ram usage:        2 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:    4
  6463 ;; This function calls:
  6464 ;;		_getCmd_Status
  6465 ;;		_getMain_All_LightsStatus
  6466 ;;		_setCmd_Status
  6467 ;;		_setDimmerIntr_ControlStatus
  6468 ;; This function is called by:
  6469 ;;		_setDimmerLights_Main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           
  6474                           ;psect for function _setDimmerLights_OnOff
  6475  0748                     _setDimmerLights_OnOff:	
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6479                           ;setDimmerLights_OnOff@lights stored from wreg
  6480  0748  1283               	bcf	3,5	;RP0=0, select bank0
  6481  0749  1303               	bcf	3,6	;RP1=0, select bank0
  6482  074A  00DB               	movwf	setDimmerLights_OnOff@lights
  6483                           
  6484                           ;Dimmer_B1.c: 839: if (command == 1) {
  6485  074B  085A               	movf	setDimmerLights_OnOff@command,w
  6486  074C  3A01               	xorlw	1
  6487  074D  1D03               	skipz
  6488  074E  2F59               	goto	l4111
  6489                           
  6490                           ;Dimmer_B1.c: 840: setDimmerIntr_ControlStatus(lights, 1);
  6491  074F  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6492  0750  0AD7               	incf	setDimmerIntr_ControlStatus@command,f
  6493  0751  085B               	movf	setDimmerLights_OnOff@lights,w
  6494  0752  158A  26ED  118A   	fcall	_setDimmerIntr_ControlStatus
  6495                           
  6496                           ;Dimmer_B1.c: 848: Dimmer.PIR_Open_Status = 1;
  6497  0755  1283               	bcf	3,5	;RP0=0, select bank0
  6498  0756  1303               	bcf	3,6	;RP1=0, select bank0
  6499  0757  14AD               	bsf	_Dimmer+1,1
  6500                           
  6501                           ;Dimmer_B1.c: 895: } else if (command == 0) {
  6502  0758  2F61               	goto	l4115
  6503  0759                     l4111:	
  6504  0759  08DA               	movf	setDimmerLights_OnOff@command,f
  6505  075A  1D03               	skipz
  6506  075B  2F61               	goto	l4115
  6507                           
  6508                           ;Dimmer_B1.c: 896: setDimmerIntr_ControlStatus(lights, 0);
  6509  075C  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6510  075D  085B               	movf	setDimmerLights_OnOff@lights,w
  6511  075E  158A  26ED  118A   	fcall	_setDimmerIntr_ControlStatus
  6512  0761                     l4115:	
  6513                           
  6514                           ;Dimmer_B1.c: 929: }
  6515                           ;Dimmer_B1.c: 932: ;;
  6516                           ;Dimmer_B1.c: 934: if (getCmd_Status(1) == 1) {
  6517  0761  3001               	movlw	1
  6518  0762  158A  2652  118A   	fcall	_getCmd_Status
  6519  0765  3A01               	xorlw	1
  6520  0766  1D03               	skipz
  6521  0767  0008               	return
  6522                           
  6523                           ;Dimmer_B1.c: 935: if (getMain_All_LightsStatus() == 0) {
  6524  0768  158A  25EC  118A   	fcall	_getMain_All_LightsStatus
  6525  076B  3800               	iorlw	0
  6526  076C  1D03               	skipz
  6527  076D  0008               	return
  6528                           
  6529                           ;Dimmer_B1.c: 936: setCmd_Status(1, 0);
  6530  076E  1283               	bcf	3,5	;RP0=0, select bank0
  6531  076F  1303               	bcf	3,6	;RP1=0, select bank0
  6532  0770  01D7               	clrf	setCmd_Status@cmd
  6533  0771  3001               	movlw	1
  6534  0772  158A  26D7         	fcall	_setCmd_Status
  6535                           
  6536                           ;Dimmer_B1.c: 940: }
  6537                           ;Dimmer_B1.c: 941: } else {
  6538                           
  6539                           ;Dimmer_B1.c: 937: ;;
  6540                           ;Dimmer_B1.c: 938: ;;
  6541                           ;Dimmer_B1.c: 939: ;;
  6542  0774  0008               	return
  6543  0775                     __end_of_setDimmerLights_OnOff:	
  6544                           ;Dimmer_B1.c: 942: ;;
  6545                           
  6546                           
  6547                           	psect	text37
  6548  0EED                     __ptext37:	
  6549 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6550 ;; Defined at:
  6551 ;;		line 69 in file "../src/Dimmer_B1.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  lights          1    wreg     unsigned char 
  6554 ;;  command         1    0[BANK0 ] unsigned char 
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  lights          1    2[BANK0 ] unsigned char 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;		None               void
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6566 ;;      Params:         0       1       0       0
  6567 ;;      Locals:         0       1       0       0
  6568 ;;      Temps:          0       1       0       0
  6569 ;;      Totals:         0       3       0       0
  6570 ;;Total ram usage:        3 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    3
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_setDimmerLights_OnOff
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           
  6581                           ;psect for function _setDimmerIntr_ControlStatus
  6582  0EED                     _setDimmerIntr_ControlStatus:	
  6583                           
  6584                           ;incstack = 0
  6585                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6586                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6587  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  6588  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  6589  0EEF  00D9               	movwf	setDimmerIntr_ControlStatus@lights
  6590                           
  6591                           ;Dimmer_B1.c: 71: if (lights == 1) {
  6592  0EF0  0859               	movf	setDimmerIntr_ControlStatus@lights,w
  6593  0EF1  3A01               	xorlw	1
  6594  0EF2  1D03               	skipz
  6595  0EF3  0008               	return
  6596                           
  6597                           ;Dimmer_B1.c: 72: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6598  0EF4  0857               	movf	setDimmerIntr_ControlStatus@command,w
  6599  0EF5  3A01               	xorlw	1
  6600  0EF6  3000               	movlw	0
  6601  0EF7  1903               	skipnz
  6602  0EF8  3001               	movlw	1
  6603  0EF9  00D8               	movwf	??_setDimmerIntr_ControlStatus
  6604  0EFA  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6605  0EFB  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6606  0EFC  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6607  0EFD  0820               	movf	_DimmerIntr1,w
  6608  0EFE  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6609  0EFF  39F7               	andlw	-9
  6610  0F00  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6611  0F01  00A0               	movwf	_DimmerIntr1
  6612  0F02  0008               	return
  6613  0F03                     __end_of_setDimmerIntr_ControlStatus:	
  6614                           
  6615                           	psect	text38
  6616  0ED7                     __ptext38:	
  6617 ;; *************** function _setCmd_Status *****************
  6618 ;; Defined at:
  6619 ;;		line 651 in file "../src/Main_B1.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  number          1    wreg     unsigned char 
  6622 ;;  cmd             1    0[BANK0 ] unsigned char 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  number          1    2[BANK0 ] unsigned char 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;		None               void
  6627 ;; Registers used:
  6628 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6634 ;;      Params:         0       1       0       0
  6635 ;;      Locals:         0       1       0       0
  6636 ;;      Temps:          0       1       0       0
  6637 ;;      Totals:         0       3       0       0
  6638 ;;Total ram usage:        3 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    3
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_setDimmerLights_OnOff
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _setCmd_Status
  6650  0ED7                     _setCmd_Status:	
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6654                           ;setCmd_Status@number stored from wreg
  6655  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  6656  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  6657  0ED9  00D9               	movwf	setCmd_Status@number
  6658                           
  6659                           ;Main_B1.c: 652: switch (number) {
  6660  0EDA  2EE7               	goto	l4057
  6661  0EDB                     l4053:	
  6662                           ;Main_B1.c: 653: case 1:
  6663                           
  6664                           
  6665                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
  6666  0EDB  0857               	movf	setCmd_Status@cmd,w
  6667  0EDC  3A01               	xorlw	1
  6668  0EDD  3000               	movlw	0
  6669  0EDE  1903               	skipnz
  6670  0EDF  3001               	movlw	1
  6671  0EE0  00D8               	movwf	??_setCmd_Status
  6672  0EE1  0870               	movf	_Cmd,w
  6673  0EE2  0658               	xorwf	??_setCmd_Status,w
  6674  0EE3  39FE               	andlw	-2
  6675  0EE4  0658               	xorwf	??_setCmd_Status,w
  6676  0EE5  00F0               	movwf	_Cmd
  6677                           
  6678                           ;Main_B1.c: 656: }
  6679                           
  6680                           ;Main_B1.c: 655: break;
  6681  0EE6  0008               	return
  6682  0EE7                     l4057:	
  6683  0EE7  0859               	movf	setCmd_Status@number,w
  6684                           
  6685                           ; Switch size 1, requested type "space"
  6686                           ; Number of cases is 1, Range of values is 1 to 1
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte            4     3 (average)
  6690                           ; direct_byte           12    10 (fixed)
  6691                           ; jumptable            263     9 (fixed)
  6692                           ;	Chosen strategy is simple_byte
  6693  0EE8  3A01               	xorlw	1	; case 1
  6694  0EE9  1903               	skipnz
  6695  0EEA  2EDB               	goto	l4053
  6696  0EEB  2EEC               	goto	l832
  6697  0EEC                     l832:	
  6698  0EEC  0008               	return
  6699  0EED                     __end_of_setCmd_Status:	
  6700                           
  6701                           	psect	text39
  6702  0DEC                     __ptext39:	
  6703 ;; *************** function _getMain_All_LightsStatus *****************
  6704 ;; Defined at:
  6705 ;;		line 373 in file "../src/Main_B1.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;		None
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  status          1    0[BANK0 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      unsigned char 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6719 ;;      Params:         0       0       0       0
  6720 ;;      Locals:         0       1       0       0
  6721 ;;      Temps:          0       0       0       0
  6722 ;;      Totals:         0       1       0       0
  6723 ;;Total ram usage:        1 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    3
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_setDimmerLights_Main
  6730 ;;		_setDimmerLights_OnOff
  6731 ;;		_setTemp_Main
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _getMain_All_LightsStatus
  6737  0DEC                     _getMain_All_LightsStatus:	
  6738                           
  6739                           ;Main_B1.c: 374: char status = 0;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6743  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  6745  0DEE  01D7               	clrf	getMain_All_LightsStatus@status
  6746                           
  6747                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6748  0DEF  3000               	movlw	0
  6749  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  6750  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  6751  0DF2  184B               	btfsc	(_DimmerLights1^(0+128)+1),0
  6752  0DF3  3001               	movlw	1
  6753  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  6754  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  6755  0DF6  00D7               	movwf	getMain_All_LightsStatus@status
  6756                           
  6757                           ;Main_B1.c: 420: return status;
  6758  0DF7  0857               	movf	getMain_All_LightsStatus@status,w
  6759  0DF8  0008               	return
  6760  0DF9                     __end_of_getMain_All_LightsStatus:	
  6761                           
  6762                           	psect	text40
  6763  0E52                     __ptext40:	
  6764 ;; *************** function _getCmd_Status *****************
  6765 ;; Defined at:
  6766 ;;		line 659 in file "../src/Main_B1.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  number          1    wreg     unsigned char 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  number          1    0[BANK0 ] unsigned char 
  6771 ;;  cmd             1    1[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      unsigned char 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6781 ;;      Params:         0       0       0       0
  6782 ;;      Locals:         0       2       0       0
  6783 ;;      Temps:          0       0       0       0
  6784 ;;      Totals:         0       2       0       0
  6785 ;;Total ram usage:        2 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    3
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_setDimmerLights_OnOff
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function _getCmd_Status
  6797  0E52                     _getCmd_Status:	
  6798                           
  6799                           ;incstack = 0
  6800                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6801                           ;getCmd_Status@number stored from wreg
  6802  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  6803  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  6804  0E54  00D7               	movwf	getCmd_Status@number
  6805                           
  6806                           ;Main_B1.c: 660: char cmd = 0;
  6807  0E55  01D8               	clrf	getCmd_Status@cmd
  6808                           
  6809                           ;Main_B1.c: 661: switch (number) {
  6810  0E56  2E5C               	goto	l4045
  6811  0E57                     l4041:	
  6812                           ;Main_B1.c: 662: case 1:
  6813                           
  6814                           
  6815                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
  6816  0E57  3000               	movlw	0
  6817  0E58  1870               	btfsc	_Cmd,0
  6818  0E59  3001               	movlw	1
  6819  0E5A  00D8               	movwf	getCmd_Status@cmd
  6820                           
  6821                           ;Main_B1.c: 665: }
  6822                           
  6823                           ;Main_B1.c: 664: break;
  6824  0E5B  2E61               	goto	l4047
  6825  0E5C                     l4045:	
  6826  0E5C  0857               	movf	getCmd_Status@number,w
  6827                           
  6828                           ; Switch size 1, requested type "space"
  6829                           ; Number of cases is 1, Range of values is 1 to 1
  6830                           ; switch strategies available:
  6831                           ; Name         Instructions Cycles
  6832                           ; simple_byte            4     3 (average)
  6833                           ; direct_byte           12    10 (fixed)
  6834                           ; jumptable            263     9 (fixed)
  6835                           ;	Chosen strategy is simple_byte
  6836  0E5D  3A01               	xorlw	1	; case 1
  6837  0E5E  1903               	skipnz
  6838  0E5F  2E57               	goto	l4041
  6839  0E60  2E61               	goto	l4047
  6840  0E61                     l4047:	
  6841                           
  6842                           ;Main_B1.c: 666: return cmd;
  6843  0E61  0858               	movf	getCmd_Status@cmd,w
  6844  0E62  0008               	return
  6845  0E63                     __end_of_getCmd_Status:	
  6846                           
  6847                           	psect	text41
  6848  07A0                     __ptext41:	
  6849 ;; *************** function _setDimmerLights_Dimming *****************
  6850 ;; Defined at:
  6851 ;;		line 948 in file "../src/Dimmer_B1.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  lights          1    wreg     unsigned char 
  6854 ;;  status          1    3[BANK0 ] unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  lights          1    6[BANK0 ] unsigned char 
  6857 ;;  value           1    5[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;		None               void
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0, pclath, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6867 ;;      Params:         0       1       0       0
  6868 ;;      Locals:         0       2       0       0
  6869 ;;      Temps:          0       1       0       0
  6870 ;;      Totals:         0       4       0       0
  6871 ;;Total ram usage:        4 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    4
  6874 ;; This function calls:
  6875 ;;		_getDimmerIntr_DimmingValue
  6876 ;;		_setDimmerIntr_Dimming_Sw
  6877 ;;		_setDimmerIntr_MaxmumValue
  6878 ;; This function is called by:
  6879 ;;		_setDimmerLights_Main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _setDimmerLights_Dimming
  6885  07A0                     _setDimmerLights_Dimming:	
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6889                           ;setDimmerLights_Dimming@lights stored from wreg
  6890  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  6891  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  6892  07A2  00DD               	movwf	setDimmerLights_Dimming@lights
  6893                           
  6894                           ;Dimmer_B1.c: 949: if (status == 1) {
  6895  07A3  085A               	movf	setDimmerLights_Dimming@status,w
  6896  07A4  3A01               	xorlw	1
  6897  07A5  1D03               	skipz
  6898  07A6  2FAD               	goto	l4125
  6899                           
  6900                           ;Dimmer_B1.c: 950: setDimmerIntr_Dimming_Sw(lights, 1);
  6901  07A7  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6902  07A8  0AD7               	incf	setDimmerIntr_Dimming_Sw@command,f
  6903  07A9  085D               	movf	setDimmerLights_Dimming@lights,w
  6904  07AA  158A  2699         	fcall	_setDimmerIntr_Dimming_Sw
  6905                           
  6906                           ;Dimmer_B1.c: 955: ;;
  6907                           ;Dimmer_B1.c: 956: } else if (status == 0) {
  6908  07AC  0008               	return
  6909  07AD                     l4125:	
  6910  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  6911  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  6912  07AF  08DA               	movf	setDimmerLights_Dimming@status,f
  6913  07B0  1D03               	skipz
  6914  07B1  0008               	return
  6915                           
  6916                           ;Dimmer_B1.c: 957: setDimmerIntr_Dimming_Sw(lights, 0);
  6917  07B2  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6918  07B3  085D               	movf	setDimmerLights_Dimming@lights,w
  6919  07B4  158A  2699  118A   	fcall	_setDimmerIntr_Dimming_Sw
  6920                           
  6921                           ;Dimmer_B1.c: 963: char value = getDimmerIntr_DimmingValue(lights);
  6922  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  6923  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  6924  07B9  085D               	movf	setDimmerLights_Dimming@lights,w
  6925  07BA  158A  2606  118A   	fcall	_getDimmerIntr_DimmingValue
  6926  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  6927  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  6928  07BF  00DB               	movwf	??_setDimmerLights_Dimming
  6929  07C0  085B               	movf	??_setDimmerLights_Dimming,w
  6930  07C1  00DC               	movwf	setDimmerLights_Dimming@value
  6931                           
  6932                           ;Dimmer_B1.c: 964: setDimmerIntr_MaxmumValue(lights, value);
  6933  07C2  085C               	movf	setDimmerLights_Dimming@value,w
  6934  07C3  00DB               	movwf	??_setDimmerLights_Dimming
  6935  07C4  085B               	movf	??_setDimmerLights_Dimming,w
  6936  07C5  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  6937  07C6  085D               	movf	setDimmerLights_Dimming@lights,w
  6938  07C7  158A  25D4         	fcall	_setDimmerIntr_MaxmumValue
  6939                           
  6940                           ;Dimmer_B1.c: 965: ;;
  6941                           ;Dimmer_B1.c: 972: ;;
  6942                           ;Dimmer_B1.c: 976: ;;
  6943                           ;Dimmer_B1.c: 977: ;;
  6944  07C9  0008               	return
  6945  07CA                     __end_of_setDimmerLights_Dimming:	
  6946                           
  6947                           	psect	text42
  6948  0E99                     __ptext42:	
  6949 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6950 ;; Defined at:
  6951 ;;		line 204 in file "../src/Dimmer_B1.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  lights          1    wreg     unsigned char 
  6954 ;;  command         1    0[BANK0 ] unsigned char 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  lights          1    2[BANK0 ] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;		None               void
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6966 ;;      Params:         0       1       0       0
  6967 ;;      Locals:         0       1       0       0
  6968 ;;      Temps:          0       1       0       0
  6969 ;;      Totals:         0       3       0       0
  6970 ;;Total ram usage:        3 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    3
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_setDimmerLights_Dimming
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           
  6981                           ;psect for function _setDimmerIntr_Dimming_Sw
  6982  0E99                     _setDimmerIntr_Dimming_Sw:	
  6983                           
  6984                           ;incstack = 0
  6985                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6986                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6987  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  6988  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  6989  0E9B  00D9               	movwf	setDimmerIntr_Dimming_Sw@lights
  6990                           
  6991                           ;Dimmer_B1.c: 206: if (lights == 1) {
  6992  0E9C  0859               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6993  0E9D  3A01               	xorlw	1
  6994  0E9E  1D03               	skipz
  6995  0E9F  0008               	return
  6996                           
  6997                           ;Dimmer_B1.c: 207: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6998  0EA0  0857               	movf	setDimmerIntr_Dimming_Sw@command,w
  6999  0EA1  3A01               	xorlw	1
  7000  0EA2  3000               	movlw	0
  7001  0EA3  1903               	skipnz
  7002  0EA4  3001               	movlw	1
  7003  0EA5  00D8               	movwf	??_setDimmerIntr_Dimming_Sw
  7004  0EA6  0ED8               	swapf	??_setDimmerIntr_Dimming_Sw,f
  7005  0EA7  0820               	movf	_DimmerIntr1,w
  7006  0EA8  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7007  0EA9  39EF               	andlw	-17
  7008  0EAA  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  7009  0EAB  00A0               	movwf	_DimmerIntr1
  7010  0EAC  0008               	return
  7011  0EAD                     __end_of_setDimmerIntr_Dimming_Sw:	
  7012                           
  7013                           	psect	text43
  7014  0E06                     __ptext43:	
  7015 ;; *************** function _getDimmerIntr_DimmingValue *****************
  7016 ;; Defined at:
  7017 ;;		line 105 in file "../src/Dimmer_B1.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  lights          1    wreg     unsigned char 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;  lights          1    1[BANK0 ] unsigned char 
  7022 ;;  value           1    2[BANK0 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7032 ;;      Params:         0       0       0       0
  7033 ;;      Locals:         0       2       0       0
  7034 ;;      Temps:          0       1       0       0
  7035 ;;      Totals:         0       3       0       0
  7036 ;;Total ram usage:        3 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    3
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_setDimmerLights_Dimming
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function _getDimmerIntr_DimmingValue
  7048  0E06                     _getDimmerIntr_DimmingValue:	
  7049                           
  7050                           ;incstack = 0
  7051                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  7052                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  7053  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  7054  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  7055  0E08  00D8               	movwf	getDimmerIntr_DimmingValue@lights
  7056                           
  7057                           ;Dimmer_B1.c: 106: char value = 0;
  7058  0E09  01D9               	clrf	getDimmerIntr_DimmingValue@value
  7059                           
  7060                           ;Dimmer_B1.c: 108: if (lights == 1) {
  7061  0E0A  0858               	movf	getDimmerIntr_DimmingValue@lights,w
  7062  0E0B  3A01               	xorlw	1
  7063  0E0C  1D03               	skipz
  7064  0E0D  2E12               	goto	l252
  7065                           
  7066                           ;Dimmer_B1.c: 109: value = DimmerIntr1.DimmingValue;
  7067  0E0E  0825               	movf	_DimmerIntr1+5,w
  7068  0E0F  00D7               	movwf	??_getDimmerIntr_DimmingValue
  7069  0E10  0857               	movf	??_getDimmerIntr_DimmingValue,w
  7070  0E11  00D9               	movwf	getDimmerIntr_DimmingValue@value
  7071  0E12                     l252:	
  7072                           
  7073                           ;Dimmer_B1.c: 110: }
  7074                           ;Dimmer_B1.c: 122: return value;
  7075  0E12  0859               	movf	getDimmerIntr_DimmingValue@value,w
  7076  0E13  0008               	return
  7077  0E14                     __end_of_getDimmerIntr_DimmingValue:	
  7078                           
  7079                           	psect	text44
  7080  0D87                     __ptext44:	
  7081 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7082 ;; Defined at:
  7083 ;;		line 983 in file "../src/Dimmer_B1.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  lights          1    wreg     unsigned char 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  lights          1    0[COMMON] unsigned char 
  7088 ;;  allow           1    0[BANK0 ] unsigned char 
  7089 ;; Return value:  Size  Location     Type
  7090 ;;                  1    wreg      unsigned char 
  7091 ;; Registers used:
  7092 ;;		wreg, status,2
  7093 ;; Tracked objects:
  7094 ;;		On entry : 0/0
  7095 ;;		On exit  : 0/0
  7096 ;;		Unchanged: 0/0
  7097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7098 ;;      Params:         0       0       0       0
  7099 ;;      Locals:         0       1       0       0
  7100 ;;      Temps:          0       0       0       0
  7101 ;;      Totals:         0       1       0       0
  7102 ;;Total ram usage:        1 bytes
  7103 ;; Hardware stack levels used:    1
  7104 ;; Hardware stack levels required when called:    3
  7105 ;; This function calls:
  7106 ;;		Nothing
  7107 ;; This function is called by:
  7108 ;;		_setDimmerLights_Main
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           
  7113                           ;psect for function _getDimmerLights_Allow_Condition
  7114  0D87                     _getDimmerLights_Allow_Condition:	
  7115                           
  7116                           ;Dimmer_B1.c: 984: char allow = 0;
  7117                           
  7118                           ;incstack = 0
  7119                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7120  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  7121  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  7122  0D89  01D7               	clrf	getDimmerLights_Allow_Condition@allow
  7123                           
  7124                           ;Dimmer_B1.c: 1017: return allow;
  7125  0D8A  0857               	movf	getDimmerLights_Allow_Condition@allow,w
  7126  0D8B  0008               	return
  7127  0D8C                     __end_of_getDimmerLights_Allow_Condition:	
  7128                           
  7129                           	psect	text45
  7130  033E                     __ptext45:	
  7131 ;; *************** function _DimmerLights_PIR_Control *****************
  7132 ;; Defined at:
  7133 ;;		line 1738 in file "../src/Dimmer_B1.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;		None
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;		None               void
  7140 ;; Registers used:
  7141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7147 ;;      Params:         0       0       0       0
  7148 ;;      Locals:         0       0       0       0
  7149 ;;      Temps:          0       1       0       0
  7150 ;;      Totals:         0       1       0       0
  7151 ;;Total ram usage:        1 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; Hardware stack levels required when called:    5
  7154 ;; This function calls:
  7155 ;;		_getDimmerLights_Status
  7156 ;;		_setDimmerIntr_DimmingValue
  7157 ;;		_setDimmerIntr_Dimming_RF
  7158 ;;		_setDimmerIntr_MaxmumValue
  7159 ;;		_setDimmerLights_SwOff
  7160 ;;		_setDimmerLights_SwOn
  7161 ;; This function is called by:
  7162 ;;		_DimmerLights_Main
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           
  7167                           ;psect for function _DimmerLights_PIR_Control
  7168  033E                     _DimmerLights_PIR_Control:	
  7169                           
  7170                           ;Dimmer_B1.c: 1740: if (Dimmer.PIR_Trigger == 1) {
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7174  033E  1283               	bcf	3,5	;RP0=0, select bank0
  7175  033F  1303               	bcf	3,6	;RP1=0, select bank0
  7176  0340  1EAC               	btfss	_Dimmer,5
  7177  0341  2BAE               	goto	l4331
  7178                           
  7179                           ;Dimmer_B1.c: 1741: Dimmer.PIR_Trigger = 0;
  7180  0342  12AC               	bcf	_Dimmer,5
  7181                           
  7182                           ;Dimmer_B1.c: 1742: if (Dimmer.PIR_Sw == 1) {
  7183  0343  1E2C               	btfss	_Dimmer,4
  7184  0344  2B7B               	goto	l417
  7185                           
  7186                           ;Dimmer_B1.c: 1744: if (getDimmerLights_Status(1) == 0) {
  7187  0345  3001               	movlw	1
  7188  0346  158A  2641  118A   	fcall	_getDimmerLights_Status
  7189  0349  3800               	iorlw	0
  7190  034A  1D03               	skipz
  7191  034B  2B5F               	goto	l418
  7192                           
  7193                           ;Dimmer_B1.c: 1745: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.6)));
  7194  034C  3036               	movlw	54
  7195  034D  1283               	bcf	3,5	;RP0=0, select bank0
  7196  034E  1303               	bcf	3,6	;RP1=0, select bank0
  7197  034F  00DB               	movwf	??_DimmerLights_PIR_Control
  7198  0350  085B               	movf	??_DimmerLights_PIR_Control,w
  7199  0351  00D7               	movwf	setDimmerIntr_DimmingValue@value
  7200  0352  3001               	movlw	1
  7201  0353  158A  25C8  118A   	fcall	_setDimmerIntr_DimmingValue
  7202                           
  7203                           ;Dimmer_B1.c: 1746: setDimmerLights_SwOn(1);
  7204  0356  3001               	movlw	1
  7205  0357  158A  27DD  118A   	fcall	_setDimmerLights_SwOn
  7206                           
  7207                           ;Dimmer_B1.c: 1747: setDimmerLights_SwOff(1);
  7208  035A  3001               	movlw	1
  7209  035B  118A  27CA  118A   	fcall	_setDimmerLights_SwOff
  7210                           
  7211                           ;Dimmer_B1.c: 1748: } else {
  7212  035E  2BAE               	goto	l4331
  7213  035F                     l418:	
  7214                           
  7215                           ;Dimmer_B1.c: 1749: if (Dimmer.PIR_Lights_Status == 1) {
  7216  035F  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0360  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0361  1D2D               	btfss	_Dimmer+1,2
  7219  0362  2BAE               	goto	l4331
  7220                           
  7221                           ;Dimmer_B1.c: 1750: Dimmer.PIR_Lights_Status = 0;
  7222  0363  112D               	bcf	_Dimmer+1,2
  7223                           
  7224                           ;Dimmer_B1.c: 1751: Dimmer.PIR_Close_Status = 0;
  7225  0364  102D               	bcf	_Dimmer+1,0
  7226                           
  7227                           ;Dimmer_B1.c: 1752: DimmerLights1.Trigger = 0;
  7228  0365  1683               	bsf	3,5	;RP0=1, select bank1
  7229  0366  1303               	bcf	3,6	;RP1=0, select bank1
  7230  0367  10CA               	bcf	_DimmerLights1^(0+128),1
  7231                           
  7232                           ;Dimmer_B1.c: 1754: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7233  0368  3012               	movlw	18
  7234  0369  1283               	bcf	3,5	;RP0=0, select bank0
  7235  036A  1303               	bcf	3,6	;RP1=0, select bank0
  7236  036B  00DB               	movwf	??_DimmerLights_PIR_Control
  7237  036C  085B               	movf	??_DimmerLights_PIR_Control,w
  7238  036D  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7239  036E  3001               	movlw	1
  7240  036F  158A  25D4  118A   	fcall	_setDimmerIntr_MaxmumValue
  7241                           
  7242                           ;Dimmer_B1.c: 1755: setDimmerIntr_Dimming_RF(1, 1);
  7243  0372  1283               	bcf	3,5	;RP0=0, select bank0
  7244  0373  1303               	bcf	3,6	;RP1=0, select bank0
  7245  0374  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7246  0375  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7247  0376  3001               	movlw	1
  7248  0377  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7249                           
  7250                           ;Dimmer_B1.c: 1756: }
  7251                           ;Dimmer_B1.c: 1757: }
  7252                           ;Dimmer_B1.c: 1758: } else if (Dimmer.PIR_Sw == 0) {
  7253  037A  2BAE               	goto	l4331
  7254  037B                     l417:	
  7255  037B  1A2C               	btfsc	_Dimmer,4
  7256  037C  2BAE               	goto	l4331
  7257                           
  7258                           ;Dimmer_B1.c: 1759: if (getDimmerLights_Status(1) == 1) {
  7259  037D  3001               	movlw	1
  7260  037E  158A  2641  118A   	fcall	_getDimmerLights_Status
  7261  0381  3A01               	xorlw	1
  7262  0382  1D03               	skipz
  7263  0383  2BAE               	goto	l4331
  7264                           
  7265                           ;Dimmer_B1.c: 1760: if (Dimmer.PIR_Lights_Status == 0) {
  7266  0384  1283               	bcf	3,5	;RP0=0, select bank0
  7267  0385  1303               	bcf	3,6	;RP1=0, select bank0
  7268  0386  192D               	btfsc	_Dimmer+1,2
  7269  0387  2B9A               	goto	l424
  7270                           
  7271                           ;Dimmer_B1.c: 1761: Dimmer.PIR_Lights_Status = 1;
  7272  0388  152D               	bsf	_Dimmer+1,2
  7273                           
  7274                           ;Dimmer_B1.c: 1762: setDimmerIntr_MaxmumValue(1, (((char)((100-10)*0.6))-((char)((100-70
      +                          )*0.6))));
  7275  0389  3024               	movlw	36
  7276  038A  00DB               	movwf	??_DimmerLights_PIR_Control
  7277  038B  085B               	movf	??_DimmerLights_PIR_Control,w
  7278  038C  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7279  038D  3001               	movlw	1
  7280  038E  158A  25D4  118A   	fcall	_setDimmerIntr_MaxmumValue
  7281                           
  7282                           ;Dimmer_B1.c: 1763: setDimmerIntr_Dimming_RF(1, 1);
  7283  0391  1283               	bcf	3,5	;RP0=0, select bank0
  7284  0392  1303               	bcf	3,6	;RP1=0, select bank0
  7285  0393  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7286  0394  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7287  0395  3001               	movlw	1
  7288  0396  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7289                           
  7290                           ;Dimmer_B1.c: 1764: } else {
  7291  0399  2BAE               	goto	l4331
  7292  039A                     l424:	
  7293                           
  7294                           ;Dimmer_B1.c: 1765: Dimmer.PIR_Lights_Status = 0;
  7295  039A  112D               	bcf	_Dimmer+1,2
  7296                           
  7297                           ;Dimmer_B1.c: 1766: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.6)));
  7298  039B  3036               	movlw	54
  7299  039C  00DB               	movwf	??_DimmerLights_PIR_Control
  7300  039D  085B               	movf	??_DimmerLights_PIR_Control,w
  7301  039E  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7302  039F  3001               	movlw	1
  7303  03A0  158A  25D4  118A   	fcall	_setDimmerIntr_MaxmumValue
  7304                           
  7305                           ;Dimmer_B1.c: 1767: setDimmerIntr_Dimming_RF(1, 1);
  7306  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  7307  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  7308  03A5  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7309  03A6  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7310  03A7  3001               	movlw	1
  7311  03A8  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7312                           
  7313                           ;Dimmer_B1.c: 1768: Dimmer.PIR_Close_Status = 1;
  7314  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  7315  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  7316  03AD  142D               	bsf	_Dimmer+1,0
  7317  03AE                     l4331:	
  7318                           
  7319                           ;Dimmer_B1.c: 1769: }
  7320                           ;Dimmer_B1.c: 1770: }
  7321                           ;Dimmer_B1.c: 1771: }
  7322                           ;Dimmer_B1.c: 1772: }
  7323                           ;Dimmer_B1.c: 1773: if (Dimmer.PIR_Open_Status == 1) {
  7324  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  7325  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  7326  03B0  1CAD               	btfss	_Dimmer+1,1
  7327  03B1  2BC3               	goto	l4337
  7328                           
  7329                           ;Dimmer_B1.c: 1774: Dimmer.PIR_Open_Status = 0;
  7330  03B2  10AD               	bcf	_Dimmer+1,1
  7331                           
  7332                           ;Dimmer_B1.c: 1775: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7333  03B3  3012               	movlw	18
  7334  03B4  00DB               	movwf	??_DimmerLights_PIR_Control
  7335  03B5  085B               	movf	??_DimmerLights_PIR_Control,w
  7336  03B6  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7337  03B7  3001               	movlw	1
  7338  03B8  158A  25D4  118A   	fcall	_setDimmerIntr_MaxmumValue
  7339                           
  7340                           ;Dimmer_B1.c: 1776: setDimmerIntr_Dimming_RF(1, 1);
  7341  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  7342  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  7343  03BD  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7344  03BE  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7345  03BF  3001               	movlw	1
  7346  03C0  158A  26C1  118A   	fcall	_setDimmerIntr_Dimming_RF
  7347  03C3                     l4337:	
  7348                           
  7349                           ;Dimmer_B1.c: 1777: }
  7350                           ;Dimmer_B1.c: 1778: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7351  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  7352  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  7353  03C5  1C2D               	btfss	_Dimmer+1,0
  7354  03C6  0008               	return
  7355  03C7  1B20               	btfsc	_DimmerIntr1,6
  7356  03C8  0008               	return
  7357                           
  7358                           ;Dimmer_B1.c: 1779: Dimmer.PIR_Close_Status = 0;
  7359  03C9  102D               	bcf	_Dimmer+1,0
  7360                           
  7361                           ;Dimmer_B1.c: 1780: setDimmerLights_SwOn(1);
  7362  03CA  3001               	movlw	1
  7363  03CB  158A  27DD  118A   	fcall	_setDimmerLights_SwOn
  7364                           
  7365                           ;Dimmer_B1.c: 1781: setDimmerLights_SwOff(1);
  7366  03CE  3001               	movlw	1
  7367  03CF  118A  27CA         	fcall	_setDimmerLights_SwOff
  7368  03D1  0008               	return
  7369  03D2                     __end_of_DimmerLights_PIR_Control:	
  7370                           
  7371                           	psect	text46
  7372  0FDD                     __ptext46:	
  7373 ;; *************** function _setDimmerLights_SwOn *****************
  7374 ;; Defined at:
  7375 ;;		line 691 in file "../src/Dimmer_B1.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  sw              1    wreg     unsigned char 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  sw              1    2[BANK0 ] unsigned char 
  7380 ;;  idle            1    3[BANK0 ] unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;		None               void
  7383 ;; Registers used:
  7384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7390 ;;      Params:         0       0       0       0
  7391 ;;      Locals:         0       2       0       0
  7392 ;;      Temps:          0       0       0       0
  7393 ;;      Totals:         0       2       0       0
  7394 ;;Total ram usage:        2 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    4
  7397 ;; This function calls:
  7398 ;;		_DimmerLights_SelectPointer
  7399 ;; This function is called by:
  7400 ;;		_DimmerLights_PIR_Control
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _setDimmerLights_SwOn
  7406  0FDD                     _setDimmerLights_SwOn:	
  7407                           
  7408                           ;incstack = 0
  7409                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7410                           ;setDimmerLights_SwOn@sw stored from wreg
  7411  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  7412  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  7413  0FDF  00D9               	movwf	setDimmerLights_SwOn@sw
  7414                           
  7415                           ;Dimmer_B1.c: 692: char idle = 0;
  7416  0FE0  01DA               	clrf	setDimmerLights_SwOn@idle
  7417                           
  7418                           ;Dimmer_B1.c: 717: DimmerLights_SelectPointer(sw);
  7419  0FE1  0859               	movf	setDimmerLights_SwOn@sw,w
  7420  0FE2  158A  25BC  158A   	fcall	_DimmerLights_SelectPointer
  7421                           
  7422                           ;Dimmer_B1.c: 718: if (idle == 0) {
  7423  0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  7424  0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  7425  0FE7  08DA               	movf	setDimmerLights_SwOn@idle,f
  7426  0FE8  1D03               	skipz
  7427  0FE9  0008               	return
  7428                           
  7429                           ;Dimmer_B1.c: 719: DimmerLights->SwFlag = 1;
  7430  0FEA  0872               	movf	_DimmerLights,w
  7431  0FEB  0084               	movwf	4
  7432  0FEC  1383               	bcf	3,7	;select IRP bank0
  7433  0FED  1400               	bsf	0,0
  7434                           
  7435                           ;Dimmer_B1.c: 720: if (DimmerLights->Status == 0) {
  7436  0FEE  0A72               	incf	_DimmerLights,w
  7437  0FEF  0084               	movwf	4
  7438  0FF0  1800               	btfsc	0,0
  7439  0FF1  2FFC               	goto	l4085
  7440                           
  7441                           ;Dimmer_B1.c: 721: DimmerLights->Status = 1;
  7442  0FF2  0A72               	incf	_DimmerLights,w
  7443  0FF3  0084               	movwf	4
  7444  0FF4  1400               	bsf	0,0
  7445                           
  7446                           ;Dimmer_B1.c: 722: DimmerLights->Trigger = 1;
  7447  0FF5  0872               	movf	_DimmerLights,w
  7448  0FF6  0084               	movwf	4
  7449  0FF7  1480               	bsf	0,1
  7450                           
  7451                           ;Dimmer_B1.c: 723: DimmerLights->Switch = 1;
  7452  0FF8  0872               	movf	_DimmerLights,w
  7453  0FF9  0084               	movwf	4
  7454  0FFA  1500               	bsf	0,2
  7455                           
  7456                           ;Dimmer_B1.c: 724: } else {
  7457  0FFB  0008               	return
  7458  0FFC                     l4085:	
  7459                           
  7460                           ;Dimmer_B1.c: 725: DimmerLights->Status = 0;
  7461  0FFC  0A72               	incf	_DimmerLights,w
  7462  0FFD  0084               	movwf	4
  7463  0FFE  1000               	bcf	0,0
  7464  0FFF  0008               	return
  7465  1000                     __end_of_setDimmerLights_SwOn:	
  7466                           ;Dimmer_B1.c: 726: }
  7467                           ;Dimmer_B1.c: 727: ;;
  7468                           
  7469                           
  7470                           	psect	text47
  7471  07CA                     __ptext47:	
  7472 ;; *************** function _setDimmerLights_SwOff *****************
  7473 ;; Defined at:
  7474 ;;		line 732 in file "../src/Dimmer_B1.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  sw              1    wreg     unsigned char 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  sw              1    2[BANK0 ] unsigned char 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;		None               void
  7481 ;; Registers used:
  7482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7488 ;;      Params:         0       0       0       0
  7489 ;;      Locals:         0       1       0       0
  7490 ;;      Temps:          0       0       0       0
  7491 ;;      Totals:         0       1       0       0
  7492 ;;Total ram usage:        1 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    4
  7495 ;; This function calls:
  7496 ;;		_DimmerLights_SelectPointer
  7497 ;; This function is called by:
  7498 ;;		_DimmerLights_PIR_Control
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function _setDimmerLights_SwOff
  7504  07CA                     _setDimmerLights_SwOff:	
  7505                           
  7506                           ;incstack = 0
  7507                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7508                           ;setDimmerLights_SwOff@sw stored from wreg
  7509  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  7510  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  7511  07CC  00D9               	movwf	setDimmerLights_SwOff@sw
  7512                           
  7513                           ;Dimmer_B1.c: 733: DimmerLights_SelectPointer(sw);
  7514  07CD  0859               	movf	setDimmerLights_SwOff@sw,w
  7515  07CE  158A  25BC  118A   	fcall	_DimmerLights_SelectPointer
  7516                           
  7517                           ;Dimmer_B1.c: 735: if (DimmerLights->SwFlag == 1) {
  7518  07D1  0872               	movf	_DimmerLights,w
  7519  07D2  0084               	movwf	4
  7520  07D3  1383               	bcf	3,7	;select IRP bank0
  7521  07D4  1C00               	btfss	0,0
  7522  07D5  0008               	return
  7523                           
  7524                           ;Dimmer_B1.c: 736: DimmerLights->SwFlag = 0;
  7525  07D6  0872               	movf	_DimmerLights,w
  7526  07D7  0084               	movwf	4
  7527  07D8  1000               	bcf	0,0
  7528                           
  7529                           ;Dimmer_B1.c: 737: if (DimmerLights->Status == 1) {
  7530  07D9  0A72               	incf	_DimmerLights,w
  7531  07DA  0084               	movwf	4
  7532  07DB  1C00               	btfss	0,0
  7533  07DC  2FEB               	goto	l4097
  7534                           
  7535                           ;Dimmer_B1.c: 738: if (DimmerLights->DimmingSwFlag == 1) {
  7536  07DD  0872               	movf	_DimmerLights,w
  7537  07DE  0084               	movwf	4
  7538  07DF  1D80               	btfss	0,3
  7539  07E0  0008               	return
  7540                           
  7541                           ;Dimmer_B1.c: 739: DimmerLights->DimmingSwFlag = 0;
  7542  07E1  0872               	movf	_DimmerLights,w
  7543  07E2  0084               	movwf	4
  7544  07E3  1180               	bcf	0,3
  7545                           
  7546                           ;Dimmer_B1.c: 741: DimmerLights->DimmingTrigger = 1;
  7547  07E4  0872               	movf	_DimmerLights,w
  7548  07E5  0084               	movwf	4
  7549  07E6  1600               	bsf	0,4
  7550                           
  7551                           ;Dimmer_B1.c: 742: DimmerLights->DimmingSwitch = 0;
  7552  07E7  0872               	movf	_DimmerLights,w
  7553  07E8  0084               	movwf	4
  7554  07E9  1280               	bcf	0,5
  7555                           
  7556                           ;Dimmer_B1.c: 743: }
  7557                           ;Dimmer_B1.c: 744: } else {
  7558  07EA  0008               	return
  7559  07EB                     l4097:	
  7560                           
  7561                           ;Dimmer_B1.c: 746: DimmerLights->Trigger = 1;
  7562  07EB  0872               	movf	_DimmerLights,w
  7563  07EC  0084               	movwf	4
  7564  07ED  1480               	bsf	0,1
  7565                           
  7566                           ;Dimmer_B1.c: 747: DimmerLights->Switch = 0;
  7567  07EE  0872               	movf	_DimmerLights,w
  7568  07EF  0084               	movwf	4
  7569  07F0  1100               	bcf	0,2
  7570  07F1  0008               	return
  7571  07F2                     __end_of_setDimmerLights_SwOff:	
  7572                           
  7573                           	psect	text48
  7574  0DD4                     __ptext48:	
  7575 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7576 ;; Defined at:
  7577 ;;		line 127 in file "../src/Dimmer_B1.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  lights          1    wreg     unsigned char 
  7580 ;;  value           1    0[BANK0 ] unsigned char 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  lights          1    2[BANK0 ] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;		None               void
  7585 ;; Registers used:
  7586 ;;		wreg
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7592 ;;      Params:         0       1       0       0
  7593 ;;      Locals:         0       1       0       0
  7594 ;;      Temps:          0       1       0       0
  7595 ;;      Totals:         0       3       0       0
  7596 ;;Total ram usage:        3 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    3
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_setDimmerLights_Dimming
  7603 ;;		_DimmerLights_PIR_Control
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _setDimmerIntr_MaxmumValue
  7609  0DD4                     _setDimmerIntr_MaxmumValue:	
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7613                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7614  0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  7615  0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  7616  0DD6  00D9               	movwf	setDimmerIntr_MaxmumValue@lights
  7617                           
  7618                           ;Dimmer_B1.c: 129: if (lights == 1) {
  7619  0DD7  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
  7620  0DD8  3A01               	xorlw	1
  7621  0DD9  1D03               	skipz
  7622  0DDA  0008               	return
  7623                           
  7624                           ;Dimmer_B1.c: 130: DimmerIntr1.MaxmumValue = value;
  7625  0DDB  0857               	movf	setDimmerIntr_MaxmumValue@value,w
  7626  0DDC  00D8               	movwf	??_setDimmerIntr_MaxmumValue
  7627  0DDD  0858               	movf	??_setDimmerIntr_MaxmumValue,w
  7628  0DDE  00A6               	movwf	_DimmerIntr1+6
  7629  0DDF  0008               	return
  7630  0DE0                     __end_of_setDimmerIntr_MaxmumValue:	
  7631                           
  7632                           	psect	text49
  7633  0EC1                     __ptext49:	
  7634 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7635 ;; Defined at:
  7636 ;;		line 222 in file "../src/Dimmer_B1.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  lights          1    wreg     unsigned char 
  7639 ;;  command         1    0[BANK0 ] unsigned char 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  lights          1    2[BANK0 ] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;		None               void
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7651 ;;      Params:         0       1       0       0
  7652 ;;      Locals:         0       1       0       0
  7653 ;;      Temps:          0       1       0       0
  7654 ;;      Totals:         0       3       0       0
  7655 ;;Total ram usage:        3 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    3
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_DimmerLights_PIR_Control
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function _setDimmerIntr_Dimming_RF
  7667  0EC1                     _setDimmerIntr_Dimming_RF:	
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7671                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7672  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  7673  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  7674  0EC3  00D9               	movwf	setDimmerIntr_Dimming_RF@lights
  7675                           
  7676                           ;Dimmer_B1.c: 224: if (lights == 1) {
  7677  0EC4  0859               	movf	setDimmerIntr_Dimming_RF@lights,w
  7678  0EC5  3A01               	xorlw	1
  7679  0EC6  1D03               	skipz
  7680  0EC7  0008               	return
  7681                           
  7682                           ;Dimmer_B1.c: 225: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7683  0EC8  0857               	movf	setDimmerIntr_Dimming_RF@command,w
  7684  0EC9  3A01               	xorlw	1
  7685  0ECA  3000               	movlw	0
  7686  0ECB  1903               	skipnz
  7687  0ECC  3001               	movlw	1
  7688  0ECD  00D8               	movwf	??_setDimmerIntr_Dimming_RF
  7689  0ECE  0ED8               	swapf	??_setDimmerIntr_Dimming_RF,f
  7690  0ECF  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7691  0ED0  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7692  0ED1  0820               	movf	_DimmerIntr1,w
  7693  0ED2  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7694  0ED3  39BF               	andlw	-65
  7695  0ED4  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7696  0ED5  00A0               	movwf	_DimmerIntr1
  7697  0ED6  0008               	return
  7698  0ED7                     __end_of_setDimmerIntr_Dimming_RF:	
  7699                           
  7700                           	psect	text50
  7701  0DC8                     __ptext50:	
  7702 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7703 ;; Defined at:
  7704 ;;		line 87 in file "../src/Dimmer_B1.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  lights          1    wreg     unsigned char 
  7707 ;;  value           1    0[BANK0 ] unsigned char 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  lights          1    2[BANK0 ] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;		None               void
  7712 ;; Registers used:
  7713 ;;		wreg
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7719 ;;      Params:         0       1       0       0
  7720 ;;      Locals:         0       1       0       0
  7721 ;;      Temps:          0       1       0       0
  7722 ;;      Totals:         0       3       0       0
  7723 ;;Total ram usage:        3 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    3
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_DimmerLights_PIR_Control
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           
  7734                           ;psect for function _setDimmerIntr_DimmingValue
  7735  0DC8                     _setDimmerIntr_DimmingValue:	
  7736                           
  7737                           ;incstack = 0
  7738                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7739                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7740  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  7741  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  7742  0DCA  00D9               	movwf	setDimmerIntr_DimmingValue@lights
  7743                           
  7744                           ;Dimmer_B1.c: 89: if (lights == 1) {
  7745  0DCB  0859               	movf	setDimmerIntr_DimmingValue@lights,w
  7746  0DCC  3A01               	xorlw	1
  7747  0DCD  1D03               	skipz
  7748  0DCE  0008               	return
  7749                           
  7750                           ;Dimmer_B1.c: 90: DimmerIntr1.DimmingValue = value;
  7751  0DCF  0857               	movf	setDimmerIntr_DimmingValue@value,w
  7752  0DD0  00D8               	movwf	??_setDimmerIntr_DimmingValue
  7753  0DD1  0858               	movf	??_setDimmerIntr_DimmingValue,w
  7754  0DD2  00A5               	movwf	_DimmerIntr1+5
  7755  0DD3  0008               	return
  7756  0DD4                     __end_of_setDimmerIntr_DimmingValue:	
  7757                           
  7758                           	psect	text51
  7759  0E41                     __ptext51:	
  7760 ;; *************** function _getDimmerLights_Status *****************
  7761 ;; Defined at:
  7762 ;;		line 1073 in file "../src/Dimmer_B1.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  lights          1    wreg     unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  lights          1    2[BANK0 ] unsigned char 
  7767 ;;  status          1    3[BANK0 ] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      unsigned char 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7777 ;;      Params:         0       0       0       0
  7778 ;;      Locals:         0       2       0       0
  7779 ;;      Temps:          0       0       0       0
  7780 ;;      Totals:         0       2       0       0
  7781 ;;Total ram usage:        2 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    4
  7784 ;; This function calls:
  7785 ;;		_DimmerLights_SelectPointer
  7786 ;; This function is called by:
  7787 ;;		_DimmerLights_PIR_Control
  7788 ;;		_Exception_Main
  7789 ;;		_PIR_Main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function _getDimmerLights_Status
  7795  0E41                     _getDimmerLights_Status:	
  7796                           
  7797                           ;incstack = 0
  7798                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7799                           ;getDimmerLights_Status@lights stored from wreg
  7800  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  7801  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  7802  0E43  00D9               	movwf	getDimmerLights_Status@lights
  7803                           
  7804                           ;Dimmer_B1.c: 1074: DimmerLights_SelectPointer(lights);
  7805  0E44  0859               	movf	getDimmerLights_Status@lights,w
  7806  0E45  158A  25BC         	fcall	_DimmerLights_SelectPointer
  7807                           
  7808                           ;Dimmer_B1.c: 1075: char status = DimmerLights->Status == 1 ? 1 : 0;
  7809  0E47  0A72               	incf	_DimmerLights,w
  7810  0E48  0084               	movwf	4
  7811  0E49  3000               	movlw	0
  7812  0E4A  1383               	bcf	3,7	;select IRP bank0
  7813  0E4B  1800               	btfsc	0,0
  7814  0E4C  3001               	movlw	1
  7815  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  7816  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  7817  0E4F  00DA               	movwf	getDimmerLights_Status@status
  7818                           
  7819                           ;Dimmer_B1.c: 1076: return status;
  7820  0E50  085A               	movf	getDimmerLights_Status@status,w
  7821  0E51  0008               	return
  7822  0E52                     __end_of_getDimmerLights_Status:	
  7823                           
  7824                           	psect	text52
  7825  0DBC                     __ptext52:	
  7826 ;; *************** function _DimmerLights_SelectPointer *****************
  7827 ;; Defined at:
  7828 ;;		line 614 in file "../src/Dimmer_B1.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  lights          1    wreg     unsigned char 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;  lights          1    1[BANK0 ] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;		None               void
  7835 ;; Registers used:
  7836 ;;		wreg
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7842 ;;      Params:         0       0       0       0
  7843 ;;      Locals:         0       1       0       0
  7844 ;;      Temps:          0       1       0       0
  7845 ;;      Totals:         0       2       0       0
  7846 ;;Total ram usage:        2 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    3
  7849 ;; This function calls:
  7850 ;;		Nothing
  7851 ;; This function is called by:
  7852 ;;		_setDimmerLights_SwOn
  7853 ;;		_setDimmerLights_SwOff
  7854 ;;		_setDimmerLights_Main
  7855 ;;		_getDimmerLights_Status
  7856 ;;		_setDimmerLights_DimmingOn
  7857 ;;		_setDimmerLights_Status
  7858 ;;		_setDimmerLights_DimmingRun
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           
  7863                           ;psect for function _DimmerLights_SelectPointer
  7864  0DBC                     _DimmerLights_SelectPointer:	
  7865                           
  7866                           ;incstack = 0
  7867                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7868                           ;DimmerLights_SelectPointer@lights stored from wreg
  7869  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  7870  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  7871  0DBE  00D8               	movwf	DimmerLights_SelectPointer@lights
  7872                           
  7873                           ;Dimmer_B1.c: 616: if (lights == 1) {
  7874  0DBF  0858               	movf	DimmerLights_SelectPointer@lights,w
  7875  0DC0  3A01               	xorlw	1
  7876  0DC1  1D03               	skipz
  7877  0DC2  0008               	return
  7878                           
  7879                           ;Dimmer_B1.c: 617: DimmerLights = &DimmerLights1;
  7880  0DC3  30CA               	movlw	_DimmerLights1& (0+255)
  7881  0DC4  00D7               	movwf	??_DimmerLights_SelectPointer
  7882  0DC5  0857               	movf	??_DimmerLights_SelectPointer,w
  7883  0DC6  00F2               	movwf	_DimmerLights
  7884  0DC7  0008               	return
  7885  0DC8                     __end_of_DimmerLights_SelectPointer:	
  7886                           
  7887                           	psect	text53
  7888  0D97                     __ptext53:	
  7889 ;; *************** function _DimmerLights_Initialization *****************
  7890 ;; Defined at:
  7891 ;;		line 635 in file "../src/Dimmer_B1.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;		None               void
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, pclath, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7905 ;;      Params:         0       0       0       0
  7906 ;;      Locals:         0       0       0       0
  7907 ;;      Temps:          0       0       0       0
  7908 ;;      Totals:         0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    4
  7912 ;; This function calls:
  7913 ;;		_DimmerIntr_Initialization
  7914 ;;		_setDimmerLights_Initialization
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           
  7921                           ;psect for function _DimmerLights_Initialization
  7922  0D97                     _DimmerLights_Initialization:	
  7923                           
  7924                           ;Dimmer_B1.c: 637: setDimmerLights_Initialization(1);
  7925                           
  7926                           ;incstack = 0
  7927                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7928  0D97  3001               	movlw	1
  7929  0D98  158A  2577  158A   	fcall	_setDimmerLights_Initialization
  7930                           
  7931                           ;Dimmer_B1.c: 647: DimmerIntr_Initialization();
  7932  0D9B  158A  2686         	fcall	_DimmerIntr_Initialization
  7933  0D9D  0008               	return
  7934  0D9E                     __end_of_DimmerLights_Initialization:	
  7935                           
  7936                           	psect	text54
  7937  0D77                     __ptext54:	
  7938 ;; *************** function _setDimmerLights_Initialization *****************
  7939 ;; Defined at:
  7940 ;;		line 651 in file "../src/Dimmer_B1.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  lights          1    wreg     unsigned char 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  lights          1    0[COMMON] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;		None               void
  7947 ;; Registers used:
  7948 ;;		wreg
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7954 ;;      Params:         0       0       0       0
  7955 ;;      Locals:         0       0       0       0
  7956 ;;      Temps:          0       0       0       0
  7957 ;;      Totals:         0       0       0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    3
  7961 ;; This function calls:
  7962 ;;		Nothing
  7963 ;; This function is called by:
  7964 ;;		_DimmerLights_Initialization
  7965 ;; This function uses a non-reentrant model
  7966 ;;
  7967                           
  7968                           
  7969                           ;psect for function _setDimmerLights_Initialization
  7970  0D77                     _setDimmerLights_Initialization:	
  7971                           
  7972                           ;incstack = 0
  7973                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7974  0D77  0008               	return
  7975  0D78                     __end_of_setDimmerLights_Initialization:	
  7976                           
  7977                           	psect	text55
  7978  0E86                     __ptext55:	
  7979 ;; *************** function _DimmerIntr_Initialization *****************
  7980 ;; Defined at:
  7981 ;;		line 7 in file "../src/Dimmer_B1.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;		None               void
  7988 ;; Registers used:
  7989 ;;		wreg
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7995 ;;      Params:         0       0       0       0
  7996 ;;      Locals:         0       0       0       0
  7997 ;;      Temps:          0       1       0       0
  7998 ;;      Totals:         0       1       0       0
  7999 ;;Total ram usage:        1 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    3
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_DimmerLights_Initialization
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function _DimmerIntr_Initialization
  8011  0E86                     _DimmerIntr_Initialization:	
  8012                           
  8013                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  8017  0E86  3007               	movlw	7
  8018  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  8019  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  8020  0E89  00D7               	movwf	??_DimmerIntr_Initialization
  8021  0E8A  0857               	movf	??_DimmerIntr_Initialization,w
  8022  0E8B  00A4               	movwf	_DimmerIntr1+4
  8023                           
  8024                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.6));
  8025  0E8C  3012               	movlw	18
  8026  0E8D  00D7               	movwf	??_DimmerIntr_Initialization
  8027  0E8E  0857               	movf	??_DimmerIntr_Initialization,w
  8028  0E8F  00A6               	movwf	_DimmerIntr1+6
  8029                           
  8030                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.6));
  8031  0E90  3036               	movlw	54
  8032  0E91  00D7               	movwf	??_DimmerIntr_Initialization
  8033  0E92  0857               	movf	??_DimmerIntr_Initialization,w
  8034  0E93  00A7               	movwf	_DimmerIntr1+7
  8035                           
  8036                           ;Dimmer_B1.c: 61: if (myMain.InitDimmer == 1) {
  8037  0E94  1E33               	btfss	_myMain+2,4
  8038  0E95  0008               	return
  8039                           
  8040                           ;Dimmer_B1.c: 62: myMain.InitDimmer = 0;
  8041  0E96  1233               	bcf	_myMain+2,4
  8042                           
  8043                           ;Dimmer_B1.c: 63: myMain.SaveDimmer = 1;
  8044  0E97  16B3               	bsf	_myMain+2,5
  8045  0E98  0008               	return
  8046  0E99                     __end_of_DimmerIntr_Initialization:	
  8047                           ;Dimmer_B1.c: 64: ;;
  8048                           
  8049                           
  8050                           	psect	text56
  8051  0714                     __ptext56:	
  8052 ;; *************** function _CDS_Main *****************
  8053 ;; Defined at:
  8054 ;;		line 11 in file "../src/CDS_B1.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;		None               void
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8068 ;;      Params:         0       0       0       0
  8069 ;;      Locals:         0       0       0       0
  8070 ;;      Temps:          0       3       0       0
  8071 ;;      Totals:         0       3       0       0
  8072 ;;Total ram usage:        3 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    3
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_main
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           
  8083                           ;psect for function _CDS_Main
  8084  0714                     _CDS_Main:	
  8085                           
  8086                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8087                           
  8088                           ;incstack = 0
  8089                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8090  0714  1283               	bcf	3,5	;RP0=0, select bank0
  8091  0715  1303               	bcf	3,6	;RP1=0, select bank0
  8092  0716  1C3A               	btfss	__CDS,0
  8093  0717  0008               	return
  8094                           
  8095                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8096  0718  18BA               	btfsc	__CDS,1
  8097  0719  2F27               	goto	l123
  8098                           
  8099                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8100  071A  19BA               	btfsc	__CDS,3
  8101  071B  0008               	return
  8102                           
  8103                           ;CDS_B1.c: 16: _CDS.Time++;
  8104  071C  3001               	movlw	1
  8105  071D  00D7               	movwf	??_CDS_Main
  8106  071E  0857               	movf	??_CDS_Main,w
  8107  071F  07BB               	addwf	__CDS+1,f
  8108                           
  8109                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8110  0720  3005               	movlw	5
  8111  0721  023B               	subwf	__CDS+1,w
  8112  0722  1C03               	skipc
  8113  0723  0008               	return
  8114                           
  8115                           ;CDS_B1.c: 18: {
  8116                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8117  0724  01BB               	clrf	__CDS+1
  8118                           
  8119                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8120  0725  15BA               	bsf	__CDS,3
  8121                           
  8122                           ;CDS_B1.c: 21: }
  8123                           ;CDS_B1.c: 22: }
  8124                           ;CDS_B1.c: 23: } else {
  8125  0726  0008               	return
  8126  0727                     l123:	
  8127                           
  8128                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8129  0727  1CBA               	btfss	__CDS,1
  8130  0728  0008               	return
  8131                           
  8132                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8133  0729  10BA               	bcf	__CDS,1
  8134                           
  8135                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8136  072A  1A3A               	btfsc	__CDS,4
  8137  072B  2F32               	goto	l4579
  8138                           
  8139                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8140  072C  083C               	movf	__CDS+2,w
  8141  072D  023D               	subwf	__CDS+3,w
  8142  072E  1C03               	skipc
  8143  072F  0008               	return
  8144                           
  8145                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8146  0730  163A               	bsf	__CDS,4
  8147                           
  8148                           ;CDS_B1.c: 29: }
  8149                           ;CDS_B1.c: 30: } else {
  8150  0731  0008               	return
  8151  0732                     l4579:	
  8152                           
  8153                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8154  0732  083C               	movf	__CDS+2,w
  8155  0733  3E9C               	addlw	156
  8156  0734  00D7               	movwf	??_CDS_Main
  8157  0735  30FF               	movlw	255
  8158  0736  1803               	skipnc
  8159  0737  3000               	movlw	0
  8160  0738  00D8               	movwf	??_CDS_Main+1
  8161  0739  0858               	movf	??_CDS_Main+1,w
  8162  073A  3A80               	xorlw	128
  8163  073B  00D9               	movwf	??_CDS_Main+2
  8164  073C  3080               	movlw	128
  8165  073D  0259               	subwf	??_CDS_Main+2,w
  8166  073E  1D03               	skipz
  8167  073F  2F42               	goto	u5475
  8168  0740  083D               	movf	__CDS+3,w
  8169  0741  0257               	subwf	??_CDS_Main,w
  8170  0742                     u5475:	
  8171  0742  1C03               	skipc
  8172  0743  0008               	return
  8173                           
  8174                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8175  0744  1283               	bcf	3,5	;RP0=0, select bank0
  8176  0745  1303               	bcf	3,6	;RP1=0, select bank0
  8177  0746  123A               	bcf	__CDS,4
  8178  0747  0008               	return
  8179  0748                     __end_of_CDS_Main:	
  8180                           
  8181                           	psect	text57
  8182  0D83                     __ptext57:	
  8183 ;; *************** function _CDS_Initialization *****************
  8184 ;; Defined at:
  8185 ;;		line 7 in file "../src/CDS_B1.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;		None
  8190 ;; Return value:  Size  Location     Type
  8191 ;;		None               void
  8192 ;; Registers used:
  8193 ;;		None
  8194 ;; Tracked objects:
  8195 ;;		On entry : 0/0
  8196 ;;		On exit  : 0/0
  8197 ;;		Unchanged: 0/0
  8198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8199 ;;      Params:         0       0       0       0
  8200 ;;      Locals:         0       0       0       0
  8201 ;;      Temps:          0       0       0       0
  8202 ;;      Totals:         0       0       0       0
  8203 ;;Total ram usage:        0 bytes
  8204 ;; Hardware stack levels used:    1
  8205 ;; Hardware stack levels required when called:    3
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_main
  8210 ;; This function uses a non-reentrant model
  8211 ;;
  8212                           
  8213                           
  8214                           ;psect for function _CDS_Initialization
  8215  0D83                     _CDS_Initialization:	
  8216                           
  8217                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8218                           
  8219                           ;incstack = 0
  8220                           ; Regs used in _CDS_Initialization: []
  8221  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  8222  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  8223  0D85  143A               	bsf	__CDS,0
  8224  0D86  0008               	return
  8225  0D87                     __end_of_CDS_Initialization:	
  8226                           
  8227                           	psect	text58
  8228  0F03                     __ptext58:	
  8229 ;; *************** function _ISR *****************
  8230 ;; Defined at:
  8231 ;;		line 116 in file "../src/MCU_B1.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;		None               void
  8238 ;; Registers used:
  8239 ;;		wreg, status,2, status,0, pclath, cstack
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8245 ;;      Params:         0       0       0       0
  8246 ;;      Locals:         0       0       0       0
  8247 ;;      Temps:          4       0       0       0
  8248 ;;      Totals:         4       0       0       0
  8249 ;;Total ram usage:        4 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; Hardware stack levels required when called:    2
  8252 ;; This function calls:
  8253 ;;		_TMR1_ISR
  8254 ;; This function is called by:
  8255 ;;		Interrupt level 1
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           
  8260                           ;psect for function _ISR
  8261  0F03                     _ISR:	
  8262                           
  8263                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8264  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  8265  0F04  1303               	bcf	3,6	;RP1=0, select bank1
  8266  0F05  1C0C               	btfss	12,0	;volatile
  8267  0F06  2F0E               	goto	i1l664
  8268  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  8269  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  8270  0F09  1C0C               	btfss	12,0	;volatile
  8271  0F0A  2F0E               	goto	i1l664
  8272                           
  8273                           ;MCU_B1.c: 126: TMR1_ISR();
  8274  0F0B  158A  2767  158A   	fcall	_TMR1_ISR
  8275  0F0E                     i1l664:	
  8276                           ;MCU_B1.c: 127: }
  8277                           ;MCU_B1.c: 148: return;
  8278                           
  8279  0F0E  0879               	movf	??_ISR+3,w
  8280  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  8281  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  8282  0F11  00FF               	movwf	127
  8283  0F12  0878               	movf	??_ISR+2,w
  8284  0F13  008A               	movwf	10
  8285  0F14  0877               	movf	??_ISR+1,w
  8286  0F15  0084               	movwf	4
  8287  0F16  0E76               	swapf	??_ISR^(0+-128),w
  8288  0F17  0083               	movwf	3
  8289  0F18  0EFE               	swapf	126,f
  8290  0F19  0E7E               	swapf	126,w
  8291  0F1A  0009               	retfie
  8292  0F1B                     __end_of_ISR:	
  8293                           
  8294                           	psect	intentry
  8295  0004                     __pintentry:	
  8296                           ;incstack = 0
  8297                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8298                           
  8299  0004                     interrupt_function:	
  8300  007E                     saved_w	set	btemp
  8301  0004  00FE               	movwf	btemp
  8302  0005  0E03               	swapf	3,w
  8303  0006  00F6               	movwf	??_ISR
  8304  0007  0804               	movf	4,w
  8305  0008  00F7               	movwf	??_ISR+1
  8306  0009  080A               	movf	10,w
  8307  000A  00F8               	movwf	??_ISR+2
  8308  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8309  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8310  000D  087F               	movf	btemp+1,w
  8311  000E  00F9               	movwf	??_ISR+3
  8312  000F  158A  2F03         	ljmp	_ISR
  8313                           
  8314                           	psect	text59
  8315  0F67                     __ptext59:	
  8316 ;; *************** function _TMR1_ISR *****************
  8317 ;; Defined at:
  8318 ;;		line 236 in file "../src/MCU_B1.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;		None
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;		None
  8323 ;; Return value:  Size  Location     Type
  8324 ;;		None               void
  8325 ;; Registers used:
  8326 ;;		wreg, status,2, status,0, pclath, cstack
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8332 ;;      Params:         0       0       0       0
  8333 ;;      Locals:         0       0       0       0
  8334 ;;      Temps:          0       0       0       0
  8335 ;;      Totals:         0       0       0       0
  8336 ;;Total ram usage:        0 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    1
  8339 ;; This function calls:
  8340 ;;		_DimmerLights_IOC_1
  8341 ;;		_DimmerLights_TMR_1
  8342 ;; This function is called by:
  8343 ;;		_ISR
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           
  8348                           ;psect for function _TMR1_ISR
  8349  0F67                     _TMR1_ISR:	
  8350                           
  8351                           ;MCU_B1.c: 242: DimmerLights_IOC_1();
  8352                           
  8353                           ;incstack = 0
  8354                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8355  0F67  158A  2631  158A   	fcall	_DimmerLights_IOC_1
  8356                           
  8357                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
  8358  0F6A  118A  263F  158A   	fcall	_DimmerLights_TMR_1
  8359                           
  8360                           ;MCU_B1.c: 268: Timer1.Count++;
  8361  0F6D  3001               	movlw	1
  8362  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  8363  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  8364  0F70  07BF               	addwf	_Timer1+1,f
  8365  0F71  1803               	skipnc
  8366  0F72  0AC0               	incf	_Timer1+2,f
  8367  0F73  3000               	movlw	0
  8368  0F74  07C0               	addwf	_Timer1+2,f
  8369                           
  8370                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  8371  0F75  30C8               	movlw	200
  8372  0F76  063F               	xorwf	_Timer1+1,w
  8373  0F77  0440               	iorwf	_Timer1+2,w
  8374  0F78  1D03               	skipz
  8375  0F79  2F7D               	goto	i1l3539
  8376                           
  8377                           ;MCU_B1.c: 270: Timer1.Count = 0;
  8378  0F7A  01BF               	clrf	_Timer1+1
  8379  0F7B  01C0               	clrf	_Timer1+2
  8380                           
  8381                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  8382  0F7C  143E               	bsf	_Timer1,0
  8383  0F7D                     i1l3539:	
  8384                           
  8385                           ;MCU_B1.c: 272: }
  8386                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  8387  0F7D  30FA               	movlw	250
  8388  0F7E  008F               	movwf	15	;volatile
  8389                           
  8390                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  8391  0F7F  3038               	movlw	56
  8392  0F80  008E               	movwf	14	;volatile
  8393                           
  8394                           ;MCU_B1.c: 276: TMR1IF = 0;
  8395  0F81  100C               	bcf	12,0	;volatile
  8396  0F82  0008               	return
  8397  0F83                     __end_of_TMR1_ISR:	
  8398                           
  8399                           	psect	text60
  8400  063F                     __ptext60:	
  8401 ;; *************** function _DimmerLights_TMR_1 *****************
  8402 ;; Defined at:
  8403 ;;		line 1270 in file "../src/Dimmer_B1.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;		None               void
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8417 ;;      Params:         0       0       0       0
  8418 ;;      Locals:         0       0       0       0
  8419 ;;      Temps:          1       0       0       0
  8420 ;;      Totals:         1       0       0       0
  8421 ;;Total ram usage:        1 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_TMR1_ISR
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _DimmerLights_TMR_1
  8432  063F                     _DimmerLights_TMR_1:	
  8433                           
  8434                           ;Dimmer_B1.c: 1271: if (DimmerIntr1.Start == 1) {
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8438  063F  1283               	bcf	3,5	;RP0=0, select bank0
  8439  0640  1303               	bcf	3,6	;RP1=0, select bank0
  8440  0641  1D20               	btfss	_DimmerIntr1,2
  8441  0642  2E4D               	goto	i1l3225
  8442                           
  8443                           ;Dimmer_B1.c: 1272: DimmerIntr1.Count++;
  8444  0643  3001               	movlw	1
  8445  0644  00F5               	movwf	??_DimmerLights_TMR_1
  8446  0645  0875               	movf	??_DimmerLights_TMR_1,w
  8447  0646  07A2               	addwf	_DimmerIntr1+2,f
  8448                           
  8449                           ;Dimmer_B1.c: 1273: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) + 1) {
  8450  0647  3037               	movlw	55
  8451  0648  0222               	subwf	_DimmerIntr1+2,w
  8452  0649  1C03               	skipc
  8453  064A  2E4D               	goto	i1l3225
  8454                           
  8455                           ;Dimmer_B1.c: 1274: DimmerIntr1.Count = 0;
  8456  064B  01A2               	clrf	_DimmerIntr1+2
  8457                           
  8458                           ;Dimmer_B1.c: 1275: DimmerIntr1.Start = 0;
  8459  064C  1120               	bcf	_DimmerIntr1,2
  8460  064D                     i1l3225:	
  8461                           
  8462                           ;Dimmer_B1.c: 1276: }
  8463                           ;Dimmer_B1.c: 1277: }
  8464                           ;Dimmer_B1.c: 1279: if (DimmerIntr1.GO == 1) {
  8465  064D  1C20               	btfss	_DimmerIntr1,0
  8466  064E  2E59               	goto	i1l384
  8467                           
  8468                           ;Dimmer_B1.c: 1280: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8469  064F  0825               	movf	_DimmerIntr1+5,w
  8470  0650  0222               	subwf	_DimmerIntr1+2,w
  8471  0651  1C03               	skipc
  8472  0652  2E88               	goto	i1l387
  8473                           
  8474                           ;Dimmer_B1.c: 1281: DimmerIntr1.GO = 0;
  8475  0653  1020               	bcf	_DimmerIntr1,0
  8476                           
  8477                           ;Dimmer_B1.c: 1282: DimmerIntr1.Tune = 1;
  8478  0654  14A0               	bsf	_DimmerIntr1,1
  8479                           
  8480                           ;Dimmer_B1.c: 1284: if (DimmerIntr1.ControlStatus == 1) {
  8481  0655  1DA0               	btfss	_DimmerIntr1,3
  8482  0656  2E88               	goto	i1l387
  8483                           
  8484                           ;Dimmer_B1.c: 1285: RB2 = 1;
  8485  0657  1506               	bsf	6,2	;volatile
  8486                           
  8487                           ;Dimmer_B1.c: 1287: }
  8488                           ;Dimmer_B1.c: 1288: }
  8489                           ;Dimmer_B1.c: 1289: } else {
  8490  0658  2E88               	goto	i1l387
  8491  0659                     i1l384:	
  8492                           
  8493                           ;Dimmer_B1.c: 1290: if (DimmerIntr1.Tune == 1) {
  8494  0659  1CA0               	btfss	_DimmerIntr1,1
  8495  065A  2E88               	goto	i1l387
  8496                           
  8497                           ;Dimmer_B1.c: 1291: DimmerIntr1.Tune = 0;
  8498  065B  10A0               	bcf	_DimmerIntr1,1
  8499                           
  8500                           ;Dimmer_B1.c: 1292: DimmerIntr1.TuneTime++;
  8501  065C  3001               	movlw	1
  8502  065D  00F5               	movwf	??_DimmerLights_TMR_1
  8503  065E  0875               	movf	??_DimmerLights_TMR_1,w
  8504  065F  07A3               	addwf	_DimmerIntr1+3,f
  8505                           
  8506                           ;Dimmer_B1.c: 1293: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8507  0660  0824               	movf	_DimmerIntr1+4,w
  8508  0661  0223               	subwf	_DimmerIntr1+3,w
  8509  0662  1C03               	skipc
  8510  0663  2E88               	goto	i1l387
  8511                           
  8512                           ;Dimmer_B1.c: 1294: DimmerIntr1.TuneTime = 0;
  8513  0664  01A3               	clrf	_DimmerIntr1+3
  8514                           
  8515                           ;Dimmer_B1.c: 1295: if (DimmerIntr1.Dimming_Sw == 1) {
  8516  0665  1E20               	btfss	_DimmerIntr1,4
  8517  0666  2E75               	goto	i1l390
  8518                           
  8519                           ;Dimmer_B1.c: 1296: if (DimmerIntr1.Dimming_Status == 0) {
  8520  0667  1AA0               	btfsc	_DimmerIntr1,5
  8521  0668  2E6F               	goto	i1l3249
  8522                           
  8523                           ;Dimmer_B1.c: 1297: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.6))) {
  8524  0669  3013               	movlw	19
  8525  066A  0225               	subwf	_DimmerIntr1+5,w
  8526  066B  1803               	btfsc	3,0
  8527  066C  2E7B               	goto	i1l3255
  8528                           
  8529                           ;Dimmer_B1.c: 1300: DimmerIntr1.Dimming_Status = 1;
  8530                           
  8531                           ;Dimmer_B1.c: 1299: } else {
  8532                           
  8533                           ;Dimmer_B1.c: 1298: DimmerIntr1.DimmingValue--;
  8534  066D  16A0               	bsf	_DimmerIntr1,5
  8535                           
  8536                           ;Dimmer_B1.c: 1301: }
  8537                           ;Dimmer_B1.c: 1302: } else {
  8538  066E  2E88               	goto	i1l387
  8539  066F                     i1l3249:	
  8540                           
  8541                           ;Dimmer_B1.c: 1303: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.6))) {
  8542  066F  3036               	movlw	54
  8543  0670  0225               	subwf	_DimmerIntr1+5,w
  8544  0671  1C03               	btfss	3,0
  8545  0672  2E82               	goto	i1l3259
  8546                           
  8547                           ;Dimmer_B1.c: 1306: DimmerIntr1.Dimming_Status = 0;
  8548                           
  8549                           ;Dimmer_B1.c: 1305: } else {
  8550                           
  8551                           ;Dimmer_B1.c: 1304: DimmerIntr1.DimmingValue++;
  8552  0673  12A0               	bcf	_DimmerIntr1,5
  8553                           
  8554                           ;Dimmer_B1.c: 1307: }
  8555                           ;Dimmer_B1.c: 1308: }
  8556                           ;Dimmer_B1.c: 1309: } else if (DimmerIntr1.Dimming_RF == 1) {
  8557  0674  2E88               	goto	i1l387
  8558  0675                     i1l390:	
  8559  0675  1F20               	btfss	_DimmerIntr1,6
  8560  0676  2E88               	goto	i1l387
  8561                           
  8562                           ;Dimmer_B1.c: 1310: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8563  0677  0825               	movf	_DimmerIntr1+5,w
  8564  0678  0226               	subwf	_DimmerIntr1+6,w
  8565  0679  1803               	skipnc
  8566  067A  2E7E               	goto	i1l3257
  8567  067B                     i1l3255:	
  8568                           
  8569                           ;Dimmer_B1.c: 1311: DimmerIntr1.DimmingValue--;
  8570  067B  3001               	movlw	1
  8571  067C  02A5               	subwf	_DimmerIntr1+5,f
  8572                           
  8573                           ;Dimmer_B1.c: 1312: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8574  067D  2E88               	goto	i1l387
  8575  067E                     i1l3257:	
  8576  067E  0826               	movf	_DimmerIntr1+6,w
  8577  067F  0225               	subwf	_DimmerIntr1+5,w
  8578  0680  1803               	skipnc
  8579  0681  2E87               	goto	i1l401
  8580  0682                     i1l3259:	
  8581                           
  8582                           ;Dimmer_B1.c: 1313: DimmerIntr1.DimmingValue++;
  8583  0682  3001               	movlw	1
  8584  0683  00F5               	movwf	??_DimmerLights_TMR_1
  8585  0684  0875               	movf	??_DimmerLights_TMR_1,w
  8586  0685  07A5               	addwf	_DimmerIntr1+5,f
  8587                           
  8588                           ;Dimmer_B1.c: 1314: } else {
  8589  0686  2E88               	goto	i1l387
  8590  0687                     i1l401:	
  8591                           
  8592                           ;Dimmer_B1.c: 1315: DimmerIntr1.Dimming_RF = 0;
  8593  0687  1320               	bcf	_DimmerIntr1,6
  8594  0688                     i1l387:	
  8595                           
  8596                           ;Dimmer_B1.c: 1316: }
  8597                           ;Dimmer_B1.c: 1317: }
  8598                           ;Dimmer_B1.c: 1318: }
  8599                           ;Dimmer_B1.c: 1319: }
  8600                           ;Dimmer_B1.c: 1320: }
  8601                           ;Dimmer_B1.c: 1321: if (RB2 == 1) {
  8602  0688  1D06               	btfss	6,2	;volatile
  8603  0689  0008               	return
  8604                           
  8605                           ;Dimmer_B1.c: 1322: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) - 10) {
  8606  068A  302C               	movlw	44
  8607  068B  0222               	subwf	_DimmerIntr1+2,w
  8608  068C  1C03               	skipc
  8609  068D  0008               	return
  8610                           
  8611                           ;Dimmer_B1.c: 1323: RB2 = 0;
  8612  068E  1106               	bcf	6,2	;volatile
  8613  068F  0008               	return
  8614  0690                     __end_of_DimmerLights_TMR_1:	
  8615                           
  8616                           	psect	text61
  8617  0E31                     __ptext61:	
  8618 ;; *************** function _DimmerLights_IOC_1 *****************
  8619 ;; Defined at:
  8620 ;;		line 1329 in file "../src/Dimmer_B1.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;		None
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;		None
  8625 ;; Return value:  Size  Location     Type
  8626 ;;		None               void
  8627 ;; Registers used:
  8628 ;;		None
  8629 ;; Tracked objects:
  8630 ;;		On entry : 0/0
  8631 ;;		On exit  : 0/0
  8632 ;;		Unchanged: 0/0
  8633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8634 ;;      Params:         0       0       0       0
  8635 ;;      Locals:         0       0       0       0
  8636 ;;      Temps:          0       0       0       0
  8637 ;;      Totals:         0       0       0       0
  8638 ;;Total ram usage:        0 bytes
  8639 ;; Hardware stack levels used:    1
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_TMR1_ISR
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           
  8648                           ;psect for function _DimmerLights_IOC_1
  8649  0E31                     _DimmerLights_IOC_1:	
  8650                           
  8651                           ;Dimmer_B1.c: 1332: if (RA7 == 1) {
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _DimmerLights_IOC_1: []
  8655  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  8656  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  8657  0E33  1F85               	btfss	5,7	;volatile
  8658  0E34  2E39               	goto	i1l408
  8659                           
  8660                           ;Dimmer_B1.c: 1333: if (Dimmer.PIR_DimmerSignal == 1) {
  8661  0E35  1DAC               	btfss	_Dimmer,3
  8662  0E36  0008               	return
  8663                           
  8664                           ;Dimmer_B1.c: 1334: Dimmer.PIR_DimmerSignal = 0;
  8665  0E37  11AC               	bcf	_Dimmer,3
  8666                           
  8667                           ;Dimmer_B1.c: 1335: }
  8668                           ;Dimmer_B1.c: 1336: } else {
  8669  0E38  0008               	return
  8670  0E39                     i1l408:	
  8671                           
  8672                           ;Dimmer_B1.c: 1337: if (Dimmer.PIR_DimmerSignal == 0) {
  8673  0E39  19AC               	btfsc	_Dimmer,3
  8674  0E3A  0008               	return
  8675                           
  8676                           ;Dimmer_B1.c: 1338: Dimmer.PIR_DimmerSignal = 1;
  8677  0E3B  15AC               	bsf	_Dimmer,3
  8678                           
  8679                           ;Dimmer_B1.c: 1340: if (DimmerIntr1.Start == 0) {
  8680  0E3C  1920               	btfsc	_DimmerIntr1,2
  8681  0E3D  0008               	return
  8682                           
  8683                           ;Dimmer_B1.c: 1341: DimmerIntr1.Start = 1;
  8684  0E3E  1520               	bsf	_DimmerIntr1,2
  8685                           
  8686                           ;Dimmer_B1.c: 1342: DimmerIntr1.GO = 1;
  8687  0E3F  1420               	bsf	_DimmerIntr1,0
  8688  0E40  0008               	return
  8689  0E41                     __end_of_DimmerLights_IOC_1:	
  8690  007E                     btemp	set	126	;btemp
  8691  007E                     wtemp	set	126
  8692  007E                     wtemp0	set	126
  8693  0080                     wtemp1	set	128
  8694  0082                     wtemp2	set	130
  8695  0084                     wtemp3	set	132
  8696  0086                     wtemp4	set	134
  8697  0088                     wtemp5	set	136
  8698  007F                     wtemp6	set	127
  8699  007E                     ttemp	set	126
  8700  007E                     ttemp0	set	126
  8701  0081                     ttemp1	set	129
  8702  0084                     ttemp2	set	132
  8703  0087                     ttemp3	set	135
  8704  007F                     ttemp4	set	127
  8705  007E                     ltemp	set	126
  8706  007E                     ltemp0	set	126
  8707  0082                     ltemp1	set	130
  8708  0086                     ltemp2	set	134
  8709  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     23      78
    BANK1            80      0      50
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_getDimmerIntr_DimmingValue
    _setDimmerLights_Dimming->_setDimmerIntr_Dimming_Sw
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_getDimmerLights_Status
    _DimmerLights_PIR_Control->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19992
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     850
                                              2 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2564
                                              9 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     858
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     686
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     349
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     349
                                              5 BANK0      6     6      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3095
                                              5 BANK0     12    12      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2594
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2594
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2709
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2709
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    2953
                                              5 BANK0      5     5      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2554
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    4020
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2540
                                              7 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1    1348
                                              3 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              4 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      8A      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Feb 13 15:11:53 2015

                            _WDT_Clearing 0002                     __end_of_setCmd_Status 0EED  
                            ___awdiv@sign 005D                            setTemp_Main@AD 0061  
                                      fsr 0004                      _setDimmerLights_Main 052F  
                                     l123 0727                      _setDimmerLights_SwOn 0FDD  
                                     l252 0E12                                       l424 039A  
                                     l417 037B                                       l418 035F  
                                     l481 0F8E                                       l810 0F47  
                                     l482 0F96                                       l806 0F4B  
                                     l832 0EEC                                       l826 06D3  
                                     l942 0449                                       l953 0445  
                                     l948 03EF                                       _GIE 005F  
    __size_of_DimmerLights_Initialization 0007                                       _RB2 0032  
                                     _LED 0073                                       _RB3 0033  
                                     _RB4 0034                                       _RB5 0035  
                                     _RA7 002F                                       _PS0 0408  
                                     _PS1 0409                                       _PS2 040A  
                                     _ISR 0F03                                       _PSA 040B  
                                     _WDT 0041                                       _Cmd 0070  
            getDimmerLights_Status@lights 0059                ??_setDimmerIntr_Dimming_RF 0058  
              ??_setDimmerIntr_Dimming_Sw 0058           setDimmerIntr_Dimming_RF@command 0057  
                                     fsr0 0004                                       indf 0000  
                         __end_of_ADC_Set 0DAC      setDimmerLights_Initialization@lights 0075  
            getDimmerLights_Status@status 005A       __end_of_setDimmerIntr_ControlStatus 0F03  
             _setDimmerIntr_ControlStatus 0EED                                      ?_ISR 0075  
                   _setDimmerLights_OnOff 0748                                      l1020 005A  
                                    l1021 0079                                      l1026 008F  
                                    l1018 01FD                                      l1019 0089  
                                    l1028 00A2                                      l4111 0759  
                                    l4041 0E57                                      l4115 0761  
                                    l4211 051D                                      l4125 07AD  
                                    l4045 0E5C                                      l4053 0EDB  
                                    l4047 0E61                                      l4215 0523  
                                    l4057 0EE7                                      l4331 03AE  
                                    l4243 0F43                                      l4219 0529  
                                    l4163 04E0                                      l4171 04E8  
                                    l4085 0FFC                                      l4181 04FB  
                                    l4149 04CF                                      l4157 04D7  
                                    l4501 05A6                                      l4263 0FB5  
                                    l4511 05AE                                      l4097 07EB  
                                    l4337 03C3                                      l4193 050B  
                                    l4185 04FF                                      l4441 03F1  
                                    l4257 0FAC                                      l4513 05BC  
                                    l4259 0FAF                                      l4523 05DD  
                                    l4285 0554                                      l4189 0503  
                                    l4381 0498                                      l4373 0480  
                                    l4365 0474                                      l4541 06DE  
                                    l4287 055B                                      l4383 04A0  
                                    l4447 0402                                      l4527 05E5  
                                    l4519 05D2                                      l4543 06EC  
                                    l4703 033C                                      l4297 057F  
                                    l4385 04AE                                      l4369 047A  
                                    l4473 0435                                      l4449 0405  
                                    l4553 070D                                      l4641 0257  
                                    l4625 0793                                      l4299 0586  
                                    l4379 048C                                      l4803 00E8  
                                    l4483 0444                                      l4901 06BA  
                                    l4805 00E9                                      l4549 0702  
                                    l4653 0278                                      l4645 0262  
                                    l4717 0F5D                                      l4903 06C4  
                                    l4823 013D                                      l4815 0129  
                                    l4495 059B                                      l4673 02B8  
                                    l4657 0283                                      l4649 026D  
                                    l4579 0732                                      l4907 06C8  
                                    l4835 0195                                      l4683 02E6  
                                    l4667 029C                     _setDimmerLights_SwOff 07CA  
                                    l4853 01D1                                      l4837 01A4  
                                    l4697 032E                                      l4689 0302  
                                    l4787 00C5                                      l4963 061D  
                                    l4957 0601                                      l4895 06AB  
                                    l4799 00DC                     _myMain_Initialization 0D79  
                            __CFG_WDTE$ON 0000                                      u5040 0495  
                                    u5060 04AB                                      u5305 05D3  
                                    u6035 01ED                                      _PEIE 005E  
                                    u5265 05B1                                      u5345 06E1  
                                    u4725 0EBB                                      u5285 05BD  
                                    u5365 06ED                                      u5295 05C9  
                                    u5375 06F9                                      u5385 0703  
                                    u5475 0742                                      u5925 0107  
                                    u5935 011F                                      u5955 0156  
                                    u5965 0187                                      u5985 01B4  
                                    __CDS 003A                                      _WPUB 0095  
                                    __PIR 00A0                                      _Temp 0044  
                                    _main 05EC                                      btemp 007E  
                         __end_of_WDT_Set 0800                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                          __end_of_CDS_Main 0748  
            __size_of_Temp_Initialization 0003                                     ??_ISR 0076  
 __end_of_getDimmerLights_Allow_Condition 0D8C  __size_of_getDimmerLights_Allow_Condition 0005  
       ??_getDimmerLights_Allow_Condition 0057          ?_getDimmerLights_Allow_Condition 0075  
         _getDimmerLights_Allow_Condition 0D87                    _getDimmerLights_Status 0E41  
                           __CFG_PLLEN$ON 0000                          __end_of_LED_Main 0D7D  
                              _DimmerIntr 0071                     ?_setDimmerLights_Main 0075  
                        ??_setPIRLED_Main 005B                     ?_setDimmerLights_SwOn 0075  
                                   ?_main 0069                           __end_of___awdiv 05EC  
                                   _ADRES 001E                           ___awdiv@divisor 0057  
                                   _T1CON 0010                           __end_of___lwdiv 0714  
                                   i1l401 0687                                     i1l408 0E39  
                                   i1l390 0675                                     i1l384 0659  
                                   i1l387 0688                                     i1l664 0F0E  
                         ___awdiv@counter 005C                                     _TMR1H 000F  
                                   _TMR1L 000E                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                   __end_of_Timeout_Counter 0EC1  
                                   _Light 0043                          __end_of_PIR_Main 0210  
                        __end_of_TMR1_ISR 0F83                          __end_of_TMR1_Set 0E22  
                                   _getAD 0F9F                          __end_of_WDT_Main 0E74  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
          __size_of_setLED_Initialization 0012             __end_of_setLED_Initialization 0E86  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                         getPIR_AD@channel1 0065  
                       getPIR_AD@channel2 0060                         setTemp_Main@error 005D  
                         __initialization 0013                              __end_of_main 063F  
                        __end_of_Fosc_Set 0D91            getMain_All_LightsStatus@status 0057  
            setDimmerLights_OnOff@command 005A                            _Exception_Main 0690  
                               ??_ADC_Set 0057                                    ??_main 006D  
                   PIR_Main@Enable_Switch 0062               ?_setDimmerIntr_DimmingValue 0057  
            ??_DimmerLights_SelectPointer 0057        setDimmerIntr_ControlStatus@command 0057  
                 _setDimmerLights_Dimming 07A0                               _DimmerIntr1 0020  
                _getMain_All_LightsStatus 0DEC                    ?_setDimmerLights_OnOff 005A  
                                  ?_getAD 0057                    ?_setDimmerLights_SwOff 0075  
                  ?_myMain_Initialization 0075                                    _ADCON0 001F  
                                  _ADCON1 009F                          ___awdiv@dividend 0059  
                               ??_WDT_Set 0057                                    _ANSELA 0185  
                                  _ANSELB 0186                  _getMain_All_Error_Status 0F33  
                                  i1l3225 064D                                    i1l3255 067B  
                                  i1l3257 067E                                    i1l3249 066F  
                                  i1l3259 0682                                    i1l3539 0F7D  
                                  _FVRCON 009D      getDimmerLights_Allow_Condition@allow 0057  
                                  _PIRLED 0036                                    _OSCCON 0090  
                                  _TMR1IE 0460                                    _TMR1IF 0060  
                                  _IO_Set 0F1B               ??_setDimmerIntr_MaxmumValue 0058  
                                  _Dimmer 002C                     __end_of_getCmd_Status 0E63  
              __end_of_Mcu_Initialization 0E31                                    _Timer1 003E  
             __size_of_CDS_Initialization 0004                    __end_of_Exception_Main 06D4  
                    Exception_Main@lights 005D                                 ??___awdiv 005B  
                               ??___lwdiv 005B                    ??_setDimmerLights_Main 005E  
                    Exception_Main@status 005F                    ??_setDimmerLights_SwOn 0059  
                                  _setLED 04BE                                    _myMain 0031  
       __size_of_DimmerLights_PIR_Control 0094                          ___awdiv@quotient 005E  
                      __size_of_Temp_Main 0003                 ?_DimmerLights_PIR_Control 0075  
        ??_setDimmerLights_Initialization 0057           ?_setDimmerLights_Initialization 0075  
        __end_of_setDimmerIntr_Dimming_RF 0ED7          __end_of_setDimmerIntr_Dimming_Sw 0EAD  
                                  saved_w 007E                          ?_Timeout_Counter 0075  
             __size_of_DimmerLights_IOC_1 0010               __size_of_DimmerLights_TMR_1 0051  
                 __size_of_LedPointSelect 001C                                 ?_CDS_Main 0075  
         setDimmerIntr_Dimming_Sw@command 0057                        setTemp_Main@TempGO 005E  
             __size_of_PIR_Initialization 000D                   __end_of__initialization 0024  
         getDimmerIntr_DimmingValue@value 0059           setDimmerIntr_DimmingValue@value 0057  
                               ?_LED_Main 0075                             ?_my_MainTimer 0075  
            ?_DimmerLights_Initialization 0075                ?_DimmerIntr_Initialization 0075  
                          __pcstackCOMMON 0075                        __size_of_getCDS_AD 0022  
                         ?_Exception_Main 0075                             __end_of_getAD 0FBB  
                               ?_PIR_Main 0075                                 ?_TMR1_ISR 0075  
                               ?_TMR1_Set 0075                        _LED_Initialization 0DE0  
                      __size_of_getPIR_AD 012E                 ??_setDimmerLights_Dimming 005B  
                               ?_WDT_Main 0075         setDimmerIntr_ControlStatus@lights 0059  
               _setDimmerIntr_MaxmumValue 0DD4                __end_of_set_TimeoutCleared 0D97  
         setDimmerIntr_MaxmumValue@lights 0059                       ?_LED_Initialization 0075  
                                 ??_getAD 0058                       _Temp_Initialization 0D7D  
                              ??_CDS_Main 0057                                __pbssBANK0 0020  
                              __pbssBANK1 00A0                                 ?_Fosc_Set 0075  
                       __end_of_Temp_Main 0D83                                   ?_IO_Set 0075  
                         __CFG_VCAPEN$DIS 0000                            ??_my_MainTimer 0057  
                              ??_LED_Main 005D                      ??_LED_Initialization 005C  
                            _DimmerLights 0072                         LedPointSelect@led 0058  
                 ?_getDimmerLights_Status 0075                                __pmaintext 05EC  
                    ?_Temp_Initialization 0075         __end_of_DimmerIntr_Initialization 0E99  
                    PIR_Main@LightsStatus 0067             ??_DimmerLights_Initialization 0058  
                              ??_PIR_Main 005C                                ??_TMR1_ISR 0076  
                           ?_setTemp_Main 0075                                ??_TMR1_Set 0057  
                              __pintentry 0004                                   ?_setLED 0059  
                                 _ADC_Set 0DA5                                _getTemp_AD 0775  
      __end_of_DimmerLights_SelectPointer 0DC8                _DimmerLights_SelectPointer 0DBC  
                              ??_WDT_Main 0057                    __size_of_getCDS_Status 0008  
           setDimmerLights_Dimming@lights 005D             setDimmerLights_Dimming@status 005A  
   getDimmerLights_Allow_Condition@lights 0075                         __end_of_getCDS_AD 0FDD  
                                 _WDT_Set 07F2                             getPIR_AD@VRAD 0067  
                  __size_of_setCmd_Status 0016                                ??_Fosc_Set 0057  
                       __end_of_getPIR_AD 033E           __end_of_setDimmerLights_Dimming 07CA  
                     getCmd_Status@number 0057                           __size_of_IO_Set 0018  
                     setCmd_Status@number 0059         __size_of_setDimmerIntr_Dimming_RF 0016  
       __size_of_setDimmerIntr_Dimming_Sw 0014                                getCDS_AD@i 005C  
                              getCDS_AD@j 005D                 ?_setDimmerIntr_Dimming_RF 0057  
               ?_setDimmerIntr_Dimming_Sw 0057                                   _VarLED1 004F  
                                 _VarLED2 0053            __end_of_getDimmerLights_Status 0E52  
                   ??_Temp_Initialization 0057                            ??_setTemp_Main 005C  
                                 ___awdiv 058F                                   ___lwdiv 06D4  
              ??_getMain_All_LightsStatus 0057                               PIR_Main@cds 0066  
                         __size_of_setLED 0071                                   __ptext0 0000  
                                 __ptext1 0F4D                                   __ptext2 0D79  
                                 __ptext3 0775                                   __ptext4 0210  
                                 __ptext5 06D4                                   __ptext6 058F  
                                 __ptext7 0FBB                                   __ptext8 0F9F  
                                 __ptext9 0D91                                getPIR_AD@i 0068  
                              getPIR_AD@j 0064                              __size_of_ISR 0018  
              ??_getMain_All_Error_Status 0057                   ??_setDimmerLights_OnOff 005B  
                 ??_setDimmerLights_SwOff 0059                   ??_myMain_Initialization 0057  
                       _DimmerLights_Main 0D9E                  ??_setTemp_Initialization 0057  
                      ?_DimmerLights_Main 0075                            _LedPointSelect 0F83  
                         getTemp_AD@ADRES 005C                                   clrloop0 0DB5  
                    end_of_initialization 0024                       ??_DimmerLights_Main 005F  
                  setDimmerLights_SwOn@sw 0059                             _getCDS_Status 0DAC  
        __end_of_DimmerLights_PIR_Control 03D2                     _setLED_Initialization 0E74  
                           _setCmd_Status 0ED7                               ?_getTemp_AD 0075  
                setLED_Initialization@led 005B                   setTemp_Main@DangerValue 0060  
               __end_of_DimmerLights_Main 0DA5                        _Mcu_Initialization 0E22  
                    __end_of_my_MainTimer 0F67                    __end_of_LedPointSelect 0F9F  
                     setPIRLED_Main@count 005C          setDimmerIntr_DimmingValue@lights 0059  
        getDimmerIntr_DimmingValue@lights 0058                       ?_Mcu_Initialization 0075  
                 __size_of_setPIRLED_Main 0071        __size_of_setDimmerIntr_MaxmumValue 000C  
          setDimmerIntr_Dimming_RF@lights 0059           getMain_All_Error_Status@command 0058  
                       __size_of_CDS_Main 0034                            ?_getCDS_Status 0075  
                        ??_Exception_Main 005C                            __end_of_IO_Set 0F33  
              __end_of_CDS_Initialization 0D87                         __size_of_LED_Main 0003  
             ??_DimmerIntr_Initialization 0057                      ??_Mcu_Initialization 0058  
                           ?_WDT_Clearing 0075                            ?_setCmd_Status 0057  
     __size_of_getDimmerIntr_DimmingValue 000E                         __size_of_PIR_Main 01E9  
                       __size_of_TMR1_ISR 001C          DimmerLights_SelectPointer@lights 0058  
                       __size_of_TMR1_Set 000E             __size_of_setDimmerLights_Main 0060  
                          __end_of_setLED 052F             __size_of_setDimmerLights_SwOn 0023  
              __end_of_DimmerLights_IOC_1 0E41                         __size_of_WDT_Main 0011  
              __end_of_DimmerLights_TMR_1 0690                       start_initialization 0013  
                         ?_LedPointSelect 0075                               __end_of_ISR 0F1B  
                  __size_of_getCmd_Status 0011                __end_of_PIR_Initialization 0E06  
            ?_setDimmerIntr_ControlStatus 0057           __size_of_setTemp_Initialization 0001  
                     getCDS_Status@status 0057                      __end_of_setTemp_Main 044D  
                      _set_TimeoutCleared 0D91         __end_of_setDimmerIntr_MaxmumValue 0DE0  
                                ??_IO_Set 0057                  __size_of_Timeout_Counter 0014  
                               _VarErrLED 004B                       __size_of_getTemp_AD 002B  
                  ?_setLED_Initialization 0075                         __size_of_Fosc_Set 0005  
                               _Temp_Main 0D80                       ?_set_TimeoutCleared 0075  
                          ??_WDT_Clearing 0057                       Exception_Main@count 005E  
                     Exception_Main@error 0060                  _DimmerLights_PIR_Control 033E  
        __end_of_getMain_All_LightsStatus 0DF9                                  ??_setLED 005A  
                                ?_ADC_Set 0075               ?_DimmerLights_SelectPointer 0075  
        __end_of_getMain_All_Error_Status 0F4D                __size_of_DimmerLights_Main 0007  
          setDimmerIntr_Dimming_Sw@lights 0059                               __pbssCOMMON 0070  
                               ___latbits 0001                             __pcstackBANK0 0057  
                    ??_set_TimeoutCleared 0057                 _DimmerIntr_Initialization 0E86  
                                ?_WDT_Set 0075                           ??_getCDS_Status 0057  
           ??_setDimmerIntr_ControlStatus 0058            setDimmerIntr_MaxmumValue@value 0057  
                           _DimmerLights1 00CA                             PIR_Main@error 0061  
                               _getCDS_AD 0FBB                                 _getPIR_AD 0210  
             __size_of_LED_Initialization 000C                                ?_Temp_Main 0075  
                        ___lwdiv@dividend 0059                             _getCmd_Status 0E52  
                         ??_setCmd_Status 0058                    _setTemp_Initialization 0D78  
                           _PIR_Main$3333 0063                  ?_setDimmerLights_Dimming 005A  
                                ?___awdiv 0057                     __size_of_my_MainTimer 001A  
                                ?___lwdiv 0057        __end_of_getDimmerIntr_DimmingValue 0E14  
            ??_setDimmerIntr_DimmingValue 0058                _getDimmerIntr_DimmingValue 0E06  
          __size_of_setDimmerLights_OnOff 002D             __end_of_setDimmerLights_OnOff 0775  
          __size_of_setDimmerLights_SwOff 0028            __size_of_myMain_Initialization 0001  
           __end_of_setDimmerLights_SwOff 07F2             __end_of_myMain_Initialization 0D7A  
                          __size_of_getAD 001C                          ___lwdiv@quotient 005D  
                          _setPIRLED_Main 044D                                  _CDS_Main 0714  
             __end_of_Temp_Initialization 0D80                         interrupt_function 0004  
                              ?_getCDS_AD 0059                                  _LED_Main 0D7A  
                               clear_ram0 0DB4                              _my_MainTimer 0F4D  
                              ?_getPIR_AD 0060       __end_of_DimmerLights_Initialization 0D9E  
             _DimmerLights_Initialization 0D97                            ?_getCmd_Status 0075  
                                _GO_nDONE 00F9                         ??_Timeout_Counter 0057  
    __size_of_setDimmerIntr_ControlStatus 0016                      PIR_Main@TriggerValue 0065  
     __size_of_setDimmerIntr_DimmingValue 000C                                  _PIR_Main 0027  
                                _TMR1_ISR 0F67                                  _TMR1_Set 0E14  
                            ??_getTemp_AD 0059                                  _WDT_Main 0E63  
                        __size_of_ADC_Set 0007                            getPIR_AD@VRAD1 0066  
                   __size_of_setTemp_Main 007B                    __end_of_setPIRLED_Main 04BE  
          getMain_All_Error_Status@status 005B                               getAD@adcon0 0058  
                             getAD@adcon1 0057                      __end_of_WDT_Clearing 0004  
       __size_of_getMain_All_LightsStatus 000D                 ?_getMain_All_LightsStatus 0075  
                _setDimmerIntr_Dimming_RF 0EC1               setDimmerLights_OnOff@lights 005B  
                _setDimmerIntr_Dimming_Sw 0E99                                  _Fosc_Set 0D8C  
                        __size_of_WDT_Set 000E         __size_of_getMain_All_Error_Status 001A  
               ?_getMain_All_Error_Status 0075                        __end_of_getTemp_AD 07A0  
     __size_of_DimmerLights_SelectPointer 000C                                  _SwDetect 0074  
                             ??_Temp_Main 0062                          getCmd_Status@cmd 0058  
                        setCmd_Status@cmd 0057             _getMain_All_Error_Status$2565 0059  
                               setLED@led 005A                              _setTemp_Main 03D2  
                        __size_of___awdiv 005D                          __size_of___lwdiv 0040  
                setDimmerLights_SwOn@idle 005A                          ??_LedPointSelect 0057  
                      _CDS_Initialization 0D83                         getTemp_AD@channel 005B  
                         ?_setPIRLED_Main 0075                           ___lwdiv@divisor 0057  
                     ?_CDS_Initialization 0075                           ___lwdiv@counter 005C  
                                __ptext10 0EAD                                  __ptext11 0E63  
                                __ptext20 0E22                                  __ptext12 0002  
                                __ptext21 07F2                                  __ptext13 0D80  
                                __ptext30 0690                                  __ptext22 0E14  
                                __ptext14 03D2                                  __ptext31 04BE  
                                __ptext23 0F1B                                  __ptext15 0D7D  
                                __ptext40 0E52                                  __ptext32 0F83  
                                __ptext24 0D8C                                  __ptext16 0D78  
                                __ptext41 07A0                                  __ptext33 0F33  
                                __ptext25 0DA5                                  __ptext17 0027  
                                __ptext50 0DC8                                  __ptext42 0E99  
                                __ptext34 0D9E                                  __ptext26 0D7A  
                                __ptext18 0DAC                                  __ptext51 0E41  
                                __ptext43 0E06                                  __ptext35 052F  
                                __ptext27 044D                                  __ptext19 0DF9  
                                __ptext60 063F                                  __ptext52 0DBC  
                                __ptext44 0D87                                  __ptext36 0748  
                                __ptext28 0DE0                                  __ptext61 0E31  
                                __ptext53 0D97                                  __ptext45 033E  
                                __ptext37 0EED                                  __ptext29 0E74  
                                __ptext54 0D77                                  __ptext46 0FDD  
                                __ptext38 0ED7                                  __ptext55 0E86  
                                __ptext47 07CA                                  __ptext39 0DEC  
                                __ptext56 0714                                  __ptext48 0DD4  
                                __ptext57 0D83                                  __ptext49 0EC1  
                                __ptext58 0F03                                  __ptext59 0F67  
                 ??_setLED_Initialization 005B                  ??_getDimmerLights_Status 0059  
            __end_of_setDimmerLights_Main 058F                        _DimmerLights_IOC_1 0E31  
            __end_of_setDimmerLights_SwOn 1000                ??_DimmerLights_PIR_Control 005B  
                             ??_getCDS_AD 005A                             setLED@command 0059  
                           __size_of_main 0053        __size_of_DimmerIntr_Initialization 0013  
                         ??_getCmd_Status 0057                        _DimmerLights_TMR_1 063F  
              setDimmerLights_Main@lights 005E                               ??_getPIR_AD 0061  
                      _PIR_Initialization 0DF9                      ??_CDS_Initialization 0057  
                     ?_DimmerLights_IOC_1 0075                       ?_DimmerLights_TMR_1 0075  
             __size_of_Mcu_Initialization 000F                       ?_PIR_Initialization 0075  
                                main@argc 0069                                  main@argv 006B  
            setDimmerLights_Dimming@value 005C        __end_of_setDimmerIntr_DimmingValue 0DD4  
              _setDimmerIntr_DimmingValue 0DC8                      ??_DimmerLights_IOC_1 0075  
                    ??_DimmerLights_TMR_1 0075              ??_getDimmerIntr_DimmingValue 0057  
                 setDimmerLights_SwOff@sw 0059                      ??_PIR_Initialization 0057  
                                intlevel1 0000                     setTemp_Main@SafeValue 005F  
  __end_of_setDimmerLights_Initialization 0D78   __size_of_setDimmerLights_Initialization 0001  
          _setDimmerLights_Initialization 0D77                ?_setDimmerIntr_MaxmumValue 0057  
                 ?_setTemp_Initialization 0075                   __size_of_Exception_Main 0044  
                   __size_of_WDT_Clearing 0002               ?_getDimmerIntr_DimmingValue 0075  
        __size_of_setDimmerLights_Dimming 002A               __size_of_set_TimeoutCleared 0006  
                      __CFG_FOSC$INTOSCIO 0000                           _Timeout_Counter 0EAD  
         __size_of_getDimmerLights_Status 0011                __end_of_LED_Initialization 0DEC  
                   __end_of_getCDS_Status 0DB4            __end_of_setTemp_Initialization 0D79  
                       getCDS_AD@channel1 005E                         getCDS_AD@channel2 0059  
