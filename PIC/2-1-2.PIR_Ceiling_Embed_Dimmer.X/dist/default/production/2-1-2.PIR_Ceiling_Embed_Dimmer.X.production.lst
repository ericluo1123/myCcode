

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Mar 11 11:30:46 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F723A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,inline,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,inline,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,inline,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0096                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0186                     	;# 
   144  018C                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0096                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009F                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0186                     	;# 
   213  018C                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0096                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009F                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0186                     	;# 
   282  018C                     	;# 
   283  0000                     	;# 
   284  0001                     	;# 
   285  0002                     	;# 
   286  0003                     	;# 
   287  0004                     	;# 
   288  0005                     	;# 
   289  0006                     	;# 
   290  0007                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0096                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009C                     	;# 
   339  009D                     	;# 
   340  009F                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010D                     	;# 
   347  010E                     	;# 
   348  010F                     	;# 
   349  0185                     	;# 
   350  0186                     	;# 
   351  018C                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  0089                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  008E                     	;# 
   394  008F                     	;# 
   395  0090                     	;# 
   396  0091                     	;# 
   397  0092                     	;# 
   398  0093                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0095                     	;# 
   402  0095                     	;# 
   403  0096                     	;# 
   404  0096                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009F                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  0185                     	;# 
   419  0186                     	;# 
   420  018C                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  008F                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0093                     	;# 
   469  0094                     	;# 
   470  0095                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0096                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009F                     	;# 
   479  0108                     	;# 
   480  0109                     	;# 
   481  010C                     	;# 
   482  010C                     	;# 
   483  010D                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0185                     	;# 
   488  0186                     	;# 
   489  018C                     	;# 
   490  0000                     	;# 
   491  0001                     	;# 
   492  0002                     	;# 
   493  0003                     	;# 
   494  0004                     	;# 
   495  0005                     	;# 
   496  0006                     	;# 
   497  0007                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0089                     	;# 
   529  008C                     	;# 
   530  008D                     	;# 
   531  008E                     	;# 
   532  008F                     	;# 
   533  0090                     	;# 
   534  0091                     	;# 
   535  0092                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0096                     	;# 
   543  0098                     	;# 
   544  0099                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009F                     	;# 
   548  0108                     	;# 
   549  0109                     	;# 
   550  010C                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010D                     	;# 
   554  010E                     	;# 
   555  010F                     	;# 
   556  0185                     	;# 
   557  0186                     	;# 
   558  018C                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  000E                     	;# 
   574  000F                     	;# 
   575  0010                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0015                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001B                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  0081                     	;# 
   594  0085                     	;# 
   595  0086                     	;# 
   596  0087                     	;# 
   597  0089                     	;# 
   598  008C                     	;# 
   599  008D                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0093                     	;# 
   606  0093                     	;# 
   607  0094                     	;# 
   608  0095                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0096                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009F                     	;# 
   617  0108                     	;# 
   618  0109                     	;# 
   619  010C                     	;# 
   620  010C                     	;# 
   621  010D                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0186                     	;# 
   627  018C                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0014                     	;# 
   649  0015                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  0081                     	;# 
   663  0085                     	;# 
   664  0086                     	;# 
   665  0087                     	;# 
   666  0089                     	;# 
   667  008C                     	;# 
   668  008D                     	;# 
   669  008E                     	;# 
   670  008F                     	;# 
   671  0090                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0095                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0096                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009F                     	;# 
   686  0108                     	;# 
   687  0109                     	;# 
   688  010C                     	;# 
   689  010C                     	;# 
   690  010D                     	;# 
   691  010D                     	;# 
   692  010E                     	;# 
   693  010F                     	;# 
   694  0185                     	;# 
   695  0186                     	;# 
   696  018C                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  000E                     	;# 
   712  000F                     	;# 
   713  0010                     	;# 
   714  0011                     	;# 
   715  0012                     	;# 
   716  0013                     	;# 
   717  0014                     	;# 
   718  0015                     	;# 
   719  0015                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001B                     	;# 
   727  001C                     	;# 
   728  001D                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  0081                     	;# 
   732  0085                     	;# 
   733  0086                     	;# 
   734  0087                     	;# 
   735  0089                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  008F                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0096                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009F                     	;# 
   755  0108                     	;# 
   756  0109                     	;# 
   757  010C                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  010D                     	;# 
   761  010E                     	;# 
   762  010F                     	;# 
   763  0185                     	;# 
   764  0186                     	;# 
   765  018C                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0009                     	;# 
   775  000A                     	;# 
   776  000B                     	;# 
   777  000C                     	;# 
   778  000D                     	;# 
   779  000E                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0015                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001B                     	;# 
   796  001C                     	;# 
   797  001D                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  0081                     	;# 
   801  0085                     	;# 
   802  0086                     	;# 
   803  0087                     	;# 
   804  0089                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0095                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0096                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009F                     	;# 
   824  0108                     	;# 
   825  0109                     	;# 
   826  010C                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010D                     	;# 
   830  010E                     	;# 
   831  010F                     	;# 
   832  0185                     	;# 
   833  0186                     	;# 
   834  018C                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0009                     	;# 
   844  000A                     	;# 
   845  000B                     	;# 
   846  000C                     	;# 
   847  000D                     	;# 
   848  000E                     	;# 
   849  000E                     	;# 
   850  000F                     	;# 
   851  0010                     	;# 
   852  0011                     	;# 
   853  0012                     	;# 
   854  0013                     	;# 
   855  0014                     	;# 
   856  0015                     	;# 
   857  0015                     	;# 
   858  0016                     	;# 
   859  0017                     	;# 
   860  0018                     	;# 
   861  0019                     	;# 
   862  001A                     	;# 
   863  001B                     	;# 
   864  001B                     	;# 
   865  001C                     	;# 
   866  001D                     	;# 
   867  001E                     	;# 
   868  001F                     	;# 
   869  0081                     	;# 
   870  0085                     	;# 
   871  0086                     	;# 
   872  0087                     	;# 
   873  0089                     	;# 
   874  008C                     	;# 
   875  008D                     	;# 
   876  008E                     	;# 
   877  008F                     	;# 
   878  0090                     	;# 
   879  0091                     	;# 
   880  0092                     	;# 
   881  0093                     	;# 
   882  0093                     	;# 
   883  0094                     	;# 
   884  0095                     	;# 
   885  0095                     	;# 
   886  0096                     	;# 
   887  0096                     	;# 
   888  0098                     	;# 
   889  0099                     	;# 
   890  009C                     	;# 
   891  009D                     	;# 
   892  009F                     	;# 
   893  0108                     	;# 
   894  0109                     	;# 
   895  010C                     	;# 
   896  010C                     	;# 
   897  010D                     	;# 
   898  010D                     	;# 
   899  010E                     	;# 
   900  010F                     	;# 
   901  0185                     	;# 
   902  0186                     	;# 
   903  018C                     	;# 
   904  0000                     	;# 
   905  0001                     	;# 
   906  0002                     	;# 
   907  0003                     	;# 
   908  0004                     	;# 
   909  0005                     	;# 
   910  0006                     	;# 
   911  0007                     	;# 
   912  0009                     	;# 
   913  000A                     	;# 
   914  000B                     	;# 
   915  000C                     	;# 
   916  000D                     	;# 
   917  000E                     	;# 
   918  000E                     	;# 
   919  000F                     	;# 
   920  0010                     	;# 
   921  0011                     	;# 
   922  0012                     	;# 
   923  0013                     	;# 
   924  0014                     	;# 
   925  0015                     	;# 
   926  0015                     	;# 
   927  0016                     	;# 
   928  0017                     	;# 
   929  0018                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001B                     	;# 
   934  001C                     	;# 
   935  001D                     	;# 
   936  001E                     	;# 
   937  001F                     	;# 
   938  0081                     	;# 
   939  0085                     	;# 
   940  0086                     	;# 
   941  0087                     	;# 
   942  0089                     	;# 
   943  008C                     	;# 
   944  008D                     	;# 
   945  008E                     	;# 
   946  008F                     	;# 
   947  0090                     	;# 
   948  0091                     	;# 
   949  0092                     	;# 
   950  0093                     	;# 
   951  0093                     	;# 
   952  0094                     	;# 
   953  0095                     	;# 
   954  0095                     	;# 
   955  0096                     	;# 
   956  0096                     	;# 
   957  0098                     	;# 
   958  0099                     	;# 
   959  009C                     	;# 
   960  009D                     	;# 
   961  009F                     	;# 
   962  0108                     	;# 
   963  0109                     	;# 
   964  010C                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  010D                     	;# 
   968  010E                     	;# 
   969  010F                     	;# 
   970  0185                     	;# 
   971  0186                     	;# 
   972  018C                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0009                     	;# 
   982  000A                     	;# 
   983  000B                     	;# 
   984  000C                     	;# 
   985  000D                     	;# 
   986  000E                     	;# 
   987  000E                     	;# 
   988  000F                     	;# 
   989  0010                     	;# 
   990  0011                     	;# 
   991  0012                     	;# 
   992  0013                     	;# 
   993  0014                     	;# 
   994  0015                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001B                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  001D                     	;# 
  1005  001E                     	;# 
  1006  001F                     	;# 
  1007  0081                     	;# 
  1008  0085                     	;# 
  1009  0086                     	;# 
  1010  0087                     	;# 
  1011  0089                     	;# 
  1012  008C                     	;# 
  1013  008D                     	;# 
  1014  008E                     	;# 
  1015  008F                     	;# 
  1016  0090                     	;# 
  1017  0091                     	;# 
  1018  0092                     	;# 
  1019  0093                     	;# 
  1020  0093                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0096                     	;# 
  1026  0098                     	;# 
  1027  0099                     	;# 
  1028  009C                     	;# 
  1029  009D                     	;# 
  1030  009F                     	;# 
  1031  0108                     	;# 
  1032  0109                     	;# 
  1033  010C                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  010F                     	;# 
  1039  0185                     	;# 
  1040  0186                     	;# 
  1041  018C                     	;# 
  1042  0000                     	;# 
  1043  0001                     	;# 
  1044  0002                     	;# 
  1045  0003                     	;# 
  1046  0004                     	;# 
  1047  0005                     	;# 
  1048  0006                     	;# 
  1049  0007                     	;# 
  1050  0009                     	;# 
  1051  000A                     	;# 
  1052  000B                     	;# 
  1053  000C                     	;# 
  1054  000D                     	;# 
  1055  000E                     	;# 
  1056  000E                     	;# 
  1057  000F                     	;# 
  1058  0010                     	;# 
  1059  0011                     	;# 
  1060  0012                     	;# 
  1061  0013                     	;# 
  1062  0014                     	;# 
  1063  0015                     	;# 
  1064  0015                     	;# 
  1065  0016                     	;# 
  1066  0017                     	;# 
  1067  0018                     	;# 
  1068  0019                     	;# 
  1069  001A                     	;# 
  1070  001B                     	;# 
  1071  001B                     	;# 
  1072  001C                     	;# 
  1073  001D                     	;# 
  1074  001E                     	;# 
  1075  001F                     	;# 
  1076  0081                     	;# 
  1077  0085                     	;# 
  1078  0086                     	;# 
  1079  0087                     	;# 
  1080  0089                     	;# 
  1081  008C                     	;# 
  1082  008D                     	;# 
  1083  008E                     	;# 
  1084  008F                     	;# 
  1085  0090                     	;# 
  1086  0091                     	;# 
  1087  0092                     	;# 
  1088  0093                     	;# 
  1089  0093                     	;# 
  1090  0094                     	;# 
  1091  0095                     	;# 
  1092  0095                     	;# 
  1093  0096                     	;# 
  1094  0096                     	;# 
  1095  0098                     	;# 
  1096  0099                     	;# 
  1097  009C                     	;# 
  1098  009D                     	;# 
  1099  009F                     	;# 
  1100  0108                     	;# 
  1101  0109                     	;# 
  1102  010C                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010D                     	;# 
  1106  010E                     	;# 
  1107  010F                     	;# 
  1108  0185                     	;# 
  1109  0186                     	;# 
  1110  018C                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000D                     	;# 
  1124  000E                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0014                     	;# 
  1132  0015                     	;# 
  1133  0015                     	;# 
  1134  0016                     	;# 
  1135  0017                     	;# 
  1136  0018                     	;# 
  1137  0019                     	;# 
  1138  001A                     	;# 
  1139  001B                     	;# 
  1140  001B                     	;# 
  1141  001C                     	;# 
  1142  001D                     	;# 
  1143  001E                     	;# 
  1144  001F                     	;# 
  1145  0081                     	;# 
  1146  0085                     	;# 
  1147  0086                     	;# 
  1148  0087                     	;# 
  1149  0089                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008F                     	;# 
  1154  0090                     	;# 
  1155  0091                     	;# 
  1156  0092                     	;# 
  1157  0093                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0096                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009F                     	;# 
  1169  0108                     	;# 
  1170  0109                     	;# 
  1171  010C                     	;# 
  1172  010C                     	;# 
  1173  010D                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010F                     	;# 
  1177  0185                     	;# 
  1178  0186                     	;# 
  1179  018C                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  000E                     	;# 
  1194  000E                     	;# 
  1195  000F                     	;# 
  1196  0010                     	;# 
  1197  0011                     	;# 
  1198  0012                     	;# 
  1199  0013                     	;# 
  1200  0014                     	;# 
  1201  0015                     	;# 
  1202  0015                     	;# 
  1203  0016                     	;# 
  1204  0017                     	;# 
  1205  0018                     	;# 
  1206  0019                     	;# 
  1207  001A                     	;# 
  1208  001B                     	;# 
  1209  001B                     	;# 
  1210  001C                     	;# 
  1211  001D                     	;# 
  1212  001E                     	;# 
  1213  001F                     	;# 
  1214  0081                     	;# 
  1215  0085                     	;# 
  1216  0086                     	;# 
  1217  0087                     	;# 
  1218  0089                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008F                     	;# 
  1223  0090                     	;# 
  1224  0091                     	;# 
  1225  0092                     	;# 
  1226  0093                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0096                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009C                     	;# 
  1236  009D                     	;# 
  1237  009F                     	;# 
  1238  0108                     	;# 
  1239  0109                     	;# 
  1240  010C                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0185                     	;# 
  1247  0186                     	;# 
  1248  018C                     	;# 
  1249  0000                     	;# 
  1250  0001                     	;# 
  1251  0002                     	;# 
  1252  0003                     	;# 
  1253  0004                     	;# 
  1254  0005                     	;# 
  1255  0006                     	;# 
  1256  0007                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  000E                     	;# 
  1264  000F                     	;# 
  1265  0010                     	;# 
  1266  0011                     	;# 
  1267  0012                     	;# 
  1268  0013                     	;# 
  1269  0014                     	;# 
  1270  0015                     	;# 
  1271  0015                     	;# 
  1272  0016                     	;# 
  1273  0017                     	;# 
  1274  0018                     	;# 
  1275  0019                     	;# 
  1276  001A                     	;# 
  1277  001B                     	;# 
  1278  001B                     	;# 
  1279  001C                     	;# 
  1280  001D                     	;# 
  1281  001E                     	;# 
  1282  001F                     	;# 
  1283  0081                     	;# 
  1284  0085                     	;# 
  1285  0086                     	;# 
  1286  0087                     	;# 
  1287  0089                     	;# 
  1288  008C                     	;# 
  1289  008D                     	;# 
  1290  008E                     	;# 
  1291  008F                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0092                     	;# 
  1295  0093                     	;# 
  1296  0093                     	;# 
  1297  0094                     	;# 
  1298  0095                     	;# 
  1299  0095                     	;# 
  1300  0096                     	;# 
  1301  0096                     	;# 
  1302  0098                     	;# 
  1303  0099                     	;# 
  1304  009C                     	;# 
  1305  009D                     	;# 
  1306  009F                     	;# 
  1307  0108                     	;# 
  1308  0109                     	;# 
  1309  010C                     	;# 
  1310  010C                     	;# 
  1311  010D                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010F                     	;# 
  1315  0185                     	;# 
  1316  0186                     	;# 
  1317  018C                     	;# 
  1318  001F                     _ADCON0	set	31
  1319  001E                     _ADRES	set	30
  1320  0005                     _PORTA	set	5
  1321  0006                     _PORTB	set	6
  1322  0007                     _PORTC	set	7
  1323  0010                     _T1CON	set	16
  1324  000F                     _TMR1H	set	15
  1325  000E                     _TMR1L	set	14
  1326  005F                     _GIE	set	95
  1327  00F9                     _GO_nDONE	set	249
  1328  005E                     _PEIE	set	94
  1329  002F                     _RA7	set	47
  1330  0032                     _RB2	set	50
  1331  0033                     _RB3	set	51
  1332  0034                     _RB4	set	52
  1333  0035                     _RB5	set	53
  1334  0060                     _TMR1IF	set	96
  1335  009F                     _ADCON1	set	159
  1336  009D                     _FVRCON	set	157
  1337  0090                     _OSCCON	set	144
  1338  0085                     _TRISA	set	133
  1339  0086                     _TRISB	set	134
  1340  0087                     _TRISC	set	135
  1341  0095                     _WPUB	set	149
  1342  0408                     _PS0	set	1032
  1343  0409                     _PS1	set	1033
  1344  040A                     _PS2	set	1034
  1345  040B                     _PSA	set	1035
  1346  0460                     _TMR1IE	set	1120
  1347  0185                     _ANSELA	set	389
  1348  0186                     _ANSELB	set	390
  1349                           
  1350                           	psect	text0
  1351  0000                     __ptext0:	
  1352                           ; #config settings
  1353                           
  1354                           
  1355                           ;psect for function _DimmerLights_IOC_1
  1356  0000                     
  1357                           	psect	cinit
  1358  0013                     start_initialization:	
  1359  0013                     __initialization:	
  1360                           
  1361                           ; Clear objects allocated to COMMON
  1362  0013  01F0               	clrf	__pbssCOMMON& (0+127)
  1363  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1364  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1365  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1366  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1367                           
  1368                           ; Clear objects allocated to BANK0
  1369  0018  1383               	bcf	3,7	;select IRP bank0
  1370  0019  3020               	movlw	low __pbssBANK0
  1371  001A  0084               	movwf	4
  1372  001B  3057               	movlw	low (__pbssBANK0+55)
  1373  001C  158A  25BE  118A   	fcall	clear_ram0
  1374                           
  1375                           ; Clear objects allocated to BANK1
  1376  001F  30A0               	movlw	low __pbssBANK1
  1377  0020  0084               	movwf	4
  1378  0021  30D2               	movlw	low (__pbssBANK1+50)
  1379  0022  158A  25BE         	fcall	clear_ram0
  1380  0024                     end_of_initialization:	
  1381                           ;End of C runtime variable initialization code
  1382                           
  1383  0024                     __end_of__initialization:	
  1384  0024  0183               	clrf	3
  1385  0025  118A  2DED         	ljmp	_main	;jump to C main() function
  1386                           
  1387                           	psect	bssCOMMON
  1388  0070                     __pbssCOMMON:	
  1389  0070                     _Cmd:	
  1390  0070                     	ds	1
  1391  0071                     _DimmerIntr:	
  1392  0071                     	ds	1
  1393  0072                     _DimmerLights:	
  1394  0072                     	ds	1
  1395  0073                     _LED:	
  1396  0073                     	ds	1
  1397  0074                     _SwDetect:	
  1398  0074                     	ds	1
  1399                           
  1400                           	psect	bssBANK0
  1401  0020                     __pbssBANK0:	
  1402  0020                     _DimmerIntr1:	
  1403  0020                     	ds	12
  1404  002C                     _Dimmer:	
  1405  002C                     	ds	5
  1406  0031                     _myMain:	
  1407  0031                     	ds	5
  1408  0036                     _PIRLED:	
  1409  0036                     	ds	4
  1410  003A                     __CDS:	
  1411  003A                     	ds	4
  1412  003E                     _Timer1:	
  1413  003E                     	ds	3
  1414  0041                     _WDT:	
  1415  0041                     	ds	2
  1416  0043                     _Light:	
  1417  0043                     	ds	1
  1418  0044                     _Temp:	
  1419  0044                     	ds	7
  1420  004B                     _VarErrLED:	
  1421  004B                     	ds	4
  1422  004F                     _VarLED1:	
  1423  004F                     	ds	4
  1424  0053                     _VarLED2:	
  1425  0053                     	ds	4
  1426                           
  1427                           	psect	bssBANK1
  1428  00A0                     __pbssBANK1:	
  1429  00A0                     __PIR:	
  1430  00A0                     	ds	42
  1431  00CA                     _DimmerLights1:	
  1432  00CA                     	ds	8
  1433                           
  1434                           	psect	clrtext
  1435  0DBE                     clear_ram0:	
  1436                           ;	Called with FSR containing the base address, and
  1437                           ;	W with the last address+1
  1438                           
  1439  0DBE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1440  0DBF                     clrloop0:	
  1441  0DBF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1442  0DC0  0A84               	incf	4,f	;increment pointer
  1443  0DC1  0604               	xorwf	4,w	;XOR with final address
  1444  0DC2  1903               	btfsc	3,2	;have we reached the end yet?
  1445  0DC3  3400               	retlw	0	;all done for this memory range, return
  1446  0DC4  0604               	xorwf	4,w	;XOR again to restore value
  1447  0DC5  2DBF               	goto	clrloop0	;do the next byte
  1448                           
  1449                           	psect	cstackCOMMON
  1450  0075                     __pcstackCOMMON:	
  1451  0075                     ?_setDimmerLights_Initialization:	
  1452  0075                     ?_setDimmerLights_Main:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0075                     ?_DimmerLights_PIR_Control:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0075                     ?_setLED_Initialization:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0075                     ?_setPIRLED_Main:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0075                     ?_Fosc_Set:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0075                     ?_IO_Set:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0075                     ?_TMR1_Set:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0075                     ?_ADC_Set:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0075                     ?_WDT_Set:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0075                     ?_TMR1_ISR:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0075                     ?_Timeout_Counter:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0075                     ?_set_TimeoutCleared:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0075                     ?_WDT_Clearing:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0075                     ?_myMain_Initialization:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0075                     ?_Temp_Initialization:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0075                     ?_PIR_Initialization:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0075                     ?_getTemp_AD:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0075                     ?_my_MainTimer:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0075                     ?_Temp_Main:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0075                     ?_PIR_Main:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0075                     ?_Exception_Main:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0075                     ?_setTemp_Initialization:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0075                     ?_setTemp_Main:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0075                     ?_CDS_Initialization:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0075                     ?_CDS_Main:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0075                     ?_DimmerIntr_Initialization:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0075                     ?_DimmerLights_SelectPointer:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0075                     ?_DimmerLights_Initialization:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0075                     ?_setDimmerLights_SwOn:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0075                     ?_setDimmerLights_SwOff:	
  1540                           ; 0 bytes @ 0x0
  1541                           
  1542  0075                     ?_DimmerLights_Main:	
  1543                           ; 0 bytes @ 0x0
  1544                           
  1545  0075                     ?_DimmerLights_TMR_1:	
  1546                           ; 0 bytes @ 0x0
  1547                           
  1548  0075                     ??_DimmerLights_TMR_1:	
  1549                           ; 0 bytes @ 0x0
  1550                           
  1551  0075                     ?_DimmerLights_IOC_1:	
  1552                           ; 0 bytes @ 0x0
  1553                           
  1554  0075                     ??_DimmerLights_IOC_1:	
  1555                           ; 0 bytes @ 0x0
  1556                           
  1557  0075                     ?_LedPointSelect:	
  1558                           ; 0 bytes @ 0x0
  1559                           
  1560  0075                     ?_LED_Initialization:	
  1561                           ; 0 bytes @ 0x0
  1562                           
  1563  0075                     ?_LED_Main:	
  1564                           ; 0 bytes @ 0x0
  1565                           
  1566  0075                     ?_Mcu_Initialization:	
  1567                           ; 0 bytes @ 0x0
  1568                           
  1569  0075                     ?_ISR:	
  1570                           ; 0 bytes @ 0x0
  1571                           
  1572  0075                     ?_WDT_Main:	
  1573                           ; 0 bytes @ 0x0
  1574                           
  1575  0075                     ?_getDimmerLights_Allow_Condition:	
  1576                           ; 0 bytes @ 0x0
  1577                           
  1578  0075                     ?_getMain_All_LightsStatus:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0075                     ?_getCmd_Status:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0075                     ?_getCDS_Status:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0075                     ?_getDimmerIntr_DimmingValue:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0075                     ?_getDimmerLights_Status:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0075                     ?_getMain_All_Error_Status:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0075                     setDimmerLights_Initialization@lights:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0075                     getDimmerLights_Allow_Condition@lights:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x0
  1604  0075                     	ds	1
  1605  0076                     ??_TMR1_ISR:	
  1606  0076                     ??_ISR:	
  1607                           ; 0 bytes @ 0x1
  1608                           
  1609                           
  1610                           ; 0 bytes @ 0x1
  1611  0076                     	ds	4
  1612                           
  1613                           	psect	cstackBANK0
  1614  0057                     __pcstackBANK0:	
  1615  0057                     ??_setDimmerLights_Initialization:	
  1616  0057                     ??_getDimmerLights_Allow_Condition:	
  1617                           ; 0 bytes @ 0x0
  1618                           
  1619  0057                     ??_getMain_All_LightsStatus:	
  1620                           ; 0 bytes @ 0x0
  1621                           
  1622  0057                     ??_getCmd_Status:	
  1623                           ; 0 bytes @ 0x0
  1624                           
  1625  0057                     ?_setCmd_Status:	
  1626                           ; 0 bytes @ 0x0
  1627                           
  1628  0057                     ??_Fosc_Set:	
  1629                           ; 0 bytes @ 0x0
  1630                           
  1631  0057                     ??_IO_Set:	
  1632                           ; 0 bytes @ 0x0
  1633                           
  1634  0057                     ??_TMR1_Set:	
  1635                           ; 0 bytes @ 0x0
  1636                           
  1637  0057                     ??_ADC_Set:	
  1638                           ; 0 bytes @ 0x0
  1639                           
  1640  0057                     ??_WDT_Set:	
  1641                           ; 0 bytes @ 0x0
  1642                           
  1643  0057                     ??_Timeout_Counter:	
  1644                           ; 0 bytes @ 0x0
  1645                           
  1646  0057                     ??_set_TimeoutCleared:	
  1647                           ; 0 bytes @ 0x0
  1648                           
  1649  0057                     ??_WDT_Clearing:	
  1650                           ; 0 bytes @ 0x0
  1651                           
  1652  0057                     ??_myMain_Initialization:	
  1653                           ; 0 bytes @ 0x0
  1654                           
  1655  0057                     ??_Temp_Initialization:	
  1656                           ; 0 bytes @ 0x0
  1657                           
  1658  0057                     ??_PIR_Initialization:	
  1659                           ; 0 bytes @ 0x0
  1660                           
  1661  0057                     ??_my_MainTimer:	
  1662                           ; 0 bytes @ 0x0
  1663                           
  1664  0057                     ??_setTemp_Initialization:	
  1665                           ; 0 bytes @ 0x0
  1666                           
  1667  0057                     ??_CDS_Initialization:	
  1668                           ; 0 bytes @ 0x0
  1669                           
  1670  0057                     ??_CDS_Main:	
  1671                           ; 0 bytes @ 0x0
  1672                           
  1673  0057                     ??_getCDS_Status:	
  1674                           ; 0 bytes @ 0x0
  1675                           
  1676  0057                     ??_DimmerIntr_Initialization:	
  1677                           ; 0 bytes @ 0x0
  1678                           
  1679  0057                     ?_setDimmerIntr_ControlStatus:	
  1680                           ; 0 bytes @ 0x0
  1681                           
  1682  0057                     ?_setDimmerIntr_DimmingValue:	
  1683                           ; 0 bytes @ 0x0
  1684                           
  1685  0057                     ??_getDimmerIntr_DimmingValue:	
  1686                           ; 0 bytes @ 0x0
  1687                           
  1688  0057                     ?_setDimmerIntr_MaxmumValue:	
  1689                           ; 0 bytes @ 0x0
  1690                           
  1691  0057                     ?_setDimmerIntr_Dimming_Sw:	
  1692                           ; 0 bytes @ 0x0
  1693                           
  1694  0057                     ?_setDimmerIntr_Dimming_RF:	
  1695                           ; 0 bytes @ 0x0
  1696                           
  1697  0057                     ??_DimmerLights_SelectPointer:	
  1698                           ; 0 bytes @ 0x0
  1699                           
  1700  0057                     ??_LedPointSelect:	
  1701                           ; 0 bytes @ 0x0
  1702                           
  1703  0057                     ??_WDT_Main:	
  1704                           ; 0 bytes @ 0x0
  1705                           
  1706  0057                     ??_getMain_All_Error_Status:	
  1707                           ; 0 bytes @ 0x0
  1708                           
  1709  0057                     ?_getAD:	
  1710                           ; 0 bytes @ 0x0
  1711                           
  1712  0057                     ?___awdiv:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0057                     ?___lwdiv:	
  1716                           ; 2 bytes @ 0x0
  1717                           
  1718  0057                     getCDS_Status@status:	
  1719                           ; 2 bytes @ 0x0
  1720                           
  1721  0057                     setDimmerIntr_ControlStatus@command:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0057                     setDimmerIntr_DimmingValue@value:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0057                     setDimmerIntr_MaxmumValue@value:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0057                     setDimmerIntr_Dimming_Sw@command:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0057                     setDimmerIntr_Dimming_RF@command:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0057                     getDimmerLights_Allow_Condition@allow:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0057                     getAD@adcon1:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0057                     getMain_All_LightsStatus@status:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0057                     setCmd_Status@cmd:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0057                     getCmd_Status@number:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0057                     ___awdiv@divisor:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0057                     ___lwdiv@divisor:	
  1755                           ; 2 bytes @ 0x0
  1756                           
  1757                           
  1758                           ; 2 bytes @ 0x0
  1759  0057                     	ds	1
  1760  0058                     ??_getAD:	
  1761  0058                     ??_setCmd_Status:	
  1762                           ; 0 bytes @ 0x1
  1763                           
  1764  0058                     ??_setDimmerIntr_ControlStatus:	
  1765                           ; 0 bytes @ 0x1
  1766                           
  1767  0058                     ??_setDimmerIntr_DimmingValue:	
  1768                           ; 0 bytes @ 0x1
  1769                           
  1770  0058                     ??_setDimmerIntr_MaxmumValue:	
  1771                           ; 0 bytes @ 0x1
  1772                           
  1773  0058                     ??_setDimmerIntr_Dimming_Sw:	
  1774                           ; 0 bytes @ 0x1
  1775                           
  1776  0058                     ??_setDimmerIntr_Dimming_RF:	
  1777                           ; 0 bytes @ 0x1
  1778                           
  1779  0058                     ??_DimmerLights_Initialization:	
  1780                           ; 0 bytes @ 0x1
  1781                           
  1782  0058                     ??_Mcu_Initialization:	
  1783                           ; 0 bytes @ 0x1
  1784                           
  1785  0058                     getDimmerIntr_DimmingValue@lights:	
  1786                           ; 0 bytes @ 0x1
  1787                           
  1788  0058                     DimmerLights_SelectPointer@lights:	
  1789                           ; 1 bytes @ 0x1
  1790                           
  1791  0058                     LedPointSelect@led:	
  1792                           ; 1 bytes @ 0x1
  1793                           
  1794  0058                     getAD@adcon0:	
  1795                           ; 1 bytes @ 0x1
  1796                           
  1797  0058                     getMain_All_Error_Status@command:	
  1798                           ; 1 bytes @ 0x1
  1799                           
  1800  0058                     getCmd_Status@cmd:	
  1801                           ; 1 bytes @ 0x1
  1802                           
  1803                           
  1804                           ; 1 bytes @ 0x1
  1805  0058                     	ds	1
  1806  0059                     ?_setLED:	
  1807  0059                     ??_getTemp_AD:	
  1808                           ; 0 bytes @ 0x2
  1809                           
  1810  0059                     ?_getCDS_AD:	
  1811                           ; 0 bytes @ 0x2
  1812                           
  1813  0059                     ??_setDimmerLights_SwOn:	
  1814                           ; 0 bytes @ 0x2
  1815                           
  1816  0059                     ??_setDimmerLights_SwOff:	
  1817                           ; 0 bytes @ 0x2
  1818                           
  1819  0059                     ??_getDimmerLights_Status:	
  1820                           ; 0 bytes @ 0x2
  1821                           
  1822  0059                     getCDS_AD@channel2:	
  1823                           ; 0 bytes @ 0x2
  1824                           
  1825  0059                     setDimmerIntr_ControlStatus@lights:	
  1826                           ; 1 bytes @ 0x2
  1827                           
  1828  0059                     setDimmerIntr_DimmingValue@lights:	
  1829                           ; 1 bytes @ 0x2
  1830                           
  1831  0059                     getDimmerIntr_DimmingValue@value:	
  1832                           ; 1 bytes @ 0x2
  1833                           
  1834  0059                     setDimmerIntr_MaxmumValue@lights:	
  1835                           ; 1 bytes @ 0x2
  1836                           
  1837  0059                     setDimmerIntr_Dimming_Sw@lights:	
  1838                           ; 1 bytes @ 0x2
  1839                           
  1840  0059                     setDimmerIntr_Dimming_RF@lights:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843  0059                     setDimmerLights_SwOn@sw:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846  0059                     setDimmerLights_SwOff@sw:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849  0059                     getDimmerLights_Status@lights:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852  0059                     setLED@command:	
  1853                           ; 1 bytes @ 0x2
  1854                           
  1855  0059                     setCmd_Status@number:	
  1856                           ; 1 bytes @ 0x2
  1857                           
  1858  0059                     _getMain_All_Error_Status$2565:	
  1859                           ; 1 bytes @ 0x2
  1860                           
  1861  0059                     ___awdiv@dividend:	
  1862                           ; 2 bytes @ 0x2
  1863                           
  1864  0059                     ___lwdiv@dividend:	
  1865                           ; 2 bytes @ 0x2
  1866                           
  1867                           
  1868                           ; 2 bytes @ 0x2
  1869  0059                     	ds	1
  1870  005A                     ?_setDimmerLights_OnOff:	
  1871  005A                     ?_setDimmerLights_Dimming:	
  1872                           ; 0 bytes @ 0x3
  1873                           
  1874  005A                     ??_setLED:	
  1875                           ; 0 bytes @ 0x3
  1876                           
  1877  005A                     ??_getCDS_AD:	
  1878                           ; 0 bytes @ 0x3
  1879                           
  1880  005A                     setDimmerLights_SwOn@idle:	
  1881                           ; 0 bytes @ 0x3
  1882                           
  1883  005A                     setDimmerLights_OnOff@command:	
  1884                           ; 1 bytes @ 0x3
  1885                           
  1886  005A                     setDimmerLights_Dimming@status:	
  1887                           ; 1 bytes @ 0x3
  1888                           
  1889  005A                     getDimmerLights_Status@status:	
  1890                           ; 1 bytes @ 0x3
  1891                           
  1892  005A                     setLED@led:	
  1893                           ; 1 bytes @ 0x3
  1894                           
  1895                           
  1896                           ; 1 bytes @ 0x3
  1897  005A                     	ds	1
  1898  005B                     ??_DimmerLights_PIR_Control:	
  1899  005B                     ??_setDimmerLights_OnOff:	
  1900                           ; 0 bytes @ 0x4
  1901                           
  1902  005B                     ??_setDimmerLights_Dimming:	
  1903                           ; 0 bytes @ 0x4
  1904                           
  1905  005B                     ??_setLED_Initialization:	
  1906                           ; 0 bytes @ 0x4
  1907                           
  1908  005B                     ??_setPIRLED_Main:	
  1909                           ; 0 bytes @ 0x4
  1910                           
  1911  005B                     ??___awdiv:	
  1912                           ; 0 bytes @ 0x4
  1913                           
  1914  005B                     ??___lwdiv:	
  1915                           ; 0 bytes @ 0x4
  1916                           
  1917  005B                     setDimmerLights_OnOff@lights:	
  1918                           ; 0 bytes @ 0x4
  1919                           
  1920  005B                     setLED_Initialization@led:	
  1921                           ; 1 bytes @ 0x4
  1922                           
  1923  005B                     getMain_All_Error_Status@status:	
  1924                           ; 1 bytes @ 0x4
  1925                           
  1926  005B                     getTemp_AD@channel:	
  1927                           ; 1 bytes @ 0x4
  1928                           
  1929                           
  1930                           ; 1 bytes @ 0x4
  1931  005B                     	ds	1
  1932  005C                     ??_PIR_Main:	
  1933  005C                     ??_Exception_Main:	
  1934                           ; 0 bytes @ 0x5
  1935                           
  1936  005C                     ??_setTemp_Main:	
  1937                           ; 0 bytes @ 0x5
  1938                           
  1939  005C                     ??_LED_Initialization:	
  1940                           ; 0 bytes @ 0x5
  1941                           
  1942  005C                     getCDS_AD@i:	
  1943                           ; 0 bytes @ 0x5
  1944                           
  1945  005C                     setDimmerLights_Dimming@value:	
  1946                           ; 1 bytes @ 0x5
  1947                           
  1948  005C                     setPIRLED_Main@count:	
  1949                           ; 1 bytes @ 0x5
  1950                           
  1951  005C                     getTemp_AD@ADRES:	
  1952                           ; 1 bytes @ 0x5
  1953                           
  1954  005C                     ___awdiv@counter:	
  1955                           ; 1 bytes @ 0x5
  1956                           
  1957  005C                     ___lwdiv@counter:	
  1958                           ; 1 bytes @ 0x5
  1959                           
  1960                           
  1961                           ; 1 bytes @ 0x5
  1962  005C                     	ds	1
  1963  005D                     ??_LED_Main:	
  1964  005D                     getCDS_AD@j:	
  1965                           ; 0 bytes @ 0x6
  1966                           
  1967  005D                     setDimmerLights_Dimming@lights:	
  1968                           ; 1 bytes @ 0x6
  1969                           
  1970  005D                     Exception_Main@lights:	
  1971                           ; 1 bytes @ 0x6
  1972                           
  1973  005D                     setTemp_Main@error:	
  1974                           ; 1 bytes @ 0x6
  1975                           
  1976  005D                     ___awdiv@sign:	
  1977                           ; 1 bytes @ 0x6
  1978                           
  1979  005D                     ___lwdiv@quotient:	
  1980                           ; 1 bytes @ 0x6
  1981                           
  1982                           
  1983                           ; 2 bytes @ 0x6
  1984  005D                     	ds	1
  1985  005E                     ??_setDimmerLights_Main:	
  1986  005E                     getCDS_AD@channel1:	
  1987                           ; 0 bytes @ 0x7
  1988                           
  1989  005E                     setDimmerLights_Main@lights:	
  1990                           ; 1 bytes @ 0x7
  1991                           
  1992  005E                     Exception_Main@count:	
  1993                           ; 1 bytes @ 0x7
  1994                           
  1995  005E                     setTemp_Main@TempGO:	
  1996                           ; 1 bytes @ 0x7
  1997                           
  1998  005E                     ___awdiv@quotient:	
  1999                           ; 1 bytes @ 0x7
  2000                           
  2001                           
  2002                           ; 2 bytes @ 0x7
  2003  005E                     	ds	1
  2004  005F                     ??_DimmerLights_Main:	
  2005  005F                     Exception_Main@status:	
  2006                           ; 0 bytes @ 0x8
  2007                           
  2008  005F                     setTemp_Main@SafeValue:	
  2009                           ; 1 bytes @ 0x8
  2010                           
  2011                           
  2012                           ; 1 bytes @ 0x8
  2013  005F                     	ds	1
  2014  0060                     ?_getPIR_AD:	
  2015  0060                     Exception_Main@error:	
  2016                           ; 0 bytes @ 0x9
  2017                           
  2018  0060                     setTemp_Main@DangerValue:	
  2019                           ; 1 bytes @ 0x9
  2020                           
  2021  0060                     getPIR_AD@channel2:	
  2022                           ; 1 bytes @ 0x9
  2023                           
  2024                           
  2025                           ; 1 bytes @ 0x9
  2026  0060                     	ds	1
  2027  0061                     ??_getPIR_AD:	
  2028  0061                     setTemp_Main@AD:	
  2029                           ; 0 bytes @ 0xA
  2030                           
  2031  0061                     PIR_Main@error:	
  2032                           ; 1 bytes @ 0xA
  2033                           
  2034                           
  2035                           ; 1 bytes @ 0xA
  2036  0061                     	ds	1
  2037  0062                     ??_Temp_Main:	
  2038  0062                     PIR_Main@cds:	
  2039                           ; 0 bytes @ 0xB
  2040                           
  2041                           
  2042                           ; 1 bytes @ 0xB
  2043  0062                     	ds	1
  2044  0063                     PIR_Main@Enable_Switch:	
  2045                           
  2046                           ; 1 bytes @ 0xC
  2047  0063                     	ds	1
  2048  0064                     getPIR_AD@j:	
  2049  0064                     _PIR_Main$3333:	
  2050                           ; 1 bytes @ 0xD
  2051                           
  2052                           
  2053                           ; 2 bytes @ 0xD
  2054  0064                     	ds	1
  2055  0065                     getPIR_AD@channel1:	
  2056                           
  2057                           ; 1 bytes @ 0xE
  2058  0065                     	ds	1
  2059  0066                     PIR_Main@TriggerValue:	
  2060  0066                     getPIR_AD@VRAD1:	
  2061                           ; 1 bytes @ 0xF
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0xF
  2065  0066                     	ds	1
  2066  0067                     PIR_Main@LightsStatus:	
  2067  0067                     getPIR_AD@VRAD:	
  2068                           ; 1 bytes @ 0x10
  2069                           
  2070                           
  2071                           ; 1 bytes @ 0x10
  2072  0067                     	ds	1
  2073  0068                     getPIR_AD@i:	
  2074                           
  2075                           ; 1 bytes @ 0x11
  2076  0068                     	ds	1
  2077  0069                     ?_main:	
  2078  0069                     main@argc:	
  2079                           ; 2 bytes @ 0x12
  2080                           
  2081                           
  2082                           ; 2 bytes @ 0x12
  2083  0069                     	ds	2
  2084  006B                     main@argv:	
  2085                           
  2086                           ; 2 bytes @ 0x14
  2087  006B                     	ds	2
  2088  006D                     ??_main:	
  2089                           
  2090                           ; 0 bytes @ 0x16
  2091  006D                     	ds	1
  2092                           
  2093                           	psect	maintext
  2094  05ED                     __pmaintext:	
  2095 ;;
  2096 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2097 ;;
  2098 ;; *************** function _main *****************
  2099 ;; Defined at:
  2100 ;;		line 7 in file "../src/Main_B1.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  argc            2   18[BANK0 ] int 
  2103 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  2   18[BANK0 ] int 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2110 ;; Tracked objects:
  2111 ;;		On entry : 17F/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2115 ;;      Params:         0       4       0       0
  2116 ;;      Locals:         0       0       0       0
  2117 ;;      Temps:          0       1       0       0
  2118 ;;      Totals:         0       5       0       0
  2119 ;;Total ram usage:        5 bytes
  2120 ;; Hardware stack levels required when called:    7
  2121 ;; This function calls:
  2122 ;;		_CDS_Initialization
  2123 ;;		_CDS_Main
  2124 ;;		_DimmerLights_Initialization
  2125 ;;		_DimmerLights_Main
  2126 ;;		_Exception_Main
  2127 ;;		_LED_Initialization
  2128 ;;		_LED_Main
  2129 ;;		_Mcu_Initialization
  2130 ;;		_PIR_Initialization
  2131 ;;		_PIR_Main
  2132 ;;		_Temp_Initialization
  2133 ;;		_Temp_Main
  2134 ;;		_WDT_Main
  2135 ;;		_getCDS_AD
  2136 ;;		_getPIR_AD
  2137 ;;		_getTemp_AD
  2138 ;;		_myMain_Initialization
  2139 ;;		_my_MainTimer
  2140 ;; This function is called by:
  2141 ;;		Startup code after reset
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _main
  2147  05ED                     _main:	
  2148                           
  2149                           ;Main_B1.c: 8: myMain_Initialization();
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2153  05ED  118A  27FF  118A   	fcall	_myMain_Initialization
  2154                           
  2155                           ;Main_B1.c: 9: Mcu_Initialization();
  2156  05F0  158A  263A  118A   	fcall	_Mcu_Initialization
  2157                           
  2158                           ;Main_B1.c: 10: ;;
  2159                           ;Main_B1.c: 11: LED_Initialization();
  2160  05F3  158A  25EA  118A   	fcall	_LED_Initialization
  2161                           
  2162                           ;Main_B1.c: 12: ;;
  2163                           ;Main_B1.c: 14: ;;
  2164                           ;Main_B1.c: 15: Temp_Initialization();
  2165  05F6  158A  2587  118A   	fcall	_Temp_Initialization
  2166                           
  2167                           ;Main_B1.c: 16: ;;
  2168                           ;Main_B1.c: 17: ;;
  2169                           ;Main_B1.c: 18: ;;
  2170                           ;Main_B1.c: 20: DimmerLights_Initialization();
  2171  05F9  158A  25A1  118A   	fcall	_DimmerLights_Initialization
  2172                           
  2173                           ;Main_B1.c: 21: ;;
  2174                           ;Main_B1.c: 22: CDS_Initialization();
  2175  05FC  158A  258D  118A   	fcall	_CDS_Initialization
  2176                           
  2177                           ;Main_B1.c: 23: PIR_Initialization();
  2178  05FF  158A  2603  118A   	fcall	_PIR_Initialization
  2179  0602                     l4951:	
  2180                           ;Main_B1.c: 24: ;;
  2181                           ;Main_B1.c: 25: ;;
  2182                           ;Main_B1.c: 26: ;;
  2183                           ;Main_B1.c: 27: ;;
  2184                           ;Main_B1.c: 28: ;;
  2185                           ;Main_B1.c: 30: while (1) {
  2186                           
  2187                           
  2188                           ;Main_B1.c: 32: if (myMain.PowerON == 1) {
  2189  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0604  1C31               	btfss	_myMain,0
  2192  0605  2E1E               	goto	l4957
  2193                           
  2194                           ;Main_B1.c: 42: getTemp_AD(0x11);
  2195  0606  3011               	movlw	17
  2196  0607  158A  27BF  118A   	fcall	_getTemp_AD
  2197                           
  2198                           ;Main_B1.c: 50: getCDS_AD(0x09, 0x31);
  2199  060A  3031               	movlw	49
  2200  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2201  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2202  060D  00ED               	movwf	??_main
  2203  060E  086D               	movf	??_main,w
  2204  060F  00D9               	movwf	getCDS_AD@channel2
  2205  0610  3009               	movlw	9
  2206  0611  158A  27DE  118A   	fcall	_getCDS_AD
  2207                           
  2208                           ;Main_B1.c: 54: getPIR_AD(0x05, 0x0d);
  2209  0614  300D               	movlw	13
  2210  0615  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0616  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0617  00ED               	movwf	??_main
  2213  0618  086D               	movf	??_main,w
  2214  0619  00E0               	movwf	getPIR_AD@channel2
  2215  061A  3005               	movlw	5
  2216  061B  118A  2211  118A   	fcall	_getPIR_AD
  2217  061E                     l4957:	
  2218                           
  2219                           ;Main_B1.c: 57: }
  2220                           ;Main_B1.c: 93: if (Timer1.Timeout == 1) {
  2221  061E  1283               	bcf	3,5	;RP0=0, select bank0
  2222  061F  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0620  1C3E               	btfss	_Timer1,0
  2224  0621  2E02               	goto	l4951
  2225                           
  2226                           ;Main_B1.c: 94: Timer1.Timeout = 0;
  2227  0622  103E               	bcf	_Timer1,0
  2228                           
  2229                           ;Main_B1.c: 96: my_MainTimer();
  2230  0623  158A  2751  118A   	fcall	_my_MainTimer
  2231                           
  2232                           ;Main_B1.c: 97: WDT_Main();
  2233  0626  158A  267B  118A   	fcall	_WDT_Main
  2234                           
  2235                           ;Main_B1.c: 98: ;;
  2236                           ;Main_B1.c: 99: ;;
  2237                           ;Main_B1.c: 100: if (myMain.PowerON == 1) {
  2238  0629  1283               	bcf	3,5	;RP0=0, select bank0
  2239  062A  1303               	bcf	3,6	;RP1=0, select bank0
  2240  062B  1C31               	btfss	_myMain,0
  2241  062C  2E02               	goto	l4951
  2242                           
  2243                           ;Main_B1.c: 101: ;;
  2244                           ;Main_B1.c: 103: LED_Main();
  2245  062D  158A  2584  118A   	fcall	_LED_Main
  2246                           
  2247                           ;Main_B1.c: 104: ;;
  2248                           ;Main_B1.c: 106: ;;
  2249                           ;Main_B1.c: 107: Temp_Main();
  2250  0630  158A  258A  118A   	fcall	_Temp_Main
  2251                           
  2252                           ;Main_B1.c: 108: ;;
  2253                           ;Main_B1.c: 109: ;;
  2254                           ;Main_B1.c: 111: ;;
  2255                           ;Main_B1.c: 112: DimmerLights_Main();
  2256  0633  158A  25A8  118A   	fcall	_DimmerLights_Main
  2257                           
  2258                           ;Main_B1.c: 113: ;;
  2259                           ;Main_B1.c: 114: CDS_Main();
  2260  0636  118A  2715  118A   	fcall	_CDS_Main
  2261                           
  2262                           ;Main_B1.c: 115: PIR_Main();
  2263  0639  118A  2027  118A   	fcall	_PIR_Main
  2264                           
  2265                           ;Main_B1.c: 117: ;;
  2266                           ;Main_B1.c: 118: ;;
  2267                           ;Main_B1.c: 119: ;;
  2268                           ;Main_B1.c: 120: ;;
  2269                           ;Main_B1.c: 121: Exception_Main();
  2270  063C  118A  2691  118A   	fcall	_Exception_Main
  2271  063F  2E02               	goto	l4951
  2272  0640                     __end_of_main:	
  2273                           ;Main_B1.c: 128: }
  2274                           ;Main_B1.c: 129: }
  2275                           ;Main_B1.c: 163: }
  2276                           ;Main_B1.c: 164: return (0);
  2277                           ;	Return value of _main is never used
  2278                           
  2279                           
  2280                           	psect	text1
  2281  0F51                     __ptext1:	
  2282 ;; *************** function _my_MainTimer *****************
  2283 ;; Defined at:
  2284 ;;		line 185 in file "../src/Main_B1.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2298 ;;      Params:         0       0       0       0
  2299 ;;      Locals:         0       0       0       0
  2300 ;;      Temps:          0       1       0       0
  2301 ;;      Totals:         0       1       0       0
  2302 ;;Total ram usage:        1 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _my_MainTimer
  2314  0F51                     _my_MainTimer:	
  2315                           
  2316                           ;Main_B1.c: 187: if (myMain.PowerON == 0) {
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _my_MainTimer: [wreg+status,2+status,0]
  2320  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0F53  1831               	btfsc	_myMain,0
  2323  0F54  2F61               	goto	l4711
  2324                           
  2325                           ;Main_B1.c: 188: myMain.PowerCount++;
  2326  0F55  3001               	movlw	1
  2327  0F56  00D7               	movwf	??_my_MainTimer
  2328  0F57  0857               	movf	??_my_MainTimer,w
  2329  0F58  07B2               	addwf	_myMain+1,f
  2330                           
  2331                           ;Main_B1.c: 189: if (myMain.PowerCount == (1500 / 20)) {
  2332  0F59  0832               	movf	_myMain+1,w
  2333  0F5A  3A4B               	xorlw	75
  2334  0F5B  1D03               	skipz
  2335  0F5C  0008               	return
  2336                           
  2337                           ;Main_B1.c: 190: myMain.PowerCount = 0;
  2338  0F5D  01B2               	clrf	_myMain+1
  2339                           
  2340                           ;Main_B1.c: 191: myMain.PowerON = 1;
  2341  0F5E  1431               	bsf	_myMain,0
  2342                           
  2343                           ;Main_B1.c: 196: ;;
  2344                           ;Main_B1.c: 197: myMain.SelfTest = 1;
  2345  0F5F  1631               	bsf	_myMain,4
  2346                           
  2347                           ;Main_B1.c: 206: }
  2348                           ;Main_B1.c: 207: } else {
  2349  0F60  0008               	return
  2350  0F61                     l4711:	
  2351                           
  2352                           ;Main_B1.c: 208: myMain.PowerCount++;
  2353  0F61  3001               	movlw	1
  2354  0F62  00D7               	movwf	??_my_MainTimer
  2355  0F63  0857               	movf	??_my_MainTimer,w
  2356  0F64  07B2               	addwf	_myMain+1,f
  2357                           
  2358                           ;Main_B1.c: 209: if (myMain.PowerCount == (1000 / 20)) {
  2359  0F65  0832               	movf	_myMain+1,w
  2360  0F66  3A32               	xorlw	50
  2361  0F67  1D03               	skipz
  2362  0F68  0008               	return
  2363                           
  2364                           ;Main_B1.c: 210: myMain.PowerCount = 0;
  2365  0F69  01B2               	clrf	_myMain+1
  2366  0F6A  0008               	return
  2367  0F6B                     __end_of_my_MainTimer:	
  2368                           
  2369                           	psect	text2
  2370  07FF                     __ptext2:	
  2371 ;; *************** function _myMain_Initialization *****************
  2372 ;; Defined at:
  2373 ;;		line 170 in file "../src/Main_B1.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		None
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2387 ;;      Params:         0       0       0       0
  2388 ;;      Locals:         0       0       0       0
  2389 ;;      Temps:          0       0       0       0
  2390 ;;      Totals:         0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used:    1
  2393 ;; Hardware stack levels required when called:    3
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _myMain_Initialization
  2403  07FF                     _myMain_Initialization:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _myMain_Initialization: []
  2407  07FF  0008               	return
  2408  0800                     __end_of_myMain_Initialization:	
  2409                           
  2410                           	psect	text3
  2411  0FBF                     __ptext3:	
  2412 ;; *************** function _getTemp_AD *****************
  2413 ;; Defined at:
  2414 ;;		line 15 in file "../src/OverTemperature_B1.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  channel         1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  channel         1    4[BANK0 ] unsigned char 
  2419 ;;  ADRES           1    5[BANK0 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2429 ;;      Params:         0       0       0       0
  2430 ;;      Locals:         0       2       0       0
  2431 ;;      Temps:          0       2       0       0
  2432 ;;      Totals:         0       4       0       0
  2433 ;;Total ram usage:        4 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    5
  2436 ;; This function calls:
  2437 ;;		_getAD
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _getTemp_AD
  2445  0FBF                     _getTemp_AD:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _getTemp_AD: [wreg+status,2+status,0+pclath+cstack]
  2449                           ;getTemp_AD@channel stored from wreg
  2450  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0FC1  00DB               	movwf	getTemp_AD@channel
  2453                           
  2454                           ;OverTemperature_B1.c: 16: ADtype ADRES = 0;
  2455  0FC2  01DC               	clrf	getTemp_AD@ADRES
  2456                           
  2457                           ;OverTemperature_B1.c: 19: if (Temp.ADtoGO == 1) {
  2458  0FC3  1D44               	btfss	_Temp,2
  2459  0FC4  0008               	return
  2460                           
  2461                           ;OverTemperature_B1.c: 21: ADRES = getAD(channel, 0x70);
  2462  0FC5  3070               	movlw	112
  2463  0FC6  00D9               	movwf	??_getTemp_AD
  2464  0FC7  0859               	movf	??_getTemp_AD,w
  2465  0FC8  00D7               	movwf	getAD@adcon1
  2466  0FC9  085B               	movf	getTemp_AD@channel,w
  2467  0FCA  158A  27A3  158A   	fcall	_getAD
  2468  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0FCF  00DA               	movwf	??_getTemp_AD+1
  2471  0FD0  085A               	movf	??_getTemp_AD+1,w
  2472  0FD1  00DC               	movwf	getTemp_AD@ADRES
  2473                           
  2474                           ;OverTemperature_B1.c: 29: if (ADRES > 0) {
  2475  0FD2  085C               	movf	getTemp_AD@ADRES,w
  2476  0FD3  1903               	btfsc	3,2
  2477  0FD4  0008               	return
  2478                           
  2479                           ;OverTemperature_B1.c: 30: if (Temp.ADV < ADRES) {
  2480  0FD5  085C               	movf	getTemp_AD@ADRES,w
  2481  0FD6  024A               	subwf	_Temp+6,w
  2482  0FD7  1803               	skipnc
  2483  0FD8  0008               	return
  2484                           
  2485                           ;OverTemperature_B1.c: 31: Temp.ADV = ADRES;
  2486  0FD9  085C               	movf	getTemp_AD@ADRES,w
  2487  0FDA  00D9               	movwf	??_getTemp_AD
  2488  0FDB  0859               	movf	??_getTemp_AD,w
  2489  0FDC  00CA               	movwf	_Temp+6
  2490  0FDD  0008               	return
  2491  0FDE                     __end_of_getTemp_AD:	
  2492                           
  2493                           	psect	text4
  2494  0211                     __ptext4:	
  2495 ;; *************** function _getPIR_AD *****************
  2496 ;; Defined at:
  2497 ;;		line 348 in file "../src/PIR_B1.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  channel1        1    wreg     unsigned char 
  2500 ;;  channel2        1    9[BANK0 ] unsigned char 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  channel1        1   14[BANK0 ] unsigned char 
  2503 ;;  i               1   17[BANK0 ] unsigned char 
  2504 ;;  VRAD            1   16[BANK0 ] unsigned char 
  2505 ;;  VRAD1           1   15[BANK0 ] unsigned char 
  2506 ;;  j               1   13[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;		None               void
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2516 ;;      Params:         0       1       0       0
  2517 ;;      Locals:         0       5       0       0
  2518 ;;      Temps:          0       3       0       0
  2519 ;;      Totals:         0       9       0       0
  2520 ;;Total ram usage:        9 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    5
  2523 ;; This function calls:
  2524 ;;		___awdiv
  2525 ;;		___lwdiv
  2526 ;;		_getAD
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _getPIR_AD
  2534  0211                     _getPIR_AD:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _getPIR_AD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2538                           ;getPIR_AD@channel1 stored from wreg
  2539  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0213  00E5               	movwf	getPIR_AD@channel1
  2542                           
  2543                           ;PIR_B1.c: 349: char i = 0, j = 0;
  2544  0214  01E8               	clrf	getPIR_AD@i
  2545  0215  01E4               	clrf	getPIR_AD@j
  2546                           
  2547                           ;PIR_B1.c: 350: char VRAD = 0, VRAD1 = 0;
  2548  0216  01E7               	clrf	getPIR_AD@VRAD
  2549  0217  01E6               	clrf	getPIR_AD@VRAD1
  2550                           
  2551                           ;PIR_B1.c: 351: if (_PIR.ADtoGO == 1 && _PIR.GO == 0) {
  2552  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2554  021A  1CA0               	btfss	__PIR^(0+128),1
  2555  021B  0008               	return
  2556  021C  1920               	btfsc	__PIR^(0+128),2
  2557  021D  0008               	return
  2558                           
  2559                           ;PIR_B1.c: 352: _PIR.GO = 1;
  2560  021E  1520               	bsf	__PIR^(0+128),2
  2561                           
  2562                           ;PIR_B1.c: 359: VRAD1 = getAD(channel1, 0x70);
  2563  021F  3070               	movlw	112
  2564  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0222  00E1               	movwf	??_getPIR_AD
  2567  0223  0861               	movf	??_getPIR_AD,w
  2568  0224  00D7               	movwf	getAD@adcon1
  2569  0225  0865               	movf	getPIR_AD@channel1,w
  2570  0226  158A  27A3  118A   	fcall	_getAD
  2571  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2572  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2573  022B  00E2               	movwf	??_getPIR_AD+1
  2574  022C  0862               	movf	??_getPIR_AD+1,w
  2575  022D  00E6               	movwf	getPIR_AD@VRAD1
  2576                           
  2577                           ;PIR_B1.c: 360: VRAD = VRAD1 / 25;
  2578  022E  3019               	movlw	25
  2579  022F  00D7               	movwf	___awdiv@divisor
  2580  0230  3000               	movlw	0
  2581  0231  00D8               	movwf	___awdiv@divisor+1
  2582  0232  0866               	movf	getPIR_AD@VRAD1,w
  2583  0233  00E1               	movwf	??_getPIR_AD
  2584  0234  01E2               	clrf	??_getPIR_AD+1
  2585  0235  0861               	movf	??_getPIR_AD,w
  2586  0236  00D9               	movwf	___awdiv@dividend
  2587  0237  0862               	movf	??_getPIR_AD+1,w
  2588  0238  00DA               	movwf	___awdiv@dividend+1
  2589  0239  118A  2590  118A   	fcall	___awdiv
  2590  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2591  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2592  023E  0857               	movf	?___awdiv,w
  2593  023F  00E3               	movwf	??_getPIR_AD+2
  2594  0240  0863               	movf	??_getPIR_AD+2,w
  2595  0241  00E7               	movwf	getPIR_AD@VRAD
  2596                           
  2597                           ;PIR_B1.c: 361: _PIR.SignalAD = getAD(channel2, 0x70);
  2598  0242  3070               	movlw	112
  2599  0243  00E1               	movwf	??_getPIR_AD
  2600  0244  0861               	movf	??_getPIR_AD,w
  2601  0245  00D7               	movwf	getAD@adcon1
  2602  0246  0860               	movf	getPIR_AD@channel2,w
  2603  0247  158A  27A3  118A   	fcall	_getAD
  2604  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2605  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2606  024C  00E2               	movwf	??_getPIR_AD+1
  2607  024D  0862               	movf	??_getPIR_AD+1,w
  2608  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2609  024F  1303               	bcf	3,6	;RP1=0, select bank1
  2610  0250  00A1               	movwf	(__PIR^(0+128)+1)
  2611                           
  2612                           ;PIR_B1.c: 375: if (VRAD < 1) {
  2613  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0253  08E7               	movf	getPIR_AD@VRAD,f
  2616  0254  1D03               	skipz
  2617  0255  2A58               	goto	l4635
  2618                           
  2619                           ;PIR_B1.c: 376: _PIR.CloseTimeValue = 5;
  2620  0256  3005               	movlw	5
  2621  0257  2A5E               	goto	L1
  2622  0258                     l4635:	
  2623                           ;PIR_B1.c: 377: } else if (VRAD < 3) {
  2624                           
  2625  0258  3003               	movlw	3
  2626  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2627  025A  0267               	subwf	getPIR_AD@VRAD,w
  2628  025B  1803               	skipnc
  2629  025C  2A63               	goto	l4639
  2630                           
  2631                           ;PIR_B1.c: 378: _PIR.CloseTimeValue = 60;
  2632  025D  303C               	movlw	60
  2633  025E                     L1:	
  2634  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2635  025F  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0260  00C3               	movwf	(__PIR^(0+128)+35)
  2637  0261  3000               	movlw	0
  2638  0262  2A89               	goto	L5
  2639  0263                     l4639:	
  2640                           ;PIR_B1.c: 379: } else if (VRAD < 5) {
  2641                           
  2642  0263  3005               	movlw	5
  2643  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0265  0267               	subwf	getPIR_AD@VRAD,w
  2645  0266  1803               	skipnc
  2646  0267  2A6E               	goto	l4643
  2647                           
  2648                           ;PIR_B1.c: 380: _PIR.CloseTimeValue = 300;
  2649  0268  302C               	movlw	44
  2650  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2651  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2652  026B  00C3               	movwf	(__PIR^(0+128)+35)
  2653  026C  3001               	movlw	1
  2654  026D  2A89               	goto	L5
  2655  026E                     l4643:	
  2656                           ;PIR_B1.c: 381: } else if (VRAD < 7) {
  2657                           
  2658  026E  3007               	movlw	7
  2659  026F  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0270  0267               	subwf	getPIR_AD@VRAD,w
  2661  0271  1803               	skipnc
  2662  0272  2A79               	goto	l4647
  2663                           
  2664                           ;PIR_B1.c: 382: _PIR.CloseTimeValue = 600;
  2665  0273  3058               	movlw	88
  2666  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0276  00C3               	movwf	(__PIR^(0+128)+35)
  2669  0277  3002               	movlw	2
  2670  0278  2A89               	goto	L5
  2671  0279                     l4647:	
  2672                           ;PIR_B1.c: 383: } else if (VRAD < 9) {
  2673                           
  2674  0279  3009               	movlw	9
  2675  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2676  027B  0267               	subwf	getPIR_AD@VRAD,w
  2677  027C  1803               	skipnc
  2678  027D  2A84               	goto	l4651
  2679                           
  2680                           ;PIR_B1.c: 384: _PIR.CloseTimeValue = 900;
  2681  027E  3084               	movlw	132
  2682  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2683  0280  1303               	bcf	3,6	;RP1=0, select bank1
  2684  0281  00C3               	movwf	(__PIR^(0+128)+35)
  2685  0282  3003               	movlw	3
  2686  0283  2A89               	goto	L5
  2687  0284                     l4651:	
  2688                           ;PIR_B1.c: 385: } else {
  2689                           
  2690                           
  2691                           ;PIR_B1.c: 386: _PIR.CloseTimeValue = 1200;
  2692  0284  30B0               	movlw	176
  2693  0285  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0286  1303               	bcf	3,6	;RP1=0, select bank1
  2695  0287  00C3               	movwf	(__PIR^(0+128)+35)
  2696  0288  3004               	movlw	4
  2697  0289                     L5:	
  2698  0289  00C4               	movwf	(__PIR^(0+128)+36)
  2699                           
  2700                           ;PIR_B1.c: 387: }
  2701                           ;PIR_B1.c: 396: _PIR.TenAverage[_PIR.TenCount] = _PIR.SignalAD;
  2702  028A  0821               	movf	(__PIR^(0+128)+1),w
  2703  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2704  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2705  028D  00E1               	movwf	??_getPIR_AD
  2706  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2707  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2708  0290  0824               	movf	(__PIR^(0+128)+4),w
  2709  0291  3EA5               	addlw	(__PIR+5)& (0+255)
  2710  0292  0084               	movwf	4
  2711  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0295  0861               	movf	??_getPIR_AD,w
  2714  0296  1383               	bcf	3,7	;select IRP bank1
  2715  0297  0080               	movwf	0
  2716                           
  2717                           ;PIR_B1.c: 397: for (i = 0; i < 10; i++) {
  2718  0298  01E8               	clrf	getPIR_AD@i
  2719  0299  300A               	movlw	10
  2720  029A  0268               	subwf	getPIR_AD@i,w
  2721  029B  1803               	btfsc	3,0
  2722  029C  2AB9               	goto	l4667
  2723  029D                     l4661:	
  2724                           
  2725                           ;PIR_B1.c: 398: _PIR.TenAverageValue += _PIR.TenAverage[i];
  2726  029D  0868               	movf	getPIR_AD@i,w
  2727  029E  3EA5               	addlw	(__PIR+5)& (0+255)
  2728  029F  0084               	movwf	4
  2729  02A0  0800               	movf	0,w
  2730  02A1  00E1               	movwf	??_getPIR_AD
  2731  02A2  01E2               	clrf	??_getPIR_AD+1
  2732  02A3  0861               	movf	??_getPIR_AD,w
  2733  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2734  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2735  02A6  07AF               	addwf	(__PIR^(0+128)+15),f
  2736  02A7  1803               	skipnc
  2737  02A8  0AB0               	incf	((__PIR+1)^(0+128)+15),f
  2738  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2739  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2740  02AB  0862               	movf	??_getPIR_AD+1,w
  2741  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2742  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2743  02AE  07B0               	addwf	((__PIR+1)^(0+128)+15),f
  2744  02AF  3001               	movlw	1
  2745  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2746  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2747  02B2  00E1               	movwf	??_getPIR_AD
  2748  02B3  0861               	movf	??_getPIR_AD,w
  2749  02B4  07E8               	addwf	getPIR_AD@i,f
  2750  02B5  300A               	movlw	10
  2751  02B6  0268               	subwf	getPIR_AD@i,w
  2752  02B7  1C03               	skipc
  2753  02B8  2A9D               	goto	l4661
  2754  02B9                     l4667:	
  2755                           
  2756                           ;PIR_B1.c: 399: }
  2757                           ;PIR_B1.c: 400: _PIR.HundredAverage[_PIR.HundreCount] = (_PIR.TenAverageValue / 10);
  2758  02B9  300A               	movlw	10
  2759  02BA  00D7               	movwf	___lwdiv@divisor
  2760  02BB  3000               	movlw	0
  2761  02BC  00D8               	movwf	___lwdiv@divisor+1
  2762  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2763  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2764  02BF  0830               	movf	((__PIR+1)^(0+128)+15),w
  2765  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2766  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2767  02C2  01DA               	clrf	___lwdiv@dividend+1
  2768  02C3  07DA               	addwf	___lwdiv@dividend+1,f
  2769  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2770  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2771  02C6  082F               	movf	(__PIR^(0+128)+15),w
  2772  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2773  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  2774  02C9  01D9               	clrf	___lwdiv@dividend
  2775  02CA  07D9               	addwf	___lwdiv@dividend,f
  2776  02CB  118A  26D5  118A   	fcall	___lwdiv
  2777  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2778  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2779  02D0  0857               	movf	?___lwdiv,w
  2780  02D1  00E1               	movwf	??_getPIR_AD
  2781  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2782  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2783  02D4  0831               	movf	(__PIR^(0+128)+17),w
  2784  02D5  3EB2               	addlw	(__PIR+18)& (0+255)
  2785  02D6  0084               	movwf	4
  2786  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2787  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2788  02D9  0861               	movf	??_getPIR_AD,w
  2789  02DA  1383               	bcf	3,7	;select IRP bank1
  2790  02DB  0080               	movwf	0
  2791                           
  2792                           ;PIR_B1.c: 401: _PIR.TenAverageValue = 0;
  2793  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2794  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2795  02DE  01AF               	clrf	(__PIR^(0+128)+15)
  2796  02DF  01B0               	clrf	((__PIR+1)^(0+128)+15)
  2797                           
  2798                           ;PIR_B1.c: 403: for (i = 0; i <= 9; i++) {
  2799  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2800  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2801  02E2  01E8               	clrf	getPIR_AD@i
  2802  02E3  300A               	movlw	10
  2803  02E4  0268               	subwf	getPIR_AD@i,w
  2804  02E5  1803               	btfsc	3,0
  2805  02E6  2B03               	goto	l4683
  2806  02E7                     l4677:	
  2807                           
  2808                           ;PIR_B1.c: 404: _PIR.HundredAverageValue += _PIR.HundredAverage[i];
  2809  02E7  0868               	movf	getPIR_AD@i,w
  2810  02E8  3EB2               	addlw	(__PIR+18)& (0+255)
  2811  02E9  0084               	movwf	4
  2812  02EA  0800               	movf	0,w
  2813  02EB  00E1               	movwf	??_getPIR_AD
  2814  02EC  01E2               	clrf	??_getPIR_AD+1
  2815  02ED  0861               	movf	??_getPIR_AD,w
  2816  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2817  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2818  02F0  07BC               	addwf	(__PIR^(0+128)+28),f
  2819  02F1  1803               	skipnc
  2820  02F2  0ABD               	incf	((__PIR+1)^(0+128)+28),f
  2821  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02F5  0862               	movf	??_getPIR_AD+1,w
  2824  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2825  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2826  02F8  07BD               	addwf	((__PIR+1)^(0+128)+28),f
  2827  02F9  3001               	movlw	1
  2828  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2829  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2830  02FC  00E1               	movwf	??_getPIR_AD
  2831  02FD  0861               	movf	??_getPIR_AD,w
  2832  02FE  07E8               	addwf	getPIR_AD@i,f
  2833  02FF  300A               	movlw	10
  2834  0300  0268               	subwf	getPIR_AD@i,w
  2835  0301  1C03               	skipc
  2836  0302  2AE7               	goto	l4677
  2837  0303                     l4683:	
  2838                           
  2839                           ;PIR_B1.c: 405: }
  2840                           ;PIR_B1.c: 406: _PIR.ReferenceVoltage = (_PIR.HundredAverageValue / 10);
  2841  0303  300A               	movlw	10
  2842  0304  00D7               	movwf	___lwdiv@divisor
  2843  0305  3000               	movlw	0
  2844  0306  00D8               	movwf	___lwdiv@divisor+1
  2845  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2846  0308  1303               	bcf	3,6	;RP1=0, select bank1
  2847  0309  083D               	movf	((__PIR+1)^(0+128)+28),w
  2848  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2849  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2850  030C  01DA               	clrf	___lwdiv@dividend+1
  2851  030D  07DA               	addwf	___lwdiv@dividend+1,f
  2852  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2853  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2854  0310  083C               	movf	(__PIR^(0+128)+28),w
  2855  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0313  01D9               	clrf	___lwdiv@dividend
  2858  0314  07D9               	addwf	___lwdiv@dividend,f
  2859  0315  118A  26D5  118A   	fcall	___lwdiv
  2860  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2862  031A  0857               	movf	?___lwdiv,w
  2863  031B  00E1               	movwf	??_getPIR_AD
  2864  031C  0861               	movf	??_getPIR_AD,w
  2865  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2866  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2867  031F  00A3               	movwf	(__PIR^(0+128)+3)
  2868                           
  2869                           ;PIR_B1.c: 407: _PIR.HundredAverageValue = 0;
  2870  0320  01BC               	clrf	(__PIR^(0+128)+28)
  2871  0321  01BD               	clrf	((__PIR+1)^(0+128)+28)
  2872                           
  2873                           ;PIR_B1.c: 409: if (_PIR.TenCount < 10) {
  2874  0322  300A               	movlw	10
  2875  0323  0224               	subwf	(__PIR^(0+128)+4),w
  2876  0324  1803               	skipnc
  2877  0325  2B2F               	goto	l4691
  2878                           
  2879                           ;PIR_B1.c: 410: _PIR.TenCount++;
  2880  0326  3001               	movlw	1
  2881  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0329  00E1               	movwf	??_getPIR_AD
  2884  032A  0861               	movf	??_getPIR_AD,w
  2885  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2886  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2887  032D  07A4               	addwf	(__PIR^(0+128)+4),f
  2888                           
  2889                           ;PIR_B1.c: 411: } else {
  2890  032E  0008               	return
  2891  032F                     l4691:	
  2892                           
  2893                           ;PIR_B1.c: 412: _PIR.TenCount = 0;
  2894  032F  01A4               	clrf	(__PIR^(0+128)+4)
  2895                           
  2896                           ;PIR_B1.c: 413: if (_PIR.HundreCount < 10)
  2897  0330  300A               	movlw	10
  2898  0331  0231               	subwf	(__PIR^(0+128)+17),w
  2899  0332  1803               	skipnc
  2900  0333  2B3D               	goto	l4697
  2901                           
  2902                           ;PIR_B1.c: 414: _PIR.HundreCount++;
  2903  0334  3001               	movlw	1
  2904  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0337  00E1               	movwf	??_getPIR_AD
  2907  0338  0861               	movf	??_getPIR_AD,w
  2908  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2909  033A  1303               	bcf	3,6	;RP1=0, select bank1
  2910  033B  07B1               	addwf	(__PIR^(0+128)+17),f
  2911  033C  0008               	return
  2912  033D                     l4697:	
  2913                           
  2914                           ;PIR_B1.c: 415: else
  2915                           ;PIR_B1.c: 416: _PIR.HundreCount = 0;
  2916  033D  01B1               	clrf	(__PIR^(0+128)+17)
  2917  033E  0008               	return
  2918  033F                     __end_of_getPIR_AD:	
  2919                           
  2920                           	psect	text5
  2921  06D5                     __ptext5:	
  2922 ;; *************** function ___lwdiv *****************
  2923 ;; Defined at:
  2924 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  divisor         2    0[BANK0 ] unsigned int 
  2927 ;;  dividend        2    2[BANK0 ] unsigned int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  quotient        2    6[BANK0 ] unsigned int 
  2930 ;;  counter         1    5[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    0[BANK0 ] unsigned int 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         0       4       0       0
  2941 ;;      Locals:         0       3       0       0
  2942 ;;      Temps:          0       1       0       0
  2943 ;;      Totals:         0       8       0       0
  2944 ;;Total ram usage:        8 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    3
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_getPIR_AD
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function ___lwdiv
  2956  06D5                     ___lwdiv:	
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2960  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2961  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2962  06D7  01DD               	clrf	___lwdiv@quotient
  2963  06D8  01DE               	clrf	___lwdiv@quotient+1
  2964  06D9  0858               	movf	___lwdiv@divisor+1,w
  2965  06DA  0457               	iorwf	___lwdiv@divisor,w
  2966  06DB  1903               	skipnz
  2967  06DC  2F0E               	goto	l4549
  2968  06DD  01DC               	clrf	___lwdiv@counter
  2969  06DE  0ADC               	incf	___lwdiv@counter,f
  2970  06DF                     l4537:	
  2971  06DF  1BD8               	btfsc	___lwdiv@divisor+1,7
  2972  06E0  2EED               	goto	l4539
  2973  06E1  3001               	movlw	1
  2974  06E2                     u5325:	
  2975  06E2  1003               	clrc
  2976  06E3  0DD7               	rlf	___lwdiv@divisor,f
  2977  06E4  0DD8               	rlf	___lwdiv@divisor+1,f
  2978  06E5  3EFF               	addlw	-1
  2979  06E6  1D03               	skipz
  2980  06E7  2EE2               	goto	u5325
  2981  06E8  3001               	movlw	1
  2982  06E9  00DB               	movwf	??___lwdiv
  2983  06EA  085B               	movf	??___lwdiv,w
  2984  06EB  07DC               	addwf	___lwdiv@counter,f
  2985  06EC  2EDF               	goto	l4537
  2986  06ED                     l4539:	
  2987  06ED  3001               	movlw	1
  2988  06EE                     u5345:	
  2989  06EE  1003               	clrc
  2990  06EF  0DDD               	rlf	___lwdiv@quotient,f
  2991  06F0  0DDE               	rlf	___lwdiv@quotient+1,f
  2992  06F1  3EFF               	addlw	-1
  2993  06F2  1D03               	skipz
  2994  06F3  2EEE               	goto	u5345
  2995  06F4  0858               	movf	___lwdiv@divisor+1,w
  2996  06F5  025A               	subwf	___lwdiv@dividend+1,w
  2997  06F6  1D03               	skipz
  2998  06F7  2EFA               	goto	u5355
  2999  06F8  0857               	movf	___lwdiv@divisor,w
  3000  06F9  0259               	subwf	___lwdiv@dividend,w
  3001  06FA                     u5355:	
  3002  06FA  1C03               	skipc
  3003  06FB  2F03               	goto	l4545
  3004  06FC  0857               	movf	___lwdiv@divisor,w
  3005  06FD  02D9               	subwf	___lwdiv@dividend,f
  3006  06FE  0858               	movf	___lwdiv@divisor+1,w
  3007  06FF  1C03               	skipc
  3008  0700  03DA               	decf	___lwdiv@dividend+1,f
  3009  0701  02DA               	subwf	___lwdiv@dividend+1,f
  3010  0702  145D               	bsf	___lwdiv@quotient,0
  3011  0703                     l4545:	
  3012  0703  3001               	movlw	1
  3013  0704                     u5365:	
  3014  0704  1003               	clrc
  3015  0705  0CD8               	rrf	___lwdiv@divisor+1,f
  3016  0706  0CD7               	rrf	___lwdiv@divisor,f
  3017  0707  3EFF               	addlw	-1
  3018  0708  1D03               	skipz
  3019  0709  2F04               	goto	u5365
  3020  070A  3001               	movlw	1
  3021  070B  02DC               	subwf	___lwdiv@counter,f
  3022  070C  1D03               	btfss	3,2
  3023  070D  2EED               	goto	l4539
  3024  070E                     l4549:	
  3025  070E  085E               	movf	___lwdiv@quotient+1,w
  3026  070F  01D8               	clrf	?___lwdiv+1
  3027  0710  07D8               	addwf	?___lwdiv+1,f
  3028  0711  085D               	movf	___lwdiv@quotient,w
  3029  0712  01D7               	clrf	?___lwdiv
  3030  0713  07D7               	addwf	?___lwdiv,f
  3031  0714  0008               	return
  3032  0715                     __end_of___lwdiv:	
  3033                           
  3034                           	psect	text6
  3035  0590                     __ptext6:	
  3036 ;; *************** function ___awdiv *****************
  3037 ;; Defined at:
  3038 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  divisor         2    0[BANK0 ] int 
  3041 ;;  dividend        2    2[BANK0 ] int 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  quotient        2    7[BANK0 ] int 
  3044 ;;  sign            1    6[BANK0 ] unsigned char 
  3045 ;;  counter         1    5[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2    0[BANK0 ] int 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3055 ;;      Params:         0       4       0       0
  3056 ;;      Locals:         0       4       0       0
  3057 ;;      Temps:          0       1       0       0
  3058 ;;      Totals:         0       9       0       0
  3059 ;;Total ram usage:        9 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    3
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_getPIR_AD
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function ___awdiv
  3071  0590                     ___awdiv:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3075  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0591  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0592  01DD               	clrf	___awdiv@sign
  3078  0593  1FD8               	btfss	___awdiv@divisor+1,7
  3079  0594  2D9C               	goto	l4491
  3080  0595  09D7               	comf	___awdiv@divisor,f
  3081  0596  09D8               	comf	___awdiv@divisor+1,f
  3082  0597  0AD7               	incf	___awdiv@divisor,f
  3083  0598  1903               	skipnz
  3084  0599  0AD8               	incf	___awdiv@divisor+1,f
  3085  059A  01DD               	clrf	___awdiv@sign
  3086  059B  0ADD               	incf	___awdiv@sign,f
  3087  059C                     l4491:	
  3088  059C  1FDA               	btfss	___awdiv@dividend+1,7
  3089  059D  2DA7               	goto	l4497
  3090  059E  09D9               	comf	___awdiv@dividend,f
  3091  059F  09DA               	comf	___awdiv@dividend+1,f
  3092  05A0  0AD9               	incf	___awdiv@dividend,f
  3093  05A1  1903               	skipnz
  3094  05A2  0ADA               	incf	___awdiv@dividend+1,f
  3095  05A3  3001               	movlw	1
  3096  05A4  00DB               	movwf	??___awdiv
  3097  05A5  085B               	movf	??___awdiv,w
  3098  05A6  06DD               	xorwf	___awdiv@sign,f
  3099  05A7                     l4497:	
  3100  05A7  01DE               	clrf	___awdiv@quotient
  3101  05A8  01DF               	clrf	___awdiv@quotient+1
  3102  05A9  0858               	movf	___awdiv@divisor+1,w
  3103  05AA  0457               	iorwf	___awdiv@divisor,w
  3104  05AB  1903               	skipnz
  3105  05AC  2DDE               	goto	l4519
  3106  05AD  01DC               	clrf	___awdiv@counter
  3107  05AE  0ADC               	incf	___awdiv@counter,f
  3108  05AF                     l4507:	
  3109  05AF  1BD8               	btfsc	___awdiv@divisor+1,7
  3110  05B0  2DBD               	goto	l4509
  3111  05B1  3001               	movlw	1
  3112  05B2                     u5245:	
  3113  05B2  1003               	clrc
  3114  05B3  0DD7               	rlf	___awdiv@divisor,f
  3115  05B4  0DD8               	rlf	___awdiv@divisor+1,f
  3116  05B5  3EFF               	addlw	-1
  3117  05B6  1D03               	skipz
  3118  05B7  2DB2               	goto	u5245
  3119  05B8  3001               	movlw	1
  3120  05B9  00DB               	movwf	??___awdiv
  3121  05BA  085B               	movf	??___awdiv,w
  3122  05BB  07DC               	addwf	___awdiv@counter,f
  3123  05BC  2DAF               	goto	l4507
  3124  05BD                     l4509:	
  3125  05BD  3001               	movlw	1
  3126  05BE                     u5265:	
  3127  05BE  1003               	clrc
  3128  05BF  0DDE               	rlf	___awdiv@quotient,f
  3129  05C0  0DDF               	rlf	___awdiv@quotient+1,f
  3130  05C1  3EFF               	addlw	-1
  3131  05C2  1D03               	skipz
  3132  05C3  2DBE               	goto	u5265
  3133  05C4  0858               	movf	___awdiv@divisor+1,w
  3134  05C5  025A               	subwf	___awdiv@dividend+1,w
  3135  05C6  1D03               	skipz
  3136  05C7  2DCA               	goto	u5275
  3137  05C8  0857               	movf	___awdiv@divisor,w
  3138  05C9  0259               	subwf	___awdiv@dividend,w
  3139  05CA                     u5275:	
  3140  05CA  1C03               	skipc
  3141  05CB  2DD3               	goto	l4515
  3142  05CC  0857               	movf	___awdiv@divisor,w
  3143  05CD  02D9               	subwf	___awdiv@dividend,f
  3144  05CE  0858               	movf	___awdiv@divisor+1,w
  3145  05CF  1C03               	skipc
  3146  05D0  03DA               	decf	___awdiv@dividend+1,f
  3147  05D1  02DA               	subwf	___awdiv@dividend+1,f
  3148  05D2  145E               	bsf	___awdiv@quotient,0
  3149  05D3                     l4515:	
  3150  05D3  3001               	movlw	1
  3151  05D4                     u5285:	
  3152  05D4  1003               	clrc
  3153  05D5  0CD8               	rrf	___awdiv@divisor+1,f
  3154  05D6  0CD7               	rrf	___awdiv@divisor,f
  3155  05D7  3EFF               	addlw	-1
  3156  05D8  1D03               	skipz
  3157  05D9  2DD4               	goto	u5285
  3158  05DA  3001               	movlw	1
  3159  05DB  02DC               	subwf	___awdiv@counter,f
  3160  05DC  1D03               	btfss	3,2
  3161  05DD  2DBD               	goto	l4509
  3162  05DE                     l4519:	
  3163  05DE  085D               	movf	___awdiv@sign,w
  3164  05DF  1903               	btfsc	3,2
  3165  05E0  2DE6               	goto	l4523
  3166  05E1  09DE               	comf	___awdiv@quotient,f
  3167  05E2  09DF               	comf	___awdiv@quotient+1,f
  3168  05E3  0ADE               	incf	___awdiv@quotient,f
  3169  05E4  1903               	skipnz
  3170  05E5  0ADF               	incf	___awdiv@quotient+1,f
  3171  05E6                     l4523:	
  3172  05E6  085F               	movf	___awdiv@quotient+1,w
  3173  05E7  01D8               	clrf	?___awdiv+1
  3174  05E8  07D8               	addwf	?___awdiv+1,f
  3175  05E9  085E               	movf	___awdiv@quotient,w
  3176  05EA  01D7               	clrf	?___awdiv
  3177  05EB  07D7               	addwf	?___awdiv,f
  3178  05EC  0008               	return
  3179  05ED                     __end_of___awdiv:	
  3180                           
  3181                           	psect	text7
  3182  0FDE                     __ptext7:	
  3183 ;; *************** function _getCDS_AD *****************
  3184 ;; Defined at:
  3185 ;;		line 48 in file "../src/CDS_B1.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  channel1        1    wreg     unsigned char 
  3188 ;;  channel2        1    2[BANK0 ] unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  channel1        1    7[BANK0 ] unsigned char 
  3191 ;;  j               1    6[BANK0 ] unsigned char 
  3192 ;;  i               1    5[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;		None               void
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3202 ;;      Params:         0       1       0       0
  3203 ;;      Locals:         0       3       0       0
  3204 ;;      Temps:          0       2       0       0
  3205 ;;      Totals:         0       6       0       0
  3206 ;;Total ram usage:        6 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    5
  3209 ;; This function calls:
  3210 ;;		_getAD
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _getCDS_AD
  3218  0FDE                     _getCDS_AD:	
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in _getCDS_AD: [wreg+status,2+status,0+pclath+cstack]
  3222                           ;getCDS_AD@channel1 stored from wreg
  3223  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0FE0  00DE               	movwf	getCDS_AD@channel1
  3226                           
  3227                           ;CDS_B1.c: 49: char i = 0, j = 0;
  3228  0FE1  01DC               	clrf	getCDS_AD@i
  3229  0FE2  01DD               	clrf	getCDS_AD@j
  3230                           
  3231                           ;CDS_B1.c: 50: if (_CDS.ADtoGO == 1) {
  3232  0FE3  1DBA               	btfss	__CDS,3
  3233  0FE4  0008               	return
  3234                           
  3235                           ;CDS_B1.c: 51: _CDS.GO = 1;
  3236  0FE5  14BA               	bsf	__CDS,1
  3237                           
  3238                           ;CDS_B1.c: 52: _CDS.VRAD = getAD(channel1, 0x70);
  3239  0FE6  3070               	movlw	112
  3240  0FE7  00DA               	movwf	??_getCDS_AD
  3241  0FE8  085A               	movf	??_getCDS_AD,w
  3242  0FE9  00D7               	movwf	getAD@adcon1
  3243  0FEA  085E               	movf	getCDS_AD@channel1,w
  3244  0FEB  158A  27A3  158A   	fcall	_getAD
  3245  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0FF0  00DB               	movwf	??_getCDS_AD+1
  3248  0FF1  085B               	movf	??_getCDS_AD+1,w
  3249  0FF2  00BC               	movwf	__CDS+2
  3250                           
  3251                           ;CDS_B1.c: 53: _CDS.SignalAD = getAD(channel2, 0x70);
  3252  0FF3  3070               	movlw	112
  3253  0FF4  00DA               	movwf	??_getCDS_AD
  3254  0FF5  085A               	movf	??_getCDS_AD,w
  3255  0FF6  00D7               	movwf	getAD@adcon1
  3256  0FF7  0859               	movf	getCDS_AD@channel2,w
  3257  0FF8  158A  27A3         	fcall	_getAD
  3258  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0FFC  00DB               	movwf	??_getCDS_AD+1
  3261  0FFD  085B               	movf	??_getCDS_AD+1,w
  3262  0FFE  00BD               	movwf	__CDS+3
  3263  0FFF  0008               	return
  3264  1000                     __end_of_getCDS_AD:	
  3265                           
  3266                           	psect	text8
  3267  0FA3                     __ptext8:	
  3268 ;; *************** function _getAD *****************
  3269 ;; Defined at:
  3270 ;;		line 434 in file "../src/MCU_B1.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  adcon0          1    wreg     unsigned char 
  3273 ;;  adcon1          1    0[BANK0 ] unsigned char 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  adcon0          1    1[BANK0 ] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      unsigned char 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3285 ;;      Params:         0       1       0       0
  3286 ;;      Locals:         0       1       0       0
  3287 ;;      Temps:          0       0       0       0
  3288 ;;      Totals:         0       2       0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    4
  3292 ;; This function calls:
  3293 ;;		_Timeout_Counter
  3294 ;;		_set_TimeoutCleared
  3295 ;; This function is called by:
  3296 ;;		_getCDS_AD
  3297 ;;		_getTemp_AD
  3298 ;;		_getPIR_AD
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _getAD
  3304  0FA3                     _getAD:	
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _getAD: [wreg+status,2+status,0+pclath+cstack]
  3308                           ;getAD@adcon0 stored from wreg
  3309  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0FA5  00D8               	movwf	getAD@adcon0
  3312                           
  3313                           ;MCU_B1.c: 435: ADCON0 = adcon0;
  3314  0FA6  0858               	movf	getAD@adcon0,w
  3315  0FA7  009F               	movwf	31	;volatile
  3316                           
  3317                           ;MCU_B1.c: 436: ADCON1 = adcon1;
  3318  0FA8  0857               	movf	getAD@adcon1,w
  3319  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  3320  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  3321  0FAB  009F               	movwf	31	;volatile
  3322                           
  3323                           ;MCU_B1.c: 437: GO_nDONE = 1;
  3324  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0FAE  149F               	bsf	31,1	;volatile
  3327                           
  3328                           ;MCU_B1.c: 438: while (GO_nDONE == 1 && myMain.Timeout == 0) {
  3329  0FAF  2FB3               	goto	l4255
  3330  0FB0                     l4253:	
  3331                           
  3332                           ;MCU_B1.c: 439: Timeout_Counter();
  3333  0FB0  118A  27EB  158A   	fcall	_Timeout_Counter
  3334  0FB3                     l4255:	
  3335  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0FB5  1C9F               	btfss	31,1	;volatile
  3338  0FB6  2FB9               	goto	l4259
  3339  0FB7  1D33               	btfss	_myMain+2,2
  3340  0FB8  2FB0               	goto	l4253
  3341  0FB9                     l4259:	
  3342                           
  3343                           ;MCU_B1.c: 440: };
  3344                           ;MCU_B1.c: 441: set_TimeoutCleared();
  3345  0FB9  158A  259B         	fcall	_set_TimeoutCleared
  3346                           
  3347                           ;MCU_B1.c: 442: return ADRES;
  3348  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0FBD  081E               	movf	30,w	;volatile
  3351  0FBE  0008               	return
  3352  0FBF                     __end_of_getAD:	
  3353                           
  3354                           	psect	text9
  3355  0D9B                     __ptext9:	
  3356 ;; *************** function _set_TimeoutCleared *****************
  3357 ;; Defined at:
  3358 ;;		line 281 in file "../src/Main_B1.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;		None               void
  3365 ;; Registers used:
  3366 ;;		status,2
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3372 ;;      Params:         0       0       0       0
  3373 ;;      Locals:         0       0       0       0
  3374 ;;      Temps:          0       0       0       0
  3375 ;;      Totals:         0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    3
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_getAD
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _set_TimeoutCleared
  3388  0D9B                     _set_TimeoutCleared:	
  3389                           
  3390                           ;Main_B1.c: 282: myMain.Timeout = 0;
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _set_TimeoutCleared: [status,2]
  3394  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0D9D  1133               	bcf	_myMain+2,2
  3397                           
  3398                           ;Main_B1.c: 283: myMain.Timeout_Counter = 0;
  3399  0D9E  01B4               	clrf	_myMain+3
  3400  0D9F  01B5               	clrf	_myMain+4
  3401  0DA0  0008               	return
  3402  0DA1                     __end_of_set_TimeoutCleared:	
  3403                           
  3404                           	psect	text10
  3405  07EB                     __ptext10:	
  3406 ;; *************** function _Timeout_Counter *****************
  3407 ;; Defined at:
  3408 ;;		line 272 in file "../src/Main_B1.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		wreg, status,2
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3422 ;;      Params:         0       0       0       0
  3423 ;;      Locals:         0       0       0       0
  3424 ;;      Temps:          0       0       0       0
  3425 ;;      Totals:         0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    3
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_getAD
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           
  3437                           ;psect for function _Timeout_Counter
  3438  07EB                     _Timeout_Counter:	
  3439                           
  3440                           ;Main_B1.c: 273: myMain.Timeout_Counter++;
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _Timeout_Counter: [wreg+status,2]
  3444  07EB  3001               	movlw	1
  3445  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  3446  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  3447  07EE  07B4               	addwf	_myMain+3,f
  3448  07EF  1803               	skipnc
  3449  07F0  0AB5               	incf	_myMain+4,f
  3450  07F1  3000               	movlw	0
  3451  07F2  07B5               	addwf	_myMain+4,f
  3452                           
  3453                           ;Main_B1.c: 274: if (myMain.Timeout_Counter == 25000) {
  3454  07F3  3061               	movlw	97
  3455  07F4  0635               	xorwf	_myMain+4,w
  3456  07F5  1D03               	skipz
  3457  07F6  2FF9               	goto	u4705
  3458  07F7  30A8               	movlw	168
  3459  07F8  0634               	xorwf	_myMain+3,w
  3460  07F9                     u4705:	
  3461  07F9  1D03               	skipz
  3462  07FA  0008               	return
  3463                           
  3464                           ;Main_B1.c: 275: myMain.Timeout_Counter = 0;
  3465  07FB  01B4               	clrf	_myMain+3
  3466  07FC  01B5               	clrf	_myMain+4
  3467                           
  3468                           ;Main_B1.c: 276: myMain.Timeout = 1;
  3469  07FD  1533               	bsf	_myMain+2,2
  3470  07FE  0008               	return
  3471  07FF                     __end_of_Timeout_Counter:	
  3472                           
  3473                           	psect	text11
  3474  0E7B                     __ptext11:	
  3475 ;; *************** function _WDT_Main *****************
  3476 ;; Defined at:
  3477 ;;		line 1116 in file "../src/MCU_B1.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3491 ;;      Params:         0       0       0       0
  3492 ;;      Locals:         0       0       0       0
  3493 ;;      Temps:          0       1       0       0
  3494 ;;      Totals:         0       1       0       0
  3495 ;;Total ram usage:        1 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    4
  3498 ;; This function calls:
  3499 ;;		_WDT_Clearing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _WDT_Main
  3507  0E7B                     _WDT_Main:	
  3508                           
  3509                           ;MCU_B1.c: 1117: if (WDT.Enable == 1) {
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _WDT_Main: [wreg+status,2+status,0+pclath+cstack]
  3513  0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0E7D  1C41               	btfss	_WDT,0
  3516  0E7E  0008               	return
  3517                           
  3518                           ;MCU_B1.c: 1118: if (WDT.Timer-- > 0) {
  3519  0E7F  3001               	movlw	1
  3520  0E80  02C2               	subwf	_WDT+1,f
  3521  0E81  0842               	movf	_WDT+1,w
  3522  0E82  3AFF               	xorlw	255
  3523  0E83  1903               	skipnz
  3524  0E84  0008               	return
  3525                           
  3526                           ;MCU_B1.c: 1119: WDT.Timer = 100;
  3527  0E85  3064               	movlw	100
  3528  0E86  00D7               	movwf	??_WDT_Main
  3529  0E87  0857               	movf	??_WDT_Main,w
  3530  0E88  00C2               	movwf	_WDT+1
  3531                           
  3532                           ;MCU_B1.c: 1120: WDT_Clearing();
  3533  0E89  118A  2002         	fcall	_WDT_Clearing
  3534  0E8B  0008               	return
  3535  0E8C                     __end_of_WDT_Main:	
  3536                           
  3537                           	psect	text12
  3538  0002                     __ptext12:	
  3539 ;; *************** function _WDT_Clearing *****************
  3540 ;; Defined at:
  3541 ;;		line 1126 in file "../src/MCU_B1.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;		None               void
  3548 ;; Registers used:
  3549 ;;		None
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3555 ;;      Params:         0       0       0       0
  3556 ;;      Locals:         0       0       0       0
  3557 ;;      Temps:          0       0       0       0
  3558 ;;      Totals:         0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    3
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_WDT_Main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function _WDT_Clearing
  3571  0002                     _WDT_Clearing:	
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in _WDT_Clearing: []
  3575  0002  0064               	clrwdt	;# 
  3576  0003  0008               	return
  3577  0004                     __end_of_WDT_Clearing:	
  3578                           
  3579                           	psect	text13
  3580  0D8A                     __ptext13:	
  3581 ;; *************** function _Temp_Main *****************
  3582 ;; Defined at:
  3583 ;;		line 57 in file "../src/OverTemperature_B1.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;		None               void
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3597 ;;      Params:         0       0       0       0
  3598 ;;      Locals:         0       0       0       0
  3599 ;;      Temps:          0       0       0       0
  3600 ;;      Totals:         0       0       0       0
  3601 ;;Total ram usage:        0 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    5
  3604 ;; This function calls:
  3605 ;;		_setTemp_Main
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _Temp_Main
  3613  0D8A                     _Temp_Main:	
  3614                           
  3615                           ;OverTemperature_B1.c: 59: setTemp_Main();
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _Temp_Main: [wreg+status,2+status,0+pclath+cstack]
  3619  0D8A  118A  23D3         	fcall	_setTemp_Main
  3620  0D8C  0008               	return
  3621  0D8D                     __end_of_Temp_Main:	
  3622                           
  3623                           	psect	text14
  3624  03D3                     __ptext14:	
  3625 ;; *************** function _setTemp_Main *****************
  3626 ;; Defined at:
  3627 ;;		line 64 in file "../src/OverTemperature_B1.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  AD              1   10[BANK0 ] unsigned char 
  3632 ;;  DangerValue     1    9[BANK0 ] unsigned char 
  3633 ;;  SafeValue       1    8[BANK0 ] unsigned char 
  3634 ;;  TempGO          1    7[BANK0 ] unsigned char 
  3635 ;;  error           1    6[BANK0 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;		None               void
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3645 ;;      Params:         0       0       0       0
  3646 ;;      Locals:         0       5       0       0
  3647 ;;      Temps:          0       1       0       0
  3648 ;;      Totals:         0       6       0       0
  3649 ;;Total ram usage:        6 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    4
  3652 ;; This function calls:
  3653 ;;		_getMain_All_Error_Status
  3654 ;;		_getMain_All_LightsStatus
  3655 ;; This function is called by:
  3656 ;;		_Temp_Main
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _setTemp_Main
  3662  03D3                     _setTemp_Main:	
  3663                           
  3664                           ;OverTemperature_B1.c: 65: char error = getMain_All_Error_Status(0);
  3665                           
  3666                           ;incstack = 0
  3667                           ; Regs used in _setTemp_Main: [wreg+status,2+status,0+pclath+cstack]
  3668  03D3  3000               	movlw	0
  3669  03D4  158A  2737  118A   	fcall	_getMain_All_Error_Status
  3670  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3671  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3672  03D9  00DC               	movwf	??_setTemp_Main
  3673  03DA  085C               	movf	??_setTemp_Main,w
  3674  03DB  00DD               	movwf	setTemp_Main@error
  3675                           
  3676                           ;OverTemperature_B1.c: 66: ADtype SafeValue = 0, DangerValue = 0, AD;
  3677  03DC  01DF               	clrf	setTemp_Main@SafeValue
  3678  03DD  01E0               	clrf	setTemp_Main@DangerValue
  3679                           
  3680                           ;OverTemperature_B1.c: 67: char TempGO = getMain_All_LightsStatus();
  3681  03DE  158A  25F6  118A   	fcall	_getMain_All_LightsStatus
  3682  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3683  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3684  03E3  00DC               	movwf	??_setTemp_Main
  3685  03E4  085C               	movf	??_setTemp_Main,w
  3686  03E5  00DE               	movwf	setTemp_Main@TempGO
  3687                           
  3688                           ;OverTemperature_B1.c: 69: if (Temp.Enable == 1) {
  3689  03E6  1C44               	btfss	_Temp,0
  3690  03E7  2C4A               	goto	l942
  3691                           
  3692                           ;OverTemperature_B1.c: 77: if (Temp.ADtoGO == 0) {
  3693  03E8  1944               	btfsc	_Temp,2
  3694  03E9  2C06               	goto	l4445
  3695                           
  3696                           ;OverTemperature_B1.c: 78: if ((TempGO == 1 && Temp.ERROR == 0) || Temp.ERROR == 1) {
  3697  03EA  085E               	movf	setTemp_Main@TempGO,w
  3698  03EB  3A01               	xorlw	1
  3699  03EC  1D03               	skipz
  3700  03ED  2BF0               	goto	l948
  3701  03EE  1CC4               	btfss	_Temp,1
  3702  03EF  2BF2               	goto	l4437
  3703  03F0                     l948:	
  3704  03F0  1CC4               	btfss	_Temp,1
  3705  03F1  2C03               	goto	l4443
  3706  03F2                     l4437:	
  3707                           
  3708                           ;OverTemperature_B1.c: 79: Temp.Time++;
  3709  03F2  3001               	movlw	1
  3710  03F3  07C5               	addwf	_Temp+1,f
  3711  03F4  1803               	skipnc
  3712  03F5  0AC6               	incf	_Temp+2,f
  3713  03F6  3000               	movlw	0
  3714  03F7  07C6               	addwf	_Temp+2,f
  3715                           
  3716                           ;OverTemperature_B1.c: 80: if (Temp.Time >= (5000 / 20)) {
  3717  03F8  3000               	movlw	0
  3718  03F9  0246               	subwf	_Temp+2,w
  3719  03FA  30FA               	movlw	250
  3720  03FB  1903               	skipnz
  3721  03FC  0245               	subwf	_Temp+1,w
  3722  03FD  1C03               	skipc
  3723  03FE  0008               	return
  3724                           
  3725                           ;OverTemperature_B1.c: 81: Temp.Time = 0;
  3726  03FF  01C5               	clrf	_Temp+1
  3727  0400  01C6               	clrf	_Temp+2
  3728                           
  3729                           ;OverTemperature_B1.c: 82: Temp.ADtoGO = 1;
  3730  0401  1544               	bsf	_Temp,2
  3731                           
  3732                           ;OverTemperature_B1.c: 83: }
  3733                           ;OverTemperature_B1.c: 84: } else {
  3734  0402  0008               	return
  3735  0403                     l4443:	
  3736                           
  3737                           ;OverTemperature_B1.c: 85: Temp.Time = 0;
  3738  0403  01C5               	clrf	_Temp+1
  3739  0404  01C6               	clrf	_Temp+2
  3740                           
  3741                           ;OverTemperature_B1.c: 86: }
  3742                           ;OverTemperature_B1.c: 87: } else {
  3743  0405  0008               	return
  3744  0406                     l4445:	
  3745                           
  3746                           ;OverTemperature_B1.c: 88: Temp.Time++;
  3747  0406  3001               	movlw	1
  3748  0407  07C5               	addwf	_Temp+1,f
  3749  0408  1803               	skipnc
  3750  0409  0AC6               	incf	_Temp+2,f
  3751  040A  3000               	movlw	0
  3752  040B  07C6               	addwf	_Temp+2,f
  3753                           
  3754                           ;OverTemperature_B1.c: 89: if (Temp.Time >= (100 / 20)) {
  3755  040C  3000               	movlw	0
  3756  040D  0246               	subwf	_Temp+2,w
  3757  040E  3005               	movlw	5
  3758  040F  1903               	skipnz
  3759  0410  0245               	subwf	_Temp+1,w
  3760  0411  1C03               	skipc
  3761  0412  0008               	return
  3762                           
  3763                           ;OverTemperature_B1.c: 90: Temp.Time = 0;
  3764  0413  01C5               	clrf	_Temp+1
  3765  0414  01C6               	clrf	_Temp+2
  3766                           
  3767                           ;OverTemperature_B1.c: 95: if (Temp.ADV > 0) {
  3768  0415  084A               	movf	_Temp+6,w
  3769  0416  1903               	btfsc	3,2
  3770  0417  2C46               	goto	l953
  3771                           
  3772                           ;OverTemperature_B1.c: 96: Temp.ADtoGO = 0;
  3773  0418  1144               	bcf	_Temp,2
  3774                           
  3775                           ;OverTemperature_B1.c: 97: AD = Temp.ADV;
  3776  0419  084A               	movf	_Temp+6,w
  3777  041A  00DC               	movwf	??_setTemp_Main
  3778  041B  085C               	movf	??_setTemp_Main,w
  3779  041C  00E1               	movwf	setTemp_Main@AD
  3780                           
  3781                           ;OverTemperature_B1.c: 109: SafeValue = 0x73;
  3782  041D  3073               	movlw	115
  3783  041E  00DC               	movwf	??_setTemp_Main
  3784  041F  085C               	movf	??_setTemp_Main,w
  3785  0420  00DF               	movwf	setTemp_Main@SafeValue
  3786                           
  3787                           ;OverTemperature_B1.c: 110: DangerValue = 0x64;
  3788  0421  3064               	movlw	100
  3789  0422  00DC               	movwf	??_setTemp_Main
  3790  0423  085C               	movf	??_setTemp_Main,w
  3791  0424  00E0               	movwf	setTemp_Main@DangerValue
  3792                           
  3793                           ;OverTemperature_B1.c: 119: if (Temp.ERROR == 1) {
  3794  0425  1CC4               	btfss	_Temp,1
  3795  0426  2C36               	goto	l4469
  3796                           
  3797                           ;OverTemperature_B1.c: 120: if (AD >= SafeValue) {
  3798  0427  085F               	movf	setTemp_Main@SafeValue,w
  3799  0428  0261               	subwf	setTemp_Main@AD,w
  3800  0429  1C03               	skipc
  3801  042A  2C45               	goto	l4479
  3802                           
  3803                           ;OverTemperature_B1.c: 121: Temp.Count++;
  3804  042B  3001               	movlw	1
  3805  042C  00DC               	movwf	??_setTemp_Main
  3806  042D  085C               	movf	??_setTemp_Main,w
  3807  042E  07C7               	addwf	_Temp+3,f
  3808                           
  3809                           ;OverTemperature_B1.c: 122: if (Temp.Count >= 3) {
  3810  042F  3003               	movlw	3
  3811  0430  0247               	subwf	_Temp+3,w
  3812  0431  1C03               	skipc
  3813  0432  2C46               	goto	l953
  3814                           
  3815                           ;OverTemperature_B1.c: 123: Temp.Count = 0;
  3816  0433  01C7               	clrf	_Temp+3
  3817                           
  3818                           ;OverTemperature_B1.c: 124: Temp.ERROR = 0;
  3819  0434  10C4               	bcf	_Temp,1
  3820                           
  3821                           ;OverTemperature_B1.c: 126: }
  3822                           ;OverTemperature_B1.c: 127: } else {
  3823                           
  3824                           ;OverTemperature_B1.c: 125: ;;
  3825  0435  2C46               	goto	l953
  3826  0436                     l4469:	
  3827                           ;OverTemperature_B1.c: 129: }
  3828                           ;OverTemperature_B1.c: 130: } else {
  3829                           
  3830                           ;OverTemperature_B1.c: 128: Temp.Count = 0;
  3831                           
  3832                           
  3833                           ;OverTemperature_B1.c: 131: if (AD <= DangerValue) {
  3834  0436  0861               	movf	setTemp_Main@AD,w
  3835  0437  0260               	subwf	setTemp_Main@DangerValue,w
  3836  0438  1C03               	skipc
  3837  0439  2C45               	goto	l4479
  3838                           
  3839                           ;OverTemperature_B1.c: 132: Temp.Count++;
  3840  043A  3001               	movlw	1
  3841  043B  00DC               	movwf	??_setTemp_Main
  3842  043C  085C               	movf	??_setTemp_Main,w
  3843  043D  07C7               	addwf	_Temp+3,f
  3844                           
  3845                           ;OverTemperature_B1.c: 133: if (Temp.Count >= 3) {
  3846  043E  3003               	movlw	3
  3847  043F  0247               	subwf	_Temp+3,w
  3848  0440  1C03               	skipc
  3849  0441  2C46               	goto	l953
  3850                           
  3851                           ;OverTemperature_B1.c: 134: Temp.Count = 0;
  3852  0442  01C7               	clrf	_Temp+3
  3853                           
  3854                           ;OverTemperature_B1.c: 135: Temp.ERROR = 1;
  3855  0443  14C4               	bsf	_Temp,1
  3856                           
  3857                           ;OverTemperature_B1.c: 136: }
  3858                           ;OverTemperature_B1.c: 137: } else {
  3859  0444  2C46               	goto	l953
  3860  0445                     l4479:	
  3861                           
  3862                           ;OverTemperature_B1.c: 138: Temp.Count = 0;
  3863  0445  01C7               	clrf	_Temp+3
  3864  0446                     l953:	
  3865                           ;OverTemperature_B1.c: 139: }
  3866                           ;OverTemperature_B1.c: 140: }
  3867                           ;OverTemperature_B1.c: 141: ;;
  3868                           ;OverTemperature_B1.c: 142: ;;
  3869                           
  3870                           
  3871                           ;OverTemperature_B1.c: 158: }
  3872                           ;OverTemperature_B1.c: 159: Temp.ADH[0] = 0;
  3873  0446  01C8               	clrf	_Temp+4
  3874                           
  3875                           ;OverTemperature_B1.c: 160: Temp.ADH[1] = 0;
  3876  0447  01C9               	clrf	_Temp+5
  3877                           
  3878                           ;OverTemperature_B1.c: 161: Temp.ADV = 0;
  3879  0448  01CA               	clrf	_Temp+6
  3880                           
  3881                           ;OverTemperature_B1.c: 162: }
  3882                           ;OverTemperature_B1.c: 163: }
  3883                           ;OverTemperature_B1.c: 166: } else {
  3884  0449  0008               	return
  3885  044A                     l942:	
  3886                           
  3887                           ;OverTemperature_B1.c: 167: if (myMain.PowerON == 1) {
  3888  044A  1C31               	btfss	_myMain,0
  3889  044B  0008               	return
  3890                           
  3891                           ;OverTemperature_B1.c: 168: Temp.Enable = 1;
  3892  044C  1444               	bsf	_Temp,0
  3893  044D  0008               	return
  3894  044E                     __end_of_setTemp_Main:	
  3895                           
  3896                           	psect	text15
  3897  0D87                     __ptext15:	
  3898 ;; *************** function _Temp_Initialization *****************
  3899 ;; Defined at:
  3900 ;;		line 8 in file "../src/OverTemperature_B1.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3914 ;;      Params:         0       0       0       0
  3915 ;;      Locals:         0       0       0       0
  3916 ;;      Temps:          0       0       0       0
  3917 ;;      Totals:         0       0       0       0
  3918 ;;Total ram usage:        0 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    4
  3921 ;; This function calls:
  3922 ;;		_setTemp_Initialization
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _Temp_Initialization
  3930  0D87                     _Temp_Initialization:	
  3931                           
  3932                           ;OverTemperature_B1.c: 10: setTemp_Initialization();
  3933                           
  3934                           ;incstack = 0
  3935                           ; Regs used in _Temp_Initialization: [status,2+status,0+pclath+cstack]
  3936  0D87  158A  2583         	fcall	_setTemp_Initialization
  3937  0D89  0008               	return
  3938  0D8A                     __end_of_Temp_Initialization:	
  3939                           
  3940                           	psect	text16
  3941  0D83                     __ptext16:	
  3942 ;; *************** function _setTemp_Initialization *****************
  3943 ;; Defined at:
  3944 ;;		line 52 in file "../src/OverTemperature_B1.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;		None               void
  3951 ;; Registers used:
  3952 ;;		None
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3958 ;;      Params:         0       0       0       0
  3959 ;;      Locals:         0       0       0       0
  3960 ;;      Temps:          0       0       0       0
  3961 ;;      Totals:         0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    3
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_Temp_Initialization
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function _setTemp_Initialization
  3974  0D83                     _setTemp_Initialization:	
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in _setTemp_Initialization: []
  3978  0D83  0008               	return
  3979  0D84                     __end_of_setTemp_Initialization:	
  3980                           
  3981                           	psect	text17
  3982  0027                     __ptext17:	
  3983 ;; *************** function _PIR_Main *****************
  3984 ;; Defined at:
  3985 ;;		line 13 in file "../src/PIR_B1.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  LightsStatus    1   16[BANK0 ] unsigned char 
  3990 ;;  TriggerValue    1   15[BANK0 ] unsigned char 
  3991 ;;  Enable_Switc    1   12[BANK0 ] unsigned char 
  3992 ;;  cds             1   11[BANK0 ] unsigned char 
  3993 ;;  error           1   10[BANK0 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;		None               void
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4003 ;;      Params:         0       0       0       0
  4004 ;;      Locals:         0       7       0       0
  4005 ;;      Temps:          0       5       0       0
  4006 ;;      Totals:         0      12       0       0
  4007 ;;Total ram usage:       12 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    5
  4010 ;; This function calls:
  4011 ;;		_getCDS_Status
  4012 ;;		_getDimmerLights_Status
  4013 ;;		_getMain_All_Error_Status
  4014 ;;		_setLED
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _PIR_Main
  4022  0027                     _PIR_Main:	
  4023                           
  4024                           ;PIR_B1.c: 14: char error = getMain_All_Error_Status(0);
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _PIR_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4028  0027  3000               	movlw	0
  4029  0028  158A  2737  118A   	fcall	_getMain_All_Error_Status
  4030  002B  1283               	bcf	3,5	;RP0=0, select bank0
  4031  002C  1303               	bcf	3,6	;RP1=0, select bank0
  4032  002D  00DC               	movwf	??_PIR_Main
  4033  002E  085C               	movf	??_PIR_Main,w
  4034  002F  00E1               	movwf	PIR_Main@error
  4035                           
  4036                           ;PIR_B1.c: 15: char cds = getCDS_Status();
  4037  0030  158A  25B6  118A   	fcall	_getCDS_Status
  4038  0033  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0034  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0035  00DC               	movwf	??_PIR_Main
  4041  0036  085C               	movf	??_PIR_Main,w
  4042  0037  00E2               	movwf	PIR_Main@cds
  4043                           
  4044                           ;PIR_B1.c: 16: char LightsStatus = 0;
  4045  0038  01E7               	clrf	PIR_Main@LightsStatus
  4046                           
  4047                           ;PIR_B1.c: 17: char Enable_Switch = 1;
  4048  0039  01E3               	clrf	PIR_Main@Enable_Switch
  4049  003A  0AE3               	incf	PIR_Main@Enable_Switch,f
  4050                           
  4051                           ;PIR_B1.c: 18: char TriggerValue = 0;
  4052  003B  01E6               	clrf	PIR_Main@TriggerValue
  4053                           
  4054                           ;PIR_B1.c: 31: LightsStatus = getDimmerLights_Status(1);
  4055  003C  3001               	movlw	1
  4056  003D  158A  2659  118A   	fcall	_getDimmerLights_Status
  4057  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0042  00DC               	movwf	??_PIR_Main
  4060  0043  085C               	movf	??_PIR_Main,w
  4061  0044  00E7               	movwf	PIR_Main@LightsStatus
  4062                           
  4063                           ;PIR_B1.c: 35: if (_PIR.Enable == 1) {
  4064  0045  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0046  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0047  1C20               	btfss	__PIR^(0+128),0
  4067  0048  29FE               	goto	l1018
  4068                           
  4069                           ;PIR_B1.c: 36: if (error == 0) {
  4070  0049  1283               	bcf	3,5	;RP0=0, select bank0
  4071  004A  1303               	bcf	3,6	;RP1=0, select bank0
  4072  004B  08E1               	movf	PIR_Main@error,f
  4073  004C  1D03               	skipz
  4074  004D  2889               	goto	l1019
  4075                           
  4076                           ;PIR_B1.c: 38: if (cds == 1 && Enable_Switch == 1) {
  4077  004E  0862               	movf	PIR_Main@cds,w
  4078  004F  3A01               	xorlw	1
  4079  0050  1D03               	skipz
  4080  0051  285A               	goto	l1020
  4081  0052  0863               	movf	PIR_Main@Enable_Switch,w
  4082  0053  3A01               	xorlw	1
  4083  0054  1D03               	skipz
  4084  0055  285A               	goto	l1020
  4085                           
  4086                           ;PIR_B1.c: 39: _PIR.Available = 1;
  4087  0056  1683               	bsf	3,5	;RP0=1, select bank1
  4088  0057  1303               	bcf	3,6	;RP1=0, select bank1
  4089  0058  17A0               	bsf	__PIR^(0+128),7
  4090                           
  4091                           ;PIR_B1.c: 40: } else {
  4092  0059  2879               	goto	l1021
  4093  005A                     l1020:	
  4094                           
  4095                           ;PIR_B1.c: 41: _PIR.Available = 0;
  4096  005A  1683               	bsf	3,5	;RP0=1, select bank1
  4097  005B  1303               	bcf	3,6	;RP1=0, select bank1
  4098  005C  13A0               	bcf	__PIR^(0+128),7
  4099                           
  4100                           ;PIR_B1.c: 43: if (_PIR.OK == 1) {
  4101  005D  1DA0               	btfss	__PIR^(0+128),3
  4102  005E  2879               	goto	l1021
  4103                           
  4104                           ;PIR_B1.c: 45: setLED(1, 0);
  4105  005F  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0060  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0061  01D9               	clrf	setLED@command
  4108  0062  3001               	movlw	1
  4109  0063  118A  24BF  118A   	fcall	_setLED
  4110                           
  4111                           ;PIR_B1.c: 46: setLED(2, 0);
  4112  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4113  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4114  0068  01D9               	clrf	setLED@command
  4115  0069  3002               	movlw	2
  4116  006A  118A  24BF  118A   	fcall	_setLED
  4117                           
  4118                           ;PIR_B1.c: 59: if (getDimmerLights_Status(1) == 1) {
  4119  006D  3001               	movlw	1
  4120  006E  158A  2659  118A   	fcall	_getDimmerLights_Status
  4121  0071  3A01               	xorlw	1
  4122  0072  1D03               	skipz
  4123  0073  2879               	goto	l1021
  4124                           
  4125                           ;PIR_B1.c: 60: Dimmer.PIR_Trigger = 1;
  4126  0074  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0075  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0076  16AC               	bsf	_Dimmer,5
  4129                           
  4130                           ;PIR_B1.c: 61: Dimmer.PIR_Sw = 0;
  4131  0077  122C               	bcf	_Dimmer,4
  4132                           
  4133                           ;PIR_B1.c: 62: Dimmer.PIR_Lights_Status = 1;
  4134  0078  152D               	bsf	_Dimmer+1,2
  4135  0079                     l1021:	
  4136                           
  4137                           ;PIR_B1.c: 63: }
  4138                           ;PIR_B1.c: 67: }
  4139                           ;PIR_B1.c: 68: }
  4140                           ;PIR_B1.c: 72: if (_PIR.Detect == 0) {
  4141  0079  1683               	bsf	3,5	;RP0=1, select bank1
  4142  007A  1303               	bcf	3,6	;RP1=0, select bank1
  4143  007B  1A20               	btfsc	__PIR^(0+128),4
  4144  007C  288F               	goto	l1026
  4145                           
  4146                           ;PIR_B1.c: 73: _PIR.Detect = 1;
  4147  007D  1620               	bsf	__PIR^(0+128),4
  4148                           
  4149                           ;PIR_B1.c: 75: if (_PIR.OK == 0) {
  4150  007E  19A0               	btfsc	__PIR^(0+128),3
  4151  007F  288F               	goto	l1026
  4152                           
  4153                           ;PIR_B1.c: 76: setLED(1, 1);
  4154  0080  1283               	bcf	3,5	;RP0=0, select bank0
  4155  0081  1303               	bcf	3,6	;RP1=0, select bank0
  4156  0082  01D9               	clrf	setLED@command
  4157  0083  0AD9               	incf	setLED@command,f
  4158  0084  3001               	movlw	1
  4159  0085  118A  24BF  118A   	fcall	_setLED
  4160                           
  4161                           ;PIR_B1.c: 77: }
  4162                           ;PIR_B1.c: 80: }
  4163                           ;PIR_B1.c: 81: } else {
  4164  0088  288F               	goto	l1026
  4165  0089                     l1019:	
  4166                           
  4167                           ;PIR_B1.c: 82: if (_PIR.Detect == 1) {
  4168  0089  1683               	bsf	3,5	;RP0=1, select bank1
  4169  008A  1303               	bcf	3,6	;RP1=0, select bank1
  4170  008B  1E20               	btfss	__PIR^(0+128),4
  4171  008C  288F               	goto	l1026
  4172                           
  4173                           ;PIR_B1.c: 83: _PIR.Detect = 0;
  4174  008D  1220               	bcf	__PIR^(0+128),4
  4175                           
  4176                           ;PIR_B1.c: 84: _PIR.Available = 0;
  4177  008E  13A0               	bcf	__PIR^(0+128),7
  4178  008F                     l1026:	
  4179                           
  4180                           ;PIR_B1.c: 102: }
  4181                           ;PIR_B1.c: 103: }
  4182                           ;PIR_B1.c: 105: if (_PIR.ADtoGO == 0) {
  4183  008F  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0090  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0091  18A0               	btfsc	__PIR^(0+128),1
  4186  0092  28A2               	goto	l1028
  4187                           
  4188                           ;PIR_B1.c: 106: _PIR.Time++;
  4189  0093  3001               	movlw	1
  4190  0094  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0095  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0096  00DC               	movwf	??_PIR_Main
  4193  0097  085C               	movf	??_PIR_Main,w
  4194  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4195  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4196  009A  07A2               	addwf	(__PIR^(0+128)+2),f
  4197                           
  4198                           ;PIR_B1.c: 107: if (_PIR.Time == (100 / 20)) {
  4199  009B  0822               	movf	(__PIR^(0+128)+2),w
  4200  009C  3A05               	xorlw	5
  4201  009D  1D03               	skipz
  4202  009E  29A4               	goto	l4831
  4203                           
  4204                           ;PIR_B1.c: 108: _PIR.Time = 0;
  4205  009F  01A2               	clrf	(__PIR^(0+128)+2)
  4206                           
  4207                           ;PIR_B1.c: 109: _PIR.ADtoGO = 1;
  4208  00A0  14A0               	bsf	__PIR^(0+128),1
  4209                           
  4210                           ;PIR_B1.c: 110: }
  4211                           ;PIR_B1.c: 111: } else {
  4212  00A1  29A4               	goto	l4831
  4213  00A2                     l1028:	
  4214                           
  4215                           ;PIR_B1.c: 112: if (_PIR.GO == 1) {
  4216  00A2  1D20               	btfss	__PIR^(0+128),2
  4217  00A3  29A4               	goto	l4831
  4218                           
  4219                           ;PIR_B1.c: 113: _PIR.GO = 0;
  4220  00A4  1120               	bcf	__PIR^(0+128),2
  4221                           
  4222                           ;PIR_B1.c: 114: _PIR.ADtoGO = 0;
  4223  00A5  10A0               	bcf	__PIR^(0+128),1
  4224                           
  4225                           ;PIR_B1.c: 115: if (_PIR.Available == 1) {
  4226  00A6  1BA0               	btfsc	__PIR^(0+128),7
  4227                           
  4228                           ;PIR_B1.c: 116: if (_PIR.OK == 1) {
  4229  00A7  1DA0               	btfss	__PIR^(0+128),3
  4230  00A8  29A4               	goto	l4831
  4231                           
  4232                           ;PIR_B1.c: 118: _PIR.Time++;
  4233  00A9  3001               	movlw	1
  4234  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4235  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4236  00AC  00DC               	movwf	??_PIR_Main
  4237  00AD  085C               	movf	??_PIR_Main,w
  4238  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  4239  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  4240  00B0  07A2               	addwf	(__PIR^(0+128)+2),f
  4241                           
  4242                           ;PIR_B1.c: 119: if (_PIR.Time == 60) {
  4243  00B1  0822               	movf	(__PIR^(0+128)+2),w
  4244  00B2  3A3C               	xorlw	60
  4245  00B3  1D03               	skipz
  4246  00B4  28E9               	goto	l4799
  4247                           
  4248                           ;PIR_B1.c: 120: _PIR.Time = 0;
  4249  00B5  01A2               	clrf	(__PIR^(0+128)+2)
  4250                           
  4251                           ;PIR_B1.c: 121: if (_PIR.RangeCount >= 90) {
  4252  00B6  305A               	movlw	90
  4253  00B7  0247               	subwf	(__PIR^(0+128)+39),w
  4254  00B8  1C03               	skipc
  4255  00B9  28C5               	goto	l4781
  4256                           
  4257                           ;PIR_B1.c: 122: _PIR.RangeTime1 = 0;
  4258  00BA  01C6               	clrf	(__PIR^(0+128)+38)
  4259                           
  4260                           ;PIR_B1.c: 124: if (_PIR.RangeValue == 25) {
  4261  00BB  0848               	movf	(__PIR^(0+128)+40),w
  4262  00BC  3A19               	xorlw	25
  4263  00BD  1903               	btfsc	3,2
  4264  00BE  28DA               	goto	L11
  4265                           
  4266                           ;PIR_B1.c: 126: } else if (_PIR.RangeValue == (25+10)) {
  4267                           
  4268                           ;PIR_B1.c: 125: _PIR.RangeValue = (25+10);
  4269  00BF  0848               	movf	(__PIR^(0+128)+40),w
  4270  00C0  3A23               	xorlw	35
  4271  00C1  1D03               	skipz
  4272  00C2  28E8               	goto	l4797
  4273                           
  4274                           ;PIR_B1.c: 127: _PIR.RangeValue = (25+20);
  4275  00C3  302D               	movlw	45
  4276  00C4  28E1               	goto	L8
  4277  00C5                     l4781:	
  4278                           ;PIR_B1.c: 128: }
  4279                           ;PIR_B1.c: 129: } else if (_PIR.RangeCount <= 10) {
  4280                           
  4281  00C5  300B               	movlw	11
  4282  00C6  0247               	subwf	(__PIR^(0+128)+39),w
  4283  00C7  1803               	skipnc
  4284  00C8  28E8               	goto	l4797
  4285                           
  4286                           ;PIR_B1.c: 130: _PIR.RangeTime1++;
  4287  00C9  3001               	movlw	1
  4288  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4289  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4290  00CC  00DC               	movwf	??_PIR_Main
  4291  00CD  085C               	movf	??_PIR_Main,w
  4292  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  4293  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  4294  00D0  07C6               	addwf	(__PIR^(0+128)+38),f
  4295                           
  4296                           ;PIR_B1.c: 131: if (_PIR.RangeTime1 == 2) {
  4297  00D1  0846               	movf	(__PIR^(0+128)+38),w
  4298  00D2  3A02               	xorlw	2
  4299  00D3  1D03               	skipz
  4300  00D4  28E8               	goto	l4797
  4301                           
  4302                           ;PIR_B1.c: 132: _PIR.RangeTime1 = 0;
  4303  00D5  01C6               	clrf	(__PIR^(0+128)+38)
  4304                           
  4305                           ;PIR_B1.c: 134: if (_PIR.RangeValue == (25+20)) {
  4306  00D6  0848               	movf	(__PIR^(0+128)+40),w
  4307  00D7  3A2D               	xorlw	45
  4308  00D8  1D03               	skipz
  4309  00D9  28DC               	goto	l4793
  4310  00DA                     L11:	
  4311                           
  4312                           ;PIR_B1.c: 135: _PIR.RangeValue = (25+10);
  4313  00DA  3023               	movlw	35
  4314  00DB  28E1               	goto	L8
  4315  00DC                     l4793:	
  4316                           ;PIR_B1.c: 136: } else if (_PIR.RangeValue == (25+10)) {
  4317                           
  4318  00DC  0848               	movf	(__PIR^(0+128)+40),w
  4319  00DD  3A23               	xorlw	35
  4320  00DE  1D03               	skipz
  4321  00DF  28E8               	goto	l4797
  4322                           
  4323                           ;PIR_B1.c: 137: _PIR.RangeValue = 25;
  4324  00E0  3019               	movlw	25
  4325  00E1                     L8:	
  4326  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  4327  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  4328  00E3  00DC               	movwf	??_PIR_Main
  4329  00E4  085C               	movf	??_PIR_Main,w
  4330  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  4331  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  4332  00E7  00C8               	movwf	(__PIR^(0+128)+40)
  4333  00E8                     l4797:	
  4334                           
  4335                           ;PIR_B1.c: 138: }
  4336                           ;PIR_B1.c: 139: }
  4337                           ;PIR_B1.c: 140: }
  4338                           ;PIR_B1.c: 141: _PIR.RangeCount = 0;
  4339  00E8  01C7               	clrf	(__PIR^(0+128)+39)
  4340  00E9                     l4799:	
  4341                           
  4342                           ;PIR_B1.c: 142: }
  4343                           ;PIR_B1.c: 145: if ((_PIR.SignalAD >= (_PIR.ReferenceVoltage - _PIR.RangeValue))
  4344                           ;PIR_B1.c: 146: && (_PIR.SignalAD <= (_PIR.ReferenceVoltage + _PIR.RangeValue))) {
  4345  00E9  0848               	movf	(__PIR^(0+128)+40),w
  4346  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  4347  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  4348  00EC  00DC               	movwf	??_PIR_Main
  4349  00ED  01DD               	clrf	??_PIR_Main+1
  4350  00EE  09DC               	comf	??_PIR_Main,f
  4351  00EF  09DD               	comf	??_PIR_Main+1,f
  4352  00F0  0ADC               	incf	??_PIR_Main,f
  4353  00F1  1903               	skipnz
  4354  00F2  0ADD               	incf	??_PIR_Main+1,f
  4355  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  4356  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  4357  00F5  0823               	movf	(__PIR^(0+128)+3),w
  4358  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4359  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4360  00F8  075C               	addwf	??_PIR_Main,w
  4361  00F9  00DE               	movwf	??_PIR_Main+2
  4362  00FA  085D               	movf	??_PIR_Main+1,w
  4363  00FB  1803               	skipnc
  4364  00FC  0A5D               	incf	??_PIR_Main+1,w
  4365  00FD  00DF               	movwf	??_PIR_Main+3
  4366  00FE  085F               	movf	??_PIR_Main+3,w
  4367  00FF  3A80               	xorlw	128
  4368  0100  3C80               	sublw	128
  4369  0101  1D03               	skipz
  4370  0102  2907               	goto	u5905
  4371  0103  085E               	movf	??_PIR_Main+2,w
  4372  0104  1683               	bsf	3,5	;RP0=1, select bank1
  4373  0105  1303               	bcf	3,6	;RP1=0, select bank1
  4374  0106  0221               	subwf	(__PIR^(0+128)+1),w
  4375  0107                     u5905:	
  4376  0107  1C03               	skipc
  4377  0108  2929               	goto	l4809
  4378  0109  1683               	bsf	3,5	;RP0=1, select bank1
  4379  010A  1303               	bcf	3,6	;RP1=0, select bank1
  4380  010B  0823               	movf	(__PIR^(0+128)+3),w
  4381  010C  0748               	addwf	(__PIR^(0+128)+40),w
  4382  010D  1283               	bcf	3,5	;RP0=0, select bank0
  4383  010E  1303               	bcf	3,6	;RP1=0, select bank0
  4384  010F  00DC               	movwf	??_PIR_Main
  4385  0110  01DD               	clrf	??_PIR_Main+1
  4386  0111  0DDD               	rlf	??_PIR_Main+1,f
  4387  0112  085D               	movf	??_PIR_Main+1,w
  4388  0113  3A80               	xorlw	128
  4389  0114  00DE               	movwf	??_PIR_Main+2
  4390  0115  3080               	movlw	128
  4391  0116  025E               	subwf	??_PIR_Main+2,w
  4392  0117  1D03               	skipz
  4393  0118  291F               	goto	u5915
  4394  0119  1683               	bsf	3,5	;RP0=1, select bank1
  4395  011A  1303               	bcf	3,6	;RP1=0, select bank1
  4396  011B  0821               	movf	(__PIR^(0+128)+1),w
  4397  011C  1283               	bcf	3,5	;RP0=0, select bank0
  4398  011D  1303               	bcf	3,6	;RP1=0, select bank0
  4399  011E  025C               	subwf	??_PIR_Main,w
  4400  011F                     u5915:	
  4401  011F  1C03               	skipc
  4402  0120  2929               	goto	l4809
  4403                           
  4404                           ;PIR_B1.c: 148: _PIR.Count = 0;
  4405  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4406  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4407  0123  01BE               	clrf	(__PIR^(0+128)+30)
  4408  0124  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4409                           
  4410                           ;PIR_B1.c: 155: setLED(1, 0);
  4411  0125  1283               	bcf	3,5	;RP0=0, select bank0
  4412  0126  1303               	bcf	3,6	;RP1=0, select bank0
  4413  0127  01D9               	clrf	setLED@command
  4414  0128  298D               	goto	L12
  4415  0129                     l4809:	
  4416                           ;PIR_B1.c: 159: } else {
  4417                           
  4418                           ;PIR_B1.c: 156: setLED(2, 0);
  4419                           
  4420                           
  4421                           ;PIR_B1.c: 162: _PIR.RangeCount++;
  4422  0129  3001               	movlw	1
  4423  012A  1283               	bcf	3,5	;RP0=0, select bank0
  4424  012B  1303               	bcf	3,6	;RP1=0, select bank0
  4425  012C  00DC               	movwf	??_PIR_Main
  4426  012D  085C               	movf	??_PIR_Main,w
  4427  012E  1683               	bsf	3,5	;RP0=1, select bank1
  4428  012F  1303               	bcf	3,6	;RP1=0, select bank1
  4429  0130  07C7               	addwf	(__PIR^(0+128)+39),f
  4430                           
  4431                           ;PIR_B1.c: 163: _PIR.Count++;
  4432  0131  3001               	movlw	1
  4433  0132  07BE               	addwf	(__PIR^(0+128)+30),f
  4434  0133  1803               	skipnc
  4435  0134  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4436  0135  3000               	movlw	0
  4437  0136  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4438                           
  4439                           ;PIR_B1.c: 165: TriggerValue = LightsStatus == 1 ? 3 : 3;
  4440  0137  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0138  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0139  0867               	movf	PIR_Main@LightsStatus,w
  4443  013A  3A01               	xorlw	1
  4444  013B  1903               	skipnz
  4445  013C  293D               	goto	l4817
  4446  013D                     l4817:	
  4447  013D  3003               	movlw	3
  4448  013E  00E4               	movwf	_PIR_Main$3333
  4449  013F  3000               	movlw	0
  4450  0140  00E5               	movwf	_PIR_Main$3333+1
  4451  0141  0864               	movf	_PIR_Main$3333,w
  4452  0142  00DC               	movwf	??_PIR_Main
  4453  0143  085C               	movf	??_PIR_Main,w
  4454  0144  00E6               	movwf	PIR_Main@TriggerValue
  4455                           
  4456                           ;PIR_B1.c: 167: if (_PIR.Count == TriggerValue) {
  4457  0145  0866               	movf	PIR_Main@TriggerValue,w
  4458  0146  00DC               	movwf	??_PIR_Main
  4459  0147  01DD               	clrf	??_PIR_Main+1
  4460  0148  1683               	bsf	3,5	;RP0=1, select bank1
  4461  0149  1303               	bcf	3,6	;RP1=0, select bank1
  4462  014A  083F               	movf	((__PIR+1)^(0+128)+30),w
  4463  014B  1283               	bcf	3,5	;RP0=0, select bank0
  4464  014C  1303               	bcf	3,6	;RP1=0, select bank0
  4465  014D  065D               	xorwf	??_PIR_Main+1,w
  4466  014E  1D03               	skipz
  4467  014F  2956               	goto	u5935
  4468  0150  1683               	bsf	3,5	;RP0=1, select bank1
  4469  0151  1303               	bcf	3,6	;RP1=0, select bank1
  4470  0152  083E               	movf	(__PIR^(0+128)+30),w
  4471  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0155  065C               	xorwf	??_PIR_Main,w
  4474  0156                     u5935:	
  4475  0156  1D03               	skipz
  4476  0157  29A4               	goto	l4831
  4477                           
  4478                           ;PIR_B1.c: 169: _PIR.CloseTimeSeconds = 0;
  4479  0158  1683               	bsf	3,5	;RP0=1, select bank1
  4480  0159  1303               	bcf	3,6	;RP1=0, select bank1
  4481  015A  01C2               	clrf	(__PIR^(0+128)+34)
  4482                           
  4483                           ;PIR_B1.c: 170: _PIR.CloseTimeMinutes = 0;
  4484  015B  01C0               	clrf	(__PIR^(0+128)+32)
  4485  015C  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4486                           
  4487                           ;PIR_B1.c: 172: _PIR.Count = 0;
  4488  015D  01BE               	clrf	(__PIR^(0+128)+30)
  4489  015E  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4490                           
  4491                           ;PIR_B1.c: 191: Dimmer.PIR_Trigger = 1;
  4492  015F  1283               	bcf	3,5	;RP0=0, select bank0
  4493  0160  1303               	bcf	3,6	;RP1=0, select bank0
  4494  0161  16AC               	bsf	_Dimmer,5
  4495                           
  4496                           ;PIR_B1.c: 192: Dimmer.PIR_Sw = 1;
  4497  0162  162C               	bsf	_Dimmer,4
  4498                           
  4499                           ;PIR_B1.c: 197: if ((_PIR.SignalAD <= (_PIR.ReferenceVoltage - _PIR.RangeValue))) {
  4500  0163  1683               	bsf	3,5	;RP0=1, select bank1
  4501  0164  1303               	bcf	3,6	;RP1=0, select bank1
  4502  0165  0848               	movf	(__PIR^(0+128)+40),w
  4503  0166  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0167  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0168  00DC               	movwf	??_PIR_Main
  4506  0169  01DD               	clrf	??_PIR_Main+1
  4507  016A  09DC               	comf	??_PIR_Main,f
  4508  016B  09DD               	comf	??_PIR_Main+1,f
  4509  016C  0ADC               	incf	??_PIR_Main,f
  4510  016D  1903               	skipnz
  4511  016E  0ADD               	incf	??_PIR_Main+1,f
  4512  016F  1683               	bsf	3,5	;RP0=1, select bank1
  4513  0170  1303               	bcf	3,6	;RP1=0, select bank1
  4514  0171  0823               	movf	(__PIR^(0+128)+3),w
  4515  0172  1283               	bcf	3,5	;RP0=0, select bank0
  4516  0173  1303               	bcf	3,6	;RP1=0, select bank0
  4517  0174  075C               	addwf	??_PIR_Main,w
  4518  0175  00DE               	movwf	??_PIR_Main+2
  4519  0176  085D               	movf	??_PIR_Main+1,w
  4520  0177  1803               	skipnc
  4521  0178  0A5D               	incf	??_PIR_Main+1,w
  4522  0179  00DF               	movwf	??_PIR_Main+3
  4523  017A  085F               	movf	??_PIR_Main+3,w
  4524  017B  3A80               	xorlw	128
  4525  017C  00E0               	movwf	??_PIR_Main+4
  4526  017D  3080               	movlw	128
  4527  017E  0260               	subwf	??_PIR_Main+4,w
  4528  017F  1D03               	skipz
  4529  0180  2987               	goto	u5945
  4530  0181  1683               	bsf	3,5	;RP0=1, select bank1
  4531  0182  1303               	bcf	3,6	;RP1=0, select bank1
  4532  0183  0821               	movf	(__PIR^(0+128)+1),w
  4533  0184  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0185  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0186  025E               	subwf	??_PIR_Main+2,w
  4536  0187                     u5945:	
  4537  0187  1C03               	skipc
  4538  0188  2995               	goto	l4829
  4539                           
  4540                           ;PIR_B1.c: 198: setLED(1, 1);
  4541  0189  1283               	bcf	3,5	;RP0=0, select bank0
  4542  018A  1303               	bcf	3,6	;RP1=0, select bank0
  4543  018B  01D9               	clrf	setLED@command
  4544  018C  0AD9               	incf	setLED@command,f
  4545  018D                     L12:	
  4546  018D  3001               	movlw	1
  4547  018E  118A  24BF  118A   	fcall	_setLED
  4548                           
  4549                           ;PIR_B1.c: 199: setLED(2, 0);
  4550  0191  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0192  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0193  01D9               	clrf	setLED@command
  4553  0194  29A0               	goto	L9
  4554  0195                     l4829:	
  4555                           ;PIR_B1.c: 200: } else {
  4556                           
  4557                           
  4558                           ;PIR_B1.c: 201: setLED(1, 0);
  4559  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0197  01D9               	clrf	setLED@command
  4562  0198  3001               	movlw	1
  4563  0199  118A  24BF  118A   	fcall	_setLED
  4564                           
  4565                           ;PIR_B1.c: 202: setLED(2, 1);
  4566  019C  1283               	bcf	3,5	;RP0=0, select bank0
  4567  019D  1303               	bcf	3,6	;RP1=0, select bank0
  4568  019E  01D9               	clrf	setLED@command
  4569  019F  0AD9               	incf	setLED@command,f
  4570  01A0                     L9:	
  4571  01A0  3002               	movlw	2
  4572  01A1  118A  24BF  118A   	fcall	_setLED
  4573  01A4                     l4831:	
  4574                           
  4575                           ;PIR_B1.c: 203: }
  4576                           ;PIR_B1.c: 245: }
  4577                           ;PIR_B1.c: 246: }
  4578                           ;PIR_B1.c: 247: }
  4579                           ;PIR_B1.c: 248: }
  4580                           ;PIR_B1.c: 249: }
  4581                           ;PIR_B1.c: 250: }
  4582                           ;PIR_B1.c: 251: if (_PIR.OK == 0) {
  4583  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  4584  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  4585  01A6  19A0               	btfsc	__PIR^(0+128),3
  4586  01A7  29CC               	goto	l4845
  4587                           
  4588                           ;PIR_B1.c: 252: _PIR.Count++;
  4589  01A8  3001               	movlw	1
  4590  01A9  07BE               	addwf	(__PIR^(0+128)+30),f
  4591  01AA  1803               	skipnc
  4592  01AB  0ABF               	incf	((__PIR+1)^(0+128)+30),f
  4593  01AC  3000               	movlw	0
  4594  01AD  07BF               	addwf	((__PIR+1)^(0+128)+30),f
  4595                           
  4596                           ;PIR_B1.c: 253: if (_PIR.Count == (30000 / 20)) {
  4597  01AE  3005               	movlw	5
  4598  01AF  063F               	xorwf	((__PIR+1)^(0+128)+30),w
  4599  01B0  1D03               	skipz
  4600  01B1  29B4               	goto	u5965
  4601  01B2  30DC               	movlw	220
  4602  01B3  063E               	xorwf	(__PIR^(0+128)+30),w
  4603  01B4                     u5965:	
  4604  01B4  1D03               	skipz
  4605  01B5  0008               	return
  4606                           
  4607                           ;PIR_B1.c: 254: _PIR.Count = 0;
  4608  01B6  01BE               	clrf	(__PIR^(0+128)+30)
  4609  01B7  01BF               	clrf	((__PIR+1)^(0+128)+30)
  4610                           
  4611                           ;PIR_B1.c: 255: _PIR.OK = 1;
  4612  01B8  15A0               	bsf	__PIR^(0+128),3
  4613                           
  4614                           ;PIR_B1.c: 257: setLED(1, 0);
  4615  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  4616  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  4617  01BB  01D9               	clrf	setLED@command
  4618  01BC  3001               	movlw	1
  4619  01BD  118A  24BF  118A   	fcall	_setLED
  4620                           
  4621                           ;PIR_B1.c: 272: if (getDimmerLights_Status(1) == 1) {
  4622  01C0  3001               	movlw	1
  4623  01C1  158A  2659  118A   	fcall	_getDimmerLights_Status
  4624  01C4  3A01               	xorlw	1
  4625  01C5  1D03               	skipz
  4626  01C6  0008               	return
  4627                           
  4628                           ;PIR_B1.c: 273: Dimmer.PIR_Trigger = 1;
  4629  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4630  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4631  01C9  16AC               	bsf	_Dimmer,5
  4632                           
  4633                           ;PIR_B1.c: 274: Dimmer.PIR_Sw = 0;
  4634  01CA  122C               	bcf	_Dimmer,4
  4635                           
  4636                           ;PIR_B1.c: 275: }
  4637                           ;PIR_B1.c: 280: }
  4638                           ;PIR_B1.c: 281: } else {
  4639  01CB  0008               	return
  4640  01CC                     l4845:	
  4641                           
  4642                           ;PIR_B1.c: 283: if (LightsStatus == 1) {
  4643  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4644  01CD  0867               	movf	PIR_Main@LightsStatus,w
  4645  01CE  3A01               	xorlw	1
  4646  01CF  1D03               	skipz
  4647  01D0  29F8               	goto	l4863
  4648                           
  4649                           ;PIR_B1.c: 284: _PIR.CloseTimeSeconds++;
  4650  01D1  3001               	movlw	1
  4651  01D2  00DC               	movwf	??_PIR_Main
  4652  01D3  085C               	movf	??_PIR_Main,w
  4653  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  4654  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  4655  01D6  07C2               	addwf	(__PIR^(0+128)+34),f
  4656                           
  4657                           ;PIR_B1.c: 285: if (_PIR.CloseTimeSeconds == (1000 / 20)) {
  4658  01D7  0842               	movf	(__PIR^(0+128)+34),w
  4659  01D8  3A32               	xorlw	50
  4660  01D9  1D03               	skipz
  4661  01DA  0008               	return
  4662                           
  4663                           ;PIR_B1.c: 286: _PIR.CloseTimeSeconds = 0;
  4664  01DB  01C2               	clrf	(__PIR^(0+128)+34)
  4665                           
  4666                           ;PIR_B1.c: 287: _PIR.CloseTimeMinutes++;
  4667  01DC  3001               	movlw	1
  4668  01DD  07C0               	addwf	(__PIR^(0+128)+32),f
  4669  01DE  1803               	skipnc
  4670  01DF  0AC1               	incf	((__PIR+1)^(0+128)+32),f
  4671  01E0  3000               	movlw	0
  4672  01E1  07C1               	addwf	((__PIR+1)^(0+128)+32),f
  4673                           
  4674                           ;PIR_B1.c: 288: if (_PIR.CloseTimeMinutes == _PIR.CloseTimeValue) {
  4675  01E2  0844               	movf	((__PIR+1)^(0+128)+35),w
  4676  01E3  0641               	xorwf	((__PIR+1)^(0+128)+32),w
  4677  01E4  1D03               	skipz
  4678  01E5  29E8               	goto	u6005
  4679  01E6  0843               	movf	(__PIR^(0+128)+35),w
  4680  01E7  0640               	xorwf	(__PIR^(0+128)+32),w
  4681  01E8                     u6005:	
  4682  01E8  1D03               	skipz
  4683  01E9  0008               	return
  4684                           
  4685                           ;PIR_B1.c: 289: _PIR.CloseTimeMinutes = 0;
  4686  01EA  01C0               	clrf	(__PIR^(0+128)+32)
  4687  01EB  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4688                           
  4689                           ;PIR_B1.c: 305: if (getDimmerLights_Status(1) == 1) {
  4690  01EC  3001               	movlw	1
  4691  01ED  158A  2659  118A   	fcall	_getDimmerLights_Status
  4692  01F0  3A01               	xorlw	1
  4693  01F1  1D03               	skipz
  4694  01F2  0008               	return
  4695                           
  4696                           ;PIR_B1.c: 306: Dimmer.PIR_Trigger = 1;
  4697  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  4698  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  4699  01F5  16AC               	bsf	_Dimmer,5
  4700                           
  4701                           ;PIR_B1.c: 307: Dimmer.PIR_Sw = 0;
  4702  01F6  122C               	bcf	_Dimmer,4
  4703                           
  4704                           ;PIR_B1.c: 308: }
  4705                           ;PIR_B1.c: 311: }
  4706                           ;PIR_B1.c: 312: }
  4707                           ;PIR_B1.c: 313: } else {
  4708  01F7  0008               	return
  4709  01F8                     l4863:	
  4710                           
  4711                           ;PIR_B1.c: 314: _PIR.CloseTimeSeconds = 0;
  4712  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  4713  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  4714  01FA  01C2               	clrf	(__PIR^(0+128)+34)
  4715                           
  4716                           ;PIR_B1.c: 315: _PIR.CloseTimeMinutes = 0;
  4717  01FB  01C0               	clrf	(__PIR^(0+128)+32)
  4718  01FC  01C1               	clrf	((__PIR+1)^(0+128)+32)
  4719                           
  4720                           ;PIR_B1.c: 316: }
  4721                           ;PIR_B1.c: 318: }
  4722                           ;PIR_B1.c: 319: } else {
  4723  01FD  0008               	return
  4724  01FE                     l1018:	
  4725                           
  4726                           ;PIR_B1.c: 320: if (myMain.PowerON == 1) {
  4727  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  4728  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0200  1C31               	btfss	_myMain,0
  4730  0201  0008               	return
  4731                           
  4732                           ;PIR_B1.c: 321: _PIR.Enable = 1;
  4733  0202  1683               	bsf	3,5	;RP0=1, select bank1
  4734  0203  1303               	bcf	3,6	;RP1=0, select bank1
  4735  0204  1420               	bsf	__PIR^(0+128),0
  4736                           
  4737                           ;PIR_B1.c: 323: setLED(1, 1);
  4738  0205  1283               	bcf	3,5	;RP0=0, select bank0
  4739  0206  1303               	bcf	3,6	;RP1=0, select bank0
  4740  0207  01D9               	clrf	setLED@command
  4741  0208  0AD9               	incf	setLED@command,f
  4742  0209  3001               	movlw	1
  4743  020A  118A  24BF         	fcall	_setLED
  4744                           
  4745                           ;PIR_B1.c: 338: Dimmer.PIR_Trigger = 1;
  4746  020C  1283               	bcf	3,5	;RP0=0, select bank0
  4747  020D  1303               	bcf	3,6	;RP1=0, select bank0
  4748  020E  16AC               	bsf	_Dimmer,5
  4749                           
  4750                           ;PIR_B1.c: 339: Dimmer.PIR_Sw = 1;
  4751  020F  162C               	bsf	_Dimmer,4
  4752  0210  0008               	return
  4753  0211                     __end_of_PIR_Main:	
  4754                           
  4755                           	psect	text18
  4756  0DB6                     __ptext18:	
  4757 ;; *************** function _getCDS_Status *****************
  4758 ;; Defined at:
  4759 ;;		line 42 in file "../src/CDS_B1.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  status          1    0[BANK0 ] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      unsigned char 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4773 ;;      Params:         0       0       0       0
  4774 ;;      Locals:         0       1       0       0
  4775 ;;      Temps:          0       0       0       0
  4776 ;;      Totals:         0       1       0       0
  4777 ;;Total ram usage:        1 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    3
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_PIR_Main
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           
  4788                           ;psect for function _getCDS_Status
  4789  0DB6                     _getCDS_Status:	
  4790                           
  4791                           ;CDS_B1.c: 43: char status = _CDS.Status == 1 ? 1 : 0;
  4792                           
  4793                           ;incstack = 0
  4794                           ; Regs used in _getCDS_Status: [wreg+status,2]
  4795  0DB6  3000               	movlw	0
  4796  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0DB9  1A3A               	btfsc	__CDS,4
  4799  0DBA  3001               	movlw	1
  4800  0DBB  00D7               	movwf	getCDS_Status@status
  4801                           
  4802                           ;CDS_B1.c: 44: return status;
  4803  0DBC  0857               	movf	getCDS_Status@status,w
  4804  0DBD  0008               	return
  4805  0DBE                     __end_of_getCDS_Status:	
  4806                           
  4807                           	psect	text19
  4808  0E03                     __ptext19:	
  4809 ;; *************** function _PIR_Initialization *****************
  4810 ;; Defined at:
  4811 ;;		line 7 in file "../src/PIR_B1.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;		None               void
  4818 ;; Registers used:
  4819 ;;		wreg
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4825 ;;      Params:         0       0       0       0
  4826 ;;      Locals:         0       0       0       0
  4827 ;;      Temps:          0       1       0       0
  4828 ;;      Totals:         0       1       0       0
  4829 ;;Total ram usage:        1 bytes
  4830 ;; Hardware stack levels used:    1
  4831 ;; Hardware stack levels required when called:    3
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _PIR_Initialization
  4841  0E03                     _PIR_Initialization:	
  4842                           
  4843                           ;PIR_B1.c: 8: _PIR.RangeValue = 25;
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _PIR_Initialization: [wreg]
  4847  0E03  3019               	movlw	25
  4848  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4849  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4850  0E06  00D7               	movwf	??_PIR_Initialization
  4851  0E07  0857               	movf	??_PIR_Initialization,w
  4852  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  4853  0E09  1303               	bcf	3,6	;RP1=0, select bank1
  4854  0E0A  00C8               	movwf	(__PIR^(0+128)+40)
  4855                           
  4856                           ;PIR_B1.c: 9: _PIR.CloseTimeValue = 5;
  4857  0E0B  3005               	movlw	5
  4858  0E0C  00C3               	movwf	(__PIR^(0+128)+35)
  4859  0E0D  3000               	movlw	0
  4860  0E0E  00C4               	movwf	(__PIR^(0+128)+36)
  4861  0E0F  0008               	return
  4862  0E10                     __end_of_PIR_Initialization:	
  4863                           
  4864                           	psect	text20
  4865  0E3A                     __ptext20:	
  4866 ;; *************** function _Mcu_Initialization *****************
  4867 ;; Defined at:
  4868 ;;		line 30 in file "../src/MCU_B1.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;		None               void
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4882 ;;      Params:         0       0       0       0
  4883 ;;      Locals:         0       0       0       0
  4884 ;;      Temps:          0       0       0       0
  4885 ;;      Totals:         0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    4
  4889 ;; This function calls:
  4890 ;;		_ADC_Set
  4891 ;;		_Fosc_Set
  4892 ;;		_IO_Set
  4893 ;;		_TMR1_Set
  4894 ;;		_WDT_Set
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function _Mcu_Initialization
  4902  0E3A                     _Mcu_Initialization:	
  4903                           
  4904                           ;MCU_B1.c: 32: Fosc_Set();
  4905                           
  4906                           ;incstack = 0
  4907                           ; Regs used in _Mcu_Initialization: [wreg+status,2+status,0+pclath+cstack]
  4908  0E3A  158A  2596  158A   	fcall	_Fosc_Set
  4909                           
  4910                           ;MCU_B1.c: 34: IO_Set();
  4911  0E3D  158A  271F  158A   	fcall	_IO_Set
  4912                           
  4913                           ;MCU_B1.c: 36: ;;
  4914                           ;MCU_B1.c: 38: TMR1_Set();
  4915  0E40  158A  261E  158A   	fcall	_TMR1_Set
  4916                           
  4917                           ;MCU_B1.c: 40: ADC_Set();
  4918  0E43  158A  25AF  158A   	fcall	_ADC_Set
  4919                           
  4920                           ;MCU_B1.c: 42: ;;
  4921                           ;MCU_B1.c: 44: ;;
  4922                           ;MCU_B1.c: 46: ;;
  4923                           ;MCU_B1.c: 48: ;;
  4924                           ;MCU_B1.c: 50: ;;
  4925                           ;MCU_B1.c: 52: WDT_Set();
  4926  0E46  158A  262C         	fcall	_WDT_Set
  4927  0E48  0008               	return
  4928  0E49                     __end_of_Mcu_Initialization:	
  4929                           
  4930                           	psect	text21
  4931  0E2C                     __ptext21:	
  4932 ;; *************** function _WDT_Set *****************
  4933 ;; Defined at:
  4934 ;;		line 1102 in file "../src/MCU_B1.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4948 ;;      Params:         0       0       0       0
  4949 ;;      Locals:         0       0       0       0
  4950 ;;      Temps:          0       1       0       0
  4951 ;;      Totals:         0       1       0       0
  4952 ;;Total ram usage:        1 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    3
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_Mcu_Initialization
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           
  4963                           ;psect for function _WDT_Set
  4964  0E2C                     _WDT_Set:	
  4965                           
  4966                           ;MCU_B1.c: 1104: PSA = 1;
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _WDT_Set: [wreg]
  4970  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  4971  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  4972  0E2E  1581               	bsf	1,3	;volatile
  4973                           
  4974                           ;MCU_B1.c: 1105: PS0 = 1;
  4975  0E2F  1401               	bsf	1,0	;volatile
  4976                           
  4977                           ;MCU_B1.c: 1106: PS1 = 1;
  4978  0E30  1481               	bsf	1,1	;volatile
  4979                           
  4980                           ;MCU_B1.c: 1107: PS2 = 1;
  4981  0E31  1501               	bsf	1,2	;volatile
  4982                           
  4983                           ;MCU_B1.c: 1111: WDT.Enable = 1;
  4984  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0E34  1441               	bsf	_WDT,0
  4987                           
  4988                           ;MCU_B1.c: 1112: WDT.Timer = 10;
  4989  0E35  300A               	movlw	10
  4990  0E36  00D7               	movwf	??_WDT_Set
  4991  0E37  0857               	movf	??_WDT_Set,w
  4992  0E38  00C2               	movwf	_WDT+1
  4993  0E39  0008               	return
  4994  0E3A                     __end_of_WDT_Set:	
  4995                           
  4996                           	psect	text22
  4997  0E1E                     __ptext22:	
  4998 ;; *************** function _TMR1_Set *****************
  4999 ;; Defined at:
  5000 ;;		line 226 in file "../src/MCU_B1.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;		None               void
  5007 ;; Registers used:
  5008 ;;		wreg
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5014 ;;      Params:         0       0       0       0
  5015 ;;      Locals:         0       0       0       0
  5016 ;;      Temps:          0       0       0       0
  5017 ;;      Totals:         0       0       0       0
  5018 ;;Total ram usage:        0 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    3
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_Mcu_Initialization
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _TMR1_Set
  5030  0E1E                     _TMR1_Set:	
  5031                           
  5032                           ;MCU_B1.c: 227: T1CON = (0x40 | 0x00 | 0x01);
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in _TMR1_Set: [wreg]
  5036  0E1E  3041               	movlw	65
  5037  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  5038  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  5039  0E21  0090               	movwf	16	;volatile
  5040                           
  5041                           ;MCU_B1.c: 228: TMR1H = (int)((65536-1480)/256);
  5042  0E22  30FA               	movlw	250
  5043  0E23  008F               	movwf	15	;volatile
  5044                           
  5045                           ;MCU_B1.c: 229: TMR1L = (int)((65536-1480)%256);
  5046  0E24  3038               	movlw	56
  5047  0E25  008E               	movwf	14	;volatile
  5048                           
  5049                           ;MCU_B1.c: 230: TMR1IE = 1;
  5050  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  5051  0E27  1303               	bcf	3,6	;RP1=0, select bank1
  5052  0E28  140C               	bsf	12,0	;volatile
  5053                           
  5054                           ;MCU_B1.c: 231: PEIE = 1;
  5055  0E29  170B               	bsf	11,6	;volatile
  5056                           
  5057                           ;MCU_B1.c: 232: GIE = 1;
  5058  0E2A  178B               	bsf	11,7	;volatile
  5059  0E2B  0008               	return
  5060  0E2C                     __end_of_TMR1_Set:	
  5061                           
  5062                           	psect	text23
  5063  0F1F                     __ptext23:	
  5064 ;; *************** function _IO_Set *****************
  5065 ;; Defined at:
  5066 ;;		line 60 in file "../src/MCU_B1.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;		None               void
  5073 ;; Registers used:
  5074 ;;		wreg, status,2
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5080 ;;      Params:         0       0       0       0
  5081 ;;      Locals:         0       0       0       0
  5082 ;;      Temps:          0       0       0       0
  5083 ;;      Totals:         0       0       0       0
  5084 ;;Total ram usage:        0 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_Mcu_Initialization
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _IO_Set
  5096  0F1F                     _IO_Set:	
  5097                           
  5098                           ;MCU_B1.c: 62: TRISA = 0b10101111;;
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _IO_Set: [wreg+status,2]
  5102  0F1F  30AF               	movlw	175
  5103  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  5104  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  5105  0F22  0085               	movwf	5	;volatile
  5106                           
  5107                           ;MCU_B1.c: 63: TRISB = 0b00000001;;
  5108  0F23  3001               	movlw	1
  5109  0F24  0086               	movwf	6	;volatile
  5110                           
  5111                           ;MCU_B1.c: 64: TRISC = 0b00000000;;
  5112  0F25  0187               	clrf	7	;volatile
  5113                           
  5114                           ;MCU_B1.c: 65: ANSELA = 0b10100111;;
  5115  0F26  30A7               	movlw	167
  5116  0F27  1683               	bsf	3,5	;RP0=1, select bank3
  5117  0F28  1703               	bsf	3,6	;RP1=1, select bank3
  5118  0F29  0085               	movwf	5	;volatile
  5119                           
  5120                           ;MCU_B1.c: 66: ANSELB = 0b00000001;;
  5121  0F2A  3001               	movlw	1
  5122  0F2B  0086               	movwf	6	;volatile
  5123                           
  5124                           ;MCU_B1.c: 67: PORTA = 0b10101111;;
  5125  0F2C  30AF               	movlw	175
  5126  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0F2F  0085               	movwf	5	;volatile
  5129                           
  5130                           ;MCU_B1.c: 68: PORTB = 0b00000001;;
  5131  0F30  3001               	movlw	1
  5132  0F31  0086               	movwf	6	;volatile
  5133                           
  5134                           ;MCU_B1.c: 69: PORTC = 0b00000000;;
  5135  0F32  0187               	clrf	7	;volatile
  5136                           
  5137                           ;MCU_B1.c: 71: WPUB = 0b00000000;;
  5138  0F33  1683               	bsf	3,5	;RP0=1, select bank1
  5139  0F34  1303               	bcf	3,6	;RP1=0, select bank1
  5140  0F35  0195               	clrf	21	;volatile
  5141  0F36  0008               	return
  5142  0F37                     __end_of_IO_Set:	
  5143                           
  5144                           	psect	text24
  5145  0D96                     __ptext24:	
  5146 ;; *************** function _Fosc_Set *****************
  5147 ;; Defined at:
  5148 ;;		line 56 in file "../src/MCU_B1.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;		None               void
  5155 ;; Registers used:
  5156 ;;		wreg
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5162 ;;      Params:         0       0       0       0
  5163 ;;      Locals:         0       0       0       0
  5164 ;;      Temps:          0       0       0       0
  5165 ;;      Totals:         0       0       0       0
  5166 ;;Total ram usage:        0 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    3
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_Mcu_Initialization
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function _Fosc_Set
  5178  0D96                     _Fosc_Set:	
  5179                           
  5180                           ;MCU_B1.c: 57: OSCCON = 0x3c;
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in _Fosc_Set: [wreg]
  5184  0D96  303C               	movlw	60
  5185  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  5186  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  5187  0D99  0090               	movwf	16	;volatile
  5188  0D9A  0008               	return
  5189  0D9B                     __end_of_Fosc_Set:	
  5190                           
  5191                           	psect	text25
  5192  0DAF                     __ptext25:	
  5193 ;; *************** function _ADC_Set *****************
  5194 ;; Defined at:
  5195 ;;		line 427 in file "../src/MCU_B1.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;		None               void
  5202 ;; Registers used:
  5203 ;;		wreg
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5209 ;;      Params:         0       0       0       0
  5210 ;;      Locals:         0       0       0       0
  5211 ;;      Temps:          0       0       0       0
  5212 ;;      Totals:         0       0       0       0
  5213 ;;Total ram usage:        0 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    3
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_Mcu_Initialization
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _ADC_Set
  5225  0DAF                     _ADC_Set:	
  5226                           
  5227                           ;MCU_B1.c: 428: ADCON1 = 0x73;
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _ADC_Set: [wreg]
  5231  0DAF  3073               	movlw	115
  5232  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  5233  0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  5234  0DB2  009F               	movwf	31	;volatile
  5235                           
  5236                           ;MCU_B1.c: 429: FVRCON = 0xc1;
  5237  0DB3  30C1               	movlw	193
  5238  0DB4  009D               	movwf	29	;volatile
  5239  0DB5  0008               	return
  5240  0DB6                     __end_of_ADC_Set:	
  5241                           
  5242                           	psect	text26
  5243  0D84                     __ptext26:	
  5244 ;; *************** function _LED_Main *****************
  5245 ;; Defined at:
  5246 ;;		line 47 in file "../src/LED_B1.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;		None               void
  5253 ;; Registers used:
  5254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5260 ;;      Params:         0       0       0       0
  5261 ;;      Locals:         0       0       0       0
  5262 ;;      Temps:          0       0       0       0
  5263 ;;      Totals:         0       0       0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    6
  5267 ;; This function calls:
  5268 ;;		_setPIRLED_Main
  5269 ;; This function is called by:
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _LED_Main
  5276  0D84                     _LED_Main:	
  5277                           
  5278                           ;LED_B1.c: 55: setPIRLED_Main();
  5279                           
  5280                           ;incstack = 0
  5281                           ; Regs used in _LED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5282  0D84  118A  244E         	fcall	_setPIRLED_Main
  5283  0D86  0008               	return
  5284  0D87                     __end_of_LED_Main:	
  5285                           
  5286                           	psect	text27
  5287  044E                     __ptext27:	
  5288 ;; *************** function _setPIRLED_Main *****************
  5289 ;; Defined at:
  5290 ;;		line 265 in file "../src/LED_B1.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;		None
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  count           1    5[BANK0 ] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;		None               void
  5297 ;; Registers used:
  5298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5304 ;;      Params:         0       0       0       0
  5305 ;;      Locals:         0       1       0       0
  5306 ;;      Temps:          0       1       0       0
  5307 ;;      Totals:         0       2       0       0
  5308 ;;Total ram usage:        2 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    5
  5311 ;; This function calls:
  5312 ;;		_setLED
  5313 ;; This function is called by:
  5314 ;;		_LED_Main
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           
  5319                           ;psect for function _setPIRLED_Main
  5320  044E                     _setPIRLED_Main:	
  5321                           
  5322                           ;LED_B1.c: 267: char count;
  5323                           ;LED_B1.c: 268: if (PIRLED.GO == 1) {
  5324                           
  5325                           ;incstack = 0
  5326                           ; Regs used in _setPIRLED_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5327  044E  1283               	bcf	3,5	;RP0=0, select bank0
  5328  044F  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0450  1C36               	btfss	_PIRLED,0
  5330  0451  0008               	return
  5331                           
  5332                           ;LED_B1.c: 269: PIRLED.Time++;
  5333  0452  3001               	movlw	1
  5334  0453  07B8               	addwf	_PIRLED+2,f
  5335  0454  1803               	skipnc
  5336  0455  0AB9               	incf	_PIRLED+3,f
  5337  0456  3000               	movlw	0
  5338  0457  07B9               	addwf	_PIRLED+3,f
  5339                           
  5340                           ;LED_B1.c: 270: if (PIRLED.Time >= 500 / 20) {
  5341  0458  3000               	movlw	0
  5342  0459  0239               	subwf	_PIRLED+3,w
  5343  045A  3019               	movlw	25
  5344  045B  1903               	skipnz
  5345  045C  0238               	subwf	_PIRLED+2,w
  5346  045D  1C03               	skipc
  5347  045E  0008               	return
  5348                           
  5349                           ;LED_B1.c: 271: PIRLED.Time = 0;
  5350  045F  01B8               	clrf	_PIRLED+2
  5351  0460  01B9               	clrf	_PIRLED+3
  5352                           
  5353                           ;LED_B1.c: 272: setLED(1, 0);
  5354  0461  01D9               	clrf	setLED@command
  5355  0462  3001               	movlw	1
  5356  0463  118A  24BF  118A   	fcall	_setLED
  5357                           
  5358                           ;LED_B1.c: 273: setLED(2, 0);
  5359  0466  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0467  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0468  01D9               	clrf	setLED@command
  5362  0469  3002               	movlw	2
  5363  046A  118A  24BF  118A   	fcall	_setLED
  5364                           
  5365                           ;LED_B1.c: 274: if (PIRLED.GO1 == 1) {
  5366  046D  1283               	bcf	3,5	;RP0=0, select bank0
  5367  046E  1303               	bcf	3,6	;RP1=0, select bank0
  5368  046F  1CB6               	btfss	_PIRLED,1
  5369  0470  2C75               	goto	l4361
  5370                           
  5371                           ;LED_B1.c: 275: count = 4;
  5372  0471  3004               	movlw	4
  5373  0472  00DB               	movwf	??_setPIRLED_Main
  5374  0473  085B               	movf	??_setPIRLED_Main,w
  5375  0474  00DC               	movwf	setPIRLED_Main@count
  5376  0475                     l4361:	
  5377                           
  5378                           ;LED_B1.c: 276: }
  5379                           ;LED_B1.c: 277: if (PIRLED.GO2 == 1) {
  5380  0475  1D36               	btfss	_PIRLED,2
  5381  0476  2C7B               	goto	l4365
  5382                           
  5383                           ;LED_B1.c: 278: count = 6;
  5384  0477  3006               	movlw	6
  5385  0478  00DB               	movwf	??_setPIRLED_Main
  5386  0479  085B               	movf	??_setPIRLED_Main,w
  5387  047A  00DC               	movwf	setPIRLED_Main@count
  5388  047B                     l4365:	
  5389                           
  5390                           ;LED_B1.c: 279: }
  5391                           ;LED_B1.c: 280: if (PIRLED.GO3 == 1) {
  5392  047B  1DB6               	btfss	_PIRLED,3
  5393  047C  2C81               	goto	l4369
  5394                           
  5395                           ;LED_B1.c: 281: count = 8;
  5396  047D  3008               	movlw	8
  5397  047E  00DB               	movwf	??_setPIRLED_Main
  5398  047F  085B               	movf	??_setPIRLED_Main,w
  5399  0480  00DC               	movwf	setPIRLED_Main@count
  5400  0481                     l4369:	
  5401                           
  5402                           ;LED_B1.c: 282: }
  5403                           ;LED_B1.c: 283: PIRLED.Count++;
  5404  0481  3001               	movlw	1
  5405  0482  00DB               	movwf	??_setPIRLED_Main
  5406  0483  085B               	movf	??_setPIRLED_Main,w
  5407  0484  07B7               	addwf	_PIRLED+1,f
  5408                           
  5409                           ;LED_B1.c: 284: if (PIRLED.Count == 1 || PIRLED.Count == 2) {
  5410  0485  0837               	movf	_PIRLED+1,w
  5411  0486  3A01               	xorlw	1
  5412  0487  1903               	skipnz
  5413  0488  2C8D               	goto	l4375
  5414  0489  0837               	movf	_PIRLED+1,w
  5415  048A  3A02               	xorlw	2
  5416  048B  1D03               	skipz
  5417  048C  2CA1               	goto	l4379
  5418  048D                     l4375:	
  5419                           
  5420                           ;LED_B1.c: 285: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5421  048D  1003               	clrc
  5422  048E  1E36               	btfss	_PIRLED,4
  5423  048F  1403               	setc
  5424  0490  1C03               	btfss	3,0
  5425  0491  2C96               	goto	u5020
  5426  0492  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0493  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0494  1636               	bsf	_PIRLED,4
  5429  0495  2C99               	goto	l4377
  5430  0496                     u5020:	
  5431  0496  1283               	bcf	3,5	;RP0=0, select bank0
  5432  0497  1303               	bcf	3,6	;RP1=0, select bank0
  5433  0498  1236               	bcf	_PIRLED,4
  5434  0499                     l4377:	
  5435                           
  5436                           ;LED_B1.c: 286: setLED(2, PIRLED.status);
  5437  0499  3000               	movlw	0
  5438  049A  1A36               	btfsc	_PIRLED,4
  5439  049B  3001               	movlw	1
  5440  049C  00D9               	movwf	setLED@command
  5441  049D  3002               	movlw	2
  5442  049E  118A  24BF         	fcall	_setLED
  5443                           
  5444                           ;LED_B1.c: 287: } else {
  5445  04A0  0008               	return
  5446  04A1                     l4379:	
  5447                           
  5448                           ;LED_B1.c: 288: PIRLED.status = PIRLED.status == 1 ? 0 : 1;
  5449  04A1  1003               	clrc
  5450  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  5451  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  5452  04A4  1E36               	btfss	_PIRLED,4
  5453  04A5  1403               	setc
  5454  04A6  1C03               	btfss	3,0
  5455  04A7  2CAC               	goto	u5040
  5456  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  5457  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  5458  04AA  1636               	bsf	_PIRLED,4
  5459  04AB  2CAF               	goto	l4381
  5460  04AC                     u5040:	
  5461  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  5462  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  5463  04AE  1236               	bcf	_PIRLED,4
  5464  04AF                     l4381:	
  5465                           
  5466                           ;LED_B1.c: 289: setLED(1, PIRLED.status);
  5467  04AF  3000               	movlw	0
  5468  04B0  1A36               	btfsc	_PIRLED,4
  5469  04B1  3001               	movlw	1
  5470  04B2  00D9               	movwf	setLED@command
  5471  04B3  3001               	movlw	1
  5472  04B4  118A  24BF  118A   	fcall	_setLED
  5473                           
  5474                           ;LED_B1.c: 290: if (PIRLED.Count == count) {
  5475  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  5476  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  5477  04B9  0837               	movf	_PIRLED+1,w
  5478  04BA  065C               	xorwf	setPIRLED_Main@count,w
  5479  04BB  1D03               	skipz
  5480  04BC  0008               	return
  5481                           
  5482                           ;LED_B1.c: 291: PIRLED.Count = 0;
  5483  04BD  01B7               	clrf	_PIRLED+1
  5484  04BE  0008               	return
  5485  04BF                     __end_of_setPIRLED_Main:	
  5486                           
  5487                           	psect	text28
  5488  0DEA                     __ptext28:	
  5489 ;; *************** function _LED_Initialization *****************
  5490 ;; Defined at:
  5491 ;;		line 31 in file "../src/LED_B1.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;		None               void
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5505 ;;      Params:         0       0       0       0
  5506 ;;      Locals:         0       0       0       0
  5507 ;;      Temps:          0       0       0       0
  5508 ;;      Totals:         0       0       0       0
  5509 ;;Total ram usage:        0 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    6
  5512 ;; This function calls:
  5513 ;;		_setLED_Initialization
  5514 ;; This function is called by:
  5515 ;;		_main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _LED_Initialization
  5521  0DEA                     _LED_Initialization:	
  5522                           
  5523                           ;LED_B1.c: 33: setLED_Initialization(1);
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _LED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5527  0DEA  3001               	movlw	1
  5528  0DEB  158A  268C  158A   	fcall	_setLED_Initialization
  5529                           
  5530                           ;LED_B1.c: 36: setLED_Initialization(2);
  5531  0DEE  3002               	movlw	2
  5532  0DEF  158A  268C  158A   	fcall	_setLED_Initialization
  5533                           
  5534                           ;LED_B1.c: 42: setLED_Initialization(99);
  5535  0DF2  3063               	movlw	99
  5536  0DF3  158A  268C         	fcall	_setLED_Initialization
  5537  0DF5  0008               	return
  5538  0DF6                     __end_of_LED_Initialization:	
  5539                           
  5540                           	psect	text29
  5541  0E8C                     __ptext29:	
  5542 ;; *************** function _setLED_Initialization *****************
  5543 ;; Defined at:
  5544 ;;		line 74 in file "../src/LED_B1.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  led             1    wreg     unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  led             1    4[BANK0 ] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;		None               void
  5551 ;; Registers used:
  5552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5558 ;;      Params:         0       0       0       0
  5559 ;;      Locals:         0       1       0       0
  5560 ;;      Temps:          0       0       0       0
  5561 ;;      Totals:         0       1       0       0
  5562 ;;Total ram usage:        1 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    5
  5565 ;; This function calls:
  5566 ;;		_LedPointSelect
  5567 ;;		_setLED
  5568 ;; This function is called by:
  5569 ;;		_LED_Initialization
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _setLED_Initialization
  5575  0E8C                     _setLED_Initialization:	
  5576                           
  5577                           ;incstack = 0
  5578                           ; Regs used in _setLED_Initialization: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5579                           ;setLED_Initialization@led stored from wreg
  5580  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  5581  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  5582  0E8E  00DB               	movwf	setLED_Initialization@led
  5583                           
  5584                           ;LED_B1.c: 75: LedPointSelect(led);
  5585  0E8F  085B               	movf	setLED_Initialization@led,w
  5586  0E90  158A  2787  158A   	fcall	_LedPointSelect
  5587                           
  5588                           ;LED_B1.c: 76: LED->Enable = 1;
  5589  0E93  0873               	movf	_LED,w
  5590  0E94  0084               	movwf	4
  5591  0E95  1383               	bcf	3,7	;select IRP bank0
  5592  0E96  1400               	bsf	0,0
  5593                           
  5594                           ;LED_B1.c: 77: setLED(led, 0);
  5595  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5596  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5597  0E99  01D9               	clrf	setLED@command
  5598  0E9A  085B               	movf	setLED_Initialization@led,w
  5599  0E9B  118A  24BF         	fcall	_setLED
  5600  0E9D  0008               	return
  5601  0E9E                     __end_of_setLED_Initialization:	
  5602                           
  5603                           	psect	text30
  5604  0691                     __ptext30:	
  5605 ;; *************** function _Exception_Main *****************
  5606 ;; Defined at:
  5607 ;;		line 499 in file "../src/Main_B1.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  error           1    9[BANK0 ] unsigned char 
  5612 ;;  status          1    8[BANK0 ] unsigned char 
  5613 ;;  count           1    7[BANK0 ] unsigned char 
  5614 ;;  lights          1    6[BANK0 ] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5624 ;;      Params:         0       0       0       0
  5625 ;;      Locals:         0       4       0       0
  5626 ;;      Temps:          0       1       0       0
  5627 ;;      Totals:         0       5       0       0
  5628 ;;Total ram usage:        5 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    5
  5631 ;; This function calls:
  5632 ;;		_getDimmerLights_Status
  5633 ;;		_getMain_All_Error_Status
  5634 ;;		_setLED
  5635 ;; This function is called by:
  5636 ;;		_main
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _Exception_Main
  5642  0691                     _Exception_Main:	
  5643                           
  5644                           ;Main_B1.c: 500: char error = getMain_All_Error_Status(0);
  5645                           
  5646                           ;incstack = 0
  5647                           ; Regs used in _Exception_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5648  0691  3000               	movlw	0
  5649  0692  158A  2737  118A   	fcall	_getMain_All_Error_Status
  5650  0695  1283               	bcf	3,5	;RP0=0, select bank0
  5651  0696  1303               	bcf	3,6	;RP1=0, select bank0
  5652  0697  00DC               	movwf	??_Exception_Main
  5653  0698  085C               	movf	??_Exception_Main,w
  5654  0699  00E0               	movwf	Exception_Main@error
  5655                           
  5656                           ;Main_B1.c: 501: char lights = 0, count = 1;
  5657  069A  01DD               	clrf	Exception_Main@lights
  5658  069B  01DE               	clrf	Exception_Main@count
  5659  069C  0ADE               	incf	Exception_Main@count,f
  5660                           
  5661                           ;Main_B1.c: 502: char status = 0;
  5662  069D  01DF               	clrf	Exception_Main@status
  5663                           
  5664                           ;Main_B1.c: 504: if (myMain.Error_Run == 1) {
  5665  069E  1DB3               	btfss	_myMain+2,3
  5666  069F  2EAC               	goto	l4889
  5667                           
  5668                           ;Main_B1.c: 505: if (error == 0) {
  5669  06A0  08E0               	movf	Exception_Main@error,f
  5670  06A1  1D03               	skipz
  5671  06A2  0008               	return
  5672                           
  5673                           ;Main_B1.c: 506: myMain.Error_Run = 0;
  5674  06A3  11B3               	bcf	_myMain+2,3
  5675                           
  5676                           ;Main_B1.c: 511: setLED(error, 110);
  5677  06A4  306E               	movlw	110
  5678  06A5  00DC               	movwf	??_Exception_Main
  5679  06A6  085C               	movf	??_Exception_Main,w
  5680  06A7  00D9               	movwf	setLED@command
  5681  06A8  0860               	movf	Exception_Main@error,w
  5682  06A9  118A  24BF         	fcall	_setLED
  5683                           
  5684                           ;Main_B1.c: 522: }
  5685                           ;Main_B1.c: 523: } else {
  5686  06AB  0008               	return
  5687  06AC                     l4889:	
  5688                           
  5689                           ;Main_B1.c: 524: if (error != 0) {
  5690  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  5691  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  5692  06AE  0860               	movf	Exception_Main@error,w
  5693  06AF  1903               	btfsc	3,2
  5694  06B0  0008               	return
  5695                           
  5696                           ;Main_B1.c: 525: myMain.Error_Run = 1;
  5697  06B1  15B3               	bsf	_myMain+2,3
  5698                           
  5699                           ;Main_B1.c: 529: setLED(error, 111);
  5700  06B2  306F               	movlw	111
  5701  06B3  00DC               	movwf	??_Exception_Main
  5702  06B4  085C               	movf	??_Exception_Main,w
  5703  06B5  00D9               	movwf	setLED@command
  5704  06B6  0860               	movf	Exception_Main@error,w
  5705  06B7  118A  24BF  118A   	fcall	_setLED
  5706                           
  5707                           ;Main_B1.c: 538: switch (error) {
  5708  06BA  2EC9               	goto	l4901
  5709  06BB                     l4895:	
  5710                           ;Main_B1.c: 539: case 2:
  5711                           
  5712                           
  5713                           ;Main_B1.c: 542: if (getDimmerLights_Status(1) == 1) {
  5714  06BB  3001               	movlw	1
  5715  06BC  158A  2659  118A   	fcall	_getDimmerLights_Status
  5716  06BF  3A01               	xorlw	1
  5717  06C0  1903               	btfsc	3,2
  5718  06C1  2EC5               	goto	l4897
  5719  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  5720  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  5721  06C4  0008               	return
  5722  06C5                     l4897:	
  5723                           
  5724                           ;Main_B1.c: 543: Dimmer.PIR_Close_Status = 1;
  5725  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  5726  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  5727  06C7  142D               	bsf	_Dimmer+1,0
  5728                           
  5729                           ;Main_B1.c: 586: }
  5730                           
  5731                           ;Main_B1.c: 585: break;
  5732                           
  5733                           ;Main_B1.c: 561: case 3:
  5734                           
  5735                           ;Main_B1.c: 544: }
  5736                           ;Main_B1.c: 560: break;
  5737  06C8  0008               	return
  5738  06C9                     l4901:	
  5739  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  5740  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  5741  06CB  0860               	movf	Exception_Main@error,w
  5742                           
  5743                           ; Switch size 1, requested type "space"
  5744                           ; Number of cases is 2, Range of values is 2 to 3
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte            7     4 (average)
  5748                           ; direct_byte           14    10 (fixed)
  5749                           ; jumptable            263     9 (fixed)
  5750                           ;	Chosen strategy is simple_byte
  5751  06CC  3A02               	xorlw	2	; case 2
  5752  06CD  1903               	skipnz
  5753  06CE  2EBB               	goto	l4895
  5754  06CF  3A01               	xorlw	1	; case 3
  5755  06D0  1903               	skipnz
  5756  06D1  2ED4               	goto	l826
  5757  06D2  2ED4               	goto	l826
  5758  06D3  0008               	return
  5759  06D4                     l826:	
  5760  06D4  0008               	return
  5761  06D5                     __end_of_Exception_Main:	
  5762                           
  5763                           	psect	text31
  5764  04BF                     __ptext31:	
  5765 ;; *************** function _setLED *****************
  5766 ;; Defined at:
  5767 ;;		line 81 in file "../src/LED_B1.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  led             1    wreg     unsigned char 
  5770 ;;  command         1    2[BANK0 ] unsigned char 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  led             1    3[BANK0 ] unsigned char 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;		None               void
  5775 ;; Registers used:
  5776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5782 ;;      Params:         0       1       0       0
  5783 ;;      Locals:         0       1       0       0
  5784 ;;      Temps:          0       0       0       0
  5785 ;;      Totals:         0       2       0       0
  5786 ;;Total ram usage:        2 bytes
  5787 ;; Hardware stack levels used:    1
  5788 ;; Hardware stack levels required when called:    4
  5789 ;; This function calls:
  5790 ;;		_LedPointSelect
  5791 ;; This function is called by:
  5792 ;;		_setLED_Initialization
  5793 ;;		_setPIRLED_Main
  5794 ;;		_Exception_Main
  5795 ;;		_PIR_Main
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function _setLED
  5801  04BF                     _setLED:	
  5802                           
  5803                           ;incstack = 0
  5804                           ; Regs used in _setLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5805                           ;setLED@led stored from wreg
  5806  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  5807  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  5808  04C1  00DA               	movwf	setLED@led
  5809                           
  5810                           ;LED_B1.c: 82: LedPointSelect(led);
  5811  04C2  085A               	movf	setLED@led,w
  5812  04C3  158A  2787  118A   	fcall	_LedPointSelect
  5813                           
  5814                           ;LED_B1.c: 83: if (command == 0) {
  5815  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  5816  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  5817  04C8  08D9               	movf	setLED@command,f
  5818  04C9  1D03               	skipz
  5819  04CA  2CD8               	goto	l4153
  5820                           
  5821                           ;LED_B1.c: 85: if (led == 1) {
  5822  04CB  085A               	movf	setLED@led,w
  5823  04CC  3A01               	xorlw	1
  5824  04CD  1D03               	skipz
  5825  04CE  2CD0               	goto	l4145
  5826                           
  5827                           ;LED_B1.c: 89: RB4 = 1;
  5828  04CF  1606               	bsf	6,4	;volatile
  5829  04D0                     l4145:	
  5830                           
  5831                           ;LED_B1.c: 91: }
  5832                           ;LED_B1.c: 94: if (led == 2) {
  5833  04D0  085A               	movf	setLED@led,w
  5834  04D1  3A02               	xorlw	2
  5835  04D2  1903               	btfsc	3,2
  5836                           
  5837                           ;LED_B1.c: 98: RB5 = 1;
  5838  04D3  1686               	bsf	6,5	;volatile
  5839                           
  5840                           ;LED_B1.c: 100: }
  5841                           ;LED_B1.c: 112: if (led == 99) {
  5842  04D4  085A               	movf	setLED@led,w
  5843  04D5  3A63               	xorlw	99
  5844  04D6  1903               	btfsc	3,2
  5845                           
  5846                           ;LED_B1.c: 116: RB3 = 1;
  5847  04D7  1586               	bsf	6,3	;volatile
  5848  04D8                     l4153:	
  5849                           
  5850                           ;LED_B1.c: 118: }
  5851                           ;LED_B1.c: 120: }
  5852                           ;LED_B1.c: 121: if (command == 1) {
  5853  04D8  0859               	movf	setLED@command,w
  5854  04D9  3A01               	xorlw	1
  5855  04DA  1D03               	skipz
  5856  04DB  2CE9               	goto	l4167
  5857                           
  5858                           ;LED_B1.c: 123: if (led == 1) {
  5859  04DC  085A               	movf	setLED@led,w
  5860  04DD  3A01               	xorlw	1
  5861  04DE  1D03               	skipz
  5862  04DF  2CE1               	goto	l4159
  5863                           
  5864                           ;LED_B1.c: 127: RB4 = 0;
  5865  04E0  1206               	bcf	6,4	;volatile
  5866  04E1                     l4159:	
  5867                           
  5868                           ;LED_B1.c: 129: }
  5869                           ;LED_B1.c: 132: if (led == 2) {
  5870  04E1  085A               	movf	setLED@led,w
  5871  04E2  3A02               	xorlw	2
  5872  04E3  1903               	btfsc	3,2
  5873                           
  5874                           ;LED_B1.c: 136: RB5 = 0;
  5875  04E4  1286               	bcf	6,5	;volatile
  5876                           
  5877                           ;LED_B1.c: 138: }
  5878                           ;LED_B1.c: 150: if (led == 99) {
  5879  04E5  085A               	movf	setLED@led,w
  5880  04E6  3A63               	xorlw	99
  5881  04E7  1903               	btfsc	3,2
  5882                           
  5883                           ;LED_B1.c: 154: RB3 = 0;
  5884  04E8  1186               	bcf	6,3	;volatile
  5885  04E9                     l4167:	
  5886                           
  5887                           ;LED_B1.c: 156: }
  5888                           ;LED_B1.c: 158: }
  5889                           ;LED_B1.c: 159: if (command == 10) {
  5890  04E9  0859               	movf	setLED@command,w
  5891  04EA  3A0A               	xorlw	10
  5892  04EB  1D03               	skipz
  5893  04EC  2D04               	goto	l4185
  5894                           
  5895                           ;LED_B1.c: 160: LED->GO = 0;
  5896  04ED  0873               	movf	_LED,w
  5897  04EE  0084               	movwf	4
  5898  04EF  1383               	bcf	3,7	;select IRP bank0
  5899  04F0  1080               	bcf	0,1
  5900                           
  5901                           ;LED_B1.c: 161: LED->Time = 0;
  5902  04F1  0A73               	incf	_LED,w
  5903  04F2  0084               	movwf	4
  5904  04F3  0180               	clrf	0
  5905  04F4  0A84               	incf	4,f
  5906  04F5  0180               	clrf	0
  5907                           
  5908                           ;LED_B1.c: 163: if (led == 1) {
  5909  04F6  085A               	movf	setLED@led,w
  5910  04F7  3A01               	xorlw	1
  5911  04F8  1D03               	skipz
  5912  04F9  2CFC               	goto	l4177
  5913                           
  5914                           ;LED_B1.c: 167: RB4 = 1;
  5915  04FA  1606               	bsf	6,4	;volatile
  5916                           
  5917                           ;LED_B1.c: 169: }
  5918  04FB  2D00               	goto	l4181
  5919  04FC                     l4177:	
  5920                           
  5921                           ;LED_B1.c: 172: else if (led == 2) {
  5922  04FC  085A               	movf	setLED@led,w
  5923  04FD  3A02               	xorlw	2
  5924  04FE  1903               	btfsc	3,2
  5925                           
  5926                           ;LED_B1.c: 176: RB5 = 1;
  5927  04FF  1686               	bsf	6,5	;volatile
  5928  0500                     l4181:	
  5929                           
  5930                           ;LED_B1.c: 178: }
  5931                           ;LED_B1.c: 190: if (led == 99) {
  5932  0500  085A               	movf	setLED@led,w
  5933  0501  3A63               	xorlw	99
  5934  0502  1903               	btfsc	3,2
  5935                           
  5936                           ;LED_B1.c: 194: RB3 = 1;
  5937  0503  1586               	bsf	6,3	;volatile
  5938  0504                     l4185:	
  5939                           
  5940                           ;LED_B1.c: 196: }
  5941                           ;LED_B1.c: 198: }
  5942                           ;LED_B1.c: 199: if (command == 11) {
  5943  0504  0859               	movf	setLED@command,w
  5944  0505  3A0B               	xorlw	11
  5945  0506  1D03               	skipz
  5946  0507  2D0C               	goto	l4189
  5947                           
  5948                           ;LED_B1.c: 200: LED->GO = 1;
  5949  0508  0873               	movf	_LED,w
  5950  0509  0084               	movwf	4
  5951  050A  1383               	bcf	3,7	;select IRP bank0
  5952  050B  1480               	bsf	0,1
  5953  050C                     l4189:	
  5954                           
  5955                           ;LED_B1.c: 201: }
  5956                           ;LED_B1.c: 205: if (command == 111) {
  5957  050C  0859               	movf	setLED@command,w
  5958  050D  3A6F               	xorlw	111
  5959  050E  1D03               	skipz
  5960  050F  2D2A               	goto	l4215
  5961                           
  5962                           ;LED_B1.c: 206: PIRLED.Count = 0;
  5963  0510  01B7               	clrf	_PIRLED+1
  5964                           
  5965                           ;LED_B1.c: 207: PIRLED.Time = 0;
  5966  0511  01B8               	clrf	_PIRLED+2
  5967  0512  01B9               	clrf	_PIRLED+3
  5968                           
  5969                           ;LED_B1.c: 208: PIRLED.status = 0;
  5970  0513  1236               	bcf	_PIRLED,4
  5971                           
  5972                           ;LED_B1.c: 209: PIRLED.GO = 1;
  5973  0514  1436               	bsf	_PIRLED,0
  5974                           
  5975                           ;LED_B1.c: 210: PIRLED.GO1 = 0;
  5976  0515  10B6               	bcf	_PIRLED,1
  5977                           
  5978                           ;LED_B1.c: 211: PIRLED.GO2 = 0;
  5979  0516  1136               	bcf	_PIRLED,2
  5980                           
  5981                           ;LED_B1.c: 212: PIRLED.GO3 = 0;
  5982  0517  11B6               	bcf	_PIRLED,3
  5983                           
  5984                           ;LED_B1.c: 213: if (led == 1) {
  5985  0518  085A               	movf	setLED@led,w
  5986  0519  3A01               	xorlw	1
  5987  051A  1D03               	skipz
  5988  051B  2D1E               	goto	l4207
  5989                           
  5990                           ;LED_B1.c: 214: PIRLED.GO1 = 1;
  5991  051C  14B6               	bsf	_PIRLED,1
  5992                           
  5993                           ;LED_B1.c: 215: } else if (led == 2) {
  5994  051D  0008               	return
  5995  051E                     l4207:	
  5996  051E  085A               	movf	setLED@led,w
  5997  051F  3A02               	xorlw	2
  5998  0520  1D03               	skipz
  5999  0521  2D24               	goto	l4211
  6000                           
  6001                           ;LED_B1.c: 216: PIRLED.GO2 = 1;
  6002  0522  1536               	bsf	_PIRLED,2
  6003                           
  6004                           ;LED_B1.c: 217: } else if (led == 3) {
  6005  0523  0008               	return
  6006  0524                     l4211:	
  6007  0524  085A               	movf	setLED@led,w
  6008  0525  3A03               	xorlw	3
  6009  0526  1D03               	skipz
  6010  0527  0008               	return
  6011                           
  6012                           ;LED_B1.c: 218: PIRLED.GO3 = 1;
  6013  0528  15B6               	bsf	_PIRLED,3
  6014                           
  6015                           ;LED_B1.c: 219: }
  6016                           ;LED_B1.c: 220: } else if (command == 110) {
  6017  0529  0008               	return
  6018  052A                     l4215:	
  6019  052A  0859               	movf	setLED@command,w
  6020  052B  3A6E               	xorlw	110
  6021  052C  1D03               	skipz
  6022  052D  0008               	return
  6023                           
  6024                           ;LED_B1.c: 221: PIRLED.GO = 0;
  6025  052E  1036               	bcf	_PIRLED,0
  6026  052F  0008               	return
  6027  0530                     __end_of_setLED:	
  6028                           
  6029                           	psect	text32
  6030  0F87                     __ptext32:	
  6031 ;; *************** function _LedPointSelect *****************
  6032 ;; Defined at:
  6033 ;;		line 7 in file "../src/LED_B1.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  led             1    wreg     unsigned char 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  led             1    1[BANK0 ] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;		None               void
  6040 ;; Registers used:
  6041 ;;		wreg
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6047 ;;      Params:         0       0       0       0
  6048 ;;      Locals:         0       1       0       0
  6049 ;;      Temps:          0       1       0       0
  6050 ;;      Totals:         0       2       0       0
  6051 ;;Total ram usage:        2 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    3
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_setLED_Initialization
  6058 ;;		_setLED
  6059 ;;		_setLED_Main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           
  6064                           ;psect for function _LedPointSelect
  6065  0F87                     _LedPointSelect:	
  6066                           
  6067                           ;incstack = 0
  6068                           ; Regs used in _LedPointSelect: [wreg]
  6069                           ;LedPointSelect@led stored from wreg
  6070  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  6071  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  6072  0F89  00D8               	movwf	LedPointSelect@led
  6073                           
  6074                           ;LED_B1.c: 9: if (led == 1) {
  6075  0F8A  0858               	movf	LedPointSelect@led,w
  6076  0F8B  3A01               	xorlw	1
  6077  0F8C  1D03               	skipz
  6078  0F8D  2F92               	goto	l481
  6079                           
  6080                           ;LED_B1.c: 10: LED = &VarLED1;
  6081  0F8E  304F               	movlw	_VarLED1& (0+255)
  6082  0F8F  00D7               	movwf	??_LedPointSelect
  6083  0F90  0857               	movf	??_LedPointSelect,w
  6084  0F91  00F3               	movwf	_LED
  6085  0F92                     l481:	
  6086                           
  6087                           ;LED_B1.c: 11: }
  6088                           ;LED_B1.c: 14: if (led == 2) {
  6089  0F92  0858               	movf	LedPointSelect@led,w
  6090  0F93  3A02               	xorlw	2
  6091  0F94  1D03               	skipz
  6092  0F95  2F9A               	goto	l482
  6093                           
  6094                           ;LED_B1.c: 15: LED = &VarLED2;
  6095  0F96  3053               	movlw	_VarLED2& (0+255)
  6096  0F97  00D7               	movwf	??_LedPointSelect
  6097  0F98  0857               	movf	??_LedPointSelect,w
  6098  0F99  00F3               	movwf	_LED
  6099  0F9A                     l482:	
  6100                           
  6101                           ;LED_B1.c: 16: }
  6102                           ;LED_B1.c: 24: if (led == 99) {
  6103  0F9A  0858               	movf	LedPointSelect@led,w
  6104  0F9B  3A63               	xorlw	99
  6105  0F9C  1D03               	skipz
  6106  0F9D  0008               	return
  6107                           
  6108                           ;LED_B1.c: 25: LED = &VarErrLED;
  6109  0F9E  304B               	movlw	_VarErrLED& (0+255)
  6110  0F9F  00D7               	movwf	??_LedPointSelect
  6111  0FA0  0857               	movf	??_LedPointSelect,w
  6112  0FA1  00F3               	movwf	_LED
  6113  0FA2  0008               	return
  6114  0FA3                     __end_of_LedPointSelect:	
  6115                           
  6116                           	psect	text33
  6117  0F37                     __ptext33:	
  6118 ;; *************** function _getMain_All_Error_Status *****************
  6119 ;; Defined at:
  6120 ;;		line 424 in file "../src/Main_B1.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  command         1    wreg     unsigned char 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;  command         1    1[BANK0 ] unsigned char 
  6125 ;;  status          1    4[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6135 ;;      Params:         0       0       0       0
  6136 ;;      Locals:         0       4       0       0
  6137 ;;      Temps:          0       1       0       0
  6138 ;;      Totals:         0       5       0       0
  6139 ;;Total ram usage:        5 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    3
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_Exception_Main
  6146 ;;		_setTemp_Main
  6147 ;;		_PIR_Main
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function _getMain_All_Error_Status
  6153  0F37                     _getMain_All_Error_Status:	
  6154                           
  6155                           ;incstack = 0
  6156                           ; Regs used in _getMain_All_Error_Status: [wreg+status,2+status,0]
  6157                           ;getMain_All_Error_Status@command stored from wreg
  6158  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  6159  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  6160  0F39  00D8               	movwf	getMain_All_Error_Status@command
  6161                           
  6162                           ;Main_B1.c: 425: char status = 0;
  6163  0F3A  01DB               	clrf	getMain_All_Error_Status@status
  6164                           
  6165                           ;Main_B1.c: 436: if (status == 0 && command != 2) {
  6166  0F3B  08DB               	movf	getMain_All_Error_Status@status,f
  6167  0F3C  1D03               	skipz
  6168  0F3D  2F4F               	goto	l806
  6169  0F3E  0858               	movf	getMain_All_Error_Status@command,w
  6170  0F3F  3A02               	xorlw	2
  6171  0F40  1903               	skipnz
  6172  0F41  2F4F               	goto	l806
  6173                           
  6174                           ;Main_B1.c: 437: status = Temp.ERROR == 1 ? 2 : 0;
  6175  0F42  18C4               	btfsc	_Temp,1
  6176  0F43  2F47               	goto	l4239
  6177  0F44  01D9               	clrf	_getMain_All_Error_Status$2565
  6178  0F45  01DA               	clrf	_getMain_All_Error_Status$2565+1
  6179  0F46  2F4B               	goto	l810
  6180  0F47                     l4239:	
  6181  0F47  3002               	movlw	2
  6182  0F48  00D9               	movwf	_getMain_All_Error_Status$2565
  6183  0F49  3000               	movlw	0
  6184  0F4A  00DA               	movwf	_getMain_All_Error_Status$2565+1
  6185  0F4B                     l810:	
  6186  0F4B  0859               	movf	_getMain_All_Error_Status$2565,w
  6187  0F4C  00D7               	movwf	??_getMain_All_Error_Status
  6188  0F4D  0857               	movf	??_getMain_All_Error_Status,w
  6189  0F4E  00DB               	movwf	getMain_All_Error_Status@status
  6190  0F4F                     l806:	
  6191                           
  6192                           ;Main_B1.c: 438: }
  6193                           ;Main_B1.c: 455: return status;
  6194  0F4F  085B               	movf	getMain_All_Error_Status@status,w
  6195  0F50  0008               	return
  6196  0F51                     __end_of_getMain_All_Error_Status:	
  6197                           
  6198                           	psect	text34
  6199  0DA8                     __ptext34:	
  6200 ;; *************** function _DimmerLights_Main *****************
  6201 ;; Defined at:
  6202 ;;		line 781 in file "../src/Dimmer_B1.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;		None
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;		None               void
  6209 ;; Registers used:
  6210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6216 ;;      Params:         0       0       0       0
  6217 ;;      Locals:         0       0       0       0
  6218 ;;      Temps:          0       0       0       0
  6219 ;;      Totals:         0       0       0       0
  6220 ;;Total ram usage:        0 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    6
  6223 ;; This function calls:
  6224 ;;		_DimmerLights_PIR_Control
  6225 ;;		_setDimmerLights_Main
  6226 ;; This function is called by:
  6227 ;;		_main
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function _DimmerLights_Main
  6233  0DA8                     _DimmerLights_Main:	
  6234                           
  6235                           ;Dimmer_B1.c: 792: setDimmerLights_Main(1);
  6236                           
  6237                           ;incstack = 0
  6238                           ; Regs used in _DimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6239  0DA8  3001               	movlw	1
  6240  0DA9  118A  2530  158A   	fcall	_setDimmerLights_Main
  6241                           
  6242                           ;Dimmer_B1.c: 804: DimmerLights_PIR_Control();
  6243  0DAC  118A  233F         	fcall	_DimmerLights_PIR_Control
  6244  0DAE  0008               	return
  6245  0DAF                     __end_of_DimmerLights_Main:	
  6246                           
  6247                           	psect	text35
  6248  0530                     __ptext35:	
  6249 ;; *************** function _setDimmerLights_Main *****************
  6250 ;; Defined at:
  6251 ;;		line 810 in file "../src/Dimmer_B1.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  lights          1    wreg     unsigned char 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  lights          1    7[BANK0 ] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;		None               void
  6258 ;; Registers used:
  6259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6265 ;;      Params:         0       0       0       0
  6266 ;;      Locals:         0       1       0       0
  6267 ;;      Temps:          0       0       0       0
  6268 ;;      Totals:         0       1       0       0
  6269 ;;Total ram usage:        1 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    5
  6272 ;; This function calls:
  6273 ;;		_DimmerLights_SelectPointer
  6274 ;;		_getDimmerLights_Allow_Condition
  6275 ;;		_getMain_All_LightsStatus
  6276 ;;		_setDimmerLights_Dimming
  6277 ;;		_setDimmerLights_OnOff
  6278 ;; This function is called by:
  6279 ;;		_DimmerLights_Main
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           
  6284                           ;psect for function _setDimmerLights_Main
  6285  0530                     _setDimmerLights_Main:	
  6286                           
  6287                           ;incstack = 0
  6288                           ; Regs used in _setDimmerLights_Main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6289                           ;setDimmerLights_Main@lights stored from wreg
  6290  0530  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0531  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0532  00DE               	movwf	setDimmerLights_Main@lights
  6293                           
  6294                           ;Dimmer_B1.c: 812: DimmerLights_SelectPointer(lights);
  6295  0533  085E               	movf	setDimmerLights_Main@lights,w
  6296  0534  158A  25C6  118A   	fcall	_DimmerLights_SelectPointer
  6297                           
  6298                           ;Dimmer_B1.c: 813: if (DimmerLights->Trigger == 1) {
  6299  0537  0872               	movf	_DimmerLights,w
  6300  0538  0084               	movwf	4
  6301  0539  1383               	bcf	3,7	;select IRP bank0
  6302  053A  1C80               	btfss	0,1
  6303  053B  2D5C               	goto	l4283
  6304                           
  6305                           ;Dimmer_B1.c: 814: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6306  053C  1283               	bcf	3,5	;RP0=0, select bank0
  6307  053D  1303               	bcf	3,6	;RP1=0, select bank0
  6308  053E  085E               	movf	setDimmerLights_Main@lights,w
  6309  053F  158A  2591  118A   	fcall	_getDimmerLights_Allow_Condition
  6310  0542  3800               	iorlw	0
  6311  0543  1D03               	skipz
  6312  0544  0008               	return
  6313                           
  6314                           ;Dimmer_B1.c: 815: DimmerLights->Trigger = 0;
  6315  0545  0872               	movf	_DimmerLights,w
  6316  0546  0084               	movwf	4
  6317  0547  1383               	bcf	3,7	;select IRP bank0
  6318  0548  1080               	bcf	0,1
  6319                           
  6320                           ;Dimmer_B1.c: 816: if (DimmerLights->Switch == 1) {
  6321  0549  0872               	movf	_DimmerLights,w
  6322  054A  0084               	movwf	4
  6323  054B  1D00               	btfss	0,2
  6324  054C  2D55               	goto	l4281
  6325                           
  6326                           ;Dimmer_B1.c: 817: setDimmerLights_OnOff(lights, 1);
  6327  054D  1283               	bcf	3,5	;RP0=0, select bank0
  6328  054E  1303               	bcf	3,6	;RP1=0, select bank0
  6329  054F  01DA               	clrf	setDimmerLights_OnOff@command
  6330  0550  0ADA               	incf	setDimmerLights_OnOff@command,f
  6331  0551  085E               	movf	setDimmerLights_Main@lights,w
  6332  0552  118A  2749         	fcall	_setDimmerLights_OnOff
  6333                           
  6334                           ;Dimmer_B1.c: 818: } else {
  6335  0554  0008               	return
  6336  0555                     l4281:	
  6337                           
  6338                           ;Dimmer_B1.c: 819: setDimmerLights_OnOff(lights, 0);
  6339  0555  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0556  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0557  01DA               	clrf	setDimmerLights_OnOff@command
  6342  0558  085E               	movf	setDimmerLights_Main@lights,w
  6343  0559  118A  2749         	fcall	_setDimmerLights_OnOff
  6344                           
  6345                           ;Dimmer_B1.c: 820: }
  6346                           ;Dimmer_B1.c: 821: }
  6347                           ;Dimmer_B1.c: 822: } else {
  6348  055B  0008               	return
  6349  055C                     l4283:	
  6350                           
  6351                           ;Dimmer_B1.c: 823: if (getMain_All_LightsStatus() == 1) {
  6352  055C  158A  25F6  118A   	fcall	_getMain_All_LightsStatus
  6353  055F  3A01               	xorlw	1
  6354  0560  1D03               	skipz
  6355  0561  2D87               	goto	l4295
  6356                           
  6357                           ;Dimmer_B1.c: 824: if (DimmerLights->DimmingTrigger == 1) {
  6358  0562  0872               	movf	_DimmerLights,w
  6359  0563  0084               	movwf	4
  6360  0564  1383               	bcf	3,7	;select IRP bank0
  6361  0565  1E00               	btfss	0,4
  6362  0566  0008               	return
  6363                           
  6364                           ;Dimmer_B1.c: 825: if (getDimmerLights_Allow_Condition(lights) == 0) {
  6365  0567  1283               	bcf	3,5	;RP0=0, select bank0
  6366  0568  1303               	bcf	3,6	;RP1=0, select bank0
  6367  0569  085E               	movf	setDimmerLights_Main@lights,w
  6368  056A  158A  2591  118A   	fcall	_getDimmerLights_Allow_Condition
  6369  056D  3800               	iorlw	0
  6370  056E  1D03               	skipz
  6371  056F  0008               	return
  6372                           
  6373                           ;Dimmer_B1.c: 826: DimmerLights->DimmingTrigger = 0;
  6374  0570  0872               	movf	_DimmerLights,w
  6375  0571  0084               	movwf	4
  6376  0572  1383               	bcf	3,7	;select IRP bank0
  6377  0573  1200               	bcf	0,4
  6378                           
  6379                           ;Dimmer_B1.c: 827: if (DimmerLights->DimmingSwitch == 1) {
  6380  0574  0872               	movf	_DimmerLights,w
  6381  0575  0084               	movwf	4
  6382  0576  1E80               	btfss	0,5
  6383  0577  2D80               	goto	l4293
  6384                           
  6385                           ;Dimmer_B1.c: 828: setDimmerLights_Dimming(lights, 1);
  6386  0578  1283               	bcf	3,5	;RP0=0, select bank0
  6387  0579  1303               	bcf	3,6	;RP1=0, select bank0
  6388  057A  01DA               	clrf	setDimmerLights_Dimming@status
  6389  057B  0ADA               	incf	setDimmerLights_Dimming@status,f
  6390  057C  085E               	movf	setDimmerLights_Main@lights,w
  6391  057D  118A  2776         	fcall	_setDimmerLights_Dimming
  6392                           
  6393                           ;Dimmer_B1.c: 829: } else {
  6394  057F  0008               	return
  6395  0580                     l4293:	
  6396                           
  6397                           ;Dimmer_B1.c: 830: setDimmerLights_Dimming(lights, 0);
  6398  0580  1283               	bcf	3,5	;RP0=0, select bank0
  6399  0581  1303               	bcf	3,6	;RP1=0, select bank0
  6400  0582  01DA               	clrf	setDimmerLights_Dimming@status
  6401  0583  085E               	movf	setDimmerLights_Main@lights,w
  6402  0584  118A  2776         	fcall	_setDimmerLights_Dimming
  6403                           
  6404                           ;Dimmer_B1.c: 831: }
  6405                           ;Dimmer_B1.c: 832: }
  6406                           ;Dimmer_B1.c: 833: }
  6407                           ;Dimmer_B1.c: 834: } else {
  6408  0586  0008               	return
  6409  0587                     l4295:	
  6410                           
  6411                           ;Dimmer_B1.c: 835: if (DimmerLights->DimmingTrigger == 1) {
  6412  0587  0872               	movf	_DimmerLights,w
  6413  0588  0084               	movwf	4
  6414  0589  1383               	bcf	3,7	;select IRP bank0
  6415  058A  1E00               	btfss	0,4
  6416  058B  0008               	return
  6417                           
  6418                           ;Dimmer_B1.c: 836: DimmerLights->DimmingTrigger = 0;
  6419  058C  0872               	movf	_DimmerLights,w
  6420  058D  0084               	movwf	4
  6421  058E  1200               	bcf	0,4
  6422  058F  0008               	return
  6423  0590                     __end_of_setDimmerLights_Main:	
  6424                           
  6425                           	psect	text36
  6426  0749                     __ptext36:	
  6427 ;; *************** function _setDimmerLights_OnOff *****************
  6428 ;; Defined at:
  6429 ;;		line 844 in file "../src/Dimmer_B1.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  lights          1    wreg     unsigned char 
  6432 ;;  command         1    3[BANK0 ] unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  lights          1    4[BANK0 ] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;		None               void
  6437 ;; Registers used:
  6438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6444 ;;      Params:         0       1       0       0
  6445 ;;      Locals:         0       1       0       0
  6446 ;;      Temps:          0       0       0       0
  6447 ;;      Totals:         0       2       0       0
  6448 ;;Total ram usage:        2 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		_getCmd_Status
  6453 ;;		_getMain_All_LightsStatus
  6454 ;;		_setCmd_Status
  6455 ;;		_setDimmerIntr_ControlStatus
  6456 ;; This function is called by:
  6457 ;;		_setDimmerLights_Main
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function _setDimmerLights_OnOff
  6463  0749                     _setDimmerLights_OnOff:	
  6464                           
  6465                           ;incstack = 0
  6466                           ; Regs used in _setDimmerLights_OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6467                           ;setDimmerLights_OnOff@lights stored from wreg
  6468  0749  1283               	bcf	3,5	;RP0=0, select bank0
  6469  074A  1303               	bcf	3,6	;RP1=0, select bank0
  6470  074B  00DB               	movwf	setDimmerLights_OnOff@lights
  6471                           
  6472                           ;Dimmer_B1.c: 846: if (command == 1) {
  6473  074C  085A               	movf	setDimmerLights_OnOff@command,w
  6474  074D  3A01               	xorlw	1
  6475  074E  1D03               	skipz
  6476  074F  2F5A               	goto	l4107
  6477                           
  6478                           ;Dimmer_B1.c: 847: setDimmerIntr_ControlStatus(lights, 1);
  6479  0750  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6480  0751  0AD7               	incf	setDimmerIntr_ControlStatus@command,f
  6481  0752  085B               	movf	setDimmerLights_OnOff@lights,w
  6482  0753  158A  26F1  118A   	fcall	_setDimmerIntr_ControlStatus
  6483                           
  6484                           ;Dimmer_B1.c: 855: Dimmer.PIR_Open_Status = 1;
  6485  0756  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0757  1303               	bcf	3,6	;RP1=0, select bank0
  6487  0758  14AD               	bsf	_Dimmer+1,1
  6488                           
  6489                           ;Dimmer_B1.c: 902: } else if (command == 0) {
  6490  0759  2F62               	goto	l4111
  6491  075A                     l4107:	
  6492  075A  08DA               	movf	setDimmerLights_OnOff@command,f
  6493  075B  1D03               	skipz
  6494  075C  2F62               	goto	l4111
  6495                           
  6496                           ;Dimmer_B1.c: 903: setDimmerIntr_ControlStatus(lights, 0);
  6497  075D  01D7               	clrf	setDimmerIntr_ControlStatus@command
  6498  075E  085B               	movf	setDimmerLights_OnOff@lights,w
  6499  075F  158A  26F1  118A   	fcall	_setDimmerIntr_ControlStatus
  6500  0762                     l4111:	
  6501                           
  6502                           ;Dimmer_B1.c: 936: }
  6503                           ;Dimmer_B1.c: 939: ;;
  6504                           ;Dimmer_B1.c: 941: if (getCmd_Status(1) == 1) {
  6505  0762  3001               	movlw	1
  6506  0763  158A  266A  118A   	fcall	_getCmd_Status
  6507  0766  3A01               	xorlw	1
  6508  0767  1D03               	skipz
  6509  0768  0008               	return
  6510                           
  6511                           ;Dimmer_B1.c: 942: if (getMain_All_LightsStatus() == 0) {
  6512  0769  158A  25F6  118A   	fcall	_getMain_All_LightsStatus
  6513  076C  3800               	iorlw	0
  6514  076D  1D03               	skipz
  6515  076E  0008               	return
  6516                           
  6517                           ;Dimmer_B1.c: 943: setCmd_Status(1, 0);
  6518  076F  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0770  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0771  01D7               	clrf	setCmd_Status@cmd
  6521  0772  3001               	movlw	1
  6522  0773  158A  26DB         	fcall	_setCmd_Status
  6523                           
  6524                           ;Dimmer_B1.c: 947: }
  6525                           ;Dimmer_B1.c: 948: } else {
  6526                           
  6527                           ;Dimmer_B1.c: 944: ;;
  6528                           ;Dimmer_B1.c: 945: ;;
  6529                           ;Dimmer_B1.c: 946: ;;
  6530  0775  0008               	return
  6531  0776                     __end_of_setDimmerLights_OnOff:	
  6532                           ;Dimmer_B1.c: 949: ;;
  6533                           
  6534                           
  6535                           	psect	text37
  6536  0EF1                     __ptext37:	
  6537 ;; *************** function _setDimmerIntr_ControlStatus *****************
  6538 ;; Defined at:
  6539 ;;		line 75 in file "../src/Dimmer_B1.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  lights          1    wreg     unsigned char 
  6542 ;;  command         1    0[BANK0 ] unsigned char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  lights          1    2[BANK0 ] unsigned char 
  6545 ;; Return value:  Size  Location     Type
  6546 ;;		None               void
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6554 ;;      Params:         0       1       0       0
  6555 ;;      Locals:         0       1       0       0
  6556 ;;      Temps:          0       1       0       0
  6557 ;;      Totals:         0       3       0       0
  6558 ;;Total ram usage:        3 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    3
  6561 ;; This function calls:
  6562 ;;		Nothing
  6563 ;; This function is called by:
  6564 ;;		_setDimmerLights_OnOff
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           
  6569                           ;psect for function _setDimmerIntr_ControlStatus
  6570  0EF1                     _setDimmerIntr_ControlStatus:	
  6571                           
  6572                           ;incstack = 0
  6573                           ; Regs used in _setDimmerIntr_ControlStatus: [wreg+status,2+status,0]
  6574                           ;setDimmerIntr_ControlStatus@lights stored from wreg
  6575  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  6576  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  6577  0EF3  00D9               	movwf	setDimmerIntr_ControlStatus@lights
  6578                           
  6579                           ;Dimmer_B1.c: 77: if (lights == 1) {
  6580  0EF4  0859               	movf	setDimmerIntr_ControlStatus@lights,w
  6581  0EF5  3A01               	xorlw	1
  6582  0EF6  1D03               	skipz
  6583  0EF7  0008               	return
  6584                           
  6585                           ;Dimmer_B1.c: 78: DimmerIntr1.ControlStatus = command == 1 ? 1 : 0;
  6586  0EF8  0857               	movf	setDimmerIntr_ControlStatus@command,w
  6587  0EF9  3A01               	xorlw	1
  6588  0EFA  3000               	movlw	0
  6589  0EFB  1903               	skipnz
  6590  0EFC  3001               	movlw	1
  6591  0EFD  00D8               	movwf	??_setDimmerIntr_ControlStatus
  6592  0EFE  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6593  0EFF  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6594  0F00  0DD8               	rlf	??_setDimmerIntr_ControlStatus,f
  6595  0F01  0820               	movf	_DimmerIntr1,w
  6596  0F02  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6597  0F03  39F7               	andlw	-9
  6598  0F04  0658               	xorwf	??_setDimmerIntr_ControlStatus,w
  6599  0F05  00A0               	movwf	_DimmerIntr1
  6600  0F06  0008               	return
  6601  0F07                     __end_of_setDimmerIntr_ControlStatus:	
  6602                           
  6603                           	psect	text38
  6604  0EDB                     __ptext38:	
  6605 ;; *************** function _setCmd_Status *****************
  6606 ;; Defined at:
  6607 ;;		line 651 in file "../src/Main_B1.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  number          1    wreg     unsigned char 
  6610 ;;  cmd             1    0[BANK0 ] unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  number          1    2[BANK0 ] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;		None               void
  6615 ;; Registers used:
  6616 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6622 ;;      Params:         0       1       0       0
  6623 ;;      Locals:         0       1       0       0
  6624 ;;      Temps:          0       1       0       0
  6625 ;;      Totals:         0       3       0       0
  6626 ;;Total ram usage:        3 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    3
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_setDimmerLights_OnOff
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           
  6637                           ;psect for function _setCmd_Status
  6638  0EDB                     _setCmd_Status:	
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _setCmd_Status: [wreg-fsr0h+status,2+status,0]
  6642                           ;setCmd_Status@number stored from wreg
  6643  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  6644  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  6645  0EDD  00D9               	movwf	setCmd_Status@number
  6646                           
  6647                           ;Main_B1.c: 652: switch (number) {
  6648  0EDE  2EEB               	goto	l4053
  6649  0EDF                     l4049:	
  6650                           ;Main_B1.c: 653: case 1:
  6651                           
  6652                           
  6653                           ;Main_B1.c: 654: Cmd.all_off = cmd == 1 ? 1 : 0;
  6654  0EDF  0857               	movf	setCmd_Status@cmd,w
  6655  0EE0  3A01               	xorlw	1
  6656  0EE1  3000               	movlw	0
  6657  0EE2  1903               	skipnz
  6658  0EE3  3001               	movlw	1
  6659  0EE4  00D8               	movwf	??_setCmd_Status
  6660  0EE5  0870               	movf	_Cmd,w
  6661  0EE6  0658               	xorwf	??_setCmd_Status,w
  6662  0EE7  39FE               	andlw	-2
  6663  0EE8  0658               	xorwf	??_setCmd_Status,w
  6664  0EE9  00F0               	movwf	_Cmd
  6665                           
  6666                           ;Main_B1.c: 656: }
  6667                           
  6668                           ;Main_B1.c: 655: break;
  6669  0EEA  0008               	return
  6670  0EEB                     l4053:	
  6671  0EEB  0859               	movf	setCmd_Status@number,w
  6672                           
  6673                           ; Switch size 1, requested type "space"
  6674                           ; Number of cases is 1, Range of values is 1 to 1
  6675                           ; switch strategies available:
  6676                           ; Name         Instructions Cycles
  6677                           ; simple_byte            4     3 (average)
  6678                           ; direct_byte           12    10 (fixed)
  6679                           ; jumptable            263     9 (fixed)
  6680                           ;	Chosen strategy is simple_byte
  6681  0EEC  3A01               	xorlw	1	; case 1
  6682  0EED  1903               	skipnz
  6683  0EEE  2EDF               	goto	l4049
  6684  0EEF  2EF0               	goto	l832
  6685  0EF0                     l832:	
  6686  0EF0  0008               	return
  6687  0EF1                     __end_of_setCmd_Status:	
  6688                           
  6689                           	psect	text39
  6690  0DF6                     __ptext39:	
  6691 ;; *************** function _getMain_All_LightsStatus *****************
  6692 ;; Defined at:
  6693 ;;		line 373 in file "../src/Main_B1.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  status          1    0[BANK0 ] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      unsigned char 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6707 ;;      Params:         0       0       0       0
  6708 ;;      Locals:         0       1       0       0
  6709 ;;      Temps:          0       0       0       0
  6710 ;;      Totals:         0       1       0       0
  6711 ;;Total ram usage:        1 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    3
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_setDimmerLights_Main
  6718 ;;		_setDimmerLights_OnOff
  6719 ;;		_setTemp_Main
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           
  6724                           ;psect for function _getMain_All_LightsStatus
  6725  0DF6                     _getMain_All_LightsStatus:	
  6726                           
  6727                           ;Main_B1.c: 374: char status = 0;
  6728                           
  6729                           ;incstack = 0
  6730                           ; Regs used in _getMain_All_LightsStatus: [wreg+status,2]
  6731  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  6733  0DF8  01D7               	clrf	getMain_All_LightsStatus@status
  6734                           
  6735                           ;Main_B1.c: 381: status = DimmerLights1.Status == 1 ? 1 : 0;
  6736  0DF9  3000               	movlw	0
  6737  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  6738  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  6739  0DFC  184B               	btfsc	(_DimmerLights1^(0+128)+1),0
  6740  0DFD  3001               	movlw	1
  6741  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  6742  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  6743  0E00  00D7               	movwf	getMain_All_LightsStatus@status
  6744                           
  6745                           ;Main_B1.c: 420: return status;
  6746  0E01  0857               	movf	getMain_All_LightsStatus@status,w
  6747  0E02  0008               	return
  6748  0E03                     __end_of_getMain_All_LightsStatus:	
  6749                           
  6750                           	psect	text40
  6751  0E6A                     __ptext40:	
  6752 ;; *************** function _getCmd_Status *****************
  6753 ;; Defined at:
  6754 ;;		line 659 in file "../src/Main_B1.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  number          1    wreg     unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  number          1    0[BANK0 ] unsigned char 
  6759 ;;  cmd             1    1[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1    wreg      unsigned char 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6769 ;;      Params:         0       0       0       0
  6770 ;;      Locals:         0       2       0       0
  6771 ;;      Temps:          0       0       0       0
  6772 ;;      Totals:         0       2       0       0
  6773 ;;Total ram usage:        2 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    3
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_setDimmerLights_OnOff
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           
  6784                           ;psect for function _getCmd_Status
  6785  0E6A                     _getCmd_Status:	
  6786                           
  6787                           ;incstack = 0
  6788                           ; Regs used in _getCmd_Status: [wreg-fsr0h+status,2+status,0]
  6789                           ;getCmd_Status@number stored from wreg
  6790  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6791  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6792  0E6C  00D7               	movwf	getCmd_Status@number
  6793                           
  6794                           ;Main_B1.c: 660: char cmd = 0;
  6795  0E6D  01D8               	clrf	getCmd_Status@cmd
  6796                           
  6797                           ;Main_B1.c: 661: switch (number) {
  6798  0E6E  2E74               	goto	l4041
  6799  0E6F                     l4037:	
  6800                           ;Main_B1.c: 662: case 1:
  6801                           
  6802                           
  6803                           ;Main_B1.c: 663: cmd = Cmd.all_off == 1 ? 1 : 0;
  6804  0E6F  3000               	movlw	0
  6805  0E70  1870               	btfsc	_Cmd,0
  6806  0E71  3001               	movlw	1
  6807  0E72  00D8               	movwf	getCmd_Status@cmd
  6808                           
  6809                           ;Main_B1.c: 665: }
  6810                           
  6811                           ;Main_B1.c: 664: break;
  6812  0E73  2E79               	goto	l4043
  6813  0E74                     l4041:	
  6814  0E74  0857               	movf	getCmd_Status@number,w
  6815                           
  6816                           ; Switch size 1, requested type "space"
  6817                           ; Number of cases is 1, Range of values is 1 to 1
  6818                           ; switch strategies available:
  6819                           ; Name         Instructions Cycles
  6820                           ; simple_byte            4     3 (average)
  6821                           ; direct_byte           12    10 (fixed)
  6822                           ; jumptable            263     9 (fixed)
  6823                           ;	Chosen strategy is simple_byte
  6824  0E75  3A01               	xorlw	1	; case 1
  6825  0E76  1903               	skipnz
  6826  0E77  2E6F               	goto	l4037
  6827  0E78  2E79               	goto	l4043
  6828  0E79                     l4043:	
  6829                           
  6830                           ;Main_B1.c: 666: return cmd;
  6831  0E79  0858               	movf	getCmd_Status@cmd,w
  6832  0E7A  0008               	return
  6833  0E7B                     __end_of_getCmd_Status:	
  6834                           
  6835                           	psect	text41
  6836  0776                     __ptext41:	
  6837 ;; *************** function _setDimmerLights_Dimming *****************
  6838 ;; Defined at:
  6839 ;;		line 955 in file "../src/Dimmer_B1.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  lights          1    wreg     unsigned char 
  6842 ;;  status          1    3[BANK0 ] unsigned char 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  lights          1    6[BANK0 ] unsigned char 
  6845 ;;  value           1    5[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, pclath, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6855 ;;      Params:         0       1       0       0
  6856 ;;      Locals:         0       2       0       0
  6857 ;;      Temps:          0       1       0       0
  6858 ;;      Totals:         0       4       0       0
  6859 ;;Total ram usage:        4 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    4
  6862 ;; This function calls:
  6863 ;;		_getDimmerIntr_DimmingValue
  6864 ;;		_setDimmerIntr_Dimming_Sw
  6865 ;;		_setDimmerIntr_MaxmumValue
  6866 ;; This function is called by:
  6867 ;;		_setDimmerLights_Main
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           
  6872                           ;psect for function _setDimmerLights_Dimming
  6873  0776                     _setDimmerLights_Dimming:	
  6874                           
  6875                           ;incstack = 0
  6876                           ; Regs used in _setDimmerLights_Dimming: [wreg+status,2+status,0+pclath+cstack]
  6877                           ;setDimmerLights_Dimming@lights stored from wreg
  6878  0776  1283               	bcf	3,5	;RP0=0, select bank0
  6879  0777  1303               	bcf	3,6	;RP1=0, select bank0
  6880  0778  00DD               	movwf	setDimmerLights_Dimming@lights
  6881                           
  6882                           ;Dimmer_B1.c: 956: if (status == 1) {
  6883  0779  085A               	movf	setDimmerLights_Dimming@status,w
  6884  077A  3A01               	xorlw	1
  6885  077B  1D03               	skipz
  6886  077C  2F83               	goto	l4121
  6887                           
  6888                           ;Dimmer_B1.c: 957: setDimmerIntr_Dimming_Sw(lights, 1);
  6889  077D  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6890  077E  0AD7               	incf	setDimmerIntr_Dimming_Sw@command,f
  6891  077F  085D               	movf	setDimmerLights_Dimming@lights,w
  6892  0780  158A  26B1         	fcall	_setDimmerIntr_Dimming_Sw
  6893                           
  6894                           ;Dimmer_B1.c: 962: ;;
  6895                           ;Dimmer_B1.c: 963: } else if (status == 0) {
  6896  0782  0008               	return
  6897  0783                     l4121:	
  6898  0783  1283               	bcf	3,5	;RP0=0, select bank0
  6899  0784  1303               	bcf	3,6	;RP1=0, select bank0
  6900  0785  08DA               	movf	setDimmerLights_Dimming@status,f
  6901  0786  1D03               	skipz
  6902  0787  0008               	return
  6903                           
  6904                           ;Dimmer_B1.c: 964: setDimmerIntr_Dimming_Sw(lights, 0);
  6905  0788  01D7               	clrf	setDimmerIntr_Dimming_Sw@command
  6906  0789  085D               	movf	setDimmerLights_Dimming@lights,w
  6907  078A  158A  26B1  118A   	fcall	_setDimmerIntr_Dimming_Sw
  6908                           
  6909                           ;Dimmer_B1.c: 970: char value = getDimmerIntr_DimmingValue(lights);
  6910  078D  1283               	bcf	3,5	;RP0=0, select bank0
  6911  078E  1303               	bcf	3,6	;RP1=0, select bank0
  6912  078F  085D               	movf	setDimmerLights_Dimming@lights,w
  6913  0790  158A  2610  118A   	fcall	_getDimmerIntr_DimmingValue
  6914  0793  1283               	bcf	3,5	;RP0=0, select bank0
  6915  0794  1303               	bcf	3,6	;RP1=0, select bank0
  6916  0795  00DB               	movwf	??_setDimmerLights_Dimming
  6917  0796  085B               	movf	??_setDimmerLights_Dimming,w
  6918  0797  00DC               	movwf	setDimmerLights_Dimming@value
  6919                           
  6920                           ;Dimmer_B1.c: 971: setDimmerIntr_MaxmumValue(lights, value);
  6921  0798  085C               	movf	setDimmerLights_Dimming@value,w
  6922  0799  00DB               	movwf	??_setDimmerLights_Dimming
  6923  079A  085B               	movf	??_setDimmerLights_Dimming,w
  6924  079B  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  6925  079C  085D               	movf	setDimmerLights_Dimming@lights,w
  6926  079D  158A  25DE         	fcall	_setDimmerIntr_MaxmumValue
  6927                           
  6928                           ;Dimmer_B1.c: 972: ;;
  6929                           ;Dimmer_B1.c: 979: ;;
  6930                           ;Dimmer_B1.c: 983: ;;
  6931                           ;Dimmer_B1.c: 984: ;;
  6932  079F  0008               	return
  6933  07A0                     __end_of_setDimmerLights_Dimming:	
  6934                           
  6935                           	psect	text42
  6936  0EB1                     __ptext42:	
  6937 ;; *************** function _setDimmerIntr_Dimming_Sw *****************
  6938 ;; Defined at:
  6939 ;;		line 210 in file "../src/Dimmer_B1.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  lights          1    wreg     unsigned char 
  6942 ;;  command         1    0[BANK0 ] unsigned char 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;  lights          1    2[BANK0 ] unsigned char 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;		None               void
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6954 ;;      Params:         0       1       0       0
  6955 ;;      Locals:         0       1       0       0
  6956 ;;      Temps:          0       1       0       0
  6957 ;;      Totals:         0       3       0       0
  6958 ;;Total ram usage:        3 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; Hardware stack levels required when called:    3
  6961 ;; This function calls:
  6962 ;;		Nothing
  6963 ;; This function is called by:
  6964 ;;		_setDimmerLights_Dimming
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _setDimmerIntr_Dimming_Sw
  6970  0EB1                     _setDimmerIntr_Dimming_Sw:	
  6971                           
  6972                           ;incstack = 0
  6973                           ; Regs used in _setDimmerIntr_Dimming_Sw: [wreg+status,2+status,0]
  6974                           ;setDimmerIntr_Dimming_Sw@lights stored from wreg
  6975  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  6976  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  6977  0EB3  00D9               	movwf	setDimmerIntr_Dimming_Sw@lights
  6978                           
  6979                           ;Dimmer_B1.c: 212: if (lights == 1) {
  6980  0EB4  0859               	movf	setDimmerIntr_Dimming_Sw@lights,w
  6981  0EB5  3A01               	xorlw	1
  6982  0EB6  1D03               	skipz
  6983  0EB7  0008               	return
  6984                           
  6985                           ;Dimmer_B1.c: 213: DimmerIntr1.Dimming_Sw = command == 1 ? 1 : 0;
  6986  0EB8  0857               	movf	setDimmerIntr_Dimming_Sw@command,w
  6987  0EB9  3A01               	xorlw	1
  6988  0EBA  3000               	movlw	0
  6989  0EBB  1903               	skipnz
  6990  0EBC  3001               	movlw	1
  6991  0EBD  00D8               	movwf	??_setDimmerIntr_Dimming_Sw
  6992  0EBE  0ED8               	swapf	??_setDimmerIntr_Dimming_Sw,f
  6993  0EBF  0820               	movf	_DimmerIntr1,w
  6994  0EC0  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  6995  0EC1  39EF               	andlw	-17
  6996  0EC2  0658               	xorwf	??_setDimmerIntr_Dimming_Sw,w
  6997  0EC3  00A0               	movwf	_DimmerIntr1
  6998  0EC4  0008               	return
  6999  0EC5                     __end_of_setDimmerIntr_Dimming_Sw:	
  7000                           
  7001                           	psect	text43
  7002  0E10                     __ptext43:	
  7003 ;; *************** function _getDimmerIntr_DimmingValue *****************
  7004 ;; Defined at:
  7005 ;;		line 111 in file "../src/Dimmer_B1.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  lights          1    wreg     unsigned char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  lights          1    1[BANK0 ] unsigned char 
  7010 ;;  value           1    2[BANK0 ] unsigned char 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      unsigned char 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7020 ;;      Params:         0       0       0       0
  7021 ;;      Locals:         0       2       0       0
  7022 ;;      Temps:          0       1       0       0
  7023 ;;      Totals:         0       3       0       0
  7024 ;;Total ram usage:        3 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    3
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_setDimmerLights_Dimming
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           
  7035                           ;psect for function _getDimmerIntr_DimmingValue
  7036  0E10                     _getDimmerIntr_DimmingValue:	
  7037                           
  7038                           ;incstack = 0
  7039                           ; Regs used in _getDimmerIntr_DimmingValue: [wreg+status,2]
  7040                           ;getDimmerIntr_DimmingValue@lights stored from wreg
  7041  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  7042  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  7043  0E12  00D8               	movwf	getDimmerIntr_DimmingValue@lights
  7044                           
  7045                           ;Dimmer_B1.c: 112: char value = 0;
  7046  0E13  01D9               	clrf	getDimmerIntr_DimmingValue@value
  7047                           
  7048                           ;Dimmer_B1.c: 114: if (lights == 1) {
  7049  0E14  0858               	movf	getDimmerIntr_DimmingValue@lights,w
  7050  0E15  3A01               	xorlw	1
  7051  0E16  1D03               	skipz
  7052  0E17  2E1C               	goto	l252
  7053                           
  7054                           ;Dimmer_B1.c: 115: value = DimmerIntr1.DimmingValue;
  7055  0E18  0825               	movf	_DimmerIntr1+5,w
  7056  0E19  00D7               	movwf	??_getDimmerIntr_DimmingValue
  7057  0E1A  0857               	movf	??_getDimmerIntr_DimmingValue,w
  7058  0E1B  00D9               	movwf	getDimmerIntr_DimmingValue@value
  7059  0E1C                     l252:	
  7060                           
  7061                           ;Dimmer_B1.c: 116: }
  7062                           ;Dimmer_B1.c: 128: return value;
  7063  0E1C  0859               	movf	getDimmerIntr_DimmingValue@value,w
  7064  0E1D  0008               	return
  7065  0E1E                     __end_of_getDimmerIntr_DimmingValue:	
  7066                           
  7067                           	psect	text44
  7068  0D91                     __ptext44:	
  7069 ;; *************** function _getDimmerLights_Allow_Condition *****************
  7070 ;; Defined at:
  7071 ;;		line 990 in file "../src/Dimmer_B1.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  lights          1    wreg     unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  lights          1    0[COMMON] unsigned char 
  7076 ;;  allow           1    0[BANK0 ] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      unsigned char 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7086 ;;      Params:         0       0       0       0
  7087 ;;      Locals:         0       1       0       0
  7088 ;;      Temps:          0       0       0       0
  7089 ;;      Totals:         0       1       0       0
  7090 ;;Total ram usage:        1 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    3
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_setDimmerLights_Main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _getDimmerLights_Allow_Condition
  7102  0D91                     _getDimmerLights_Allow_Condition:	
  7103                           
  7104                           ;Dimmer_B1.c: 991: char allow = 0;
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _getDimmerLights_Allow_Condition: [wreg+status,2]
  7108  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  7109  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  7110  0D93  01D7               	clrf	getDimmerLights_Allow_Condition@allow
  7111                           
  7112                           ;Dimmer_B1.c: 1024: return allow;
  7113  0D94  0857               	movf	getDimmerLights_Allow_Condition@allow,w
  7114  0D95  0008               	return
  7115  0D96                     __end_of_getDimmerLights_Allow_Condition:	
  7116                           
  7117                           	psect	text45
  7118  033F                     __ptext45:	
  7119 ;; *************** function _DimmerLights_PIR_Control *****************
  7120 ;; Defined at:
  7121 ;;		line 1748 in file "../src/Dimmer_B1.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;		None               void
  7128 ;; Registers used:
  7129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7135 ;;      Params:         0       0       0       0
  7136 ;;      Locals:         0       0       0       0
  7137 ;;      Temps:          0       1       0       0
  7138 ;;      Totals:         0       1       0       0
  7139 ;;Total ram usage:        1 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    5
  7142 ;; This function calls:
  7143 ;;		_getDimmerLights_Status
  7144 ;;		_setDimmerIntr_DimmingValue
  7145 ;;		_setDimmerIntr_Dimming_RF
  7146 ;;		_setDimmerIntr_MaxmumValue
  7147 ;;		_setDimmerLights_SwOff
  7148 ;;		_setDimmerLights_SwOn
  7149 ;; This function is called by:
  7150 ;;		_DimmerLights_Main
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function _DimmerLights_PIR_Control
  7156  033F                     _DimmerLights_PIR_Control:	
  7157                           
  7158                           ;Dimmer_B1.c: 1750: if (Dimmer.PIR_Trigger == 1) {
  7159                           
  7160                           ;incstack = 0
  7161                           ; Regs used in _DimmerLights_PIR_Control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7162  033F  1283               	bcf	3,5	;RP0=0, select bank0
  7163  0340  1303               	bcf	3,6	;RP1=0, select bank0
  7164  0341  1EAC               	btfss	_Dimmer,5
  7165  0342  2BAF               	goto	l4327
  7166                           
  7167                           ;Dimmer_B1.c: 1751: Dimmer.PIR_Trigger = 0;
  7168  0343  12AC               	bcf	_Dimmer,5
  7169                           
  7170                           ;Dimmer_B1.c: 1752: if (Dimmer.PIR_Sw == 1) {
  7171  0344  1E2C               	btfss	_Dimmer,4
  7172  0345  2B7C               	goto	l417
  7173                           
  7174                           ;Dimmer_B1.c: 1754: if (getDimmerLights_Status(1) == 0) {
  7175  0346  3001               	movlw	1
  7176  0347  158A  2659  118A   	fcall	_getDimmerLights_Status
  7177  034A  3800               	iorlw	0
  7178  034B  1D03               	skipz
  7179  034C  2B60               	goto	l418
  7180                           
  7181                           ;Dimmer_B1.c: 1755: setDimmerIntr_DimmingValue(1, ((char)((100-10)*0.6)));
  7182  034D  3036               	movlw	54
  7183  034E  1283               	bcf	3,5	;RP0=0, select bank0
  7184  034F  1303               	bcf	3,6	;RP1=0, select bank0
  7185  0350  00DB               	movwf	??_DimmerLights_PIR_Control
  7186  0351  085B               	movf	??_DimmerLights_PIR_Control,w
  7187  0352  00D7               	movwf	setDimmerIntr_DimmingValue@value
  7188  0353  3001               	movlw	1
  7189  0354  158A  25D2  118A   	fcall	_setDimmerIntr_DimmingValue
  7190                           
  7191                           ;Dimmer_B1.c: 1756: setDimmerLights_SwOn(1);
  7192  0357  3001               	movlw	1
  7193  0358  118A  27C8  118A   	fcall	_setDimmerLights_SwOn
  7194                           
  7195                           ;Dimmer_B1.c: 1757: setDimmerLights_SwOff(1);
  7196  035B  3001               	movlw	1
  7197  035C  118A  27A0  118A   	fcall	_setDimmerLights_SwOff
  7198                           
  7199                           ;Dimmer_B1.c: 1758: } else {
  7200  035F  2BAF               	goto	l4327
  7201  0360                     l418:	
  7202                           
  7203                           ;Dimmer_B1.c: 1759: if (Dimmer.PIR_Lights_Status == 1) {
  7204  0360  1283               	bcf	3,5	;RP0=0, select bank0
  7205  0361  1303               	bcf	3,6	;RP1=0, select bank0
  7206  0362  1D2D               	btfss	_Dimmer+1,2
  7207  0363  2BAF               	goto	l4327
  7208                           
  7209                           ;Dimmer_B1.c: 1760: Dimmer.PIR_Lights_Status = 0;
  7210  0364  112D               	bcf	_Dimmer+1,2
  7211                           
  7212                           ;Dimmer_B1.c: 1761: Dimmer.PIR_Close_Status = 0;
  7213  0365  102D               	bcf	_Dimmer+1,0
  7214                           
  7215                           ;Dimmer_B1.c: 1762: DimmerLights1.Trigger = 0;
  7216  0366  1683               	bsf	3,5	;RP0=1, select bank1
  7217  0367  1303               	bcf	3,6	;RP1=0, select bank1
  7218  0368  10CA               	bcf	_DimmerLights1^(0+128),1
  7219                           
  7220                           ;Dimmer_B1.c: 1764: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7221  0369  3012               	movlw	18
  7222  036A  1283               	bcf	3,5	;RP0=0, select bank0
  7223  036B  1303               	bcf	3,6	;RP1=0, select bank0
  7224  036C  00DB               	movwf	??_DimmerLights_PIR_Control
  7225  036D  085B               	movf	??_DimmerLights_PIR_Control,w
  7226  036E  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7227  036F  3001               	movlw	1
  7228  0370  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7229                           
  7230                           ;Dimmer_B1.c: 1765: setDimmerIntr_Dimming_RF(1, 1);
  7231  0373  1283               	bcf	3,5	;RP0=0, select bank0
  7232  0374  1303               	bcf	3,6	;RP1=0, select bank0
  7233  0375  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7234  0376  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7235  0377  3001               	movlw	1
  7236  0378  158A  26C5  118A   	fcall	_setDimmerIntr_Dimming_RF
  7237                           
  7238                           ;Dimmer_B1.c: 1766: }
  7239                           ;Dimmer_B1.c: 1767: }
  7240                           ;Dimmer_B1.c: 1768: } else if (Dimmer.PIR_Sw == 0) {
  7241  037B  2BAF               	goto	l4327
  7242  037C                     l417:	
  7243  037C  1A2C               	btfsc	_Dimmer,4
  7244  037D  2BAF               	goto	l4327
  7245                           
  7246                           ;Dimmer_B1.c: 1769: if (getDimmerLights_Status(1) == 1) {
  7247  037E  3001               	movlw	1
  7248  037F  158A  2659  118A   	fcall	_getDimmerLights_Status
  7249  0382  3A01               	xorlw	1
  7250  0383  1D03               	skipz
  7251  0384  2BAF               	goto	l4327
  7252                           
  7253                           ;Dimmer_B1.c: 1770: if (Dimmer.PIR_Lights_Status == 0) {
  7254  0385  1283               	bcf	3,5	;RP0=0, select bank0
  7255  0386  1303               	bcf	3,6	;RP1=0, select bank0
  7256  0387  192D               	btfsc	_Dimmer+1,2
  7257  0388  2B9B               	goto	l424
  7258                           
  7259                           ;Dimmer_B1.c: 1771: Dimmer.PIR_Lights_Status = 1;
  7260  0389  152D               	bsf	_Dimmer+1,2
  7261                           
  7262                           ;Dimmer_B1.c: 1772: setDimmerIntr_MaxmumValue(1, (((char)((100-10)*0.6))-((char)((100-70
      +                          )*0.6))));
  7263  038A  3024               	movlw	36
  7264  038B  00DB               	movwf	??_DimmerLights_PIR_Control
  7265  038C  085B               	movf	??_DimmerLights_PIR_Control,w
  7266  038D  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7267  038E  3001               	movlw	1
  7268  038F  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7269                           
  7270                           ;Dimmer_B1.c: 1773: setDimmerIntr_Dimming_RF(1, 1);
  7271  0392  1283               	bcf	3,5	;RP0=0, select bank0
  7272  0393  1303               	bcf	3,6	;RP1=0, select bank0
  7273  0394  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7274  0395  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7275  0396  3001               	movlw	1
  7276  0397  158A  26C5  118A   	fcall	_setDimmerIntr_Dimming_RF
  7277                           
  7278                           ;Dimmer_B1.c: 1774: } else {
  7279  039A  2BAF               	goto	l4327
  7280  039B                     l424:	
  7281                           
  7282                           ;Dimmer_B1.c: 1775: Dimmer.PIR_Lights_Status = 0;
  7283  039B  112D               	bcf	_Dimmer+1,2
  7284                           
  7285                           ;Dimmer_B1.c: 1776: setDimmerIntr_MaxmumValue(1, ((char)((100-10)*0.6)));
  7286  039C  3036               	movlw	54
  7287  039D  00DB               	movwf	??_DimmerLights_PIR_Control
  7288  039E  085B               	movf	??_DimmerLights_PIR_Control,w
  7289  039F  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7290  03A0  3001               	movlw	1
  7291  03A1  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7292                           
  7293                           ;Dimmer_B1.c: 1777: setDimmerIntr_Dimming_RF(1, 1);
  7294  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  7295  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  7296  03A6  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7297  03A7  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7298  03A8  3001               	movlw	1
  7299  03A9  158A  26C5  118A   	fcall	_setDimmerIntr_Dimming_RF
  7300                           
  7301                           ;Dimmer_B1.c: 1778: Dimmer.PIR_Close_Status = 1;
  7302  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7303  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  7304  03AE  142D               	bsf	_Dimmer+1,0
  7305  03AF                     l4327:	
  7306                           
  7307                           ;Dimmer_B1.c: 1779: }
  7308                           ;Dimmer_B1.c: 1780: }
  7309                           ;Dimmer_B1.c: 1781: }
  7310                           ;Dimmer_B1.c: 1782: }
  7311                           ;Dimmer_B1.c: 1783: if (Dimmer.PIR_Open_Status == 1) {
  7312  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  7313  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  7314  03B1  1CAD               	btfss	_Dimmer+1,1
  7315  03B2  2BC4               	goto	l4333
  7316                           
  7317                           ;Dimmer_B1.c: 1784: Dimmer.PIR_Open_Status = 0;
  7318  03B3  10AD               	bcf	_Dimmer+1,1
  7319                           
  7320                           ;Dimmer_B1.c: 1785: setDimmerIntr_MaxmumValue(1, ((char)((100-70)*0.6)));
  7321  03B4  3012               	movlw	18
  7322  03B5  00DB               	movwf	??_DimmerLights_PIR_Control
  7323  03B6  085B               	movf	??_DimmerLights_PIR_Control,w
  7324  03B7  00D7               	movwf	setDimmerIntr_MaxmumValue@value
  7325  03B8  3001               	movlw	1
  7326  03B9  158A  25DE  118A   	fcall	_setDimmerIntr_MaxmumValue
  7327                           
  7328                           ;Dimmer_B1.c: 1786: setDimmerIntr_Dimming_RF(1, 1);
  7329  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  7330  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  7331  03BE  01D7               	clrf	setDimmerIntr_Dimming_RF@command
  7332  03BF  0AD7               	incf	setDimmerIntr_Dimming_RF@command,f
  7333  03C0  3001               	movlw	1
  7334  03C1  158A  26C5  118A   	fcall	_setDimmerIntr_Dimming_RF
  7335  03C4                     l4333:	
  7336                           
  7337                           ;Dimmer_B1.c: 1787: }
  7338                           ;Dimmer_B1.c: 1788: if (Dimmer.PIR_Close_Status == 1 && DimmerIntr1.Dimming_RF == 0) {
  7339  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  7340  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  7341  03C6  1C2D               	btfss	_Dimmer+1,0
  7342  03C7  0008               	return
  7343  03C8  1B20               	btfsc	_DimmerIntr1,6
  7344  03C9  0008               	return
  7345                           
  7346                           ;Dimmer_B1.c: 1789: Dimmer.PIR_Close_Status = 0;
  7347  03CA  102D               	bcf	_Dimmer+1,0
  7348                           
  7349                           ;Dimmer_B1.c: 1790: setDimmerLights_SwOn(1);
  7350  03CB  3001               	movlw	1
  7351  03CC  118A  27C8  118A   	fcall	_setDimmerLights_SwOn
  7352                           
  7353                           ;Dimmer_B1.c: 1791: setDimmerLights_SwOff(1);
  7354  03CF  3001               	movlw	1
  7355  03D0  118A  27A0         	fcall	_setDimmerLights_SwOff
  7356  03D2  0008               	return
  7357  03D3                     __end_of_DimmerLights_PIR_Control:	
  7358                           
  7359                           	psect	text46
  7360  07C8                     __ptext46:	
  7361 ;; *************** function _setDimmerLights_SwOn *****************
  7362 ;; Defined at:
  7363 ;;		line 697 in file "../src/Dimmer_B1.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  sw              1    wreg     unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  sw              1    2[BANK0 ] unsigned char 
  7368 ;;  idle            1    3[BANK0 ] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;		None               void
  7371 ;; Registers used:
  7372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7378 ;;      Params:         0       0       0       0
  7379 ;;      Locals:         0       2       0       0
  7380 ;;      Temps:          0       0       0       0
  7381 ;;      Totals:         0       2       0       0
  7382 ;;Total ram usage:        2 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    4
  7385 ;; This function calls:
  7386 ;;		_DimmerLights_SelectPointer
  7387 ;; This function is called by:
  7388 ;;		_DimmerLights_PIR_Control
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function _setDimmerLights_SwOn
  7394  07C8                     _setDimmerLights_SwOn:	
  7395                           
  7396                           ;incstack = 0
  7397                           ; Regs used in _setDimmerLights_SwOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7398                           ;setDimmerLights_SwOn@sw stored from wreg
  7399  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  7400  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  7401  07CA  00D9               	movwf	setDimmerLights_SwOn@sw
  7402                           
  7403                           ;Dimmer_B1.c: 698: char idle = 0;
  7404  07CB  01DA               	clrf	setDimmerLights_SwOn@idle
  7405                           
  7406                           ;Dimmer_B1.c: 723: DimmerLights_SelectPointer(sw);
  7407  07CC  0859               	movf	setDimmerLights_SwOn@sw,w
  7408  07CD  158A  25C6  118A   	fcall	_DimmerLights_SelectPointer
  7409                           
  7410                           ;Dimmer_B1.c: 724: if (idle == 0) {
  7411  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  7412  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  7413  07D2  08DA               	movf	setDimmerLights_SwOn@idle,f
  7414  07D3  1D03               	skipz
  7415  07D4  0008               	return
  7416                           
  7417                           ;Dimmer_B1.c: 726: DimmerLights->SwFlag = 1;
  7418  07D5  0872               	movf	_DimmerLights,w
  7419  07D6  0084               	movwf	4
  7420  07D7  1383               	bcf	3,7	;select IRP bank0
  7421  07D8  1400               	bsf	0,0
  7422                           
  7423                           ;Dimmer_B1.c: 727: if (DimmerLights->Status == 0) {
  7424  07D9  0A72               	incf	_DimmerLights,w
  7425  07DA  0084               	movwf	4
  7426  07DB  1800               	btfsc	0,0
  7427  07DC  2FE7               	goto	l4081
  7428                           
  7429                           ;Dimmer_B1.c: 728: DimmerLights->Status = 1;
  7430  07DD  0A72               	incf	_DimmerLights,w
  7431  07DE  0084               	movwf	4
  7432  07DF  1400               	bsf	0,0
  7433                           
  7434                           ;Dimmer_B1.c: 729: DimmerLights->Trigger = 1;
  7435  07E0  0872               	movf	_DimmerLights,w
  7436  07E1  0084               	movwf	4
  7437  07E2  1480               	bsf	0,1
  7438                           
  7439                           ;Dimmer_B1.c: 730: DimmerLights->Switch = 1;
  7440  07E3  0872               	movf	_DimmerLights,w
  7441  07E4  0084               	movwf	4
  7442  07E5  1500               	bsf	0,2
  7443                           
  7444                           ;Dimmer_B1.c: 731: } else {
  7445  07E6  0008               	return
  7446  07E7                     l4081:	
  7447                           
  7448                           ;Dimmer_B1.c: 732: DimmerLights->Status = 0;
  7449  07E7  0A72               	incf	_DimmerLights,w
  7450  07E8  0084               	movwf	4
  7451  07E9  1000               	bcf	0,0
  7452  07EA  0008               	return
  7453  07EB                     __end_of_setDimmerLights_SwOn:	
  7454                           ;Dimmer_B1.c: 733: }
  7455                           ;Dimmer_B1.c: 734: ;;
  7456                           
  7457                           
  7458                           	psect	text47
  7459  07A0                     __ptext47:	
  7460 ;; *************** function _setDimmerLights_SwOff *****************
  7461 ;; Defined at:
  7462 ;;		line 739 in file "../src/Dimmer_B1.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  sw              1    wreg     unsigned char 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  sw              1    2[BANK0 ] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;		None               void
  7469 ;; Registers used:
  7470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7476 ;;      Params:         0       0       0       0
  7477 ;;      Locals:         0       1       0       0
  7478 ;;      Temps:          0       0       0       0
  7479 ;;      Totals:         0       1       0       0
  7480 ;;Total ram usage:        1 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    4
  7483 ;; This function calls:
  7484 ;;		_DimmerLights_SelectPointer
  7485 ;; This function is called by:
  7486 ;;		_DimmerLights_PIR_Control
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _setDimmerLights_SwOff
  7492  07A0                     _setDimmerLights_SwOff:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _setDimmerLights_SwOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7496                           ;setDimmerLights_SwOff@sw stored from wreg
  7497  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7498  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7499  07A2  00D9               	movwf	setDimmerLights_SwOff@sw
  7500                           
  7501                           ;Dimmer_B1.c: 740: DimmerLights_SelectPointer(sw);
  7502  07A3  0859               	movf	setDimmerLights_SwOff@sw,w
  7503  07A4  158A  25C6  118A   	fcall	_DimmerLights_SelectPointer
  7504                           
  7505                           ;Dimmer_B1.c: 742: if (DimmerLights->SwFlag == 1) {
  7506  07A7  0872               	movf	_DimmerLights,w
  7507  07A8  0084               	movwf	4
  7508  07A9  1383               	bcf	3,7	;select IRP bank0
  7509  07AA  1C00               	btfss	0,0
  7510  07AB  0008               	return
  7511                           
  7512                           ;Dimmer_B1.c: 743: DimmerLights->SwFlag = 0;
  7513  07AC  0872               	movf	_DimmerLights,w
  7514  07AD  0084               	movwf	4
  7515  07AE  1000               	bcf	0,0
  7516                           
  7517                           ;Dimmer_B1.c: 744: if (DimmerLights->Status == 1) {
  7518  07AF  0A72               	incf	_DimmerLights,w
  7519  07B0  0084               	movwf	4
  7520  07B1  1C00               	btfss	0,0
  7521  07B2  2FC1               	goto	l4093
  7522                           
  7523                           ;Dimmer_B1.c: 745: if (DimmerLights->DimmingSwFlag == 1) {
  7524  07B3  0872               	movf	_DimmerLights,w
  7525  07B4  0084               	movwf	4
  7526  07B5  1D80               	btfss	0,3
  7527  07B6  0008               	return
  7528                           
  7529                           ;Dimmer_B1.c: 746: DimmerLights->DimmingSwFlag = 0;
  7530  07B7  0872               	movf	_DimmerLights,w
  7531  07B8  0084               	movwf	4
  7532  07B9  1180               	bcf	0,3
  7533                           
  7534                           ;Dimmer_B1.c: 748: DimmerLights->DimmingTrigger = 1;
  7535  07BA  0872               	movf	_DimmerLights,w
  7536  07BB  0084               	movwf	4
  7537  07BC  1600               	bsf	0,4
  7538                           
  7539                           ;Dimmer_B1.c: 749: DimmerLights->DimmingSwitch = 0;
  7540  07BD  0872               	movf	_DimmerLights,w
  7541  07BE  0084               	movwf	4
  7542  07BF  1280               	bcf	0,5
  7543                           
  7544                           ;Dimmer_B1.c: 750: }
  7545                           ;Dimmer_B1.c: 751: } else {
  7546  07C0  0008               	return
  7547  07C1                     l4093:	
  7548                           
  7549                           ;Dimmer_B1.c: 753: DimmerLights->Trigger = 1;
  7550  07C1  0872               	movf	_DimmerLights,w
  7551  07C2  0084               	movwf	4
  7552  07C3  1480               	bsf	0,1
  7553                           
  7554                           ;Dimmer_B1.c: 754: DimmerLights->Switch = 0;
  7555  07C4  0872               	movf	_DimmerLights,w
  7556  07C5  0084               	movwf	4
  7557  07C6  1100               	bcf	0,2
  7558  07C7  0008               	return
  7559  07C8                     __end_of_setDimmerLights_SwOff:	
  7560                           
  7561                           	psect	text48
  7562  0DDE                     __ptext48:	
  7563 ;; *************** function _setDimmerIntr_MaxmumValue *****************
  7564 ;; Defined at:
  7565 ;;		line 133 in file "../src/Dimmer_B1.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  lights          1    wreg     unsigned char 
  7568 ;;  value           1    0[BANK0 ] unsigned char 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  lights          1    2[BANK0 ] unsigned char 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;		None               void
  7573 ;; Registers used:
  7574 ;;		wreg
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7580 ;;      Params:         0       1       0       0
  7581 ;;      Locals:         0       1       0       0
  7582 ;;      Temps:          0       1       0       0
  7583 ;;      Totals:         0       3       0       0
  7584 ;;Total ram usage:        3 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    3
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_setDimmerLights_Dimming
  7591 ;;		_DimmerLights_PIR_Control
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           
  7596                           ;psect for function _setDimmerIntr_MaxmumValue
  7597  0DDE                     _setDimmerIntr_MaxmumValue:	
  7598                           
  7599                           ;incstack = 0
  7600                           ; Regs used in _setDimmerIntr_MaxmumValue: [wreg]
  7601                           ;setDimmerIntr_MaxmumValue@lights stored from wreg
  7602  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  7603  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  7604  0DE0  00D9               	movwf	setDimmerIntr_MaxmumValue@lights
  7605                           
  7606                           ;Dimmer_B1.c: 135: if (lights == 1) {
  7607  0DE1  0859               	movf	setDimmerIntr_MaxmumValue@lights,w
  7608  0DE2  3A01               	xorlw	1
  7609  0DE3  1D03               	skipz
  7610  0DE4  0008               	return
  7611                           
  7612                           ;Dimmer_B1.c: 136: DimmerIntr1.MaxmumValue = value;
  7613  0DE5  0857               	movf	setDimmerIntr_MaxmumValue@value,w
  7614  0DE6  00D8               	movwf	??_setDimmerIntr_MaxmumValue
  7615  0DE7  0858               	movf	??_setDimmerIntr_MaxmumValue,w
  7616  0DE8  00A6               	movwf	_DimmerIntr1+6
  7617  0DE9  0008               	return
  7618  0DEA                     __end_of_setDimmerIntr_MaxmumValue:	
  7619                           
  7620                           	psect	text49
  7621  0EC5                     __ptext49:	
  7622 ;; *************** function _setDimmerIntr_Dimming_RF *****************
  7623 ;; Defined at:
  7624 ;;		line 228 in file "../src/Dimmer_B1.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  lights          1    wreg     unsigned char 
  7627 ;;  command         1    0[BANK0 ] unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  lights          1    2[BANK0 ] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;		None               void
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7639 ;;      Params:         0       1       0       0
  7640 ;;      Locals:         0       1       0       0
  7641 ;;      Temps:          0       1       0       0
  7642 ;;      Totals:         0       3       0       0
  7643 ;;Total ram usage:        3 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    3
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_DimmerLights_PIR_Control
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           
  7654                           ;psect for function _setDimmerIntr_Dimming_RF
  7655  0EC5                     _setDimmerIntr_Dimming_RF:	
  7656                           
  7657                           ;incstack = 0
  7658                           ; Regs used in _setDimmerIntr_Dimming_RF: [wreg+status,2+status,0]
  7659                           ;setDimmerIntr_Dimming_RF@lights stored from wreg
  7660  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  7661  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  7662  0EC7  00D9               	movwf	setDimmerIntr_Dimming_RF@lights
  7663                           
  7664                           ;Dimmer_B1.c: 230: if (lights == 1) {
  7665  0EC8  0859               	movf	setDimmerIntr_Dimming_RF@lights,w
  7666  0EC9  3A01               	xorlw	1
  7667  0ECA  1D03               	skipz
  7668  0ECB  0008               	return
  7669                           
  7670                           ;Dimmer_B1.c: 231: DimmerIntr1.Dimming_RF = command == 1 ? 1 : 0;
  7671  0ECC  0857               	movf	setDimmerIntr_Dimming_RF@command,w
  7672  0ECD  3A01               	xorlw	1
  7673  0ECE  3000               	movlw	0
  7674  0ECF  1903               	skipnz
  7675  0ED0  3001               	movlw	1
  7676  0ED1  00D8               	movwf	??_setDimmerIntr_Dimming_RF
  7677  0ED2  0ED8               	swapf	??_setDimmerIntr_Dimming_RF,f
  7678  0ED3  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7679  0ED4  0DD8               	rlf	??_setDimmerIntr_Dimming_RF,f
  7680  0ED5  0820               	movf	_DimmerIntr1,w
  7681  0ED6  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7682  0ED7  39BF               	andlw	-65
  7683  0ED8  0658               	xorwf	??_setDimmerIntr_Dimming_RF,w
  7684  0ED9  00A0               	movwf	_DimmerIntr1
  7685  0EDA  0008               	return
  7686  0EDB                     __end_of_setDimmerIntr_Dimming_RF:	
  7687                           
  7688                           	psect	text50
  7689  0DD2                     __ptext50:	
  7690 ;; *************** function _setDimmerIntr_DimmingValue *****************
  7691 ;; Defined at:
  7692 ;;		line 93 in file "../src/Dimmer_B1.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  lights          1    wreg     unsigned char 
  7695 ;;  value           1    0[BANK0 ] unsigned char 
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;  lights          1    2[BANK0 ] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;		None               void
  7700 ;; Registers used:
  7701 ;;		wreg
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7707 ;;      Params:         0       1       0       0
  7708 ;;      Locals:         0       1       0       0
  7709 ;;      Temps:          0       1       0       0
  7710 ;;      Totals:         0       3       0       0
  7711 ;;Total ram usage:        3 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    3
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_DimmerLights_PIR_Control
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           
  7722                           ;psect for function _setDimmerIntr_DimmingValue
  7723  0DD2                     _setDimmerIntr_DimmingValue:	
  7724                           
  7725                           ;incstack = 0
  7726                           ; Regs used in _setDimmerIntr_DimmingValue: [wreg]
  7727                           ;setDimmerIntr_DimmingValue@lights stored from wreg
  7728  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  7729  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  7730  0DD4  00D9               	movwf	setDimmerIntr_DimmingValue@lights
  7731                           
  7732                           ;Dimmer_B1.c: 95: if (lights == 1) {
  7733  0DD5  0859               	movf	setDimmerIntr_DimmingValue@lights,w
  7734  0DD6  3A01               	xorlw	1
  7735  0DD7  1D03               	skipz
  7736  0DD8  0008               	return
  7737                           
  7738                           ;Dimmer_B1.c: 96: DimmerIntr1.DimmingValue = value;
  7739  0DD9  0857               	movf	setDimmerIntr_DimmingValue@value,w
  7740  0DDA  00D8               	movwf	??_setDimmerIntr_DimmingValue
  7741  0DDB  0858               	movf	??_setDimmerIntr_DimmingValue,w
  7742  0DDC  00A5               	movwf	_DimmerIntr1+5
  7743  0DDD  0008               	return
  7744  0DDE                     __end_of_setDimmerIntr_DimmingValue:	
  7745                           
  7746                           	psect	text51
  7747  0E59                     __ptext51:	
  7748 ;; *************** function _getDimmerLights_Status *****************
  7749 ;; Defined at:
  7750 ;;		line 1080 in file "../src/Dimmer_B1.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  lights          1    wreg     unsigned char 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  lights          1    2[BANK0 ] unsigned char 
  7755 ;;  status          1    3[BANK0 ] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7765 ;;      Params:         0       0       0       0
  7766 ;;      Locals:         0       2       0       0
  7767 ;;      Temps:          0       0       0       0
  7768 ;;      Totals:         0       2       0       0
  7769 ;;Total ram usage:        2 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    4
  7772 ;; This function calls:
  7773 ;;		_DimmerLights_SelectPointer
  7774 ;; This function is called by:
  7775 ;;		_DimmerLights_PIR_Control
  7776 ;;		_Exception_Main
  7777 ;;		_PIR_Main
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           
  7782                           ;psect for function _getDimmerLights_Status
  7783  0E59                     _getDimmerLights_Status:	
  7784                           
  7785                           ;incstack = 0
  7786                           ; Regs used in _getDimmerLights_Status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7787                           ;getDimmerLights_Status@lights stored from wreg
  7788  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  7789  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  7790  0E5B  00D9               	movwf	getDimmerLights_Status@lights
  7791                           
  7792                           ;Dimmer_B1.c: 1081: DimmerLights_SelectPointer(lights);
  7793  0E5C  0859               	movf	getDimmerLights_Status@lights,w
  7794  0E5D  158A  25C6         	fcall	_DimmerLights_SelectPointer
  7795                           
  7796                           ;Dimmer_B1.c: 1082: char status = DimmerLights->Status == 1 ? 1 : 0;
  7797  0E5F  0A72               	incf	_DimmerLights,w
  7798  0E60  0084               	movwf	4
  7799  0E61  3000               	movlw	0
  7800  0E62  1383               	bcf	3,7	;select IRP bank0
  7801  0E63  1800               	btfsc	0,0
  7802  0E64  3001               	movlw	1
  7803  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  7804  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  7805  0E67  00DA               	movwf	getDimmerLights_Status@status
  7806                           
  7807                           ;Dimmer_B1.c: 1083: return status;
  7808  0E68  085A               	movf	getDimmerLights_Status@status,w
  7809  0E69  0008               	return
  7810  0E6A                     __end_of_getDimmerLights_Status:	
  7811                           
  7812                           	psect	text52
  7813  0DC6                     __ptext52:	
  7814 ;; *************** function _DimmerLights_SelectPointer *****************
  7815 ;; Defined at:
  7816 ;;		line 620 in file "../src/Dimmer_B1.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  lights          1    wreg     unsigned char 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  lights          1    1[BANK0 ] unsigned char 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;		None               void
  7823 ;; Registers used:
  7824 ;;		wreg
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7830 ;;      Params:         0       0       0       0
  7831 ;;      Locals:         0       1       0       0
  7832 ;;      Temps:          0       1       0       0
  7833 ;;      Totals:         0       2       0       0
  7834 ;;Total ram usage:        2 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    3
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_setDimmerLights_SwOn
  7841 ;;		_setDimmerLights_SwOff
  7842 ;;		_setDimmerLights_Main
  7843 ;;		_getDimmerLights_Status
  7844 ;;		_setDimmerLights_DimmingOn
  7845 ;;		_setDimmerLights_Status
  7846 ;;		_setDimmerLights_DimmingRun
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _DimmerLights_SelectPointer
  7852  0DC6                     _DimmerLights_SelectPointer:	
  7853                           
  7854                           ;incstack = 0
  7855                           ; Regs used in _DimmerLights_SelectPointer: [wreg]
  7856                           ;DimmerLights_SelectPointer@lights stored from wreg
  7857  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  7858  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  7859  0DC8  00D8               	movwf	DimmerLights_SelectPointer@lights
  7860                           
  7861                           ;Dimmer_B1.c: 622: if (lights == 1) {
  7862  0DC9  0858               	movf	DimmerLights_SelectPointer@lights,w
  7863  0DCA  3A01               	xorlw	1
  7864  0DCB  1D03               	skipz
  7865  0DCC  0008               	return
  7866                           
  7867                           ;Dimmer_B1.c: 623: DimmerLights = &DimmerLights1;
  7868  0DCD  30CA               	movlw	_DimmerLights1& (0+255)
  7869  0DCE  00D7               	movwf	??_DimmerLights_SelectPointer
  7870  0DCF  0857               	movf	??_DimmerLights_SelectPointer,w
  7871  0DD0  00F2               	movwf	_DimmerLights
  7872  0DD1  0008               	return
  7873  0DD2                     __end_of_DimmerLights_SelectPointer:	
  7874                           
  7875                           	psect	text53
  7876  0DA1                     __ptext53:	
  7877 ;; *************** function _DimmerLights_Initialization *****************
  7878 ;; Defined at:
  7879 ;;		line 641 in file "../src/Dimmer_B1.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;		None               void
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, pclath, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7893 ;;      Params:         0       0       0       0
  7894 ;;      Locals:         0       0       0       0
  7895 ;;      Temps:          0       0       0       0
  7896 ;;      Totals:         0       0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    4
  7900 ;; This function calls:
  7901 ;;		_DimmerIntr_Initialization
  7902 ;;		_setDimmerLights_Initialization
  7903 ;; This function is called by:
  7904 ;;		_main
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           
  7909                           ;psect for function _DimmerLights_Initialization
  7910  0DA1                     _DimmerLights_Initialization:	
  7911                           
  7912                           ;Dimmer_B1.c: 643: setDimmerLights_Initialization(1);
  7913                           
  7914                           ;incstack = 0
  7915                           ; Regs used in _DimmerLights_Initialization: [wreg+status,2+status,0+pclath+cstack]
  7916  0DA1  3001               	movlw	1
  7917  0DA2  158A  2582  158A   	fcall	_setDimmerLights_Initialization
  7918                           
  7919                           ;Dimmer_B1.c: 653: DimmerIntr_Initialization();
  7920  0DA5  158A  269E         	fcall	_DimmerIntr_Initialization
  7921  0DA7  0008               	return
  7922  0DA8                     __end_of_DimmerLights_Initialization:	
  7923                           
  7924                           	psect	text54
  7925  0D82                     __ptext54:	
  7926 ;; *************** function _setDimmerLights_Initialization *****************
  7927 ;; Defined at:
  7928 ;;		line 657 in file "../src/Dimmer_B1.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  lights          1    wreg     unsigned char 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  lights          1    0[COMMON] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;		None               void
  7935 ;; Registers used:
  7936 ;;		wreg
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7942 ;;      Params:         0       0       0       0
  7943 ;;      Locals:         0       0       0       0
  7944 ;;      Temps:          0       0       0       0
  7945 ;;      Totals:         0       0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    3
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_DimmerLights_Initialization
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           
  7957                           ;psect for function _setDimmerLights_Initialization
  7958  0D82                     _setDimmerLights_Initialization:	
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in _setDimmerLights_Initialization: [wreg]
  7962  0D82  0008               	return
  7963  0D83                     __end_of_setDimmerLights_Initialization:	
  7964                           
  7965                           	psect	text55
  7966  0E9E                     __ptext55:	
  7967 ;; *************** function _DimmerIntr_Initialization *****************
  7968 ;; Defined at:
  7969 ;;		line 7 in file "../src/Dimmer_B1.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;		None               void
  7976 ;; Registers used:
  7977 ;;		wreg
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7983 ;;      Params:         0       0       0       0
  7984 ;;      Locals:         0       0       0       0
  7985 ;;      Temps:          0       1       0       0
  7986 ;;      Totals:         0       1       0       0
  7987 ;;Total ram usage:        1 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    3
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_DimmerLights_Initialization
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _DimmerIntr_Initialization
  7999  0E9E                     _DimmerIntr_Initialization:	
  8000                           
  8001                           ;Dimmer_B1.c: 10: DimmerIntr1.TuneTimeValue = 7;
  8002                           
  8003                           ;incstack = 0
  8004                           ; Regs used in _DimmerIntr_Initialization: [wreg]
  8005  0E9E  3007               	movlw	7
  8006  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  8007  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  8008  0EA1  00D7               	movwf	??_DimmerIntr_Initialization
  8009  0EA2  0857               	movf	??_DimmerIntr_Initialization,w
  8010  0EA3  00A4               	movwf	_DimmerIntr1+4
  8011                           
  8012                           ;Dimmer_B1.c: 11: DimmerIntr1.MaxmumValue = ((char)((100-70)*0.6));
  8013  0EA4  3012               	movlw	18
  8014  0EA5  00D7               	movwf	??_DimmerIntr_Initialization
  8015  0EA6  0857               	movf	??_DimmerIntr_Initialization,w
  8016  0EA7  00A6               	movwf	_DimmerIntr1+6
  8017                           
  8018                           ;Dimmer_B1.c: 12: DimmerIntr1.MinimumValue = ((char)((100-10)*0.6));
  8019  0EA8  3036               	movlw	54
  8020  0EA9  00D7               	movwf	??_DimmerIntr_Initialization
  8021  0EAA  0857               	movf	??_DimmerIntr_Initialization,w
  8022  0EAB  00A7               	movwf	_DimmerIntr1+7
  8023                           
  8024                           ;Dimmer_B1.c: 67: if (myMain.InitDimmer == 1) {
  8025  0EAC  1E33               	btfss	_myMain+2,4
  8026  0EAD  0008               	return
  8027                           
  8028                           ;Dimmer_B1.c: 68: myMain.InitDimmer = 0;
  8029  0EAE  1233               	bcf	_myMain+2,4
  8030                           
  8031                           ;Dimmer_B1.c: 69: myMain.SaveDimmer = 1;
  8032  0EAF  16B3               	bsf	_myMain+2,5
  8033  0EB0  0008               	return
  8034  0EB1                     __end_of_DimmerIntr_Initialization:	
  8035                           ;Dimmer_B1.c: 70: ;;
  8036                           
  8037                           
  8038                           	psect	text56
  8039  0715                     __ptext56:	
  8040 ;; *************** function _CDS_Main *****************
  8041 ;; Defined at:
  8042 ;;		line 11 in file "../src/CDS_B1.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;		None               void
  8049 ;; Registers used:
  8050 ;;		wreg, status,2, status,0
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8056 ;;      Params:         0       0       0       0
  8057 ;;      Locals:         0       0       0       0
  8058 ;;      Temps:          0       3       0       0
  8059 ;;      Totals:         0       3       0       0
  8060 ;;Total ram usage:        3 bytes
  8061 ;; Hardware stack levels used:    1
  8062 ;; Hardware stack levels required when called:    3
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_main
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _CDS_Main
  8072  0715                     _CDS_Main:	
  8073                           
  8074                           ;CDS_B1.c: 13: if (_CDS.Enable == 1) {
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in _CDS_Main: [wreg+status,2+status,0]
  8078  0715  1283               	bcf	3,5	;RP0=0, select bank0
  8079  0716  1303               	bcf	3,6	;RP1=0, select bank0
  8080  0717  1C3A               	btfss	__CDS,0
  8081  0718  0008               	return
  8082                           
  8083                           ;CDS_B1.c: 14: if (_CDS.GO == 0) {
  8084  0719  18BA               	btfsc	__CDS,1
  8085  071A  2F28               	goto	l123
  8086                           
  8087                           ;CDS_B1.c: 15: if (_CDS.ADtoGO == 0) {
  8088  071B  19BA               	btfsc	__CDS,3
  8089  071C  0008               	return
  8090                           
  8091                           ;CDS_B1.c: 16: _CDS.Time++;
  8092  071D  3001               	movlw	1
  8093  071E  00D7               	movwf	??_CDS_Main
  8094  071F  0857               	movf	??_CDS_Main,w
  8095  0720  07BB               	addwf	__CDS+1,f
  8096                           
  8097                           ;CDS_B1.c: 17: if (_CDS.Time >= (100 / 20))
  8098  0721  3005               	movlw	5
  8099  0722  023B               	subwf	__CDS+1,w
  8100  0723  1C03               	skipc
  8101  0724  0008               	return
  8102                           
  8103                           ;CDS_B1.c: 18: {
  8104                           ;CDS_B1.c: 19: _CDS.Time = 0;
  8105  0725  01BB               	clrf	__CDS+1
  8106                           
  8107                           ;CDS_B1.c: 20: _CDS.ADtoGO = 1;
  8108  0726  15BA               	bsf	__CDS,3
  8109                           
  8110                           ;CDS_B1.c: 21: }
  8111                           ;CDS_B1.c: 22: }
  8112                           ;CDS_B1.c: 23: } else {
  8113  0727  0008               	return
  8114  0728                     l123:	
  8115                           
  8116                           ;CDS_B1.c: 24: if (_CDS.GO == 1) {
  8117  0728  1CBA               	btfss	__CDS,1
  8118  0729  0008               	return
  8119                           
  8120                           ;CDS_B1.c: 25: _CDS.GO = 0;
  8121  072A  10BA               	bcf	__CDS,1
  8122                           
  8123                           ;CDS_B1.c: 26: if (_CDS.Status == 0) {
  8124  072B  1A3A               	btfsc	__CDS,4
  8125  072C  2F33               	goto	l4575
  8126                           
  8127                           ;CDS_B1.c: 27: if (_CDS.SignalAD >= _CDS.VRAD) {
  8128  072D  083C               	movf	__CDS+2,w
  8129  072E  023D               	subwf	__CDS+3,w
  8130  072F  1C03               	skipc
  8131  0730  0008               	return
  8132                           
  8133                           ;CDS_B1.c: 28: _CDS.Status = 1;
  8134  0731  163A               	bsf	__CDS,4
  8135                           
  8136                           ;CDS_B1.c: 29: }
  8137                           ;CDS_B1.c: 30: } else {
  8138  0732  0008               	return
  8139  0733                     l4575:	
  8140                           
  8141                           ;CDS_B1.c: 31: if (_CDS.SignalAD <= (_CDS.VRAD - 100)) {
  8142  0733  083C               	movf	__CDS+2,w
  8143  0734  3E9C               	addlw	156
  8144  0735  00D7               	movwf	??_CDS_Main
  8145  0736  30FF               	movlw	255
  8146  0737  1803               	skipnc
  8147  0738  3000               	movlw	0
  8148  0739  00D8               	movwf	??_CDS_Main+1
  8149  073A  0858               	movf	??_CDS_Main+1,w
  8150  073B  3A80               	xorlw	128
  8151  073C  00D9               	movwf	??_CDS_Main+2
  8152  073D  3080               	movlw	128
  8153  073E  0259               	subwf	??_CDS_Main+2,w
  8154  073F  1D03               	skipz
  8155  0740  2F43               	goto	u5455
  8156  0741  083D               	movf	__CDS+3,w
  8157  0742  0257               	subwf	??_CDS_Main,w
  8158  0743                     u5455:	
  8159  0743  1C03               	skipc
  8160  0744  0008               	return
  8161                           
  8162                           ;CDS_B1.c: 32: _CDS.Status = 0;
  8163  0745  1283               	bcf	3,5	;RP0=0, select bank0
  8164  0746  1303               	bcf	3,6	;RP1=0, select bank0
  8165  0747  123A               	bcf	__CDS,4
  8166  0748  0008               	return
  8167  0749                     __end_of_CDS_Main:	
  8168                           
  8169                           	psect	text57
  8170  0D8D                     __ptext57:	
  8171 ;; *************** function _CDS_Initialization *****************
  8172 ;; Defined at:
  8173 ;;		line 7 in file "../src/CDS_B1.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;		None               void
  8180 ;; Registers used:
  8181 ;;		None
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8187 ;;      Params:         0       0       0       0
  8188 ;;      Locals:         0       0       0       0
  8189 ;;      Temps:          0       0       0       0
  8190 ;;      Totals:         0       0       0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:    3
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           
  8202                           ;psect for function _CDS_Initialization
  8203  0D8D                     _CDS_Initialization:	
  8204                           
  8205                           ;CDS_B1.c: 8: _CDS.Enable = 1;
  8206                           
  8207                           ;incstack = 0
  8208                           ; Regs used in _CDS_Initialization: []
  8209  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  8210  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  8211  0D8F  143A               	bsf	__CDS,0
  8212  0D90  0008               	return
  8213  0D91                     __end_of_CDS_Initialization:	
  8214                           
  8215                           	psect	text58
  8216  0F07                     __ptext58:	
  8217 ;; *************** function _ISR *****************
  8218 ;; Defined at:
  8219 ;;		line 116 in file "../src/MCU_B1.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;		None
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;		None               void
  8226 ;; Registers used:
  8227 ;;		wreg, status,2, status,0, pclath, cstack
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8233 ;;      Params:         0       0       0       0
  8234 ;;      Locals:         0       0       0       0
  8235 ;;      Temps:          4       0       0       0
  8236 ;;      Totals:         4       0       0       0
  8237 ;;Total ram usage:        4 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    2
  8240 ;; This function calls:
  8241 ;;		_TMR1_ISR
  8242 ;; This function is called by:
  8243 ;;		Interrupt level 1
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _ISR
  8249  0F07                     _ISR:	
  8250                           
  8251                           ;MCU_B1.c: 125: if (TMR1IE == 1 && TMR1IF == 1) {
  8252  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  8253  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  8254  0F09  1C0C               	btfss	12,0	;volatile
  8255  0F0A  2F12               	goto	i1l664
  8256  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  8257  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  8258  0F0D  1C0C               	btfss	12,0	;volatile
  8259  0F0E  2F12               	goto	i1l664
  8260                           
  8261                           ;MCU_B1.c: 126: TMR1_ISR();
  8262  0F0F  158A  276B  158A   	fcall	_TMR1_ISR
  8263  0F12                     i1l664:	
  8264                           ;MCU_B1.c: 127: }
  8265                           ;MCU_B1.c: 148: return;
  8266                           
  8267  0F12  0879               	movf	??_ISR+3,w
  8268  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  8269  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  8270  0F15  00FF               	movwf	127
  8271  0F16  0878               	movf	??_ISR+2,w
  8272  0F17  008A               	movwf	10
  8273  0F18  0877               	movf	??_ISR+1,w
  8274  0F19  0084               	movwf	4
  8275  0F1A  0E76               	swapf	??_ISR^(0+-128),w
  8276  0F1B  0083               	movwf	3
  8277  0F1C  0EFE               	swapf	126,f
  8278  0F1D  0E7E               	swapf	126,w
  8279  0F1E  0009               	retfie
  8280  0F1F                     __end_of_ISR:	
  8281                           
  8282                           	psect	intentry
  8283  0004                     __pintentry:	
  8284                           ;incstack = 0
  8285                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8286                           
  8287  0004                     interrupt_function:	
  8288  007E                     saved_w	set	btemp
  8289  0004  00FE               	movwf	btemp
  8290  0005  0E03               	swapf	3,w
  8291  0006  00F6               	movwf	??_ISR
  8292  0007  0804               	movf	4,w
  8293  0008  00F7               	movwf	??_ISR+1
  8294  0009  080A               	movf	10,w
  8295  000A  00F8               	movwf	??_ISR+2
  8296  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8297  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8298  000D  087F               	movf	btemp+1,w
  8299  000E  00F9               	movwf	??_ISR+3
  8300  000F  158A  2F07         	ljmp	_ISR
  8301                           
  8302                           	psect	text59
  8303  0F6B                     __ptext59:	
  8304 ;; *************** function _TMR1_ISR *****************
  8305 ;; Defined at:
  8306 ;;		line 236 in file "../src/MCU_B1.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;		None               void
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0, pclath, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8320 ;;      Params:         0       0       0       0
  8321 ;;      Locals:         0       0       0       0
  8322 ;;      Temps:          0       0       0       0
  8323 ;;      Totals:         0       0       0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    1
  8327 ;; This function calls:
  8328 ;;		_DimmerLights_IOC_1
  8329 ;;		_DimmerLights_TMR_1
  8330 ;; This function is called by:
  8331 ;;		_ISR
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function _TMR1_ISR
  8337  0F6B                     _TMR1_ISR:	
  8338                           
  8339                           ;MCU_B1.c: 242: DimmerLights_IOC_1();
  8340                           
  8341                           ;incstack = 0
  8342                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8343  0F6B  158A  2649  158A   	fcall	_DimmerLights_IOC_1
  8344                           
  8345                           ;MCU_B1.c: 254: DimmerLights_TMR_1();
  8346  0F6E  118A  2640  158A   	fcall	_DimmerLights_TMR_1
  8347                           
  8348                           ;MCU_B1.c: 268: Timer1.Count++;
  8349  0F71  3001               	movlw	1
  8350  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  8351  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  8352  0F74  07BF               	addwf	_Timer1+1,f
  8353  0F75  1803               	skipnc
  8354  0F76  0AC0               	incf	_Timer1+2,f
  8355  0F77  3000               	movlw	0
  8356  0F78  07C0               	addwf	_Timer1+2,f
  8357                           
  8358                           ;MCU_B1.c: 269: if (Timer1.Count == (int)(20*10)) {
  8359  0F79  30C8               	movlw	200
  8360  0F7A  063F               	xorwf	_Timer1+1,w
  8361  0F7B  0440               	iorwf	_Timer1+2,w
  8362  0F7C  1D03               	skipz
  8363  0F7D  2F81               	goto	i1l3537
  8364                           
  8365                           ;MCU_B1.c: 270: Timer1.Count = 0;
  8366  0F7E  01BF               	clrf	_Timer1+1
  8367  0F7F  01C0               	clrf	_Timer1+2
  8368                           
  8369                           ;MCU_B1.c: 271: Timer1.Timeout = 1;
  8370  0F80  143E               	bsf	_Timer1,0
  8371  0F81                     i1l3537:	
  8372                           
  8373                           ;MCU_B1.c: 272: }
  8374                           ;MCU_B1.c: 274: TMR1H = (int)((65536-1480)/256);
  8375  0F81  30FA               	movlw	250
  8376  0F82  008F               	movwf	15	;volatile
  8377                           
  8378                           ;MCU_B1.c: 275: TMR1L = (int)((65536-1480)%256);
  8379  0F83  3038               	movlw	56
  8380  0F84  008E               	movwf	14	;volatile
  8381                           
  8382                           ;MCU_B1.c: 276: TMR1IF = 0;
  8383  0F85  100C               	bcf	12,0	;volatile
  8384  0F86  0008               	return
  8385  0F87                     __end_of_TMR1_ISR:	
  8386                           
  8387                           	psect	text60
  8388  0640                     __ptext60:	
  8389 ;; *************** function _DimmerLights_TMR_1 *****************
  8390 ;; Defined at:
  8391 ;;		line 1277 in file "../src/Dimmer_B1.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;		None
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;		None
  8396 ;; Return value:  Size  Location     Type
  8397 ;;		None               void
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8405 ;;      Params:         0       0       0       0
  8406 ;;      Locals:         0       0       0       0
  8407 ;;      Temps:          1       0       0       0
  8408 ;;      Totals:         1       0       0       0
  8409 ;;Total ram usage:        1 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; This function calls:
  8412 ;;		Nothing
  8413 ;; This function is called by:
  8414 ;;		_TMR1_ISR
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           
  8419                           ;psect for function _DimmerLights_TMR_1
  8420  0640                     _DimmerLights_TMR_1:	
  8421                           
  8422                           ;Dimmer_B1.c: 1278: if (DimmerIntr1.Start == 1) {
  8423                           
  8424                           ;incstack = 0
  8425                           ; Regs used in _DimmerLights_TMR_1: [wreg+status,2+status,0]
  8426  0640  1283               	bcf	3,5	;RP0=0, select bank0
  8427  0641  1303               	bcf	3,6	;RP1=0, select bank0
  8428  0642  1D20               	btfss	_DimmerIntr1,2
  8429  0643  2E4E               	goto	i1l3223
  8430                           
  8431                           ;Dimmer_B1.c: 1279: DimmerIntr1.Count++;
  8432  0644  3001               	movlw	1
  8433  0645  00F5               	movwf	??_DimmerLights_TMR_1
  8434  0646  0875               	movf	??_DimmerLights_TMR_1,w
  8435  0647  07A2               	addwf	_DimmerIntr1+2,f
  8436                           
  8437                           ;Dimmer_B1.c: 1280: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) + 1) {
  8438  0648  3037               	movlw	55
  8439  0649  0222               	subwf	_DimmerIntr1+2,w
  8440  064A  1C03               	skipc
  8441  064B  2E4E               	goto	i1l3223
  8442                           
  8443                           ;Dimmer_B1.c: 1281: DimmerIntr1.Count = 0;
  8444  064C  01A2               	clrf	_DimmerIntr1+2
  8445                           
  8446                           ;Dimmer_B1.c: 1282: DimmerIntr1.Start = 0;
  8447  064D  1120               	bcf	_DimmerIntr1,2
  8448  064E                     i1l3223:	
  8449                           
  8450                           ;Dimmer_B1.c: 1283: }
  8451                           ;Dimmer_B1.c: 1284: }
  8452                           ;Dimmer_B1.c: 1286: if (DimmerIntr1.GO == 1) {
  8453  064E  1C20               	btfss	_DimmerIntr1,0
  8454  064F  2E5A               	goto	i1l384
  8455                           
  8456                           ;Dimmer_B1.c: 1287: if (DimmerIntr1.Count >= DimmerIntr1.DimmingValue) {
  8457  0650  0825               	movf	_DimmerIntr1+5,w
  8458  0651  0222               	subwf	_DimmerIntr1+2,w
  8459  0652  1C03               	skipc
  8460  0653  2E89               	goto	i1l387
  8461                           
  8462                           ;Dimmer_B1.c: 1288: DimmerIntr1.GO = 0;
  8463  0654  1020               	bcf	_DimmerIntr1,0
  8464                           
  8465                           ;Dimmer_B1.c: 1289: DimmerIntr1.Tune = 1;
  8466  0655  14A0               	bsf	_DimmerIntr1,1
  8467                           
  8468                           ;Dimmer_B1.c: 1291: if (DimmerIntr1.ControlStatus == 1) {
  8469  0656  1DA0               	btfss	_DimmerIntr1,3
  8470  0657  2E89               	goto	i1l387
  8471                           
  8472                           ;Dimmer_B1.c: 1292: RB2 = 1;
  8473  0658  1506               	bsf	6,2	;volatile
  8474                           
  8475                           ;Dimmer_B1.c: 1294: }
  8476                           ;Dimmer_B1.c: 1295: }
  8477                           ;Dimmer_B1.c: 1296: } else {
  8478  0659  2E89               	goto	i1l387
  8479  065A                     i1l384:	
  8480                           
  8481                           ;Dimmer_B1.c: 1297: if (DimmerIntr1.Tune == 1) {
  8482  065A  1CA0               	btfss	_DimmerIntr1,1
  8483  065B  2E89               	goto	i1l387
  8484                           
  8485                           ;Dimmer_B1.c: 1298: DimmerIntr1.Tune = 0;
  8486  065C  10A0               	bcf	_DimmerIntr1,1
  8487                           
  8488                           ;Dimmer_B1.c: 1299: DimmerIntr1.TuneTime++;
  8489  065D  3001               	movlw	1
  8490  065E  00F5               	movwf	??_DimmerLights_TMR_1
  8491  065F  0875               	movf	??_DimmerLights_TMR_1,w
  8492  0660  07A3               	addwf	_DimmerIntr1+3,f
  8493                           
  8494                           ;Dimmer_B1.c: 1300: if (DimmerIntr1.TuneTime >= DimmerIntr1.TuneTimeValue) {
  8495  0661  0824               	movf	_DimmerIntr1+4,w
  8496  0662  0223               	subwf	_DimmerIntr1+3,w
  8497  0663  1C03               	skipc
  8498  0664  2E89               	goto	i1l387
  8499                           
  8500                           ;Dimmer_B1.c: 1301: DimmerIntr1.TuneTime = 0;
  8501  0665  01A3               	clrf	_DimmerIntr1+3
  8502                           
  8503                           ;Dimmer_B1.c: 1302: if (DimmerIntr1.Dimming_Sw == 1) {
  8504  0666  1E20               	btfss	_DimmerIntr1,4
  8505  0667  2E76               	goto	i1l390
  8506                           
  8507                           ;Dimmer_B1.c: 1303: if (DimmerIntr1.Dimming_Status == 0) {
  8508  0668  1AA0               	btfsc	_DimmerIntr1,5
  8509  0669  2E70               	goto	i1l3247
  8510                           
  8511                           ;Dimmer_B1.c: 1304: if (DimmerIntr1.DimmingValue > ((char)((100-70)*0.6))) {
  8512  066A  3013               	movlw	19
  8513  066B  0225               	subwf	_DimmerIntr1+5,w
  8514  066C  1803               	btfsc	3,0
  8515  066D  2E7C               	goto	i1l3253
  8516                           
  8517                           ;Dimmer_B1.c: 1307: DimmerIntr1.Dimming_Status = 1;
  8518                           
  8519                           ;Dimmer_B1.c: 1306: } else {
  8520                           
  8521                           ;Dimmer_B1.c: 1305: DimmerIntr1.DimmingValue--;
  8522  066E  16A0               	bsf	_DimmerIntr1,5
  8523                           
  8524                           ;Dimmer_B1.c: 1308: }
  8525                           ;Dimmer_B1.c: 1309: } else {
  8526  066F  2E89               	goto	i1l387
  8527  0670                     i1l3247:	
  8528                           
  8529                           ;Dimmer_B1.c: 1310: if (DimmerIntr1.DimmingValue < ((char)((100-10)*0.6))) {
  8530  0670  3036               	movlw	54
  8531  0671  0225               	subwf	_DimmerIntr1+5,w
  8532  0672  1C03               	btfss	3,0
  8533  0673  2E83               	goto	i1l3257
  8534                           
  8535                           ;Dimmer_B1.c: 1313: DimmerIntr1.Dimming_Status = 0;
  8536                           
  8537                           ;Dimmer_B1.c: 1312: } else {
  8538                           
  8539                           ;Dimmer_B1.c: 1311: DimmerIntr1.DimmingValue++;
  8540  0674  12A0               	bcf	_DimmerIntr1,5
  8541                           
  8542                           ;Dimmer_B1.c: 1314: }
  8543                           ;Dimmer_B1.c: 1315: }
  8544                           ;Dimmer_B1.c: 1316: } else if (DimmerIntr1.Dimming_RF == 1) {
  8545  0675  2E89               	goto	i1l387
  8546  0676                     i1l390:	
  8547  0676  1F20               	btfss	_DimmerIntr1,6
  8548  0677  2E89               	goto	i1l387
  8549                           
  8550                           ;Dimmer_B1.c: 1317: if (DimmerIntr1.DimmingValue > DimmerIntr1.MaxmumValue) {
  8551  0678  0825               	movf	_DimmerIntr1+5,w
  8552  0679  0226               	subwf	_DimmerIntr1+6,w
  8553  067A  1803               	skipnc
  8554  067B  2E7F               	goto	i1l3255
  8555  067C                     i1l3253:	
  8556                           
  8557                           ;Dimmer_B1.c: 1318: DimmerIntr1.DimmingValue--;
  8558  067C  3001               	movlw	1
  8559  067D  02A5               	subwf	_DimmerIntr1+5,f
  8560                           
  8561                           ;Dimmer_B1.c: 1319: } else if (DimmerIntr1.DimmingValue < DimmerIntr1.MaxmumValue) {
  8562  067E  2E89               	goto	i1l387
  8563  067F                     i1l3255:	
  8564  067F  0826               	movf	_DimmerIntr1+6,w
  8565  0680  0225               	subwf	_DimmerIntr1+5,w
  8566  0681  1803               	skipnc
  8567  0682  2E88               	goto	i1l401
  8568  0683                     i1l3257:	
  8569                           
  8570                           ;Dimmer_B1.c: 1320: DimmerIntr1.DimmingValue++;
  8571  0683  3001               	movlw	1
  8572  0684  00F5               	movwf	??_DimmerLights_TMR_1
  8573  0685  0875               	movf	??_DimmerLights_TMR_1,w
  8574  0686  07A5               	addwf	_DimmerIntr1+5,f
  8575                           
  8576                           ;Dimmer_B1.c: 1321: } else {
  8577  0687  2E89               	goto	i1l387
  8578  0688                     i1l401:	
  8579                           
  8580                           ;Dimmer_B1.c: 1322: DimmerIntr1.Dimming_RF = 0;
  8581  0688  1320               	bcf	_DimmerIntr1,6
  8582  0689                     i1l387:	
  8583                           
  8584                           ;Dimmer_B1.c: 1323: }
  8585                           ;Dimmer_B1.c: 1324: }
  8586                           ;Dimmer_B1.c: 1325: }
  8587                           ;Dimmer_B1.c: 1326: }
  8588                           ;Dimmer_B1.c: 1327: }
  8589                           ;Dimmer_B1.c: 1328: if (RB2 == 1) {
  8590  0689  1D06               	btfss	6,2	;volatile
  8591  068A  0008               	return
  8592                           
  8593                           ;Dimmer_B1.c: 1329: if (DimmerIntr1.Count >= ((char)((100-10)*0.6)) - 10) {
  8594  068B  302C               	movlw	44
  8595  068C  0222               	subwf	_DimmerIntr1+2,w
  8596  068D  1C03               	skipc
  8597  068E  0008               	return
  8598                           
  8599                           ;Dimmer_B1.c: 1330: RB2 = 0;
  8600  068F  1106               	bcf	6,2	;volatile
  8601  0690  0008               	return
  8602  0691                     __end_of_DimmerLights_TMR_1:	
  8603                           
  8604                           	psect	text61
  8605  0E49                     __ptext61:	
  8606 ;; *************** function _DimmerLights_IOC_1 *****************
  8607 ;; Defined at:
  8608 ;;		line 1336 in file "../src/Dimmer_B1.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;		None
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;		None
  8613 ;; Return value:  Size  Location     Type
  8614 ;;		None               void
  8615 ;; Registers used:
  8616 ;;		None
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8622 ;;      Params:         0       0       0       0
  8623 ;;      Locals:         0       0       0       0
  8624 ;;      Temps:          0       0       0       0
  8625 ;;      Totals:         0       0       0       0
  8626 ;;Total ram usage:        0 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; This function calls:
  8629 ;;		Nothing
  8630 ;; This function is called by:
  8631 ;;		_TMR1_ISR
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function _DimmerLights_IOC_1
  8637  0E49                     _DimmerLights_IOC_1:	
  8638                           
  8639                           ;Dimmer_B1.c: 1339: if (RA7 == 1) {
  8640                           
  8641                           ;incstack = 0
  8642                           ; Regs used in _DimmerLights_IOC_1: []
  8643  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  8644  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  8645  0E4B  1F85               	btfss	5,7	;volatile
  8646  0E4C  2E51               	goto	i1l408
  8647                           
  8648                           ;Dimmer_B1.c: 1340: if (Dimmer.PIR_DimmerSignal == 1) {
  8649  0E4D  1DAC               	btfss	_Dimmer,3
  8650  0E4E  0008               	return
  8651                           
  8652                           ;Dimmer_B1.c: 1341: Dimmer.PIR_DimmerSignal = 0;
  8653  0E4F  11AC               	bcf	_Dimmer,3
  8654                           
  8655                           ;Dimmer_B1.c: 1342: }
  8656                           ;Dimmer_B1.c: 1343: } else {
  8657  0E50  0008               	return
  8658  0E51                     i1l408:	
  8659                           
  8660                           ;Dimmer_B1.c: 1344: if (Dimmer.PIR_DimmerSignal == 0) {
  8661  0E51  19AC               	btfsc	_Dimmer,3
  8662  0E52  0008               	return
  8663                           
  8664                           ;Dimmer_B1.c: 1345: Dimmer.PIR_DimmerSignal = 1;
  8665  0E53  15AC               	bsf	_Dimmer,3
  8666                           
  8667                           ;Dimmer_B1.c: 1347: if (DimmerIntr1.Start == 0) {
  8668  0E54  1920               	btfsc	_DimmerIntr1,2
  8669  0E55  0008               	return
  8670                           
  8671                           ;Dimmer_B1.c: 1348: DimmerIntr1.Start = 1;
  8672  0E56  1520               	bsf	_DimmerIntr1,2
  8673                           
  8674                           ;Dimmer_B1.c: 1349: DimmerIntr1.GO = 1;
  8675  0E57  1420               	bsf	_DimmerIntr1,0
  8676  0E58  0008               	return
  8677  0E59                     __end_of_DimmerLights_IOC_1:	
  8678  007E                     btemp	set	126	;btemp
  8679  007E                     wtemp	set	126
  8680  007E                     wtemp0	set	126
  8681  0080                     wtemp1	set	128
  8682  0082                     wtemp2	set	130
  8683  0084                     wtemp3	set	132
  8684  0086                     wtemp4	set	134
  8685  0088                     wtemp5	set	136
  8686  007F                     wtemp6	set	127
  8687  007E                     ttemp	set	126
  8688  007E                     ttemp0	set	126
  8689  0081                     ttemp1	set	129
  8690  0084                     ttemp2	set	132
  8691  0087                     ttemp3	set	135
  8692  007F                     ttemp4	set	127
  8693  007E                     ltemp	set	126
  8694  007E                     ltemp0	set	126
  8695  0082                     ltemp1	set	130
  8696  0086                     ltemp2	set	134
  8697  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     23      78
    BANK1            80      0      50
    BANK2            16      0       0

Pointer List with Targets:

    DimmerIntr	PTR struct Dimmer_Interrupt size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    LED	PTR struct LED size(1) Largest target is 4
		 -> NULL(NULL[0]), VarErrLED(BANK0[4]), VarLED2(BANK0[4]), VarLED1(BANK0[4]), 

    DimmerLights	PTR struct DimmerLights size(1) Largest target is 8
		 -> NULL(NULL[0]), DimmerLights1(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _TMR1_ISR->_DimmerLights_TMR_1

Critical Paths under _main in BANK0

    _main->_getPIR_AD
    _getTemp_AD->_getAD
    _getPIR_AD->___awdiv
    _getCDS_AD->_getAD
    _Temp_Main->_setTemp_Main
    _setTemp_Main->_getMain_All_Error_Status
    _PIR_Main->_getMain_All_Error_Status
    _Mcu_Initialization->_WDT_Set
    _LED_Main->_setPIRLED_Main
    _setPIRLED_Main->_setLED
    _LED_Initialization->_setLED_Initialization
    _setLED_Initialization->_setLED
    _Exception_Main->_getMain_All_Error_Status
    _setLED->_LedPointSelect
    _DimmerLights_Main->_setDimmerLights_Main
    _setDimmerLights_Main->_setDimmerLights_Dimming
    _setDimmerLights_OnOff->_setCmd_Status
    _setDimmerLights_OnOff->_setDimmerIntr_ControlStatus
    _setDimmerLights_Dimming->_getDimmerIntr_DimmingValue
    _setDimmerLights_Dimming->_setDimmerIntr_Dimming_Sw
    _setDimmerLights_Dimming->_setDimmerIntr_MaxmumValue
    _DimmerLights_PIR_Control->_getDimmerLights_Status
    _DimmerLights_PIR_Control->_setDimmerLights_SwOn
    _setDimmerLights_SwOn->_DimmerLights_SelectPointer
    _setDimmerLights_SwOff->_DimmerLights_SelectPointer
    _getDimmerLights_Status->_DimmerLights_SelectPointer
    _DimmerLights_Initialization->_DimmerIntr_Initialization

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   19615
                                             18 BANK0      5     1      4
                 _CDS_Initialization
                           _CDS_Main
        _DimmerLights_Initialization
                  _DimmerLights_Main
                     _Exception_Main
                 _LED_Initialization
                           _LED_Main
                 _Mcu_Initialization
                 _PIR_Initialization
                           _PIR_Main
                _Temp_Initialization
                          _Temp_Main
                           _WDT_Main
                          _getCDS_AD
                          _getPIR_AD
                         _getTemp_AD
              _myMain_Initialization
                       _my_MainTimer
 ---------------------------------------------------------------------------------
 (1) _my_MainTimer                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _myMain_Initialization                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemp_AD                                           4     4      0     712
                                              2 BANK0      4     4      0
                              _getAD
 ---------------------------------------------------------------------------------
 (1) _getPIR_AD                                            9     8      1    2460
                                              9 BANK0      9     8      1
                            ___awdiv
                            ___lwdiv
                              _getAD
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     657
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     653
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _getCDS_AD                                            6     5      1     754
                                              2 BANK0      6     5      1
                              _getAD
 ---------------------------------------------------------------------------------
 (2) _getAD                                                2     1      1     582
                                              0 BANK0      2     1      1
                    _Timeout_Counter
                 _set_TimeoutCleared
 ---------------------------------------------------------------------------------
 (3) _set_TimeoutCleared                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Timeout_Counter                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WDT_Main                                             1     1      0       0
                                              0 BANK0      1     1      0
                       _WDT_Clearing
 ---------------------------------------------------------------------------------
 (2) _WDT_Clearing                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Temp_Main                                            0     0      0     349
                       _setTemp_Main
 ---------------------------------------------------------------------------------
 (2) _setTemp_Main                                         6     6      0     349
                                              5 BANK0      6     6      0
           _getMain_All_Error_Status
           _getMain_All_LightsStatus
 ---------------------------------------------------------------------------------
 (1) _Temp_Initialization                                  0     0      0       0
             _setTemp_Initialization
 ---------------------------------------------------------------------------------
 (2) _setTemp_Initialization                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIR_Main                                            12    12      0    3064
                                              5 BANK0     12    12      0
                      _getCDS_Status
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _getCDS_Status                                        1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PIR_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Mcu_Initialization                                   0     0      0       0
                            _ADC_Set
                           _Fosc_Set
                             _IO_Set
                           _TMR1_Set
                            _WDT_Set
 ---------------------------------------------------------------------------------
 (2) _WDT_Set                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IO_Set                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Fosc_Set                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Main                                             0     0      0    2594
                     _setPIRLED_Main
 ---------------------------------------------------------------------------------
 (2) _setPIRLED_Main                                       2     2      0    2594
                                              4 BANK0      2     2      0
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _LED_Initialization                                   0     0      0    2709
              _setLED_Initialization
 ---------------------------------------------------------------------------------
 (2) _setLED_Initialization                                1     1      0    2709
                                              4 BANK0      1     1      0
                     _LedPointSelect
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _Exception_Main                                       5     5      0    2953
                                              5 BANK0      5     5      0
             _getDimmerLights_Status
           _getMain_All_Error_Status
                             _setLED
 ---------------------------------------------------------------------------------
 (2) _setLED                                               2     1      1    2554
                                              2 BANK0      2     1      1
                     _LedPointSelect
 ---------------------------------------------------------------------------------
 (3) _LedPointSelect                                       2     2      0      93
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _getMain_All_Error_Status                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Main                                    0     0      0    4020
           _DimmerLights_PIR_Control
               _setDimmerLights_Main
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Main                                 1     1      0    2540
                                              7 BANK0      1     1      0
         _DimmerLights_SelectPointer
    _getDimmerLights_Allow_Condition
           _getMain_All_LightsStatus
            _setDimmerLights_Dimming
              _setDimmerLights_OnOff
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_OnOff                                2     1      1     873
                                              3 BANK0      2     1      1
                      _getCmd_Status
           _getMain_All_LightsStatus
                      _setCmd_Status
        _setDimmerIntr_ControlStatus
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_ControlStatus                          3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _setCmd_Status                                        3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _getMain_All_LightsStatus                             1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _getCmd_Status                                        2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_Dimming                              4     3      1    1348
                                              3 BANK0      4     3      1
         _getDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_Sw
          _setDimmerIntr_MaxmumValue
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_Dimming_Sw                             3     2      1     270
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (4) _getDimmerIntr_DimmingValue                           3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _getDimmerLights_Allow_Condition                      2     2      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DimmerLights_PIR_Control                             1     1      0    1480
                                              4 BANK0      1     1      0
             _getDimmerLights_Status
         _setDimmerIntr_DimmingValue
           _setDimmerIntr_Dimming_RF
          _setDimmerIntr_MaxmumValue
              _setDimmerLights_SwOff
               _setDimmerLights_SwOn
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOn                                 2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _setDimmerLights_SwOff                                1     1      0      62
                                              2 BANK0      1     1      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (4) _setDimmerIntr_MaxmumValue                            3     2      1     582
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_Dimming_RF                             3     2      1     478
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _setDimmerIntr_DimmingValue                           3     2      1     166
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _getDimmerLights_Status                               2     2      0      96
                                              2 BANK0      2     2      0
         _DimmerLights_SelectPointer
 ---------------------------------------------------------------------------------
 (3) _DimmerLights_SelectPointer                           2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DimmerLights_Initialization                          0     0      0       0
          _DimmerIntr_Initialization
     _setDimmerLights_Initialization
 ---------------------------------------------------------------------------------
 (2) _setDimmerLights_Initialization                       1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DimmerIntr_Initialization                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Main                                             3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CDS_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              1 COMMON     4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                 _DimmerLights_IOC_1
                 _DimmerLights_TMR_1
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_TMR_1                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DimmerLights_IOC_1                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDS_Initialization
   _CDS_Main
   _DimmerLights_Initialization
     _DimmerIntr_Initialization
     _setDimmerLights_Initialization
   _DimmerLights_Main
     _DimmerLights_PIR_Control
       _getDimmerLights_Status
         _DimmerLights_SelectPointer
       _setDimmerIntr_DimmingValue
       _setDimmerIntr_Dimming_RF
       _setDimmerIntr_MaxmumValue
       _setDimmerLights_SwOff
         _DimmerLights_SelectPointer
       _setDimmerLights_SwOn
         _DimmerLights_SelectPointer
     _setDimmerLights_Main
       _DimmerLights_SelectPointer
       _getDimmerLights_Allow_Condition
       _getMain_All_LightsStatus
       _setDimmerLights_Dimming
         _getDimmerIntr_DimmingValue
         _setDimmerIntr_Dimming_Sw
         _setDimmerIntr_MaxmumValue
       _setDimmerLights_OnOff
         _getCmd_Status
         _getMain_All_LightsStatus
         _setCmd_Status
         _setDimmerIntr_ControlStatus
   _Exception_Main
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _LED_Initialization
     _setLED_Initialization
       _LedPointSelect
       _setLED
         _LedPointSelect
   _LED_Main
     _setPIRLED_Main
       _setLED
         _LedPointSelect
   _Mcu_Initialization
     _ADC_Set
     _Fosc_Set
     _IO_Set
     _TMR1_Set
     _WDT_Set
   _PIR_Initialization
   _PIR_Main
     _getCDS_Status
     _getDimmerLights_Status
       _DimmerLights_SelectPointer
     _getMain_All_Error_Status
     _setLED
       _LedPointSelect
   _Temp_Initialization
     _setTemp_Initialization
   _Temp_Main
     _setTemp_Main
       _getMain_All_Error_Status
       _getMain_All_LightsStatus
   _WDT_Main
     _WDT_Clearing
   _getCDS_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getPIR_AD
     ___awdiv
     ___lwdiv
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _getTemp_AD
     _getAD
       _Timeout_Counter
       _set_TimeoutCleared
   _myMain_Initialization
   _my_MainTimer

 _ISR (ROOT)
   _TMR1_ISR
     _DimmerLights_IOC_1
     _DimmerLights_TMR_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      32       7       62.5%
BITBANK2            10      0       0       8        0.0%
BANK2               10      0       0       9        0.0%
DATA                 0      0      8A      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Mar 11 11:30:46 2015

                              __CFG_CP$ON 0000                              _WDT_Clearing 0002  
                   __end_of_setCmd_Status 0EF1                              ___awdiv@sign 005D  
                          setTemp_Main@AD 0061                                        fsr 0004  
                    _setDimmerLights_Main 0530                                       l123 0728  
                    _setDimmerLights_SwOn 07C8                                       l252 0E1C  
                                     l424 039B                                       l417 037C  
                                     l418 0360                                       l481 0F92  
                                     l810 0F4B                                       l482 0F9A  
                                     l806 0F4F                                       l832 0EF0  
                                     l826 06D4                                       l942 044A  
                                     l953 0446                                       l948 03F0  
                                     _GIE 005F      __size_of_DimmerLights_Initialization 0007  
                                     _RB2 0032                                       _LED 0073  
                                     _RB3 0033                                       _RB4 0034  
                                     _RB5 0035                                       _RA7 002F  
                                     _PS0 0408                                       _PS1 0409  
                                     _PS2 040A                                       _ISR 0F07  
                                     _PSA 040B                                       _WDT 0041  
                                     _Cmd 0070              getDimmerLights_Status@lights 0059  
              ??_setDimmerIntr_Dimming_RF 0058                ??_setDimmerIntr_Dimming_Sw 0058  
         setDimmerIntr_Dimming_RF@command 0057                                       fsr0 0004  
                                     indf 0000                           __end_of_ADC_Set 0DB6  
    setDimmerLights_Initialization@lights 0075              getDimmerLights_Status@status 005A  
     __end_of_setDimmerIntr_ControlStatus 0F07               _setDimmerIntr_ControlStatus 0EF1  
                                    ?_ISR 0075                     _setDimmerLights_OnOff 0749  
                                    l1020 005A                                      l1021 0079  
                                    l1026 008F                                      l1018 01FE  
                                    l1019 0089                                      l1028 00A2  
                                    l4111 0762                                      l4121 0783  
                                    l4041 0E74                                      l4043 0E79  
                                    l4107 075A                                      l4211 0524  
                                    l4037 0E6F                                      l4053 0EEB  
                                    l4207 051E                                      l4215 052A  
                                    l4081 07E7                                      l4049 0EDF  
                                    l4145 04D0                                      l4153 04D8  
                                    l4093 07C1                                      l4333 03C4  
                                    l4181 0500                                      l4253 0FB0  
                                    l4327 03AF                                      l4239 0F47  
                                    l4159 04E1                                      l4167 04E9  
                                    l4255 0FB3                                      l4281 0555  
                                    l4177 04FC                                      l4185 0504  
                                    l4361 0475                                      l4283 055C  
                                    l4443 0403                                      l4259 0FB9  
                                    l4523 05E6                                      l4515 05D3  
                                    l4507 05AF                                      l4293 0580  
                                    l4189 050C                                      l4381 04AF  
                                    l4365 047B                                      l4437 03F2  
                                    l4445 0406                                      l4509 05BD  
                                    l4295 0587                                      l4375 048D  
                                    l4519 05DE                                      l4711 0F61  
                                    l4377 0499                                      l4369 0481  
                                    l4545 0703                                      l4537 06DF  
                                    l4379 04A1                                      l4491 059C  
                                    l4539 06ED                                      l4651 0284  
                                    l4643 026E                                      l4635 0258  
                                    l4901 06C9                                      l4469 0436  
                                    l4549 070E                                      l4661 029D  
                                    l4575 0733                                      l4831 01A4  
                                    l4479 0445                                      l4647 0279  
                                    l4639 0263                                      l4817 013D  
                                    l4809 0129                                      l4497 05A7  
                                    l4691 032F                                      l4683 0303  
                                    l4667 02B9                     _setDimmerLights_SwOff 07A0  
                                    l4845 01CC                                      l4829 0195  
                                    l4781 00C5                                      l4677 02E7  
                                    l4863 01F8                                      l4951 0602  
                                    l4793 00DC                                      l4697 033D  
                                    l4797 00E8                                      l4957 061E  
                                    l4895 06BB                                      l4799 00E9  
                                    l4897 06C5                                      l4889 06AC  
                   _myMain_Initialization 07FF                              __CFG_WDTE$ON 0000  
                                    u5020 0496                                      u5040 04AC  
                                    u6005 01E8                                      _PEIE 005E  
                                    u5245 05B2                                      u5325 06E2  
                                    u4705 07F9                                      u5265 05BE  
                                    u5345 06EE                                      u5275 05CA  
                                    u5355 06FA                                      u5285 05D4  
                                    u5365 0704                                      u5455 0743  
                                    u5905 0107                                      u5915 011F  
                                    u5935 0156                                      u5945 0187  
                                    u5965 01B4                                      __CDS 003A  
                                    _WPUB 0095                                      __PIR 00A0  
                                    _Temp 0044                                      _main 05ED  
                                    btemp 007E                           __end_of_WDT_Set 0E3A  
                                    ltemp 007E                                      start 0011  
                                    ttemp 007E                                      wtemp 007E  
                        __end_of_CDS_Main 0749              __size_of_Temp_Initialization 0003  
                                   ??_ISR 0076   __end_of_getDimmerLights_Allow_Condition 0D96  
__size_of_getDimmerLights_Allow_Condition 0005         ??_getDimmerLights_Allow_Condition 0057  
        ?_getDimmerLights_Allow_Condition 0075           _getDimmerLights_Allow_Condition 0D91  
                  _getDimmerLights_Status 0E59                             __CFG_PLLEN$ON 0000  
                        __end_of_LED_Main 0D87                                _DimmerIntr 0071  
                   ?_setDimmerLights_Main 0075                          ??_setPIRLED_Main 005B  
                   ?_setDimmerLights_SwOn 0075                                     ?_main 0069  
                         __end_of___awdiv 05ED                                     _ADRES 001E  
                         ___awdiv@divisor 0057                                     _T1CON 0010  
                         __end_of___lwdiv 0715                                     i1l401 0688  
                                   i1l408 0E51                                     i1l390 0676  
                                   i1l384 065A                                     i1l387 0689  
                                   i1l664 0F12                           ___awdiv@counter 005C  
                                   _TMR1H 000F                                     _TMR1L 000E  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                 __end_of_Timeout_Counter 07FF                                     _Light 0043  
                        __end_of_PIR_Main 0211                          __end_of_TMR1_ISR 0F87  
                        __end_of_TMR1_Set 0E2C                                     _getAD 0FA3  
                        __end_of_WDT_Main 0E8C                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080            __size_of_setLED_Initialization 0012  
           __end_of_setLED_Initialization 0E9E                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                       getPIR_AD@channel1 0065                         getPIR_AD@channel2 0060  
                       setTemp_Main@error 005D                           __initialization 0013  
                            __end_of_main 0640                          __end_of_Fosc_Set 0D9B  
          getMain_All_LightsStatus@status 0057              setDimmerLights_OnOff@command 005A  
                          _Exception_Main 0691                                 ??_ADC_Set 0057  
                                  ??_main 006D                     PIR_Main@Enable_Switch 0063  
             ?_setDimmerIntr_DimmingValue 0057              ??_DimmerLights_SelectPointer 0057  
      setDimmerIntr_ControlStatus@command 0057                   _setDimmerLights_Dimming 0776  
                             _DimmerIntr1 0020                  _getMain_All_LightsStatus 0DF6  
                  ?_setDimmerLights_OnOff 005A                                    ?_getAD 0057  
                  ?_setDimmerLights_SwOff 0075                    ?_myMain_Initialization 0075  
                                  _ADCON0 001F                                    _ADCON1 009F  
                        ___awdiv@dividend 0059                                 ??_WDT_Set 0057  
                                  _ANSELA 0185                                    _ANSELB 0186  
                _getMain_All_Error_Status 0F37                                    i1l3223 064E  
                                  i1l3253 067C                                    i1l3255 067F  
                                  i1l3247 0670                                    i1l3257 0683  
                                  i1l3537 0F81                                    _FVRCON 009D  
    getDimmerLights_Allow_Condition@allow 0057                                    _PIRLED 0036  
                                  _OSCCON 0090                                    _TMR1IE 0460  
                                  _TMR1IF 0060                                    _IO_Set 0F1F  
             ??_setDimmerIntr_MaxmumValue 0058                                    _Dimmer 002C  
                   __end_of_getCmd_Status 0E7B                __end_of_Mcu_Initialization 0E49  
                                  _Timer1 003E               __size_of_CDS_Initialization 0004  
                  __end_of_Exception_Main 06D5                      Exception_Main@lights 005D  
                               ??___awdiv 005B                                 ??___lwdiv 005B  
                  ??_setDimmerLights_Main 005E                      Exception_Main@status 005F  
                  ??_setDimmerLights_SwOn 0059                                    _setLED 04BF  
                                  _myMain 0031         __size_of_DimmerLights_PIR_Control 0094  
                        ___awdiv@quotient 005E                        __size_of_Temp_Main 0003  
               ?_DimmerLights_PIR_Control 0075          ??_setDimmerLights_Initialization 0057  
         ?_setDimmerLights_Initialization 0075          __end_of_setDimmerIntr_Dimming_RF 0EDB  
        __end_of_setDimmerIntr_Dimming_Sw 0EC5                                    saved_w 007E  
                        ?_Timeout_Counter 0075               __size_of_DimmerLights_IOC_1 0010  
             __size_of_DimmerLights_TMR_1 0051                   __size_of_LedPointSelect 001C  
                               ?_CDS_Main 0075           setDimmerIntr_Dimming_Sw@command 0057  
                      setTemp_Main@TempGO 005E               __size_of_PIR_Initialization 000D  
                 __end_of__initialization 0024           getDimmerIntr_DimmingValue@value 0059  
         setDimmerIntr_DimmingValue@value 0057                                 ?_LED_Main 0075  
                           ?_my_MainTimer 0075              ?_DimmerLights_Initialization 0075  
              ?_DimmerIntr_Initialization 0075                            __pcstackCOMMON 0075  
                      __size_of_getCDS_AD 0022                           ?_Exception_Main 0075  
                           __end_of_getAD 0FBF                                 ?_PIR_Main 0075  
                               ?_TMR1_ISR 0075                                 ?_TMR1_Set 0075  
                      _LED_Initialization 0DEA                        __size_of_getPIR_AD 012E  
               ??_setDimmerLights_Dimming 005B                                 ?_WDT_Main 0075  
       setDimmerIntr_ControlStatus@lights 0059                 _setDimmerIntr_MaxmumValue 0DDE  
              __end_of_set_TimeoutCleared 0DA1           setDimmerIntr_MaxmumValue@lights 0059  
                     ?_LED_Initialization 0075                                   ??_getAD 0058  
                     _Temp_Initialization 0D87                                ??_CDS_Main 0057  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                               ?_Fosc_Set 0075                         __end_of_Temp_Main 0D8D  
                                 ?_IO_Set 0075                           __CFG_VCAPEN$DIS 0000  
                          ??_my_MainTimer 0057                                ??_LED_Main 005D  
                    ??_LED_Initialization 005C                              _DimmerLights 0072  
                       LedPointSelect@led 0058                   ?_getDimmerLights_Status 0075  
                              __pmaintext 05ED                      ?_Temp_Initialization 0075  
       __end_of_DimmerIntr_Initialization 0EB1                      PIR_Main@LightsStatus 0067  
           ??_DimmerLights_Initialization 0058                                ??_PIR_Main 005C  
                              ??_TMR1_ISR 0076                             ?_setTemp_Main 0075  
                              ??_TMR1_Set 0057                                __pintentry 0004  
                                 ?_setLED 0059                                   _ADC_Set 0DAF  
                              _getTemp_AD 0FBF        __end_of_DimmerLights_SelectPointer 0DD2  
              _DimmerLights_SelectPointer 0DC6                                ??_WDT_Main 0057  
                  __size_of_getCDS_Status 0008             setDimmerLights_Dimming@lights 005D  
           setDimmerLights_Dimming@status 005A     getDimmerLights_Allow_Condition@lights 0075  
                       __end_of_getCDS_AD 1000                                   _WDT_Set 0E2C  
                           getPIR_AD@VRAD 0067                    __size_of_setCmd_Status 0016  
                              ??_Fosc_Set 0057                         __end_of_getPIR_AD 033F  
         __end_of_setDimmerLights_Dimming 07A0                       getCmd_Status@number 0057  
                         __size_of_IO_Set 0018                       setCmd_Status@number 0059  
       __size_of_setDimmerIntr_Dimming_RF 0016         __size_of_setDimmerIntr_Dimming_Sw 0014  
                              getCDS_AD@i 005C                                getCDS_AD@j 005D  
               ?_setDimmerIntr_Dimming_RF 0057                 ?_setDimmerIntr_Dimming_Sw 0057  
                                 _VarLED1 004F                                   _VarLED2 0053  
          __end_of_getDimmerLights_Status 0E6A                     ??_Temp_Initialization 0057  
                          ??_setTemp_Main 005C                                   ___awdiv 0590  
                                 ___lwdiv 06D5                ??_getMain_All_LightsStatus 0057  
                             PIR_Main@cds 0062                           __size_of_setLED 0071  
                                 __ptext0 0000                                   __ptext1 0F51  
                                 __ptext2 07FF                                   __ptext3 0FBF  
                                 __ptext4 0211                                   __ptext5 06D5  
                                 __ptext6 0590                                   __ptext7 0FDE  
                                 __ptext8 0FA3                                   __ptext9 0D9B  
                              getPIR_AD@i 0068                                getPIR_AD@j 0064  
                            __size_of_ISR 0018                ??_getMain_All_Error_Status 0057  
                 ??_setDimmerLights_OnOff 005B                   ??_setDimmerLights_SwOff 0059  
                 ??_myMain_Initialization 0057                         _DimmerLights_Main 0DA8  
                ??_setTemp_Initialization 0057                        ?_DimmerLights_Main 0075  
                          _LedPointSelect 0F87                           getTemp_AD@ADRES 005C  
                                 clrloop0 0DBF                      end_of_initialization 0024  
                     ??_DimmerLights_Main 005F                    setDimmerLights_SwOn@sw 0059  
                           _getCDS_Status 0DB6          __end_of_DimmerLights_PIR_Control 03D3  
                   _setLED_Initialization 0E8C                             _setCmd_Status 0EDB  
                             ?_getTemp_AD 0075                  setLED_Initialization@led 005B  
                 setTemp_Main@DangerValue 0060                 __end_of_DimmerLights_Main 0DAF  
                      _Mcu_Initialization 0E3A                      __end_of_my_MainTimer 0F6B  
                  __end_of_LedPointSelect 0FA3                       setPIRLED_Main@count 005C  
        setDimmerIntr_DimmingValue@lights 0059          getDimmerIntr_DimmingValue@lights 0058  
                     ?_Mcu_Initialization 0075                   __size_of_setPIRLED_Main 0071  
      __size_of_setDimmerIntr_MaxmumValue 000C            setDimmerIntr_Dimming_RF@lights 0059  
         getMain_All_Error_Status@command 0058                         __size_of_CDS_Main 0034  
                          ?_getCDS_Status 0075                          ??_Exception_Main 005C  
                          __end_of_IO_Set 0F37                __end_of_CDS_Initialization 0D91  
                       __size_of_LED_Main 0003               ??_DimmerIntr_Initialization 0057  
                    ??_Mcu_Initialization 0058                             ?_WDT_Clearing 0075  
                          ?_setCmd_Status 0057       __size_of_getDimmerIntr_DimmingValue 000E  
                       __size_of_PIR_Main 01EA                         __size_of_TMR1_ISR 001C  
        DimmerLights_SelectPointer@lights 0058                         __size_of_TMR1_Set 000E  
           __size_of_setDimmerLights_Main 0060                            __end_of_setLED 0530  
           __size_of_setDimmerLights_SwOn 0023                __end_of_DimmerLights_IOC_1 0E59  
                       __size_of_WDT_Main 0011                __end_of_DimmerLights_TMR_1 0691  
                     start_initialization 0013                           ?_LedPointSelect 0075  
                             __end_of_ISR 0F1F                    __size_of_getCmd_Status 0011  
              __end_of_PIR_Initialization 0E10              ?_setDimmerIntr_ControlStatus 0057  
         __size_of_setTemp_Initialization 0001                       getCDS_Status@status 0057  
                    __end_of_setTemp_Main 044E                        _set_TimeoutCleared 0D9B  
       __end_of_setDimmerIntr_MaxmumValue 0DEA                                  ??_IO_Set 0057  
                __size_of_Timeout_Counter 0014                                 _VarErrLED 004B  
                     __size_of_getTemp_AD 001F                    ?_setLED_Initialization 0075  
                       __size_of_Fosc_Set 0005                                 _Temp_Main 0D8A  
                     ?_set_TimeoutCleared 0075                            ??_WDT_Clearing 0057  
                     Exception_Main@count 005E                       Exception_Main@error 0060  
                _DimmerLights_PIR_Control 033F          __end_of_getMain_All_LightsStatus 0E03  
                                ??_setLED 005A                                  ?_ADC_Set 0075  
             ?_DimmerLights_SelectPointer 0075          __end_of_getMain_All_Error_Status 0F51  
              __size_of_DimmerLights_Main 0007            setDimmerIntr_Dimming_Sw@lights 0059  
                             __pbssCOMMON 0070                                 ___latbits 0001  
                           __pcstackBANK0 0057                      ??_set_TimeoutCleared 0057  
               _DimmerIntr_Initialization 0E9E                                  ?_WDT_Set 0075  
                         ??_getCDS_Status 0057             ??_setDimmerIntr_ControlStatus 0058  
          setDimmerIntr_MaxmumValue@value 0057                             _DimmerLights1 00CA  
                           PIR_Main@error 0061                                 _getCDS_AD 0FDE  
                               _getPIR_AD 0211               __size_of_LED_Initialization 000C  
                              ?_Temp_Main 0075                          ___lwdiv@dividend 0059  
                           _getCmd_Status 0E6A                           ??_setCmd_Status 0058  
                  _setTemp_Initialization 0D83                             _PIR_Main$3333 0064  
                ?_setDimmerLights_Dimming 005A                                  ?___awdiv 0057  
                   __size_of_my_MainTimer 001A                                  ?___lwdiv 0057  
      __end_of_getDimmerIntr_DimmingValue 0E1E              ??_setDimmerIntr_DimmingValue 0058  
              _getDimmerIntr_DimmingValue 0E10            __size_of_setDimmerLights_OnOff 002D  
           __end_of_setDimmerLights_OnOff 0776            __size_of_setDimmerLights_SwOff 0028  
          __size_of_myMain_Initialization 0001             __end_of_setDimmerLights_SwOff 07C8  
           __end_of_myMain_Initialization 0800                            __size_of_getAD 001C  
                        ___lwdiv@quotient 005D                            _setPIRLED_Main 044E  
                                _CDS_Main 0715               __end_of_Temp_Initialization 0D8A  
                       interrupt_function 0004                                ?_getCDS_AD 0059  
                                _LED_Main 0D84                                 clear_ram0 0DBE  
                            _my_MainTimer 0F51                                ?_getPIR_AD 0060  
     __end_of_DimmerLights_Initialization 0DA8               _DimmerLights_Initialization 0DA1  
                          ?_getCmd_Status 0075                                  _GO_nDONE 00F9  
                       ??_Timeout_Counter 0057      __size_of_setDimmerIntr_ControlStatus 0016  
                    PIR_Main@TriggerValue 0066       __size_of_setDimmerIntr_DimmingValue 000C  
                                _PIR_Main 0027                                  _TMR1_ISR 0F6B  
                                _TMR1_Set 0E1E                              ??_getTemp_AD 0059  
                                _WDT_Main 0E7B                          __size_of_ADC_Set 0007  
                          getPIR_AD@VRAD1 0066                     __size_of_setTemp_Main 007B  
                  __end_of_setPIRLED_Main 04BF            getMain_All_Error_Status@status 005B  
                             getAD@adcon0 0058                               getAD@adcon1 0057  
                    __end_of_WDT_Clearing 0004         __size_of_getMain_All_LightsStatus 000D  
               ?_getMain_All_LightsStatus 0075                  _setDimmerIntr_Dimming_RF 0EC5  
             setDimmerLights_OnOff@lights 005B                  _setDimmerIntr_Dimming_Sw 0EB1  
                                _Fosc_Set 0D96                          __size_of_WDT_Set 000E  
       __size_of_getMain_All_Error_Status 001A                 ?_getMain_All_Error_Status 0075  
                      __end_of_getTemp_AD 0FDE       __size_of_DimmerLights_SelectPointer 000C  
                                _SwDetect 0074                               ??_Temp_Main 0062  
                        getCmd_Status@cmd 0058                          setCmd_Status@cmd 0057  
           _getMain_All_Error_Status$2565 0059                                 setLED@led 005A  
                            _setTemp_Main 03D3                          __size_of___awdiv 005D  
                        __size_of___lwdiv 0040                  setDimmerLights_SwOn@idle 005A  
                        ??_LedPointSelect 0057                        _CDS_Initialization 0D8D  
                       getTemp_AD@channel 005B                           ?_setPIRLED_Main 0075  
                         ___lwdiv@divisor 0057                       ?_CDS_Initialization 0075  
                         ___lwdiv@counter 005C                                  __ptext10 07EB  
                                __ptext11 0E7B                                  __ptext20 0E3A  
                                __ptext12 0002                                  __ptext21 0E2C  
                                __ptext13 0D8A                                  __ptext30 0691  
                                __ptext22 0E1E                                  __ptext14 03D3  
                                __ptext31 04BF                                  __ptext23 0F1F  
                                __ptext15 0D87                                  __ptext40 0E6A  
                                __ptext32 0F87                                  __ptext24 0D96  
                                __ptext16 0D83                                  __ptext41 0776  
                                __ptext33 0F37                                  __ptext25 0DAF  
                                __ptext17 0027                                  __ptext50 0DD2  
                                __ptext42 0EB1                                  __ptext34 0DA8  
                                __ptext26 0D84                                  __ptext18 0DB6  
                                __ptext51 0E59                                  __ptext43 0E10  
                                __ptext35 0530                                  __ptext27 044E  
                                __ptext19 0E03                                  __ptext60 0640  
                                __ptext52 0DC6                                  __ptext44 0D91  
                                __ptext36 0749                                  __ptext28 0DEA  
                                __ptext61 0E49                                  __ptext53 0DA1  
                                __ptext45 033F                                  __ptext37 0EF1  
                                __ptext29 0E8C                                  __ptext54 0D82  
                                __ptext46 07C8                                  __ptext38 0EDB  
                                __ptext55 0E9E                                  __ptext47 07A0  
                                __ptext39 0DF6                                  __ptext56 0715  
                                __ptext48 0DDE                                  __ptext57 0D8D  
                                __ptext49 0EC5                                  __ptext58 0F07  
                                __ptext59 0F6B                   ??_setLED_Initialization 005B  
                ??_getDimmerLights_Status 0059              __end_of_setDimmerLights_Main 0590  
                      _DimmerLights_IOC_1 0E49              __end_of_setDimmerLights_SwOn 07EB  
              ??_DimmerLights_PIR_Control 005B                               ??_getCDS_AD 005A  
                           setLED@command 0059                             __size_of_main 0053  
      __size_of_DimmerIntr_Initialization 0013                           ??_getCmd_Status 0057  
                      _DimmerLights_TMR_1 0640                setDimmerLights_Main@lights 005E  
                             ??_getPIR_AD 0061                        _PIR_Initialization 0E03  
                    ??_CDS_Initialization 0057                       ?_DimmerLights_IOC_1 0075  
                     ?_DimmerLights_TMR_1 0075               __size_of_Mcu_Initialization 000F  
                     ?_PIR_Initialization 0075                                  main@argc 0069  
                                main@argv 006B              setDimmerLights_Dimming@value 005C  
      __end_of_setDimmerIntr_DimmingValue 0DDE                _setDimmerIntr_DimmingValue 0DD2  
                    ??_DimmerLights_IOC_1 0075                      ??_DimmerLights_TMR_1 0075  
            ??_getDimmerIntr_DimmingValue 0057                   setDimmerLights_SwOff@sw 0059  
                    ??_PIR_Initialization 0057                                  intlevel1 0000  
                   setTemp_Main@SafeValue 005F    __end_of_setDimmerLights_Initialization 0D83  
 __size_of_setDimmerLights_Initialization 0001            _setDimmerLights_Initialization 0D82  
              ?_setDimmerIntr_MaxmumValue 0057                   ?_setTemp_Initialization 0075  
                 __size_of_Exception_Main 0044                     __size_of_WDT_Clearing 0002  
             ?_getDimmerIntr_DimmingValue 0075          __size_of_setDimmerLights_Dimming 002A  
             __size_of_set_TimeoutCleared 0006                        __CFG_FOSC$INTOSCIO 0000  
                         _Timeout_Counter 07EB           __size_of_getDimmerLights_Status 0011  
              __end_of_LED_Initialization 0DF6                     __end_of_getCDS_Status 0DBE  
          __end_of_setTemp_Initialization 0D84                         getCDS_AD@channel1 005E  
                       getCDS_AD@channel2 0059  
